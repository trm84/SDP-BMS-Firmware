

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 12 12:36:35 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	cinit,global,class=CODE,merge=1,delta=2
    35                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    36                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    38                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    39                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    40                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    44                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    45                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    46                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    47                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    49                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    50                           	psect	text1,local,class=CODE,merge=1,delta=2
    51                           	psect	text2,local,class=CODE,merge=1,delta=2
    52                           	psect	text3,local,class=CODE,merge=1,delta=2
    53                           	psect	text4,local,class=CODE,merge=1,delta=2
    54                           	psect	text5,local,class=CODE,merge=1,delta=2
    55                           	psect	text6,local,class=CODE,merge=1,delta=2
    56                           	psect	text7,local,class=CODE,merge=1,delta=2
    57                           	psect	text8,local,class=CODE,merge=1,delta=2
    58                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text10,local,class=CODE,merge=1,delta=2
    60                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text19,local,class=CODE,merge=1,delta=2
    69                           	psect	text20,local,class=CODE,merge=1,delta=2
    70                           	psect	text21,local,class=CODE,merge=1,delta=2
    71                           	psect	text22,local,class=CODE,merge=1,delta=2
    72                           	psect	text23,local,class=CODE,merge=1,delta=2
    73                           	psect	text24,local,class=CODE,merge=1,delta=2
    74                           	psect	text25,local,class=CODE,merge=1,delta=2
    75                           	psect	text26,local,class=CODE,merge=1,delta=2
    76                           	psect	text27,local,class=CODE,merge=1,delta=2
    77                           	psect	text28,local,class=CODE,merge=1,delta=2
    78                           	psect	text29,local,class=CODE,merge=1,delta=2
    79                           	psect	text30,local,class=CODE,merge=1,delta=2
    80                           	psect	text31,local,class=CODE,merge=1,delta=2
    81                           	psect	text32,local,class=CODE,merge=1,delta=2
    82                           	psect	text33,local,class=CODE,merge=1,delta=2
    83                           	psect	text34,local,class=CODE,merge=1,delta=2
    84                           	psect	text35,local,class=CODE,merge=1,delta=2
    85                           	psect	text36,local,class=CODE,merge=1,delta=2
    86                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text38,local,class=CODE,merge=1,delta=2
    88                           	psect	text39,local,class=CODE,merge=1,delta=2
    89                           	psect	text40,local,class=CODE,merge=1,delta=2
    90                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text42,local,class=CODE,merge=1,delta=2
    92                           	psect	text43,local,class=CODE,merge=1,delta=2
    93                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    95                           	psect	text46,local,class=CODE,merge=1,delta=2
    96                           	psect	text47,local,class=CODE,merge=1,delta=2
    97                           	psect	text48,local,class=CODE,merge=1,delta=2
    98                           	psect	swtext1,local,class=CONST,delta=2
    99                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   100                           	psect	text50,local,class=CODE,merge=1,delta=2
   101                           	psect	text51,local,class=CODE,merge=1,delta=2
   102                           	psect	text52,local,class=CODE,merge=1,delta=2
   103                           	psect	text53,local,class=CODE,merge=1,delta=2
   104                           	psect	text54,local,class=CODE,merge=1,delta=2
   105                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text56,local,class=CODE,merge=1,delta=2
   107                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	intentry,global,class=CODE,delta=2
   111                           	psect	text61,local,class=CODE,merge=1,delta=2
   112                           	dabs	1,0x7E,2
   113  0000                     
   114                           ; Version 1.45
   115                           ; Generated 16/11/2017 GMT
   116                           ; 
   117                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   118                           ; All rights reserved.
   119                           ; 
   120                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   121                           ; 
   122                           ; Redistribution and use in source and binary forms, with or without modification, are
   123                           ; permitted provided that the following conditions are met:
   124                           ; 
   125                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   126                           ;        conditions and the following disclaimer.
   127                           ; 
   128                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   129                           ;        of conditions and the following disclaimer in the documentation and/or other
   130                           ;        materials provided with the distribution.
   131                           ; 
   132                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   133                           ;        software without specific prior written permission.
   134                           ; 
   135                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   136                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   137                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   138                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   139                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   140                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   141                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   142                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   143                           ; 
   144                           ; 
   145                           ; Code-generator required, PIC16F1789 Definitions
   146                           ; 
   147                           ; SFR Addresses
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000F                     	;# 
   164  0010                     	;# 
   165  0011                     	;# 
   166  0012                     	;# 
   167  0013                     	;# 
   168  0014                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0016                     	;# 
   172  0017                     	;# 
   173  0018                     	;# 
   174  0019                     	;# 
   175  001A                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  010C                     	;# 
   200  010D                     	;# 
   201  010E                     	;# 
   202  010F                     	;# 
   203  0110                     	;# 
   204  0111                     	;# 
   205  0112                     	;# 
   206  0113                     	;# 
   207  0114                     	;# 
   208  0115                     	;# 
   209  0116                     	;# 
   210  0117                     	;# 
   211  0118                     	;# 
   212  0119                     	;# 
   213  011A                     	;# 
   214  011B                     	;# 
   215  011C                     	;# 
   216  011D                     	;# 
   217  011D                     	;# 
   218  011D                     	;# 
   219  011E                     	;# 
   220  011F                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  018E                     	;# 
   224  018F                     	;# 
   225  0190                     	;# 
   226  0191                     	;# 
   227  0191                     	;# 
   228  0192                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0193                     	;# 
   232  0194                     	;# 
   233  0195                     	;# 
   234  0196                     	;# 
   235  0197                     	;# 
   236  0199                     	;# 
   237  0199                     	;# 
   238  0199                     	;# 
   239  019A                     	;# 
   240  019A                     	;# 
   241  019A                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019B                     	;# 
   246  019B                     	;# 
   247  019C                     	;# 
   248  019C                     	;# 
   249  019C                     	;# 
   250  019D                     	;# 
   251  019D                     	;# 
   252  019D                     	;# 
   253  019E                     	;# 
   254  019E                     	;# 
   255  019E                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  019F                     	;# 
   260  019F                     	;# 
   261  020C                     	;# 
   262  020D                     	;# 
   263  020E                     	;# 
   264  020F                     	;# 
   265  0210                     	;# 
   266  0211                     	;# 
   267  0211                     	;# 
   268  0212                     	;# 
   269  0212                     	;# 
   270  0213                     	;# 
   271  0213                     	;# 
   272  0214                     	;# 
   273  0214                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0215                     	;# 
   277  0215                     	;# 
   278  0216                     	;# 
   279  0216                     	;# 
   280  0217                     	;# 
   281  0217                     	;# 
   282  028C                     	;# 
   283  028D                     	;# 
   284  028E                     	;# 
   285  028F                     	;# 
   286  0290                     	;# 
   287  0291                     	;# 
   288  0291                     	;# 
   289  0292                     	;# 
   290  0293                     	;# 
   291  0298                     	;# 
   292  0298                     	;# 
   293  0299                     	;# 
   294  029A                     	;# 
   295  030C                     	;# 
   296  030D                     	;# 
   297  030E                     	;# 
   298  030F                     	;# 
   299  0310                     	;# 
   300  0311                     	;# 
   301  0311                     	;# 
   302  0312                     	;# 
   303  0313                     	;# 
   304  038C                     	;# 
   305  038D                     	;# 
   306  038E                     	;# 
   307  038F                     	;# 
   308  0390                     	;# 
   309  0391                     	;# 
   310  0392                     	;# 
   311  0393                     	;# 
   312  0394                     	;# 
   313  0395                     	;# 
   314  0396                     	;# 
   315  0397                     	;# 
   316  0398                     	;# 
   317  0399                     	;# 
   318  039D                     	;# 
   319  039E                     	;# 
   320  039F                     	;# 
   321  0511                     	;# 
   322  0513                     	;# 
   323  0515                     	;# 
   324  051A                     	;# 
   325  0591                     	;# 
   326  0592                     	;# 
   327  0592                     	;# 
   328  0593                     	;# 
   329  0594                     	;# 
   330  0594                     	;# 
   331  0595                     	;# 
   332  0596                     	;# 
   333  0596                     	;# 
   334  0E91                     	;# 
   335  0E92                     	;# 
   336  0E93                     	;# 
   337  0E94                     	;# 
   338  0E95                     	;# 
   339  0E96                     	;# 
   340  0E97                     	;# 
   341  0E98                     	;# 
   342  0E99                     	;# 
   343  0E9A                     	;# 
   344  0E9B                     	;# 
   345  0E9C                     	;# 
   346  0E9D                     	;# 
   347  0E9E                     	;# 
   348  0E9F                     	;# 
   349  0EA0                     	;# 
   350  0EA1                     	;# 
   351  0EA1                     	;# 
   352  0EA2                     	;# 
   353  0EA3                     	;# 
   354  0EA3                     	;# 
   355  0EA4                     	;# 
   356  0EA5                     	;# 
   357  0EA5                     	;# 
   358  0EA6                     	;# 
   359  0EA7                     	;# 
   360  0EA7                     	;# 
   361  0EA8                     	;# 
   362  0EA9                     	;# 
   363  0EAA                     	;# 
   364  0EAB                     	;# 
   365  0EAC                     	;# 
   366  0EAD                     	;# 
   367  0EAE                     	;# 
   368  0EAF                     	;# 
   369  0EB1                     	;# 
   370  0EB2                     	;# 
   371  0EB3                     	;# 
   372  0EB4                     	;# 
   373  0EB5                     	;# 
   374  0EB6                     	;# 
   375  0EB7                     	;# 
   376  0EB8                     	;# 
   377  0EB9                     	;# 
   378  0EBA                     	;# 
   379  0EBB                     	;# 
   380  0EBC                     	;# 
   381  0EBD                     	;# 
   382  0EBE                     	;# 
   383  0EBF                     	;# 
   384  0EC0                     	;# 
   385  0EC1                     	;# 
   386  0EC1                     	;# 
   387  0EC2                     	;# 
   388  0EC3                     	;# 
   389  0EC3                     	;# 
   390  0EC4                     	;# 
   391  0EC5                     	;# 
   392  0EC5                     	;# 
   393  0EC6                     	;# 
   394  0EC7                     	;# 
   395  0EC7                     	;# 
   396  0EC8                     	;# 
   397  0EC9                     	;# 
   398  0ECA                     	;# 
   399  0ECB                     	;# 
   400  0ECC                     	;# 
   401  0ECD                     	;# 
   402  0ECE                     	;# 
   403  0ECF                     	;# 
   404  0ED1                     	;# 
   405  0ED2                     	;# 
   406  0ED3                     	;# 
   407  0ED4                     	;# 
   408  0ED5                     	;# 
   409  0ED6                     	;# 
   410  0ED7                     	;# 
   411  0ED8                     	;# 
   412  0ED9                     	;# 
   413  0EDA                     	;# 
   414  0EDB                     	;# 
   415  0EDC                     	;# 
   416  0EDD                     	;# 
   417  0EDE                     	;# 
   418  0EDF                     	;# 
   419  0EE0                     	;# 
   420  0EE1                     	;# 
   421  0EE1                     	;# 
   422  0EE2                     	;# 
   423  0EE3                     	;# 
   424  0EE3                     	;# 
   425  0EE4                     	;# 
   426  0EE5                     	;# 
   427  0EE5                     	;# 
   428  0EE6                     	;# 
   429  0EE7                     	;# 
   430  0EE7                     	;# 
   431  0EE8                     	;# 
   432  0EE9                     	;# 
   433  0EEA                     	;# 
   434  0EEB                     	;# 
   435  0EEC                     	;# 
   436  0EED                     	;# 
   437  0EEE                     	;# 
   438  0EEF                     	;# 
   439  0F11                     	;# 
   440  0F12                     	;# 
   441  0F13                     	;# 
   442  0F14                     	;# 
   443  0F15                     	;# 
   444  0F16                     	;# 
   445  0F17                     	;# 
   446  0F18                     	;# 
   447  0F19                     	;# 
   448  0F1A                     	;# 
   449  0F1B                     	;# 
   450  0F1C                     	;# 
   451  0F1D                     	;# 
   452  0F1E                     	;# 
   453  0F1F                     	;# 
   454  0F20                     	;# 
   455  0F21                     	;# 
   456  0F21                     	;# 
   457  0F22                     	;# 
   458  0F23                     	;# 
   459  0F23                     	;# 
   460  0F24                     	;# 
   461  0F25                     	;# 
   462  0F25                     	;# 
   463  0F26                     	;# 
   464  0F27                     	;# 
   465  0F27                     	;# 
   466  0F28                     	;# 
   467  0F29                     	;# 
   468  0F2A                     	;# 
   469  0F2B                     	;# 
   470  0F2C                     	;# 
   471  0F2D                     	;# 
   472  0F2E                     	;# 
   473  0F2F                     	;# 
   474  0FE4                     	;# 
   475  0FE5                     	;# 
   476  0FE6                     	;# 
   477  0FE7                     	;# 
   478  0FE8                     	;# 
   479  0FE9                     	;# 
   480  0FEA                     	;# 
   481  0FEB                     	;# 
   482  0FED                     	;# 
   483  0FEE                     	;# 
   484  0FEF                     	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0008                     	;# 
   494  0009                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  000F                     	;# 
   501  0010                     	;# 
   502  0011                     	;# 
   503  0012                     	;# 
   504  0013                     	;# 
   505  0014                     	;# 
   506  0015                     	;# 
   507  0016                     	;# 
   508  0016                     	;# 
   509  0017                     	;# 
   510  0018                     	;# 
   511  0019                     	;# 
   512  001A                     	;# 
   513  001B                     	;# 
   514  001C                     	;# 
   515  008C                     	;# 
   516  008D                     	;# 
   517  008E                     	;# 
   518  008F                     	;# 
   519  0090                     	;# 
   520  0091                     	;# 
   521  0092                     	;# 
   522  0093                     	;# 
   523  0094                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009A                     	;# 
   530  009B                     	;# 
   531  009B                     	;# 
   532  009C                     	;# 
   533  009D                     	;# 
   534  009E                     	;# 
   535  009F                     	;# 
   536  010C                     	;# 
   537  010D                     	;# 
   538  010E                     	;# 
   539  010F                     	;# 
   540  0110                     	;# 
   541  0111                     	;# 
   542  0112                     	;# 
   543  0113                     	;# 
   544  0114                     	;# 
   545  0115                     	;# 
   546  0116                     	;# 
   547  0117                     	;# 
   548  0118                     	;# 
   549  0119                     	;# 
   550  011A                     	;# 
   551  011B                     	;# 
   552  011C                     	;# 
   553  011D                     	;# 
   554  011D                     	;# 
   555  011D                     	;# 
   556  011E                     	;# 
   557  011F                     	;# 
   558  018C                     	;# 
   559  018D                     	;# 
   560  018E                     	;# 
   561  018F                     	;# 
   562  0190                     	;# 
   563  0191                     	;# 
   564  0191                     	;# 
   565  0192                     	;# 
   566  0193                     	;# 
   567  0193                     	;# 
   568  0193                     	;# 
   569  0194                     	;# 
   570  0195                     	;# 
   571  0196                     	;# 
   572  0197                     	;# 
   573  0199                     	;# 
   574  0199                     	;# 
   575  0199                     	;# 
   576  019A                     	;# 
   577  019A                     	;# 
   578  019A                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019C                     	;# 
   585  019C                     	;# 
   586  019C                     	;# 
   587  019D                     	;# 
   588  019D                     	;# 
   589  019D                     	;# 
   590  019E                     	;# 
   591  019E                     	;# 
   592  019E                     	;# 
   593  019F                     	;# 
   594  019F                     	;# 
   595  019F                     	;# 
   596  019F                     	;# 
   597  019F                     	;# 
   598  020C                     	;# 
   599  020D                     	;# 
   600  020E                     	;# 
   601  020F                     	;# 
   602  0210                     	;# 
   603  0211                     	;# 
   604  0211                     	;# 
   605  0212                     	;# 
   606  0212                     	;# 
   607  0213                     	;# 
   608  0213                     	;# 
   609  0214                     	;# 
   610  0214                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0215                     	;# 
   614  0215                     	;# 
   615  0216                     	;# 
   616  0216                     	;# 
   617  0217                     	;# 
   618  0217                     	;# 
   619  028C                     	;# 
   620  028D                     	;# 
   621  028E                     	;# 
   622  028F                     	;# 
   623  0290                     	;# 
   624  0291                     	;# 
   625  0291                     	;# 
   626  0292                     	;# 
   627  0293                     	;# 
   628  0298                     	;# 
   629  0298                     	;# 
   630  0299                     	;# 
   631  029A                     	;# 
   632  030C                     	;# 
   633  030D                     	;# 
   634  030E                     	;# 
   635  030F                     	;# 
   636  0310                     	;# 
   637  0311                     	;# 
   638  0311                     	;# 
   639  0312                     	;# 
   640  0313                     	;# 
   641  038C                     	;# 
   642  038D                     	;# 
   643  038E                     	;# 
   644  038F                     	;# 
   645  0390                     	;# 
   646  0391                     	;# 
   647  0392                     	;# 
   648  0393                     	;# 
   649  0394                     	;# 
   650  0395                     	;# 
   651  0396                     	;# 
   652  0397                     	;# 
   653  0398                     	;# 
   654  0399                     	;# 
   655  039D                     	;# 
   656  039E                     	;# 
   657  039F                     	;# 
   658  0511                     	;# 
   659  0513                     	;# 
   660  0515                     	;# 
   661  051A                     	;# 
   662  0591                     	;# 
   663  0592                     	;# 
   664  0592                     	;# 
   665  0593                     	;# 
   666  0594                     	;# 
   667  0594                     	;# 
   668  0595                     	;# 
   669  0596                     	;# 
   670  0596                     	;# 
   671  0E91                     	;# 
   672  0E92                     	;# 
   673  0E93                     	;# 
   674  0E94                     	;# 
   675  0E95                     	;# 
   676  0E96                     	;# 
   677  0E97                     	;# 
   678  0E98                     	;# 
   679  0E99                     	;# 
   680  0E9A                     	;# 
   681  0E9B                     	;# 
   682  0E9C                     	;# 
   683  0E9D                     	;# 
   684  0E9E                     	;# 
   685  0E9F                     	;# 
   686  0EA0                     	;# 
   687  0EA1                     	;# 
   688  0EA1                     	;# 
   689  0EA2                     	;# 
   690  0EA3                     	;# 
   691  0EA3                     	;# 
   692  0EA4                     	;# 
   693  0EA5                     	;# 
   694  0EA5                     	;# 
   695  0EA6                     	;# 
   696  0EA7                     	;# 
   697  0EA7                     	;# 
   698  0EA8                     	;# 
   699  0EA9                     	;# 
   700  0EAA                     	;# 
   701  0EAB                     	;# 
   702  0EAC                     	;# 
   703  0EAD                     	;# 
   704  0EAE                     	;# 
   705  0EAF                     	;# 
   706  0EB1                     	;# 
   707  0EB2                     	;# 
   708  0EB3                     	;# 
   709  0EB4                     	;# 
   710  0EB5                     	;# 
   711  0EB6                     	;# 
   712  0EB7                     	;# 
   713  0EB8                     	;# 
   714  0EB9                     	;# 
   715  0EBA                     	;# 
   716  0EBB                     	;# 
   717  0EBC                     	;# 
   718  0EBD                     	;# 
   719  0EBE                     	;# 
   720  0EBF                     	;# 
   721  0EC0                     	;# 
   722  0EC1                     	;# 
   723  0EC1                     	;# 
   724  0EC2                     	;# 
   725  0EC3                     	;# 
   726  0EC3                     	;# 
   727  0EC4                     	;# 
   728  0EC5                     	;# 
   729  0EC5                     	;# 
   730  0EC6                     	;# 
   731  0EC7                     	;# 
   732  0EC7                     	;# 
   733  0EC8                     	;# 
   734  0EC9                     	;# 
   735  0ECA                     	;# 
   736  0ECB                     	;# 
   737  0ECC                     	;# 
   738  0ECD                     	;# 
   739  0ECE                     	;# 
   740  0ECF                     	;# 
   741  0ED1                     	;# 
   742  0ED2                     	;# 
   743  0ED3                     	;# 
   744  0ED4                     	;# 
   745  0ED5                     	;# 
   746  0ED6                     	;# 
   747  0ED7                     	;# 
   748  0ED8                     	;# 
   749  0ED9                     	;# 
   750  0EDA                     	;# 
   751  0EDB                     	;# 
   752  0EDC                     	;# 
   753  0EDD                     	;# 
   754  0EDE                     	;# 
   755  0EDF                     	;# 
   756  0EE0                     	;# 
   757  0EE1                     	;# 
   758  0EE1                     	;# 
   759  0EE2                     	;# 
   760  0EE3                     	;# 
   761  0EE3                     	;# 
   762  0EE4                     	;# 
   763  0EE5                     	;# 
   764  0EE5                     	;# 
   765  0EE6                     	;# 
   766  0EE7                     	;# 
   767  0EE7                     	;# 
   768  0EE8                     	;# 
   769  0EE9                     	;# 
   770  0EEA                     	;# 
   771  0EEB                     	;# 
   772  0EEC                     	;# 
   773  0EED                     	;# 
   774  0EEE                     	;# 
   775  0EEF                     	;# 
   776  0F11                     	;# 
   777  0F12                     	;# 
   778  0F13                     	;# 
   779  0F14                     	;# 
   780  0F15                     	;# 
   781  0F16                     	;# 
   782  0F17                     	;# 
   783  0F18                     	;# 
   784  0F19                     	;# 
   785  0F1A                     	;# 
   786  0F1B                     	;# 
   787  0F1C                     	;# 
   788  0F1D                     	;# 
   789  0F1E                     	;# 
   790  0F1F                     	;# 
   791  0F20                     	;# 
   792  0F21                     	;# 
   793  0F21                     	;# 
   794  0F22                     	;# 
   795  0F23                     	;# 
   796  0F23                     	;# 
   797  0F24                     	;# 
   798  0F25                     	;# 
   799  0F25                     	;# 
   800  0F26                     	;# 
   801  0F27                     	;# 
   802  0F27                     	;# 
   803  0F28                     	;# 
   804  0F29                     	;# 
   805  0F2A                     	;# 
   806  0F2B                     	;# 
   807  0F2C                     	;# 
   808  0F2D                     	;# 
   809  0F2E                     	;# 
   810  0F2F                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  000F                     	;# 
   838  0010                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0013                     	;# 
   842  0014                     	;# 
   843  0015                     	;# 
   844  0016                     	;# 
   845  0016                     	;# 
   846  0017                     	;# 
   847  0018                     	;# 
   848  0019                     	;# 
   849  001A                     	;# 
   850  001B                     	;# 
   851  001C                     	;# 
   852  008C                     	;# 
   853  008D                     	;# 
   854  008E                     	;# 
   855  008F                     	;# 
   856  0090                     	;# 
   857  0091                     	;# 
   858  0092                     	;# 
   859  0093                     	;# 
   860  0094                     	;# 
   861  0095                     	;# 
   862  0096                     	;# 
   863  0097                     	;# 
   864  0098                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  009F                     	;# 
   873  010C                     	;# 
   874  010D                     	;# 
   875  010E                     	;# 
   876  010F                     	;# 
   877  0110                     	;# 
   878  0111                     	;# 
   879  0112                     	;# 
   880  0113                     	;# 
   881  0114                     	;# 
   882  0115                     	;# 
   883  0116                     	;# 
   884  0117                     	;# 
   885  0118                     	;# 
   886  0119                     	;# 
   887  011A                     	;# 
   888  011B                     	;# 
   889  011C                     	;# 
   890  011D                     	;# 
   891  011D                     	;# 
   892  011D                     	;# 
   893  011E                     	;# 
   894  011F                     	;# 
   895  018C                     	;# 
   896  018D                     	;# 
   897  018E                     	;# 
   898  018F                     	;# 
   899  0190                     	;# 
   900  0191                     	;# 
   901  0191                     	;# 
   902  0192                     	;# 
   903  0193                     	;# 
   904  0193                     	;# 
   905  0193                     	;# 
   906  0194                     	;# 
   907  0195                     	;# 
   908  0196                     	;# 
   909  0197                     	;# 
   910  0199                     	;# 
   911  0199                     	;# 
   912  0199                     	;# 
   913  019A                     	;# 
   914  019A                     	;# 
   915  019A                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019B                     	;# 
   920  019B                     	;# 
   921  019C                     	;# 
   922  019C                     	;# 
   923  019C                     	;# 
   924  019D                     	;# 
   925  019D                     	;# 
   926  019D                     	;# 
   927  019E                     	;# 
   928  019E                     	;# 
   929  019E                     	;# 
   930  019F                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  019F                     	;# 
   934  019F                     	;# 
   935  020C                     	;# 
   936  020D                     	;# 
   937  020E                     	;# 
   938  020F                     	;# 
   939  0210                     	;# 
   940  0211                     	;# 
   941  0211                     	;# 
   942  0212                     	;# 
   943  0212                     	;# 
   944  0213                     	;# 
   945  0213                     	;# 
   946  0214                     	;# 
   947  0214                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0215                     	;# 
   951  0215                     	;# 
   952  0216                     	;# 
   953  0216                     	;# 
   954  0217                     	;# 
   955  0217                     	;# 
   956  028C                     	;# 
   957  028D                     	;# 
   958  028E                     	;# 
   959  028F                     	;# 
   960  0290                     	;# 
   961  0291                     	;# 
   962  0291                     	;# 
   963  0292                     	;# 
   964  0293                     	;# 
   965  0298                     	;# 
   966  0298                     	;# 
   967  0299                     	;# 
   968  029A                     	;# 
   969  030C                     	;# 
   970  030D                     	;# 
   971  030E                     	;# 
   972  030F                     	;# 
   973  0310                     	;# 
   974  0311                     	;# 
   975  0311                     	;# 
   976  0312                     	;# 
   977  0313                     	;# 
   978  038C                     	;# 
   979  038D                     	;# 
   980  038E                     	;# 
   981  038F                     	;# 
   982  0390                     	;# 
   983  0391                     	;# 
   984  0392                     	;# 
   985  0393                     	;# 
   986  0394                     	;# 
   987  0395                     	;# 
   988  0396                     	;# 
   989  0397                     	;# 
   990  0398                     	;# 
   991  0399                     	;# 
   992  039D                     	;# 
   993  039E                     	;# 
   994  039F                     	;# 
   995  0511                     	;# 
   996  0513                     	;# 
   997  0515                     	;# 
   998  051A                     	;# 
   999  0591                     	;# 
  1000  0592                     	;# 
  1001  0592                     	;# 
  1002  0593                     	;# 
  1003  0594                     	;# 
  1004  0594                     	;# 
  1005  0595                     	;# 
  1006  0596                     	;# 
  1007  0596                     	;# 
  1008  0E91                     	;# 
  1009  0E92                     	;# 
  1010  0E93                     	;# 
  1011  0E94                     	;# 
  1012  0E95                     	;# 
  1013  0E96                     	;# 
  1014  0E97                     	;# 
  1015  0E98                     	;# 
  1016  0E99                     	;# 
  1017  0E9A                     	;# 
  1018  0E9B                     	;# 
  1019  0E9C                     	;# 
  1020  0E9D                     	;# 
  1021  0E9E                     	;# 
  1022  0E9F                     	;# 
  1023  0EA0                     	;# 
  1024  0EA1                     	;# 
  1025  0EA1                     	;# 
  1026  0EA2                     	;# 
  1027  0EA3                     	;# 
  1028  0EA3                     	;# 
  1029  0EA4                     	;# 
  1030  0EA5                     	;# 
  1031  0EA5                     	;# 
  1032  0EA6                     	;# 
  1033  0EA7                     	;# 
  1034  0EA7                     	;# 
  1035  0EA8                     	;# 
  1036  0EA9                     	;# 
  1037  0EAA                     	;# 
  1038  0EAB                     	;# 
  1039  0EAC                     	;# 
  1040  0EAD                     	;# 
  1041  0EAE                     	;# 
  1042  0EAF                     	;# 
  1043  0EB1                     	;# 
  1044  0EB2                     	;# 
  1045  0EB3                     	;# 
  1046  0EB4                     	;# 
  1047  0EB5                     	;# 
  1048  0EB6                     	;# 
  1049  0EB7                     	;# 
  1050  0EB8                     	;# 
  1051  0EB9                     	;# 
  1052  0EBA                     	;# 
  1053  0EBB                     	;# 
  1054  0EBC                     	;# 
  1055  0EBD                     	;# 
  1056  0EBE                     	;# 
  1057  0EBF                     	;# 
  1058  0EC0                     	;# 
  1059  0EC1                     	;# 
  1060  0EC1                     	;# 
  1061  0EC2                     	;# 
  1062  0EC3                     	;# 
  1063  0EC3                     	;# 
  1064  0EC4                     	;# 
  1065  0EC5                     	;# 
  1066  0EC5                     	;# 
  1067  0EC6                     	;# 
  1068  0EC7                     	;# 
  1069  0EC7                     	;# 
  1070  0EC8                     	;# 
  1071  0EC9                     	;# 
  1072  0ECA                     	;# 
  1073  0ECB                     	;# 
  1074  0ECC                     	;# 
  1075  0ECD                     	;# 
  1076  0ECE                     	;# 
  1077  0ECF                     	;# 
  1078  0ED1                     	;# 
  1079  0ED2                     	;# 
  1080  0ED3                     	;# 
  1081  0ED4                     	;# 
  1082  0ED5                     	;# 
  1083  0ED6                     	;# 
  1084  0ED7                     	;# 
  1085  0ED8                     	;# 
  1086  0ED9                     	;# 
  1087  0EDA                     	;# 
  1088  0EDB                     	;# 
  1089  0EDC                     	;# 
  1090  0EDD                     	;# 
  1091  0EDE                     	;# 
  1092  0EDF                     	;# 
  1093  0EE0                     	;# 
  1094  0EE1                     	;# 
  1095  0EE1                     	;# 
  1096  0EE2                     	;# 
  1097  0EE3                     	;# 
  1098  0EE3                     	;# 
  1099  0EE4                     	;# 
  1100  0EE5                     	;# 
  1101  0EE5                     	;# 
  1102  0EE6                     	;# 
  1103  0EE7                     	;# 
  1104  0EE7                     	;# 
  1105  0EE8                     	;# 
  1106  0EE9                     	;# 
  1107  0EEA                     	;# 
  1108  0EEB                     	;# 
  1109  0EEC                     	;# 
  1110  0EED                     	;# 
  1111  0EEE                     	;# 
  1112  0EEF                     	;# 
  1113  0F11                     	;# 
  1114  0F12                     	;# 
  1115  0F13                     	;# 
  1116  0F14                     	;# 
  1117  0F15                     	;# 
  1118  0F16                     	;# 
  1119  0F17                     	;# 
  1120  0F18                     	;# 
  1121  0F19                     	;# 
  1122  0F1A                     	;# 
  1123  0F1B                     	;# 
  1124  0F1C                     	;# 
  1125  0F1D                     	;# 
  1126  0F1E                     	;# 
  1127  0F1F                     	;# 
  1128  0F20                     	;# 
  1129  0F21                     	;# 
  1130  0F21                     	;# 
  1131  0F22                     	;# 
  1132  0F23                     	;# 
  1133  0F23                     	;# 
  1134  0F24                     	;# 
  1135  0F25                     	;# 
  1136  0F25                     	;# 
  1137  0F26                     	;# 
  1138  0F27                     	;# 
  1139  0F27                     	;# 
  1140  0F28                     	;# 
  1141  0F29                     	;# 
  1142  0F2A                     	;# 
  1143  0F2B                     	;# 
  1144  0F2C                     	;# 
  1145  0F2D                     	;# 
  1146  0F2E                     	;# 
  1147  0F2F                     	;# 
  1148  0FE4                     	;# 
  1149  0FE5                     	;# 
  1150  0FE6                     	;# 
  1151  0FE7                     	;# 
  1152  0FE8                     	;# 
  1153  0FE9                     	;# 
  1154  0FEA                     	;# 
  1155  0FEB                     	;# 
  1156  0FED                     	;# 
  1157  0FEE                     	;# 
  1158  0FEF                     	;# 
  1159  0000                     	;# 
  1160  0001                     	;# 
  1161  0002                     	;# 
  1162  0003                     	;# 
  1163  0004                     	;# 
  1164  0005                     	;# 
  1165  0006                     	;# 
  1166  0007                     	;# 
  1167  0008                     	;# 
  1168  0009                     	;# 
  1169  000A                     	;# 
  1170  000B                     	;# 
  1171  000C                     	;# 
  1172  000D                     	;# 
  1173  000E                     	;# 
  1174  000F                     	;# 
  1175  0010                     	;# 
  1176  0011                     	;# 
  1177  0012                     	;# 
  1178  0013                     	;# 
  1179  0014                     	;# 
  1180  0015                     	;# 
  1181  0016                     	;# 
  1182  0016                     	;# 
  1183  0017                     	;# 
  1184  0018                     	;# 
  1185  0019                     	;# 
  1186  001A                     	;# 
  1187  001B                     	;# 
  1188  001C                     	;# 
  1189  008C                     	;# 
  1190  008D                     	;# 
  1191  008E                     	;# 
  1192  008F                     	;# 
  1193  0090                     	;# 
  1194  0091                     	;# 
  1195  0092                     	;# 
  1196  0093                     	;# 
  1197  0094                     	;# 
  1198  0095                     	;# 
  1199  0096                     	;# 
  1200  0097                     	;# 
  1201  0098                     	;# 
  1202  0099                     	;# 
  1203  009A                     	;# 
  1204  009B                     	;# 
  1205  009B                     	;# 
  1206  009C                     	;# 
  1207  009D                     	;# 
  1208  009E                     	;# 
  1209  009F                     	;# 
  1210  010C                     	;# 
  1211  010D                     	;# 
  1212  010E                     	;# 
  1213  010F                     	;# 
  1214  0110                     	;# 
  1215  0111                     	;# 
  1216  0112                     	;# 
  1217  0113                     	;# 
  1218  0114                     	;# 
  1219  0115                     	;# 
  1220  0116                     	;# 
  1221  0117                     	;# 
  1222  0118                     	;# 
  1223  0119                     	;# 
  1224  011A                     	;# 
  1225  011B                     	;# 
  1226  011C                     	;# 
  1227  011D                     	;# 
  1228  011D                     	;# 
  1229  011D                     	;# 
  1230  011E                     	;# 
  1231  011F                     	;# 
  1232  018C                     	;# 
  1233  018D                     	;# 
  1234  018E                     	;# 
  1235  018F                     	;# 
  1236  0190                     	;# 
  1237  0191                     	;# 
  1238  0191                     	;# 
  1239  0192                     	;# 
  1240  0193                     	;# 
  1241  0193                     	;# 
  1242  0193                     	;# 
  1243  0194                     	;# 
  1244  0195                     	;# 
  1245  0196                     	;# 
  1246  0197                     	;# 
  1247  0199                     	;# 
  1248  0199                     	;# 
  1249  0199                     	;# 
  1250  019A                     	;# 
  1251  019A                     	;# 
  1252  019A                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019C                     	;# 
  1259  019C                     	;# 
  1260  019C                     	;# 
  1261  019D                     	;# 
  1262  019D                     	;# 
  1263  019D                     	;# 
  1264  019E                     	;# 
  1265  019E                     	;# 
  1266  019E                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  019F                     	;# 
  1270  019F                     	;# 
  1271  019F                     	;# 
  1272  020C                     	;# 
  1273  020D                     	;# 
  1274  020E                     	;# 
  1275  020F                     	;# 
  1276  0210                     	;# 
  1277  0211                     	;# 
  1278  0211                     	;# 
  1279  0212                     	;# 
  1280  0212                     	;# 
  1281  0213                     	;# 
  1282  0213                     	;# 
  1283  0214                     	;# 
  1284  0214                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0215                     	;# 
  1288  0215                     	;# 
  1289  0216                     	;# 
  1290  0216                     	;# 
  1291  0217                     	;# 
  1292  0217                     	;# 
  1293  028C                     	;# 
  1294  028D                     	;# 
  1295  028E                     	;# 
  1296  028F                     	;# 
  1297  0290                     	;# 
  1298  0291                     	;# 
  1299  0291                     	;# 
  1300  0292                     	;# 
  1301  0293                     	;# 
  1302  0298                     	;# 
  1303  0298                     	;# 
  1304  0299                     	;# 
  1305  029A                     	;# 
  1306  030C                     	;# 
  1307  030D                     	;# 
  1308  030E                     	;# 
  1309  030F                     	;# 
  1310  0310                     	;# 
  1311  0311                     	;# 
  1312  0311                     	;# 
  1313  0312                     	;# 
  1314  0313                     	;# 
  1315  038C                     	;# 
  1316  038D                     	;# 
  1317  038E                     	;# 
  1318  038F                     	;# 
  1319  0390                     	;# 
  1320  0391                     	;# 
  1321  0392                     	;# 
  1322  0393                     	;# 
  1323  0394                     	;# 
  1324  0395                     	;# 
  1325  0396                     	;# 
  1326  0397                     	;# 
  1327  0398                     	;# 
  1328  0399                     	;# 
  1329  039D                     	;# 
  1330  039E                     	;# 
  1331  039F                     	;# 
  1332  0511                     	;# 
  1333  0513                     	;# 
  1334  0515                     	;# 
  1335  051A                     	;# 
  1336  0591                     	;# 
  1337  0592                     	;# 
  1338  0592                     	;# 
  1339  0593                     	;# 
  1340  0594                     	;# 
  1341  0594                     	;# 
  1342  0595                     	;# 
  1343  0596                     	;# 
  1344  0596                     	;# 
  1345  0E91                     	;# 
  1346  0E92                     	;# 
  1347  0E93                     	;# 
  1348  0E94                     	;# 
  1349  0E95                     	;# 
  1350  0E96                     	;# 
  1351  0E97                     	;# 
  1352  0E98                     	;# 
  1353  0E99                     	;# 
  1354  0E9A                     	;# 
  1355  0E9B                     	;# 
  1356  0E9C                     	;# 
  1357  0E9D                     	;# 
  1358  0E9E                     	;# 
  1359  0E9F                     	;# 
  1360  0EA0                     	;# 
  1361  0EA1                     	;# 
  1362  0EA1                     	;# 
  1363  0EA2                     	;# 
  1364  0EA3                     	;# 
  1365  0EA3                     	;# 
  1366  0EA4                     	;# 
  1367  0EA5                     	;# 
  1368  0EA5                     	;# 
  1369  0EA6                     	;# 
  1370  0EA7                     	;# 
  1371  0EA7                     	;# 
  1372  0EA8                     	;# 
  1373  0EA9                     	;# 
  1374  0EAA                     	;# 
  1375  0EAB                     	;# 
  1376  0EAC                     	;# 
  1377  0EAD                     	;# 
  1378  0EAE                     	;# 
  1379  0EAF                     	;# 
  1380  0EB1                     	;# 
  1381  0EB2                     	;# 
  1382  0EB3                     	;# 
  1383  0EB4                     	;# 
  1384  0EB5                     	;# 
  1385  0EB6                     	;# 
  1386  0EB7                     	;# 
  1387  0EB8                     	;# 
  1388  0EB9                     	;# 
  1389  0EBA                     	;# 
  1390  0EBB                     	;# 
  1391  0EBC                     	;# 
  1392  0EBD                     	;# 
  1393  0EBE                     	;# 
  1394  0EBF                     	;# 
  1395  0EC0                     	;# 
  1396  0EC1                     	;# 
  1397  0EC1                     	;# 
  1398  0EC2                     	;# 
  1399  0EC3                     	;# 
  1400  0EC3                     	;# 
  1401  0EC4                     	;# 
  1402  0EC5                     	;# 
  1403  0EC5                     	;# 
  1404  0EC6                     	;# 
  1405  0EC7                     	;# 
  1406  0EC7                     	;# 
  1407  0EC8                     	;# 
  1408  0EC9                     	;# 
  1409  0ECA                     	;# 
  1410  0ECB                     	;# 
  1411  0ECC                     	;# 
  1412  0ECD                     	;# 
  1413  0ECE                     	;# 
  1414  0ECF                     	;# 
  1415  0ED1                     	;# 
  1416  0ED2                     	;# 
  1417  0ED3                     	;# 
  1418  0ED4                     	;# 
  1419  0ED5                     	;# 
  1420  0ED6                     	;# 
  1421  0ED7                     	;# 
  1422  0ED8                     	;# 
  1423  0ED9                     	;# 
  1424  0EDA                     	;# 
  1425  0EDB                     	;# 
  1426  0EDC                     	;# 
  1427  0EDD                     	;# 
  1428  0EDE                     	;# 
  1429  0EDF                     	;# 
  1430  0EE0                     	;# 
  1431  0EE1                     	;# 
  1432  0EE1                     	;# 
  1433  0EE2                     	;# 
  1434  0EE3                     	;# 
  1435  0EE3                     	;# 
  1436  0EE4                     	;# 
  1437  0EE5                     	;# 
  1438  0EE5                     	;# 
  1439  0EE6                     	;# 
  1440  0EE7                     	;# 
  1441  0EE7                     	;# 
  1442  0EE8                     	;# 
  1443  0EE9                     	;# 
  1444  0EEA                     	;# 
  1445  0EEB                     	;# 
  1446  0EEC                     	;# 
  1447  0EED                     	;# 
  1448  0EEE                     	;# 
  1449  0EEF                     	;# 
  1450  0F11                     	;# 
  1451  0F12                     	;# 
  1452  0F13                     	;# 
  1453  0F14                     	;# 
  1454  0F15                     	;# 
  1455  0F16                     	;# 
  1456  0F17                     	;# 
  1457  0F18                     	;# 
  1458  0F19                     	;# 
  1459  0F1A                     	;# 
  1460  0F1B                     	;# 
  1461  0F1C                     	;# 
  1462  0F1D                     	;# 
  1463  0F1E                     	;# 
  1464  0F1F                     	;# 
  1465  0F20                     	;# 
  1466  0F21                     	;# 
  1467  0F21                     	;# 
  1468  0F22                     	;# 
  1469  0F23                     	;# 
  1470  0F23                     	;# 
  1471  0F24                     	;# 
  1472  0F25                     	;# 
  1473  0F25                     	;# 
  1474  0F26                     	;# 
  1475  0F27                     	;# 
  1476  0F27                     	;# 
  1477  0F28                     	;# 
  1478  0F29                     	;# 
  1479  0F2A                     	;# 
  1480  0F2B                     	;# 
  1481  0F2C                     	;# 
  1482  0F2D                     	;# 
  1483  0F2E                     	;# 
  1484  0F2F                     	;# 
  1485  0FE4                     	;# 
  1486  0FE5                     	;# 
  1487  0FE6                     	;# 
  1488  0FE7                     	;# 
  1489  0FE8                     	;# 
  1490  0FE9                     	;# 
  1491  0FEA                     	;# 
  1492  0FEB                     	;# 
  1493  0FED                     	;# 
  1494  0FEE                     	;# 
  1495  0FEF                     	;# 
  1496  0000                     	;# 
  1497  0001                     	;# 
  1498  0002                     	;# 
  1499  0003                     	;# 
  1500  0004                     	;# 
  1501  0005                     	;# 
  1502  0006                     	;# 
  1503  0007                     	;# 
  1504  0008                     	;# 
  1505  0009                     	;# 
  1506  000A                     	;# 
  1507  000B                     	;# 
  1508  000C                     	;# 
  1509  000D                     	;# 
  1510  000E                     	;# 
  1511  000F                     	;# 
  1512  0010                     	;# 
  1513  0011                     	;# 
  1514  0012                     	;# 
  1515  0013                     	;# 
  1516  0014                     	;# 
  1517  0015                     	;# 
  1518  0016                     	;# 
  1519  0016                     	;# 
  1520  0017                     	;# 
  1521  0018                     	;# 
  1522  0019                     	;# 
  1523  001A                     	;# 
  1524  001B                     	;# 
  1525  001C                     	;# 
  1526  008C                     	;# 
  1527  008D                     	;# 
  1528  008E                     	;# 
  1529  008F                     	;# 
  1530  0090                     	;# 
  1531  0091                     	;# 
  1532  0092                     	;# 
  1533  0093                     	;# 
  1534  0094                     	;# 
  1535  0095                     	;# 
  1536  0096                     	;# 
  1537  0097                     	;# 
  1538  0098                     	;# 
  1539  0099                     	;# 
  1540  009A                     	;# 
  1541  009B                     	;# 
  1542  009B                     	;# 
  1543  009C                     	;# 
  1544  009D                     	;# 
  1545  009E                     	;# 
  1546  009F                     	;# 
  1547  010C                     	;# 
  1548  010D                     	;# 
  1549  010E                     	;# 
  1550  010F                     	;# 
  1551  0110                     	;# 
  1552  0111                     	;# 
  1553  0112                     	;# 
  1554  0113                     	;# 
  1555  0114                     	;# 
  1556  0115                     	;# 
  1557  0116                     	;# 
  1558  0117                     	;# 
  1559  0118                     	;# 
  1560  0119                     	;# 
  1561  011A                     	;# 
  1562  011B                     	;# 
  1563  011C                     	;# 
  1564  011D                     	;# 
  1565  011D                     	;# 
  1566  011D                     	;# 
  1567  011E                     	;# 
  1568  011F                     	;# 
  1569  018C                     	;# 
  1570  018D                     	;# 
  1571  018E                     	;# 
  1572  018F                     	;# 
  1573  0190                     	;# 
  1574  0191                     	;# 
  1575  0191                     	;# 
  1576  0192                     	;# 
  1577  0193                     	;# 
  1578  0193                     	;# 
  1579  0193                     	;# 
  1580  0194                     	;# 
  1581  0195                     	;# 
  1582  0196                     	;# 
  1583  0197                     	;# 
  1584  0199                     	;# 
  1585  0199                     	;# 
  1586  0199                     	;# 
  1587  019A                     	;# 
  1588  019A                     	;# 
  1589  019A                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019B                     	;# 
  1594  019B                     	;# 
  1595  019C                     	;# 
  1596  019C                     	;# 
  1597  019C                     	;# 
  1598  019D                     	;# 
  1599  019D                     	;# 
  1600  019D                     	;# 
  1601  019E                     	;# 
  1602  019E                     	;# 
  1603  019E                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  019F                     	;# 
  1607  019F                     	;# 
  1608  019F                     	;# 
  1609  020C                     	;# 
  1610  020D                     	;# 
  1611  020E                     	;# 
  1612  020F                     	;# 
  1613  0210                     	;# 
  1614  0211                     	;# 
  1615  0211                     	;# 
  1616  0212                     	;# 
  1617  0212                     	;# 
  1618  0213                     	;# 
  1619  0213                     	;# 
  1620  0214                     	;# 
  1621  0214                     	;# 
  1622  0215                     	;# 
  1623  0215                     	;# 
  1624  0215                     	;# 
  1625  0215                     	;# 
  1626  0216                     	;# 
  1627  0216                     	;# 
  1628  0217                     	;# 
  1629  0217                     	;# 
  1630  028C                     	;# 
  1631  028D                     	;# 
  1632  028E                     	;# 
  1633  028F                     	;# 
  1634  0290                     	;# 
  1635  0291                     	;# 
  1636  0291                     	;# 
  1637  0292                     	;# 
  1638  0293                     	;# 
  1639  0298                     	;# 
  1640  0298                     	;# 
  1641  0299                     	;# 
  1642  029A                     	;# 
  1643  030C                     	;# 
  1644  030D                     	;# 
  1645  030E                     	;# 
  1646  030F                     	;# 
  1647  0310                     	;# 
  1648  0311                     	;# 
  1649  0311                     	;# 
  1650  0312                     	;# 
  1651  0313                     	;# 
  1652  038C                     	;# 
  1653  038D                     	;# 
  1654  038E                     	;# 
  1655  038F                     	;# 
  1656  0390                     	;# 
  1657  0391                     	;# 
  1658  0392                     	;# 
  1659  0393                     	;# 
  1660  0394                     	;# 
  1661  0395                     	;# 
  1662  0396                     	;# 
  1663  0397                     	;# 
  1664  0398                     	;# 
  1665  0399                     	;# 
  1666  039D                     	;# 
  1667  039E                     	;# 
  1668  039F                     	;# 
  1669  0511                     	;# 
  1670  0513                     	;# 
  1671  0515                     	;# 
  1672  051A                     	;# 
  1673  0591                     	;# 
  1674  0592                     	;# 
  1675  0592                     	;# 
  1676  0593                     	;# 
  1677  0594                     	;# 
  1678  0594                     	;# 
  1679  0595                     	;# 
  1680  0596                     	;# 
  1681  0596                     	;# 
  1682  0E91                     	;# 
  1683  0E92                     	;# 
  1684  0E93                     	;# 
  1685  0E94                     	;# 
  1686  0E95                     	;# 
  1687  0E96                     	;# 
  1688  0E97                     	;# 
  1689  0E98                     	;# 
  1690  0E99                     	;# 
  1691  0E9A                     	;# 
  1692  0E9B                     	;# 
  1693  0E9C                     	;# 
  1694  0E9D                     	;# 
  1695  0E9E                     	;# 
  1696  0E9F                     	;# 
  1697  0EA0                     	;# 
  1698  0EA1                     	;# 
  1699  0EA1                     	;# 
  1700  0EA2                     	;# 
  1701  0EA3                     	;# 
  1702  0EA3                     	;# 
  1703  0EA4                     	;# 
  1704  0EA5                     	;# 
  1705  0EA5                     	;# 
  1706  0EA6                     	;# 
  1707  0EA7                     	;# 
  1708  0EA7                     	;# 
  1709  0EA8                     	;# 
  1710  0EA9                     	;# 
  1711  0EAA                     	;# 
  1712  0EAB                     	;# 
  1713  0EAC                     	;# 
  1714  0EAD                     	;# 
  1715  0EAE                     	;# 
  1716  0EAF                     	;# 
  1717  0EB1                     	;# 
  1718  0EB2                     	;# 
  1719  0EB3                     	;# 
  1720  0EB4                     	;# 
  1721  0EB5                     	;# 
  1722  0EB6                     	;# 
  1723  0EB7                     	;# 
  1724  0EB8                     	;# 
  1725  0EB9                     	;# 
  1726  0EBA                     	;# 
  1727  0EBB                     	;# 
  1728  0EBC                     	;# 
  1729  0EBD                     	;# 
  1730  0EBE                     	;# 
  1731  0EBF                     	;# 
  1732  0EC0                     	;# 
  1733  0EC1                     	;# 
  1734  0EC1                     	;# 
  1735  0EC2                     	;# 
  1736  0EC3                     	;# 
  1737  0EC3                     	;# 
  1738  0EC4                     	;# 
  1739  0EC5                     	;# 
  1740  0EC5                     	;# 
  1741  0EC6                     	;# 
  1742  0EC7                     	;# 
  1743  0EC7                     	;# 
  1744  0EC8                     	;# 
  1745  0EC9                     	;# 
  1746  0ECA                     	;# 
  1747  0ECB                     	;# 
  1748  0ECC                     	;# 
  1749  0ECD                     	;# 
  1750  0ECE                     	;# 
  1751  0ECF                     	;# 
  1752  0ED1                     	;# 
  1753  0ED2                     	;# 
  1754  0ED3                     	;# 
  1755  0ED4                     	;# 
  1756  0ED5                     	;# 
  1757  0ED6                     	;# 
  1758  0ED7                     	;# 
  1759  0ED8                     	;# 
  1760  0ED9                     	;# 
  1761  0EDA                     	;# 
  1762  0EDB                     	;# 
  1763  0EDC                     	;# 
  1764  0EDD                     	;# 
  1765  0EDE                     	;# 
  1766  0EDF                     	;# 
  1767  0EE0                     	;# 
  1768  0EE1                     	;# 
  1769  0EE1                     	;# 
  1770  0EE2                     	;# 
  1771  0EE3                     	;# 
  1772  0EE3                     	;# 
  1773  0EE4                     	;# 
  1774  0EE5                     	;# 
  1775  0EE5                     	;# 
  1776  0EE6                     	;# 
  1777  0EE7                     	;# 
  1778  0EE7                     	;# 
  1779  0EE8                     	;# 
  1780  0EE9                     	;# 
  1781  0EEA                     	;# 
  1782  0EEB                     	;# 
  1783  0EEC                     	;# 
  1784  0EED                     	;# 
  1785  0EEE                     	;# 
  1786  0EEF                     	;# 
  1787  0F11                     	;# 
  1788  0F12                     	;# 
  1789  0F13                     	;# 
  1790  0F14                     	;# 
  1791  0F15                     	;# 
  1792  0F16                     	;# 
  1793  0F17                     	;# 
  1794  0F18                     	;# 
  1795  0F19                     	;# 
  1796  0F1A                     	;# 
  1797  0F1B                     	;# 
  1798  0F1C                     	;# 
  1799  0F1D                     	;# 
  1800  0F1E                     	;# 
  1801  0F1F                     	;# 
  1802  0F20                     	;# 
  1803  0F21                     	;# 
  1804  0F21                     	;# 
  1805  0F22                     	;# 
  1806  0F23                     	;# 
  1807  0F23                     	;# 
  1808  0F24                     	;# 
  1809  0F25                     	;# 
  1810  0F25                     	;# 
  1811  0F26                     	;# 
  1812  0F27                     	;# 
  1813  0F27                     	;# 
  1814  0F28                     	;# 
  1815  0F29                     	;# 
  1816  0F2A                     	;# 
  1817  0F2B                     	;# 
  1818  0F2C                     	;# 
  1819  0F2D                     	;# 
  1820  0F2E                     	;# 
  1821  0F2F                     	;# 
  1822  0FE4                     	;# 
  1823  0FE5                     	;# 
  1824  0FE6                     	;# 
  1825  0FE7                     	;# 
  1826  0FE8                     	;# 
  1827  0FE9                     	;# 
  1828  0FEA                     	;# 
  1829  0FEB                     	;# 
  1830  0FED                     	;# 
  1831  0FEE                     	;# 
  1832  0FEF                     	;# 
  1833  0000                     	;# 
  1834  0001                     	;# 
  1835  0002                     	;# 
  1836  0003                     	;# 
  1837  0004                     	;# 
  1838  0005                     	;# 
  1839  0006                     	;# 
  1840  0007                     	;# 
  1841  0008                     	;# 
  1842  0009                     	;# 
  1843  000A                     	;# 
  1844  000B                     	;# 
  1845  000C                     	;# 
  1846  000D                     	;# 
  1847  000E                     	;# 
  1848  000F                     	;# 
  1849  0010                     	;# 
  1850  0011                     	;# 
  1851  0012                     	;# 
  1852  0013                     	;# 
  1853  0014                     	;# 
  1854  0015                     	;# 
  1855  0016                     	;# 
  1856  0016                     	;# 
  1857  0017                     	;# 
  1858  0018                     	;# 
  1859  0019                     	;# 
  1860  001A                     	;# 
  1861  001B                     	;# 
  1862  001C                     	;# 
  1863  008C                     	;# 
  1864  008D                     	;# 
  1865  008E                     	;# 
  1866  008F                     	;# 
  1867  0090                     	;# 
  1868  0091                     	;# 
  1869  0092                     	;# 
  1870  0093                     	;# 
  1871  0094                     	;# 
  1872  0095                     	;# 
  1873  0096                     	;# 
  1874  0097                     	;# 
  1875  0098                     	;# 
  1876  0099                     	;# 
  1877  009A                     	;# 
  1878  009B                     	;# 
  1879  009B                     	;# 
  1880  009C                     	;# 
  1881  009D                     	;# 
  1882  009E                     	;# 
  1883  009F                     	;# 
  1884  010C                     	;# 
  1885  010D                     	;# 
  1886  010E                     	;# 
  1887  010F                     	;# 
  1888  0110                     	;# 
  1889  0111                     	;# 
  1890  0112                     	;# 
  1891  0113                     	;# 
  1892  0114                     	;# 
  1893  0115                     	;# 
  1894  0116                     	;# 
  1895  0117                     	;# 
  1896  0118                     	;# 
  1897  0119                     	;# 
  1898  011A                     	;# 
  1899  011B                     	;# 
  1900  011C                     	;# 
  1901  011D                     	;# 
  1902  011D                     	;# 
  1903  011D                     	;# 
  1904  011E                     	;# 
  1905  011F                     	;# 
  1906  018C                     	;# 
  1907  018D                     	;# 
  1908  018E                     	;# 
  1909  018F                     	;# 
  1910  0190                     	;# 
  1911  0191                     	;# 
  1912  0191                     	;# 
  1913  0192                     	;# 
  1914  0193                     	;# 
  1915  0193                     	;# 
  1916  0193                     	;# 
  1917  0194                     	;# 
  1918  0195                     	;# 
  1919  0196                     	;# 
  1920  0197                     	;# 
  1921  0199                     	;# 
  1922  0199                     	;# 
  1923  0199                     	;# 
  1924  019A                     	;# 
  1925  019A                     	;# 
  1926  019A                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019B                     	;# 
  1931  019B                     	;# 
  1932  019C                     	;# 
  1933  019C                     	;# 
  1934  019C                     	;# 
  1935  019D                     	;# 
  1936  019D                     	;# 
  1937  019D                     	;# 
  1938  019E                     	;# 
  1939  019E                     	;# 
  1940  019E                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  019F                     	;# 
  1945  019F                     	;# 
  1946  020C                     	;# 
  1947  020D                     	;# 
  1948  020E                     	;# 
  1949  020F                     	;# 
  1950  0210                     	;# 
  1951  0211                     	;# 
  1952  0211                     	;# 
  1953  0212                     	;# 
  1954  0212                     	;# 
  1955  0213                     	;# 
  1956  0213                     	;# 
  1957  0214                     	;# 
  1958  0214                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0215                     	;# 
  1962  0215                     	;# 
  1963  0216                     	;# 
  1964  0216                     	;# 
  1965  0217                     	;# 
  1966  0217                     	;# 
  1967  028C                     	;# 
  1968  028D                     	;# 
  1969  028E                     	;# 
  1970  028F                     	;# 
  1971  0290                     	;# 
  1972  0291                     	;# 
  1973  0291                     	;# 
  1974  0292                     	;# 
  1975  0293                     	;# 
  1976  0298                     	;# 
  1977  0298                     	;# 
  1978  0299                     	;# 
  1979  029A                     	;# 
  1980  030C                     	;# 
  1981  030D                     	;# 
  1982  030E                     	;# 
  1983  030F                     	;# 
  1984  0310                     	;# 
  1985  0311                     	;# 
  1986  0311                     	;# 
  1987  0312                     	;# 
  1988  0313                     	;# 
  1989  038C                     	;# 
  1990  038D                     	;# 
  1991  038E                     	;# 
  1992  038F                     	;# 
  1993  0390                     	;# 
  1994  0391                     	;# 
  1995  0392                     	;# 
  1996  0393                     	;# 
  1997  0394                     	;# 
  1998  0395                     	;# 
  1999  0396                     	;# 
  2000  0397                     	;# 
  2001  0398                     	;# 
  2002  0399                     	;# 
  2003  039D                     	;# 
  2004  039E                     	;# 
  2005  039F                     	;# 
  2006  0511                     	;# 
  2007  0513                     	;# 
  2008  0515                     	;# 
  2009  051A                     	;# 
  2010  0591                     	;# 
  2011  0592                     	;# 
  2012  0592                     	;# 
  2013  0593                     	;# 
  2014  0594                     	;# 
  2015  0594                     	;# 
  2016  0595                     	;# 
  2017  0596                     	;# 
  2018  0596                     	;# 
  2019  0E91                     	;# 
  2020  0E92                     	;# 
  2021  0E93                     	;# 
  2022  0E94                     	;# 
  2023  0E95                     	;# 
  2024  0E96                     	;# 
  2025  0E97                     	;# 
  2026  0E98                     	;# 
  2027  0E99                     	;# 
  2028  0E9A                     	;# 
  2029  0E9B                     	;# 
  2030  0E9C                     	;# 
  2031  0E9D                     	;# 
  2032  0E9E                     	;# 
  2033  0E9F                     	;# 
  2034  0EA0                     	;# 
  2035  0EA1                     	;# 
  2036  0EA1                     	;# 
  2037  0EA2                     	;# 
  2038  0EA3                     	;# 
  2039  0EA3                     	;# 
  2040  0EA4                     	;# 
  2041  0EA5                     	;# 
  2042  0EA5                     	;# 
  2043  0EA6                     	;# 
  2044  0EA7                     	;# 
  2045  0EA7                     	;# 
  2046  0EA8                     	;# 
  2047  0EA9                     	;# 
  2048  0EAA                     	;# 
  2049  0EAB                     	;# 
  2050  0EAC                     	;# 
  2051  0EAD                     	;# 
  2052  0EAE                     	;# 
  2053  0EAF                     	;# 
  2054  0EB1                     	;# 
  2055  0EB2                     	;# 
  2056  0EB3                     	;# 
  2057  0EB4                     	;# 
  2058  0EB5                     	;# 
  2059  0EB6                     	;# 
  2060  0EB7                     	;# 
  2061  0EB8                     	;# 
  2062  0EB9                     	;# 
  2063  0EBA                     	;# 
  2064  0EBB                     	;# 
  2065  0EBC                     	;# 
  2066  0EBD                     	;# 
  2067  0EBE                     	;# 
  2068  0EBF                     	;# 
  2069  0EC0                     	;# 
  2070  0EC1                     	;# 
  2071  0EC1                     	;# 
  2072  0EC2                     	;# 
  2073  0EC3                     	;# 
  2074  0EC3                     	;# 
  2075  0EC4                     	;# 
  2076  0EC5                     	;# 
  2077  0EC5                     	;# 
  2078  0EC6                     	;# 
  2079  0EC7                     	;# 
  2080  0EC7                     	;# 
  2081  0EC8                     	;# 
  2082  0EC9                     	;# 
  2083  0ECA                     	;# 
  2084  0ECB                     	;# 
  2085  0ECC                     	;# 
  2086  0ECD                     	;# 
  2087  0ECE                     	;# 
  2088  0ECF                     	;# 
  2089  0ED1                     	;# 
  2090  0ED2                     	;# 
  2091  0ED3                     	;# 
  2092  0ED4                     	;# 
  2093  0ED5                     	;# 
  2094  0ED6                     	;# 
  2095  0ED7                     	;# 
  2096  0ED8                     	;# 
  2097  0ED9                     	;# 
  2098  0EDA                     	;# 
  2099  0EDB                     	;# 
  2100  0EDC                     	;# 
  2101  0EDD                     	;# 
  2102  0EDE                     	;# 
  2103  0EDF                     	;# 
  2104  0EE0                     	;# 
  2105  0EE1                     	;# 
  2106  0EE1                     	;# 
  2107  0EE2                     	;# 
  2108  0EE3                     	;# 
  2109  0EE3                     	;# 
  2110  0EE4                     	;# 
  2111  0EE5                     	;# 
  2112  0EE5                     	;# 
  2113  0EE6                     	;# 
  2114  0EE7                     	;# 
  2115  0EE7                     	;# 
  2116  0EE8                     	;# 
  2117  0EE9                     	;# 
  2118  0EEA                     	;# 
  2119  0EEB                     	;# 
  2120  0EEC                     	;# 
  2121  0EED                     	;# 
  2122  0EEE                     	;# 
  2123  0EEF                     	;# 
  2124  0F11                     	;# 
  2125  0F12                     	;# 
  2126  0F13                     	;# 
  2127  0F14                     	;# 
  2128  0F15                     	;# 
  2129  0F16                     	;# 
  2130  0F17                     	;# 
  2131  0F18                     	;# 
  2132  0F19                     	;# 
  2133  0F1A                     	;# 
  2134  0F1B                     	;# 
  2135  0F1C                     	;# 
  2136  0F1D                     	;# 
  2137  0F1E                     	;# 
  2138  0F1F                     	;# 
  2139  0F20                     	;# 
  2140  0F21                     	;# 
  2141  0F21                     	;# 
  2142  0F22                     	;# 
  2143  0F23                     	;# 
  2144  0F23                     	;# 
  2145  0F24                     	;# 
  2146  0F25                     	;# 
  2147  0F25                     	;# 
  2148  0F26                     	;# 
  2149  0F27                     	;# 
  2150  0F27                     	;# 
  2151  0F28                     	;# 
  2152  0F29                     	;# 
  2153  0F2A                     	;# 
  2154  0F2B                     	;# 
  2155  0F2C                     	;# 
  2156  0F2D                     	;# 
  2157  0F2E                     	;# 
  2158  0F2F                     	;# 
  2159  0FE4                     	;# 
  2160  0FE5                     	;# 
  2161  0FE6                     	;# 
  2162  0FE7                     	;# 
  2163  0FE8                     	;# 
  2164  0FE9                     	;# 
  2165  0FEA                     	;# 
  2166  0FEB                     	;# 
  2167  0FED                     	;# 
  2168  0FEE                     	;# 
  2169  0FEF                     	;# 
  2170  0000                     	;# 
  2171  0001                     	;# 
  2172  0002                     	;# 
  2173  0003                     	;# 
  2174  0004                     	;# 
  2175  0005                     	;# 
  2176  0006                     	;# 
  2177  0007                     	;# 
  2178  0008                     	;# 
  2179  0009                     	;# 
  2180  000A                     	;# 
  2181  000B                     	;# 
  2182  000C                     	;# 
  2183  000D                     	;# 
  2184  000E                     	;# 
  2185  000F                     	;# 
  2186  0010                     	;# 
  2187  0011                     	;# 
  2188  0012                     	;# 
  2189  0013                     	;# 
  2190  0014                     	;# 
  2191  0015                     	;# 
  2192  0016                     	;# 
  2193  0016                     	;# 
  2194  0017                     	;# 
  2195  0018                     	;# 
  2196  0019                     	;# 
  2197  001A                     	;# 
  2198  001B                     	;# 
  2199  001C                     	;# 
  2200  008C                     	;# 
  2201  008D                     	;# 
  2202  008E                     	;# 
  2203  008F                     	;# 
  2204  0090                     	;# 
  2205  0091                     	;# 
  2206  0092                     	;# 
  2207  0093                     	;# 
  2208  0094                     	;# 
  2209  0095                     	;# 
  2210  0096                     	;# 
  2211  0097                     	;# 
  2212  0098                     	;# 
  2213  0099                     	;# 
  2214  009A                     	;# 
  2215  009B                     	;# 
  2216  009B                     	;# 
  2217  009C                     	;# 
  2218  009D                     	;# 
  2219  009E                     	;# 
  2220  009F                     	;# 
  2221  010C                     	;# 
  2222  010D                     	;# 
  2223  010E                     	;# 
  2224  010F                     	;# 
  2225  0110                     	;# 
  2226  0111                     	;# 
  2227  0112                     	;# 
  2228  0113                     	;# 
  2229  0114                     	;# 
  2230  0115                     	;# 
  2231  0116                     	;# 
  2232  0117                     	;# 
  2233  0118                     	;# 
  2234  0119                     	;# 
  2235  011A                     	;# 
  2236  011B                     	;# 
  2237  011C                     	;# 
  2238  011D                     	;# 
  2239  011D                     	;# 
  2240  011D                     	;# 
  2241  011E                     	;# 
  2242  011F                     	;# 
  2243  018C                     	;# 
  2244  018D                     	;# 
  2245  018E                     	;# 
  2246  018F                     	;# 
  2247  0190                     	;# 
  2248  0191                     	;# 
  2249  0191                     	;# 
  2250  0192                     	;# 
  2251  0193                     	;# 
  2252  0193                     	;# 
  2253  0193                     	;# 
  2254  0194                     	;# 
  2255  0195                     	;# 
  2256  0196                     	;# 
  2257  0197                     	;# 
  2258  0199                     	;# 
  2259  0199                     	;# 
  2260  0199                     	;# 
  2261  019A                     	;# 
  2262  019A                     	;# 
  2263  019A                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019B                     	;# 
  2267  019B                     	;# 
  2268  019B                     	;# 
  2269  019C                     	;# 
  2270  019C                     	;# 
  2271  019C                     	;# 
  2272  019D                     	;# 
  2273  019D                     	;# 
  2274  019D                     	;# 
  2275  019E                     	;# 
  2276  019E                     	;# 
  2277  019E                     	;# 
  2278  019F                     	;# 
  2279  019F                     	;# 
  2280  019F                     	;# 
  2281  019F                     	;# 
  2282  019F                     	;# 
  2283  020C                     	;# 
  2284  020D                     	;# 
  2285  020E                     	;# 
  2286  020F                     	;# 
  2287  0210                     	;# 
  2288  0211                     	;# 
  2289  0211                     	;# 
  2290  0212                     	;# 
  2291  0212                     	;# 
  2292  0213                     	;# 
  2293  0213                     	;# 
  2294  0214                     	;# 
  2295  0214                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0215                     	;# 
  2299  0215                     	;# 
  2300  0216                     	;# 
  2301  0216                     	;# 
  2302  0217                     	;# 
  2303  0217                     	;# 
  2304  028C                     	;# 
  2305  028D                     	;# 
  2306  028E                     	;# 
  2307  028F                     	;# 
  2308  0290                     	;# 
  2309  0291                     	;# 
  2310  0291                     	;# 
  2311  0292                     	;# 
  2312  0293                     	;# 
  2313  0298                     	;# 
  2314  0298                     	;# 
  2315  0299                     	;# 
  2316  029A                     	;# 
  2317  030C                     	;# 
  2318  030D                     	;# 
  2319  030E                     	;# 
  2320  030F                     	;# 
  2321  0310                     	;# 
  2322  0311                     	;# 
  2323  0311                     	;# 
  2324  0312                     	;# 
  2325  0313                     	;# 
  2326  038C                     	;# 
  2327  038D                     	;# 
  2328  038E                     	;# 
  2329  038F                     	;# 
  2330  0390                     	;# 
  2331  0391                     	;# 
  2332  0392                     	;# 
  2333  0393                     	;# 
  2334  0394                     	;# 
  2335  0395                     	;# 
  2336  0396                     	;# 
  2337  0397                     	;# 
  2338  0398                     	;# 
  2339  0399                     	;# 
  2340  039D                     	;# 
  2341  039E                     	;# 
  2342  039F                     	;# 
  2343  0511                     	;# 
  2344  0513                     	;# 
  2345  0515                     	;# 
  2346  051A                     	;# 
  2347  0591                     	;# 
  2348  0592                     	;# 
  2349  0592                     	;# 
  2350  0593                     	;# 
  2351  0594                     	;# 
  2352  0594                     	;# 
  2353  0595                     	;# 
  2354  0596                     	;# 
  2355  0596                     	;# 
  2356  0E91                     	;# 
  2357  0E92                     	;# 
  2358  0E93                     	;# 
  2359  0E94                     	;# 
  2360  0E95                     	;# 
  2361  0E96                     	;# 
  2362  0E97                     	;# 
  2363  0E98                     	;# 
  2364  0E99                     	;# 
  2365  0E9A                     	;# 
  2366  0E9B                     	;# 
  2367  0E9C                     	;# 
  2368  0E9D                     	;# 
  2369  0E9E                     	;# 
  2370  0E9F                     	;# 
  2371  0EA0                     	;# 
  2372  0EA1                     	;# 
  2373  0EA1                     	;# 
  2374  0EA2                     	;# 
  2375  0EA3                     	;# 
  2376  0EA3                     	;# 
  2377  0EA4                     	;# 
  2378  0EA5                     	;# 
  2379  0EA5                     	;# 
  2380  0EA6                     	;# 
  2381  0EA7                     	;# 
  2382  0EA7                     	;# 
  2383  0EA8                     	;# 
  2384  0EA9                     	;# 
  2385  0EAA                     	;# 
  2386  0EAB                     	;# 
  2387  0EAC                     	;# 
  2388  0EAD                     	;# 
  2389  0EAE                     	;# 
  2390  0EAF                     	;# 
  2391  0EB1                     	;# 
  2392  0EB2                     	;# 
  2393  0EB3                     	;# 
  2394  0EB4                     	;# 
  2395  0EB5                     	;# 
  2396  0EB6                     	;# 
  2397  0EB7                     	;# 
  2398  0EB8                     	;# 
  2399  0EB9                     	;# 
  2400  0EBA                     	;# 
  2401  0EBB                     	;# 
  2402  0EBC                     	;# 
  2403  0EBD                     	;# 
  2404  0EBE                     	;# 
  2405  0EBF                     	;# 
  2406  0EC0                     	;# 
  2407  0EC1                     	;# 
  2408  0EC1                     	;# 
  2409  0EC2                     	;# 
  2410  0EC3                     	;# 
  2411  0EC3                     	;# 
  2412  0EC4                     	;# 
  2413  0EC5                     	;# 
  2414  0EC5                     	;# 
  2415  0EC6                     	;# 
  2416  0EC7                     	;# 
  2417  0EC7                     	;# 
  2418  0EC8                     	;# 
  2419  0EC9                     	;# 
  2420  0ECA                     	;# 
  2421  0ECB                     	;# 
  2422  0ECC                     	;# 
  2423  0ECD                     	;# 
  2424  0ECE                     	;# 
  2425  0ECF                     	;# 
  2426  0ED1                     	;# 
  2427  0ED2                     	;# 
  2428  0ED3                     	;# 
  2429  0ED4                     	;# 
  2430  0ED5                     	;# 
  2431  0ED6                     	;# 
  2432  0ED7                     	;# 
  2433  0ED8                     	;# 
  2434  0ED9                     	;# 
  2435  0EDA                     	;# 
  2436  0EDB                     	;# 
  2437  0EDC                     	;# 
  2438  0EDD                     	;# 
  2439  0EDE                     	;# 
  2440  0EDF                     	;# 
  2441  0EE0                     	;# 
  2442  0EE1                     	;# 
  2443  0EE1                     	;# 
  2444  0EE2                     	;# 
  2445  0EE3                     	;# 
  2446  0EE3                     	;# 
  2447  0EE4                     	;# 
  2448  0EE5                     	;# 
  2449  0EE5                     	;# 
  2450  0EE6                     	;# 
  2451  0EE7                     	;# 
  2452  0EE7                     	;# 
  2453  0EE8                     	;# 
  2454  0EE9                     	;# 
  2455  0EEA                     	;# 
  2456  0EEB                     	;# 
  2457  0EEC                     	;# 
  2458  0EED                     	;# 
  2459  0EEE                     	;# 
  2460  0EEF                     	;# 
  2461  0F11                     	;# 
  2462  0F12                     	;# 
  2463  0F13                     	;# 
  2464  0F14                     	;# 
  2465  0F15                     	;# 
  2466  0F16                     	;# 
  2467  0F17                     	;# 
  2468  0F18                     	;# 
  2469  0F19                     	;# 
  2470  0F1A                     	;# 
  2471  0F1B                     	;# 
  2472  0F1C                     	;# 
  2473  0F1D                     	;# 
  2474  0F1E                     	;# 
  2475  0F1F                     	;# 
  2476  0F20                     	;# 
  2477  0F21                     	;# 
  2478  0F21                     	;# 
  2479  0F22                     	;# 
  2480  0F23                     	;# 
  2481  0F23                     	;# 
  2482  0F24                     	;# 
  2483  0F25                     	;# 
  2484  0F25                     	;# 
  2485  0F26                     	;# 
  2486  0F27                     	;# 
  2487  0F27                     	;# 
  2488  0F28                     	;# 
  2489  0F29                     	;# 
  2490  0F2A                     	;# 
  2491  0F2B                     	;# 
  2492  0F2C                     	;# 
  2493  0F2D                     	;# 
  2494  0F2E                     	;# 
  2495  0F2F                     	;# 
  2496  0FE4                     	;# 
  2497  0FE5                     	;# 
  2498  0FE6                     	;# 
  2499  0FE7                     	;# 
  2500  0FE8                     	;# 
  2501  0FE9                     	;# 
  2502  0FEA                     	;# 
  2503  0FEB                     	;# 
  2504  0FED                     	;# 
  2505  0FEE                     	;# 
  2506  0FEF                     	;# 
  2507  0000                     	;# 
  2508  0001                     	;# 
  2509  0002                     	;# 
  2510  0003                     	;# 
  2511  0004                     	;# 
  2512  0005                     	;# 
  2513  0006                     	;# 
  2514  0007                     	;# 
  2515  0008                     	;# 
  2516  0009                     	;# 
  2517  000A                     	;# 
  2518  000B                     	;# 
  2519  000C                     	;# 
  2520  000D                     	;# 
  2521  000E                     	;# 
  2522  000F                     	;# 
  2523  0010                     	;# 
  2524  0011                     	;# 
  2525  0012                     	;# 
  2526  0013                     	;# 
  2527  0014                     	;# 
  2528  0015                     	;# 
  2529  0016                     	;# 
  2530  0016                     	;# 
  2531  0017                     	;# 
  2532  0018                     	;# 
  2533  0019                     	;# 
  2534  001A                     	;# 
  2535  001B                     	;# 
  2536  001C                     	;# 
  2537  008C                     	;# 
  2538  008D                     	;# 
  2539  008E                     	;# 
  2540  008F                     	;# 
  2541  0090                     	;# 
  2542  0091                     	;# 
  2543  0092                     	;# 
  2544  0093                     	;# 
  2545  0094                     	;# 
  2546  0095                     	;# 
  2547  0096                     	;# 
  2548  0097                     	;# 
  2549  0098                     	;# 
  2550  0099                     	;# 
  2551  009A                     	;# 
  2552  009B                     	;# 
  2553  009B                     	;# 
  2554  009C                     	;# 
  2555  009D                     	;# 
  2556  009E                     	;# 
  2557  009F                     	;# 
  2558  010C                     	;# 
  2559  010D                     	;# 
  2560  010E                     	;# 
  2561  010F                     	;# 
  2562  0110                     	;# 
  2563  0111                     	;# 
  2564  0112                     	;# 
  2565  0113                     	;# 
  2566  0114                     	;# 
  2567  0115                     	;# 
  2568  0116                     	;# 
  2569  0117                     	;# 
  2570  0118                     	;# 
  2571  0119                     	;# 
  2572  011A                     	;# 
  2573  011B                     	;# 
  2574  011C                     	;# 
  2575  011D                     	;# 
  2576  011D                     	;# 
  2577  011D                     	;# 
  2578  011E                     	;# 
  2579  011F                     	;# 
  2580  018C                     	;# 
  2581  018D                     	;# 
  2582  018E                     	;# 
  2583  018F                     	;# 
  2584  0190                     	;# 
  2585  0191                     	;# 
  2586  0191                     	;# 
  2587  0192                     	;# 
  2588  0193                     	;# 
  2589  0193                     	;# 
  2590  0193                     	;# 
  2591  0194                     	;# 
  2592  0195                     	;# 
  2593  0196                     	;# 
  2594  0197                     	;# 
  2595  0199                     	;# 
  2596  0199                     	;# 
  2597  0199                     	;# 
  2598  019A                     	;# 
  2599  019A                     	;# 
  2600  019A                     	;# 
  2601  019B                     	;# 
  2602  019B                     	;# 
  2603  019B                     	;# 
  2604  019B                     	;# 
  2605  019B                     	;# 
  2606  019C                     	;# 
  2607  019C                     	;# 
  2608  019C                     	;# 
  2609  019D                     	;# 
  2610  019D                     	;# 
  2611  019D                     	;# 
  2612  019E                     	;# 
  2613  019E                     	;# 
  2614  019E                     	;# 
  2615  019F                     	;# 
  2616  019F                     	;# 
  2617  019F                     	;# 
  2618  019F                     	;# 
  2619  019F                     	;# 
  2620  020C                     	;# 
  2621  020D                     	;# 
  2622  020E                     	;# 
  2623  020F                     	;# 
  2624  0210                     	;# 
  2625  0211                     	;# 
  2626  0211                     	;# 
  2627  0212                     	;# 
  2628  0212                     	;# 
  2629  0213                     	;# 
  2630  0213                     	;# 
  2631  0214                     	;# 
  2632  0214                     	;# 
  2633  0215                     	;# 
  2634  0215                     	;# 
  2635  0215                     	;# 
  2636  0215                     	;# 
  2637  0216                     	;# 
  2638  0216                     	;# 
  2639  0217                     	;# 
  2640  0217                     	;# 
  2641  028C                     	;# 
  2642  028D                     	;# 
  2643  028E                     	;# 
  2644  028F                     	;# 
  2645  0290                     	;# 
  2646  0291                     	;# 
  2647  0291                     	;# 
  2648  0292                     	;# 
  2649  0293                     	;# 
  2650  0298                     	;# 
  2651  0298                     	;# 
  2652  0299                     	;# 
  2653  029A                     	;# 
  2654  030C                     	;# 
  2655  030D                     	;# 
  2656  030E                     	;# 
  2657  030F                     	;# 
  2658  0310                     	;# 
  2659  0311                     	;# 
  2660  0311                     	;# 
  2661  0312                     	;# 
  2662  0313                     	;# 
  2663  038C                     	;# 
  2664  038D                     	;# 
  2665  038E                     	;# 
  2666  038F                     	;# 
  2667  0390                     	;# 
  2668  0391                     	;# 
  2669  0392                     	;# 
  2670  0393                     	;# 
  2671  0394                     	;# 
  2672  0395                     	;# 
  2673  0396                     	;# 
  2674  0397                     	;# 
  2675  0398                     	;# 
  2676  0399                     	;# 
  2677  039D                     	;# 
  2678  039E                     	;# 
  2679  039F                     	;# 
  2680  0511                     	;# 
  2681  0513                     	;# 
  2682  0515                     	;# 
  2683  051A                     	;# 
  2684  0591                     	;# 
  2685  0592                     	;# 
  2686  0592                     	;# 
  2687  0593                     	;# 
  2688  0594                     	;# 
  2689  0594                     	;# 
  2690  0595                     	;# 
  2691  0596                     	;# 
  2692  0596                     	;# 
  2693  0E91                     	;# 
  2694  0E92                     	;# 
  2695  0E93                     	;# 
  2696  0E94                     	;# 
  2697  0E95                     	;# 
  2698  0E96                     	;# 
  2699  0E97                     	;# 
  2700  0E98                     	;# 
  2701  0E99                     	;# 
  2702  0E9A                     	;# 
  2703  0E9B                     	;# 
  2704  0E9C                     	;# 
  2705  0E9D                     	;# 
  2706  0E9E                     	;# 
  2707  0E9F                     	;# 
  2708  0EA0                     	;# 
  2709  0EA1                     	;# 
  2710  0EA1                     	;# 
  2711  0EA2                     	;# 
  2712  0EA3                     	;# 
  2713  0EA3                     	;# 
  2714  0EA4                     	;# 
  2715  0EA5                     	;# 
  2716  0EA5                     	;# 
  2717  0EA6                     	;# 
  2718  0EA7                     	;# 
  2719  0EA7                     	;# 
  2720  0EA8                     	;# 
  2721  0EA9                     	;# 
  2722  0EAA                     	;# 
  2723  0EAB                     	;# 
  2724  0EAC                     	;# 
  2725  0EAD                     	;# 
  2726  0EAE                     	;# 
  2727  0EAF                     	;# 
  2728  0EB1                     	;# 
  2729  0EB2                     	;# 
  2730  0EB3                     	;# 
  2731  0EB4                     	;# 
  2732  0EB5                     	;# 
  2733  0EB6                     	;# 
  2734  0EB7                     	;# 
  2735  0EB8                     	;# 
  2736  0EB9                     	;# 
  2737  0EBA                     	;# 
  2738  0EBB                     	;# 
  2739  0EBC                     	;# 
  2740  0EBD                     	;# 
  2741  0EBE                     	;# 
  2742  0EBF                     	;# 
  2743  0EC0                     	;# 
  2744  0EC1                     	;# 
  2745  0EC1                     	;# 
  2746  0EC2                     	;# 
  2747  0EC3                     	;# 
  2748  0EC3                     	;# 
  2749  0EC4                     	;# 
  2750  0EC5                     	;# 
  2751  0EC5                     	;# 
  2752  0EC6                     	;# 
  2753  0EC7                     	;# 
  2754  0EC7                     	;# 
  2755  0EC8                     	;# 
  2756  0EC9                     	;# 
  2757  0ECA                     	;# 
  2758  0ECB                     	;# 
  2759  0ECC                     	;# 
  2760  0ECD                     	;# 
  2761  0ECE                     	;# 
  2762  0ECF                     	;# 
  2763  0ED1                     	;# 
  2764  0ED2                     	;# 
  2765  0ED3                     	;# 
  2766  0ED4                     	;# 
  2767  0ED5                     	;# 
  2768  0ED6                     	;# 
  2769  0ED7                     	;# 
  2770  0ED8                     	;# 
  2771  0ED9                     	;# 
  2772  0EDA                     	;# 
  2773  0EDB                     	;# 
  2774  0EDC                     	;# 
  2775  0EDD                     	;# 
  2776  0EDE                     	;# 
  2777  0EDF                     	;# 
  2778  0EE0                     	;# 
  2779  0EE1                     	;# 
  2780  0EE1                     	;# 
  2781  0EE2                     	;# 
  2782  0EE3                     	;# 
  2783  0EE3                     	;# 
  2784  0EE4                     	;# 
  2785  0EE5                     	;# 
  2786  0EE5                     	;# 
  2787  0EE6                     	;# 
  2788  0EE7                     	;# 
  2789  0EE7                     	;# 
  2790  0EE8                     	;# 
  2791  0EE9                     	;# 
  2792  0EEA                     	;# 
  2793  0EEB                     	;# 
  2794  0EEC                     	;# 
  2795  0EED                     	;# 
  2796  0EEE                     	;# 
  2797  0EEF                     	;# 
  2798  0F11                     	;# 
  2799  0F12                     	;# 
  2800  0F13                     	;# 
  2801  0F14                     	;# 
  2802  0F15                     	;# 
  2803  0F16                     	;# 
  2804  0F17                     	;# 
  2805  0F18                     	;# 
  2806  0F19                     	;# 
  2807  0F1A                     	;# 
  2808  0F1B                     	;# 
  2809  0F1C                     	;# 
  2810  0F1D                     	;# 
  2811  0F1E                     	;# 
  2812  0F1F                     	;# 
  2813  0F20                     	;# 
  2814  0F21                     	;# 
  2815  0F21                     	;# 
  2816  0F22                     	;# 
  2817  0F23                     	;# 
  2818  0F23                     	;# 
  2819  0F24                     	;# 
  2820  0F25                     	;# 
  2821  0F25                     	;# 
  2822  0F26                     	;# 
  2823  0F27                     	;# 
  2824  0F27                     	;# 
  2825  0F28                     	;# 
  2826  0F29                     	;# 
  2827  0F2A                     	;# 
  2828  0F2B                     	;# 
  2829  0F2C                     	;# 
  2830  0F2D                     	;# 
  2831  0F2E                     	;# 
  2832  0F2F                     	;# 
  2833  0FE4                     	;# 
  2834  0FE5                     	;# 
  2835  0FE6                     	;# 
  2836  0FE7                     	;# 
  2837  0FE8                     	;# 
  2838  0FE9                     	;# 
  2839  0FEA                     	;# 
  2840  0FEB                     	;# 
  2841  0FED                     	;# 
  2842  0FEE                     	;# 
  2843  0FEF                     	;# 
  2844                           
  2845                           	psect	idataBANK4
  2846  2AC5                     __pidataBANK4:	
  2847                           
  2848                           ;initializer for _configReg
  2849  2AC5  3400               	retlw	0
  2850  2AC6  3490               	retlw	144
  2851  2AC7  341F               	retlw	31
  2852  2AC8  34C4               	retlw	196
  2853  2AC9  3400               	retlw	0
  2854  2ACA  3490               	retlw	144
  2855                           
  2856                           	psect	idataBANK5
  2857  2ACB                     __pidataBANK5:	
  2858                           
  2859                           ;initializer for _tempChannels
  2860  2ACB  340C               	retlw	12
  2861  2ACC  340A               	retlw	10
  2862  2ACD  3408               	retlw	8
  2863  2ACE  3409               	retlw	9
  2864  2ACF  340B               	retlw	11
  2865                           
  2866                           ;initializer for SSD1306_Test@F7528
  2867  2AD0  348D               	retlw	141
  2868  2AD1  3414               	retlw	20
  2869                           
  2870                           	psect	stringtext1
  2871  1000                     __pstringtext1:	
  2872  1000                     _OledFont:	
  2873  1000  3400               	retlw	0
  2874  1001  3400               	retlw	0
  2875  1002  3400               	retlw	0
  2876  1003  3400               	retlw	0
  2877  1004  3400               	retlw	0
  2878  1005  3400               	retlw	0
  2879  1006  3400               	retlw	0
  2880  1007  3400               	retlw	0
  2881  1008  3400               	retlw	0
  2882  1009  3400               	retlw	0
  2883  100A  345F               	retlw	95
  2884  100B  3400               	retlw	0
  2885  100C  3400               	retlw	0
  2886  100D  3400               	retlw	0
  2887  100E  3400               	retlw	0
  2888  100F  3400               	retlw	0
  2889  1010  3400               	retlw	0
  2890  1011  3400               	retlw	0
  2891  1012  3407               	retlw	7
  2892  1013  3400               	retlw	0
  2893  1014  3407               	retlw	7
  2894  1015  3400               	retlw	0
  2895  1016  3400               	retlw	0
  2896  1017  3400               	retlw	0
  2897  1018  3400               	retlw	0
  2898  1019  3414               	retlw	20
  2899  101A  347F               	retlw	127
  2900  101B  3414               	retlw	20
  2901  101C  347F               	retlw	127
  2902  101D  3414               	retlw	20
  2903  101E  3400               	retlw	0
  2904  101F  3400               	retlw	0
  2905  1020  3400               	retlw	0
  2906  1021  3424               	retlw	36
  2907  1022  342A               	retlw	42
  2908  1023  347F               	retlw	127
  2909  1024  342A               	retlw	42
  2910  1025  3412               	retlw	18
  2911  1026  3400               	retlw	0
  2912  1027  3400               	retlw	0
  2913  1028  3400               	retlw	0
  2914  1029  3423               	retlw	35
  2915  102A  3413               	retlw	19
  2916  102B  3408               	retlw	8
  2917  102C  3464               	retlw	100
  2918  102D  3462               	retlw	98
  2919  102E  3400               	retlw	0
  2920  102F  3400               	retlw	0
  2921  1030  3400               	retlw	0
  2922  1031  3436               	retlw	54
  2923  1032  3449               	retlw	73
  2924  1033  3455               	retlw	85
  2925  1034  3422               	retlw	34
  2926  1035  3450               	retlw	80
  2927  1036  3400               	retlw	0
  2928  1037  3400               	retlw	0
  2929  1038  3400               	retlw	0
  2930  1039  3400               	retlw	0
  2931  103A  3405               	retlw	5
  2932  103B  3403               	retlw	3
  2933  103C  3400               	retlw	0
  2934  103D  3400               	retlw	0
  2935  103E  3400               	retlw	0
  2936  103F  3400               	retlw	0
  2937  1040  3400               	retlw	0
  2938  1041  341C               	retlw	28
  2939  1042  3422               	retlw	34
  2940  1043  3441               	retlw	65
  2941  1044  3400               	retlw	0
  2942  1045  3400               	retlw	0
  2943  1046  3400               	retlw	0
  2944  1047  3400               	retlw	0
  2945  1048  3400               	retlw	0
  2946  1049  3441               	retlw	65
  2947  104A  3422               	retlw	34
  2948  104B  341C               	retlw	28
  2949  104C  3400               	retlw	0
  2950  104D  3400               	retlw	0
  2951  104E  3400               	retlw	0
  2952  104F  3400               	retlw	0
  2953  1050  3400               	retlw	0
  2954  1051  3408               	retlw	8
  2955  1052  342A               	retlw	42
  2956  1053  341C               	retlw	28
  2957  1054  342A               	retlw	42
  2958  1055  3408               	retlw	8
  2959  1056  3400               	retlw	0
  2960  1057  3400               	retlw	0
  2961  1058  3400               	retlw	0
  2962  1059  3408               	retlw	8
  2963  105A  3408               	retlw	8
  2964  105B  343E               	retlw	62
  2965  105C  3408               	retlw	8
  2966  105D  3408               	retlw	8
  2967  105E  3400               	retlw	0
  2968  105F  3400               	retlw	0
  2969  1060  3400               	retlw	0
  2970  1061  34A0               	retlw	160
  2971  1062  3460               	retlw	96
  2972  1063  3400               	retlw	0
  2973  1064  3400               	retlw	0
  2974  1065  3400               	retlw	0
  2975  1066  3400               	retlw	0
  2976  1067  3400               	retlw	0
  2977  1068  3400               	retlw	0
  2978  1069  3408               	retlw	8
  2979  106A  3408               	retlw	8
  2980  106B  3408               	retlw	8
  2981  106C  3408               	retlw	8
  2982  106D  3408               	retlw	8
  2983  106E  3400               	retlw	0
  2984  106F  3400               	retlw	0
  2985  1070  3400               	retlw	0
  2986  1071  3460               	retlw	96
  2987  1072  3460               	retlw	96
  2988  1073  3400               	retlw	0
  2989  1074  3400               	retlw	0
  2990  1075  3400               	retlw	0
  2991  1076  3400               	retlw	0
  2992  1077  3400               	retlw	0
  2993  1078  3400               	retlw	0
  2994  1079  3420               	retlw	32
  2995  107A  3410               	retlw	16
  2996  107B  3408               	retlw	8
  2997  107C  3404               	retlw	4
  2998  107D  3402               	retlw	2
  2999  107E  3400               	retlw	0
  3000  107F  3400               	retlw	0
  3001  1080  3400               	retlw	0
  3002  1081  343E               	retlw	62
  3003  1082  3451               	retlw	81
  3004  1083  3449               	retlw	73
  3005  1084  3445               	retlw	69
  3006  1085  343E               	retlw	62
  3007  1086  3400               	retlw	0
  3008  1087  3400               	retlw	0
  3009  1088  3400               	retlw	0
  3010  1089  3400               	retlw	0
  3011  108A  3442               	retlw	66
  3012  108B  347F               	retlw	127
  3013  108C  3440               	retlw	64
  3014  108D  3400               	retlw	0
  3015  108E  3400               	retlw	0
  3016  108F  3400               	retlw	0
  3017  1090  3400               	retlw	0
  3018  1091  3462               	retlw	98
  3019  1092  3451               	retlw	81
  3020  1093  3449               	retlw	73
  3021  1094  3449               	retlw	73
  3022  1095  3446               	retlw	70
  3023  1096  3400               	retlw	0
  3024  1097  3400               	retlw	0
  3025  1098  3400               	retlw	0
  3026  1099  3422               	retlw	34
  3027  109A  3441               	retlw	65
  3028  109B  3449               	retlw	73
  3029  109C  3449               	retlw	73
  3030  109D  3436               	retlw	54
  3031  109E  3400               	retlw	0
  3032  109F  3400               	retlw	0
  3033  10A0  3400               	retlw	0
  3034  10A1  3418               	retlw	24
  3035  10A2  3414               	retlw	20
  3036  10A3  3412               	retlw	18
  3037  10A4  347F               	retlw	127
  3038  10A5  3410               	retlw	16
  3039  10A6  3400               	retlw	0
  3040  10A7  3400               	retlw	0
  3041  10A8  3400               	retlw	0
  3042  10A9  3427               	retlw	39
  3043  10AA  3445               	retlw	69
  3044  10AB  3445               	retlw	69
  3045  10AC  3445               	retlw	69
  3046  10AD  3439               	retlw	57
  3047  10AE  3400               	retlw	0
  3048  10AF  3400               	retlw	0
  3049  10B0  3400               	retlw	0
  3050  10B1  343C               	retlw	60
  3051  10B2  344A               	retlw	74
  3052  10B3  3449               	retlw	73
  3053  10B4  3449               	retlw	73
  3054  10B5  3430               	retlw	48
  3055  10B6  3400               	retlw	0
  3056  10B7  3400               	retlw	0
  3057  10B8  3400               	retlw	0
  3058  10B9  3401               	retlw	1
  3059  10BA  3471               	retlw	113
  3060  10BB  3409               	retlw	9
  3061  10BC  3405               	retlw	5
  3062  10BD  3403               	retlw	3
  3063  10BE  3400               	retlw	0
  3064  10BF  3400               	retlw	0
  3065  10C0  3400               	retlw	0
  3066  10C1  3436               	retlw	54
  3067  10C2  3449               	retlw	73
  3068  10C3  3449               	retlw	73
  3069  10C4  3449               	retlw	73
  3070  10C5  3436               	retlw	54
  3071  10C6  3400               	retlw	0
  3072  10C7  3400               	retlw	0
  3073  10C8  3400               	retlw	0
  3074  10C9  3406               	retlw	6
  3075  10CA  3449               	retlw	73
  3076  10CB  3449               	retlw	73
  3077  10CC  3429               	retlw	41
  3078  10CD  341E               	retlw	30
  3079  10CE  3400               	retlw	0
  3080  10CF  3400               	retlw	0
  3081  10D0  3400               	retlw	0
  3082  10D1  3400               	retlw	0
  3083  10D2  3436               	retlw	54
  3084  10D3  3436               	retlw	54
  3085  10D4  3400               	retlw	0
  3086  10D5  3400               	retlw	0
  3087  10D6  3400               	retlw	0
  3088  10D7  3400               	retlw	0
  3089  10D8  3400               	retlw	0
  3090  10D9  3400               	retlw	0
  3091  10DA  34AC               	retlw	172
  3092  10DB  346C               	retlw	108
  3093  10DC  3400               	retlw	0
  3094  10DD  3400               	retlw	0
  3095  10DE  3400               	retlw	0
  3096  10DF  3400               	retlw	0
  3097  10E0  3400               	retlw	0
  3098  10E1  3408               	retlw	8
  3099  10E2  3414               	retlw	20
  3100  10E3  3422               	retlw	34
  3101  10E4  3441               	retlw	65
  3102  10E5  3400               	retlw	0
  3103  10E6  3400               	retlw	0
  3104  10E7  3400               	retlw	0
  3105  10E8  3400               	retlw	0
  3106  10E9  3414               	retlw	20
  3107  10EA  3414               	retlw	20
  3108  10EB  3414               	retlw	20
  3109  10EC  3414               	retlw	20
  3110  10ED  3414               	retlw	20
  3111  10EE  3400               	retlw	0
  3112  10EF  3400               	retlw	0
  3113  10F0  3400               	retlw	0
  3114  10F1  3441               	retlw	65
  3115  10F2  3422               	retlw	34
  3116  10F3  3414               	retlw	20
  3117  10F4  3408               	retlw	8
  3118  10F5  3400               	retlw	0
  3119  10F6  3400               	retlw	0
  3120  10F7  3400               	retlw	0
  3121  10F8  3400               	retlw	0
  3122  10F9  3402               	retlw	2
  3123  10FA  3401               	retlw	1
  3124  10FB  3451               	retlw	81
  3125  10FC  3409               	retlw	9
  3126  10FD  3406               	retlw	6
  3127  10FE  3400               	retlw	0
  3128  10FF  3400               	retlw	0
  3129  1100  3400               	retlw	0
  3130  1101  3432               	retlw	50
  3131  1102  3449               	retlw	73
  3132  1103  3479               	retlw	121
  3133  1104  3441               	retlw	65
  3134  1105  343E               	retlw	62
  3135  1106  3400               	retlw	0
  3136  1107  3400               	retlw	0
  3137  1108  3400               	retlw	0
  3138  1109  347E               	retlw	126
  3139  110A  3409               	retlw	9
  3140  110B  3409               	retlw	9
  3141  110C  3409               	retlw	9
  3142  110D  347E               	retlw	126
  3143  110E  3400               	retlw	0
  3144  110F  3400               	retlw	0
  3145  1110  3400               	retlw	0
  3146  1111  347F               	retlw	127
  3147  1112  3449               	retlw	73
  3148  1113  3449               	retlw	73
  3149  1114  3449               	retlw	73
  3150  1115  3436               	retlw	54
  3151  1116  3400               	retlw	0
  3152  1117  3400               	retlw	0
  3153  1118  3400               	retlw	0
  3154  1119  343E               	retlw	62
  3155  111A  3441               	retlw	65
  3156  111B  3441               	retlw	65
  3157  111C  3441               	retlw	65
  3158  111D  3422               	retlw	34
  3159  111E  3400               	retlw	0
  3160  111F  3400               	retlw	0
  3161  1120  3400               	retlw	0
  3162  1121  347F               	retlw	127
  3163  1122  3441               	retlw	65
  3164  1123  3441               	retlw	65
  3165  1124  3422               	retlw	34
  3166  1125  341C               	retlw	28
  3167  1126  3400               	retlw	0
  3168  1127  3400               	retlw	0
  3169  1128  3400               	retlw	0
  3170  1129  347F               	retlw	127
  3171  112A  3449               	retlw	73
  3172  112B  3449               	retlw	73
  3173  112C  3449               	retlw	73
  3174  112D  3441               	retlw	65
  3175  112E  3400               	retlw	0
  3176  112F  3400               	retlw	0
  3177  1130  3400               	retlw	0
  3178  1131  347F               	retlw	127
  3179  1132  3409               	retlw	9
  3180  1133  3409               	retlw	9
  3181  1134  3409               	retlw	9
  3182  1135  3401               	retlw	1
  3183  1136  3400               	retlw	0
  3184  1137  3400               	retlw	0
  3185  1138  3400               	retlw	0
  3186  1139  343E               	retlw	62
  3187  113A  3441               	retlw	65
  3188  113B  3441               	retlw	65
  3189  113C  3451               	retlw	81
  3190  113D  3472               	retlw	114
  3191  113E  3400               	retlw	0
  3192  113F  3400               	retlw	0
  3193  1140  3400               	retlw	0
  3194  1141  347F               	retlw	127
  3195  1142  3408               	retlw	8
  3196  1143  3408               	retlw	8
  3197  1144  3408               	retlw	8
  3198  1145  347F               	retlw	127
  3199  1146  3400               	retlw	0
  3200  1147  3400               	retlw	0
  3201  1148  3400               	retlw	0
  3202  1149  3441               	retlw	65
  3203  114A  347F               	retlw	127
  3204  114B  3441               	retlw	65
  3205  114C  3400               	retlw	0
  3206  114D  3400               	retlw	0
  3207  114E  3400               	retlw	0
  3208  114F  3400               	retlw	0
  3209  1150  3400               	retlw	0
  3210  1151  3420               	retlw	32
  3211  1152  3440               	retlw	64
  3212  1153  3441               	retlw	65
  3213  1154  343F               	retlw	63
  3214  1155  3401               	retlw	1
  3215  1156  3400               	retlw	0
  3216  1157  3400               	retlw	0
  3217  1158  3400               	retlw	0
  3218  1159  347F               	retlw	127
  3219  115A  3408               	retlw	8
  3220  115B  3414               	retlw	20
  3221  115C  3422               	retlw	34
  3222  115D  3441               	retlw	65
  3223  115E  3400               	retlw	0
  3224  115F  3400               	retlw	0
  3225  1160  3400               	retlw	0
  3226  1161  347F               	retlw	127
  3227  1162  3440               	retlw	64
  3228  1163  3440               	retlw	64
  3229  1164  3440               	retlw	64
  3230  1165  3440               	retlw	64
  3231  1166  3400               	retlw	0
  3232  1167  3400               	retlw	0
  3233  1168  3400               	retlw	0
  3234  1169  347F               	retlw	127
  3235  116A  3402               	retlw	2
  3236  116B  340C               	retlw	12
  3237  116C  3402               	retlw	2
  3238  116D  347F               	retlw	127
  3239  116E  3400               	retlw	0
  3240  116F  3400               	retlw	0
  3241  1170  3400               	retlw	0
  3242  1171  347F               	retlw	127
  3243  1172  3404               	retlw	4
  3244  1173  3408               	retlw	8
  3245  1174  3410               	retlw	16
  3246  1175  347F               	retlw	127
  3247  1176  3400               	retlw	0
  3248  1177  3400               	retlw	0
  3249  1178  3400               	retlw	0
  3250  1179  343E               	retlw	62
  3251  117A  3441               	retlw	65
  3252  117B  3441               	retlw	65
  3253  117C  3441               	retlw	65
  3254  117D  343E               	retlw	62
  3255  117E  3400               	retlw	0
  3256  117F  3400               	retlw	0
  3257  1180  3400               	retlw	0
  3258  1181  347F               	retlw	127
  3259  1182  3409               	retlw	9
  3260  1183  3409               	retlw	9
  3261  1184  3409               	retlw	9
  3262  1185  3406               	retlw	6
  3263  1186  3400               	retlw	0
  3264  1187  3400               	retlw	0
  3265  1188  3400               	retlw	0
  3266  1189  343E               	retlw	62
  3267  118A  3441               	retlw	65
  3268  118B  3451               	retlw	81
  3269  118C  3421               	retlw	33
  3270  118D  345E               	retlw	94
  3271  118E  3400               	retlw	0
  3272  118F  3400               	retlw	0
  3273  1190  3400               	retlw	0
  3274  1191  347F               	retlw	127
  3275  1192  3409               	retlw	9
  3276  1193  3419               	retlw	25
  3277  1194  3429               	retlw	41
  3278  1195  3446               	retlw	70
  3279  1196  3400               	retlw	0
  3280  1197  3400               	retlw	0
  3281  1198  3400               	retlw	0
  3282  1199  3426               	retlw	38
  3283  119A  3449               	retlw	73
  3284  119B  3449               	retlw	73
  3285  119C  3449               	retlw	73
  3286  119D  3432               	retlw	50
  3287  119E  3400               	retlw	0
  3288  119F  3400               	retlw	0
  3289  11A0  3400               	retlw	0
  3290  11A1  3401               	retlw	1
  3291  11A2  3401               	retlw	1
  3292  11A3  347F               	retlw	127
  3293  11A4  3401               	retlw	1
  3294  11A5  3401               	retlw	1
  3295  11A6  3400               	retlw	0
  3296  11A7  3400               	retlw	0
  3297  11A8  3400               	retlw	0
  3298  11A9  343F               	retlw	63
  3299  11AA  3440               	retlw	64
  3300  11AB  3440               	retlw	64
  3301  11AC  3440               	retlw	64
  3302  11AD  343F               	retlw	63
  3303  11AE  3400               	retlw	0
  3304  11AF  3400               	retlw	0
  3305  11B0  3400               	retlw	0
  3306  11B1  341F               	retlw	31
  3307  11B2  3420               	retlw	32
  3308  11B3  3440               	retlw	64
  3309  11B4  3420               	retlw	32
  3310  11B5  341F               	retlw	31
  3311  11B6  3400               	retlw	0
  3312  11B7  3400               	retlw	0
  3313  11B8  3400               	retlw	0
  3314  11B9  343F               	retlw	63
  3315  11BA  3440               	retlw	64
  3316  11BB  3438               	retlw	56
  3317  11BC  3440               	retlw	64
  3318  11BD  343F               	retlw	63
  3319  11BE  3400               	retlw	0
  3320  11BF  3400               	retlw	0
  3321  11C0  3400               	retlw	0
  3322  11C1  3463               	retlw	99
  3323  11C2  3414               	retlw	20
  3324  11C3  3408               	retlw	8
  3325  11C4  3414               	retlw	20
  3326  11C5  3463               	retlw	99
  3327  11C6  3400               	retlw	0
  3328  11C7  3400               	retlw	0
  3329  11C8  3400               	retlw	0
  3330  11C9  3403               	retlw	3
  3331  11CA  3404               	retlw	4
  3332  11CB  3478               	retlw	120
  3333  11CC  3404               	retlw	4
  3334  11CD  3403               	retlw	3
  3335  11CE  3400               	retlw	0
  3336  11CF  3400               	retlw	0
  3337  11D0  3400               	retlw	0
  3338  11D1  3461               	retlw	97
  3339  11D2  3451               	retlw	81
  3340  11D3  3449               	retlw	73
  3341  11D4  3445               	retlw	69
  3342  11D5  3443               	retlw	67
  3343  11D6  3400               	retlw	0
  3344  11D7  3400               	retlw	0
  3345  11D8  3400               	retlw	0
  3346  11D9  347F               	retlw	127
  3347  11DA  3441               	retlw	65
  3348  11DB  3441               	retlw	65
  3349  11DC  3400               	retlw	0
  3350  11DD  3400               	retlw	0
  3351  11DE  3400               	retlw	0
  3352  11DF  3400               	retlw	0
  3353  11E0  3400               	retlw	0
  3354  11E1  3402               	retlw	2
  3355  11E2  3404               	retlw	4
  3356  11E3  3408               	retlw	8
  3357  11E4  3410               	retlw	16
  3358  11E5  3420               	retlw	32
  3359  11E6  3400               	retlw	0
  3360  11E7  3400               	retlw	0
  3361  11E8  3400               	retlw	0
  3362  11E9  3441               	retlw	65
  3363  11EA  3441               	retlw	65
  3364  11EB  347F               	retlw	127
  3365  11EC  3400               	retlw	0
  3366  11ED  3400               	retlw	0
  3367  11EE  3400               	retlw	0
  3368  11EF  3400               	retlw	0
  3369  11F0  3400               	retlw	0
  3370  11F1  3404               	retlw	4
  3371  11F2  3402               	retlw	2
  3372  11F3  3401               	retlw	1
  3373  11F4  3402               	retlw	2
  3374  11F5  3404               	retlw	4
  3375  11F6  3400               	retlw	0
  3376  11F7  3400               	retlw	0
  3377  11F8  3400               	retlw	0
  3378  11F9  3480               	retlw	128
  3379  11FA  3480               	retlw	128
  3380  11FB  3480               	retlw	128
  3381  11FC  3480               	retlw	128
  3382  11FD  3480               	retlw	128
  3383  11FE  3400               	retlw	0
  3384  11FF  3400               	retlw	0
  3385  1200  3400               	retlw	0
  3386  1201  3401               	retlw	1
  3387  1202  3402               	retlw	2
  3388  1203  3404               	retlw	4
  3389  1204  3400               	retlw	0
  3390  1205  3400               	retlw	0
  3391  1206  3400               	retlw	0
  3392  1207  3400               	retlw	0
  3393  1208  3400               	retlw	0
  3394  1209  3420               	retlw	32
  3395  120A  3454               	retlw	84
  3396  120B  3454               	retlw	84
  3397  120C  3454               	retlw	84
  3398  120D  3478               	retlw	120
  3399  120E  3400               	retlw	0
  3400  120F  3400               	retlw	0
  3401  1210  3400               	retlw	0
  3402  1211  347F               	retlw	127
  3403  1212  3448               	retlw	72
  3404  1213  3444               	retlw	68
  3405  1214  3444               	retlw	68
  3406  1215  3438               	retlw	56
  3407  1216  3400               	retlw	0
  3408  1217  3400               	retlw	0
  3409  1218  3400               	retlw	0
  3410  1219  3438               	retlw	56
  3411  121A  3444               	retlw	68
  3412  121B  3444               	retlw	68
  3413  121C  3428               	retlw	40
  3414  121D  3400               	retlw	0
  3415  121E  3400               	retlw	0
  3416  121F  3400               	retlw	0
  3417  1220  3400               	retlw	0
  3418  1221  3438               	retlw	56
  3419  1222  3444               	retlw	68
  3420  1223  3444               	retlw	68
  3421  1224  3448               	retlw	72
  3422  1225  347F               	retlw	127
  3423  1226  3400               	retlw	0
  3424  1227  3400               	retlw	0
  3425  1228  3400               	retlw	0
  3426  1229  3438               	retlw	56
  3427  122A  3454               	retlw	84
  3428  122B  3454               	retlw	84
  3429  122C  3454               	retlw	84
  3430  122D  3418               	retlw	24
  3431  122E  3400               	retlw	0
  3432  122F  3400               	retlw	0
  3433  1230  3400               	retlw	0
  3434  1231  3408               	retlw	8
  3435  1232  347E               	retlw	126
  3436  1233  3409               	retlw	9
  3437  1234  3402               	retlw	2
  3438  1235  3400               	retlw	0
  3439  1236  3400               	retlw	0
  3440  1237  3400               	retlw	0
  3441  1238  3400               	retlw	0
  3442  1239  3418               	retlw	24
  3443  123A  34A4               	retlw	164
  3444  123B  34A4               	retlw	164
  3445  123C  34A4               	retlw	164
  3446  123D  347C               	retlw	124
  3447  123E  3400               	retlw	0
  3448  123F  3400               	retlw	0
  3449  1240  3400               	retlw	0
  3450  1241  347F               	retlw	127
  3451  1242  3408               	retlw	8
  3452  1243  3404               	retlw	4
  3453  1244  3404               	retlw	4
  3454  1245  3478               	retlw	120
  3455  1246  3400               	retlw	0
  3456  1247  3400               	retlw	0
  3457  1248  3400               	retlw	0
  3458  1249  3400               	retlw	0
  3459  124A  347D               	retlw	125
  3460  124B  3400               	retlw	0
  3461  124C  3400               	retlw	0
  3462  124D  3400               	retlw	0
  3463  124E  3400               	retlw	0
  3464  124F  3400               	retlw	0
  3465  1250  3400               	retlw	0
  3466  1251  3480               	retlw	128
  3467  1252  3484               	retlw	132
  3468  1253  347D               	retlw	125
  3469  1254  3400               	retlw	0
  3470  1255  3400               	retlw	0
  3471  1256  3400               	retlw	0
  3472  1257  3400               	retlw	0
  3473  1258  3400               	retlw	0
  3474  1259  347F               	retlw	127
  3475  125A  3410               	retlw	16
  3476  125B  3428               	retlw	40
  3477  125C  3444               	retlw	68
  3478  125D  3400               	retlw	0
  3479  125E  3400               	retlw	0
  3480  125F  3400               	retlw	0
  3481  1260  3400               	retlw	0
  3482  1261  3441               	retlw	65
  3483  1262  347F               	retlw	127
  3484  1263  3440               	retlw	64
  3485  1264  3400               	retlw	0
  3486  1265  3400               	retlw	0
  3487  1266  3400               	retlw	0
  3488  1267  3400               	retlw	0
  3489  1268  3400               	retlw	0
  3490  1269  347C               	retlw	124
  3491  126A  3404               	retlw	4
  3492  126B  3418               	retlw	24
  3493  126C  3404               	retlw	4
  3494  126D  3478               	retlw	120
  3495  126E  3400               	retlw	0
  3496  126F  3400               	retlw	0
  3497  1270  3400               	retlw	0
  3498  1271  347C               	retlw	124
  3499  1272  3408               	retlw	8
  3500  1273  3404               	retlw	4
  3501  1274  347C               	retlw	124
  3502  1275  3400               	retlw	0
  3503  1276  3400               	retlw	0
  3504  1277  3400               	retlw	0
  3505  1278  3400               	retlw	0
  3506  1279  3438               	retlw	56
  3507  127A  3444               	retlw	68
  3508  127B  3444               	retlw	68
  3509  127C  3438               	retlw	56
  3510  127D  3400               	retlw	0
  3511  127E  3400               	retlw	0
  3512  127F  3400               	retlw	0
  3513  1280  3400               	retlw	0
  3514  1281  34FC               	retlw	252
  3515  1282  3424               	retlw	36
  3516  1283  3424               	retlw	36
  3517  1284  3418               	retlw	24
  3518  1285  3400               	retlw	0
  3519  1286  3400               	retlw	0
  3520  1287  3400               	retlw	0
  3521  1288  3400               	retlw	0
  3522  1289  3418               	retlw	24
  3523  128A  3424               	retlw	36
  3524  128B  3424               	retlw	36
  3525  128C  34FC               	retlw	252
  3526  128D  3400               	retlw	0
  3527  128E  3400               	retlw	0
  3528  128F  3400               	retlw	0
  3529  1290  3400               	retlw	0
  3530  1291  3400               	retlw	0
  3531  1292  347C               	retlw	124
  3532  1293  3408               	retlw	8
  3533  1294  3404               	retlw	4
  3534  1295  3400               	retlw	0
  3535  1296  3400               	retlw	0
  3536  1297  3400               	retlw	0
  3537  1298  3400               	retlw	0
  3538  1299  3448               	retlw	72
  3539  129A  3454               	retlw	84
  3540  129B  3454               	retlw	84
  3541  129C  3424               	retlw	36
  3542  129D  3400               	retlw	0
  3543  129E  3400               	retlw	0
  3544  129F  3400               	retlw	0
  3545  12A0  3400               	retlw	0
  3546  12A1  3404               	retlw	4
  3547  12A2  347F               	retlw	127
  3548  12A3  3444               	retlw	68
  3549  12A4  3400               	retlw	0
  3550  12A5  3400               	retlw	0
  3551  12A6  3400               	retlw	0
  3552  12A7  3400               	retlw	0
  3553  12A8  3400               	retlw	0
  3554  12A9  343C               	retlw	60
  3555  12AA  3440               	retlw	64
  3556  12AB  3440               	retlw	64
  3557  12AC  347C               	retlw	124
  3558  12AD  3400               	retlw	0
  3559  12AE  3400               	retlw	0
  3560  12AF  3400               	retlw	0
  3561  12B0  3400               	retlw	0
  3562  12B1  341C               	retlw	28
  3563  12B2  3420               	retlw	32
  3564  12B3  3440               	retlw	64
  3565  12B4  3420               	retlw	32
  3566  12B5  341C               	retlw	28
  3567  12B6  3400               	retlw	0
  3568  12B7  3400               	retlw	0
  3569  12B8  3400               	retlw	0
  3570  12B9  343C               	retlw	60
  3571  12BA  3440               	retlw	64
  3572  12BB  3430               	retlw	48
  3573  12BC  3440               	retlw	64
  3574  12BD  343C               	retlw	60
  3575  12BE  3400               	retlw	0
  3576  12BF  3400               	retlw	0
  3577  12C0  3400               	retlw	0
  3578  12C1  3444               	retlw	68
  3579  12C2  3428               	retlw	40
  3580  12C3  3410               	retlw	16
  3581  12C4  3428               	retlw	40
  3582  12C5  3444               	retlw	68
  3583  12C6  3400               	retlw	0
  3584  12C7  3400               	retlw	0
  3585  12C8  3400               	retlw	0
  3586  12C9  341C               	retlw	28
  3587  12CA  34A0               	retlw	160
  3588  12CB  34A0               	retlw	160
  3589  12CC  347C               	retlw	124
  3590  12CD  3400               	retlw	0
  3591  12CE  3400               	retlw	0
  3592  12CF  3400               	retlw	0
  3593  12D0  3400               	retlw	0
  3594  12D1  3444               	retlw	68
  3595  12D2  3464               	retlw	100
  3596  12D3  3454               	retlw	84
  3597  12D4  344C               	retlw	76
  3598  12D5  3444               	retlw	68
  3599  12D6  3400               	retlw	0
  3600  12D7  3400               	retlw	0
  3601  12D8  3400               	retlw	0
  3602  12D9  3408               	retlw	8
  3603  12DA  3436               	retlw	54
  3604  12DB  3441               	retlw	65
  3605  12DC  3400               	retlw	0
  3606  12DD  3400               	retlw	0
  3607  12DE  3400               	retlw	0
  3608  12DF  3400               	retlw	0
  3609  12E0  3400               	retlw	0
  3610  12E1  3400               	retlw	0
  3611  12E2  347F               	retlw	127
  3612  12E3  3400               	retlw	0
  3613  12E4  3400               	retlw	0
  3614  12E5  3400               	retlw	0
  3615  12E6  3400               	retlw	0
  3616  12E7  3400               	retlw	0
  3617  12E8  3400               	retlw	0
  3618  12E9  3441               	retlw	65
  3619  12EA  3436               	retlw	54
  3620  12EB  3408               	retlw	8
  3621  12EC  3400               	retlw	0
  3622  12ED  3400               	retlw	0
  3623  12EE  3400               	retlw	0
  3624  12EF  3400               	retlw	0
  3625  12F0  3400               	retlw	0
  3626  12F1  3402               	retlw	2
  3627  12F2  3401               	retlw	1
  3628  12F3  3401               	retlw	1
  3629  12F4  3402               	retlw	2
  3630  12F5  3401               	retlw	1
  3631  12F6  3400               	retlw	0
  3632  12F7  3400               	retlw	0
  3633  12F8  3400               	retlw	0
  3634  12F9  3402               	retlw	2
  3635  12FA  3405               	retlw	5
  3636  12FB  3405               	retlw	5
  3637  12FC  3402               	retlw	2
  3638  12FD  3400               	retlw	0
  3639  12FE  3400               	retlw	0
  3640  12FF  3400               	retlw	0
  3641  1300                     __end_of_OledFont:	
  3642                           
  3643                           	psect	stringtext2
  3644  1800                     __pstringtext2:	
  3645  1800                     ltc6804@crc15Table:	
  3646  1800  3400               	retlw	0
  3647  1801  3400               	retlw	0
  3648  1802  3499               	retlw	153
  3649  1803  34C5               	retlw	197
  3650  1804  34AB               	retlw	171
  3651  1805  34CE               	retlw	206
  3652  1806  3432               	retlw	50
  3653  1807  340B               	retlw	11
  3654  1808  34CF               	retlw	207
  3655  1809  34D8               	retlw	216
  3656  180A  3456               	retlw	86
  3657  180B  341D               	retlw	29
  3658  180C  3464               	retlw	100
  3659  180D  3416               	retlw	22
  3660  180E  34FD               	retlw	253
  3661  180F  34D3               	retlw	211
  3662  1810  3407               	retlw	7
  3663  1811  34F4               	retlw	244
  3664  1812  349E               	retlw	158
  3665  1813  3431               	retlw	49
  3666  1814  34AC               	retlw	172
  3667  1815  343A               	retlw	58
  3668  1816  3435               	retlw	53
  3669  1817  34FF               	retlw	255
  3670  1818  34C8               	retlw	200
  3671  1819  342C               	retlw	44
  3672  181A  3451               	retlw	81
  3673  181B  34E9               	retlw	233
  3674  181C  3463               	retlw	99
  3675  181D  34E2               	retlw	226
  3676  181E  34FA               	retlw	250
  3677  181F  3427               	retlw	39
  3678  1820  3497               	retlw	151
  3679  1821  34AD               	retlw	173
  3680  1822  340E               	retlw	14
  3681  1823  3468               	retlw	104
  3682  1824  343C               	retlw	60
  3683  1825  3463               	retlw	99
  3684  1826  34A5               	retlw	165
  3685  1827  34A6               	retlw	166
  3686  1828  3458               	retlw	88
  3687  1829  3475               	retlw	117
  3688  182A  34C1               	retlw	193
  3689  182B  34B0               	retlw	176
  3690  182C  34F3               	retlw	243
  3691  182D  34BB               	retlw	187
  3692  182E  346A               	retlw	106
  3693  182F  347E               	retlw	126
  3694  1830  3490               	retlw	144
  3695  1831  3459               	retlw	89
  3696  1832  3409               	retlw	9
  3697  1833  349C               	retlw	156
  3698  1834  343B               	retlw	59
  3699  1835  3497               	retlw	151
  3700  1836  34A2               	retlw	162
  3701  1837  3452               	retlw	82
  3702  1838  345F               	retlw	95
  3703  1839  3481               	retlw	129
  3704  183A  34C6               	retlw	198
  3705  183B  3444               	retlw	68
  3706  183C  34F4               	retlw	244
  3707  183D  344F               	retlw	79
  3708  183E  346D               	retlw	109
  3709  183F  348A               	retlw	138
  3710  1840  342E               	retlw	46
  3711  1841  345B               	retlw	91
  3712  1842  34B7               	retlw	183
  3713  1843  349E               	retlw	158
  3714  1844  3485               	retlw	133
  3715  1845  3495               	retlw	149
  3716  1846  341C               	retlw	28
  3717  1847  3450               	retlw	80
  3718  1848  34E1               	retlw	225
  3719  1849  3483               	retlw	131
  3720  184A  3478               	retlw	120
  3721  184B  3446               	retlw	70
  3722  184C  344A               	retlw	74
  3723  184D  344D               	retlw	77
  3724  184E  34D3               	retlw	211
  3725  184F  3488               	retlw	136
  3726  1850  3429               	retlw	41
  3727  1851  34AF               	retlw	175
  3728  1852  34B0               	retlw	176
  3729  1853  346A               	retlw	106
  3730  1854  3482               	retlw	130
  3731  1855  3461               	retlw	97
  3732  1856  341B               	retlw	27
  3733  1857  34A4               	retlw	164
  3734  1858  34E6               	retlw	230
  3735  1859  3477               	retlw	119
  3736  185A  347F               	retlw	127
  3737  185B  34B2               	retlw	178
  3738  185C  344D               	retlw	77
  3739  185D  34B9               	retlw	185
  3740  185E  34D4               	retlw	212
  3741  185F  347C               	retlw	124
  3742  1860  34B9               	retlw	185
  3743  1861  34F6               	retlw	246
  3744  1862  3420               	retlw	32
  3745  1863  3433               	retlw	51
  3746  1864  3412               	retlw	18
  3747  1865  3438               	retlw	56
  3748  1866  348B               	retlw	139
  3749  1867  34FD               	retlw	253
  3750  1868  3476               	retlw	118
  3751  1869  342E               	retlw	46
  3752  186A  34EF               	retlw	239
  3753  186B  34EB               	retlw	235
  3754  186C  34DD               	retlw	221
  3755  186D  34E0               	retlw	224
  3756  186E  3444               	retlw	68
  3757  186F  3425               	retlw	37
  3758  1870  34BE               	retlw	190
  3759  1871  3402               	retlw	2
  3760  1872  3427               	retlw	39
  3761  1873  34C7               	retlw	199
  3762  1874  3415               	retlw	21
  3763  1875  34CC               	retlw	204
  3764  1876  348C               	retlw	140
  3765  1877  3409               	retlw	9
  3766  1878  3471               	retlw	113
  3767  1879  34DA               	retlw	218
  3768  187A  34E8               	retlw	232
  3769  187B  341F               	retlw	31
  3770  187C  34DA               	retlw	218
  3771  187D  3414               	retlw	20
  3772  187E  3443               	retlw	67
  3773  187F  34D1               	retlw	209
  3774  1880  34C5               	retlw	197
  3775  1881  34F3               	retlw	243
  3776  1882  345C               	retlw	92
  3777  1883  3436               	retlw	54
  3778  1884  346E               	retlw	110
  3779  1885  343D               	retlw	61
  3780  1886  34F7               	retlw	247
  3781  1887  34F8               	retlw	248
  3782  1888  340A               	retlw	10
  3783  1889  342B               	retlw	43
  3784  188A  3493               	retlw	147
  3785  188B  34EE               	retlw	238
  3786  188C  34A1               	retlw	161
  3787  188D  34E5               	retlw	229
  3788  188E  3438               	retlw	56
  3789  188F  3420               	retlw	32
  3790  1890  34C2               	retlw	194
  3791  1891  3407               	retlw	7
  3792  1892  345B               	retlw	91
  3793  1893  34C2               	retlw	194
  3794  1894  3469               	retlw	105
  3795  1895  34C9               	retlw	201
  3796  1896  34F0               	retlw	240
  3797  1897  340C               	retlw	12
  3798  1898  340D               	retlw	13
  3799  1899  34DF               	retlw	223
  3800  189A  3494               	retlw	148
  3801  189B  341A               	retlw	26
  3802  189C  34A6               	retlw	166
  3803  189D  3411               	retlw	17
  3804  189E  343F               	retlw	63
  3805  189F  34D4               	retlw	212
  3806  18A0  3452               	retlw	82
  3807  18A1  345E               	retlw	94
  3808  18A2  34CB               	retlw	203
  3809  18A3  349B               	retlw	155
  3810  18A4  34F9               	retlw	249
  3811  18A5  3490               	retlw	144
  3812  18A6  3460               	retlw	96
  3813  18A7  3455               	retlw	85
  3814  18A8  349D               	retlw	157
  3815  18A9  3486               	retlw	134
  3816  18AA  3404               	retlw	4
  3817  18AB  3443               	retlw	67
  3818  18AC  3436               	retlw	54
  3819  18AD  3448               	retlw	72
  3820  18AE  34AF               	retlw	175
  3821  18AF  348D               	retlw	141
  3822  18B0  3455               	retlw	85
  3823  18B1  34AA               	retlw	170
  3824  18B2  34CC               	retlw	204
  3825  18B3  346F               	retlw	111
  3826  18B4  34FE               	retlw	254
  3827  18B5  3464               	retlw	100
  3828  18B6  3467               	retlw	103
  3829  18B7  34A1               	retlw	161
  3830  18B8  349A               	retlw	154
  3831  18B9  3472               	retlw	114
  3832  18BA  3403               	retlw	3
  3833  18BB  34B7               	retlw	183
  3834  18BC  3431               	retlw	49
  3835  18BD  34BC               	retlw	188
  3836  18BE  34A8               	retlw	168
  3837  18BF  3479               	retlw	121
  3838  18C0  34EB               	retlw	235
  3839  18C1  34A8               	retlw	168
  3840  18C2  3472               	retlw	114
  3841  18C3  346D               	retlw	109
  3842  18C4  3440               	retlw	64
  3843  18C5  3466               	retlw	102
  3844  18C6  34D9               	retlw	217
  3845  18C7  34A3               	retlw	163
  3846  18C8  3424               	retlw	36
  3847  18C9  3470               	retlw	112
  3848  18CA  34BD               	retlw	189
  3849  18CB  34B5               	retlw	181
  3850  18CC  348F               	retlw	143
  3851  18CD  34BE               	retlw	190
  3852  18CE  3416               	retlw	22
  3853  18CF  347B               	retlw	123
  3854  18D0  34EC               	retlw	236
  3855  18D1  345C               	retlw	92
  3856  18D2  3475               	retlw	117
  3857  18D3  3499               	retlw	153
  3858  18D4  3447               	retlw	71
  3859  18D5  3492               	retlw	146
  3860  18D6  34DE               	retlw	222
  3861  18D7  3457               	retlw	87
  3862  18D8  3423               	retlw	35
  3863  18D9  3484               	retlw	132
  3864  18DA  34BA               	retlw	186
  3865  18DB  3441               	retlw	65
  3866  18DC  3488               	retlw	136
  3867  18DD  344A               	retlw	74
  3868  18DE  3411               	retlw	17
  3869  18DF  348F               	retlw	143
  3870  18E0  347C               	retlw	124
  3871  18E1  3405               	retlw	5
  3872  18E2  34E5               	retlw	229
  3873  18E3  34C0               	retlw	192
  3874  18E4  34D7               	retlw	215
  3875  18E5  34CB               	retlw	203
  3876  18E6  344E               	retlw	78
  3877  18E7  340E               	retlw	14
  3878  18E8  34B3               	retlw	179
  3879  18E9  34DD               	retlw	221
  3880  18EA  342A               	retlw	42
  3881  18EB  3418               	retlw	24
  3882  18EC  3418               	retlw	24
  3883  18ED  3413               	retlw	19
  3884  18EE  3481               	retlw	129
  3885  18EF  34D6               	retlw	214
  3886  18F0  347B               	retlw	123
  3887  18F1  34F1               	retlw	241
  3888  18F2  34E2               	retlw	226
  3889  18F3  3434               	retlw	52
  3890  18F4  34D0               	retlw	208
  3891  18F5  343F               	retlw	63
  3892  18F6  3449               	retlw	73
  3893  18F7  34FA               	retlw	250
  3894  18F8  34B4               	retlw	180
  3895  18F9  3429               	retlw	41
  3896  18FA  342D               	retlw	45
  3897  18FB  34EC               	retlw	236
  3898  18FC  341F               	retlw	31
  3899  18FD  34E7               	retlw	231
  3900  18FE  3486               	retlw	134
  3901  18FF  3422               	retlw	34
  3902  1900  3413               	retlw	19
  3903  1901  34A2               	retlw	162
  3904  1902  348A               	retlw	138
  3905  1903  3467               	retlw	103
  3906  1904  34B8               	retlw	184
  3907  1905  346C               	retlw	108
  3908  1906  3421               	retlw	33
  3909  1907  34A9               	retlw	169
  3910  1908  34DC               	retlw	220
  3911  1909  347A               	retlw	122
  3912  190A  3445               	retlw	69
  3913  190B  34BF               	retlw	191
  3914  190C  3477               	retlw	119
  3915  190D  34B4               	retlw	180
  3916  190E  34EE               	retlw	238
  3917  190F  3471               	retlw	113
  3918  1910  3414               	retlw	20
  3919  1911  3456               	retlw	86
  3920  1912  348D               	retlw	141
  3921  1913  3493               	retlw	147
  3922  1914  34BF               	retlw	191
  3923  1915  3498               	retlw	152
  3924  1916  3426               	retlw	38
  3925  1917  345D               	retlw	93
  3926  1918  34DB               	retlw	219
  3927  1919  348E               	retlw	142
  3928  191A  3442               	retlw	66
  3929  191B  344B               	retlw	75
  3930  191C  3470               	retlw	112
  3931  191D  3440               	retlw	64
  3932  191E  34E9               	retlw	233
  3933  191F  3485               	retlw	133
  3934  1920  3484               	retlw	132
  3935  1921  340F               	retlw	15
  3936  1922  341D               	retlw	29
  3937  1923  34CA               	retlw	202
  3938  1924  342F               	retlw	47
  3939  1925  34C1               	retlw	193
  3940  1926  346F               	retlw	111
  3941  1927  344B               	retlw	75
  3942  1928  344B               	retlw	75
  3943  1929  34D7               	retlw	215
  3944  192A  34D2               	retlw	210
  3945  192B  3412               	retlw	18
  3946  192C  34E0               	retlw	224
  3947  192D  3419               	retlw	25
  3948  192E  3479               	retlw	121
  3949  192F  34DC               	retlw	220
  3950  1930  3483               	retlw	131
  3951  1931  34FB               	retlw	251
  3952  1932  341A               	retlw	26
  3953  1933  343E               	retlw	62
  3954  1934  3428               	retlw	40
  3955  1935  3435               	retlw	53
  3956  1936  34B1               	retlw	177
  3957  1937  34F0               	retlw	240
  3958  1938  344C               	retlw	76
  3959  1939  3423               	retlw	35
  3960  193A  34D5               	retlw	213
  3961  193B  34E6               	retlw	230
  3962  193C  34E7               	retlw	231
  3963  193D  34ED               	retlw	237
  3964  193E  347E               	retlw	126
  3965  193F  3428               	retlw	40
  3966  1940  343D               	retlw	61
  3967  1941  34F9               	retlw	249
  3968  1942  34A4               	retlw	164
  3969  1943  343C               	retlw	60
  3970  1944  3496               	retlw	150
  3971  1945  3437               	retlw	55
  3972  1946  340F               	retlw	15
  3973  1947  34F2               	retlw	242
  3974  1948  34F2               	retlw	242
  3975  1949  3421               	retlw	33
  3976  194A  346B               	retlw	107
  3977  194B  34E4               	retlw	228
  3978  194C  3459               	retlw	89
  3979  194D  34EF               	retlw	239
  3980  194E  34C0               	retlw	192
  3981  194F  342A               	retlw	42
  3982  1950  343A               	retlw	58
  3983  1951  340D               	retlw	13
  3984  1952  34A3               	retlw	163
  3985  1953  34C8               	retlw	200
  3986  1954  3491               	retlw	145
  3987  1955  34C3               	retlw	195
  3988  1956  3408               	retlw	8
  3989  1957  3406               	retlw	6
  3990  1958  34F5               	retlw	245
  3991  1959  34D5               	retlw	213
  3992  195A  346C               	retlw	108
  3993  195B  3410               	retlw	16
  3994  195C  345E               	retlw	94
  3995  195D  341B               	retlw	27
  3996  195E  34C7               	retlw	199
  3997  195F  34DE               	retlw	222
  3998  1960  34AA               	retlw	170
  3999  1961  3454               	retlw	84
  4000  1962  3433               	retlw	51
  4001  1963  3491               	retlw	145
  4002  1964  3401               	retlw	1
  4003  1965  349A               	retlw	154
  4004  1966  3498               	retlw	152
  4005  1967  345F               	retlw	95
  4006  1968  3465               	retlw	101
  4007  1969  348C               	retlw	140
  4008  196A  34FC               	retlw	252
  4009  196B  3449               	retlw	73
  4010  196C  34CE               	retlw	206
  4011  196D  3442               	retlw	66
  4012  196E  3457               	retlw	87
  4013  196F  3487               	retlw	135
  4014  1970  34AD               	retlw	173
  4015  1971  34A0               	retlw	160
  4016  1972  3434               	retlw	52
  4017  1973  3465               	retlw	101
  4018  1974  3406               	retlw	6
  4019  1975  346E               	retlw	110
  4020  1976  349F               	retlw	159
  4021  1977  34AB               	retlw	171
  4022  1978  3462               	retlw	98
  4023  1979  3478               	retlw	120
  4024  197A  34FB               	retlw	251
  4025  197B  34BD               	retlw	189
  4026  197C  34C9               	retlw	201
  4027  197D  34B6               	retlw	182
  4028  197E  3450               	retlw	80
  4029  197F  3473               	retlw	115
  4030  1980  34D6               	retlw	214
  4031  1981  3451               	retlw	81
  4032  1982  344F               	retlw	79
  4033  1983  3494               	retlw	148
  4034  1984  347D               	retlw	125
  4035  1985  349F               	retlw	159
  4036  1986  34E4               	retlw	228
  4037  1987  345A               	retlw	90
  4038  1988  3419               	retlw	25
  4039  1989  3489               	retlw	137
  4040  198A  3480               	retlw	128
  4041  198B  344C               	retlw	76
  4042  198C  34B2               	retlw	178
  4043  198D  3447               	retlw	71
  4044  198E  342B               	retlw	43
  4045  198F  3482               	retlw	130
  4046  1990  34D1               	retlw	209
  4047  1991  34A5               	retlw	165
  4048  1992  3448               	retlw	72
  4049  1993  3460               	retlw	96
  4050  1994  347A               	retlw	122
  4051  1995  346B               	retlw	107
  4052  1996  34E3               	retlw	227
  4053  1997  34AE               	retlw	174
  4054  1998  341E               	retlw	30
  4055  1999  347D               	retlw	125
  4056  199A  3487               	retlw	135
  4057  199B  34B8               	retlw	184
  4058  199C  34B5               	retlw	181
  4059  199D  34B3               	retlw	179
  4060  199E  342C               	retlw	44
  4061  199F  3476               	retlw	118
  4062  19A0  3441               	retlw	65
  4063  19A1  34FC               	retlw	252
  4064  19A2  34D8               	retlw	216
  4065  19A3  3439               	retlw	57
  4066  19A4  34EA               	retlw	234
  4067  19A5  3432               	retlw	50
  4068  19A6  3473               	retlw	115
  4069  19A7  34F7               	retlw	247
  4070  19A8  348E               	retlw	142
  4071  19A9  3424               	retlw	36
  4072  19AA  3417               	retlw	23
  4073  19AB  34E1               	retlw	225
  4074  19AC  3425               	retlw	37
  4075  19AD  34EA               	retlw	234
  4076  19AE  34BC               	retlw	188
  4077  19AF  342F               	retlw	47
  4078  19B0  3446               	retlw	70
  4079  19B1  3408               	retlw	8
  4080  19B2  34DF               	retlw	223
  4081  19B3  34CD               	retlw	205
  4082  19B4  34ED               	retlw	237
  4083  19B5  34C6               	retlw	198
  4084  19B6  3474               	retlw	116
  4085  19B7  3403               	retlw	3
  4086  19B8  3489               	retlw	137
  4087  19B9  34D0               	retlw	208
  4088  19BA  3410               	retlw	16
  4089  19BB  3415               	retlw	21
  4090  19BC  3422               	retlw	34
  4091  19BD  341E               	retlw	30
  4092  19BE  34BB               	retlw	187
  4093  19BF  34DB               	retlw	219
  4094  19C0  34F8               	retlw	248
  4095  19C1  340A               	retlw	10
  4096  19C2  3461               	retlw	97
  4097  19C3  34CF               	retlw	207
  4098  19C4  3453               	retlw	83
  4099  19C5  34C4               	retlw	196
  4100  19C6  34CA               	retlw	202
  4101  19C7  3401               	retlw	1
  4102  19C8  3437               	retlw	55
  4103  19C9  34D2               	retlw	210
  4104  19CA  34AE               	retlw	174
  4105  19CB  3417               	retlw	23
  4106  19CC  349C               	retlw	156
  4107  19CD  341C               	retlw	28
  4108  19CE  3405               	retlw	5
  4109  19CF  34D9               	retlw	217
  4110  19D0  34FF               	retlw	255
  4111  19D1  34FE               	retlw	254
  4112  19D2  3466               	retlw	102
  4113  19D3  343B               	retlw	59
  4114  19D4  3454               	retlw	84
  4115  19D5  3430               	retlw	48
  4116  19D6  34CD               	retlw	205
  4117  19D7  34F5               	retlw	245
  4118  19D8  3430               	retlw	48
  4119  19D9  3426               	retlw	38
  4120  19DA  34A9               	retlw	169
  4121  19DB  34E3               	retlw	227
  4122  19DC  349B               	retlw	155
  4123  19DD  34E8               	retlw	232
  4124  19DE  3402               	retlw	2
  4125  19DF  342D               	retlw	45
  4126  19E0  346F               	retlw	111
  4127  19E1  34A7               	retlw	167
  4128  19E2  34F6               	retlw	246
  4129  19E3  3462               	retlw	98
  4130  19E4  34C4               	retlw	196
  4131  19E5  3469               	retlw	105
  4132  19E6  345D               	retlw	93
  4133  19E7  34AC               	retlw	172
  4134  19E8  34A0               	retlw	160
  4135  19E9  347F               	retlw	127
  4136  19EA  3439               	retlw	57
  4137  19EB  34BA               	retlw	186
  4138  19EC  340B               	retlw	11
  4139  19ED  34B1               	retlw	177
  4140  19EE  3492               	retlw	146
  4141  19EF  3474               	retlw	116
  4142  19F0  3468               	retlw	104
  4143  19F1  3453               	retlw	83
  4144  19F2  34F1               	retlw	241
  4145  19F3  3496               	retlw	150
  4146  19F4  34C3               	retlw	195
  4147  19F5  349D               	retlw	157
  4148  19F6  345A               	retlw	90
  4149  19F7  3458               	retlw	88
  4150  19F8  34A7               	retlw	167
  4151  19F9  348B               	retlw	139
  4152  19FA  343E               	retlw	62
  4153  19FB  344E               	retlw	78
  4154  19FC  340C               	retlw	12
  4155  19FD  3445               	retlw	69
  4156  19FE  3495               	retlw	149
  4157  19FF  3480               	retlw	128
  4158  1A00                     __end_ofltc6804@crc15Table:	
  4159                           
  4160                           	psect	stringtext3
  4161  1A00                     __pstringtext3:	
  4162  1A00                     _crc15Table:	
  4163  1A00  3400               	retlw	0
  4164  1A01  3400               	retlw	0
  4165  1A02  3499               	retlw	153
  4166  1A03  34C5               	retlw	197
  4167  1A04  34AB               	retlw	171
  4168  1A05  34CE               	retlw	206
  4169  1A06  3432               	retlw	50
  4170  1A07  340B               	retlw	11
  4171  1A08  34CF               	retlw	207
  4172  1A09  34D8               	retlw	216
  4173  1A0A  3456               	retlw	86
  4174  1A0B  341D               	retlw	29
  4175  1A0C  3464               	retlw	100
  4176  1A0D  3416               	retlw	22
  4177  1A0E  34FD               	retlw	253
  4178  1A0F  34D3               	retlw	211
  4179  1A10  3407               	retlw	7
  4180  1A11  34F4               	retlw	244
  4181  1A12  349E               	retlw	158
  4182  1A13  3431               	retlw	49
  4183  1A14  34AC               	retlw	172
  4184  1A15  343A               	retlw	58
  4185  1A16  3435               	retlw	53
  4186  1A17  34FF               	retlw	255
  4187  1A18  34C8               	retlw	200
  4188  1A19  342C               	retlw	44
  4189  1A1A  3451               	retlw	81
  4190  1A1B  34E9               	retlw	233
  4191  1A1C  3463               	retlw	99
  4192  1A1D  34E2               	retlw	226
  4193  1A1E  34FA               	retlw	250
  4194  1A1F  3427               	retlw	39
  4195  1A20  3497               	retlw	151
  4196  1A21  34AD               	retlw	173
  4197  1A22  340E               	retlw	14
  4198  1A23  3468               	retlw	104
  4199  1A24  343C               	retlw	60
  4200  1A25  3463               	retlw	99
  4201  1A26  34A5               	retlw	165
  4202  1A27  34A6               	retlw	166
  4203  1A28  3458               	retlw	88
  4204  1A29  3475               	retlw	117
  4205  1A2A  34C1               	retlw	193
  4206  1A2B  34B0               	retlw	176
  4207  1A2C  34F3               	retlw	243
  4208  1A2D  34BB               	retlw	187
  4209  1A2E  346A               	retlw	106
  4210  1A2F  347E               	retlw	126
  4211  1A30  3490               	retlw	144
  4212  1A31  3459               	retlw	89
  4213  1A32  3409               	retlw	9
  4214  1A33  349C               	retlw	156
  4215  1A34  343B               	retlw	59
  4216  1A35  3497               	retlw	151
  4217  1A36  34A2               	retlw	162
  4218  1A37  3452               	retlw	82
  4219  1A38  345F               	retlw	95
  4220  1A39  3481               	retlw	129
  4221  1A3A  34C6               	retlw	198
  4222  1A3B  3444               	retlw	68
  4223  1A3C  34F4               	retlw	244
  4224  1A3D  344F               	retlw	79
  4225  1A3E  346D               	retlw	109
  4226  1A3F  348A               	retlw	138
  4227  1A40  342E               	retlw	46
  4228  1A41  345B               	retlw	91
  4229  1A42  34B7               	retlw	183
  4230  1A43  349E               	retlw	158
  4231  1A44  3485               	retlw	133
  4232  1A45  3495               	retlw	149
  4233  1A46  341C               	retlw	28
  4234  1A47  3450               	retlw	80
  4235  1A48  34E1               	retlw	225
  4236  1A49  3483               	retlw	131
  4237  1A4A  3478               	retlw	120
  4238  1A4B  3446               	retlw	70
  4239  1A4C  344A               	retlw	74
  4240  1A4D  344D               	retlw	77
  4241  1A4E  34D3               	retlw	211
  4242  1A4F  3488               	retlw	136
  4243  1A50  3429               	retlw	41
  4244  1A51  34AF               	retlw	175
  4245  1A52  34B0               	retlw	176
  4246  1A53  346A               	retlw	106
  4247  1A54  3482               	retlw	130
  4248  1A55  3461               	retlw	97
  4249  1A56  341B               	retlw	27
  4250  1A57  34A4               	retlw	164
  4251  1A58  34E6               	retlw	230
  4252  1A59  3477               	retlw	119
  4253  1A5A  347F               	retlw	127
  4254  1A5B  34B2               	retlw	178
  4255  1A5C  344D               	retlw	77
  4256  1A5D  34B9               	retlw	185
  4257  1A5E  34D4               	retlw	212
  4258  1A5F  347C               	retlw	124
  4259  1A60  34B9               	retlw	185
  4260  1A61  34F6               	retlw	246
  4261  1A62  3420               	retlw	32
  4262  1A63  3433               	retlw	51
  4263  1A64  3412               	retlw	18
  4264  1A65  3438               	retlw	56
  4265  1A66  348B               	retlw	139
  4266  1A67  34FD               	retlw	253
  4267  1A68  3476               	retlw	118
  4268  1A69  342E               	retlw	46
  4269  1A6A  34EF               	retlw	239
  4270  1A6B  34EB               	retlw	235
  4271  1A6C  34DD               	retlw	221
  4272  1A6D  34E0               	retlw	224
  4273  1A6E  3444               	retlw	68
  4274  1A6F  3425               	retlw	37
  4275  1A70  34BE               	retlw	190
  4276  1A71  3402               	retlw	2
  4277  1A72  3427               	retlw	39
  4278  1A73  34C7               	retlw	199
  4279  1A74  3415               	retlw	21
  4280  1A75  34CC               	retlw	204
  4281  1A76  348C               	retlw	140
  4282  1A77  3409               	retlw	9
  4283  1A78  3471               	retlw	113
  4284  1A79  34DA               	retlw	218
  4285  1A7A  34E8               	retlw	232
  4286  1A7B  341F               	retlw	31
  4287  1A7C  34DA               	retlw	218
  4288  1A7D  3414               	retlw	20
  4289  1A7E  3443               	retlw	67
  4290  1A7F  34D1               	retlw	209
  4291  1A80  34C5               	retlw	197
  4292  1A81  34F3               	retlw	243
  4293  1A82  345C               	retlw	92
  4294  1A83  3436               	retlw	54
  4295  1A84  346E               	retlw	110
  4296  1A85  343D               	retlw	61
  4297  1A86  34F7               	retlw	247
  4298  1A87  34F8               	retlw	248
  4299  1A88  340A               	retlw	10
  4300  1A89  342B               	retlw	43
  4301  1A8A  3493               	retlw	147
  4302  1A8B  34EE               	retlw	238
  4303  1A8C  34A1               	retlw	161
  4304  1A8D  34E5               	retlw	229
  4305  1A8E  3438               	retlw	56
  4306  1A8F  3420               	retlw	32
  4307  1A90  34C2               	retlw	194
  4308  1A91  3407               	retlw	7
  4309  1A92  345B               	retlw	91
  4310  1A93  34C2               	retlw	194
  4311  1A94  3469               	retlw	105
  4312  1A95  34C9               	retlw	201
  4313  1A96  34F0               	retlw	240
  4314  1A97  340C               	retlw	12
  4315  1A98  340D               	retlw	13
  4316  1A99  34DF               	retlw	223
  4317  1A9A  3494               	retlw	148
  4318  1A9B  341A               	retlw	26
  4319  1A9C  34A6               	retlw	166
  4320  1A9D  3411               	retlw	17
  4321  1A9E  343F               	retlw	63
  4322  1A9F  34D4               	retlw	212
  4323  1AA0  3452               	retlw	82
  4324  1AA1  345E               	retlw	94
  4325  1AA2  34CB               	retlw	203
  4326  1AA3  349B               	retlw	155
  4327  1AA4  34F9               	retlw	249
  4328  1AA5  3490               	retlw	144
  4329  1AA6  3460               	retlw	96
  4330  1AA7  3455               	retlw	85
  4331  1AA8  349D               	retlw	157
  4332  1AA9  3486               	retlw	134
  4333  1AAA  3404               	retlw	4
  4334  1AAB  3443               	retlw	67
  4335  1AAC  3436               	retlw	54
  4336  1AAD  3448               	retlw	72
  4337  1AAE  34AF               	retlw	175
  4338  1AAF  348D               	retlw	141
  4339  1AB0  3455               	retlw	85
  4340  1AB1  34AA               	retlw	170
  4341  1AB2  34CC               	retlw	204
  4342  1AB3  346F               	retlw	111
  4343  1AB4  34FE               	retlw	254
  4344  1AB5  3464               	retlw	100
  4345  1AB6  3467               	retlw	103
  4346  1AB7  34A1               	retlw	161
  4347  1AB8  349A               	retlw	154
  4348  1AB9  3472               	retlw	114
  4349  1ABA  3403               	retlw	3
  4350  1ABB  34B7               	retlw	183
  4351  1ABC  3431               	retlw	49
  4352  1ABD  34BC               	retlw	188
  4353  1ABE  34A8               	retlw	168
  4354  1ABF  3479               	retlw	121
  4355  1AC0  34EB               	retlw	235
  4356  1AC1  34A8               	retlw	168
  4357  1AC2  3472               	retlw	114
  4358  1AC3  346D               	retlw	109
  4359  1AC4  3440               	retlw	64
  4360  1AC5  3466               	retlw	102
  4361  1AC6  34D9               	retlw	217
  4362  1AC7  34A3               	retlw	163
  4363  1AC8  3424               	retlw	36
  4364  1AC9  3470               	retlw	112
  4365  1ACA  34BD               	retlw	189
  4366  1ACB  34B5               	retlw	181
  4367  1ACC  348F               	retlw	143
  4368  1ACD  34BE               	retlw	190
  4369  1ACE  3416               	retlw	22
  4370  1ACF  347B               	retlw	123
  4371  1AD0  34EC               	retlw	236
  4372  1AD1  345C               	retlw	92
  4373  1AD2  3475               	retlw	117
  4374  1AD3  3499               	retlw	153
  4375  1AD4  3447               	retlw	71
  4376  1AD5  3492               	retlw	146
  4377  1AD6  34DE               	retlw	222
  4378  1AD7  3457               	retlw	87
  4379  1AD8  3423               	retlw	35
  4380  1AD9  3484               	retlw	132
  4381  1ADA  34BA               	retlw	186
  4382  1ADB  3441               	retlw	65
  4383  1ADC  3488               	retlw	136
  4384  1ADD  344A               	retlw	74
  4385  1ADE  3411               	retlw	17
  4386  1ADF  348F               	retlw	143
  4387  1AE0  347C               	retlw	124
  4388  1AE1  3405               	retlw	5
  4389  1AE2  34E5               	retlw	229
  4390  1AE3  34C0               	retlw	192
  4391  1AE4  34D7               	retlw	215
  4392  1AE5  34CB               	retlw	203
  4393  1AE6  344E               	retlw	78
  4394  1AE7  340E               	retlw	14
  4395  1AE8  34B3               	retlw	179
  4396  1AE9  34DD               	retlw	221
  4397  1AEA  342A               	retlw	42
  4398  1AEB  3418               	retlw	24
  4399  1AEC  3418               	retlw	24
  4400  1AED  3413               	retlw	19
  4401  1AEE  3481               	retlw	129
  4402  1AEF  34D6               	retlw	214
  4403  1AF0  347B               	retlw	123
  4404  1AF1  34F1               	retlw	241
  4405  1AF2  34E2               	retlw	226
  4406  1AF3  3434               	retlw	52
  4407  1AF4  34D0               	retlw	208
  4408  1AF5  343F               	retlw	63
  4409  1AF6  3449               	retlw	73
  4410  1AF7  34FA               	retlw	250
  4411  1AF8  34B4               	retlw	180
  4412  1AF9  3429               	retlw	41
  4413  1AFA  342D               	retlw	45
  4414  1AFB  34EC               	retlw	236
  4415  1AFC  341F               	retlw	31
  4416  1AFD  34E7               	retlw	231
  4417  1AFE  3486               	retlw	134
  4418  1AFF  3422               	retlw	34
  4419  1B00  3413               	retlw	19
  4420  1B01  34A2               	retlw	162
  4421  1B02  348A               	retlw	138
  4422  1B03  3467               	retlw	103
  4423  1B04  34B8               	retlw	184
  4424  1B05  346C               	retlw	108
  4425  1B06  3421               	retlw	33
  4426  1B07  34A9               	retlw	169
  4427  1B08  34DC               	retlw	220
  4428  1B09  347A               	retlw	122
  4429  1B0A  3445               	retlw	69
  4430  1B0B  34BF               	retlw	191
  4431  1B0C  3477               	retlw	119
  4432  1B0D  34B4               	retlw	180
  4433  1B0E  34EE               	retlw	238
  4434  1B0F  3471               	retlw	113
  4435  1B10  3414               	retlw	20
  4436  1B11  3456               	retlw	86
  4437  1B12  348D               	retlw	141
  4438  1B13  3493               	retlw	147
  4439  1B14  34BF               	retlw	191
  4440  1B15  3498               	retlw	152
  4441  1B16  3426               	retlw	38
  4442  1B17  345D               	retlw	93
  4443  1B18  34DB               	retlw	219
  4444  1B19  348E               	retlw	142
  4445  1B1A  3442               	retlw	66
  4446  1B1B  344B               	retlw	75
  4447  1B1C  3470               	retlw	112
  4448  1B1D  3440               	retlw	64
  4449  1B1E  34E9               	retlw	233
  4450  1B1F  3485               	retlw	133
  4451  1B20  3484               	retlw	132
  4452  1B21  340F               	retlw	15
  4453  1B22  341D               	retlw	29
  4454  1B23  34CA               	retlw	202
  4455  1B24  342F               	retlw	47
  4456  1B25  34C1               	retlw	193
  4457  1B26  346F               	retlw	111
  4458  1B27  344B               	retlw	75
  4459  1B28  344B               	retlw	75
  4460  1B29  34D7               	retlw	215
  4461  1B2A  34D2               	retlw	210
  4462  1B2B  3412               	retlw	18
  4463  1B2C  34E0               	retlw	224
  4464  1B2D  3419               	retlw	25
  4465  1B2E  3479               	retlw	121
  4466  1B2F  34DC               	retlw	220
  4467  1B30  3483               	retlw	131
  4468  1B31  34FB               	retlw	251
  4469  1B32  341A               	retlw	26
  4470  1B33  343E               	retlw	62
  4471  1B34  3428               	retlw	40
  4472  1B35  3435               	retlw	53
  4473  1B36  34B1               	retlw	177
  4474  1B37  34F0               	retlw	240
  4475  1B38  344C               	retlw	76
  4476  1B39  3423               	retlw	35
  4477  1B3A  34D5               	retlw	213
  4478  1B3B  34E6               	retlw	230
  4479  1B3C  34E7               	retlw	231
  4480  1B3D  34ED               	retlw	237
  4481  1B3E  347E               	retlw	126
  4482  1B3F  3428               	retlw	40
  4483  1B40  343D               	retlw	61
  4484  1B41  34F9               	retlw	249
  4485  1B42  34A4               	retlw	164
  4486  1B43  343C               	retlw	60
  4487  1B44  3496               	retlw	150
  4488  1B45  3437               	retlw	55
  4489  1B46  340F               	retlw	15
  4490  1B47  34F2               	retlw	242
  4491  1B48  34F2               	retlw	242
  4492  1B49  3421               	retlw	33
  4493  1B4A  346B               	retlw	107
  4494  1B4B  34E4               	retlw	228
  4495  1B4C  3459               	retlw	89
  4496  1B4D  34EF               	retlw	239
  4497  1B4E  34C0               	retlw	192
  4498  1B4F  342A               	retlw	42
  4499  1B50  343A               	retlw	58
  4500  1B51  340D               	retlw	13
  4501  1B52  34A3               	retlw	163
  4502  1B53  34C8               	retlw	200
  4503  1B54  3491               	retlw	145
  4504  1B55  34C3               	retlw	195
  4505  1B56  3408               	retlw	8
  4506  1B57  3406               	retlw	6
  4507  1B58  34F5               	retlw	245
  4508  1B59  34D5               	retlw	213
  4509  1B5A  346C               	retlw	108
  4510  1B5B  3410               	retlw	16
  4511  1B5C  345E               	retlw	94
  4512  1B5D  341B               	retlw	27
  4513  1B5E  34C7               	retlw	199
  4514  1B5F  34DE               	retlw	222
  4515  1B60  34AA               	retlw	170
  4516  1B61  3454               	retlw	84
  4517  1B62  3433               	retlw	51
  4518  1B63  3491               	retlw	145
  4519  1B64  3401               	retlw	1
  4520  1B65  349A               	retlw	154
  4521  1B66  3498               	retlw	152
  4522  1B67  345F               	retlw	95
  4523  1B68  3465               	retlw	101
  4524  1B69  348C               	retlw	140
  4525  1B6A  34FC               	retlw	252
  4526  1B6B  3449               	retlw	73
  4527  1B6C  34CE               	retlw	206
  4528  1B6D  3442               	retlw	66
  4529  1B6E  3457               	retlw	87
  4530  1B6F  3487               	retlw	135
  4531  1B70  34AD               	retlw	173
  4532  1B71  34A0               	retlw	160
  4533  1B72  3434               	retlw	52
  4534  1B73  3465               	retlw	101
  4535  1B74  3406               	retlw	6
  4536  1B75  346E               	retlw	110
  4537  1B76  349F               	retlw	159
  4538  1B77  34AB               	retlw	171
  4539  1B78  3462               	retlw	98
  4540  1B79  3478               	retlw	120
  4541  1B7A  34FB               	retlw	251
  4542  1B7B  34BD               	retlw	189
  4543  1B7C  34C9               	retlw	201
  4544  1B7D  34B6               	retlw	182
  4545  1B7E  3450               	retlw	80
  4546  1B7F  3473               	retlw	115
  4547  1B80  34D6               	retlw	214
  4548  1B81  3451               	retlw	81
  4549  1B82  344F               	retlw	79
  4550  1B83  3494               	retlw	148
  4551  1B84  347D               	retlw	125
  4552  1B85  349F               	retlw	159
  4553  1B86  34E4               	retlw	228
  4554  1B87  345A               	retlw	90
  4555  1B88  3419               	retlw	25
  4556  1B89  3489               	retlw	137
  4557  1B8A  3480               	retlw	128
  4558  1B8B  344C               	retlw	76
  4559  1B8C  34B2               	retlw	178
  4560  1B8D  3447               	retlw	71
  4561  1B8E  342B               	retlw	43
  4562  1B8F  3482               	retlw	130
  4563  1B90  34D1               	retlw	209
  4564  1B91  34A5               	retlw	165
  4565  1B92  3448               	retlw	72
  4566  1B93  3460               	retlw	96
  4567  1B94  347A               	retlw	122
  4568  1B95  346B               	retlw	107
  4569  1B96  34E3               	retlw	227
  4570  1B97  34AE               	retlw	174
  4571  1B98  341E               	retlw	30
  4572  1B99  347D               	retlw	125
  4573  1B9A  3487               	retlw	135
  4574  1B9B  34B8               	retlw	184
  4575  1B9C  34B5               	retlw	181
  4576  1B9D  34B3               	retlw	179
  4577  1B9E  342C               	retlw	44
  4578  1B9F  3476               	retlw	118
  4579  1BA0  3441               	retlw	65
  4580  1BA1  34FC               	retlw	252
  4581  1BA2  34D8               	retlw	216
  4582  1BA3  3439               	retlw	57
  4583  1BA4  34EA               	retlw	234
  4584  1BA5  3432               	retlw	50
  4585  1BA6  3473               	retlw	115
  4586  1BA7  34F7               	retlw	247
  4587  1BA8  348E               	retlw	142
  4588  1BA9  3424               	retlw	36
  4589  1BAA  3417               	retlw	23
  4590  1BAB  34E1               	retlw	225
  4591  1BAC  3425               	retlw	37
  4592  1BAD  34EA               	retlw	234
  4593  1BAE  34BC               	retlw	188
  4594  1BAF  342F               	retlw	47
  4595  1BB0  3446               	retlw	70
  4596  1BB1  3408               	retlw	8
  4597  1BB2  34DF               	retlw	223
  4598  1BB3  34CD               	retlw	205
  4599  1BB4  34ED               	retlw	237
  4600  1BB5  34C6               	retlw	198
  4601  1BB6  3474               	retlw	116
  4602  1BB7  3403               	retlw	3
  4603  1BB8  3489               	retlw	137
  4604  1BB9  34D0               	retlw	208
  4605  1BBA  3410               	retlw	16
  4606  1BBB  3415               	retlw	21
  4607  1BBC  3422               	retlw	34
  4608  1BBD  341E               	retlw	30
  4609  1BBE  34BB               	retlw	187
  4610  1BBF  34DB               	retlw	219
  4611  1BC0  34F8               	retlw	248
  4612  1BC1  340A               	retlw	10
  4613  1BC2  3461               	retlw	97
  4614  1BC3  34CF               	retlw	207
  4615  1BC4  3453               	retlw	83
  4616  1BC5  34C4               	retlw	196
  4617  1BC6  34CA               	retlw	202
  4618  1BC7  3401               	retlw	1
  4619  1BC8  3437               	retlw	55
  4620  1BC9  34D2               	retlw	210
  4621  1BCA  34AE               	retlw	174
  4622  1BCB  3417               	retlw	23
  4623  1BCC  349C               	retlw	156
  4624  1BCD  341C               	retlw	28
  4625  1BCE  3405               	retlw	5
  4626  1BCF  34D9               	retlw	217
  4627  1BD0  34FF               	retlw	255
  4628  1BD1  34FE               	retlw	254
  4629  1BD2  3466               	retlw	102
  4630  1BD3  343B               	retlw	59
  4631  1BD4  3454               	retlw	84
  4632  1BD5  3430               	retlw	48
  4633  1BD6  34CD               	retlw	205
  4634  1BD7  34F5               	retlw	245
  4635  1BD8  3430               	retlw	48
  4636  1BD9  3426               	retlw	38
  4637  1BDA  34A9               	retlw	169
  4638  1BDB  34E3               	retlw	227
  4639  1BDC  349B               	retlw	155
  4640  1BDD  34E8               	retlw	232
  4641  1BDE  3402               	retlw	2
  4642  1BDF  342D               	retlw	45
  4643  1BE0  346F               	retlw	111
  4644  1BE1  34A7               	retlw	167
  4645  1BE2  34F6               	retlw	246
  4646  1BE3  3462               	retlw	98
  4647  1BE4  34C4               	retlw	196
  4648  1BE5  3469               	retlw	105
  4649  1BE6  345D               	retlw	93
  4650  1BE7  34AC               	retlw	172
  4651  1BE8  34A0               	retlw	160
  4652  1BE9  347F               	retlw	127
  4653  1BEA  3439               	retlw	57
  4654  1BEB  34BA               	retlw	186
  4655  1BEC  340B               	retlw	11
  4656  1BED  34B1               	retlw	177
  4657  1BEE  3492               	retlw	146
  4658  1BEF  3474               	retlw	116
  4659  1BF0  3468               	retlw	104
  4660  1BF1  3453               	retlw	83
  4661  1BF2  34F1               	retlw	241
  4662  1BF3  3496               	retlw	150
  4663  1BF4  34C3               	retlw	195
  4664  1BF5  349D               	retlw	157
  4665  1BF6  345A               	retlw	90
  4666  1BF7  3458               	retlw	88
  4667  1BF8  34A7               	retlw	167
  4668  1BF9  348B               	retlw	139
  4669  1BFA  343E               	retlw	62
  4670  1BFB  344E               	retlw	78
  4671  1BFC  340C               	retlw	12
  4672  1BFD  3445               	retlw	69
  4673  1BFE  3495               	retlw	149
  4674  1BFF  3480               	retlw	128
  4675  1C00                     __end_of_crc15Table:	
  4676                           
  4677                           	psect	stringtext4
  4678  3000                     __pstringtext4:	
  4679  3000                     __powers_:	
  4680  3000  3400               	retlw	0
  4681  3001  3400               	retlw	0
  4682  3002  3480               	retlw	128
  4683  3003  343F               	retlw	63
  4684  3004  3400               	retlw	0
  4685  3005  3400               	retlw	0
  4686  3006  3420               	retlw	32
  4687  3007  3441               	retlw	65
  4688  3008  3400               	retlw	0
  4689  3009  3400               	retlw	0
  4690  300A  34C8               	retlw	200
  4691  300B  3442               	retlw	66
  4692  300C  3400               	retlw	0
  4693  300D  3400               	retlw	0
  4694  300E  347A               	retlw	122
  4695  300F  3444               	retlw	68
  4696  3010  3400               	retlw	0
  4697  3011  3440               	retlw	64
  4698  3012  341C               	retlw	28
  4699  3013  3446               	retlw	70
  4700  3014  3400               	retlw	0
  4701  3015  3450               	retlw	80
  4702  3016  34C3               	retlw	195
  4703  3017  3447               	retlw	71
  4704  3018  3400               	retlw	0
  4705  3019  3424               	retlw	36
  4706  301A  3474               	retlw	116
  4707  301B  3449               	retlw	73
  4708  301C  3480               	retlw	128
  4709  301D  3496               	retlw	150
  4710  301E  3418               	retlw	24
  4711  301F  344B               	retlw	75
  4712  3020  3420               	retlw	32
  4713  3021  34BC               	retlw	188
  4714  3022  34BE               	retlw	190
  4715  3023  344C               	retlw	76
  4716  3024  3428               	retlw	40
  4717  3025  346B               	retlw	107
  4718  3026  346E               	retlw	110
  4719  3027  344E               	retlw	78
  4720  3028  34F9               	retlw	249
  4721  3029  3402               	retlw	2
  4722  302A  3415               	retlw	21
  4723  302B  3450               	retlw	80
  4724  302C  34EC               	retlw	236
  4725  302D  3478               	retlw	120
  4726  302E  34AD               	retlw	173
  4727  302F  3460               	retlw	96
  4728  3030  34CA               	retlw	202
  4729  3031  34F2               	retlw	242
  4730  3032  3449               	retlw	73
  4731  3033  3471               	retlw	113
  4732  3034                     __end_of__powers_:	
  4733                           
  4734                           	psect	stringtext5
  4735  3034                     __pstringtext5:	
  4736  3034                     __npowers_:	
  4737  3034  3400               	retlw	0
  4738  3035  3400               	retlw	0
  4739  3036  3480               	retlw	128
  4740  3037  343F               	retlw	63
  4741  3038  34CD               	retlw	205
  4742  3039  34CC               	retlw	204
  4743  303A  34CC               	retlw	204
  4744  303B  343D               	retlw	61
  4745  303C  340A               	retlw	10
  4746  303D  34D7               	retlw	215
  4747  303E  3423               	retlw	35
  4748  303F  343C               	retlw	60
  4749  3040  346F               	retlw	111
  4750  3041  3412               	retlw	18
  4751  3042  3483               	retlw	131
  4752  3043  343A               	retlw	58
  4753  3044  3417               	retlw	23
  4754  3045  34B7               	retlw	183
  4755  3046  34D1               	retlw	209
  4756  3047  3438               	retlw	56
  4757  3048  34AC               	retlw	172
  4758  3049  34C5               	retlw	197
  4759  304A  3427               	retlw	39
  4760  304B  3437               	retlw	55
  4761  304C  34BD               	retlw	189
  4762  304D  3437               	retlw	55
  4763  304E  3486               	retlw	134
  4764  304F  3435               	retlw	53
  4765  3050  3495               	retlw	149
  4766  3051  34BF               	retlw	191
  4767  3052  34D6               	retlw	214
  4768  3053  3433               	retlw	51
  4769  3054  3477               	retlw	119
  4770  3055  34CC               	retlw	204
  4771  3056  342B               	retlw	43
  4772  3057  3432               	retlw	50
  4773  3058  345F               	retlw	95
  4774  3059  3470               	retlw	112
  4775  305A  3489               	retlw	137
  4776  305B  3430               	retlw	48
  4777  305C  34FF               	retlw	255
  4778  305D  34E6               	retlw	230
  4779  305E  34DB               	retlw	219
  4780  305F  342E               	retlw	46
  4781  3060  3408               	retlw	8
  4782  3061  34E5               	retlw	229
  4783  3062  343C               	retlw	60
  4784  3063  341E               	retlw	30
  4785  3064  3460               	retlw	96
  4786  3065  3442               	retlw	66
  4787  3066  34A2               	retlw	162
  4788  3067  340D               	retlw	13
  4789  3068                     __end_of__npowers_:	
  4790                           
  4791                           	psect	stringtext6
  4792  3068                     __pstringtext6:	
  4793  3068                     _temperatures:	
  4794  3068  3494               	retlw	148
  4795  3069  3476               	retlw	118
  4796  306A  3467               	retlw	103
  4797  306B  345C               	retlw	92
  4798  306C  3454               	retlw	84
  4799  306D  344E               	retlw	78
  4800  306E  3448               	retlw	72
  4801  306F  3443               	retlw	67
  4802  3070  343F               	retlw	63
  4803  3071  343C               	retlw	60
  4804  3072  3438               	retlw	56
  4805  3073  3435               	retlw	53
  4806  3074  3433               	retlw	51
  4807  3075  3430               	retlw	48
  4808  3076  342D               	retlw	45
  4809  3077  342B               	retlw	43
  4810  3078  3429               	retlw	41
  4811  3079  3427               	retlw	39
  4812  307A  3425               	retlw	37
  4813  307B  3422               	retlw	34
  4814  307C  3421               	retlw	33
  4815  307D  341F               	retlw	31
  4816  307E  341D               	retlw	29
  4817  307F  341B               	retlw	27
  4818  3080  3419               	retlw	25
  4819  3081  3417               	retlw	23
  4820  3082  3416               	retlw	22
  4821  3083  3414               	retlw	20
  4822  3084  3412               	retlw	18
  4823  3085  3410               	retlw	16
  4824  3086  340F               	retlw	15
  4825  3087  340D               	retlw	13
  4826  3088  340B               	retlw	11
  4827  3089  3409               	retlw	9
  4828  308A  3407               	retlw	7
  4829  308B  3405               	retlw	5
  4830  308C  3403               	retlw	3
  4831  308D  3401               	retlw	1
  4832  308E  34FF               	retlw	255
  4833  308F  34FD               	retlw	253
  4834  3090  34FB               	retlw	251
  4835  3091  34F8               	retlw	248
  4836  3092  34F5               	retlw	245
  4837  3093  34F2               	retlw	242
  4838  3094  34EF               	retlw	239
  4839  3095  34EB               	retlw	235
  4840  3096  34E6               	retlw	230
  4841  3097  34E0               	retlw	224
  4842  3098  34D6               	retlw	214
  4843  3099  34EF               	retlw	239
  4844  309A                     __end_of_temperatures:	
  4845                           
  4846                           	psect	stringtext7
  4847  309A                     __pstringtext7:	
  4848  309A                     _dpowers:	
  4849  309A  3401               	retlw	1
  4850  309B  3400               	retlw	0
  4851  309C  3400               	retlw	0
  4852  309D  3400               	retlw	0
  4853  309E  340A               	retlw	10
  4854  309F  3400               	retlw	0
  4855  30A0  3400               	retlw	0
  4856  30A1  3400               	retlw	0
  4857  30A2  3464               	retlw	100
  4858  30A3  3400               	retlw	0
  4859  30A4  3400               	retlw	0
  4860  30A5  3400               	retlw	0
  4861  30A6  34E8               	retlw	232
  4862  30A7  3403               	retlw	3
  4863  30A8  3400               	retlw	0
  4864  30A9  3400               	retlw	0
  4865  30AA  3410               	retlw	16
  4866  30AB  3427               	retlw	39
  4867  30AC  3400               	retlw	0
  4868  30AD  3400               	retlw	0
  4869  30AE  34A0               	retlw	160
  4870  30AF  3486               	retlw	134
  4871  30B0  3401               	retlw	1
  4872  30B1  3400               	retlw	0
  4873  30B2  3440               	retlw	64
  4874  30B3  3442               	retlw	66
  4875  30B4  340F               	retlw	15
  4876  30B5  3400               	retlw	0
  4877  30B6  3480               	retlw	128
  4878  30B7  3496               	retlw	150
  4879  30B8  3498               	retlw	152
  4880  30B9  3400               	retlw	0
  4881  30BA  3400               	retlw	0
  4882  30BB  34E1               	retlw	225
  4883  30BC  34F5               	retlw	245
  4884  30BD  3405               	retlw	5
  4885  30BE  3400               	retlw	0
  4886  30BF  34CA               	retlw	202
  4887  30C0  349A               	retlw	154
  4888  30C1  343B               	retlw	59
  4889  30C2                     __end_of_dpowers:	
  4890                           
  4891                           	psect	stringtext8
  4892  3159                     __pstringtext8:	
  4893  3159                     _t0:	
  4894  3159  3433               	retlw	51
  4895  315A  3413               	retlw	19
  4896  315B  3495               	retlw	149
  4897  315C  3443               	retlw	67
  4898  315D                     __end_of_t0:	
  4899                           
  4900                           	psect	stringtext9
  4901  315D                     __pstringtext9:	
  4902  315D                     _Beta:	
  4903  315D  3489               	retlw	137
  4904  315E  340F               	retlw	15
  4905  315F                     __end_of_Beta:	
  4906                           
  4907                           	psect	stringtext10
  4908  315F                     __pstringtext10:	
  4909  315F                     LTC6804_rdcfg@BYTES_IN_REG:	
  4910  315F  3408               	retlw	8
  4911  3160                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4912                           
  4913                           	psect	stringtext11
  4914  3160                     __pstringtext11:	
  4915  3160                     LTC6804_wrcfg@BYTES_IN_REG:	
  4916  3160  3406               	retlw	6
  4917  3161                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4918                           
  4919                           	psect	stringtext12
  4920  3161                     __pstringtext12:	
  4921  3161                     LTC6804_rdaux_reg@REG_LEN:	
  4922  3161  3408               	retlw	8
  4923  3162                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4924                           
  4925                           	psect	stringtext13
  4926  3162                     __pstringtext13:	
  4927  3162                     LTC6804_rdaux@GPIO_IN_REG:	
  4928  3162  3403               	retlw	3
  4929  3163                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4930                           
  4931                           	psect	stringtext14
  4932  3163                     __pstringtext14:	
  4933  3163                     LTC6804_rdaux@BYT_IN_REG:	
  4934  3163  3406               	retlw	6
  4935  3164                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4936                           
  4937                           	psect	stringtext15
  4938  3164                     __pstringtext15:	
  4939  3164                     LTC6804_rdaux@NUM_RX_BYT:	
  4940  3164  3408               	retlw	8
  4941  3165                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4942                           
  4943                           	psect	stringtext16
  4944  3165                     __pstringtext16:	
  4945  3165                     LTC6804_rdcv_reg@REG_LEN:	
  4946  3165  3408               	retlw	8
  4947  3166                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4948                           
  4949                           	psect	stringtext17
  4950  3166                     __pstringtext17:	
  4951  3166                     LTC6804_rdcv@CELL_IN_REG:	
  4952  3166  3403               	retlw	3
  4953  3167                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4954                           
  4955                           	psect	stringtext18
  4956  3167                     __pstringtext18:	
  4957  3167                     LTC6804_rdcv@BYT_IN_REG:	
  4958  3167  3406               	retlw	6
  4959  3168                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4960                           
  4961                           	psect	stringtext19
  4962  3168                     __pstringtext19:	
  4963  3168                     LTC6804_rdcv@NUM_RX_BYT:	
  4964  3168  3408               	retlw	8
  4965  3169                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4966                           
  4967                           	psect	stringtext20
  4968  30C2                     __pstringtext20:	
  4969  30C2                     LTC6804_rdstat_reg@REG_LEN:	
  4970  30C2  3408               	retlw	8
  4971  30C3                     __end_ofLTC6804_rdstat_reg@REG_LEN:	
  4972  0012                     _PIR2bits	set	18
  4973  001C                     _T2CON	set	28
  4974  001B                     _PR2	set	27
  4975  0011                     _PIR1bits	set	17
  4976  000B                     _INTCONbits	set	11
  4977  0092                     _PIE2bits	set	146
  4978  0095                     _OPTION_REG	set	149
  4979  009F                     _ADCON2	set	159
  4980  009E                     _ADCON1	set	158
  4981  009D                     _ADCON0	set	157
  4982  009B                     _ADRESL	set	155
  4983  009C                     _ADRESH	set	156
  4984  009D                     _ADCON0bits	set	157
  4985  008E                     _TRISCbits	set	142
  4986  008D                     _TRISBbits	set	141
  4987  008C                     _TRISAbits	set	140
  4988  008F                     _TRISDbits	set	143
  4989  0091                     _PIE1bits	set	145
  4990  011D                     _APFCON1bits	set	285
  4991  010D                     _LATBbits	set	269
  4992  010C                     _LATAbits	set	268
  4993  010F                     _LATDbits	set	271
  4994  019B                     _SPBRGL	set	411
  4995  019C                     _SPBRGH	set	412
  4996  019D                     _RCSTAbits	set	413
  4997  019E                     _TXSTAbits	set	414
  4998  018F                     _ANSELD	set	399
  4999  018D                     _ANSELB	set	397
  5000  018C                     _ANSELA	set	396
  5001  019A                     _TXREG	set	410
  5002  0211                     _SSP1BUF	set	529
  5003  0215                     _SSP1CON1bits	set	533
  5004  0215                     _SSP1CON1	set	533
  5005  0214                     _SSP1STATbits	set	532
  5006  0217                     _SSP1CON3bits	set	535
  5007  0214                     _SSPSTAT	set	532
  5008  0212                     _SSPADD	set	530
  5009  0215                     _SSPCON1	set	533
  5010  0214                     _SSPSTATbits	set	532
  5011  0216                     _SSPCON2bits	set	534
  5012  0211                     _SSPBUF	set	529
  5013  020F                     _WPUD	set	527
  5014  029A                     _CCP2CON	set	666
  5015  30C3                     STR_3:	
  5016  30C3  344D               	retlw	77	;'M'
  5017  30C4  3461               	retlw	97	;'a'
  5018  30C5  3478               	retlw	120	;'x'
  5019  30C6  3420               	retlw	32	;' '
  5020  30C7  3444               	retlw	68	;'D'
  5021  30C8  3469               	retlw	105	;'i'
  5022  30C9  3466               	retlw	102	;'f'
  5023  30CA  3466               	retlw	102	;'f'
  5024  30CB  3465               	retlw	101	;'e'
  5025  30CC  3472               	retlw	114	;'r'
  5026  30CD  3465               	retlw	101	;'e'
  5027  30CE  346E               	retlw	110	;'n'
  5028  30CF  3463               	retlw	99	;'c'
  5029  30D0  3465               	retlw	101	;'e'
  5030  30D1  3420               	retlw	32	;' '
  5031  30D2  343D               	retlw	61	;'='
  5032  30D3  3420               	retlw	32	;' '
  5033  30D4  3456               	retlw	86	;'V'
  5034  30D5  3425               	retlw	37	;'%'
  5035  30D6  3469               	retlw	105	;'i'
  5036  30D7  3420               	retlw	32	;' '
  5037  30D8  3426               	retlw	38	;'&'
  5038  30D9  3420               	retlw	32	;' '
  5039  30DA  3456               	retlw	86	;'V'
  5040  30DB  3425               	retlw	37	;'%'
  5041  30DC  3469               	retlw	105	;'i'
  5042  30DD  3420               	retlw	32	;' '
  5043  30DE  3440               	retlw	64	;'@'
  5044  30DF  3420               	retlw	32	;' '
  5045  30E0  3425               	retlw	37	;'%'
  5046  30E1  3430               	retlw	48	;'0'
  5047  30E2  342E               	retlw	46	;'.'
  5048  30E3  3434               	retlw	52	;'4'
  5049  30E4  3466               	retlw	102	;'f'
  5050  30E5  3456               	retlw	86	;'V'
  5051  30E6  340A               	retlw	10
  5052  30E7  340D               	retlw	13
  5053  30E8  3400               	retlw	0
  5054                           
  5055                           	psect	stringtext21
  5056  30E9                     __pstringtext21:	
  5057  30E9                     STR_2:	
  5058  30E9  3450               	retlw	80	;'P'
  5059  30EA  3461               	retlw	97	;'a'
  5060  30EB  3463               	retlw	99	;'c'
  5061  30EC  346B               	retlw	107	;'k'
  5062  30ED  3420               	retlw	32	;' '
  5063  30EE  3456               	retlw	86	;'V'
  5064  30EF  346F               	retlw	111	;'o'
  5065  30F0  346C               	retlw	108	;'l'
  5066  30F1  3474               	retlw	116	;'t'
  5067  30F2  3461               	retlw	97	;'a'
  5068  30F3  3467               	retlw	103	;'g'
  5069  30F4  3465               	retlw	101	;'e'
  5070  30F5  343A               	retlw	58	;':'
  5071  30F6  3420               	retlw	32	;' '
  5072  30F7  3425               	retlw	37	;'%'
  5073  30F8  3430               	retlw	48	;'0'
  5074  30F9  342E               	retlw	46	;'.'
  5075  30FA  3434               	retlw	52	;'4'
  5076  30FB  3466               	retlw	102	;'f'
  5077  30FC  3456               	retlw	86	;'V'
  5078  30FD  340A               	retlw	10
  5079  30FE  340D               	retlw	13
  5080  30FF  3400               	retlw	0
  5081                           
  5082                           	psect	stringtext22
  5083  3100                     __pstringtext22:	
  5084  3100                     STR_6:	
  5085  3100  3448               	retlw	72	;'H'
  5086  3101  3469               	retlw	105	;'i'
  5087  3102  3467               	retlw	103	;'g'
  5088  3103  3468               	retlw	104	;'h'
  5089  3104  3465               	retlw	101	;'e'
  5090  3105  3473               	retlw	115	;'s'
  5091  3106  3474               	retlw	116	;'t'
  5092  3107  3420               	retlw	32	;' '
  5093  3108  3454               	retlw	84	;'T'
  5094  3109  3465               	retlw	101	;'e'
  5095  310A  346D               	retlw	109	;'m'
  5096  310B  3470               	retlw	112	;'p'
  5097  310C  343A               	retlw	58	;':'
  5098  310D  3420               	retlw	32	;' '
  5099  310E  3425               	retlw	37	;'%'
  5100  310F  3469               	retlw	105	;'i'
  5101  3110  3443               	retlw	67	;'C'
  5102  3111  340A               	retlw	10
  5103  3112  340D               	retlw	13
  5104  3113  3400               	retlw	0
  5105                           
  5106                           	psect	stringtext23
  5107  3114                     __pstringtext23:	
  5108  3114                     STR_4:	
  5109  3114  3463               	retlw	99	;'c'
  5110  3115  3475               	retlw	117	;'u'
  5111  3116  3472               	retlw	114	;'r'
  5112  3117  3472               	retlw	114	;'r'
  5113  3118  3465               	retlw	101	;'e'
  5114  3119  346E               	retlw	110	;'n'
  5115  311A  3474               	retlw	116	;'t'
  5116  311B  3420               	retlw	32	;' '
  5117  311C  343D               	retlw	61	;'='
  5118  311D  3420               	retlw	32	;' '
  5119  311E  3425               	retlw	37	;'%'
  5120  311F  3430               	retlw	48	;'0'
  5121  3120  342E               	retlw	46	;'.'
  5122  3121  3434               	retlw	52	;'4'
  5123  3122  3466               	retlw	102	;'f'
  5124  3123  3441               	retlw	65	;'A'
  5125  3124  340A               	retlw	10
  5126  3125  340D               	retlw	13
  5127  3126  3400               	retlw	0
  5128                           
  5129                           	psect	stringtext24
  5130  3127                     __pstringtext24:	
  5131  3127                     STR_5:	
  5132  3127  3454               	retlw	84	;'T'
  5133  3128  3465               	retlw	101	;'e'
  5134  3129  346D               	retlw	109	;'m'
  5135  312A  3470               	retlw	112	;'p'
  5136  312B  3425               	retlw	37	;'%'
  5137  312C  3469               	retlw	105	;'i'
  5138  312D  3420               	retlw	32	;' '
  5139  312E  343D               	retlw	61	;'='
  5140  312F  3420               	retlw	32	;' '
  5141  3130  3425               	retlw	37	;'%'
  5142  3131  3469               	retlw	105	;'i'
  5143  3132  3443               	retlw	67	;'C'
  5144  3133  340A               	retlw	10
  5145  3134  340D               	retlw	13
  5146  3135  3400               	retlw	0
  5147                           
  5148                           	psect	stringtext25
  5149  3136                     __pstringtext25:	
  5150  3136                     STR_1:	
  5151  3136  3456               	retlw	86	;'V'
  5152  3137  3425               	retlw	37	;'%'
  5153  3138  3469               	retlw	105	;'i'
  5154  3139  3420               	retlw	32	;' '
  5155  313A  343D               	retlw	61	;'='
  5156  313B  3420               	retlw	32	;' '
  5157  313C  3425               	retlw	37	;'%'
  5158  313D  3430               	retlw	48	;'0'
  5159  313E  342E               	retlw	46	;'.'
  5160  313F  3434               	retlw	52	;'4'
  5161  3140  3466               	retlw	102	;'f'
  5162  3141  3456               	retlw	86	;'V'
  5163  3142  340A               	retlw	10
  5164  3143  340D               	retlw	13
  5165  3144  3400               	retlw	0
  5166                           
  5167                           	psect	stringtext26
  5168  3145                     __pstringtext26:	
  5169  3145                     STR_8:	
  5170  3145  341B               	retlw	27
  5171  3146  345B               	retlw	91	;'['
  5172  3147  3432               	retlw	50	;'2'
  5173  3148  344B               	retlw	75	;'K'
  5174  3149  3420               	retlw	32	;' '
  5175  314A  341B               	retlw	27
  5176  314B  345B               	retlw	91	;'['
  5177  314C  3441               	retlw	65	;'A'
  5178  314D  3420               	retlw	32	;' '
  5179  314E  340D               	retlw	13
  5180  314F  3400               	retlw	0
  5181                           
  5182                           	psect	stringtext27
  5183  3150                     __pstringtext27:	
  5184  3150                     STR_7:	
  5185  3150  341B               	retlw	27
  5186  3151  345B               	retlw	91	;'['
  5187  3152  3432               	retlw	50	;'2'
  5188  3153  344B               	retlw	75	;'K'
  5189  3154  3420               	retlw	32	;' '
  5190  3155  341B               	retlw	27
  5191  3156  345B               	retlw	91	;'['
  5192  3157  3441               	retlw	65	;'A'
  5193  3158  3400               	retlw	0
  5194                           
  5195                           	psect	stringtext28
  5196  0000                     __pstringtext28:	
  5197                           
  5198                           ; #config settings
  5199  0000                     
  5200                           	psect	cinit
  5201  0077                     start_initialization:	
  5202  0077                     __initialization:	
  5203                           
  5204                           ; Initialize objects allocated to BANK4
  5205  0077  30C5               	movlw	low __pidataBANK4
  5206  0078  0084               	movwf	4
  5207  0079  30AA               	movlw	(high __pidataBANK4)| (0+128)
  5208  007A  0085               	movwf	5
  5209  007B  306A               	movlw	low __pdataBANK4
  5210  007C  0086               	movwf	6
  5211  007D  3002               	movlw	high __pdataBANK4
  5212  007E  0087               	movwf	7
  5213  007F  3006               	movlw	6
  5214  0080  31AA  22BF  3180   	fcall	init_ram
  5215                           
  5216                           ; Initialize objects allocated to BANK5
  5217  0083  30CB               	movlw	low __pidataBANK5
  5218  0084  0084               	movwf	4
  5219  0085  30AA               	movlw	(high __pidataBANK5)| (0+128)
  5220  0086  0085               	movwf	5
  5221  0087  30E2               	movlw	low __pdataBANK5
  5222  0088  0086               	movwf	6
  5223  0089  3002               	movlw	high __pdataBANK5
  5224  008A  0087               	movwf	7
  5225  008B  3007               	movlw	7
  5226  008C  31AA  22BF  3180   	fcall	init_ram
  5227                           
  5228                           ; Clear objects allocated to COMMON
  5229  008F  01FA               	clrf	__pbssCOMMON& (0+127)
  5230  0090  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5231                           
  5232                           ; Clear objects allocated to BANK2
  5233  0091  0022               	movlb	2	; select bank2
  5234  0092  01ED               	clrf	__pbssBANK2& (0+127)
  5235  0093  01EE               	clrf	(__pbssBANK2+1)& (0+127)
  5236  0094  01EF               	clrf	(__pbssBANK2+2)& (0+127)
  5237                           
  5238                           ; Clear objects allocated to BANK5
  5239  0095  30A0               	movlw	low __pbssBANK5
  5240  0096  0084               	movwf	4
  5241  0097  3002               	movlw	high __pbssBANK5
  5242  0098  0085               	movwf	5
  5243  0099  3042               	movlw	66
  5244  009A  31AA  22B9  3180   	fcall	clear_ram0
  5245                           
  5246                           ; Clear objects allocated to BANK6
  5247  009D  3020               	movlw	low __pbssBANK6
  5248  009E  0084               	movwf	4
  5249  009F  3003               	movlw	high __pbssBANK6
  5250  00A0  0085               	movwf	5
  5251  00A1  3018               	movlw	24
  5252  00A2  31AA  22B9         	fcall	clear_ram0
  5253  00A4                     end_of_initialization:	
  5254                           ;End of C runtime variable initialization code
  5255                           
  5256  00A4                     __end_of__initialization:	
  5257  00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5258  00A5  0020               	movlb	0
  5259  00A6  3194  2C66         	ljmp	_main	;jump to C main() function
  5260                           
  5261                           	psect	bssCOMMON
  5262  007A                     __pbssCOMMON:	
  5263  007A                     _z:	
  5264  007A                     	ds	2
  5265                           
  5266                           	psect	bssBANK2
  5267  016D                     __pbssBANK2:	
  5268  016D                     _cmd:	
  5269  016D                     	ds	3
  5270                           
  5271                           	psect	dataBANK4
  5272  026A                     __pdataBANK4:	
  5273  026A                     _configReg:	
  5274  026A                     	ds	6
  5275                           
  5276                           	psect	bssBANK5
  5277  02A0                     __pbssBANK5:	
  5278  02A0                     _currentBool:	
  5279  02A0                     	ds	2
  5280  02A2                     _uartBool:	
  5281  02A2                     	ds	2
  5282  02A4                     _k:	
  5283  02A4                     	ds	2
  5284  02A6                     _j:	
  5285  02A6                     	ds	2
  5286  02A8                     _n:	
  5287  02A8                     	ds	2
  5288  02AA                     _str:	
  5289  02AA                     	ds	50
  5290  02DC                     _ADSTAT:	
  5291  02DC                     	ds	2
  5292  02DE                     _ADAX:	
  5293  02DE                     	ds	2
  5294  02E0                     _ADCV:	
  5295  02E0                     	ds	2
  5296                           
  5297                           	psect	dataBANK5
  5298  02E2                     __pdataBANK5:	
  5299  02E2                     _tempChannels:	
  5300  02E2                     	ds	5
  5301  02E7                     SSD1306_Test@F7528:	
  5302  02E7                     	ds	2
  5303                           
  5304                           	psect	bssBANK6
  5305  0320                     __pbssBANK6:	
  5306  0320                     measureVoltages@F7580:	
  5307  0320                     	ds	24
  5308                           
  5309                           	psect	inittext
  5310  2ABF                     init_ram:	
  5311  2ABF  00FE               	movwf	126
  5312  2AC0                     initloop:	
  5313  2AC0  0012               	moviw fsr0++
  5314  2AC1  001E               	movwi fsr1++
  5315  2AC2  0BFE               	decfsz	126,f
  5316  2AC3  2AC0               	goto	initloop
  5317  2AC4  3400               	retlw	0
  5318                           
  5319                           	psect	clrtext
  5320  2AB9                     clear_ram0:	
  5321                           ;	Called with FSR0 containing the base address, and
  5322                           ;	WREG with the size to clear
  5323                           
  5324  2AB9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5325  2ABA                     clrloop0:	
  5326  2ABA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5327  2ABB  3101               	addfsr 0,1
  5328  2ABC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5329  2ABD  2ABA               	goto	clrloop0	;have we reached the end yet?
  5330  2ABE  3400               	retlw	0	;all done for this memory range, return
  5331                           
  5332                           	psect	cstackBANK4
  5333  0220                     __pcstackBANK4:	
  5334  0220                     main@voltages:	
  5335                           
  5336                           ; 48 bytes @ 0x0
  5337  0220                     	ds	48
  5338  0250                     main@temps:	
  5339                           
  5340                           ; 10 bytes @ 0x30
  5341  0250                     	ds	10
  5342  025A                     main@highestTemp:	
  5343                           
  5344                           ; 2 bytes @ 0x3A
  5345  025A                     	ds	2
  5346  025C                     main@numFaults:	
  5347                           
  5348                           ; 2 bytes @ 0x3C
  5349  025C                     	ds	2
  5350  025E                     main@totalVoltage:	
  5351                           
  5352                           ; 4 bytes @ 0x3E
  5353  025E                     	ds	4
  5354  0262                     main@current:	
  5355                           
  5356                           ; 4 bytes @ 0x42
  5357  0262                     	ds	4
  5358  0266                     main@currentIndex:	
  5359                           
  5360                           ; 2 bytes @ 0x46
  5361  0266                     	ds	2
  5362  0268                     main@i:	
  5363                           
  5364                           ; 2 bytes @ 0x48
  5365  0268                     	ds	2
  5366                           
  5367                           	psect	cstackBANK3
  5368  01A0                     __pcstackBANK3:	
  5369  01A0                     main@currentBuff:	
  5370                           
  5371                           ; 80 bytes @ 0x0
  5372  01A0                     	ds	80
  5373                           
  5374                           	psect	cstackBANK2
  5375  0120                     __pcstackBANK2:	
  5376  0120                     ??_sprintf:	
  5377  0120                     cellBalancing@boolean:	
  5378                           ; 1 bytes @ 0x0
  5379                           
  5380  0120                     measureVoltages@ltcData:	
  5381                           ; 1 bytes @ 0x0
  5382                           
  5383                           
  5384                           ; 24 bytes @ 0x0
  5385  0120                     	ds	1
  5386  0121                     cellBalancing@minVoltage:	
  5387                           
  5388                           ; 4 bytes @ 0x1
  5389  0121                     	ds	4
  5390  0125                     cellBalancing@i:	
  5391                           
  5392                           ; 2 bytes @ 0x5
  5393  0125                     	ds	1
  5394  0126                     _sprintf$2180:	
  5395                           
  5396                           ; 4 bytes @ 0x6
  5397  0126                     	ds	1
  5398  0127                     cellBalancing@i_1309:	
  5399                           
  5400                           ; 2 bytes @ 0x7
  5401  0127                     	ds	2
  5402  0129                     cellBalancing@voltages:	
  5403                           
  5404                           ; 1 bytes @ 0x9
  5405  0129                     	ds	1
  5406  012A                     sprintf@ap:	
  5407                           
  5408                           ; 1 bytes @ 0xA
  5409  012A                     	ds	1
  5410  012B                     sprintf@tmpval:	
  5411                           
  5412                           ; 4 bytes @ 0xB
  5413  012B                     	ds	4
  5414  012F                     sprintf@val:	
  5415                           
  5416                           ; 4 bytes @ 0xF
  5417  012F                     	ds	4
  5418  0133                     sprintf@exp:	
  5419                           
  5420                           ; 2 bytes @ 0x13
  5421  0133                     	ds	2
  5422  0135                     sprintf@flag:	
  5423                           
  5424                           ; 2 bytes @ 0x15
  5425  0135                     	ds	2
  5426  0137                     sprintf@width:	
  5427                           
  5428                           ; 2 bytes @ 0x17
  5429  0137                     	ds	1
  5430  0138                     measureVoltages@pecError:	
  5431                           
  5432                           ; 1 bytes @ 0x18
  5433  0138                     	ds	1
  5434  0139                     measureVoltages@voltages:	
  5435  0139                     sprintf@fval:	
  5436                           ; 1 bytes @ 0x19
  5437                           
  5438                           
  5439                           ; 4 bytes @ 0x19
  5440  0139                     	ds	1
  5441  013A                     measureVoltages@i:	
  5442                           
  5443                           ; 2 bytes @ 0x1A
  5444  013A                     	ds	3
  5445  013D                     sprintf@prec:	
  5446                           
  5447                           ; 2 bytes @ 0x1D
  5448  013D                     	ds	2
  5449  013F                     sprintf@sp:	
  5450                           
  5451                           ; 1 bytes @ 0x1F
  5452  013F                     	ds	1
  5453  0140                     sprintf@c:	
  5454                           
  5455                           ; 1 bytes @ 0x20
  5456  0140                     	ds	1
  5457  0141                     ?_clearScreen:	
  5458  0141                     ?_writeVoltages:	
  5459                           ; 1 bytes @ 0x21
  5460                           
  5461  0141                     ?_writeTemps:	
  5462                           ; 1 bytes @ 0x21
  5463                           
  5464  0141                     ?_writeCurrent:	
  5465                           ; 1 bytes @ 0x21
  5466                           
  5467  0141                     writeVoltages@length:	
  5468                           ; 1 bytes @ 0x21
  5469                           
  5470  0141                     writeTemps@highestTemp:	
  5471                           ; 2 bytes @ 0x21
  5472                           
  5473  0141                     clearScreen@numLines:	
  5474                           ; 2 bytes @ 0x21
  5475                           
  5476  0141                     writeCurrent@current:	
  5477                           ; 2 bytes @ 0x21
  5478                           
  5479                           
  5480                           ; 4 bytes @ 0x21
  5481  0141                     	ds	2
  5482  0143                     ??_clearScreen:	
  5483  0143                     writeTemps@numTemps:	
  5484                           ; 1 bytes @ 0x23
  5485                           
  5486  0143                     writeVoltages@totalVoltage:	
  5487                           ; 2 bytes @ 0x23
  5488                           
  5489                           
  5490                           ; 4 bytes @ 0x23
  5491  0143                     	ds	2
  5492  0145                     writeTemps@temps:	
  5493                           
  5494                           ; 1 bytes @ 0x25
  5495  0145                     	ds	1
  5496  0146                     writeTemps@k:	
  5497  0146                     clearScreen@j:	
  5498                           ; 2 bytes @ 0x26
  5499                           
  5500                           
  5501                           ; 2 bytes @ 0x26
  5502  0146                     	ds	1
  5503  0147                     ??_writeVoltages:	
  5504                           
  5505                           ; 1 bytes @ 0x27
  5506  0147                     	ds	4
  5507  014B                     _writeVoltages$2176:	
  5508                           
  5509                           ; 4 bytes @ 0x2B
  5510  014B                     	ds	4
  5511  014F                     writeVoltages@maxCell:	
  5512                           
  5513                           ; 2 bytes @ 0x2F
  5514  014F                     	ds	2
  5515  0151                     writeVoltages@minCell:	
  5516                           
  5517                           ; 2 bytes @ 0x31
  5518  0151                     	ds	2
  5519  0153                     writeVoltages@volts:	
  5520                           
  5521                           ; 1 bytes @ 0x33
  5522  0153                     	ds	1
  5523  0154                     writeVoltages@k:	
  5524                           
  5525                           ; 2 bytes @ 0x34
  5526  0154                     	ds	2
  5527  0156                     ?_writeValuesToUart:	
  5528  0156                     writeValuesToUart@voltageArrLength:	
  5529                           ; 1 bytes @ 0x36
  5530                           
  5531                           
  5532                           ; 2 bytes @ 0x36
  5533  0156                     	ds	2
  5534  0158                     writeValuesToUart@totalVoltage:	
  5535                           
  5536                           ; 4 bytes @ 0x38
  5537  0158                     	ds	4
  5538  015C                     writeValuesToUart@temperatureArr:	
  5539                           
  5540                           ; 1 bytes @ 0x3C
  5541  015C                     	ds	1
  5542  015D                     writeValuesToUart@temperatureArrLength:	
  5543                           
  5544                           ; 2 bytes @ 0x3D
  5545  015D                     	ds	2
  5546  015F                     writeValuesToUart@temperatureHigh:	
  5547                           
  5548                           ; 2 bytes @ 0x3F
  5549  015F                     	ds	2
  5550  0161                     writeValuesToUart@current:	
  5551                           
  5552                           ; 4 bytes @ 0x41
  5553  0161                     	ds	4
  5554  0165                     writeValuesToUart@uartLines:	
  5555                           
  5556                           ; 2 bytes @ 0x45
  5557  0165                     	ds	2
  5558  0167                     writeValuesToUart@voltageArr:	
  5559                           
  5560                           ; 1 bytes @ 0x47
  5561  0167                     	ds	1
  5562  0168                     ??_main:	
  5563                           
  5564                           ; 1 bytes @ 0x48
  5565  0168                     	ds	3
  5566  016B                     main@soc:	
  5567                           
  5568                           ; 2 bytes @ 0x4B
  5569  016B                     	ds	2
  5570                           
  5571                           	psect	cstackBANK1
  5572  00A0                     __pcstackBANK1:	
  5573  00A0                     ??_sumVoltages:	
  5574  00A0                     ??_fround:	
  5575                           ; 1 bytes @ 0x0
  5576                           
  5577  00A0                     ??_scale:	
  5578                           ; 1 bytes @ 0x0
  5579                           
  5580                           
  5581                           ; 1 bytes @ 0x0
  5582  00A0                     	ds	5
  5583  00A5                     sumVoltages@data:	
  5584                           
  5585                           ; 8 bytes @ 0x5
  5586  00A5                     	ds	8
  5587  00AD                     sumVoltages@voltages:	
  5588                           
  5589                           ; 1 bytes @ 0xD
  5590  00AD                     	ds	1
  5591  00AE                     sumVoltages@totalVoltage:	
  5592                           
  5593                           ; 2 bytes @ 0xE
  5594  00AE                     	ds	2
  5595  00B0                     _scale$2179:	
  5596                           
  5597                           ; 4 bytes @ 0x10
  5598  00B0                     	ds	4
  5599  00B4                     scale@scl:	
  5600  00B4                     _fround$2178:	
  5601                           ; 1 bytes @ 0x14
  5602                           
  5603                           
  5604                           ; 4 bytes @ 0x14
  5605  00B4                     	ds	1
  5606  00B5                     ?___fltol:	
  5607  00B5                     ___fltol@f1:	
  5608                           ; 4 bytes @ 0x15
  5609                           
  5610                           
  5611                           ; 4 bytes @ 0x15
  5612  00B5                     	ds	3
  5613  00B8                     _fround$2177:	
  5614                           
  5615                           ; 4 bytes @ 0x18
  5616  00B8                     	ds	1
  5617  00B9                     ??___fltol:	
  5618                           
  5619                           ; 1 bytes @ 0x19
  5620  00B9                     	ds	3
  5621  00BC                     fround@prec:	
  5622                           
  5623                           ; 1 bytes @ 0x1C
  5624  00BC                     	ds	1
  5625  00BD                     ?___fladd:	
  5626  00BD                     ___fladd@b:	
  5627                           ; 4 bytes @ 0x1D
  5628                           
  5629                           
  5630                           ; 4 bytes @ 0x1D
  5631  00BD                     	ds	1
  5632  00BE                     ___fltol@sign1:	
  5633                           
  5634                           ; 1 bytes @ 0x1E
  5635  00BE                     	ds	1
  5636  00BF                     ___fltol@exp1:	
  5637                           
  5638                           ; 1 bytes @ 0x1F
  5639  00BF                     	ds	1
  5640  00C0                     ?_calculateTemp:	
  5641  00C0                     calculateTemp@adcValue:	
  5642                           ; 2 bytes @ 0x20
  5643                           
  5644                           
  5645                           ; 2 bytes @ 0x20
  5646  00C0                     	ds	1
  5647  00C1                     ___fladd@a:	
  5648                           
  5649                           ; 4 bytes @ 0x21
  5650  00C1                     	ds	1
  5651  00C2                     ??_calculateTemp:	
  5652                           
  5653                           ; 1 bytes @ 0x22
  5654  00C2                     	ds	2
  5655  00C4                     calculateTemp@voltage:	
  5656                           
  5657                           ; 4 bytes @ 0x24
  5658  00C4                     	ds	1
  5659  00C5                     ??___fladd:	
  5660                           
  5661                           ; 1 bytes @ 0x25
  5662  00C5                     	ds	3
  5663  00C8                     ?_getTemps:	
  5664  00C8                     getTemps@numTemps:	
  5665                           ; 2 bytes @ 0x28
  5666                           
  5667                           
  5668                           ; 2 bytes @ 0x28
  5669  00C8                     	ds	2
  5670  00CA                     ??_getTemps:	
  5671                           
  5672                           ; 1 bytes @ 0x2A
  5673  00CA                     	ds	4
  5674  00CE                     getTemps@highestTemp:	
  5675                           
  5676                           ; 2 bytes @ 0x2E
  5677  00CE                     	ds	2
  5678  00D0                     getTemps@temperatures:	
  5679                           
  5680                           ; 1 bytes @ 0x30
  5681  00D0                     	ds	1
  5682  00D1                     ___fladd@signs:	
  5683  00D1                     getTemps@inc:	
  5684                           ; 1 bytes @ 0x31
  5685                           
  5686                           
  5687                           ; 2 bytes @ 0x31
  5688  00D1                     	ds	1
  5689  00D2                     ___fladd@aexp:	
  5690                           
  5691                           ; 1 bytes @ 0x32
  5692  00D2                     	ds	1
  5693  00D3                     ___fladd@bexp:	
  5694                           
  5695                           ; 1 bytes @ 0x33
  5696  00D3                     	ds	1
  5697  00D4                     ___fladd@grs:	
  5698                           
  5699                           ; 1 bytes @ 0x34
  5700  00D4                     	ds	1
  5701  00D5                     ?___flge:	
  5702  00D5                     ?_avgBuff:	
  5703                           ; 1 bit 
  5704                           
  5705  00D5                     ?_calculateCurrent:	
  5706                           ; 4 bytes @ 0x35
  5707                           
  5708  00D5                     ?___flsub:	
  5709                           ; 4 bytes @ 0x35
  5710                           
  5711  00D5                     avgBuff@size:	
  5712                           ; 4 bytes @ 0x35
  5713                           
  5714  00D5                     calculateCurrent@adcValue:	
  5715                           ; 2 bytes @ 0x35
  5716                           
  5717  00D5                     ___flge@ff1:	
  5718                           ; 4 bytes @ 0x35
  5719                           
  5720  00D5                     ___flsub@a:	
  5721                           ; 4 bytes @ 0x35
  5722                           
  5723                           
  5724                           ; 4 bytes @ 0x35
  5725  00D5                     	ds	4
  5726  00D9                     ??_avgBuff:	
  5727  00D9                     calculateCurrent@curr:	
  5728                           ; 1 bytes @ 0x39
  5729                           
  5730  00D9                     ___flge@ff2:	
  5731                           ; 4 bytes @ 0x39
  5732                           
  5733  00D9                     ___flsub@b:	
  5734                           ; 4 bytes @ 0x39
  5735                           
  5736                           
  5737                           ; 4 bytes @ 0x39
  5738  00D9                     	ds	2
  5739  00DB                     avgBuff@buff:	
  5740                           
  5741                           ; 1 bytes @ 0x3B
  5742  00DB                     	ds	1
  5743  00DC                     avgBuff@total:	
  5744                           
  5745                           ; 4 bytes @ 0x3C
  5746  00DC                     	ds	1
  5747  00DD                     ??___flge:	
  5748  00DD                     _calculateCurrent$2175:	
  5749                           ; 1 bytes @ 0x3D
  5750                           
  5751                           
  5752                           ; 4 bytes @ 0x3D
  5753  00DD                     	ds	3
  5754  00E0                     avgBuff@inc:	
  5755                           
  5756                           ; 2 bytes @ 0x40
  5757  00E0                     	ds	1
  5758  00E1                     ?_getCurrent:	
  5759                           
  5760                           ; 4 bytes @ 0x41
  5761  00E1                     	ds	4
  5762  00E5                     ?_measureVoltages:	
  5763  00E5                     ?_cellBalancing:	
  5764                           ; 1 bytes @ 0x45
  5765                           
  5766  00E5                     ?_sprintf:	
  5767                           ; 1 bytes @ 0x45
  5768                           
  5769  00E5                     measureVoltages@totalVoltage:	
  5770                           ; 2 bytes @ 0x45
  5771                           
  5772  00E5                     cellBalancing@numVoltages:	
  5773                           ; 2 bytes @ 0x45
  5774                           
  5775  00E5                     sprintf@f:	
  5776                           ; 2 bytes @ 0x45
  5777                           
  5778  00E5                     getCurrent@currentValue:	
  5779                           ; 2 bytes @ 0x45
  5780                           
  5781                           
  5782                           ; 4 bytes @ 0x45
  5783  00E5                     	ds	2
  5784  00E7                     ??_cellBalancing:	
  5785  00E7                     measureVoltages@numVoltages:	
  5786                           ; 1 bytes @ 0x47
  5787                           
  5788                           
  5789                           ; 2 bytes @ 0x47
  5790  00E7                     	ds	2
  5791  00E9                     ??_measureVoltages:	
  5792                           
  5793                           ; 1 bytes @ 0x49
  5794  00E9                     	ds	6
  5795  00EF                     ??_writeTemps:	
  5796                           
  5797                           ; 1 bytes @ 0x4F
  5798  00EF                     	ds	1
  5799                           
  5800                           	psect	cstackCOMMON
  5801  0070                     __pcstackCOMMON:	
  5802  0070                     ?_isdigit:	
  5803  0070                     ?_setup:	
  5804                           ; 1 bit 
  5805                           
  5806  0070                     ?_uartDisable:	
  5807                           ; 1 bytes @ 0x0
  5808                           
  5809  0070                     ??_uartDisable:	
  5810                           ; 1 bytes @ 0x0
  5811                           
  5812  0070                     ?_timerSetup:	
  5813                           ; 1 bytes @ 0x0
  5814                           
  5815  0070                     ?_adcSetup:	
  5816                           ; 1 bytes @ 0x0
  5817                           
  5818  0070                     ?_uartSetup:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  0070                     ?_i2cSetup:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  0070                     ?_spiSetup:	
  5825                           ; 1 bytes @ 0x0
  5826                           
  5827  0070                     ?_uartEnable:	
  5828                           ; 1 bytes @ 0x0
  5829                           
  5830  0070                     ?_timer0Setup:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ?_timer2Setup:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     ?_LTC6804_adstat:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ?_LTC6804_adcv:	
  5840                           ; 1 bytes @ 0x0
  5841                           
  5842  0070                     ?_wakeup_idle:	
  5843                           ; 1 bytes @ 0x0
  5844                           
  5845  0070                     ?_spi_write:	
  5846                           ; 1 bytes @ 0x0
  5847                           
  5848  0070                     ?_spi_read:	
  5849                           ; 1 bytes @ 0x0
  5850                           
  5851  0070                     ?_main:	
  5852                           ; 1 bytes @ 0x0
  5853                           
  5854  0070                     ?_ISR:	
  5855                           ; 1 bytes @ 0x0
  5856                           
  5857  0070                     ??_ISR:	
  5858                           ; 1 bytes @ 0x0
  5859                           
  5860                           
  5861                           ; 1 bytes @ 0x0
  5862  0070                     	ds	2
  5863  0072                     ??_timerSetup:	
  5864  0072                     ??_adcSetup:	
  5865                           ; 1 bytes @ 0x2
  5866                           
  5867  0072                     ??_uartSetup:	
  5868                           ; 1 bytes @ 0x2
  5869                           
  5870  0072                     ??_i2cSetup:	
  5871                           ; 1 bytes @ 0x2
  5872                           
  5873  0072                     ??_spiSetup:	
  5874                           ; 1 bytes @ 0x2
  5875                           
  5876  0072                     ??_uartEnable:	
  5877                           ; 1 bytes @ 0x2
  5878                           
  5879  0072                     ??_timer0Setup:	
  5880                           ; 1 bytes @ 0x2
  5881                           
  5882  0072                     ??_timer2Setup:	
  5883                           ; 1 bytes @ 0x2
  5884                           
  5885  0072                     ?_setDischarge:	
  5886                           ; 1 bytes @ 0x2
  5887                           
  5888  0072                     ??_wakeup_idle:	
  5889                           ; 1 bytes @ 0x2
  5890                           
  5891  0072                     ?_set_adc:	
  5892                           ; 1 bytes @ 0x2
  5893                           
  5894  0072                     ??_spi_write:	
  5895                           ; 1 bytes @ 0x2
  5896                           
  5897  0072                     ??_spi_read:	
  5898                           ; 1 bytes @ 0x2
  5899                           
  5900  0072                     ??_isdigit:	
  5901                           ; 1 bytes @ 0x2
  5902                           
  5903  0072                     ?___bmul:	
  5904                           ; 1 bytes @ 0x2
  5905                           
  5906  0072                     ?_adcRead:	
  5907                           ; 1 bytes @ 0x2
  5908                           
  5909  0072                     ?__Umul8_16:	
  5910                           ; 2 bytes @ 0x2
  5911                           
  5912  0072                     ?___wmul:	
  5913                           ; 2 bytes @ 0x2
  5914                           
  5915  0072                     ?___awmod:	
  5916                           ; 2 bytes @ 0x2
  5917                           
  5918  0072                     ?__tdiv_to_l_:	
  5919                           ; 2 bytes @ 0x2
  5920                           
  5921  0072                     ?__div_to_l_:	
  5922                           ; 4 bytes @ 0x2
  5923                           
  5924  0072                     ?___flneg:	
  5925                           ; 4 bytes @ 0x2
  5926                           
  5927  0072                     ?___lldiv:	
  5928                           ; 4 bytes @ 0x2
  5929                           
  5930  0072                     set_adc@DCP:	
  5931                           ; 4 bytes @ 0x2
  5932                           
  5933  0072                     ___bmul@multiplicand:	
  5934                           ; 1 bytes @ 0x2
  5935                           
  5936  0072                     _isdigit$1783:	
  5937                           ; 1 bytes @ 0x2
  5938                           
  5939  0072                     __Umul8_16@multiplicand:	
  5940                           ; 1 bytes @ 0x2
  5941                           
  5942  0072                     setDischarge@index:	
  5943                           ; 1 bytes @ 0x2
  5944                           
  5945  0072                     ___wmul@multiplier:	
  5946                           ; 2 bytes @ 0x2
  5947                           
  5948  0072                     ___awmod@divisor:	
  5949                           ; 2 bytes @ 0x2
  5950                           
  5951  0072                     __div_to_l_@f1:	
  5952                           ; 2 bytes @ 0x2
  5953                           
  5954  0072                     ___flneg@f1:	
  5955                           ; 4 bytes @ 0x2
  5956                           
  5957  0072                     __tdiv_to_l_@f1:	
  5958                           ; 4 bytes @ 0x2
  5959                           
  5960  0072                     ___lldiv@divisor:	
  5961                           ; 4 bytes @ 0x2
  5962                           
  5963                           
  5964                           ; 4 bytes @ 0x2
  5965  0072                     	ds	1
  5966  0073                     ??___bmul:	
  5967  0073                     set_adc@CH:	
  5968                           ; 1 bytes @ 0x3
  5969                           
  5970  0073                     spi_write@readData:	
  5971                           ; 1 bytes @ 0x3
  5972                           
  5973  0073                     spi_read@data:	
  5974                           ; 1 bytes @ 0x3
  5975                           
  5976  0073                     isdigit@c:	
  5977                           ; 1 bytes @ 0x3
  5978                           
  5979                           
  5980                           ; 1 bytes @ 0x3
  5981  0073                     	ds	1
  5982  0074                     ??__Umul8_16:	
  5983  0074                     ??___xxtofl:	
  5984                           ; 1 bytes @ 0x4
  5985                           
  5986  0074                     setDischarge@boolean:	
  5987                           ; 1 bytes @ 0x4
  5988                           
  5989  0074                     set_adc@CHG:	
  5990                           ; 1 bytes @ 0x4
  5991                           
  5992  0074                     spi_write@data:	
  5993                           ; 1 bytes @ 0x4
  5994                           
  5995  0074                     spi_read@readData:	
  5996                           ; 1 bytes @ 0x4
  5997                           
  5998  0074                     ___bmul@product:	
  5999                           ; 1 bytes @ 0x4
  6000                           
  6001  0074                     ___wmul@multiplicand:	
  6002                           ; 1 bytes @ 0x4
  6003                           
  6004  0074                     ___awmod@dividend:	
  6005                           ; 2 bytes @ 0x4
  6006                           
  6007                           
  6008                           ; 2 bytes @ 0x4
  6009  0074                     	ds	1
  6010  0075                     ??_setDischarge:	
  6011  0075                     ?_spi_write_array:	
  6012                           ; 1 bytes @ 0x5
  6013                           
  6014  0075                     ??_set_adc:	
  6015                           ; 1 bytes @ 0x5
  6016                           
  6017  0075                     spi_write_array@data:	
  6018                           ; 1 bytes @ 0x5
  6019                           
  6020  0075                     ___bmul@multiplier:	
  6021                           ; 1 bytes @ 0x5
  6022                           
  6023                           
  6024                           ; 1 bytes @ 0x5
  6025  0075                     	ds	1
  6026  0076                     ?_spi_write_read:	
  6027  0076                     ??_spi_write_array:	
  6028                           ; 1 bytes @ 0x6
  6029                           
  6030  0076                     ??___wmul:	
  6031                           ; 1 bytes @ 0x6
  6032                           
  6033  0076                     ??___awmod:	
  6034                           ; 1 bytes @ 0x6
  6035                           
  6036  0076                     ??___flneg:	
  6037                           ; 1 bytes @ 0x6
  6038                           
  6039  0076                     spi_write_read@tx_len:	
  6040                           ; 1 bytes @ 0x6
  6041                           
  6042  0076                     ___wmul@product:	
  6043                           ; 1 bytes @ 0x6
  6044                           
  6045  0076                     __div_to_l_@f2:	
  6046                           ; 2 bytes @ 0x6
  6047                           
  6048  0076                     __tdiv_to_l_@f2:	
  6049                           ; 4 bytes @ 0x6
  6050                           
  6051  0076                     ___lldiv@dividend:	
  6052                           ; 4 bytes @ 0x6
  6053                           
  6054                           
  6055                           ; 4 bytes @ 0x6
  6056  0076                     	ds	1
  6057  0077                     set_adc@MD:	
  6058  0077                     spi_write_array@len:	
  6059                           ; 1 bytes @ 0x7
  6060                           
  6061  0077                     spi_write_read@rx_data:	
  6062                           ; 1 bytes @ 0x7
  6063                           
  6064  0077                     ___awmod@counter:	
  6065                           ; 1 bytes @ 0x7
  6066                           
  6067                           
  6068                           ; 1 bytes @ 0x7
  6069  0077                     	ds	1
  6070  0078                     ?_pec15_calc:	
  6071  0078                     set_adc@md_bits:	
  6072                           ; 2 bytes @ 0x8
  6073                           
  6074  0078                     spi_write_array@i:	
  6075                           ; 1 bytes @ 0x8
  6076                           
  6077  0078                     spi_write_read@rx_len:	
  6078                           ; 1 bytes @ 0x8
  6079                           
  6080  0078                     ___awmod@sign:	
  6081                           ; 1 bytes @ 0x8
  6082                           
  6083  0078                     pec15_calc@data:	
  6084                           ; 1 bytes @ 0x8
  6085                           
  6086                           
  6087                           ; 2 bytes @ 0x8
  6088  0078                     	ds	1
  6089  0079                     ??___awdiv:	
  6090                           
  6091                           ; 1 bytes @ 0x9
  6092  0079                     	ds	1
  6093  007A                     ??_setup:	
  6094  007A                     ??_getCurrent:	
  6095                           ; 1 bytes @ 0xA
  6096                           
  6097  007A                     ??_writeValuesToUart:	
  6098                           ; 1 bytes @ 0xA
  6099                           
  6100  007A                     ??_LTC6804_initialize:	
  6101                           ; 1 bytes @ 0xA
  6102                           
  6103  007A                     ??_writeCurrent:	
  6104                           ; 1 bytes @ 0xA
  6105                           
  6106  007A                     ??_calculateCurrent:	
  6107                           ; 1 bytes @ 0xA
  6108                           
  6109  007A                     ??___flsub:	
  6110                           ; 1 bytes @ 0xA
  6111                           
  6112                           
  6113                           	psect	cstackBANK0
  6114  0020                     __pcstackBANK0:	
  6115                           ; 1 bytes @ 0xA
  6116                           
  6117  0020                     ??_adcRead:	
  6118  0020                     ??_pec15_calc:	
  6119                           ; 1 bytes @ 0x0
  6120                           
  6121  0020                     ??_spi_write_read:	
  6122                           ; 1 bytes @ 0x0
  6123                           
  6124  0020                     ??__tdiv_to_l_:	
  6125                           ; 1 bytes @ 0x0
  6126                           
  6127  0020                     ??__div_to_l_:	
  6128                           ; 1 bytes @ 0x0
  6129                           
  6130  0020                     ??___lldiv:	
  6131                           ; 1 bytes @ 0x0
  6132                           
  6133  0020                     ?___awdiv:	
  6134                           ; 1 bytes @ 0x0
  6135                           
  6136  0020                     ___awdiv@divisor:	
  6137                           ; 2 bytes @ 0x0
  6138                           
  6139  0020                     __Umul8_16@product:	
  6140                           ; 2 bytes @ 0x0
  6141                           
  6142                           
  6143                           ; 2 bytes @ 0x0
  6144  0020                     	ds	1
  6145  0021                     ___lldiv@quotient:	
  6146                           
  6147                           ; 4 bytes @ 0x1
  6148  0021                     	ds	1
  6149  0022                     spi_write_read@i:	
  6150  0022                     ___awdiv@dividend:	
  6151                           ; 1 bytes @ 0x2
  6152                           
  6153  0022                     __Umul8_16@word_mpld:	
  6154                           ; 2 bytes @ 0x2
  6155                           
  6156                           
  6157                           ; 2 bytes @ 0x2
  6158  0022                     	ds	1
  6159  0023                     spi_write_read@i_1437:	
  6160                           
  6161                           ; 1 bytes @ 0x3
  6162  0023                     	ds	1
  6163  0024                     spi_write_read@tx_Data:	
  6164  0024                     ___awdiv@counter:	
  6165                           ; 1 bytes @ 0x4
  6166                           
  6167  0024                     __Umul8_16@multiplier:	
  6168                           ; 1 bytes @ 0x4
  6169                           
  6170  0024                     __tdiv_to_l_@quot:	
  6171                           ; 1 bytes @ 0x4
  6172                           
  6173                           
  6174                           ; 4 bytes @ 0x4
  6175  0024                     	ds	1
  6176  0025                     ___awdiv@sign:	
  6177  0025                     ___lldiv@counter:	
  6178                           ; 1 bytes @ 0x5
  6179                           
  6180  0025                     __div_to_l_@quot:	
  6181                           ; 1 bytes @ 0x5
  6182                           
  6183                           
  6184                           ; 4 bytes @ 0x5
  6185  0025                     	ds	1
  6186  0026                     ?___llmod:	
  6187  0026                     ___awdiv@quotient:	
  6188                           ; 4 bytes @ 0x6
  6189                           
  6190  0026                     ___llmod@divisor:	
  6191                           ; 2 bytes @ 0x6
  6192                           
  6193                           
  6194                           ; 4 bytes @ 0x6
  6195  0026                     	ds	1
  6196  0027                     adcRead@ch:	
  6197                           
  6198                           ; 1 bytes @ 0x7
  6199  0027                     	ds	1
  6200  0028                     __tdiv_to_l_@cntr:	
  6201  0028                     adcRead@ansHigh:	
  6202                           ; 1 bytes @ 0x8
  6203                           
  6204                           
  6205                           ; 2 bytes @ 0x8
  6206  0028                     	ds	1
  6207  0029                     __div_to_l_@cntr:	
  6208  0029                     __tdiv_to_l_@exp1:	
  6209                           ; 1 bytes @ 0x9
  6210                           
  6211  0029                     pec15_calc@addr:	
  6212                           ; 1 bytes @ 0x9
  6213                           
  6214                           
  6215                           ; 2 bytes @ 0x9
  6216  0029                     	ds	1
  6217  002A                     __div_to_l_@exp1:	
  6218  002A                     adcRead@ansLow:	
  6219                           ; 1 bytes @ 0xA
  6220                           
  6221  002A                     ___llmod@dividend:	
  6222                           ; 2 bytes @ 0xA
  6223                           
  6224                           
  6225                           ; 4 bytes @ 0xA
  6226  002A                     	ds	1
  6227  002B                     pec15_calc@len:	
  6228                           
  6229                           ; 1 bytes @ 0xB
  6230  002B                     	ds	1
  6231  002C                     pec15_calc@i:	
  6232  002C                     adcRead@total:	
  6233                           ; 1 bytes @ 0xC
  6234                           
  6235                           
  6236                           ; 2 bytes @ 0xC
  6237  002C                     	ds	1
  6238  002D                     pec15_calc@remainder:	
  6239                           
  6240                           ; 2 bytes @ 0xD
  6241  002D                     	ds	1
  6242  002E                     ??___llmod:	
  6243  002E                     ?___xxtofl:	
  6244                           ; 1 bytes @ 0xE
  6245                           
  6246  002E                     ___xxtofl@val:	
  6247                           ; 4 bytes @ 0xE
  6248                           
  6249                           
  6250                           ; 4 bytes @ 0xE
  6251  002E                     	ds	1
  6252  002F                     ??_LTC6804_adstat:	
  6253  002F                     ?_LTC6804_rdstat_reg:	
  6254                           ; 1 bytes @ 0xF
  6255                           
  6256  002F                     ??_LTC6804_adcv:	
  6257                           ; 1 bytes @ 0xF
  6258                           
  6259  002F                     ?_LTC6804_wrcfg:	
  6260                           ; 1 bytes @ 0xF
  6261                           
  6262  002F                     ?_LTC6804_rdcv_reg:	
  6263                           ; 1 bytes @ 0xF
  6264                           
  6265  002F                     LTC6804_rdstat_reg@total_ic:	
  6266                           ; 1 bytes @ 0xF
  6267                           
  6268  002F                     LTC6804_rdcv_reg@total_ic:	
  6269                           ; 1 bytes @ 0xF
  6270                           
  6271  002F                     ___llmod@counter:	
  6272                           ; 1 bytes @ 0xF
  6273                           
  6274  002F                     LTC6804_wrcfg@config:	
  6275                           ; 1 bytes @ 0xF
  6276                           
  6277                           
  6278                           ; 2 bytes @ 0xF
  6279  002F                     	ds	1
  6280  0030                     LTC6804_rdstat_reg@data:	
  6281  0030                     LTC6804_rdcv_reg@data:	
  6282                           ; 1 bytes @ 0x10
  6283                           
  6284  0030                     LTC6804_adstat@cmd:	
  6285                           ; 1 bytes @ 0x10
  6286                           
  6287  0030                     LTC6804_adcv@cmd:	
  6288                           ; 4 bytes @ 0x10
  6289                           
  6290                           
  6291                           ; 4 bytes @ 0x10
  6292  0030                     	ds	1
  6293  0031                     ??_LTC6804_rdstat_reg:	
  6294  0031                     ??_LTC6804_wrcfg:	
  6295                           ; 1 bytes @ 0x11
  6296                           
  6297  0031                     ??_LTC6804_rdcv_reg:	
  6298                           ; 1 bytes @ 0x11
  6299                           
  6300                           
  6301                           ; 1 bytes @ 0x11
  6302  0031                     	ds	1
  6303  0032                     ___xxtofl@sign:	
  6304                           
  6305                           ; 1 bytes @ 0x12
  6306  0032                     	ds	1
  6307  0033                     ___xxtofl@exp:	
  6308                           
  6309                           ; 1 bytes @ 0x13
  6310  0033                     	ds	1
  6311  0034                     LTC6804_adstat@cmd_pec:	
  6312  0034                     LTC6804_adcv@cmd_pec:	
  6313                           ; 2 bytes @ 0x14
  6314                           
  6315  0034                     ___xxtofl@arg:	
  6316                           ; 2 bytes @ 0x14
  6317                           
  6318                           
  6319                           ; 4 bytes @ 0x14
  6320  0034                     	ds	1
  6321  0035                     LTC6804_rdstat_reg@reg:	
  6322  0035                     LTC6804_rdcv_reg@cmd_pec:	
  6323                           ; 1 bytes @ 0x15
  6324                           
  6325                           
  6326                           ; 2 bytes @ 0x15
  6327  0035                     	ds	1
  6328  0036                     LTC6804_rdstat_reg@cmd_pec:	
  6329  0036                     LTC6804_wrcfg@cmd:	
  6330                           ; 2 bytes @ 0x16
  6331                           
  6332                           
  6333                           ; 12 bytes @ 0x16
  6334  0036                     	ds	1
  6335  0037                     LTC6804_rdcv_reg@cmd:	
  6336                           
  6337                           ; 4 bytes @ 0x17
  6338  0037                     	ds	1
  6339  0038                     ?___fldiv:	
  6340  0038                     LTC6804_rdstat_reg@cmd:	
  6341                           ; 4 bytes @ 0x18
  6342                           
  6343  0038                     ___fldiv@a:	
  6344                           ; 4 bytes @ 0x18
  6345                           
  6346                           
  6347                           ; 4 bytes @ 0x18
  6348  0038                     	ds	3
  6349  003B                     LTC6804_rdcv_reg@reg:	
  6350                           
  6351                           ; 1 bytes @ 0x1B
  6352  003B                     	ds	1
  6353  003C                     ?_LTC6804_rdcv:	
  6354  003C                     LTC6804_rdcv@total_ic:	
  6355                           ; 1 bytes @ 0x1C
  6356                           
  6357  003C                     ___fldiv@b:	
  6358                           ; 1 bytes @ 0x1C
  6359                           
  6360                           
  6361                           ; 4 bytes @ 0x1C
  6362  003C                     	ds	1
  6363  003D                     LTC6804_rdcv@cell_codes:	
  6364                           
  6365                           ; 1 bytes @ 0x1D
  6366  003D                     	ds	1
  6367  003E                     ??_LTC6804_rdcv:	
  6368                           
  6369                           ; 1 bytes @ 0x1E
  6370  003E                     	ds	2
  6371  0040                     ??___fldiv:	
  6372                           
  6373                           ; 1 bytes @ 0x20
  6374  0040                     	ds	2
  6375  0042                     LTC6804_wrcfg@CMD_LEN:	
  6376                           
  6377                           ; 1 bytes @ 0x22
  6378  0042                     	ds	1
  6379  0043                     LTC6804_wrcfg@total_ic:	
  6380  0043                     LTC6804_rdcv@cell_data:	
  6381                           ; 1 bytes @ 0x23
  6382                           
  6383                           
  6384                           ; 8 bytes @ 0x23
  6385  0043                     	ds	1
  6386  0044                     LTC6804_wrcfg@cfg_pec:	
  6387                           
  6388                           ; 2 bytes @ 0x24
  6389  0044                     	ds	1
  6390  0045                     ___fldiv@sign:	
  6391                           
  6392                           ; 1 bytes @ 0x25
  6393  0045                     	ds	1
  6394  0046                     LTC6804_wrcfg@current_byte:	
  6395  0046                     ___fldiv@rem:	
  6396                           ; 1 bytes @ 0x26
  6397                           
  6398                           
  6399                           ; 4 bytes @ 0x26
  6400  0046                     	ds	1
  6401  0047                     LTC6804_wrcfg@current_ic:	
  6402                           
  6403                           ; 1 bytes @ 0x27
  6404  0047                     	ds	1
  6405  0048                     LTC6804_wrcfg@cmd_index:	
  6406                           
  6407                           ; 1 bytes @ 0x28
  6408  0048                     	ds	1
  6409  0049                     ?_LTC6804_initialize:	
  6410  0049                     LTC6804_initialize@configReg:	
  6411                           ; 1 bytes @ 0x29
  6412                           
  6413                           
  6414                           ; 2 bytes @ 0x29
  6415  0049                     	ds	1
  6416  004A                     ___fldiv@new_exp:	
  6417                           
  6418                           ; 2 bytes @ 0x2A
  6419  004A                     	ds	1
  6420  004B                     LTC6804_rdcv@pec_error:	
  6421                           
  6422                           ; 1 bytes @ 0x2B
  6423  004B                     	ds	1
  6424  004C                     LTC6804_rdcv@parsed_cell:	
  6425  004C                     ___fldiv@grs:	
  6426                           ; 2 bytes @ 0x2C
  6427                           
  6428                           
  6429                           ; 4 bytes @ 0x2C
  6430  004C                     	ds	2
  6431  004E                     LTC6804_rdcv@received_pec:	
  6432                           
  6433                           ; 2 bytes @ 0x2E
  6434  004E                     	ds	2
  6435  0050                     ___fldiv@bexp:	
  6436  0050                     LTC6804_rdcv@data_pec:	
  6437                           ; 1 bytes @ 0x30
  6438                           
  6439                           
  6440                           ; 2 bytes @ 0x30
  6441  0050                     	ds	1
  6442  0051                     ___fldiv@aexp:	
  6443                           
  6444                           ; 1 bytes @ 0x31
  6445  0051                     	ds	1
  6446  0052                     ?___flmul:	
  6447  0052                     LTC6804_rdcv@reg:	
  6448                           ; 4 bytes @ 0x32
  6449                           
  6450  0052                     ___flmul@b:	
  6451                           ; 1 bytes @ 0x32
  6452                           
  6453                           
  6454                           ; 4 bytes @ 0x32
  6455  0052                     	ds	1
  6456  0053                     LTC6804_rdcv@current_ic:	
  6457                           
  6458                           ; 1 bytes @ 0x33
  6459  0053                     	ds	1
  6460  0054                     LTC6804_rdcv@current_cell:	
  6461                           
  6462                           ; 1 bytes @ 0x34
  6463  0054                     	ds	1
  6464  0055                     LTC6804_rdcv@current_ic_1355:	
  6465                           
  6466                           ; 1 bytes @ 0x35
  6467  0055                     	ds	1
  6468  0056                     LTC6804_rdcv@current_cell_1356:	
  6469  0056                     ___flmul@a:	
  6470                           ; 1 bytes @ 0x36
  6471                           
  6472                           
  6473                           ; 4 bytes @ 0x36
  6474  0056                     	ds	1
  6475  0057                     LTC6804_rdcv@cell_reg:	
  6476                           
  6477                           ; 1 bytes @ 0x37
  6478  0057                     	ds	1
  6479  0058                     LTC6804_rdcv@data_counter:	
  6480                           
  6481                           ; 1 bytes @ 0x38
  6482  0058                     	ds	2
  6483  005A                     ??___flmul:	
  6484                           
  6485                           ; 1 bytes @ 0x3A
  6486  005A                     	ds	5
  6487  005F                     ___flmul@sign:	
  6488                           
  6489                           ; 1 bytes @ 0x3F
  6490  005F                     	ds	1
  6491  0060                     ___flmul@aexp:	
  6492                           
  6493                           ; 1 bytes @ 0x40
  6494  0060                     	ds	1
  6495  0061                     ___flmul@grs:	
  6496                           
  6497                           ; 4 bytes @ 0x41
  6498  0061                     	ds	4
  6499  0065                     ___flmul@bexp:	
  6500                           
  6501                           ; 1 bytes @ 0x45
  6502  0065                     	ds	1
  6503  0066                     ___flmul@prod:	
  6504                           
  6505                           ; 4 bytes @ 0x46
  6506  0066                     	ds	4
  6507  006A                     ___flmul@temp:	
  6508                           
  6509                           ; 2 bytes @ 0x4A
  6510  006A                     	ds	2
  6511  006C                     ?_sumVoltages:	
  6512  006C                     ?_fround:	
  6513                           ; 4 bytes @ 0x4C
  6514                           
  6515  006C                     ?_scale:	
  6516                           ; 4 bytes @ 0x4C
  6517                           
  6518  006C                     sumVoltages@numVoltages:	
  6519                           ; 4 bytes @ 0x4C
  6520                           
  6521                           
  6522                           ; 2 bytes @ 0x4C
  6523  006C                     	ds	4
  6524                           
  6525                           	psect	maintext
  6526  1466                     __pmaintext:	
  6527 ;;
  6528 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  6529 ;;
  6530 ;; *************** function _main *****************
  6531 ;; Defined at:
  6532 ;;		line 45 in file "main.c"
  6533 ;; Parameters:    Size  Location     Type
  6534 ;;		None
  6535 ;; Auto vars:     Size  Location     Type
  6536 ;;  i               2   72[BANK4 ] int 
  6537 ;;  currentBuff    80    0[BANK3 ] float [20]
  6538 ;;  voltages       48    0[BANK4 ] float [12]
  6539 ;;  temps          10   48[BANK4 ] int [5]
  6540 ;;  current         4   66[BANK4 ] float 
  6541 ;;  totalVoltage    4   62[BANK4 ] float 
  6542 ;;  temp            4    0        float 
  6543 ;;  currentIndex    2   70[BANK4 ] int 
  6544 ;;  numFaults       2   60[BANK4 ] int 
  6545 ;;  highestTemp     2   58[BANK4 ] int 
  6546 ;;  soc             2   75[BANK2 ] int 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  1    wreg      void 
  6549 ;; Registers used:
  6550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6551 ;; Tracked objects:
  6552 ;;		On entry : B1F/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6557 ;;      Locals:         0       0       0       2      80      74       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6558 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6559 ;;      Totals:         0       0       0       5      80      74       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6560 ;;Total ram usage:      159 bytes
  6561 ;; Hardware stack levels required when called:    8
  6562 ;; This function calls:
  6563 ;;		___flge
  6564 ;;		_avgBuff
  6565 ;;		_cellBalancing
  6566 ;;		_getCurrent
  6567 ;;		_getTemps
  6568 ;;		_measureVoltages
  6569 ;;		_setup
  6570 ;;		_sumVoltages
  6571 ;;		_writeValuesToUart
  6572 ;; This function is called by:
  6573 ;;		Startup code after reset
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           
  6578                           ;psect for function _main
  6579  1466                     _main:	
  6580                           
  6581                           ;main.c: 46: int currentIndex = 0;
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6585  1466  0024               	movlb	4	; select bank4
  6586  1467  01E6               	clrf	main@currentIndex^(0+512)
  6587  1468  01E7               	clrf	(main@currentIndex+1)^(0+512)
  6588                           
  6589                           ;main.c: 47: int numFaults = 0;
  6590  1469  01DC               	clrf	main@numFaults^(0+512)
  6591  146A  01DD               	clrf	(main@numFaults+1)^(0+512)
  6592                           
  6593                           ;main.c: 48: int highestTemp;
  6594                           ;main.c: 50: float voltages[12];
  6595                           ;main.c: 51: float totalVoltage;
  6596                           ;main.c: 53: float currentBuff[20];
  6597                           ;main.c: 54: float current = 0;
  6598  146B  3000               	movlw	0
  6599  146C  00E5               	movwf	(main@current+3)^(0+512)
  6600  146D  3000               	movlw	0
  6601  146E  00E4               	movwf	(main@current+2)^(0+512)
  6602  146F  3000               	movlw	0
  6603  1470  00E3               	movwf	(main@current+1)^(0+512)
  6604  1471  3000               	movlw	0
  6605  1472  00E2               	movwf	main@current^(0+512)
  6606                           
  6607                           ;main.c: 56: int temps[5];
  6608                           ;main.c: 57: float temp;
  6609                           ;main.c: 59: int soc = 0;
  6610  1473  0022               	movlb	2	; select bank2
  6611  1474  01EB               	clrf	main@soc^(0+256)
  6612  1475  01EC               	clrf	(main@soc+1)^(0+256)
  6613                           
  6614                           ;main.c: 61: setup();
  6615  1476  31AC  2408  3194   	fcall	_setup
  6616                           
  6617                           ;main.c: 63: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6618  1479  3029               	movlw	41
  6619  147A  0022               	movlb	2	; select bank2
  6620  147B  00E9               	movwf	(??_main^(0+256)+1)
  6621  147C  3096               	movlw	150
  6622  147D  00E8               	movwf	??_main^(0+256)
  6623  147E  307F               	movlw	127
  6624  147F                     u11697:	
  6625  147F  0B89               	decfsz	9,f
  6626  1480  2C7F               	goto	u11697
  6627  1481  0BE8               	decfsz	??_main^(0+256),f
  6628  1482  2C7F               	goto	u11697
  6629  1483  0BE9               	decfsz	(??_main^(0+256)+1),f
  6630  1484  2C7F               	goto	u11697
  6631                           
  6632                           ;main.c: 65: LATDbits.LATD5 = 0;
  6633  1485  0022               	movlb	2	; select bank2
  6634  1486  128F               	bcf	15,5	;volatile
  6635                           
  6636                           ;main.c: 66: LATDbits.LATD4 = 0;
  6637  1487  120F               	bcf	15,4	;volatile
  6638                           
  6639                           ;main.c: 68: LATDbits.LATD5 = 1;
  6640  1488  168F               	bsf	15,5	;volatile
  6641  1489                     l8180:	
  6642                           ;main.c: 78: while(1){
  6643                           
  6644                           
  6645                           ;main.c: 82: LATAbits.LATA5 ^= 1;
  6646  1489  0022               	movlb	2	; select bank2
  6647  148A  0E0C               	swapf	12,w	;volatile
  6648  148B  00E8               	movwf	??_main^(0+256)
  6649  148C  0C68               	rrf	??_main^(0+256),w
  6650  148D  3901               	andlw	1
  6651  148E  00E8               	movwf	??_main^(0+256)
  6652  148F  3001               	movlw	1
  6653  1490  06E8               	xorwf	??_main^(0+256),f
  6654  1491  0EE8               	swapf	??_main^(0+256),f
  6655  1492  0DE8               	rlf	??_main^(0+256),f
  6656  1493  080C               	movf	12,w	;volatile
  6657  1494  0668               	xorwf	??_main^(0+256),w
  6658  1495  39DF               	andlw	-33
  6659  1496  0668               	xorwf	??_main^(0+256),w
  6660  1497  008C               	movwf	12	;volatile
  6661                           
  6662                           ;main.c: 86: measureVoltages(voltages, &totalVoltage, 12);
  6663  1498  305E               	movlw	low main@totalVoltage
  6664  1499  0021               	movlb	1	; select bank1
  6665  149A  00E5               	movwf	measureVoltages@totalVoltage^(0+128)
  6666  149B  3002               	movlw	high main@totalVoltage
  6667  149C  00E6               	movwf	(measureVoltages@totalVoltage+1)^(0+128)
  6668  149D  300C               	movlw	12
  6669  149E  00E7               	movwf	measureVoltages@numVoltages^(0+128)
  6670  149F  3000               	movlw	0
  6671  14A0  00E8               	movwf	(measureVoltages@numVoltages^(0+128)+1)
  6672  14A1  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6673  14A2  319C  2405  3194   	fcall	_measureVoltages
  6674                           
  6675                           ;main.c: 87: __nop();
  6676  14A5  0000               	nop
  6677                           
  6678                           ;main.c: 88: totalVoltage = sumVoltages(voltages, 12);
  6679  14A6  300C               	movlw	12
  6680  14A7  0020               	movlb	0	; select bank0
  6681  14A8  00EC               	movwf	sumVoltages@numVoltages
  6682  14A9  3000               	movlw	0
  6683  14AA  00ED               	movwf	sumVoltages@numVoltages+1
  6684  14AB  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6685  14AC  31AE  2610  3194   	fcall	_sumVoltages
  6686  14AF  0020               	movlb	0	; select bank0
  6687  14B0  086F               	movf	?_sumVoltages+3,w
  6688  14B1  0024               	movlb	4	; select bank4
  6689  14B2  00E1               	movwf	(main@totalVoltage+3)^(0+512)
  6690  14B3  0020               	movlb	0	; select bank0
  6691  14B4  086E               	movf	?_sumVoltages+2,w
  6692  14B5  0024               	movlb	4	; select bank4
  6693  14B6  00E0               	movwf	(main@totalVoltage+2)^(0+512)
  6694  14B7  0020               	movlb	0	; select bank0
  6695  14B8  086D               	movf	?_sumVoltages+1,w
  6696  14B9  0024               	movlb	4	; select bank4
  6697  14BA  00DF               	movwf	(main@totalVoltage+1)^(0+512)
  6698  14BB  0020               	movlb	0	; select bank0
  6699  14BC  086C               	movf	?_sumVoltages,w
  6700  14BD  0024               	movlb	4	; select bank4
  6701  14BE  00DE               	movwf	main@totalVoltage^(0+512)
  6702                           
  6703                           ;main.c: 89: __nop();
  6704  14BF  0000               	nop
  6705                           
  6706                           ;main.c: 91: highestTemp = getTemps(temps, 5);
  6707  14C0  3005               	movlw	5
  6708  14C1  0021               	movlb	1	; select bank1
  6709  14C2  00C8               	movwf	getTemps@numTemps^(0+128)
  6710  14C3  3000               	movlw	0
  6711  14C4  00C9               	movwf	(getTemps@numTemps^(0+128)+1)
  6712  14C5  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  6713  14C6  31A1  216B  3194   	fcall	_getTemps
  6714  14C9  0021               	movlb	1	; select bank1
  6715  14CA  0849               	movf	(?_getTemps+1)^(0+128),w
  6716  14CB  0024               	movlb	4	; select bank4
  6717  14CC  00DB               	movwf	(main@highestTemp+1)^(0+512)
  6718  14CD  0021               	movlb	1	; select bank1
  6719  14CE  0848               	movf	?_getTemps^(0+128),w
  6720  14CF  0024               	movlb	4	; select bank4
  6721  14D0  00DA               	movwf	main@highestTemp^(0+512)
  6722                           
  6723                           ;main.c: 93: if(currentBool == 1){
  6724  14D1  0025               	movlb	5	; select bank5
  6725  14D2  0320               	decf	_currentBool^(0+640),w
  6726  14D3  0421               	iorwf	(_currentBool+1)^(0+640),w
  6727  14D4  1D03               	btfss	3,2
  6728  14D5  2D2C               	goto	l8206
  6729                           
  6730                           ;main.c: 94: currentBuff[currentIndex] = getCurrent();
  6731  14D6  31AC  24FB  3194   	fcall	_getCurrent
  6732  14D9  0024               	movlb	4	; select bank4
  6733  14DA  0866               	movf	main@currentIndex^(0+512),w
  6734  14DB  0022               	movlb	2	; select bank2
  6735  14DC  00E8               	movwf	??_main^(0+256)
  6736  14DD  3001               	movlw	1
  6737  14DE                     u11275:	
  6738  14DE  35E8               	lslf	??_main^(0+256),f
  6739  14DF  3EFF               	addlw	-1
  6740  14E0  1D03               	skipz
  6741  14E1  2CDE               	goto	u11275
  6742  14E2  3568               	lslf	??_main^(0+256),w
  6743  14E3  3EA0               	addlw	(low (main@currentBuff| (0+256)))& (0+255)
  6744  14E4  0086               	movwf	6
  6745  14E5  3001               	movlw	1	; select bank3/4
  6746  14E6  0087               	movwf	7
  6747  14E7  0021               	movlb	1	; select bank1
  6748  14E8  0861               	movf	?_getCurrent^(0+128),w
  6749  14E9  3FC0               	movwi [0]fsr1
  6750  14EA  0862               	movf	(?_getCurrent+1)^(0+128),w
  6751  14EB  3FC1               	movwi [1]fsr1
  6752  14EC  0863               	movf	(?_getCurrent+2)^(0+128),w
  6753  14ED  3FC2               	movwi [2]fsr1
  6754  14EE  0864               	movf	(?_getCurrent+3)^(0+128),w
  6755  14EF  3FC3               	movwi [3]fsr1
  6756                           
  6757                           ;main.c: 95: currentIndex ++;
  6758  14F0  3001               	movlw	1
  6759  14F1  0024               	movlb	4	; select bank4
  6760  14F2  07E6               	addwf	main@currentIndex^(0+512),f
  6761  14F3  3000               	movlw	0
  6762  14F4  3DE7               	addwfc	(main@currentIndex+1)^(0+512),f
  6763                           
  6764                           ;main.c: 96: if(currentIndex >= 20){
  6765  14F5  0867               	movf	(main@currentIndex+1)^(0+512),w
  6766  14F6  3A80               	xorlw	128
  6767  14F7  0022               	movlb	2	; select bank2
  6768  14F8  00E8               	movwf	??_main^(0+256)
  6769  14F9  3080               	movlw	128
  6770  14FA  0268               	subwf	??_main^(0+256),w
  6771  14FB  1D03               	skipz
  6772  14FC  2D00               	goto	u11285
  6773  14FD  3014               	movlw	20
  6774  14FE  0024               	movlb	4	; select bank4
  6775  14FF  0266               	subwf	main@currentIndex^(0+512),w
  6776  1500                     u11285:	
  6777  1500  1C03               	skipc
  6778  1501  2D29               	goto	l8204
  6779                           
  6780                           ;main.c: 97: cellBalancing(voltages, 12);
  6781  1502  300C               	movlw	12
  6782  1503  0021               	movlb	1	; select bank1
  6783  1504  00E5               	movwf	cellBalancing@numVoltages^(0+128)
  6784  1505  3000               	movlw	0
  6785  1506  00E6               	movwf	(cellBalancing@numVoltages^(0+128)+1)
  6786  1507  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6787  1508  31A7  2720  3194   	fcall	_cellBalancing
  6788                           
  6789                           ;main.c: 98: current = avgBuff(currentBuff, currentIndex);
  6790  150B  0024               	movlb	4	; select bank4
  6791  150C  0867               	movf	(main@currentIndex+1)^(0+512),w
  6792  150D  0021               	movlb	1	; select bank1
  6793  150E  00D6               	movwf	(avgBuff@size+1)^(0+128)
  6794  150F  0024               	movlb	4	; select bank4
  6795  1510  0866               	movf	main@currentIndex^(0+512),w
  6796  1511  0021               	movlb	1	; select bank1
  6797  1512  00D5               	movwf	avgBuff@size^(0+128)
  6798  1513  30A0               	movlw	(low (main@currentBuff| (0+256)))& (0+255)
  6799  1514  31A1  21EA  3194   	fcall	_avgBuff
  6800  1517  0021               	movlb	1	; select bank1
  6801  1518  0858               	movf	(?_avgBuff+3)^(0+128),w
  6802  1519  0024               	movlb	4	; select bank4
  6803  151A  00E5               	movwf	(main@current+3)^(0+512)
  6804  151B  0021               	movlb	1	; select bank1
  6805  151C  0857               	movf	(?_avgBuff+2)^(0+128),w
  6806  151D  0024               	movlb	4	; select bank4
  6807  151E  00E4               	movwf	(main@current+2)^(0+512)
  6808  151F  0021               	movlb	1	; select bank1
  6809  1520  0856               	movf	(?_avgBuff+1)^(0+128),w
  6810  1521  0024               	movlb	4	; select bank4
  6811  1522  00E3               	movwf	(main@current+1)^(0+512)
  6812  1523  0021               	movlb	1	; select bank1
  6813  1524  0855               	movf	?_avgBuff^(0+128),w
  6814  1525  0024               	movlb	4	; select bank4
  6815  1526  00E2               	movwf	main@current^(0+512)
  6816                           
  6817                           ;main.c: 99: currentIndex = 0;
  6818  1527  01E6               	clrf	main@currentIndex^(0+512)
  6819  1528  01E7               	clrf	(main@currentIndex+1)^(0+512)
  6820  1529                     l8204:	
  6821                           
  6822                           ;main.c: 100: }
  6823                           ;main.c: 101: currentBool = 0;
  6824  1529  0025               	movlb	5	; select bank5
  6825  152A  01A0               	clrf	_currentBool^(0+640)
  6826  152B  01A1               	clrf	(_currentBool+1)^(0+640)
  6827  152C                     l8206:	
  6828                           
  6829                           ;main.c: 102: }
  6830                           ;main.c: 107: for(int i = 0; i <5; i++){
  6831  152C  0024               	movlb	4	; select bank4
  6832  152D  01E8               	clrf	main@i^(0+512)
  6833  152E  01E9               	clrf	(main@i+1)^(0+512)
  6834  152F  0869               	movf	(main@i+1)^(0+512),w
  6835  1530  3A80               	xorlw	128
  6836  1531  0022               	movlb	2	; select bank2
  6837  1532  00E8               	movwf	??_main^(0+256)
  6838  1533  3080               	movlw	128
  6839  1534  0268               	subwf	??_main^(0+256),w
  6840  1535  1D03               	skipz
  6841  1536  2D3A               	goto	u11295
  6842  1537  3005               	movlw	5
  6843  1538  0024               	movlb	4	; select bank4
  6844  1539  0268               	subwf	main@i^(0+512),w
  6845  153A                     u11295:	
  6846  153A  1803               	btfsc	3,0
  6847  153B  2D7F               	goto	l8218
  6848  153C                     l8212:	
  6849                           
  6850                           ;main.c: 108: if(temps[i] >= 40 || temps[i] <= 10){
  6851  153C  0024               	movlb	4	; select bank4
  6852  153D  3568               	lslf	main@i^(0+512),w
  6853  153E  3E50               	addlw	(low (main@temps| (0+512)))& (0+255)
  6854  153F  0086               	movwf	6
  6855  1540  3002               	movlw	2	; select bank4/5
  6856  1541  0087               	movwf	7
  6857  1542  3F40               	moviw [0]fsr1
  6858  1543  0022               	movlb	2	; select bank2
  6859  1544  00E8               	movwf	??_main^(0+256)
  6860  1545  3F41               	moviw [1]fsr1
  6861  1546  00E9               	movwf	(??_main^(0+256)+1)
  6862  1547  0869               	movf	(??_main+1)^(0+256),w
  6863  1548  3A80               	xorlw	128
  6864  1549  00EA               	movwf	(??_main+2)^(0+256)
  6865  154A  3080               	movlw	128
  6866  154B  026A               	subwf	(??_main+2)^(0+256),w
  6867  154C  1D03               	skipz
  6868  154D  2D50               	goto	u11305
  6869  154E  3028               	movlw	40
  6870  154F  0268               	subwf	??_main^(0+256),w
  6871  1550                     u11305:	
  6872  1550  1803               	skipnc
  6873  1551  2D68               	goto	l8216
  6874  1552  0024               	movlb	4	; select bank4
  6875  1553  3568               	lslf	main@i^(0+512),w
  6876  1554  3E50               	addlw	(low (main@temps| (0+512)))& (0+255)
  6877  1555  0086               	movwf	6
  6878  1556  3002               	movlw	2	; select bank4/5
  6879  1557  0087               	movwf	7
  6880  1558  3F40               	moviw [0]fsr1
  6881  1559  0022               	movlb	2	; select bank2
  6882  155A  00E8               	movwf	??_main^(0+256)
  6883  155B  3F41               	moviw [1]fsr1
  6884  155C  00E9               	movwf	(??_main^(0+256)+1)
  6885  155D  0869               	movf	(??_main+1)^(0+256),w
  6886  155E  3A80               	xorlw	128
  6887  155F  00EA               	movwf	(??_main+2)^(0+256)
  6888  1560  3080               	movlw	128
  6889  1561  026A               	subwf	(??_main+2)^(0+256),w
  6890  1562  1D03               	skipz
  6891  1563  2D66               	goto	u11315
  6892  1564  300B               	movlw	11
  6893  1565  0268               	subwf	??_main^(0+256),w
  6894  1566                     u11315:	
  6895  1566  1803               	skipnc
  6896  1567  2D6D               	goto	l90
  6897  1568                     l8216:	
  6898                           
  6899                           ;main.c: 109: numFaults++;
  6900  1568  3001               	movlw	1
  6901  1569  0024               	movlb	4	; select bank4
  6902  156A  07DC               	addwf	main@numFaults^(0+512),f
  6903  156B  3000               	movlw	0
  6904  156C  3DDD               	addwfc	(main@numFaults+1)^(0+512),f
  6905  156D                     l90:	
  6906  156D  3001               	movlw	1
  6907  156E  0024               	movlb	4	; select bank4
  6908  156F  07E8               	addwf	main@i^(0+512),f
  6909  1570  3000               	movlw	0
  6910  1571  3DE9               	addwfc	(main@i+1)^(0+512),f
  6911  1572  0869               	movf	(main@i+1)^(0+512),w
  6912  1573  3A80               	xorlw	128
  6913  1574  0022               	movlb	2	; select bank2
  6914  1575  00E8               	movwf	??_main^(0+256)
  6915  1576  3080               	movlw	128
  6916  1577  0268               	subwf	??_main^(0+256),w
  6917  1578  1D03               	skipz
  6918  1579  2D7D               	goto	u11325
  6919  157A  3005               	movlw	5
  6920  157B  0024               	movlb	4	; select bank4
  6921  157C  0268               	subwf	main@i^(0+512),w
  6922  157D                     u11325:	
  6923  157D  1C03               	skipc
  6924  157E  2D3C               	goto	l8212
  6925  157F                     l8218:	
  6926                           
  6927                           ;main.c: 110: }
  6928                           ;main.c: 111: }
  6929                           ;main.c: 113: if(current >= 10){
  6930  157F  0024               	movlb	4	; select bank4
  6931  1580  0865               	movf	(main@current+3)^(0+512),w
  6932  1581  0021               	movlb	1	; select bank1
  6933  1582  00D8               	movwf	(___flge@ff1+3)^(0+128)
  6934  1583  0024               	movlb	4	; select bank4
  6935  1584  0864               	movf	(main@current+2)^(0+512),w
  6936  1585  0021               	movlb	1	; select bank1
  6937  1586  00D7               	movwf	(___flge@ff1+2)^(0+128)
  6938  1587  0024               	movlb	4	; select bank4
  6939  1588  0863               	movf	(main@current+1)^(0+512),w
  6940  1589  0021               	movlb	1	; select bank1
  6941  158A  00D6               	movwf	(___flge@ff1+1)^(0+128)
  6942  158B  0024               	movlb	4	; select bank4
  6943  158C  0862               	movf	main@current^(0+512),w
  6944  158D  0021               	movlb	1	; select bank1
  6945  158E  00D5               	movwf	___flge@ff1^(0+128)
  6946  158F  3041               	movlw	65
  6947  1590  00DC               	movwf	(___flge@ff2+3)^(0+128)
  6948  1591  3020               	movlw	32
  6949  1592  00DB               	movwf	(___flge@ff2+2)^(0+128)
  6950  1593  3000               	movlw	0
  6951  1594  00DA               	movwf	(___flge@ff2+1)^(0+128)
  6952  1595  3000               	movlw	0
  6953  1596  00D9               	movwf	___flge@ff2^(0+128)
  6954  1597  3188  2005  3194   	fcall	___flge
  6955  159A  1C03               	btfss	3,0
  6956  159B  2DA1               	goto	l93
  6957                           
  6958                           ;main.c: 114: numFaults++;
  6959  159C  3001               	movlw	1
  6960  159D  0024               	movlb	4	; select bank4
  6961  159E  07DC               	addwf	main@numFaults^(0+512),f
  6962  159F  3000               	movlw	0
  6963  15A0  3DDD               	addwfc	(main@numFaults+1)^(0+512),f
  6964  15A1                     l93:	
  6965                           
  6966                           ;main.c: 115: }
  6967                           ;main.c: 119: if(numFaults >= 10){
  6968  15A1  0024               	movlb	4	; select bank4
  6969  15A2  085D               	movf	(main@numFaults+1)^(0+512),w
  6970  15A3  3A80               	xorlw	128
  6971  15A4  0022               	movlb	2	; select bank2
  6972  15A5  00E8               	movwf	??_main^(0+256)
  6973  15A6  3080               	movlw	128
  6974  15A7  0268               	subwf	??_main^(0+256),w
  6975  15A8  1D03               	skipz
  6976  15A9  2DAD               	goto	u11345
  6977  15AA  300A               	movlw	10
  6978  15AB  0024               	movlb	4	; select bank4
  6979  15AC  025C               	subwf	main@numFaults^(0+512),w
  6980  15AD                     u11345:	
  6981  15AD  1C03               	skipc
  6982  15AE  2DB1               	goto	l8224
  6983                           
  6984                           ;main.c: 120: LATDbits.LATD5 = 0;
  6985  15AF  0022               	movlb	2	; select bank2
  6986  15B0  128F               	bcf	15,5	;volatile
  6987  15B1                     l8224:	
  6988                           
  6989                           ;main.c: 121: }
  6990                           ;main.c: 126: if(uartBool == 1){
  6991  15B1  0025               	movlb	5	; select bank5
  6992  15B2  0322               	decf	_uartBool^(0+640),w
  6993  15B3  0423               	iorwf	(_uartBool+1)^(0+640),w
  6994  15B4  1D03               	btfss	3,2
  6995  15B5  2C89               	goto	l8180
  6996                           
  6997                           ;main.c: 127: writeValuesToUart(voltages, 12, totalVoltage, temps, 5, highestTemp, curre
      +                          nt, 21);
  6998  15B6  300C               	movlw	12
  6999  15B7  0022               	movlb	2	; select bank2
  7000  15B8  00D6               	movwf	writeValuesToUart@voltageArrLength^(0+256)
  7001  15B9  3000               	movlw	0
  7002  15BA  00D7               	movwf	(writeValuesToUart@voltageArrLength^(0+256)+1)
  7003  15BB  0024               	movlb	4	; select bank4
  7004  15BC  0861               	movf	(main@totalVoltage+3)^(0+512),w
  7005  15BD  0022               	movlb	2	; select bank2
  7006  15BE  00DB               	movwf	(writeValuesToUart@totalVoltage+3)^(0+256)
  7007  15BF  0024               	movlb	4	; select bank4
  7008  15C0  0860               	movf	(main@totalVoltage+2)^(0+512),w
  7009  15C1  0022               	movlb	2	; select bank2
  7010  15C2  00DA               	movwf	(writeValuesToUart@totalVoltage+2)^(0+256)
  7011  15C3  0024               	movlb	4	; select bank4
  7012  15C4  085F               	movf	(main@totalVoltage+1)^(0+512),w
  7013  15C5  0022               	movlb	2	; select bank2
  7014  15C6  00D9               	movwf	(writeValuesToUart@totalVoltage+1)^(0+256)
  7015  15C7  0024               	movlb	4	; select bank4
  7016  15C8  085E               	movf	main@totalVoltage^(0+512),w
  7017  15C9  0022               	movlb	2	; select bank2
  7018  15CA  00D8               	movwf	writeValuesToUart@totalVoltage^(0+256)
  7019  15CB  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  7020  15CC  00E8               	movwf	??_main^(0+256)
  7021  15CD  0868               	movf	??_main^(0+256),w
  7022  15CE  00DC               	movwf	writeValuesToUart@temperatureArr^(0+256)
  7023  15CF  3005               	movlw	5
  7024  15D0  00DD               	movwf	writeValuesToUart@temperatureArrLength^(0+256)
  7025  15D1  3000               	movlw	0
  7026  15D2  00DE               	movwf	(writeValuesToUart@temperatureArrLength^(0+256)+1)
  7027  15D3  0024               	movlb	4	; select bank4
  7028  15D4  085B               	movf	(main@highestTemp+1)^(0+512),w
  7029  15D5  0022               	movlb	2	; select bank2
  7030  15D6  00E0               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+256)
  7031  15D7  0024               	movlb	4	; select bank4
  7032  15D8  085A               	movf	main@highestTemp^(0+512),w
  7033  15D9  0022               	movlb	2	; select bank2
  7034  15DA  00DF               	movwf	writeValuesToUart@temperatureHigh^(0+256)
  7035  15DB  0024               	movlb	4	; select bank4
  7036  15DC  0865               	movf	(main@current+3)^(0+512),w
  7037  15DD  0022               	movlb	2	; select bank2
  7038  15DE  00E4               	movwf	(writeValuesToUart@current+3)^(0+256)
  7039  15DF  0024               	movlb	4	; select bank4
  7040  15E0  0864               	movf	(main@current+2)^(0+512),w
  7041  15E1  0022               	movlb	2	; select bank2
  7042  15E2  00E3               	movwf	(writeValuesToUart@current+2)^(0+256)
  7043  15E3  0024               	movlb	4	; select bank4
  7044  15E4  0863               	movf	(main@current+1)^(0+512),w
  7045  15E5  0022               	movlb	2	; select bank2
  7046  15E6  00E2               	movwf	(writeValuesToUart@current+1)^(0+256)
  7047  15E7  0024               	movlb	4	; select bank4
  7048  15E8  0862               	movf	main@current^(0+512),w
  7049  15E9  0022               	movlb	2	; select bank2
  7050  15EA  00E1               	movwf	writeValuesToUart@current^(0+256)
  7051  15EB  3015               	movlw	21
  7052  15EC  00E5               	movwf	writeValuesToUart@uartLines^(0+256)
  7053  15ED  3000               	movlw	0
  7054  15EE  00E6               	movwf	(writeValuesToUart@uartLines^(0+256)+1)
  7055  15EF  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  7056  15F0  31A0  2001  3194   	fcall	_writeValuesToUart
  7057                           
  7058                           ;main.c: 128: uartBool = 0;
  7059  15F3  0025               	movlb	5	; select bank5
  7060  15F4  01A2               	clrf	_uartBool^(0+640)
  7061  15F5  01A3               	clrf	(_uartBool+1)^(0+640)
  7062  15F6  2C89               	goto	l8180
  7063  15F7                     __end_of_main:	
  7064                           
  7065                           	psect	text1
  7066  2001                     __ptext1:	
  7067 ;; *************** function _writeValuesToUart *****************
  7068 ;; Defined at:
  7069 ;;		line 11 in file "uart.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  voltageArr      1    wreg     PTR float 
  7072 ;;		 -> main@voltages(48), 
  7073 ;;  voltageArrLe    2   54[BANK2 ] int 
  7074 ;;  totalVoltage    4   56[BANK2 ] float 
  7075 ;;  temperatureA    1   60[BANK2 ] PTR int 
  7076 ;;		 -> main@temps(10), 
  7077 ;;  temperatureA    2   61[BANK2 ] int 
  7078 ;;  temperatureH    2   63[BANK2 ] int 
  7079 ;;  current         4   65[BANK2 ] float 
  7080 ;;  uartLines       2   69[BANK2 ] int 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  voltageArr      1   71[BANK2 ] PTR float 
  7083 ;;		 -> main@voltages(48), 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  1    wreg      void 
  7086 ;; Registers used:
  7087 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7093 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7094 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7096 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7097 ;;Total ram usage:       18 bytes
  7098 ;; Hardware stack levels used:    1
  7099 ;; Hardware stack levels required when called:    7
  7100 ;; This function calls:
  7101 ;;		_clearScreen
  7102 ;;		_writeCurrent
  7103 ;;		_writeTemps
  7104 ;;		_writeVoltages
  7105 ;; This function is called by:
  7106 ;;		_main
  7107 ;; This function uses a non-reentrant model
  7108 ;;
  7109                           
  7110                           
  7111                           ;psect for function _writeValuesToUart
  7112  2001                     _writeValuesToUart:	
  7113                           
  7114                           ;incstack = 0
  7115                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7116                           ;writeValuesToUart@voltageArr stored from wreg
  7117  2001  0022               	movlb	2	; select bank2
  7118  2002  00E7               	movwf	writeValuesToUart@voltageArr^(0+256)
  7119                           
  7120                           ;uart.c: 12: clearScreen(uartLines);
  7121  2003  0866               	movf	(writeValuesToUart@uartLines+1)^(0+256),w
  7122  2004  00C2               	movwf	(clearScreen@numLines+1)^(0+256)
  7123  2005  0865               	movf	writeValuesToUart@uartLines^(0+256),w
  7124  2006  00C1               	movwf	clearScreen@numLines^(0+256)
  7125  2007  31AC  24BF  31A0   	fcall	_clearScreen
  7126                           
  7127                           ;uart.c: 13: writeVoltages(voltageArr, voltageArrLength, totalVoltage);
  7128  200A  0022               	movlb	2	; select bank2
  7129  200B  0857               	movf	(writeValuesToUart@voltageArrLength+1)^(0+256),w
  7130  200C  00C2               	movwf	(writeVoltages@length+1)^(0+256)
  7131  200D  0856               	movf	writeValuesToUart@voltageArrLength^(0+256),w
  7132  200E  00C1               	movwf	writeVoltages@length^(0+256)
  7133  200F  085B               	movf	(writeValuesToUart@totalVoltage+3)^(0+256),w
  7134  2010  00C6               	movwf	(writeVoltages@totalVoltage+3)^(0+256)
  7135  2011  085A               	movf	(writeValuesToUart@totalVoltage+2)^(0+256),w
  7136  2012  00C5               	movwf	(writeVoltages@totalVoltage+2)^(0+256)
  7137  2013  0859               	movf	(writeValuesToUart@totalVoltage+1)^(0+256),w
  7138  2014  00C4               	movwf	(writeVoltages@totalVoltage+1)^(0+256)
  7139  2015  0858               	movf	writeValuesToUart@totalVoltage^(0+256),w
  7140  2016  00C3               	movwf	writeVoltages@totalVoltage^(0+256)
  7141  2017  0867               	movf	writeValuesToUart@voltageArr^(0+256),w
  7142  2018  3193  2305  31A0   	fcall	_writeVoltages
  7143                           
  7144                           ;uart.c: 14: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength);
  7145  201B  0022               	movlb	2	; select bank2
  7146  201C  0860               	movf	(writeValuesToUart@temperatureHigh+1)^(0+256),w
  7147  201D  00C2               	movwf	(writeTemps@highestTemp+1)^(0+256)
  7148  201E  085F               	movf	writeValuesToUart@temperatureHigh^(0+256),w
  7149  201F  00C1               	movwf	writeTemps@highestTemp^(0+256)
  7150  2020  085E               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+256),w
  7151  2021  00C4               	movwf	(writeTemps@numTemps+1)^(0+256)
  7152  2022  085D               	movf	writeValuesToUart@temperatureArrLength^(0+256),w
  7153  2023  00C3               	movwf	writeTemps@numTemps^(0+256)
  7154  2024  085C               	movf	writeValuesToUart@temperatureArr^(0+256),w
  7155  2025  31A0  2034  31A0   	fcall	_writeTemps
  7156                           
  7157                           ;uart.c: 15: writeCurrent(current);
  7158  2028  0022               	movlb	2	; select bank2
  7159  2029  0864               	movf	(writeValuesToUart@current+3)^(0+256),w
  7160  202A  00C4               	movwf	(writeCurrent@current+3)^(0+256)
  7161  202B  0863               	movf	(writeValuesToUart@current+2)^(0+256),w
  7162  202C  00C3               	movwf	(writeCurrent@current+2)^(0+256)
  7163  202D  0862               	movf	(writeValuesToUart@current+1)^(0+256),w
  7164  202E  00C2               	movwf	(writeCurrent@current+1)^(0+256)
  7165  202F  0861               	movf	writeValuesToUart@current^(0+256),w
  7166  2030  00C1               	movwf	writeCurrent@current^(0+256)
  7167  2031  31AB  23E8         	fcall	_writeCurrent
  7168  2033  0008               	return
  7169  2034                     __end_of_writeValuesToUart:	
  7170                           
  7171                           	psect	text2
  7172  1305                     __ptext2:	
  7173 ;; *************** function _writeVoltages *****************
  7174 ;; Defined at:
  7175 ;;		line 18 in file "uart.c"
  7176 ;; Parameters:    Size  Location     Type
  7177 ;;  volts           1    wreg     PTR float 
  7178 ;;		 -> main@voltages(48), 
  7179 ;;  length          2   33[BANK2 ] int 
  7180 ;;  totalVoltage    4   35[BANK2 ] float 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  volts           1   51[BANK2 ] PTR float 
  7183 ;;		 -> main@voltages(48), 
  7184 ;;  k               2   52[BANK2 ] int 
  7185 ;;  minCell         2   49[BANK2 ] int 
  7186 ;;  maxCell         2   47[BANK2 ] int 
  7187 ;; Return value:  Size  Location     Type
  7188 ;;                  1    wreg      void 
  7189 ;; Registers used:
  7190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7191 ;; Tracked objects:
  7192 ;;		On entry : 0/0
  7193 ;;		On exit  : 0/0
  7194 ;;		Unchanged: 0/0
  7195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7196 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7197 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7198 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7199 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7200 ;;Total ram usage:       21 bytes
  7201 ;; Hardware stack levels used:    1
  7202 ;; Hardware stack levels required when called:    6
  7203 ;; This function calls:
  7204 ;;		___fladd
  7205 ;;		___flge
  7206 ;;		___flneg
  7207 ;;		_sprintf
  7208 ;;		_uartEnable
  7209 ;; This function is called by:
  7210 ;;		_writeValuesToUart
  7211 ;; This function uses a non-reentrant model
  7212 ;;
  7213                           
  7214                           
  7215                           ;psect for function _writeVoltages
  7216  1305                     _writeVoltages:	
  7217                           
  7218                           ;incstack = 0
  7219                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7220                           ;writeVoltages@volts stored from wreg
  7221  1305  0022               	movlb	2	; select bank2
  7222  1306  00D3               	movwf	writeVoltages@volts^(0+256)
  7223                           
  7224                           ;uart.c: 19: int maxCell = 0;
  7225  1307  01CF               	clrf	writeVoltages@maxCell^(0+256)
  7226  1308  01D0               	clrf	(writeVoltages@maxCell+1)^(0+256)
  7227                           
  7228                           ;uart.c: 20: int minCell = 0;
  7229  1309  01D1               	clrf	writeVoltages@minCell^(0+256)
  7230  130A  01D2               	clrf	(writeVoltages@minCell+1)^(0+256)
  7231                           
  7232                           ;uart.c: 21: for(int k = 0; k < length; k++){
  7233  130B  01D4               	clrf	writeVoltages@k^(0+256)
  7234  130C  01D5               	clrf	(writeVoltages@k+1)^(0+256)
  7235  130D                     l238:	
  7236  130D  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7237  130E  3A80               	xorlw	128
  7238  130F  00C7               	movwf	??_writeVoltages^(0+256)
  7239  1310  0842               	movf	(writeVoltages@length+1)^(0+256),w
  7240  1311  3A80               	xorlw	128
  7241  1312  0247               	subwf	??_writeVoltages^(0+256),w
  7242  1313  1D03               	skipz
  7243  1314  2B17               	goto	u10865
  7244  1315  0841               	movf	writeVoltages@length^(0+256),w
  7245  1316  0254               	subwf	writeVoltages@k^(0+256),w
  7246  1317                     u10865:	
  7247  1317  1803               	btfsc	3,0
  7248  1318  2BC5               	goto	l7864
  7249                           
  7250                           ;uart.c: 22: if(volts[k]<volts[minCell]){
  7251  1319  0022               	movlb	2	; select bank2
  7252  131A  0854               	movf	writeVoltages@k^(0+256),w
  7253  131B  00C7               	movwf	??_writeVoltages^(0+256)
  7254  131C  3001               	movlw	1
  7255  131D                     u10785:	
  7256  131D  35C7               	lslf	??_writeVoltages^(0+256),f
  7257  131E  3EFF               	addlw	-1
  7258  131F  1D03               	skipz
  7259  1320  2B1D               	goto	u10785
  7260  1321  3547               	lslf	??_writeVoltages^(0+256),w
  7261  1322  0753               	addwf	writeVoltages@volts^(0+256),w
  7262  1323  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7263  1324  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7264  1325  0086               	movwf	6
  7265  1326  3002               	movlw	2	; select bank4/5
  7266  1327  0087               	movwf	7
  7267  1328  3F40               	moviw [0]fsr1
  7268  1329  0021               	movlb	1	; select bank1
  7269  132A  00D5               	movwf	___flge@ff1^(0+128)
  7270  132B  3F41               	moviw [1]fsr1
  7271  132C  00D6               	movwf	(___flge@ff1+1)^(0+128)
  7272  132D  3F42               	moviw [2]fsr1
  7273  132E  00D7               	movwf	(___flge@ff1+2)^(0+128)
  7274  132F  3F43               	moviw [3]fsr1
  7275  1330  00D8               	movwf	(___flge@ff1+3)^(0+128)
  7276  1331  0022               	movlb	2	; select bank2
  7277  1332  0851               	movf	writeVoltages@minCell^(0+256),w
  7278  1333  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7279  1334  3001               	movlw	1
  7280  1335                     u10795:	
  7281  1335  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7282  1336  3EFF               	addlw	-1
  7283  1337  1D03               	skipz
  7284  1338  2B35               	goto	u10795
  7285  1339  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7286  133A  0753               	addwf	writeVoltages@volts^(0+256),w
  7287  133B  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7288  133C  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7289  133D  0086               	movwf	6
  7290  133E  3002               	movlw	2	; select bank4/5
  7291  133F  0087               	movwf	7
  7292  1340  3F40               	moviw [0]fsr1
  7293  1341  0021               	movlb	1	; select bank1
  7294  1342  00D9               	movwf	___flge@ff2^(0+128)
  7295  1343  3F41               	moviw [1]fsr1
  7296  1344  00DA               	movwf	(___flge@ff2+1)^(0+128)
  7297  1345  3F42               	moviw [2]fsr1
  7298  1346  00DB               	movwf	(___flge@ff2+2)^(0+128)
  7299  1347  3F43               	moviw [3]fsr1
  7300  1348  00DC               	movwf	(___flge@ff2+3)^(0+128)
  7301  1349  3188  2005  3193   	fcall	___flge
  7302  134C  1803               	btfsc	3,0
  7303  134D  2B54               	goto	l7854
  7304                           
  7305                           ;uart.c: 23: minCell = k;
  7306  134E  0022               	movlb	2	; select bank2
  7307  134F  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7308  1350  00D2               	movwf	(writeVoltages@minCell+1)^(0+256)
  7309  1351  0854               	movf	writeVoltages@k^(0+256),w
  7310  1352  00D1               	movwf	writeVoltages@minCell^(0+256)
  7311                           
  7312                           ;uart.c: 24: }else if(volts[k] > volts[maxCell]){
  7313  1353  2B8E               	goto	l7858
  7314  1354                     l7854:	
  7315  1354  0022               	movlb	2	; select bank2
  7316  1355  084F               	movf	writeVoltages@maxCell^(0+256),w
  7317  1356  00C7               	movwf	??_writeVoltages^(0+256)
  7318  1357  3001               	movlw	1
  7319  1358                     u10815:	
  7320  1358  35C7               	lslf	??_writeVoltages^(0+256),f
  7321  1359  3EFF               	addlw	-1
  7322  135A  1D03               	skipz
  7323  135B  2B58               	goto	u10815
  7324  135C  3547               	lslf	??_writeVoltages^(0+256),w
  7325  135D  0753               	addwf	writeVoltages@volts^(0+256),w
  7326  135E  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7327  135F  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7328  1360  0086               	movwf	6
  7329  1361  3002               	movlw	2	; select bank4/5
  7330  1362  0087               	movwf	7
  7331  1363  3F40               	moviw [0]fsr1
  7332  1364  0021               	movlb	1	; select bank1
  7333  1365  00D5               	movwf	___flge@ff1^(0+128)
  7334  1366  3F41               	moviw [1]fsr1
  7335  1367  00D6               	movwf	(___flge@ff1+1)^(0+128)
  7336  1368  3F42               	moviw [2]fsr1
  7337  1369  00D7               	movwf	(___flge@ff1+2)^(0+128)
  7338  136A  3F43               	moviw [3]fsr1
  7339  136B  00D8               	movwf	(___flge@ff1+3)^(0+128)
  7340  136C  0022               	movlb	2	; select bank2
  7341  136D  0854               	movf	writeVoltages@k^(0+256),w
  7342  136E  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7343  136F  3001               	movlw	1
  7344  1370                     u10825:	
  7345  1370  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7346  1371  3EFF               	addlw	-1
  7347  1372  1D03               	skipz
  7348  1373  2B70               	goto	u10825
  7349  1374  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7350  1375  0753               	addwf	writeVoltages@volts^(0+256),w
  7351  1376  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7352  1377  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7353  1378  0086               	movwf	6
  7354  1379  3002               	movlw	2	; select bank4/5
  7355  137A  0087               	movwf	7
  7356  137B  3F40               	moviw [0]fsr1
  7357  137C  0021               	movlb	1	; select bank1
  7358  137D  00D9               	movwf	___flge@ff2^(0+128)
  7359  137E  3F41               	moviw [1]fsr1
  7360  137F  00DA               	movwf	(___flge@ff2+1)^(0+128)
  7361  1380  3F42               	moviw [2]fsr1
  7362  1381  00DB               	movwf	(___flge@ff2+2)^(0+128)
  7363  1382  3F43               	moviw [3]fsr1
  7364  1383  00DC               	movwf	(___flge@ff2+3)^(0+128)
  7365  1384  3188  2005  3193   	fcall	___flge
  7366  1387  1803               	btfsc	3,0
  7367  1388  2B8E               	goto	l7858
  7368                           
  7369                           ;uart.c: 25: maxCell = k;
  7370  1389  0022               	movlb	2	; select bank2
  7371  138A  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7372  138B  00D0               	movwf	(writeVoltages@maxCell+1)^(0+256)
  7373  138C  0854               	movf	writeVoltages@k^(0+256),w
  7374  138D  00CF               	movwf	writeVoltages@maxCell^(0+256)
  7375  138E                     l7858:	
  7376                           
  7377                           ;uart.c: 26: }
  7378                           ;uart.c: 28: sprintf(&str[0], "V%i = %0.4fV\n\r", k+1, volts[k]);
  7379  138E  3036               	movlw	low (STR_1| (0+32768))
  7380  138F  0021               	movlb	1	; select bank1
  7381  1390  00E5               	movwf	sprintf@f^(0+128)
  7382  1391  30B1               	movlw	high (STR_1| (0+32768))
  7383  1392  00E6               	movwf	(sprintf@f^(0+128)+1)
  7384  1393  0022               	movlb	2	; select bank2
  7385  1394  0854               	movf	writeVoltages@k^(0+256),w
  7386  1395  3E01               	addlw	1
  7387  1396  0021               	movlb	1	; select bank1
  7388  1397  00E7               	movwf	(?_sprintf^(0+128)+2)
  7389  1398  3000               	movlw	0
  7390  1399  0022               	movlb	2	; select bank2
  7391  139A  3D55               	addwfc	(writeVoltages@k+1)^(0+256),w
  7392  139B  0021               	movlb	1	; select bank1
  7393  139C  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7394  139D  0022               	movlb	2	; select bank2
  7395  139E  0854               	movf	writeVoltages@k^(0+256),w
  7396  139F  00C7               	movwf	??_writeVoltages^(0+256)
  7397  13A0  3001               	movlw	1
  7398  13A1                     u10845:	
  7399  13A1  35C7               	lslf	??_writeVoltages^(0+256),f
  7400  13A2  3EFF               	addlw	-1
  7401  13A3  1D03               	skipz
  7402  13A4  2BA1               	goto	u10845
  7403  13A5  3547               	lslf	??_writeVoltages^(0+256),w
  7404  13A6  0753               	addwf	writeVoltages@volts^(0+256),w
  7405  13A7  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7406  13A8  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7407  13A9  0086               	movwf	6
  7408  13AA  3002               	movlw	2	; select bank4/5
  7409  13AB  0087               	movwf	7
  7410  13AC  3F40               	moviw [0]fsr1
  7411  13AD  0021               	movlb	1	; select bank1
  7412  13AE  00E9               	movwf	(?_sprintf^(0+128)+4)
  7413  13AF  3F41               	moviw [1]fsr1
  7414  13B0  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7415  13B1  3F42               	moviw [2]fsr1
  7416  13B2  00EB               	movwf	((?_sprintf+2)^(0+128)+4)
  7417  13B3  3F43               	moviw [3]fsr1
  7418  13B4  00EC               	movwf	((?_sprintf+3)^(0+128)+4)
  7419  13B5  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7420  13B6  3188  209F  3193   	fcall	_sprintf
  7421                           
  7422                           ;uart.c: 29: uartEnable();
  7423  13B9  3193  2302  3193   	fcall	_uartEnable
  7424  13BC                     l243:	
  7425                           ;uart.c: 30: while(PIE1bits.TXIE);
  7426                           
  7427  13BC  0021               	movlb	1	; select bank1
  7428  13BD  1A11               	btfsc	17,4	;volatile
  7429  13BE  2BBC               	goto	l243
  7430  13BF  3001               	movlw	1
  7431  13C0  0022               	movlb	2	; select bank2
  7432  13C1  07D4               	addwf	writeVoltages@k^(0+256),f
  7433  13C2  3000               	movlw	0
  7434  13C3  3DD5               	addwfc	(writeVoltages@k+1)^(0+256),f
  7435  13C4  2B0D               	goto	l238
  7436  13C5                     l7864:	
  7437                           
  7438                           ;uart.c: 31: }
  7439                           ;uart.c: 33: sprintf(&str[0], "Pack Voltage: %0.4fV\n\r", totalVoltage);
  7440  13C5  30E9               	movlw	low (STR_2| (0+32768))
  7441  13C6  0021               	movlb	1	; select bank1
  7442  13C7  00E5               	movwf	sprintf@f^(0+128)
  7443  13C8  30B0               	movlw	high (STR_2| (0+32768))
  7444  13C9  00E6               	movwf	(sprintf@f^(0+128)+1)
  7445  13CA  0022               	movlb	2	; select bank2
  7446  13CB  0846               	movf	(writeVoltages@totalVoltage+3)^(0+256),w
  7447  13CC  0021               	movlb	1	; select bank1
  7448  13CD  00EA               	movwf	((?_sprintf+3)^(0+128)+2)
  7449  13CE  0022               	movlb	2	; select bank2
  7450  13CF  0845               	movf	(writeVoltages@totalVoltage+2)^(0+256),w
  7451  13D0  0021               	movlb	1	; select bank1
  7452  13D1  00E9               	movwf	((?_sprintf+2)^(0+128)+2)
  7453  13D2  0022               	movlb	2	; select bank2
  7454  13D3  0844               	movf	(writeVoltages@totalVoltage+1)^(0+256),w
  7455  13D4  0021               	movlb	1	; select bank1
  7456  13D5  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7457  13D6  0022               	movlb	2	; select bank2
  7458  13D7  0843               	movf	writeVoltages@totalVoltage^(0+256),w
  7459  13D8  0021               	movlb	1	; select bank1
  7460  13D9  00E7               	movwf	(?_sprintf^(0+128)+2)
  7461  13DA  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7462  13DB  3188  209F  3193   	fcall	_sprintf
  7463                           
  7464                           ;uart.c: 34: uartEnable();
  7465  13DE  3193  2302  3193   	fcall	_uartEnable
  7466  13E1                     l247:	
  7467                           ;uart.c: 35: while(PIE1bits.TXIE);
  7468                           
  7469  13E1  0021               	movlb	1	; select bank1
  7470  13E2  1A11               	btfsc	17,4	;volatile
  7471  13E3  2BE1               	goto	l247
  7472                           
  7473                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7474  13E4  0022               	movlb	2	; select bank2
  7475  13E5  084F               	movf	writeVoltages@maxCell^(0+256),w
  7476  13E6  00C7               	movwf	??_writeVoltages^(0+256)
  7477  13E7  3001               	movlw	1
  7478  13E8                     u10885:	
  7479  13E8  35C7               	lslf	??_writeVoltages^(0+256),f
  7480  13E9  3EFF               	addlw	-1
  7481  13EA  1D03               	skipz
  7482  13EB  2BE8               	goto	u10885
  7483  13EC  3547               	lslf	??_writeVoltages^(0+256),w
  7484  13ED  0753               	addwf	writeVoltages@volts^(0+256),w
  7485  13EE  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7486  13EF  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7487  13F0  0086               	movwf	6
  7488  13F1  3002               	movlw	2	; select bank4/5
  7489  13F2  0087               	movwf	7
  7490  13F3  3F40               	moviw [0]fsr1
  7491  13F4  0021               	movlb	1	; select bank1
  7492  13F5  00BD               	movwf	___fladd@b^(0+128)
  7493  13F6  3F41               	moviw [1]fsr1
  7494  13F7  00BE               	movwf	(___fladd@b+1)^(0+128)
  7495  13F8  3F42               	moviw [2]fsr1
  7496  13F9  00BF               	movwf	(___fladd@b+2)^(0+128)
  7497  13FA  3F43               	moviw [3]fsr1
  7498  13FB  00C0               	movwf	(___fladd@b+3)^(0+128)
  7499  13FC  0022               	movlb	2	; select bank2
  7500  13FD  0851               	movf	writeVoltages@minCell^(0+256),w
  7501  13FE  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7502  13FF  3001               	movlw	1
  7503  1400                     u10895:	
  7504  1400  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7505  1401  3EFF               	addlw	-1
  7506  1402  1D03               	skipz
  7507  1403  2C00               	goto	u10895
  7508  1404  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7509  1405  0753               	addwf	writeVoltages@volts^(0+256),w
  7510  1406  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7511  1407  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7512  1408  0086               	movwf	6
  7513  1409  3002               	movlw	2	; select bank4/5
  7514  140A  0087               	movwf	7
  7515  140B  3F40               	moviw [0]fsr1
  7516  140C  00F2               	movwf	___flneg@f1
  7517  140D  3F41               	moviw [1]fsr1
  7518  140E  00F3               	movwf	___flneg@f1+1
  7519  140F  3F42               	moviw [2]fsr1
  7520  1410  00F4               	movwf	___flneg@f1+2
  7521  1411  3F43               	moviw [3]fsr1
  7522  1412  00F5               	movwf	___flneg@f1+3
  7523  1413  31AA  22DB  3193   	fcall	___flneg
  7524  1416  0875               	movf	?___flneg+3,w
  7525  1417  0021               	movlb	1	; select bank1
  7526  1418  00C4               	movwf	(___fladd@a+3)^(0+128)
  7527  1419  0874               	movf	?___flneg+2,w
  7528  141A  00C3               	movwf	(___fladd@a+2)^(0+128)
  7529  141B  0873               	movf	?___flneg+1,w
  7530  141C  00C2               	movwf	(___fladd@a+1)^(0+128)
  7531  141D  0872               	movf	?___flneg,w
  7532  141E  00C1               	movwf	___fladd@a^(0+128)
  7533  141F  3185  25F9  3193   	fcall	___fladd
  7534  1422  0021               	movlb	1	; select bank1
  7535  1423  0840               	movf	(?___fladd+3)^(0+128),w
  7536  1424  0022               	movlb	2	; select bank2
  7537  1425  00CE               	movwf	(_writeVoltages$2176+3)^(0+256)
  7538  1426  0021               	movlb	1	; select bank1
  7539  1427  083F               	movf	(?___fladd+2)^(0+128),w
  7540  1428  0022               	movlb	2	; select bank2
  7541  1429  00CD               	movwf	(_writeVoltages$2176+2)^(0+256)
  7542  142A  0021               	movlb	1	; select bank1
  7543  142B  083E               	movf	(?___fladd+1)^(0+128),w
  7544  142C  0022               	movlb	2	; select bank2
  7545  142D  00CC               	movwf	(_writeVoltages$2176+1)^(0+256)
  7546  142E  0021               	movlb	1	; select bank1
  7547  142F  083D               	movf	?___fladd^(0+128),w
  7548  1430  0022               	movlb	2	; select bank2
  7549  1431  00CB               	movwf	_writeVoltages$2176^(0+256)
  7550                           
  7551                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7552  1432  30C3               	movlw	low (STR_3| (0+32768))
  7553  1433  0021               	movlb	1	; select bank1
  7554  1434  00E5               	movwf	sprintf@f^(0+128)
  7555  1435  30B0               	movlw	high (STR_3| (0+32768))
  7556  1436  00E6               	movwf	(sprintf@f^(0+128)+1)
  7557  1437  0022               	movlb	2	; select bank2
  7558  1438  0851               	movf	writeVoltages@minCell^(0+256),w
  7559  1439  3E01               	addlw	1
  7560  143A  0021               	movlb	1	; select bank1
  7561  143B  00E7               	movwf	(?_sprintf^(0+128)+2)
  7562  143C  3000               	movlw	0
  7563  143D  0022               	movlb	2	; select bank2
  7564  143E  3D52               	addwfc	(writeVoltages@minCell+1)^(0+256),w
  7565  143F  0021               	movlb	1	; select bank1
  7566  1440  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7567  1441  0022               	movlb	2	; select bank2
  7568  1442  084F               	movf	writeVoltages@maxCell^(0+256),w
  7569  1443  3E01               	addlw	1
  7570  1444  0021               	movlb	1	; select bank1
  7571  1445  00E9               	movwf	(?_sprintf^(0+128)+4)
  7572  1446  3000               	movlw	0
  7573  1447  0022               	movlb	2	; select bank2
  7574  1448  3D50               	addwfc	(writeVoltages@maxCell+1)^(0+256),w
  7575  1449  0021               	movlb	1	; select bank1
  7576  144A  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7577  144B  0022               	movlb	2	; select bank2
  7578  144C  084E               	movf	(_writeVoltages$2176+3)^(0+256),w
  7579  144D  0021               	movlb	1	; select bank1
  7580  144E  00EE               	movwf	((?_sprintf+3)^(0+128)+6)
  7581  144F  0022               	movlb	2	; select bank2
  7582  1450  084D               	movf	(_writeVoltages$2176+2)^(0+256),w
  7583  1451  0021               	movlb	1	; select bank1
  7584  1452  00ED               	movwf	((?_sprintf+2)^(0+128)+6)
  7585  1453  0022               	movlb	2	; select bank2
  7586  1454  084C               	movf	(_writeVoltages$2176+1)^(0+256),w
  7587  1455  0021               	movlb	1	; select bank1
  7588  1456  00EC               	movwf	((?_sprintf+1)^(0+128)+6)
  7589  1457  0022               	movlb	2	; select bank2
  7590  1458  084B               	movf	_writeVoltages$2176^(0+256),w
  7591  1459  0021               	movlb	1	; select bank1
  7592  145A  00EB               	movwf	(?_sprintf^(0+128)+6)
  7593  145B  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7594  145C  3188  209F  3193   	fcall	_sprintf
  7595                           
  7596                           ;uart.c: 38: uartEnable();
  7597  145F  3193  2302  3193   	fcall	_uartEnable
  7598  1462                     l250:	
  7599                           ;uart.c: 39: while(PIE1bits.TXIE);
  7600                           
  7601  1462  0021               	movlb	1	; select bank1
  7602  1463  1E11               	btfss	17,4	;volatile
  7603  1464  0008               	return
  7604  1465  2C62               	goto	l250
  7605  1466                     __end_of_writeVoltages:	
  7606                           
  7607                           	psect	text3
  7608  2034                     __ptext3:	
  7609 ;; *************** function _writeTemps *****************
  7610 ;; Defined at:
  7611 ;;		line 48 in file "uart.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  temps           1    wreg     PTR int 
  7614 ;;		 -> main@temps(10), 
  7615 ;;  highestTemp     2   33[BANK2 ] int 
  7616 ;;  numTemps        2   35[BANK2 ] int 
  7617 ;; Auto vars:     Size  Location     Type
  7618 ;;  temps           1   37[BANK2 ] PTR int 
  7619 ;;		 -> main@temps(10), 
  7620 ;;  k               2   38[BANK2 ] int 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      void 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7630 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7631 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7632 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7633 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7634 ;;Total ram usage:        8 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    6
  7637 ;; This function calls:
  7638 ;;		_sprintf
  7639 ;;		_uartEnable
  7640 ;; This function is called by:
  7641 ;;		_writeValuesToUart
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           
  7645                           
  7646                           ;psect for function _writeTemps
  7647  2034                     _writeTemps:	
  7648                           
  7649                           ;incstack = 0
  7650                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7651                           ;writeTemps@temps stored from wreg
  7652  2034  0022               	movlb	2	; select bank2
  7653  2035  00C5               	movwf	writeTemps@temps^(0+256)
  7654                           
  7655                           ;uart.c: 49: for(int k = 0; k<numTemps; k++){
  7656  2036  01C6               	clrf	writeTemps@k^(0+256)
  7657  2037  01C7               	clrf	(writeTemps@k+1)^(0+256)
  7658  2038                     l262:	
  7659  2038  0847               	movf	(writeTemps@k+1)^(0+256),w
  7660  2039  3A80               	xorlw	128
  7661  203A  0021               	movlb	1	; select bank1
  7662  203B  00EF               	movwf	??_writeTemps^(0+128)
  7663  203C  0022               	movlb	2	; select bank2
  7664  203D  0844               	movf	(writeTemps@numTemps+1)^(0+256),w
  7665  203E  3A80               	xorlw	128
  7666  203F  0021               	movlb	1	; select bank1
  7667  2040  026F               	subwf	??_writeTemps^(0+128),w
  7668  2041  1D03               	skipz
  7669  2042  2846               	goto	u10925
  7670  2043  0022               	movlb	2	; select bank2
  7671  2044  0843               	movf	writeTemps@numTemps^(0+256),w
  7672  2045  0246               	subwf	writeTemps@k^(0+256),w
  7673  2046                     u10925:	
  7674  2046  1803               	btfsc	3,0
  7675  2047  2876               	goto	l7882
  7676                           
  7677                           ;uart.c: 50: sprintf(&str[n], "Temp%i = %iC\n\r", k+1, temps[k]);
  7678  2048  3027               	movlw	low (STR_5| (0+32768))
  7679  2049  0021               	movlb	1	; select bank1
  7680  204A  00E5               	movwf	sprintf@f^(0+128)
  7681  204B  30B1               	movlw	high (STR_5| (0+32768))
  7682  204C  00E6               	movwf	(sprintf@f^(0+128)+1)
  7683  204D  0022               	movlb	2	; select bank2
  7684  204E  0846               	movf	writeTemps@k^(0+256),w
  7685  204F  3E01               	addlw	1
  7686  2050  0021               	movlb	1	; select bank1
  7687  2051  00E7               	movwf	(?_sprintf^(0+128)+2)
  7688  2052  3000               	movlw	0
  7689  2053  0022               	movlb	2	; select bank2
  7690  2054  3D47               	addwfc	(writeTemps@k+1)^(0+256),w
  7691  2055  0021               	movlb	1	; select bank1
  7692  2056  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7693  2057  0022               	movlb	2	; select bank2
  7694  2058  3546               	lslf	writeTemps@k^(0+256),w
  7695  2059  0745               	addwf	writeTemps@temps^(0+256),w
  7696  205A  0021               	movlb	1	; select bank1
  7697  205B  00EF               	movwf	??_writeTemps^(0+128)
  7698  205C  086F               	movf	??_writeTemps^(0+128),w
  7699  205D  0086               	movwf	6
  7700  205E  3002               	movlw	2	; select bank4/5
  7701  205F  0087               	movwf	7
  7702  2060  3F40               	moviw [0]fsr1
  7703  2061  00E9               	movwf	(?_sprintf^(0+128)+4)
  7704  2062  3F41               	moviw [1]fsr1
  7705  2063  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7706  2064  0025               	movlb	5	; select bank5
  7707  2065  0828               	movf	_n^(0+640),w
  7708  2066  3EAA               	addlw	(low (_str| (0+512)))& (0+255)
  7709  2067  3188  209F  31A0   	fcall	_sprintf
  7710                           
  7711                           ;uart.c: 51: uartEnable();
  7712  206A  3193  2302  31A0   	fcall	_uartEnable
  7713  206D                     l264:	
  7714                           ;uart.c: 52: while(PIE1bits.TXIE);
  7715                           
  7716  206D  0021               	movlb	1	; select bank1
  7717  206E  1A11               	btfsc	17,4	;volatile
  7718  206F  286D               	goto	l264
  7719  2070  3001               	movlw	1
  7720  2071  0022               	movlb	2	; select bank2
  7721  2072  07C6               	addwf	writeTemps@k^(0+256),f
  7722  2073  3000               	movlw	0
  7723  2074  3DC7               	addwfc	(writeTemps@k+1)^(0+256),f
  7724  2075  2838               	goto	l262
  7725  2076                     l7882:	
  7726                           
  7727                           ;uart.c: 53: }
  7728                           ;uart.c: 56: sprintf(&str[0], "Highest Temp: %iC\n\r", highestTemp);
  7729  2076  3000               	movlw	low (STR_6| (0+32768))
  7730  2077  0021               	movlb	1	; select bank1
  7731  2078  00E5               	movwf	sprintf@f^(0+128)
  7732  2079  30B1               	movlw	high (STR_6| (0+32768))
  7733  207A  00E6               	movwf	(sprintf@f^(0+128)+1)
  7734  207B  0022               	movlb	2	; select bank2
  7735  207C  0842               	movf	(writeTemps@highestTemp+1)^(0+256),w
  7736  207D  0021               	movlb	1	; select bank1
  7737  207E  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7738  207F  0022               	movlb	2	; select bank2
  7739  2080  0841               	movf	writeTemps@highestTemp^(0+256),w
  7740  2081  0021               	movlb	1	; select bank1
  7741  2082  00E7               	movwf	(?_sprintf^(0+128)+2)
  7742  2083  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7743  2084  3188  209F  31A0   	fcall	_sprintf
  7744                           
  7745                           ;uart.c: 57: uartEnable();
  7746  2087  3193  2302  31A0   	fcall	_uartEnable
  7747  208A                     l268:	
  7748                           ;uart.c: 58: while(PIE1bits.TXIE);
  7749                           
  7750  208A  0021               	movlb	1	; select bank1
  7751  208B  1E11               	btfss	17,4	;volatile
  7752  208C  0008               	return
  7753  208D  288A               	goto	l268
  7754  208E                     __end_of_writeTemps:	
  7755                           
  7756                           	psect	text4
  7757  2BE8                     __ptext4:	
  7758 ;; *************** function _writeCurrent *****************
  7759 ;; Defined at:
  7760 ;;		line 43 in file "uart.c"
  7761 ;; Parameters:    Size  Location     Type
  7762 ;;  current         4   33[BANK2 ] float 
  7763 ;; Auto vars:     Size  Location     Type
  7764 ;;		None
  7765 ;; Return value:  Size  Location     Type
  7766 ;;                  1    wreg      void 
  7767 ;; Registers used:
  7768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7769 ;; Tracked objects:
  7770 ;;		On entry : 0/0
  7771 ;;		On exit  : 0/0
  7772 ;;		Unchanged: 0/0
  7773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7774 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7777 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7778 ;;Total ram usage:        4 bytes
  7779 ;; Hardware stack levels used:    1
  7780 ;; Hardware stack levels required when called:    6
  7781 ;; This function calls:
  7782 ;;		_sprintf
  7783 ;;		_uartEnable
  7784 ;; This function is called by:
  7785 ;;		_writeValuesToUart
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function _writeCurrent
  7791  2BE8                     _writeCurrent:	
  7792                           
  7793                           ;uart.c: 44: sprintf(&str[0], "current = %0.4fA\n\r", current);
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7797  2BE8  3014               	movlw	low (STR_4| (0+32768))
  7798  2BE9  0021               	movlb	1	; select bank1
  7799  2BEA  00E5               	movwf	sprintf@f^(0+128)
  7800  2BEB  30B1               	movlw	high (STR_4| (0+32768))
  7801  2BEC  00E6               	movwf	(sprintf@f^(0+128)+1)
  7802  2BED  0022               	movlb	2	; select bank2
  7803  2BEE  0844               	movf	(writeCurrent@current+3)^(0+256),w
  7804  2BEF  0021               	movlb	1	; select bank1
  7805  2BF0  00EA               	movwf	((?_sprintf+3)^(0+128)+2)
  7806  2BF1  0022               	movlb	2	; select bank2
  7807  2BF2  0843               	movf	(writeCurrent@current+2)^(0+256),w
  7808  2BF3  0021               	movlb	1	; select bank1
  7809  2BF4  00E9               	movwf	((?_sprintf+2)^(0+128)+2)
  7810  2BF5  0022               	movlb	2	; select bank2
  7811  2BF6  0842               	movf	(writeCurrent@current+1)^(0+256),w
  7812  2BF7  0021               	movlb	1	; select bank1
  7813  2BF8  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7814  2BF9  0022               	movlb	2	; select bank2
  7815  2BFA  0841               	movf	writeCurrent@current^(0+256),w
  7816  2BFB  0021               	movlb	1	; select bank1
  7817  2BFC  00E7               	movwf	(?_sprintf^(0+128)+2)
  7818  2BFD  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7819  2BFE  3188  209F  31AB   	fcall	_sprintf
  7820                           
  7821                           ;uart.c: 45: uartEnable();
  7822  2C01  3193  2302  31AB   	fcall	_uartEnable
  7823  2C04                     l256:	
  7824                           ;uart.c: 46: while(PIE1bits.TXIE);
  7825                           
  7826  2C04  0021               	movlb	1	; select bank1
  7827  2C05  1E11               	btfss	17,4	;volatile
  7828  2C06  0008               	return
  7829  2C07  2C04               	goto	l256
  7830  2C08                     __end_of_writeCurrent:	
  7831                           
  7832                           	psect	text5
  7833  2CBF                     __ptext5:	
  7834 ;; *************** function _clearScreen *****************
  7835 ;; Defined at:
  7836 ;;		line 61 in file "uart.c"
  7837 ;; Parameters:    Size  Location     Type
  7838 ;;  numLines        2   33[BANK2 ] int 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  j               2   38[BANK2 ] int 
  7841 ;; Return value:  Size  Location     Type
  7842 ;;                  1    wreg      void 
  7843 ;; Registers used:
  7844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7845 ;; Tracked objects:
  7846 ;;		On entry : 0/0
  7847 ;;		On exit  : 0/0
  7848 ;;		Unchanged: 0/0
  7849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7850 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7851 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7852 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7853 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7854 ;;Total ram usage:        7 bytes
  7855 ;; Hardware stack levels used:    1
  7856 ;; Hardware stack levels required when called:    6
  7857 ;; This function calls:
  7858 ;;		_sprintf
  7859 ;;		_uartEnable
  7860 ;; This function is called by:
  7861 ;;		_writeValuesToUart
  7862 ;; This function uses a non-reentrant model
  7863 ;;
  7864                           
  7865                           
  7866                           ;psect for function _clearScreen
  7867  2CBF                     _clearScreen:	
  7868                           
  7869                           ;uart.c: 62: int j = 0;
  7870                           
  7871                           ;incstack = 0
  7872                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7873  2CBF  0022               	movlb	2	; select bank2
  7874  2CC0  01C6               	clrf	clearScreen@j^(0+256)
  7875  2CC1  01C7               	clrf	(clearScreen@j+1)^(0+256)
  7876                           
  7877                           ;uart.c: 64: for(j = 0; j < numLines-1; j++){
  7878  2CC2  01C6               	clrf	clearScreen@j^(0+256)
  7879  2CC3  01C7               	clrf	(clearScreen@j+1)^(0+256)
  7880  2CC4                     l7842:	
  7881  2CC4  0841               	movf	clearScreen@numLines^(0+256),w
  7882  2CC5  3EFF               	addlw	255
  7883  2CC6  00C3               	movwf	??_clearScreen^(0+256)
  7884  2CC7  30FF               	movlw	255
  7885  2CC8  3D42               	addwfc	(clearScreen@numLines+1)^(0+256),w
  7886  2CC9  00C4               	movwf	(??_clearScreen+1)^(0+256)
  7887  2CCA  0847               	movf	(clearScreen@j+1)^(0+256),w
  7888  2CCB  3A80               	xorlw	128
  7889  2CCC  00C5               	movwf	(??_clearScreen+2)^(0+256)
  7890  2CCD  0844               	movf	(??_clearScreen+1)^(0+256),w
  7891  2CCE  3A80               	xorlw	128
  7892  2CCF  0245               	subwf	(??_clearScreen+2)^(0+256),w
  7893  2CD0  1D03               	skipz
  7894  2CD1  2CD4               	goto	u10765
  7895  2CD2  0843               	movf	??_clearScreen^(0+256),w
  7896  2CD3  0246               	subwf	clearScreen@j^(0+256),w
  7897  2CD4                     u10765:	
  7898  2CD4  1803               	btfsc	3,0
  7899  2CD5  2CEB               	goto	l7844
  7900                           
  7901                           ;uart.c: 65: sprintf(&str[0], "\33[2K \033[A");
  7902  2CD6  3050               	movlw	low (STR_7| (0+32768))
  7903  2CD7  0021               	movlb	1	; select bank1
  7904  2CD8  00E5               	movwf	sprintf@f^(0+128)
  7905  2CD9  30B1               	movlw	high (STR_7| (0+32768))
  7906  2CDA  00E6               	movwf	(sprintf@f^(0+128)+1)
  7907  2CDB  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7908  2CDC  3188  209F  31AC   	fcall	_sprintf
  7909                           
  7910                           ;uart.c: 66: uartEnable();
  7911  2CDF  3193  2302  31AC   	fcall	_uartEnable
  7912  2CE2                     l276:	
  7913                           ;uart.c: 67: while(PIE1bits.TXIE);
  7914                           
  7915  2CE2  0021               	movlb	1	; select bank1
  7916  2CE3  1A11               	btfsc	17,4	;volatile
  7917  2CE4  2CE2               	goto	l276
  7918  2CE5  3001               	movlw	1
  7919  2CE6  0022               	movlb	2	; select bank2
  7920  2CE7  07C6               	addwf	clearScreen@j^(0+256),f
  7921  2CE8  3000               	movlw	0
  7922  2CE9  3DC7               	addwfc	(clearScreen@j+1)^(0+256),f
  7923  2CEA  2CC4               	goto	l7842
  7924  2CEB                     l7844:	
  7925                           
  7926                           ;uart.c: 68: }
  7927                           ;uart.c: 70: sprintf(&str[0], "\33[2K \033[A \r");
  7928  2CEB  3045               	movlw	low (STR_8| (0+32768))
  7929  2CEC  0021               	movlb	1	; select bank1
  7930  2CED  00E5               	movwf	sprintf@f^(0+128)
  7931  2CEE  30B1               	movlw	high (STR_8| (0+32768))
  7932  2CEF  00E6               	movwf	(sprintf@f^(0+128)+1)
  7933  2CF0  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7934  2CF1  3188  209F  31AC   	fcall	_sprintf
  7935                           
  7936                           ;uart.c: 71: uartEnable();
  7937  2CF4  3193  2302  31AC   	fcall	_uartEnable
  7938  2CF7                     l280:	
  7939                           ;uart.c: 72: while(PIE1bits.TXIE);
  7940                           
  7941  2CF7  0021               	movlb	1	; select bank1
  7942  2CF8  1E11               	btfss	17,4	;volatile
  7943  2CF9  0008               	return
  7944  2CFA  2CF7               	goto	l280
  7945  2CFB                     __end_of_clearScreen:	
  7946                           
  7947                           	psect	text6
  7948  1302                     __ptext6:	
  7949 ;; *************** function _uartEnable *****************
  7950 ;; Defined at:
  7951 ;;		line 75 in file "uart.c"
  7952 ;; Parameters:    Size  Location     Type
  7953 ;;		None
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;		None
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  1    wreg      void 
  7958 ;; Registers used:
  7959 ;;		None
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7969 ;;Total ram usage:        0 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; Hardware stack levels required when called:    2
  7972 ;; This function calls:
  7973 ;;		Nothing
  7974 ;; This function is called by:
  7975 ;;		_writeVoltages
  7976 ;;		_writeCurrent
  7977 ;;		_writeTemps
  7978 ;;		_clearScreen
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function _uartEnable
  7984  1302                     _uartEnable:	
  7985                           
  7986                           ;uart.c: 76: PIE1bits.TXIE = 1;
  7987                           
  7988                           ;incstack = 0
  7989                           ; Regs used in _uartEnable: []
  7990  1302  0021               	movlb	1	; select bank1
  7991  1303  1611               	bsf	17,4	;volatile
  7992  1304  0008               	return
  7993  1305                     __end_of_uartEnable:	
  7994                           
  7995                           	psect	text7
  7996  089F                     __ptext7:	
  7997 ;; *************** function _sprintf *****************
  7998 ;; Defined at:
  7999 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  sp              1    wreg     PTR unsigned char 
  8002 ;;		 -> str(50), 
  8003 ;;  f               2   69[BANK1 ] PTR const unsigned char 
  8004 ;;		 -> STR_8(11), STR_7(9), STR_6(20), STR_5(15), 
  8005 ;;		 -> STR_4(19), STR_3(38), STR_2(23), STR_1(15), 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  sp              1   31[BANK2 ] PTR unsigned char 
  8008 ;;		 -> str(50), 
  8009 ;;  fval            4   25[BANK2 ] PTR unsigned char 
  8010 ;;  val             4   15[BANK2 ] unsigned long 
  8011 ;;  tmpval          4   11[BANK2 ] struct .
  8012 ;;  prec            2   29[BANK2 ] int 
  8013 ;;  width           2   23[BANK2 ] int 
  8014 ;;  flag            2   21[BANK2 ] unsigned short 
  8015 ;;  exp             2   19[BANK2 ] int 
  8016 ;;  cp              2    0        PTR const unsigned char 
  8017 ;;  len             2    0        unsigned int 
  8018 ;;  c               1   32[BANK2 ] char 
  8019 ;;  ap              1   10[BANK2 ] PTR void [1]
  8020 ;;		 -> ?_sprintf(2), 
  8021 ;;  d               1    0        unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  2   69[BANK1 ] int 
  8024 ;; Registers used:
  8025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8031 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8032 ;;      Locals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8033 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8034 ;;      Totals:         0       0      10      33       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8035 ;;Total ram usage:       43 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:    5
  8038 ;; This function calls:
  8039 ;;		___awdiv
  8040 ;;		___fladd
  8041 ;;		___flge
  8042 ;;		___flmul
  8043 ;;		___flneg
  8044 ;;		___flsub
  8045 ;;		___fltol
  8046 ;;		___lldiv
  8047 ;;		___llmod
  8048 ;;		___wmul
  8049 ;;		___xxtofl
  8050 ;;		__div_to_l_
  8051 ;;		__tdiv_to_l_
  8052 ;;		_fround
  8053 ;;		_isdigit
  8054 ;;		_scale
  8055 ;; This function is called by:
  8056 ;;		_writeVoltages
  8057 ;;		_writeCurrent
  8058 ;;		_writeTemps
  8059 ;;		_clearScreen
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           
  8064                           ;psect for function _sprintf
  8065  089F                     _sprintf:	
  8066                           
  8067                           ;incstack = 0
  8068                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8069                           ;sprintf@sp stored from wreg
  8070  089F  0022               	movlb	2	; select bank2
  8071  08A0  00BF               	movwf	sprintf@sp^(0+256)
  8072                           
  8073                           ;doprnt.c: 494: va_list ap;
  8074                           ;doprnt.c: 499: signed char c;
  8075                           ;doprnt.c: 501: int width;
  8076                           ;doprnt.c: 504: int prec;
  8077                           ;doprnt.c: 508: unsigned short flag;
  8078                           ;doprnt.c: 515: char d;
  8079                           ;doprnt.c: 516: double fval;
  8080                           ;doprnt.c: 517: int exp;
  8081                           ;doprnt.c: 523: union {
  8082                           ;doprnt.c: 524: unsigned long vd;
  8083                           ;doprnt.c: 525: double integ;
  8084                           ;doprnt.c: 526: } tmpval;
  8085                           ;doprnt.c: 528: unsigned long val;
  8086                           ;doprnt.c: 529: unsigned len;
  8087                           ;doprnt.c: 530: const char * cp;
  8088                           ;doprnt.c: 533: *ap = __va_start();
  8089  08A1  30E7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8090  08A2  00A0               	movwf	??_sprintf^(0+256)
  8091  08A3  0820               	movf	??_sprintf^(0+256),w
  8092  08A4  00AA               	movwf	sprintf@ap^(0+256)
  8093  08A5                     l7702:	
  8094                           ;doprnt.c: 536: while(c = *f++) {
  8095                           
  8096  08A5  0021               	movlb	1	; select bank1
  8097  08A6  0866               	movf	(sprintf@f+1)^(0+128),w
  8098  08A7  0022               	movlb	2	; select bank2
  8099  08A8  00A1               	movwf	(??_sprintf^(0+256)+1)
  8100  08A9  0021               	movlb	1	; select bank1
  8101  08AA  0865               	movf	sprintf@f^(0+128),w
  8102  08AB  0022               	movlb	2	; select bank2
  8103  08AC  00A0               	movwf	??_sprintf^(0+256)
  8104  08AD  0021               	movlb	1	; select bank1
  8105  08AE  0AE5               	incf	sprintf@f^(0+128),f
  8106  08AF  1903               	skipnz
  8107  08B0  0AE6               	incf	(sprintf@f+1)^(0+128),f
  8108  08B1  0022               	movlb	2	; select bank2
  8109  08B2  0820               	movf	??_sprintf^(0+256),w
  8110  08B3  0084               	movwf	4
  8111  08B4  0821               	movf	(??_sprintf+1)^(0+256),w
  8112  08B5  0085               	movwf	5
  8113  08B6  0800               	movf	0,w	;code access
  8114  08B7  00A2               	movwf	(??_sprintf+2)^(0+256)
  8115  08B8  0822               	movf	(??_sprintf+2)^(0+256),w
  8116  08B9  00C0               	movwf	sprintf@c^(0+256)
  8117  08BA  0840               	movf	sprintf@c^(0+256),w
  8118  08BB  1903               	btfsc	3,2
  8119  08BC  2FFA               	goto	l7704
  8120                           
  8121                           ;doprnt.c: 538: if(c != '%')
  8122  08BD  3025               	movlw	37
  8123  08BE  0640               	xorwf	sprintf@c^(0+256),w
  8124  08BF  1903               	btfsc	3,2
  8125  08C0  28CE               	goto	l7392
  8126                           
  8127                           ;doprnt.c: 540: {
  8128                           ;doprnt.c: 541: ((*sp++ = (c)));
  8129  08C1  0840               	movf	sprintf@c^(0+256),w
  8130  08C2  00A0               	movwf	??_sprintf^(0+256)
  8131  08C3  083F               	movf	sprintf@sp^(0+256),w
  8132  08C4  0086               	movwf	6
  8133  08C5  3002               	movlw	2	; select bank4/5
  8134  08C6  0087               	movwf	7
  8135  08C7  0820               	movf	??_sprintf^(0+256),w
  8136  08C8  0081               	movwf	1
  8137  08C9  3001               	movlw	1
  8138  08CA  00A0               	movwf	??_sprintf^(0+256)
  8139  08CB  0820               	movf	??_sprintf^(0+256),w
  8140  08CC  07BF               	addwf	sprintf@sp^(0+256),f
  8141                           
  8142                           ;doprnt.c: 542: continue;
  8143  08CD  28A5               	goto	l7702
  8144  08CE                     l7392:	
  8145                           
  8146                           ;doprnt.c: 543: }
  8147                           ;doprnt.c: 546: width = 0;
  8148  08CE  01B7               	clrf	sprintf@width^(0+256)
  8149  08CF  01B8               	clrf	(sprintf@width+1)^(0+256)
  8150                           
  8151                           ;doprnt.c: 548: flag = 0;
  8152  08D0  01B5               	clrf	sprintf@flag^(0+256)
  8153  08D1  01B6               	clrf	(sprintf@flag+1)^(0+256)
  8154                           
  8155                           ;doprnt.c: 551: switch(*f) {
  8156                           
  8157                           ;doprnt.c: 550: for(;;) {
  8158  08D2  28DA               	goto	l7398
  8159  08D3                     l836:	
  8160                           ;doprnt.c: 579: case '0':
  8161                           
  8162                           
  8163                           ;doprnt.c: 580: flag |= 0x04;
  8164  08D3  0022               	movlb	2	; select bank2
  8165  08D4  1535               	bsf	sprintf@flag^(0+256),2
  8166                           
  8167                           ;doprnt.c: 581: f++;
  8168  08D5  3001               	movlw	1
  8169  08D6  0021               	movlb	1	; select bank1
  8170  08D7  07E5               	addwf	sprintf@f^(0+128),f
  8171  08D8  3000               	movlw	0
  8172  08D9  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8173  08DA                     l7398:	
  8174                           ;doprnt.c: 584: }
  8175                           
  8176                           ;doprnt.c: 582: continue;
  8177                           
  8178  08DA  0021               	movlb	1	; select bank1
  8179  08DB  0865               	movf	sprintf@f^(0+128),w
  8180  08DC  0084               	movwf	4
  8181  08DD  0866               	movf	(sprintf@f+1)^(0+128),w
  8182  08DE  0085               	movwf	5
  8183  08DF  0800               	movf	0,w	;code access
  8184                           
  8185                           ; Switch size 1, requested type "space"
  8186                           ; Number of cases is 1, Range of values is 48 to 48
  8187                           ; switch strategies available:
  8188                           ; Name         Instructions Cycles
  8189                           ; simple_byte            4     3 (average)
  8190                           ; direct_byte           11     9 (fixed)
  8191                           ; jumptable            263     9 (fixed)
  8192                           ;	Chosen strategy is simple_byte
  8193  08E0  3A30               	xorlw	48	; case 48
  8194  08E1  1903               	skipnz
  8195  08E2  28D3               	goto	l836
  8196  08E3  28E4               	goto	l7400
  8197  08E4                     l7400:	
  8198                           ;doprnt.c: 586: }
  8199                           
  8200                           ;doprnt.c: 585: break;
  8201                           
  8202                           
  8203                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8204  08E4  0865               	movf	sprintf@f^(0+128),w
  8205  08E5  0084               	movwf	4
  8206  08E6  0866               	movf	(sprintf@f+1)^(0+128),w
  8207  08E7  0085               	movwf	5
  8208  08E8  0800               	movf	0,w	;code access
  8209  08E9  31AB  2308  3188   	fcall	_isdigit
  8210  08EC  1C03               	btfss	3,0
  8211  08ED  2922               	goto	l7412
  8212                           
  8213                           ;doprnt.c: 598: width = 0;
  8214  08EE  0022               	movlb	2	; select bank2
  8215  08EF  01B7               	clrf	sprintf@width^(0+256)
  8216  08F0  01B8               	clrf	(sprintf@width+1)^(0+256)
  8217  08F1                     l7404:	
  8218                           ;doprnt.c: 599: do {
  8219                           
  8220                           
  8221                           ;doprnt.c: 600: width *= 10;
  8222  08F1  300A               	movlw	10
  8223  08F2  00F2               	movwf	___wmul@multiplier
  8224  08F3  3000               	movlw	0
  8225  08F4  00F3               	movwf	___wmul@multiplier+1
  8226  08F5  0022               	movlb	2	; select bank2
  8227  08F6  0838               	movf	(sprintf@width+1)^(0+256),w
  8228  08F7  00F5               	movwf	___wmul@multiplicand+1
  8229  08F8  0837               	movf	sprintf@width^(0+256),w
  8230  08F9  00F4               	movwf	___wmul@multiplicand
  8231  08FA  31AB  2370  3188   	fcall	___wmul
  8232  08FD  0873               	movf	?___wmul+1,w
  8233  08FE  0022               	movlb	2	; select bank2
  8234  08FF  00B8               	movwf	(sprintf@width+1)^(0+256)
  8235  0900  0872               	movf	?___wmul,w
  8236  0901  00B7               	movwf	sprintf@width^(0+256)
  8237                           
  8238                           ;doprnt.c: 601: width += *f++ - '0';
  8239  0902  0021               	movlb	1	; select bank1
  8240  0903  0865               	movf	sprintf@f^(0+128),w
  8241  0904  0084               	movwf	4
  8242  0905  0866               	movf	(sprintf@f+1)^(0+128),w
  8243  0906  0085               	movwf	5
  8244  0907  0800               	movf	0,w	;code access
  8245  0908  3ED0               	addlw	208
  8246  0909  0022               	movlb	2	; select bank2
  8247  090A  00A0               	movwf	??_sprintf^(0+256)
  8248  090B  30FF               	movlw	255
  8249  090C  1803               	skipnc
  8250  090D  3000               	movlw	0
  8251  090E  00A1               	movwf	(??_sprintf^(0+256)+1)
  8252  090F  0820               	movf	??_sprintf^(0+256),w
  8253  0910  07B7               	addwf	sprintf@width^(0+256),f
  8254  0911  0821               	movf	(??_sprintf+1)^(0+256),w
  8255  0912  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  8256  0913  3001               	movlw	1
  8257  0914  0021               	movlb	1	; select bank1
  8258  0915  07E5               	addwf	sprintf@f^(0+128),f
  8259  0916  3000               	movlw	0
  8260  0917  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8261                           
  8262                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8263  0918  0865               	movf	sprintf@f^(0+128),w
  8264  0919  0084               	movwf	4
  8265  091A  0866               	movf	(sprintf@f+1)^(0+128),w
  8266  091B  0085               	movwf	5
  8267  091C  0800               	movf	0,w	;code access
  8268  091D  31AB  2308  3188   	fcall	_isdigit
  8269  0920  1803               	btfsc	3,0
  8270  0921  28F1               	goto	l7404
  8271  0922                     l7412:	
  8272                           
  8273                           ;doprnt.c: 608: }
  8274                           ;doprnt.c: 611: if(*f == '.') {
  8275  0922  0021               	movlb	1	; select bank1
  8276  0923  0865               	movf	sprintf@f^(0+128),w
  8277  0924  0084               	movwf	4
  8278  0925  0866               	movf	(sprintf@f+1)^(0+128),w
  8279  0926  0085               	movwf	5
  8280  0927  0012               	moviw fsr0++
  8281  0928  3A2E               	xorlw	46
  8282  0929  1D03               	btfss	3,2
  8283  092A  2967               	goto	l7426
  8284                           
  8285                           ;doprnt.c: 612: flag |= 0x4000;
  8286  092B  0022               	movlb	2	; select bank2
  8287  092C  1736               	bsf	(sprintf@flag^(0+256)+1),6
  8288                           
  8289                           ;doprnt.c: 613: f++;
  8290  092D  3001               	movlw	1
  8291  092E  0021               	movlb	1	; select bank1
  8292  092F  07E5               	addwf	sprintf@f^(0+128),f
  8293  0930  3000               	movlw	0
  8294  0931  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8295                           
  8296                           ;doprnt.c: 620: {
  8297                           ;doprnt.c: 621: prec = 0;
  8298  0932  0022               	movlb	2	; select bank2
  8299  0933  01BD               	clrf	sprintf@prec^(0+256)
  8300  0934  01BE               	clrf	(sprintf@prec+1)^(0+256)
  8301  0935                     l7424:	
  8302                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8303                           
  8304  0935  0021               	movlb	1	; select bank1
  8305  0936  0865               	movf	sprintf@f^(0+128),w
  8306  0937  0084               	movwf	4
  8307  0938  0866               	movf	(sprintf@f+1)^(0+128),w
  8308  0939  0085               	movwf	5
  8309  093A  0800               	movf	0,w	;code access
  8310  093B  31AB  2308  3188   	fcall	_isdigit
  8311  093E  1C03               	btfss	3,0
  8312  093F  296E               	goto	l7432
  8313                           
  8314                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8315  0940  0021               	movlb	1	; select bank1
  8316  0941  0865               	movf	sprintf@f^(0+128),w
  8317  0942  0084               	movwf	4
  8318  0943  0866               	movf	(sprintf@f+1)^(0+128),w
  8319  0944  0085               	movwf	5
  8320  0945  0800               	movf	0,w	;code access
  8321  0946  0022               	movlb	2	; select bank2
  8322  0947  00A0               	movwf	??_sprintf^(0+256)
  8323  0948  01A1               	clrf	(??_sprintf^(0+256)+1)
  8324  0949  083E               	movf	(sprintf@prec+1)^(0+256),w
  8325  094A  00F3               	movwf	___wmul@multiplier+1
  8326  094B  083D               	movf	sprintf@prec^(0+256),w
  8327  094C  00F2               	movwf	___wmul@multiplier
  8328  094D  300A               	movlw	10
  8329  094E  00F4               	movwf	___wmul@multiplicand
  8330  094F  3000               	movlw	0
  8331  0950  00F5               	movwf	___wmul@multiplicand+1
  8332  0951  31AB  2370  3188   	fcall	___wmul
  8333  0954  0022               	movlb	2	; select bank2
  8334  0955  0820               	movf	??_sprintf^(0+256),w
  8335  0956  0772               	addwf	?___wmul,w
  8336  0957  00A2               	movwf	(??_sprintf+2)^(0+256)
  8337  0958  0821               	movf	(??_sprintf+1)^(0+256),w
  8338  0959  3D73               	addwfc	?___wmul+1,w
  8339  095A  00A3               	movwf	(??_sprintf+3)^(0+256)
  8340  095B  0822               	movf	(??_sprintf+2)^(0+256),w
  8341  095C  3ED0               	addlw	208
  8342  095D  00BD               	movwf	sprintf@prec^(0+256)
  8343  095E  30FF               	movlw	255
  8344  095F  3D23               	addwfc	(??_sprintf+3)^(0+256),w
  8345  0960  00BE               	movwf	(sprintf@prec+1)^(0+256)
  8346  0961  3001               	movlw	1
  8347  0962  0021               	movlb	1	; select bank1
  8348  0963  07E5               	addwf	sprintf@f^(0+128),f
  8349  0964  3000               	movlw	0
  8350  0965  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8351  0966  2935               	goto	l7424
  8352  0967                     l7426:	
  8353                           ;doprnt.c: 624: }
  8354                           ;doprnt.c: 625: } else {
  8355                           
  8356                           
  8357                           ;doprnt.c: 626: prec = 0;
  8358  0967  0022               	movlb	2	; select bank2
  8359  0968  01BD               	clrf	sprintf@prec^(0+256)
  8360  0969  01BE               	clrf	(sprintf@prec+1)^(0+256)
  8361                           
  8362                           ;doprnt.c: 628: flag |= 0x1000;
  8363  096A  1636               	bsf	(sprintf@flag^(0+256)+1),4
  8364                           
  8365                           ;doprnt.c: 630: }
  8366                           ;doprnt.c: 635: switch(c = *f++) {
  8367  096B  296E               	goto	l7432
  8368  096C                     l851:	
  8369                           ;doprnt.c: 662: case 'f':
  8370                           
  8371                           ;doprnt.c: 638: goto alldone;
  8372                           
  8373                           ;doprnt.c: 637: case 0:
  8374                           
  8375                           
  8376                           ;doprnt.c: 663: flag |= 0x400;
  8377  096C  1536               	bsf	(sprintf@flag^(0+256)+1),2
  8378                           
  8379                           ;doprnt.c: 698: case 'i':
  8380                           ;doprnt.c: 699: break;
  8381                           
  8382                           ;doprnt.c: 697: case 'd':
  8383                           
  8384                           ;doprnt.c: 664: break;
  8385  096D  298E               	goto	l7434
  8386  096E                     l7432:	
  8387                           ;doprnt.c: 822: }
  8388                           
  8389                           ;doprnt.c: 813: continue;
  8390                           
  8391                           ;doprnt.c: 802: default:
  8392                           
  8393  096E  0021               	movlb	1	; select bank1
  8394  096F  0866               	movf	(sprintf@f+1)^(0+128),w
  8395  0970  0022               	movlb	2	; select bank2
  8396  0971  00A1               	movwf	(??_sprintf^(0+256)+1)
  8397  0972  0021               	movlb	1	; select bank1
  8398  0973  0865               	movf	sprintf@f^(0+128),w
  8399  0974  0022               	movlb	2	; select bank2
  8400  0975  00A0               	movwf	??_sprintf^(0+256)
  8401  0976  0021               	movlb	1	; select bank1
  8402  0977  0AE5               	incf	sprintf@f^(0+128),f
  8403  0978  1903               	skipnz
  8404  0979  0AE6               	incf	(sprintf@f+1)^(0+128),f
  8405  097A  0022               	movlb	2	; select bank2
  8406  097B  0820               	movf	??_sprintf^(0+256),w
  8407  097C  0084               	movwf	4
  8408  097D  0821               	movf	(??_sprintf+1)^(0+256),w
  8409  097E  0085               	movwf	5
  8410  097F  0800               	movf	0,w	;code access
  8411  0980  00C0               	movwf	sprintf@c^(0+256)
  8412                           
  8413                           ; Switch size 1, requested type "space"
  8414                           ; Number of cases is 4, Range of values is 0 to 105
  8415                           ; switch strategies available:
  8416                           ; Name         Instructions Cycles
  8417                           ; simple_byte           13     7 (average)
  8418                           ; direct_byte          218     6 (fixed)
  8419                           ; jumptable            260     6 (fixed)
  8420                           ;	Chosen strategy is simple_byte
  8421  0981  3A00               	xorlw	0	; case 0
  8422  0982  1903               	skipnz
  8423  0983  2FFA               	goto	l7704
  8424  0984  3A64               	xorlw	100	; case 100
  8425  0985  1903               	skipnz
  8426  0986  298E               	goto	l7434
  8427  0987  3A02               	xorlw	2	; case 102
  8428  0988  1903               	skipnz
  8429  0989  296C               	goto	l851
  8430  098A  3A0F               	xorlw	15	; case 105
  8431  098B  1903               	skipnz
  8432  098C  298E               	goto	l7434
  8433  098D  28A5               	goto	l7702
  8434  098E                     l7434:	
  8435                           
  8436                           ;doprnt.c: 825: if(flag & (0x700)) {
  8437  098E  3000               	movlw	0
  8438  098F  0535               	andwf	sprintf@flag^(0+256),w
  8439  0990  00A0               	movwf	??_sprintf^(0+256)
  8440  0991  3007               	movlw	7
  8441  0992  0536               	andwf	(sprintf@flag+1)^(0+256),w
  8442  0993  00A1               	movwf	(??_sprintf+1)^(0+256)
  8443  0994  0820               	movf	??_sprintf^(0+256),w
  8444  0995  0421               	iorwf	(??_sprintf^(0+256)+1),w
  8445  0996  1903               	btfsc	3,2
  8446  0997  2E7A               	goto	l7610
  8447                           
  8448                           ;doprnt.c: 827: if(flag & 0x1000)
  8449  0998  1E36               	btfss	(sprintf@flag+1)^(0+256),4
  8450  0999  299E               	goto	l7440
  8451                           
  8452                           ;doprnt.c: 829: prec = 6;
  8453  099A  3006               	movlw	6
  8454  099B  00BD               	movwf	sprintf@prec^(0+256)
  8455  099C  3000               	movlw	0
  8456  099D  00BE               	movwf	(sprintf@prec^(0+256)+1)
  8457  099E                     l7440:	
  8458                           
  8459                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8460  099E  082A               	movf	sprintf@ap^(0+256),w
  8461  099F  0086               	movwf	6
  8462  09A0  0187               	clrf	7
  8463  09A1  3F40               	moviw [0]fsr1
  8464  09A2  00B9               	movwf	sprintf@fval^(0+256)
  8465  09A3  3F41               	moviw [1]fsr1
  8466  09A4  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8467  09A5  3F42               	moviw [2]fsr1
  8468  09A6  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8469  09A7  3F43               	moviw [3]fsr1
  8470  09A8  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8471  09A9  3004               	movlw	4
  8472  09AA  00A0               	movwf	??_sprintf^(0+256)
  8473  09AB  0820               	movf	??_sprintf^(0+256),w
  8474  09AC  07AA               	addwf	sprintf@ap^(0+256),f
  8475                           
  8476                           ;doprnt.c: 831: if(fval < 0.0) {
  8477  09AD  083C               	movf	(sprintf@fval+3)^(0+256),w
  8478  09AE  0021               	movlb	1	; select bank1
  8479  09AF  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8480  09B0  0022               	movlb	2	; select bank2
  8481  09B1  083B               	movf	(sprintf@fval+2)^(0+256),w
  8482  09B2  0021               	movlb	1	; select bank1
  8483  09B3  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8484  09B4  0022               	movlb	2	; select bank2
  8485  09B5  083A               	movf	(sprintf@fval+1)^(0+256),w
  8486  09B6  0021               	movlb	1	; select bank1
  8487  09B7  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8488  09B8  0022               	movlb	2	; select bank2
  8489  09B9  0839               	movf	sprintf@fval^(0+256),w
  8490  09BA  0021               	movlb	1	; select bank1
  8491  09BB  00D5               	movwf	___flge@ff1^(0+128)
  8492  09BC  3000               	movlw	0
  8493  09BD  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8494  09BE  3000               	movlw	0
  8495  09BF  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8496  09C0  3000               	movlw	0
  8497  09C1  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8498  09C2  3000               	movlw	0
  8499  09C3  00D9               	movwf	___flge@ff2^(0+128)
  8500  09C4  3188  2005  3188   	fcall	___flge
  8501  09C7  1803               	btfsc	3,0
  8502  09C8  29E2               	goto	l7450
  8503                           
  8504                           ;doprnt.c: 832: fval = -fval;
  8505  09C9  0022               	movlb	2	; select bank2
  8506  09CA  083C               	movf	(sprintf@fval+3)^(0+256),w
  8507  09CB  00F5               	movwf	___flneg@f1+3
  8508  09CC  083B               	movf	(sprintf@fval+2)^(0+256),w
  8509  09CD  00F4               	movwf	___flneg@f1+2
  8510  09CE  083A               	movf	(sprintf@fval+1)^(0+256),w
  8511  09CF  00F3               	movwf	___flneg@f1+1
  8512  09D0  0839               	movf	sprintf@fval^(0+256),w
  8513  09D1  00F2               	movwf	___flneg@f1
  8514  09D2  31AA  22DB  3188   	fcall	___flneg
  8515  09D5  0875               	movf	?___flneg+3,w
  8516  09D6  0022               	movlb	2	; select bank2
  8517  09D7  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8518  09D8  0874               	movf	?___flneg+2,w
  8519  09D9  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8520  09DA  0873               	movf	?___flneg+1,w
  8521  09DB  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8522  09DC  0872               	movf	?___flneg,w
  8523  09DD  00B9               	movwf	sprintf@fval^(0+256)
  8524                           
  8525                           ;doprnt.c: 833: flag |= 0x03;
  8526  09DE  3003               	movlw	3
  8527  09DF  04B5               	iorwf	sprintf@flag^(0+256),f
  8528  09E0  3000               	movlw	0
  8529  09E1  04B6               	iorwf	(sprintf@flag+1)^(0+256),f
  8530  09E2                     l7450:	
  8531                           
  8532                           ;doprnt.c: 834: }
  8533                           ;doprnt.c: 835: exp = 0;
  8534  09E2  0022               	movlb	2	; select bank2
  8535  09E3  01B3               	clrf	sprintf@exp^(0+256)
  8536  09E4  01B4               	clrf	(sprintf@exp+1)^(0+256)
  8537                           
  8538                           ;doprnt.c: 836: if( fval!=0) {
  8539  09E5  083C               	movf	(sprintf@fval+3)^(0+256),w
  8540  09E6  043B               	iorwf	(sprintf@fval+2)^(0+256),w
  8541  09E7  043A               	iorwf	(sprintf@fval+1)^(0+256),w
  8542  09E8  0439               	iorwf	sprintf@fval^(0+256),w
  8543  09E9  1903               	skipnz
  8544  09EA  2AB8               	goto	l859
  8545                           
  8546                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8547  09EB  0839               	movf	sprintf@fval^(0+256),w
  8548  09EC  00A0               	movwf	??_sprintf^(0+256)
  8549  09ED  083A               	movf	(sprintf@fval+1)^(0+256),w
  8550  09EE  00A1               	movwf	(??_sprintf^(0+256)+1)
  8551  09EF  083B               	movf	(sprintf@fval+2)^(0+256),w
  8552  09F0  00A2               	movwf	(??_sprintf^(0+256)+2)
  8553  09F1  083C               	movf	(sprintf@fval+3)^(0+256),w
  8554  09F2  00A3               	movwf	(??_sprintf^(0+256)+3)
  8555  09F3  1003               	clrc
  8556  09F4  0D22               	rlf	(??_sprintf^(0+256)+2),w
  8557  09F5  0D23               	rlf	(??_sprintf^(0+256)+3),w
  8558  09F6  3E82               	addlw	130
  8559  09F7  00B3               	movwf	sprintf@exp^(0+256)
  8560  09F8  30FF               	movlw	255
  8561  09F9  1803               	skipnc
  8562  09FA  3000               	movlw	0
  8563  09FB  00B4               	movwf	(sprintf@exp^(0+256)+1)
  8564                           
  8565                           ;doprnt.c: 838: exp--;
  8566  09FC  30FF               	movlw	255
  8567  09FD  07B3               	addwf	sprintf@exp^(0+256),f
  8568  09FE  30FF               	movlw	255
  8569  09FF  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8570                           
  8571                           ;doprnt.c: 839: exp *= 3;
  8572  0A00  3003               	movlw	3
  8573  0A01  00F2               	movwf	___wmul@multiplier
  8574  0A02  3000               	movlw	0
  8575  0A03  00F3               	movwf	___wmul@multiplier+1
  8576  0A04  0834               	movf	(sprintf@exp+1)^(0+256),w
  8577  0A05  00F5               	movwf	___wmul@multiplicand+1
  8578  0A06  0833               	movf	sprintf@exp^(0+256),w
  8579  0A07  00F4               	movwf	___wmul@multiplicand
  8580  0A08  31AB  2370  3188   	fcall	___wmul
  8581  0A0B  0873               	movf	?___wmul+1,w
  8582  0A0C  0022               	movlb	2	; select bank2
  8583  0A0D  00B4               	movwf	(sprintf@exp+1)^(0+256)
  8584  0A0E  0872               	movf	?___wmul,w
  8585  0A0F  00B3               	movwf	sprintf@exp^(0+256)
  8586                           
  8587                           ;doprnt.c: 840: exp /= 10;
  8588  0A10  300A               	movlw	10
  8589  0A11  0020               	movlb	0	; select bank0
  8590  0A12  00A0               	movwf	___awdiv@divisor
  8591  0A13  3000               	movlw	0
  8592  0A14  00A1               	movwf	___awdiv@divisor+1
  8593  0A15  0022               	movlb	2	; select bank2
  8594  0A16  0834               	movf	(sprintf@exp+1)^(0+256),w
  8595  0A17  0020               	movlb	0	; select bank0
  8596  0A18  00A3               	movwf	___awdiv@dividend+1
  8597  0A19  0022               	movlb	2	; select bank2
  8598  0A1A  0833               	movf	sprintf@exp^(0+256),w
  8599  0A1B  0020               	movlb	0	; select bank0
  8600  0A1C  00A2               	movwf	___awdiv@dividend
  8601  0A1D  31AE  26B2  3188   	fcall	___awdiv
  8602  0A20  0020               	movlb	0	; select bank0
  8603  0A21  0821               	movf	?___awdiv+1,w
  8604  0A22  0022               	movlb	2	; select bank2
  8605  0A23  00B4               	movwf	(sprintf@exp+1)^(0+256)
  8606  0A24  0020               	movlb	0	; select bank0
  8607  0A25  0820               	movf	?___awdiv,w
  8608  0A26  0022               	movlb	2	; select bank2
  8609  0A27  00B3               	movwf	sprintf@exp^(0+256)
  8610                           
  8611                           ;doprnt.c: 841: if(exp < 0)
  8612  0A28  1FB4               	btfss	(sprintf@exp+1)^(0+256),7
  8613  0A29  2A2E               	goto	l7466
  8614                           
  8615                           ;doprnt.c: 842: exp--;
  8616  0A2A  30FF               	movlw	255
  8617  0A2B  07B3               	addwf	sprintf@exp^(0+256),f
  8618  0A2C  30FF               	movlw	255
  8619  0A2D  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8620  0A2E                     l7466:	
  8621                           
  8622                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8623  0A2E  0333               	decf	sprintf@exp^(0+256),w
  8624  0A2F  3AFF               	xorlw	255
  8625  0A30  3180  20A8  3188   	fcall	_scale
  8626  0A33  0020               	movlb	0	; select bank0
  8627  0A34  086F               	movf	?_scale+3,w
  8628  0A35  0022               	movlb	2	; select bank2
  8629  0A36  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8630  0A37  0020               	movlb	0	; select bank0
  8631  0A38  086E               	movf	?_scale+2,w
  8632  0A39  0022               	movlb	2	; select bank2
  8633  0A3A  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8634  0A3B  0020               	movlb	0	; select bank0
  8635  0A3C  086D               	movf	?_scale+1,w
  8636  0A3D  0022               	movlb	2	; select bank2
  8637  0A3E  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8638  0A3F  0020               	movlb	0	; select bank0
  8639  0A40  086C               	movf	?_scale,w
  8640  0A41  0022               	movlb	2	; select bank2
  8641  0A42  00AB               	movwf	sprintf@tmpval^(0+256)
  8642                           
  8643                           ;doprnt.c: 847: tmpval.integ *= fval;
  8644  0A43  083C               	movf	(sprintf@fval+3)^(0+256),w
  8645  0A44  0020               	movlb	0	; select bank0
  8646  0A45  00D5               	movwf	___flmul@b+3
  8647  0A46  0022               	movlb	2	; select bank2
  8648  0A47  083B               	movf	(sprintf@fval+2)^(0+256),w
  8649  0A48  0020               	movlb	0	; select bank0
  8650  0A49  00D4               	movwf	___flmul@b+2
  8651  0A4A  0022               	movlb	2	; select bank2
  8652  0A4B  083A               	movf	(sprintf@fval+1)^(0+256),w
  8653  0A4C  0020               	movlb	0	; select bank0
  8654  0A4D  00D3               	movwf	___flmul@b+1
  8655  0A4E  0022               	movlb	2	; select bank2
  8656  0A4F  0839               	movf	sprintf@fval^(0+256),w
  8657  0A50  0020               	movlb	0	; select bank0
  8658  0A51  00D2               	movwf	___flmul@b
  8659  0A52  0022               	movlb	2	; select bank2
  8660  0A53  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8661  0A54  0020               	movlb	0	; select bank0
  8662  0A55  00D9               	movwf	___flmul@a+3
  8663  0A56  0022               	movlb	2	; select bank2
  8664  0A57  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8665  0A58  0020               	movlb	0	; select bank0
  8666  0A59  00D8               	movwf	___flmul@a+2
  8667  0A5A  0022               	movlb	2	; select bank2
  8668  0A5B  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8669  0A5C  0020               	movlb	0	; select bank0
  8670  0A5D  00D7               	movwf	___flmul@a+1
  8671  0A5E  0022               	movlb	2	; select bank2
  8672  0A5F  082B               	movf	sprintf@tmpval^(0+256),w
  8673  0A60  0020               	movlb	0	; select bank0
  8674  0A61  00D6               	movwf	___flmul@a
  8675  0A62  3183  23CD  3188   	fcall	___flmul
  8676  0A65  0020               	movlb	0	; select bank0
  8677  0A66  0855               	movf	?___flmul+3,w
  8678  0A67  0022               	movlb	2	; select bank2
  8679  0A68  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8680  0A69  0020               	movlb	0	; select bank0
  8681  0A6A  0854               	movf	?___flmul+2,w
  8682  0A6B  0022               	movlb	2	; select bank2
  8683  0A6C  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8684  0A6D  0020               	movlb	0	; select bank0
  8685  0A6E  0853               	movf	?___flmul+1,w
  8686  0A6F  0022               	movlb	2	; select bank2
  8687  0A70  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8688  0A71  0020               	movlb	0	; select bank0
  8689  0A72  0852               	movf	?___flmul,w
  8690  0A73  0022               	movlb	2	; select bank2
  8691  0A74  00AB               	movwf	sprintf@tmpval^(0+256)
  8692                           
  8693                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8694  0A75  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8695  0A76  0021               	movlb	1	; select bank1
  8696  0A77  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8697  0A78  0022               	movlb	2	; select bank2
  8698  0A79  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8699  0A7A  0021               	movlb	1	; select bank1
  8700  0A7B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8701  0A7C  0022               	movlb	2	; select bank2
  8702  0A7D  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8703  0A7E  0021               	movlb	1	; select bank1
  8704  0A7F  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8705  0A80  0022               	movlb	2	; select bank2
  8706  0A81  082B               	movf	sprintf@tmpval^(0+256),w
  8707  0A82  0021               	movlb	1	; select bank1
  8708  0A83  00D5               	movwf	___flge@ff1^(0+128)
  8709  0A84  303F               	movlw	63
  8710  0A85  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8711  0A86  3080               	movlw	128
  8712  0A87  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8713  0A88  3000               	movlw	0
  8714  0A89  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8715  0A8A  3000               	movlw	0
  8716  0A8B  00D9               	movwf	___flge@ff2^(0+128)
  8717  0A8C  3188  2005  3188   	fcall	___flge
  8718  0A8F  1803               	btfsc	3,0
  8719  0A90  2A96               	goto	l7474
  8720                           
  8721                           ;doprnt.c: 849: exp--;
  8722  0A91  30FF               	movlw	255
  8723  0A92  0022               	movlb	2	; select bank2
  8724  0A93  07B3               	addwf	sprintf@exp^(0+256),f
  8725  0A94  30FF               	movlw	255
  8726  0A95  2AB7               	goto	L2
  8727  0A96                     l7474:	
  8728                           
  8729                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8730  0A96  0022               	movlb	2	; select bank2
  8731  0A97  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8732  0A98  0021               	movlb	1	; select bank1
  8733  0A99  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8734  0A9A  0022               	movlb	2	; select bank2
  8735  0A9B  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8736  0A9C  0021               	movlb	1	; select bank1
  8737  0A9D  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8738  0A9E  0022               	movlb	2	; select bank2
  8739  0A9F  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8740  0AA0  0021               	movlb	1	; select bank1
  8741  0AA1  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8742  0AA2  0022               	movlb	2	; select bank2
  8743  0AA3  082B               	movf	sprintf@tmpval^(0+256),w
  8744  0AA4  0021               	movlb	1	; select bank1
  8745  0AA5  00D5               	movwf	___flge@ff1^(0+128)
  8746  0AA6  3041               	movlw	65
  8747  0AA7  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8748  0AA8  3020               	movlw	32
  8749  0AA9  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8750  0AAA  3000               	movlw	0
  8751  0AAB  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8752  0AAC  3000               	movlw	0
  8753  0AAD  00D9               	movwf	___flge@ff2^(0+128)
  8754  0AAE  3188  2005  3188   	fcall	___flge
  8755  0AB1  1C03               	btfss	3,0
  8756  0AB2  2AB8               	goto	l859
  8757                           
  8758                           ;doprnt.c: 851: exp++;
  8759  0AB3  3001               	movlw	1
  8760  0AB4  0022               	movlb	2	; select bank2
  8761  0AB5  07B3               	addwf	sprintf@exp^(0+256),f
  8762  0AB6  3000               	movlw	0
  8763  0AB7                     L2:	
  8764  0AB7  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8765  0AB8                     l859:	
  8766                           
  8767                           ;doprnt.c: 852: }
  8768                           ;doprnt.c: 1112: if(prec <= 12)
  8769  0AB8  0022               	movlb	2	; select bank2
  8770  0AB9  083E               	movf	(sprintf@prec+1)^(0+256),w
  8771  0ABA  3A80               	xorlw	128
  8772  0ABB  00A0               	movwf	??_sprintf^(0+256)
  8773  0ABC  3080               	movlw	128
  8774  0ABD  0220               	subwf	??_sprintf^(0+256),w
  8775  0ABE  1D03               	skipz
  8776  0ABF  2AC2               	goto	u10205
  8777  0AC0  300D               	movlw	13
  8778  0AC1  023D               	subwf	sprintf@prec^(0+256),w
  8779  0AC2                     u10205:	
  8780  0AC2  1803               	skipnc
  8781  0AC3  2AFC               	goto	l7480
  8782                           
  8783                           ;doprnt.c: 1113: fval += fround(prec);
  8784  0AC4  0022               	movlb	2	; select bank2
  8785  0AC5  083D               	movf	sprintf@prec^(0+256),w
  8786  0AC6  3195  25F7  3188   	fcall	_fround
  8787  0AC9  0020               	movlb	0	; select bank0
  8788  0ACA  086F               	movf	?_fround+3,w
  8789  0ACB  0021               	movlb	1	; select bank1
  8790  0ACC  00C0               	movwf	(___fladd@b+3)^(0+128)
  8791  0ACD  0020               	movlb	0	; select bank0
  8792  0ACE  086E               	movf	?_fround+2,w
  8793  0ACF  0021               	movlb	1	; select bank1
  8794  0AD0  00BF               	movwf	(___fladd@b+2)^(0+128)
  8795  0AD1  0020               	movlb	0	; select bank0
  8796  0AD2  086D               	movf	?_fround+1,w
  8797  0AD3  0021               	movlb	1	; select bank1
  8798  0AD4  00BE               	movwf	(___fladd@b+1)^(0+128)
  8799  0AD5  0020               	movlb	0	; select bank0
  8800  0AD6  086C               	movf	?_fround,w
  8801  0AD7  0021               	movlb	1	; select bank1
  8802  0AD8  00BD               	movwf	___fladd@b^(0+128)
  8803  0AD9  0022               	movlb	2	; select bank2
  8804  0ADA  083C               	movf	(sprintf@fval+3)^(0+256),w
  8805  0ADB  0021               	movlb	1	; select bank1
  8806  0ADC  00C4               	movwf	(___fladd@a+3)^(0+128)
  8807  0ADD  0022               	movlb	2	; select bank2
  8808  0ADE  083B               	movf	(sprintf@fval+2)^(0+256),w
  8809  0ADF  0021               	movlb	1	; select bank1
  8810  0AE0  00C3               	movwf	(___fladd@a+2)^(0+128)
  8811  0AE1  0022               	movlb	2	; select bank2
  8812  0AE2  083A               	movf	(sprintf@fval+1)^(0+256),w
  8813  0AE3  0021               	movlb	1	; select bank1
  8814  0AE4  00C2               	movwf	(___fladd@a+1)^(0+128)
  8815  0AE5  0022               	movlb	2	; select bank2
  8816  0AE6  0839               	movf	sprintf@fval^(0+256),w
  8817  0AE7  0021               	movlb	1	; select bank1
  8818  0AE8  00C1               	movwf	___fladd@a^(0+128)
  8819  0AE9  3185  25F9  3188   	fcall	___fladd
  8820  0AEC  0021               	movlb	1	; select bank1
  8821  0AED  0840               	movf	(?___fladd+3)^(0+128),w
  8822  0AEE  0022               	movlb	2	; select bank2
  8823  0AEF  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8824  0AF0  0021               	movlb	1	; select bank1
  8825  0AF1  083F               	movf	(?___fladd+2)^(0+128),w
  8826  0AF2  0022               	movlb	2	; select bank2
  8827  0AF3  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8828  0AF4  0021               	movlb	1	; select bank1
  8829  0AF5  083E               	movf	(?___fladd+1)^(0+128),w
  8830  0AF6  0022               	movlb	2	; select bank2
  8831  0AF7  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8832  0AF8  0021               	movlb	1	; select bank1
  8833  0AF9  083D               	movf	?___fladd^(0+128),w
  8834  0AFA  0022               	movlb	2	; select bank2
  8835  0AFB  00B9               	movwf	sprintf@fval^(0+256)
  8836  0AFC                     l7480:	
  8837                           
  8838                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8839  0AFC  0022               	movlb	2	; select bank2
  8840  0AFD  0834               	movf	(sprintf@exp+1)^(0+256),w
  8841  0AFE  3A80               	xorlw	128
  8842  0AFF  00A0               	movwf	??_sprintf^(0+256)
  8843  0B00  3080               	movlw	128
  8844  0B01  0220               	subwf	??_sprintf^(0+256),w
  8845  0B02  1D03               	skipz
  8846  0B03  2B06               	goto	u10215
  8847  0B04  300A               	movlw	10
  8848  0B05  0233               	subwf	sprintf@exp^(0+256),w
  8849  0B06                     u10215:	
  8850  0B06  1803               	skipnc
  8851  0B07  2B34               	goto	l7488
  8852  0B08  0022               	movlb	2	; select bank2
  8853  0B09  083C               	movf	(sprintf@fval+3)^(0+256),w
  8854  0B0A  043B               	iorwf	(sprintf@fval+2)^(0+256),w
  8855  0B0B  043A               	iorwf	(sprintf@fval+1)^(0+256),w
  8856  0B0C  0439               	iorwf	sprintf@fval^(0+256),w
  8857  0B0D  1903               	skipnz
  8858  0B0E  2B91               	goto	l7502
  8859  0B0F  083C               	movf	(sprintf@fval+3)^(0+256),w
  8860  0B10  0021               	movlb	1	; select bank1
  8861  0B11  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8862  0B12  0022               	movlb	2	; select bank2
  8863  0B13  083B               	movf	(sprintf@fval+2)^(0+256),w
  8864  0B14  0021               	movlb	1	; select bank1
  8865  0B15  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8866  0B16  0022               	movlb	2	; select bank2
  8867  0B17  083A               	movf	(sprintf@fval+1)^(0+256),w
  8868  0B18  0021               	movlb	1	; select bank1
  8869  0B19  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8870  0B1A  0022               	movlb	2	; select bank2
  8871  0B1B  0839               	movf	sprintf@fval^(0+256),w
  8872  0B1C  0021               	movlb	1	; select bank1
  8873  0B1D  00B5               	movwf	___fltol@f1^(0+128)
  8874  0B1E  31A0  20EC  3188   	fcall	___fltol
  8875  0B21  0021               	movlb	1	; select bank1
  8876  0B22  0838               	movf	(?___fltol+3)^(0+128),w
  8877  0B23  0437               	iorwf	(?___fltol+2)^(0+128),w
  8878  0B24  0436               	iorwf	(?___fltol+1)^(0+128),w
  8879  0B25  0435               	iorwf	?___fltol^(0+128),w
  8880  0B26  1D03               	skipz
  8881  0B27  2B91               	goto	l7502
  8882  0B28  0022               	movlb	2	; select bank2
  8883  0B29  0834               	movf	(sprintf@exp+1)^(0+256),w
  8884  0B2A  3A80               	xorlw	128
  8885  0B2B  00A0               	movwf	??_sprintf^(0+256)
  8886  0B2C  3080               	movlw	128
  8887  0B2D  0220               	subwf	??_sprintf^(0+256),w
  8888  0B2E  1D03               	skipz
  8889  0B2F  2B32               	goto	u10245
  8890  0B30  3002               	movlw	2
  8891  0B31  0233               	subwf	sprintf@exp^(0+256),w
  8892  0B32                     u10245:	
  8893  0B32  1C03               	skipc
  8894  0B33  2B91               	goto	l7502
  8895  0B34                     l7488:	
  8896                           
  8897                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8898  0B34  0022               	movlb	2	; select bank2
  8899  0B35  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8900  0B36  0021               	movlb	1	; select bank1
  8901  0B37  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8902  0B38  0022               	movlb	2	; select bank2
  8903  0B39  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8904  0B3A  0021               	movlb	1	; select bank1
  8905  0B3B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8906  0B3C  0022               	movlb	2	; select bank2
  8907  0B3D  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8908  0B3E  0021               	movlb	1	; select bank1
  8909  0B3F  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8910  0B40  0022               	movlb	2	; select bank2
  8911  0B41  082B               	movf	sprintf@tmpval^(0+256),w
  8912  0B42  0021               	movlb	1	; select bank1
  8913  0B43  00D5               	movwf	___flge@ff1^(0+128)
  8914  0B44  3040               	movlw	64
  8915  0B45  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8916  0B46  3089               	movlw	137
  8917  0B47  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8918  0B48  3070               	movlw	112
  8919  0B49  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8920  0B4A  305F               	movlw	95
  8921  0B4B  00D9               	movwf	___flge@ff2^(0+128)
  8922  0B4C  3188  2005  3188   	fcall	___flge
  8923  0B4F  1803               	btfsc	3,0
  8924  0B50  2B53               	goto	l7492
  8925                           
  8926                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8927  0B51  30F7               	movlw	247
  8928  0B52  2B54               	goto	L3
  8929  0B53                     l7492:	
  8930                           ;doprnt.c: 1122: }else{
  8931                           
  8932                           
  8933                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8934  0B53  30F8               	movlw	248
  8935  0B54                     L3:	
  8936  0B54  0022               	movlb	2	; select bank2
  8937  0B55  07B3               	addwf	sprintf@exp^(0+256),f
  8938  0B56  30FF               	movlw	255
  8939  0B57  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8940                           
  8941                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8942  0B58  0833               	movf	sprintf@exp^(0+256),w
  8943  0B59  3180  20A8  3188   	fcall	_scale
  8944  0B5C  0020               	movlb	0	; select bank0
  8945  0B5D  086F               	movf	?_scale+3,w
  8946  0B5E  0022               	movlb	2	; select bank2
  8947  0B5F  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8948  0B60  0020               	movlb	0	; select bank0
  8949  0B61  086E               	movf	?_scale+2,w
  8950  0B62  0022               	movlb	2	; select bank2
  8951  0B63  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8952  0B64  0020               	movlb	0	; select bank0
  8953  0B65  086D               	movf	?_scale+1,w
  8954  0B66  0022               	movlb	2	; select bank2
  8955  0B67  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8956  0B68  0020               	movlb	0	; select bank0
  8957  0B69  086C               	movf	?_scale,w
  8958  0B6A  0022               	movlb	2	; select bank2
  8959  0B6B  00AB               	movwf	sprintf@tmpval^(0+256)
  8960  0B6C  083C               	movf	(sprintf@fval+3)^(0+256),w
  8961  0B6D  00F5               	movwf	__div_to_l_@f1+3
  8962  0B6E  083B               	movf	(sprintf@fval+2)^(0+256),w
  8963  0B6F  00F4               	movwf	__div_to_l_@f1+2
  8964  0B70  083A               	movf	(sprintf@fval+1)^(0+256),w
  8965  0B71  00F3               	movwf	__div_to_l_@f1+1
  8966  0B72  0839               	movf	sprintf@fval^(0+256),w
  8967  0B73  00F2               	movwf	__div_to_l_@f1
  8968  0B74  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8969  0B75  00F9               	movwf	__div_to_l_@f2+3
  8970  0B76  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8971  0B77  00F8               	movwf	__div_to_l_@f2+2
  8972  0B78  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8973  0B79  00F7               	movwf	__div_to_l_@f2+1
  8974  0B7A  082B               	movf	sprintf@tmpval^(0+256),w
  8975  0B7B  00F6               	movwf	__div_to_l_@f2
  8976  0B7C  31A5  257E  3188   	fcall	__div_to_l_
  8977  0B7F  0875               	movf	?__div_to_l_+3,w
  8978  0B80  0022               	movlb	2	; select bank2
  8979  0B81  00B2               	movwf	(sprintf@val+3)^(0+256)
  8980  0B82  0874               	movf	?__div_to_l_+2,w
  8981  0B83  00B1               	movwf	(sprintf@val+2)^(0+256)
  8982  0B84  0873               	movf	?__div_to_l_+1,w
  8983  0B85  00B0               	movwf	(sprintf@val+1)^(0+256)
  8984  0B86  0872               	movf	?__div_to_l_,w
  8985  0B87  00AF               	movwf	sprintf@val^(0+256)
  8986                           
  8987                           ;doprnt.c: 1129: fval = 0.0;
  8988  0B88  3000               	movlw	0
  8989  0B89  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8990  0B8A  3000               	movlw	0
  8991  0B8B  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8992  0B8C  3000               	movlw	0
  8993  0B8D  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8994  0B8E  3000               	movlw	0
  8995  0B8F  00B9               	movwf	sprintf@fval^(0+256)
  8996                           
  8997                           ;doprnt.c: 1130: } else {
  8998  0B90  2BFC               	goto	l7506
  8999  0B91                     l7502:	
  9000                           
  9001                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9002  0B91  0022               	movlb	2	; select bank2
  9003  0B92  083C               	movf	(sprintf@fval+3)^(0+256),w
  9004  0B93  0021               	movlb	1	; select bank1
  9005  0B94  00B8               	movwf	(___fltol@f1+3)^(0+128)
  9006  0B95  0022               	movlb	2	; select bank2
  9007  0B96  083B               	movf	(sprintf@fval+2)^(0+256),w
  9008  0B97  0021               	movlb	1	; select bank1
  9009  0B98  00B7               	movwf	(___fltol@f1+2)^(0+128)
  9010  0B99  0022               	movlb	2	; select bank2
  9011  0B9A  083A               	movf	(sprintf@fval+1)^(0+256),w
  9012  0B9B  0021               	movlb	1	; select bank1
  9013  0B9C  00B6               	movwf	(___fltol@f1+1)^(0+128)
  9014  0B9D  0022               	movlb	2	; select bank2
  9015  0B9E  0839               	movf	sprintf@fval^(0+256),w
  9016  0B9F  0021               	movlb	1	; select bank1
  9017  0BA0  00B5               	movwf	___fltol@f1^(0+128)
  9018  0BA1  31A0  20EC  3188   	fcall	___fltol
  9019  0BA4  0021               	movlb	1	; select bank1
  9020  0BA5  0838               	movf	(?___fltol+3)^(0+128),w
  9021  0BA6  0022               	movlb	2	; select bank2
  9022  0BA7  00B2               	movwf	(sprintf@val+3)^(0+256)
  9023  0BA8  0021               	movlb	1	; select bank1
  9024  0BA9  0837               	movf	(?___fltol+2)^(0+128),w
  9025  0BAA  0022               	movlb	2	; select bank2
  9026  0BAB  00B1               	movwf	(sprintf@val+2)^(0+256)
  9027  0BAC  0021               	movlb	1	; select bank1
  9028  0BAD  0836               	movf	(?___fltol+1)^(0+128),w
  9029  0BAE  0022               	movlb	2	; select bank2
  9030  0BAF  00B0               	movwf	(sprintf@val+1)^(0+256)
  9031  0BB0  0021               	movlb	1	; select bank1
  9032  0BB1  0835               	movf	?___fltol^(0+128),w
  9033  0BB2  0022               	movlb	2	; select bank2
  9034  0BB3  00AF               	movwf	sprintf@val^(0+256)
  9035                           
  9036                           ;doprnt.c: 1132: fval -= (double)val;
  9037  0BB4  0832               	movf	(sprintf@val+3)^(0+256),w
  9038  0BB5  0020               	movlb	0	; select bank0
  9039  0BB6  00B1               	movwf	___xxtofl@val+3
  9040  0BB7  0022               	movlb	2	; select bank2
  9041  0BB8  0831               	movf	(sprintf@val+2)^(0+256),w
  9042  0BB9  0020               	movlb	0	; select bank0
  9043  0BBA  00B0               	movwf	___xxtofl@val+2
  9044  0BBB  0022               	movlb	2	; select bank2
  9045  0BBC  0830               	movf	(sprintf@val+1)^(0+256),w
  9046  0BBD  0020               	movlb	0	; select bank0
  9047  0BBE  00AF               	movwf	___xxtofl@val+1
  9048  0BBF  0022               	movlb	2	; select bank2
  9049  0BC0  082F               	movf	sprintf@val^(0+256),w
  9050  0BC1  0020               	movlb	0	; select bank0
  9051  0BC2  00AE               	movwf	___xxtofl@val
  9052  0BC3  3000               	movlw	0
  9053  0BC4  31A3  2381  3188   	fcall	___xxtofl
  9054  0BC7  0020               	movlb	0	; select bank0
  9055  0BC8  0831               	movf	?___xxtofl+3,w
  9056  0BC9  0021               	movlb	1	; select bank1
  9057  0BCA  00D8               	movwf	(___flsub@a+3)^(0+128)
  9058  0BCB  0020               	movlb	0	; select bank0
  9059  0BCC  0830               	movf	?___xxtofl+2,w
  9060  0BCD  0021               	movlb	1	; select bank1
  9061  0BCE  00D7               	movwf	(___flsub@a+2)^(0+128)
  9062  0BCF  0020               	movlb	0	; select bank0
  9063  0BD0  082F               	movf	?___xxtofl+1,w
  9064  0BD1  0021               	movlb	1	; select bank1
  9065  0BD2  00D6               	movwf	(___flsub@a+1)^(0+128)
  9066  0BD3  0020               	movlb	0	; select bank0
  9067  0BD4  082E               	movf	?___xxtofl,w
  9068  0BD5  0021               	movlb	1	; select bank1
  9069  0BD6  00D5               	movwf	___flsub@a^(0+128)
  9070  0BD7  0022               	movlb	2	; select bank2
  9071  0BD8  083C               	movf	(sprintf@fval+3)^(0+256),w
  9072  0BD9  0021               	movlb	1	; select bank1
  9073  0BDA  00DC               	movwf	(___flsub@b+3)^(0+128)
  9074  0BDB  0022               	movlb	2	; select bank2
  9075  0BDC  083B               	movf	(sprintf@fval+2)^(0+256),w
  9076  0BDD  0021               	movlb	1	; select bank1
  9077  0BDE  00DB               	movwf	(___flsub@b+2)^(0+128)
  9078  0BDF  0022               	movlb	2	; select bank2
  9079  0BE0  083A               	movf	(sprintf@fval+1)^(0+256),w
  9080  0BE1  0021               	movlb	1	; select bank1
  9081  0BE2  00DA               	movwf	(___flsub@b+1)^(0+128)
  9082  0BE3  0022               	movlb	2	; select bank2
  9083  0BE4  0839               	movf	sprintf@fval^(0+256),w
  9084  0BE5  0021               	movlb	1	; select bank1
  9085  0BE6  00D9               	movwf	___flsub@b^(0+128)
  9086  0BE7  31AB  23A9  3188   	fcall	___flsub
  9087  0BEA  0021               	movlb	1	; select bank1
  9088  0BEB  0858               	movf	(?___flsub+3)^(0+128),w
  9089  0BEC  0022               	movlb	2	; select bank2
  9090  0BED  00BC               	movwf	(sprintf@fval+3)^(0+256)
  9091  0BEE  0021               	movlb	1	; select bank1
  9092  0BEF  0857               	movf	(?___flsub+2)^(0+128),w
  9093  0BF0  0022               	movlb	2	; select bank2
  9094  0BF1  00BB               	movwf	(sprintf@fval+2)^(0+256)
  9095  0BF2  0021               	movlb	1	; select bank1
  9096  0BF3  0856               	movf	(?___flsub+1)^(0+128),w
  9097  0BF4  0022               	movlb	2	; select bank2
  9098  0BF5  00BA               	movwf	(sprintf@fval+1)^(0+256)
  9099  0BF6  0021               	movlb	1	; select bank1
  9100  0BF7  0855               	movf	?___flsub^(0+128),w
  9101  0BF8  0022               	movlb	2	; select bank2
  9102  0BF9  00B9               	movwf	sprintf@fval^(0+256)
  9103                           
  9104                           ;doprnt.c: 1133: exp = 0;
  9105  0BFA  01B3               	clrf	sprintf@exp^(0+256)
  9106  0BFB  01B4               	clrf	(sprintf@exp+1)^(0+256)
  9107  0BFC                     l7506:	
  9108                           
  9109                           ;doprnt.c: 1134: }
  9110                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9111  0BFC  01C0               	clrf	sprintf@c^(0+256)
  9112  0BFD  0AC0               	incf	sprintf@c^(0+256),f
  9113  0BFE  300A               	movlw	10
  9114  0BFF  0640               	xorwf	sprintf@c^(0+256),w
  9115  0C00  1903               	btfsc	3,2
  9116  0C01  2C2F               	goto	l7518
  9117  0C02                     l7512:	
  9118                           
  9119                           ;doprnt.c: 1137: if(val < dpowers[c])
  9120  0C02  0840               	movf	sprintf@c^(0+256),w
  9121  0C03  00A0               	movwf	??_sprintf^(0+256)
  9122  0C04  01A1               	clrf	(??_sprintf^(0+256)+1)
  9123  0C05  35A0               	lslf	??_sprintf^(0+256),f
  9124  0C06  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9125  0C07  35A0               	lslf	??_sprintf^(0+256),f
  9126  0C08  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9127  0C09  309A               	movlw	low (_dpowers| (0+32768))
  9128  0C0A  0720               	addwf	??_sprintf^(0+256),w
  9129  0C0B  0084               	movwf	4
  9130  0C0C  30B0               	movlw	high (_dpowers| (0+32768))
  9131  0C0D  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9132  0C0E  0085               	movwf	5
  9133  0C0F  3F00               	moviw [0]fsr0
  9134  0C10  00A2               	movwf	(??_sprintf+2)^(0+256)
  9135  0C11  3F01               	moviw [1]fsr0
  9136  0C12  00A3               	movwf	((??_sprintf+2)^(0+256)+1)
  9137  0C13  3F02               	moviw [2]fsr0
  9138  0C14  00A4               	movwf	((??_sprintf+2)^(0+256)+2)
  9139  0C15  3F03               	moviw [3]fsr0
  9140  0C16  00A5               	movwf	((??_sprintf+2)^(0+256)+3)
  9141  0C17  0825               	movf	(??_sprintf+5)^(0+256),w
  9142  0C18  0232               	subwf	(sprintf@val+3)^(0+256),w
  9143  0C19  1D03               	skipz
  9144  0C1A  2C25               	goto	u10275
  9145  0C1B  0824               	movf	(??_sprintf+4)^(0+256),w
  9146  0C1C  0231               	subwf	(sprintf@val+2)^(0+256),w
  9147  0C1D  1D03               	skipz
  9148  0C1E  2C25               	goto	u10275
  9149  0C1F  0823               	movf	(??_sprintf+3)^(0+256),w
  9150  0C20  0230               	subwf	(sprintf@val+1)^(0+256),w
  9151  0C21  1D03               	skipz
  9152  0C22  2C25               	goto	u10275
  9153  0C23  0822               	movf	(??_sprintf+2)^(0+256),w
  9154  0C24  022F               	subwf	sprintf@val^(0+256),w
  9155  0C25                     u10275:	
  9156  0C25  1C03               	btfss	3,0
  9157  0C26  2C2F               	goto	l7518
  9158                           
  9159                           ;doprnt.c: 1138: break;
  9160  0C27  3001               	movlw	1
  9161  0C28  00A0               	movwf	??_sprintf^(0+256)
  9162  0C29  0820               	movf	??_sprintf^(0+256),w
  9163  0C2A  07C0               	addwf	sprintf@c^(0+256),f
  9164  0C2B  300A               	movlw	10
  9165  0C2C  0640               	xorwf	sprintf@c^(0+256),w
  9166  0C2D  1D03               	btfss	3,2
  9167  0C2E  2C02               	goto	l7512
  9168  0C2F                     l7518:	
  9169                           
  9170                           ;doprnt.c: 1142: width -= prec + c + exp;
  9171  0C2F  0840               	movf	sprintf@c^(0+256),w
  9172  0C30  00A0               	movwf	??_sprintf^(0+256)
  9173  0C31  01A1               	clrf	(??_sprintf^(0+256)+1)
  9174  0C32  1BA0               	btfsc	??_sprintf^(0+256),7
  9175  0C33  03A1               	decf	(??_sprintf^(0+256)+1),f
  9176  0C34  083D               	movf	sprintf@prec^(0+256),w
  9177  0C35  0720               	addwf	??_sprintf^(0+256),w
  9178  0C36  00A2               	movwf	(??_sprintf+2)^(0+256)
  9179  0C37  083E               	movf	(sprintf@prec+1)^(0+256),w
  9180  0C38  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9181  0C39  00A3               	movwf	(??_sprintf+3)^(0+256)
  9182  0C3A  0833               	movf	sprintf@exp^(0+256),w
  9183  0C3B  0722               	addwf	(??_sprintf+2)^(0+256),w
  9184  0C3C  00A4               	movwf	(??_sprintf+4)^(0+256)
  9185  0C3D  0834               	movf	(sprintf@exp+1)^(0+256),w
  9186  0C3E  3D23               	addwfc	(??_sprintf+3)^(0+256),w
  9187  0C3F  00A5               	movwf	(??_sprintf+5)^(0+256)
  9188  0C40  0824               	movf	(??_sprintf+4)^(0+256),w
  9189  0C41  02B7               	subwf	sprintf@width^(0+256),f
  9190  0C42  0825               	movf	(??_sprintf+5)^(0+256),w
  9191  0C43  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
  9192                           
  9193                           ;doprnt.c: 1143: if(
  9194                           ;doprnt.c: 1147: prec)
  9195  0C44  083D               	movf	sprintf@prec^(0+256),w
  9196  0C45  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9197  0C46  1903               	btfsc	3,2
  9198  0C47  2C4C               	goto	l7522
  9199                           
  9200                           ;doprnt.c: 1148: width--;
  9201  0C48  30FF               	movlw	255
  9202  0C49  07B7               	addwf	sprintf@width^(0+256),f
  9203  0C4A  30FF               	movlw	255
  9204  0C4B  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9205  0C4C                     l7522:	
  9206                           
  9207                           ;doprnt.c: 1149: if(flag & 0x03)
  9208  0C4C  3003               	movlw	3
  9209  0C4D  0535               	andwf	sprintf@flag^(0+256),w
  9210  0C4E  00A0               	movwf	??_sprintf^(0+256)
  9211  0C4F  3000               	movlw	0
  9212  0C50  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9213  0C51  00A1               	movwf	(??_sprintf+1)^(0+256)
  9214  0C52  0820               	movf	??_sprintf^(0+256),w
  9215  0C53  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9216  0C54  1903               	btfsc	3,2
  9217  0C55  2C5A               	goto	l7526
  9218                           
  9219                           ;doprnt.c: 1150: width--;
  9220  0C56  30FF               	movlw	255
  9221  0C57  07B7               	addwf	sprintf@width^(0+256),f
  9222  0C58  30FF               	movlw	255
  9223  0C59  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9224  0C5A                     l7526:	
  9225                           
  9226                           ;doprnt.c: 1153: if(flag & 0x04) {
  9227  0C5A  1D35               	btfss	sprintf@flag^(0+256),2
  9228  0C5B  2CA0               	goto	l7548
  9229                           
  9230                           ;doprnt.c: 1157: if(flag & 0x03)
  9231  0C5C  3003               	movlw	3
  9232  0C5D  0535               	andwf	sprintf@flag^(0+256),w
  9233  0C5E  00A0               	movwf	??_sprintf^(0+256)
  9234  0C5F  3000               	movlw	0
  9235  0C60  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9236  0C61  00A1               	movwf	(??_sprintf+1)^(0+256)
  9237  0C62  0820               	movf	??_sprintf^(0+256),w
  9238  0C63  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9239  0C64  1903               	btfsc	3,2
  9240  0C65  2C72               	goto	l7540
  9241                           
  9242                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  9243  0C66  302D               	movlw	45
  9244  0C67  00A0               	movwf	??_sprintf^(0+256)
  9245  0C68  083F               	movf	sprintf@sp^(0+256),w
  9246  0C69  0086               	movwf	6
  9247  0C6A  3002               	movlw	2	; select bank4/5
  9248  0C6B  0087               	movwf	7
  9249  0C6C  0820               	movf	??_sprintf^(0+256),w
  9250  0C6D  0081               	movwf	1
  9251  0C6E  3001               	movlw	1
  9252  0C6F  00A0               	movwf	??_sprintf^(0+256)
  9253  0C70  0820               	movf	??_sprintf^(0+256),w
  9254  0C71  07BF               	addwf	sprintf@sp^(0+256),f
  9255  0C72                     l7540:	
  9256                           ;doprnt.c: 1168: while(width > 0) {
  9257                           
  9258  0C72  0838               	movf	(sprintf@width+1)^(0+256),w
  9259  0C73  3A80               	xorlw	128
  9260  0C74  00A0               	movwf	??_sprintf^(0+256)
  9261  0C75  3080               	movlw	128
  9262  0C76  0220               	subwf	??_sprintf^(0+256),w
  9263  0C77  1D03               	skipz
  9264  0C78  2C7B               	goto	u10335
  9265  0C79  3001               	movlw	1
  9266  0C7A  0237               	subwf	sprintf@width^(0+256),w
  9267  0C7B                     u10335:	
  9268  0C7B  1C03               	btfss	3,0
  9269  0C7C  2CC3               	goto	l7564
  9270                           
  9271                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  9272  0C7D  3030               	movlw	48
  9273  0C7E  0022               	movlb	2	; select bank2
  9274  0C7F  00A0               	movwf	??_sprintf^(0+256)
  9275  0C80  083F               	movf	sprintf@sp^(0+256),w
  9276  0C81  0086               	movwf	6
  9277  0C82  3002               	movlw	2	; select bank4/5
  9278  0C83  0087               	movwf	7
  9279  0C84  0820               	movf	??_sprintf^(0+256),w
  9280  0C85  0081               	movwf	1
  9281  0C86  3001               	movlw	1
  9282  0C87  00A0               	movwf	??_sprintf^(0+256)
  9283  0C88  0820               	movf	??_sprintf^(0+256),w
  9284  0C89  07BF               	addwf	sprintf@sp^(0+256),f
  9285                           
  9286                           ;doprnt.c: 1170: width--;
  9287  0C8A  30FF               	movlw	255
  9288  0C8B  07B7               	addwf	sprintf@width^(0+256),f
  9289  0C8C  30FF               	movlw	255
  9290  0C8D  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9291  0C8E  2C72               	goto	l7540
  9292  0C8F                     l7542:	
  9293                           ;doprnt.c: 1175: {
  9294                           ;doprnt.c: 1180: while(width > 0) {
  9295                           
  9296                           ;doprnt.c: 1171: }
  9297                           ;doprnt.c: 1173: } else
  9298                           
  9299                           
  9300                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9301  0C8F  3020               	movlw	32
  9302  0C90  0022               	movlb	2	; select bank2
  9303  0C91  00A0               	movwf	??_sprintf^(0+256)
  9304  0C92  083F               	movf	sprintf@sp^(0+256),w
  9305  0C93  0086               	movwf	6
  9306  0C94  3002               	movlw	2	; select bank4/5
  9307  0C95  0087               	movwf	7
  9308  0C96  0820               	movf	??_sprintf^(0+256),w
  9309  0C97  0081               	movwf	1
  9310  0C98  3001               	movlw	1
  9311  0C99  00A0               	movwf	??_sprintf^(0+256)
  9312  0C9A  0820               	movf	??_sprintf^(0+256),w
  9313  0C9B  07BF               	addwf	sprintf@sp^(0+256),f
  9314                           
  9315                           ;doprnt.c: 1182: width--;
  9316  0C9C  30FF               	movlw	255
  9317  0C9D  07B7               	addwf	sprintf@width^(0+256),f
  9318  0C9E  30FF               	movlw	255
  9319  0C9F  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9320  0CA0                     l7548:	
  9321  0CA0  0022               	movlb	2	; select bank2
  9322  0CA1  0838               	movf	(sprintf@width+1)^(0+256),w
  9323  0CA2  3A80               	xorlw	128
  9324  0CA3  00A0               	movwf	??_sprintf^(0+256)
  9325  0CA4  3080               	movlw	128
  9326  0CA5  0220               	subwf	??_sprintf^(0+256),w
  9327  0CA6  1D03               	skipz
  9328  0CA7  2CAA               	goto	u10345
  9329  0CA8  3001               	movlw	1
  9330  0CA9  0237               	subwf	sprintf@width^(0+256),w
  9331  0CAA                     u10345:	
  9332  0CAA  1803               	skipnc
  9333  0CAB  2C8F               	goto	l7542
  9334                           
  9335                           ;doprnt.c: 1183: }
  9336                           ;doprnt.c: 1188: if(flag & 0x03)
  9337  0CAC  3003               	movlw	3
  9338  0CAD  0022               	movlb	2	; select bank2
  9339  0CAE  0535               	andwf	sprintf@flag^(0+256),w
  9340  0CAF  00A0               	movwf	??_sprintf^(0+256)
  9341  0CB0  3000               	movlw	0
  9342  0CB1  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9343  0CB2  00A1               	movwf	(??_sprintf+1)^(0+256)
  9344  0CB3  0820               	movf	??_sprintf^(0+256),w
  9345  0CB4  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9346  0CB5  1903               	btfsc	3,2
  9347  0CB6  2CC3               	goto	l7564
  9348                           
  9349                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9350  0CB7  302D               	movlw	45
  9351  0CB8                     L7:	
  9352  0CB8  00A0               	movwf	??_sprintf^(0+256)
  9353  0CB9  083F               	movf	sprintf@sp^(0+256),w
  9354  0CBA  0086               	movwf	6
  9355  0CBB  3002               	movlw	2	; select bank4/5
  9356  0CBC  0087               	movwf	7
  9357  0CBD  0820               	movf	??_sprintf^(0+256),w
  9358  0CBE  0081               	movwf	1
  9359  0CBF  3001               	movlw	1
  9360  0CC0  00A0               	movwf	??_sprintf^(0+256)
  9361  0CC1  0820               	movf	??_sprintf^(0+256),w
  9362  0CC2  07BF               	addwf	sprintf@sp^(0+256),f
  9363  0CC3                     l7564:	
  9364  0CC3  30FF               	movlw	255
  9365  0CC4  0022               	movlb	2	; select bank2
  9366  0CC5  00A0               	movwf	??_sprintf^(0+256)
  9367  0CC6  0820               	movf	??_sprintf^(0+256),w
  9368  0CC7  07C0               	addwf	sprintf@c^(0+256),f
  9369  0CC8  0A40               	incf	sprintf@c^(0+256),w
  9370  0CC9  1903               	btfsc	3,2
  9371  0CCA  2D34               	goto	l7572
  9372                           
  9373                           ;doprnt.c: 1200: {
  9374                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9375                           
  9376                           ;doprnt.c: 1195: }
  9377                           ;doprnt.c: 1196: while(c--) {
  9378  0CCB  0840               	movf	sprintf@c^(0+256),w
  9379  0CCC  00A0               	movwf	??_sprintf^(0+256)
  9380  0CCD  01A1               	clrf	(??_sprintf^(0+256)+1)
  9381  0CCE  35A0               	lslf	??_sprintf^(0+256),f
  9382  0CCF  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9383  0CD0  35A0               	lslf	??_sprintf^(0+256),f
  9384  0CD1  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9385  0CD2  309A               	movlw	low (_dpowers| (0+32768))
  9386  0CD3  0720               	addwf	??_sprintf^(0+256),w
  9387  0CD4  0084               	movwf	4
  9388  0CD5  30B0               	movlw	high (_dpowers| (0+32768))
  9389  0CD6  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9390  0CD7  0085               	movwf	5
  9391  0CD8  3F00               	moviw [0]fsr0
  9392  0CD9  00F2               	movwf	___lldiv@divisor
  9393  0CDA  3F01               	moviw [1]fsr0
  9394  0CDB  00F3               	movwf	___lldiv@divisor+1
  9395  0CDC  3F02               	moviw [2]fsr0
  9396  0CDD  00F4               	movwf	___lldiv@divisor+2
  9397  0CDE  3F03               	moviw [3]fsr0
  9398  0CDF  00F5               	movwf	___lldiv@divisor+3
  9399  0CE0  0832               	movf	(sprintf@val+3)^(0+256),w
  9400  0CE1  00F9               	movwf	___lldiv@dividend+3
  9401  0CE2  0831               	movf	(sprintf@val+2)^(0+256),w
  9402  0CE3  00F8               	movwf	___lldiv@dividend+2
  9403  0CE4  0830               	movf	(sprintf@val+1)^(0+256),w
  9404  0CE5  00F7               	movwf	___lldiv@dividend+1
  9405  0CE6  082F               	movf	sprintf@val^(0+256),w
  9406  0CE7  00F6               	movwf	___lldiv@dividend
  9407  0CE8  31AF  2704  3188   	fcall	___lldiv
  9408  0CEB  0875               	movf	?___lldiv+3,w
  9409  0CEC  0022               	movlb	2	; select bank2
  9410  0CED  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9411  0CEE  0874               	movf	?___lldiv+2,w
  9412  0CEF  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9413  0CF0  0873               	movf	?___lldiv+1,w
  9414  0CF1  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9415  0CF2  0872               	movf	?___lldiv,w
  9416  0CF3  00AB               	movwf	sprintf@tmpval^(0+256)
  9417                           
  9418                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9419  0CF4  3000               	movlw	0
  9420  0CF5  0020               	movlb	0	; select bank0
  9421  0CF6  00A9               	movwf	___llmod@divisor+3
  9422  0CF7  3000               	movlw	0
  9423  0CF8  00A8               	movwf	___llmod@divisor+2
  9424  0CF9  3000               	movlw	0
  9425  0CFA  00A7               	movwf	___llmod@divisor+1
  9426  0CFB  300A               	movlw	10
  9427  0CFC  00A6               	movwf	___llmod@divisor
  9428  0CFD  0022               	movlb	2	; select bank2
  9429  0CFE  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  9430  0CFF  0020               	movlb	0	; select bank0
  9431  0D00  00AD               	movwf	___llmod@dividend+3
  9432  0D01  0022               	movlb	2	; select bank2
  9433  0D02  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  9434  0D03  0020               	movlb	0	; select bank0
  9435  0D04  00AC               	movwf	___llmod@dividend+2
  9436  0D05  0022               	movlb	2	; select bank2
  9437  0D06  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  9438  0D07  0020               	movlb	0	; select bank0
  9439  0D08  00AB               	movwf	___llmod@dividend+1
  9440  0D09  0022               	movlb	2	; select bank2
  9441  0D0A  082B               	movf	sprintf@tmpval^(0+256),w
  9442  0D0B  0020               	movlb	0	; select bank0
  9443  0D0C  00AA               	movwf	___llmod@dividend
  9444  0D0D  31AD  2539  3188   	fcall	___llmod
  9445  0D10  0020               	movlb	0	; select bank0
  9446  0D11  0829               	movf	?___llmod+3,w
  9447  0D12  0022               	movlb	2	; select bank2
  9448  0D13  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9449  0D14  0020               	movlb	0	; select bank0
  9450  0D15  0828               	movf	?___llmod+2,w
  9451  0D16  0022               	movlb	2	; select bank2
  9452  0D17  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9453  0D18  0020               	movlb	0	; select bank0
  9454  0D19  0827               	movf	?___llmod+1,w
  9455  0D1A  0022               	movlb	2	; select bank2
  9456  0D1B  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9457  0D1C  0020               	movlb	0	; select bank0
  9458  0D1D  0826               	movf	?___llmod,w
  9459  0D1E  0022               	movlb	2	; select bank2
  9460  0D1F  00AB               	movwf	sprintf@tmpval^(0+256)
  9461                           
  9462                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9463  0D20  082B               	movf	sprintf@tmpval^(0+256),w
  9464  0D21  3E30               	addlw	48
  9465  0D22  2CB8               	goto	L7
  9466  0D23                     l7566:	
  9467                           ;doprnt.c: 1204: }
  9468                           ;doprnt.c: 1206: }
  9469                           ;doprnt.c: 1207: while(exp > 0) {
  9470                           
  9471                           
  9472                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9473  0D23  3030               	movlw	48
  9474  0D24  0022               	movlb	2	; select bank2
  9475  0D25  00A0               	movwf	??_sprintf^(0+256)
  9476  0D26  083F               	movf	sprintf@sp^(0+256),w
  9477  0D27  0086               	movwf	6
  9478  0D28  3002               	movlw	2	; select bank4/5
  9479  0D29  0087               	movwf	7
  9480  0D2A  0820               	movf	??_sprintf^(0+256),w
  9481  0D2B  0081               	movwf	1
  9482  0D2C  3001               	movlw	1
  9483  0D2D  00A0               	movwf	??_sprintf^(0+256)
  9484  0D2E  0820               	movf	??_sprintf^(0+256),w
  9485  0D2F  07BF               	addwf	sprintf@sp^(0+256),f
  9486                           
  9487                           ;doprnt.c: 1209: exp--;
  9488  0D30  30FF               	movlw	255
  9489  0D31  07B3               	addwf	sprintf@exp^(0+256),f
  9490  0D32  30FF               	movlw	255
  9491  0D33  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  9492  0D34                     l7572:	
  9493  0D34  0834               	movf	(sprintf@exp+1)^(0+256),w
  9494  0D35  3A80               	xorlw	128
  9495  0D36  00A0               	movwf	??_sprintf^(0+256)
  9496  0D37  3080               	movlw	128
  9497  0D38  0220               	subwf	??_sprintf^(0+256),w
  9498  0D39  1D03               	skipz
  9499  0D3A  2D3D               	goto	u10375
  9500  0D3B  3001               	movlw	1
  9501  0D3C  0233               	subwf	sprintf@exp^(0+256),w
  9502  0D3D                     u10375:	
  9503  0D3D  1803               	skipnc
  9504  0D3E  2D23               	goto	l7566
  9505                           
  9506                           ;doprnt.c: 1210: }
  9507                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9508  0D3F  0022               	movlb	2	; select bank2
  9509  0D40  083E               	movf	(sprintf@prec+1)^(0+256),w
  9510  0D41  3A80               	xorlw	128
  9511  0D42  00A0               	movwf	??_sprintf^(0+256)
  9512  0D43  3080               	movlw	128
  9513  0D44  0220               	subwf	??_sprintf^(0+256),w
  9514  0D45  1D03               	skipz
  9515  0D46  2D49               	goto	u10385
  9516  0D47  3009               	movlw	9
  9517  0D48  023D               	subwf	sprintf@prec^(0+256),w
  9518  0D49                     u10385:	
  9519  0D49  1C03               	skipc
  9520  0D4A  2D4E               	goto	l7578
  9521                           
  9522                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9523  0D4B  3008               	movlw	8
  9524  0D4C  0022               	movlb	2	; select bank2
  9525  0D4D  2D50               	goto	L5
  9526  0D4E                     l7578:	
  9527                           
  9528                           ;doprnt.c: 1213: else
  9529                           ;doprnt.c: 1214: c = prec;
  9530  0D4E  0022               	movlb	2	; select bank2
  9531  0D4F  083D               	movf	sprintf@prec^(0+256),w
  9532  0D50                     L5:	
  9533  0D50  00A0               	movwf	??_sprintf^(0+256)
  9534  0D51  0820               	movf	??_sprintf^(0+256),w
  9535  0D52  00C0               	movwf	sprintf@c^(0+256)
  9536                           
  9537                           ;doprnt.c: 1215: prec -= c;
  9538  0D53  0840               	movf	sprintf@c^(0+256),w
  9539  0D54  00A0               	movwf	??_sprintf^(0+256)
  9540  0D55  01A1               	clrf	(??_sprintf^(0+256)+1)
  9541  0D56  1BA0               	btfsc	??_sprintf^(0+256),7
  9542  0D57  03A1               	decf	(??_sprintf^(0+256)+1),f
  9543  0D58  0820               	movf	??_sprintf^(0+256),w
  9544  0D59  02BD               	subwf	sprintf@prec^(0+256),f
  9545  0D5A  0821               	movf	(??_sprintf+1)^(0+256),w
  9546  0D5B  3BBE               	subwfb	(sprintf@prec+1)^(0+256),f
  9547                           
  9548                           ;doprnt.c: 1219: if(c)
  9549  0D5C  0840               	movf	sprintf@c^(0+256),w
  9550  0D5D  1903               	btfsc	3,2
  9551  0D5E  2D6B               	goto	l7586
  9552                           
  9553                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9554  0D5F  302E               	movlw	46
  9555  0D60  00A0               	movwf	??_sprintf^(0+256)
  9556  0D61  083F               	movf	sprintf@sp^(0+256),w
  9557  0D62  0086               	movwf	6
  9558  0D63  3002               	movlw	2	; select bank4/5
  9559  0D64  0087               	movwf	7
  9560  0D65  0820               	movf	??_sprintf^(0+256),w
  9561  0D66  0081               	movwf	1
  9562  0D67  3001               	movlw	1
  9563  0D68  00A0               	movwf	??_sprintf^(0+256)
  9564  0D69  0820               	movf	??_sprintf^(0+256),w
  9565  0D6A  07BF               	addwf	sprintf@sp^(0+256),f
  9566  0D6B                     l7586:	
  9567                           
  9568                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9569  0D6B  0840               	movf	sprintf@c^(0+256),w
  9570  0D6C  3180  20A8  3188   	fcall	_scale
  9571  0D6F  0020               	movlb	0	; select bank0
  9572  0D70  086F               	movf	?_scale+3,w
  9573  0D71  0022               	movlb	2	; select bank2
  9574  0D72  00A9               	movwf	(_sprintf$2180+3)^(0+256)
  9575  0D73  0020               	movlb	0	; select bank0
  9576  0D74  086E               	movf	?_scale+2,w
  9577  0D75  0022               	movlb	2	; select bank2
  9578  0D76  00A8               	movwf	(_sprintf$2180+2)^(0+256)
  9579  0D77  0020               	movlb	0	; select bank0
  9580  0D78  086D               	movf	?_scale+1,w
  9581  0D79  0022               	movlb	2	; select bank2
  9582  0D7A  00A7               	movwf	(_sprintf$2180+1)^(0+256)
  9583  0D7B  0020               	movlb	0	; select bank0
  9584  0D7C  086C               	movf	?_scale,w
  9585  0D7D  0022               	movlb	2	; select bank2
  9586  0D7E  00A6               	movwf	_sprintf$2180^(0+256)
  9587                           
  9588                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9589  0D7F  0829               	movf	(_sprintf$2180+3)^(0+256),w
  9590  0D80  0020               	movlb	0	; select bank0
  9591  0D81  00D9               	movwf	___flmul@a+3
  9592  0D82  0022               	movlb	2	; select bank2
  9593  0D83  0828               	movf	(_sprintf$2180+2)^(0+256),w
  9594  0D84  0020               	movlb	0	; select bank0
  9595  0D85  00D8               	movwf	___flmul@a+2
  9596  0D86  0022               	movlb	2	; select bank2
  9597  0D87  0827               	movf	(_sprintf$2180+1)^(0+256),w
  9598  0D88  0020               	movlb	0	; select bank0
  9599  0D89  00D7               	movwf	___flmul@a+1
  9600  0D8A  0022               	movlb	2	; select bank2
  9601  0D8B  0826               	movf	_sprintf$2180^(0+256),w
  9602  0D8C  0020               	movlb	0	; select bank0
  9603  0D8D  00D6               	movwf	___flmul@a
  9604  0D8E  0022               	movlb	2	; select bank2
  9605  0D8F  083C               	movf	(sprintf@fval+3)^(0+256),w
  9606  0D90  0020               	movlb	0	; select bank0
  9607  0D91  00D5               	movwf	___flmul@b+3
  9608  0D92  0022               	movlb	2	; select bank2
  9609  0D93  083B               	movf	(sprintf@fval+2)^(0+256),w
  9610  0D94  0020               	movlb	0	; select bank0
  9611  0D95  00D4               	movwf	___flmul@b+2
  9612  0D96  0022               	movlb	2	; select bank2
  9613  0D97  083A               	movf	(sprintf@fval+1)^(0+256),w
  9614  0D98  0020               	movlb	0	; select bank0
  9615  0D99  00D3               	movwf	___flmul@b+1
  9616  0D9A  0022               	movlb	2	; select bank2
  9617  0D9B  0839               	movf	sprintf@fval^(0+256),w
  9618  0D9C  0020               	movlb	0	; select bank0
  9619  0D9D  00D2               	movwf	___flmul@b
  9620  0D9E  3183  23CD  3188   	fcall	___flmul
  9621  0DA1  0020               	movlb	0	; select bank0
  9622  0DA2  0855               	movf	?___flmul+3,w
  9623  0DA3  0021               	movlb	1	; select bank1
  9624  0DA4  00B8               	movwf	(___fltol@f1+3)^(0+128)
  9625  0DA5  0020               	movlb	0	; select bank0
  9626  0DA6  0854               	movf	?___flmul+2,w
  9627  0DA7  0021               	movlb	1	; select bank1
  9628  0DA8  00B7               	movwf	(___fltol@f1+2)^(0+128)
  9629  0DA9  0020               	movlb	0	; select bank0
  9630  0DAA  0853               	movf	?___flmul+1,w
  9631  0DAB  0021               	movlb	1	; select bank1
  9632  0DAC  00B6               	movwf	(___fltol@f1+1)^(0+128)
  9633  0DAD  0020               	movlb	0	; select bank0
  9634  0DAE  0852               	movf	?___flmul,w
  9635  0DAF  0021               	movlb	1	; select bank1
  9636  0DB0  00B5               	movwf	___fltol@f1^(0+128)
  9637  0DB1  31A0  20EC  3188   	fcall	___fltol
  9638  0DB4  0021               	movlb	1	; select bank1
  9639  0DB5  0838               	movf	(?___fltol+3)^(0+128),w
  9640  0DB6  0022               	movlb	2	; select bank2
  9641  0DB7  00B2               	movwf	(sprintf@val+3)^(0+256)
  9642  0DB8  0021               	movlb	1	; select bank1
  9643  0DB9  0837               	movf	(?___fltol+2)^(0+128),w
  9644  0DBA  0022               	movlb	2	; select bank2
  9645  0DBB  00B1               	movwf	(sprintf@val+2)^(0+256)
  9646  0DBC  0021               	movlb	1	; select bank1
  9647  0DBD  0836               	movf	(?___fltol+1)^(0+128),w
  9648  0DBE  0022               	movlb	2	; select bank2
  9649  0DBF  00B0               	movwf	(sprintf@val+1)^(0+256)
  9650  0DC0  0021               	movlb	1	; select bank1
  9651  0DC1  0835               	movf	?___fltol^(0+128),w
  9652  0DC2                     L6:	
  9653  0DC2  0022               	movlb	2	; select bank2
  9654  0DC3  00AF               	movwf	sprintf@val^(0+256)
  9655  0DC4  30FF               	movlw	255
  9656  0DC5  00A0               	movwf	??_sprintf^(0+256)
  9657  0DC6  0820               	movf	??_sprintf^(0+256),w
  9658  0DC7  07C0               	addwf	sprintf@c^(0+256),f
  9659  0DC8  0A40               	incf	sprintf@c^(0+256),w
  9660  0DC9  1903               	btfsc	3,2
  9661  0DCA  2E75               	goto	l7608
  9662                           
  9663                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9664                           
  9665                           ;doprnt.c: 1228: while(c--) {
  9666  0DCB  0840               	movf	sprintf@c^(0+256),w
  9667  0DCC  00A0               	movwf	??_sprintf^(0+256)
  9668  0DCD  01A1               	clrf	(??_sprintf^(0+256)+1)
  9669  0DCE  35A0               	lslf	??_sprintf^(0+256),f
  9670  0DCF  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9671  0DD0  35A0               	lslf	??_sprintf^(0+256),f
  9672  0DD1  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9673  0DD2  309A               	movlw	low (_dpowers| (0+32768))
  9674  0DD3  0720               	addwf	??_sprintf^(0+256),w
  9675  0DD4  0084               	movwf	4
  9676  0DD5  30B0               	movlw	high (_dpowers| (0+32768))
  9677  0DD6  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9678  0DD7  0085               	movwf	5
  9679  0DD8  3F00               	moviw [0]fsr0
  9680  0DD9  00F2               	movwf	___lldiv@divisor
  9681  0DDA  3F01               	moviw [1]fsr0
  9682  0DDB  00F3               	movwf	___lldiv@divisor+1
  9683  0DDC  3F02               	moviw [2]fsr0
  9684  0DDD  00F4               	movwf	___lldiv@divisor+2
  9685  0DDE  3F03               	moviw [3]fsr0
  9686  0DDF  00F5               	movwf	___lldiv@divisor+3
  9687  0DE0  0832               	movf	(sprintf@val+3)^(0+256),w
  9688  0DE1  00F9               	movwf	___lldiv@dividend+3
  9689  0DE2  0831               	movf	(sprintf@val+2)^(0+256),w
  9690  0DE3  00F8               	movwf	___lldiv@dividend+2
  9691  0DE4  0830               	movf	(sprintf@val+1)^(0+256),w
  9692  0DE5  00F7               	movwf	___lldiv@dividend+1
  9693  0DE6  082F               	movf	sprintf@val^(0+256),w
  9694  0DE7  00F6               	movwf	___lldiv@dividend
  9695  0DE8  31AF  2704  3188   	fcall	___lldiv
  9696  0DEB  0875               	movf	?___lldiv+3,w
  9697  0DEC  0022               	movlb	2	; select bank2
  9698  0DED  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9699  0DEE  0874               	movf	?___lldiv+2,w
  9700  0DEF  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9701  0DF0  0873               	movf	?___lldiv+1,w
  9702  0DF1  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9703  0DF2  0872               	movf	?___lldiv,w
  9704  0DF3  00AB               	movwf	sprintf@tmpval^(0+256)
  9705                           
  9706                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9707  0DF4  3000               	movlw	0
  9708  0DF5  0020               	movlb	0	; select bank0
  9709  0DF6  00A9               	movwf	___llmod@divisor+3
  9710  0DF7  3000               	movlw	0
  9711  0DF8  00A8               	movwf	___llmod@divisor+2
  9712  0DF9  3000               	movlw	0
  9713  0DFA  00A7               	movwf	___llmod@divisor+1
  9714  0DFB  300A               	movlw	10
  9715  0DFC  00A6               	movwf	___llmod@divisor
  9716  0DFD  0022               	movlb	2	; select bank2
  9717  0DFE  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  9718  0DFF  0020               	movlb	0	; select bank0
  9719  0E00  00AD               	movwf	___llmod@dividend+3
  9720  0E01  0022               	movlb	2	; select bank2
  9721  0E02  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  9722  0E03  0020               	movlb	0	; select bank0
  9723  0E04  00AC               	movwf	___llmod@dividend+2
  9724  0E05  0022               	movlb	2	; select bank2
  9725  0E06  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  9726  0E07  0020               	movlb	0	; select bank0
  9727  0E08  00AB               	movwf	___llmod@dividend+1
  9728  0E09  0022               	movlb	2	; select bank2
  9729  0E0A  082B               	movf	sprintf@tmpval^(0+256),w
  9730  0E0B  0020               	movlb	0	; select bank0
  9731  0E0C  00AA               	movwf	___llmod@dividend
  9732  0E0D  31AD  2539  3188   	fcall	___llmod
  9733  0E10  0020               	movlb	0	; select bank0
  9734  0E11  0829               	movf	?___llmod+3,w
  9735  0E12  0022               	movlb	2	; select bank2
  9736  0E13  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9737  0E14  0020               	movlb	0	; select bank0
  9738  0E15  0828               	movf	?___llmod+2,w
  9739  0E16  0022               	movlb	2	; select bank2
  9740  0E17  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9741  0E18  0020               	movlb	0	; select bank0
  9742  0E19  0827               	movf	?___llmod+1,w
  9743  0E1A  0022               	movlb	2	; select bank2
  9744  0E1B  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9745  0E1C  0020               	movlb	0	; select bank0
  9746  0E1D  0826               	movf	?___llmod,w
  9747  0E1E  0022               	movlb	2	; select bank2
  9748  0E1F  00AB               	movwf	sprintf@tmpval^(0+256)
  9749                           
  9750                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9751  0E20  082B               	movf	sprintf@tmpval^(0+256),w
  9752  0E21  3E30               	addlw	48
  9753  0E22  00A0               	movwf	??_sprintf^(0+256)
  9754  0E23  083F               	movf	sprintf@sp^(0+256),w
  9755  0E24  0086               	movwf	6
  9756  0E25  3002               	movlw	2	; select bank4/5
  9757  0E26  0087               	movwf	7
  9758  0E27  0820               	movf	??_sprintf^(0+256),w
  9759  0E28  0081               	movwf	1
  9760  0E29  3001               	movlw	1
  9761  0E2A  00A0               	movwf	??_sprintf^(0+256)
  9762  0E2B  0820               	movf	??_sprintf^(0+256),w
  9763  0E2C  07BF               	addwf	sprintf@sp^(0+256),f
  9764                           
  9765                           ;doprnt.c: 1232: val %= dpowers[c];
  9766  0E2D  0840               	movf	sprintf@c^(0+256),w
  9767  0E2E  00A0               	movwf	??_sprintf^(0+256)
  9768  0E2F  01A1               	clrf	(??_sprintf^(0+256)+1)
  9769  0E30  35A0               	lslf	??_sprintf^(0+256),f
  9770  0E31  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9771  0E32  35A0               	lslf	??_sprintf^(0+256),f
  9772  0E33  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9773  0E34  309A               	movlw	low (_dpowers| (0+32768))
  9774  0E35  0720               	addwf	??_sprintf^(0+256),w
  9775  0E36  0084               	movwf	4
  9776  0E37  30B0               	movlw	high (_dpowers| (0+32768))
  9777  0E38  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9778  0E39  0085               	movwf	5
  9779  0E3A  3F00               	moviw [0]fsr0
  9780  0E3B  0020               	movlb	0	; select bank0
  9781  0E3C  00A6               	movwf	___llmod@divisor
  9782  0E3D  3F01               	moviw [1]fsr0
  9783  0E3E  00A7               	movwf	___llmod@divisor+1
  9784  0E3F  3F02               	moviw [2]fsr0
  9785  0E40  00A8               	movwf	___llmod@divisor+2
  9786  0E41  3F03               	moviw [3]fsr0
  9787  0E42  00A9               	movwf	___llmod@divisor+3
  9788  0E43  0022               	movlb	2	; select bank2
  9789  0E44  0832               	movf	(sprintf@val+3)^(0+256),w
  9790  0E45  0020               	movlb	0	; select bank0
  9791  0E46  00AD               	movwf	___llmod@dividend+3
  9792  0E47  0022               	movlb	2	; select bank2
  9793  0E48  0831               	movf	(sprintf@val+2)^(0+256),w
  9794  0E49  0020               	movlb	0	; select bank0
  9795  0E4A  00AC               	movwf	___llmod@dividend+2
  9796  0E4B  0022               	movlb	2	; select bank2
  9797  0E4C  0830               	movf	(sprintf@val+1)^(0+256),w
  9798  0E4D  0020               	movlb	0	; select bank0
  9799  0E4E  00AB               	movwf	___llmod@dividend+1
  9800  0E4F  0022               	movlb	2	; select bank2
  9801  0E50  082F               	movf	sprintf@val^(0+256),w
  9802  0E51  0020               	movlb	0	; select bank0
  9803  0E52  00AA               	movwf	___llmod@dividend
  9804  0E53  31AD  2539  3188   	fcall	___llmod
  9805  0E56  0020               	movlb	0	; select bank0
  9806  0E57  0829               	movf	?___llmod+3,w
  9807  0E58  0022               	movlb	2	; select bank2
  9808  0E59  00B2               	movwf	(sprintf@val+3)^(0+256)
  9809  0E5A  0020               	movlb	0	; select bank0
  9810  0E5B  0828               	movf	?___llmod+2,w
  9811  0E5C  0022               	movlb	2	; select bank2
  9812  0E5D  00B1               	movwf	(sprintf@val+2)^(0+256)
  9813  0E5E  0020               	movlb	0	; select bank0
  9814  0E5F  0827               	movf	?___llmod+1,w
  9815  0E60  0022               	movlb	2	; select bank2
  9816  0E61  00B0               	movwf	(sprintf@val+1)^(0+256)
  9817  0E62  0020               	movlb	0	; select bank0
  9818  0E63  0826               	movf	?___llmod,w
  9819  0E64  2DC2               	goto	L6
  9820  0E65                     l7602:	
  9821                           ;doprnt.c: 1233: }
  9822                           ;doprnt.c: 1235: while(prec) {
  9823                           
  9824                           
  9825                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9826  0E65  3030               	movlw	48
  9827  0E66  00A0               	movwf	??_sprintf^(0+256)
  9828  0E67  083F               	movf	sprintf@sp^(0+256),w
  9829  0E68  0086               	movwf	6
  9830  0E69  3002               	movlw	2	; select bank4/5
  9831  0E6A  0087               	movwf	7
  9832  0E6B  0820               	movf	??_sprintf^(0+256),w
  9833  0E6C  0081               	movwf	1
  9834  0E6D  3001               	movlw	1
  9835  0E6E  00A0               	movwf	??_sprintf^(0+256)
  9836  0E6F  0820               	movf	??_sprintf^(0+256),w
  9837  0E70  07BF               	addwf	sprintf@sp^(0+256),f
  9838                           
  9839                           ;doprnt.c: 1237: prec--;
  9840  0E71  30FF               	movlw	255
  9841  0E72  07BD               	addwf	sprintf@prec^(0+256),f
  9842  0E73  30FF               	movlw	255
  9843  0E74  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
  9844  0E75                     l7608:	
  9845  0E75  083D               	movf	sprintf@prec^(0+256),w
  9846  0E76  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9847  0E77  1903               	btfsc	3,2
  9848  0E78  28A5               	goto	l7702
  9849  0E79  2E65               	goto	l7602
  9850  0E7A                     l7610:	
  9851                           ;doprnt.c: 1238: }
  9852                           ;doprnt.c: 1245: continue;
  9853                           
  9854                           
  9855                           ;doprnt.c: 1246: }
  9856                           ;doprnt.c: 1253: {
  9857                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9858  0E7A  082A               	movf	sprintf@ap^(0+256),w
  9859  0E7B  0086               	movwf	6
  9860  0E7C  0187               	clrf	7
  9861  0E7D  3F40               	moviw [0]fsr1
  9862  0E7E  00A0               	movwf	??_sprintf^(0+256)
  9863  0E7F  3F41               	moviw [1]fsr1
  9864  0E80  00A1               	movwf	(??_sprintf^(0+256)+1)
  9865  0E81  0820               	movf	??_sprintf^(0+256),w
  9866  0E82  00AF               	movwf	sprintf@val^(0+256)
  9867  0E83  0821               	movf	(??_sprintf+1)^(0+256),w
  9868  0E84  00B0               	movwf	(sprintf@val+1)^(0+256)
  9869  0E85  0D89               	rlf	9,f
  9870  0E86  3B89               	subwfb	9,f
  9871  0E87  0989               	comf	9,f
  9872  0E88  00B1               	movwf	(sprintf@val+2)^(0+256)
  9873  0E89  00B2               	movwf	(sprintf@val+3)^(0+256)
  9874  0E8A  3002               	movlw	2
  9875  0E8B  00A0               	movwf	??_sprintf^(0+256)
  9876  0E8C  0820               	movf	??_sprintf^(0+256),w
  9877  0E8D  07AA               	addwf	sprintf@ap^(0+256),f
  9878                           
  9879                           ;doprnt.c: 1261: if((long)val < 0) {
  9880  0E8E  1FB2               	btfss	(sprintf@val+3)^(0+256),7
  9881  0E8F  2E9F               	goto	l7620
  9882                           
  9883                           ;doprnt.c: 1262: flag |= 0x03;
  9884  0E90  3003               	movlw	3
  9885  0E91  04B5               	iorwf	sprintf@flag^(0+256),f
  9886  0E92  3000               	movlw	0
  9887  0E93  04B6               	iorwf	(sprintf@flag+1)^(0+256),f
  9888                           
  9889                           ;doprnt.c: 1263: val = -val;
  9890  0E94  09AF               	comf	sprintf@val^(0+256),f
  9891  0E95  09B0               	comf	(sprintf@val+1)^(0+256),f
  9892  0E96  09B1               	comf	(sprintf@val+2)^(0+256),f
  9893  0E97  09B2               	comf	(sprintf@val+3)^(0+256),f
  9894  0E98  0AAF               	incf	sprintf@val^(0+256),f
  9895  0E99  1903               	skipnz
  9896  0E9A  0AB0               	incf	(sprintf@val+1)^(0+256),f
  9897  0E9B  1903               	skipnz
  9898  0E9C  0AB1               	incf	(sprintf@val+2)^(0+256),f
  9899  0E9D  1903               	skipnz
  9900  0E9E  0AB2               	incf	(sprintf@val+3)^(0+256),f
  9901  0E9F                     l7620:	
  9902                           
  9903                           ;doprnt.c: 1264: }
  9904                           ;doprnt.c: 1266: }
  9905                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9906  0E9F  083D               	movf	sprintf@prec^(0+256),w
  9907  0EA0  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9908  0EA1  1D03               	btfss	3,2
  9909  0EA2  2EAD               	goto	l7626
  9910  0EA3  0832               	movf	(sprintf@val+3)^(0+256),w
  9911  0EA4  0431               	iorwf	(sprintf@val+2)^(0+256),w
  9912  0EA5  0430               	iorwf	(sprintf@val+1)^(0+256),w
  9913  0EA6  042F               	iorwf	sprintf@val^(0+256),w
  9914  0EA7  1D03               	skipz
  9915  0EA8  2EAD               	goto	l7626
  9916                           
  9917                           ;doprnt.c: 1291: prec++;
  9918  0EA9  3001               	movlw	1
  9919  0EAA  07BD               	addwf	sprintf@prec^(0+256),f
  9920  0EAB  3000               	movlw	0
  9921  0EAC  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
  9922  0EAD                     l7626:	
  9923                           
  9924                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9925  0EAD  01C0               	clrf	sprintf@c^(0+256)
  9926  0EAE  0AC0               	incf	sprintf@c^(0+256),f
  9927  0EAF  300A               	movlw	10
  9928  0EB0  0640               	xorwf	sprintf@c^(0+256),w
  9929  0EB1  1903               	btfsc	3,2
  9930  0EB2  2EE0               	goto	l7638
  9931  0EB3                     l7632:	
  9932                           
  9933                           ;doprnt.c: 1306: if(val < dpowers[c])
  9934  0EB3  0840               	movf	sprintf@c^(0+256),w
  9935  0EB4  00A0               	movwf	??_sprintf^(0+256)
  9936  0EB5  01A1               	clrf	(??_sprintf^(0+256)+1)
  9937  0EB6  35A0               	lslf	??_sprintf^(0+256),f
  9938  0EB7  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9939  0EB8  35A0               	lslf	??_sprintf^(0+256),f
  9940  0EB9  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9941  0EBA  309A               	movlw	low (_dpowers| (0+32768))
  9942  0EBB  0720               	addwf	??_sprintf^(0+256),w
  9943  0EBC  0084               	movwf	4
  9944  0EBD  30B0               	movlw	high (_dpowers| (0+32768))
  9945  0EBE  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9946  0EBF  0085               	movwf	5
  9947  0EC0  3F00               	moviw [0]fsr0
  9948  0EC1  00A2               	movwf	(??_sprintf+2)^(0+256)
  9949  0EC2  3F01               	moviw [1]fsr0
  9950  0EC3  00A3               	movwf	((??_sprintf+2)^(0+256)+1)
  9951  0EC4  3F02               	moviw [2]fsr0
  9952  0EC5  00A4               	movwf	((??_sprintf+2)^(0+256)+2)
  9953  0EC6  3F03               	moviw [3]fsr0
  9954  0EC7  00A5               	movwf	((??_sprintf+2)^(0+256)+3)
  9955  0EC8  0825               	movf	(??_sprintf+5)^(0+256),w
  9956  0EC9  0232               	subwf	(sprintf@val+3)^(0+256),w
  9957  0ECA  1D03               	skipz
  9958  0ECB  2ED6               	goto	u10465
  9959  0ECC  0824               	movf	(??_sprintf+4)^(0+256),w
  9960  0ECD  0231               	subwf	(sprintf@val+2)^(0+256),w
  9961  0ECE  1D03               	skipz
  9962  0ECF  2ED6               	goto	u10465
  9963  0ED0  0823               	movf	(??_sprintf+3)^(0+256),w
  9964  0ED1  0230               	subwf	(sprintf@val+1)^(0+256),w
  9965  0ED2  1D03               	skipz
  9966  0ED3  2ED6               	goto	u10465
  9967  0ED4  0822               	movf	(??_sprintf+2)^(0+256),w
  9968  0ED5  022F               	subwf	sprintf@val^(0+256),w
  9969  0ED6                     u10465:	
  9970  0ED6  1C03               	btfss	3,0
  9971  0ED7  2EE0               	goto	l7638
  9972                           
  9973                           ;doprnt.c: 1307: break;
  9974  0ED8  3001               	movlw	1
  9975  0ED9  00A0               	movwf	??_sprintf^(0+256)
  9976  0EDA  0820               	movf	??_sprintf^(0+256),w
  9977  0EDB  07C0               	addwf	sprintf@c^(0+256),f
  9978  0EDC  300A               	movlw	10
  9979  0EDD  0640               	xorwf	sprintf@c^(0+256),w
  9980  0EDE  1D03               	btfss	3,2
  9981  0EDF  2EB3               	goto	l7632
  9982  0EE0                     l7638:	
  9983                           
  9984                           ;doprnt.c: 1339: if(c < prec)
  9985  0EE0  0840               	movf	sprintf@c^(0+256),w
  9986  0EE1  00A0               	movwf	??_sprintf^(0+256)
  9987  0EE2  01A1               	clrf	(??_sprintf^(0+256)+1)
  9988  0EE3  1BA0               	btfsc	??_sprintf^(0+256),7
  9989  0EE4  03A1               	decf	(??_sprintf^(0+256)+1),f
  9990  0EE5  0821               	movf	(??_sprintf+1)^(0+256),w
  9991  0EE6  3A80               	xorlw	128
  9992  0EE7  00A2               	movwf	(??_sprintf+2)^(0+256)
  9993  0EE8  083E               	movf	(sprintf@prec+1)^(0+256),w
  9994  0EE9  3A80               	xorlw	128
  9995  0EEA  0222               	subwf	(??_sprintf+2)^(0+256),w
  9996  0EEB  1D03               	skipz
  9997  0EEC  2EEF               	goto	u10485
  9998  0EED  083D               	movf	sprintf@prec^(0+256),w
  9999  0EEE  0220               	subwf	??_sprintf^(0+256),w
 10000  0EEF                     u10485:	
 10001  0EEF  1803               	skipnc
 10002  0EF0  2EF7               	goto	l7642
 10003                           
 10004                           ;doprnt.c: 1340: c = prec;
 10005  0EF1  0022               	movlb	2	; select bank2
 10006  0EF2  083D               	movf	sprintf@prec^(0+256),w
 10007  0EF3  00A0               	movwf	??_sprintf^(0+256)
 10008  0EF4  0820               	movf	??_sprintf^(0+256),w
 10009  0EF5  00C0               	movwf	sprintf@c^(0+256)
 10010  0EF6  2F0F               	goto	l911
 10011  0EF7                     l7642:	
 10012                           
 10013                           ;doprnt.c: 1341: else if(prec < c)
 10014  0EF7  0022               	movlb	2	; select bank2
 10015  0EF8  0840               	movf	sprintf@c^(0+256),w
 10016  0EF9  00A0               	movwf	??_sprintf^(0+256)
 10017  0EFA  01A1               	clrf	(??_sprintf^(0+256)+1)
 10018  0EFB  1BA0               	btfsc	??_sprintf^(0+256),7
 10019  0EFC  03A1               	decf	(??_sprintf^(0+256)+1),f
 10020  0EFD  083E               	movf	(sprintf@prec+1)^(0+256),w
 10021  0EFE  3A80               	xorlw	128
 10022  0EFF  00A2               	movwf	(??_sprintf+2)^(0+256)
 10023  0F00  0821               	movf	(??_sprintf+1)^(0+256),w
 10024  0F01  3A80               	xorlw	128
 10025  0F02  0222               	subwf	(??_sprintf+2)^(0+256),w
 10026  0F03  1D03               	skipz
 10027  0F04  2F07               	goto	u10495
 10028  0F05  0820               	movf	??_sprintf^(0+256),w
 10029  0F06  023D               	subwf	sprintf@prec^(0+256),w
 10030  0F07                     u10495:	
 10031  0F07  1803               	skipnc
 10032  0F08  2F0F               	goto	l911
 10033                           
 10034                           ;doprnt.c: 1342: prec = c;
 10035  0F09  0022               	movlb	2	; select bank2
 10036  0F0A  0840               	movf	sprintf@c^(0+256),w
 10037  0F0B  00BD               	movwf	sprintf@prec^(0+256)
 10038  0F0C  01BE               	clrf	(sprintf@prec+1)^(0+256)
 10039  0F0D  1BBD               	btfsc	sprintf@prec^(0+256),7
 10040  0F0E  03BE               	decf	(sprintf@prec+1)^(0+256),f
 10041  0F0F                     l911:	
 10042                           
 10043                           ;doprnt.c: 1345: if(width && flag & 0x03)
 10044  0F0F  0022               	movlb	2	; select bank2
 10045  0F10  0837               	movf	sprintf@width^(0+256),w
 10046  0F11  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10047  0F12  1903               	btfsc	3,2
 10048  0F13  2F22               	goto	l7650
 10049  0F14  3003               	movlw	3
 10050  0F15  0535               	andwf	sprintf@flag^(0+256),w
 10051  0F16  00A0               	movwf	??_sprintf^(0+256)
 10052  0F17  3000               	movlw	0
 10053  0F18  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10054  0F19  00A1               	movwf	(??_sprintf+1)^(0+256)
 10055  0F1A  0820               	movf	??_sprintf^(0+256),w
 10056  0F1B  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10057  0F1C  1903               	btfsc	3,2
 10058  0F1D  2F22               	goto	l7650
 10059                           
 10060                           ;doprnt.c: 1346: width--;
 10061  0F1E  30FF               	movlw	255
 10062  0F1F  07B7               	addwf	sprintf@width^(0+256),f
 10063  0F20  30FF               	movlw	255
 10064  0F21  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10065  0F22                     l7650:	
 10066                           
 10067                           ;doprnt.c: 1348: if(flag & 0x4000) {
 10068  0F22  1F36               	btfss	(sprintf@flag+1)^(0+256),6
 10069  0F23  2F39               	goto	l7658
 10070                           
 10071                           ;doprnt.c: 1349: if(width > prec)
 10072  0F24  083E               	movf	(sprintf@prec+1)^(0+256),w
 10073  0F25  3A80               	xorlw	128
 10074  0F26  00A0               	movwf	??_sprintf^(0+256)
 10075  0F27  0838               	movf	(sprintf@width+1)^(0+256),w
 10076  0F28  3A80               	xorlw	128
 10077  0F29  0220               	subwf	??_sprintf^(0+256),w
 10078  0F2A  1D03               	skipz
 10079  0F2B  2F2E               	goto	u10535
 10080  0F2C  0837               	movf	sprintf@width^(0+256),w
 10081  0F2D  023D               	subwf	sprintf@prec^(0+256),w
 10082  0F2E                     u10535:	
 10083  0F2E  1803               	skipnc
 10084  0F2F  2F36               	goto	l7656
 10085                           
 10086                           ;doprnt.c: 1350: width -= prec;
 10087  0F30  0022               	movlb	2	; select bank2
 10088  0F31  083D               	movf	sprintf@prec^(0+256),w
 10089  0F32  02B7               	subwf	sprintf@width^(0+256),f
 10090  0F33  083E               	movf	(sprintf@prec+1)^(0+256),w
 10091  0F34  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
 10092  0F35  2F39               	goto	l7658
 10093  0F36                     l7656:	
 10094                           
 10095                           ;doprnt.c: 1351: else
 10096                           ;doprnt.c: 1352: width = 0;
 10097  0F36  0022               	movlb	2	; select bank2
 10098  0F37  01B7               	clrf	sprintf@width^(0+256)
 10099  0F38  01B8               	clrf	(sprintf@width+1)^(0+256)
 10100  0F39                     l7658:	
 10101                           
 10102                           ;doprnt.c: 1353: }
 10103                           ;doprnt.c: 1381: if(width > c)
 10104  0F39  0840               	movf	sprintf@c^(0+256),w
 10105  0F3A  00A0               	movwf	??_sprintf^(0+256)
 10106  0F3B  01A1               	clrf	(??_sprintf^(0+256)+1)
 10107  0F3C  1BA0               	btfsc	??_sprintf^(0+256),7
 10108  0F3D  03A1               	decf	(??_sprintf^(0+256)+1),f
 10109  0F3E  0821               	movf	(??_sprintf+1)^(0+256),w
 10110  0F3F  3A80               	xorlw	128
 10111  0F40  00A2               	movwf	(??_sprintf+2)^(0+256)
 10112  0F41  0838               	movf	(sprintf@width+1)^(0+256),w
 10113  0F42  3A80               	xorlw	128
 10114  0F43  0222               	subwf	(??_sprintf+2)^(0+256),w
 10115  0F44  1D03               	skipz
 10116  0F45  2F48               	goto	u10545
 10117  0F46  0837               	movf	sprintf@width^(0+256),w
 10118  0F47  0220               	subwf	??_sprintf^(0+256),w
 10119  0F48                     u10545:	
 10120  0F48  1803               	skipnc
 10121  0F49  2F55               	goto	l7662
 10122                           
 10123                           ;doprnt.c: 1382: width -= c;
 10124  0F4A  0022               	movlb	2	; select bank2
 10125  0F4B  0840               	movf	sprintf@c^(0+256),w
 10126  0F4C  00A0               	movwf	??_sprintf^(0+256)
 10127  0F4D  01A1               	clrf	(??_sprintf^(0+256)+1)
 10128  0F4E  1BA0               	btfsc	??_sprintf^(0+256),7
 10129  0F4F  03A1               	decf	(??_sprintf^(0+256)+1),f
 10130  0F50  0820               	movf	??_sprintf^(0+256),w
 10131  0F51  02B7               	subwf	sprintf@width^(0+256),f
 10132  0F52  0821               	movf	(??_sprintf+1)^(0+256),w
 10133  0F53  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
 10134  0F54  2F58               	goto	l7664
 10135  0F55                     l7662:	
 10136                           
 10137                           ;doprnt.c: 1383: else
 10138                           ;doprnt.c: 1384: width = 0;
 10139  0F55  0022               	movlb	2	; select bank2
 10140  0F56  01B7               	clrf	sprintf@width^(0+256)
 10141  0F57  01B8               	clrf	(sprintf@width+1)^(0+256)
 10142  0F58                     l7664:	
 10143                           
 10144                           ;doprnt.c: 1387: if(flag & 0x04) {
 10145  0F58  1D35               	btfss	sprintf@flag^(0+256),2
 10146  0F59  2F85               	goto	l7680
 10147                           
 10148                           ;doprnt.c: 1392: if(flag & 0x03)
 10149  0F5A  3003               	movlw	3
 10150  0F5B  0535               	andwf	sprintf@flag^(0+256),w
 10151  0F5C  00A0               	movwf	??_sprintf^(0+256)
 10152  0F5D  3000               	movlw	0
 10153  0F5E  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10154  0F5F  00A1               	movwf	(??_sprintf+1)^(0+256)
 10155  0F60  0820               	movf	??_sprintf^(0+256),w
 10156  0F61  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10157  0F62  1903               	btfsc	3,2
 10158  0F63  2F70               	goto	l7672
 10159                           
 10160                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 10161  0F64  302D               	movlw	45
 10162  0F65  00A0               	movwf	??_sprintf^(0+256)
 10163  0F66  083F               	movf	sprintf@sp^(0+256),w
 10164  0F67  0086               	movwf	6
 10165  0F68  3002               	movlw	2	; select bank4/5
 10166  0F69  0087               	movwf	7
 10167  0F6A  0820               	movf	??_sprintf^(0+256),w
 10168  0F6B  0081               	movwf	1
 10169  0F6C  3001               	movlw	1
 10170  0F6D  00A0               	movwf	??_sprintf^(0+256)
 10171  0F6E  0820               	movf	??_sprintf^(0+256),w
 10172  0F6F  07BF               	addwf	sprintf@sp^(0+256),f
 10173  0F70                     l7672:	
 10174                           
 10175                           ;doprnt.c: 1415: if(width)
 10176  0F70  0837               	movf	sprintf@width^(0+256),w
 10177  0F71  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10178  0F72  1903               	btfsc	3,2
 10179  0F73  2FB3               	goto	l7700
 10180                           
 10181                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10182                           
 10183                           ;doprnt.c: 1416: do
 10184  0F74  3030               	movlw	48
 10185  0F75  00A0               	movwf	??_sprintf^(0+256)
 10186  0F76  083F               	movf	sprintf@sp^(0+256),w
 10187  0F77  0086               	movwf	6
 10188  0F78  3002               	movlw	2	; select bank4/5
 10189  0F79  0087               	movwf	7
 10190  0F7A  0820               	movf	??_sprintf^(0+256),w
 10191  0F7B  0081               	movwf	1
 10192  0F7C  3001               	movlw	1
 10193  0F7D  00A0               	movwf	??_sprintf^(0+256)
 10194  0F7E  0820               	movf	??_sprintf^(0+256),w
 10195  0F7F  07BF               	addwf	sprintf@sp^(0+256),f
 10196                           
 10197                           ;doprnt.c: 1418: while(--width);
 10198  0F80  30FF               	movlw	255
 10199  0F81  07B7               	addwf	sprintf@width^(0+256),f
 10200  0F82  30FF               	movlw	255
 10201  0F83  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10202  0F84  2F70               	goto	l7672
 10203  0F85                     l7680:	
 10204                           ;doprnt.c: 1420: } else
 10205                           
 10206                           
 10207                           ;doprnt.c: 1422: {
 10208                           ;doprnt.c: 1424: if(width
 10209                           ;doprnt.c: 1428: )
 10210  0F85  0837               	movf	sprintf@width^(0+256),w
 10211  0F86  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10212  0F87  1903               	btfsc	3,2
 10213  0F88  2F9D               	goto	l7688
 10214  0F89                     l7682:	
 10215                           ;doprnt.c: 1429: do
 10216                           
 10217                           
 10218                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10219  0F89  3020               	movlw	32
 10220  0F8A  00A0               	movwf	??_sprintf^(0+256)
 10221  0F8B  083F               	movf	sprintf@sp^(0+256),w
 10222  0F8C  0086               	movwf	6
 10223  0F8D  3002               	movlw	2	; select bank4/5
 10224  0F8E  0087               	movwf	7
 10225  0F8F  0820               	movf	??_sprintf^(0+256),w
 10226  0F90  0081               	movwf	1
 10227  0F91  3001               	movlw	1
 10228  0F92  00A0               	movwf	??_sprintf^(0+256)
 10229  0F93  0820               	movf	??_sprintf^(0+256),w
 10230  0F94  07BF               	addwf	sprintf@sp^(0+256),f
 10231                           
 10232                           ;doprnt.c: 1431: while(--width);
 10233  0F95  30FF               	movlw	255
 10234  0F96  07B7               	addwf	sprintf@width^(0+256),f
 10235  0F97  30FF               	movlw	255
 10236  0F98  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10237  0F99  0837               	movf	sprintf@width^(0+256),w
 10238  0F9A  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10239  0F9B  1D03               	btfss	3,2
 10240  0F9C  2F89               	goto	l7682
 10241  0F9D                     l7688:	
 10242                           
 10243                           ;doprnt.c: 1438: if(flag & 0x03)
 10244  0F9D  3003               	movlw	3
 10245  0F9E  0535               	andwf	sprintf@flag^(0+256),w
 10246  0F9F  00A0               	movwf	??_sprintf^(0+256)
 10247  0FA0  3000               	movlw	0
 10248  0FA1  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10249  0FA2  00A1               	movwf	(??_sprintf+1)^(0+256)
 10250  0FA3  0820               	movf	??_sprintf^(0+256),w
 10251  0FA4  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10252  0FA5  1903               	btfsc	3,2
 10253  0FA6  2FB3               	goto	l7700
 10254                           
 10255                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10256  0FA7  302D               	movlw	45
 10257  0FA8                     L8:	
 10258  0FA8  00A0               	movwf	??_sprintf^(0+256)
 10259  0FA9  083F               	movf	sprintf@sp^(0+256),w
 10260  0FAA  0086               	movwf	6
 10261  0FAB  3002               	movlw	2	; select bank4/5
 10262  0FAC  0087               	movwf	7
 10263  0FAD  0820               	movf	??_sprintf^(0+256),w
 10264  0FAE  0081               	movwf	1
 10265  0FAF  3001               	movlw	1
 10266  0FB0  00A0               	movwf	??_sprintf^(0+256)
 10267  0FB1  0820               	movf	??_sprintf^(0+256),w
 10268  0FB2  07BF               	addwf	sprintf@sp^(0+256),f
 10269  0FB3                     l7700:	
 10270  0FB3  30FF               	movlw	255
 10271  0FB4  07BD               	addwf	sprintf@prec^(0+256),f
 10272  0FB5  30FF               	movlw	255
 10273  0FB6  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
 10274  0FB7  0A3D               	incf	sprintf@prec^(0+256),w
 10275  0FB8  1903               	btfsc	3,2
 10276  0FB9  0A3E               	incf	(sprintf@prec+1)^(0+256),w
 10277  0FBA  1903               	btfsc	3,2
 10278  0FBB  28A5               	goto	l7702
 10279                           
 10280                           ;doprnt.c: 1478: {
 10281                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10282                           
 10283                           ;doprnt.c: 1469: }
 10284                           ;doprnt.c: 1474: while(prec--) {
 10285  0FBC  3000               	movlw	0
 10286  0FBD  0020               	movlb	0	; select bank0
 10287  0FBE  00A9               	movwf	___llmod@divisor+3
 10288  0FBF  3000               	movlw	0
 10289  0FC0  00A8               	movwf	___llmod@divisor+2
 10290  0FC1  3000               	movlw	0
 10291  0FC2  00A7               	movwf	___llmod@divisor+1
 10292  0FC3  300A               	movlw	10
 10293  0FC4  00A6               	movwf	___llmod@divisor
 10294  0FC5  0022               	movlb	2	; select bank2
 10295  0FC6  083E               	movf	(sprintf@prec+1)^(0+256),w
 10296  0FC7  0085               	movwf	5
 10297  0FC8  083D               	movf	sprintf@prec^(0+256),w
 10298  0FC9  0084               	movwf	4
 10299  0FCA  3584               	lslf	4,f
 10300  0FCB  0D85               	rlf	5,f
 10301  0FCC  3584               	lslf	4,f
 10302  0FCD  0D85               	rlf	5,f
 10303  0FCE  309A               	movlw	low (_dpowers| (0+32768))
 10304  0FCF  0784               	addwf	4,f
 10305  0FD0  30B0               	movlw	high (_dpowers| (0+32768))
 10306  0FD1  3D85               	addwfc	5,f
 10307  0FD2  3F00               	moviw [0]fsr0
 10308  0FD3  00F2               	movwf	___lldiv@divisor
 10309  0FD4  3F01               	moviw [1]fsr0
 10310  0FD5  00F3               	movwf	___lldiv@divisor+1
 10311  0FD6  3F02               	moviw [2]fsr0
 10312  0FD7  00F4               	movwf	___lldiv@divisor+2
 10313  0FD8  3F03               	moviw [3]fsr0
 10314  0FD9  00F5               	movwf	___lldiv@divisor+3
 10315  0FDA  0832               	movf	(sprintf@val+3)^(0+256),w
 10316  0FDB  00F9               	movwf	___lldiv@dividend+3
 10317  0FDC  0831               	movf	(sprintf@val+2)^(0+256),w
 10318  0FDD  00F8               	movwf	___lldiv@dividend+2
 10319  0FDE  0830               	movf	(sprintf@val+1)^(0+256),w
 10320  0FDF  00F7               	movwf	___lldiv@dividend+1
 10321  0FE0  082F               	movf	sprintf@val^(0+256),w
 10322  0FE1  00F6               	movwf	___lldiv@dividend
 10323  0FE2  31AF  2704  3188   	fcall	___lldiv
 10324  0FE5  0875               	movf	?___lldiv+3,w
 10325  0FE6  0020               	movlb	0	; select bank0
 10326  0FE7  00AD               	movwf	___llmod@dividend+3
 10327  0FE8  0874               	movf	?___lldiv+2,w
 10328  0FE9  00AC               	movwf	___llmod@dividend+2
 10329  0FEA  0873               	movf	?___lldiv+1,w
 10330  0FEB  00AB               	movwf	___llmod@dividend+1
 10331  0FEC  0872               	movf	?___lldiv,w
 10332  0FED  00AA               	movwf	___llmod@dividend
 10333  0FEE  31AD  2539  3188   	fcall	___llmod
 10334  0FF1  0020               	movlb	0	; select bank0
 10335  0FF2  0826               	movf	?___llmod,w
 10336  0FF3  3E30               	addlw	48
 10337  0FF4  0022               	movlb	2	; select bank2
 10338  0FF5  00A0               	movwf	??_sprintf^(0+256)
 10339  0FF6  0820               	movf	??_sprintf^(0+256),w
 10340  0FF7  00C0               	movwf	sprintf@c^(0+256)
 10341                           
 10342                           ;doprnt.c: 1523: }
 10343                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10344  0FF8  0840               	movf	sprintf@c^(0+256),w
 10345  0FF9  2FA8               	goto	L8
 10346  0FFA                     l7704:	
 10347                           ;doprnt.c: 1525: }
 10348                           ;doprnt.c: 1533: }
 10349                           ;doprnt.c: 1535: alldone:
 10350                           
 10351                           
 10352                           ;doprnt.c: 1538: *sp = 0;
 10353  0FFA  083F               	movf	sprintf@sp^(0+256),w
 10354  0FFB  0086               	movwf	6
 10355  0FFC  3002               	movlw	2	; select bank4/5
 10356  0FFD  0087               	movwf	7
 10357  0FFE  0181               	clrf	1
 10358  0FFF  0008               	return
 10359  1000                     __end_of_sprintf:	
 10360                           ;doprnt.c: 1540: return 0;
 10361                           ;	Return value of _sprintf is never used
 10362                           
 10363                           
 10364                           	psect	text8
 10365  00A8                     __ptext8:	
 10366 ;; *************** function _scale *****************
 10367 ;; Defined at:
 10368 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10369 ;; Parameters:    Size  Location     Type
 10370 ;;  scl             1    wreg     char 
 10371 ;; Auto vars:     Size  Location     Type
 10372 ;;  scl             1   20[BANK1 ] char 
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  4   76[BANK0 ] char 
 10375 ;; Registers used:
 10376 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10382 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10383 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10384 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10385 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10386 ;;Total ram usage:       25 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:    4
 10389 ;; This function calls:
 10390 ;;		___awdiv
 10391 ;;		___awmod
 10392 ;;		___flmul
 10393 ;; This function is called by:
 10394 ;;		_sprintf
 10395 ;; This function uses a non-reentrant model
 10396 ;;
 10397                           
 10398                           
 10399                           ;psect for function _scale
 10400  00A8                     _scale:	
 10401                           
 10402                           ;incstack = 0
 10403                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10404                           ;scale@scl stored from wreg
 10405  00A8  0021               	movlb	1	; select bank1
 10406  00A9  00B4               	movwf	scale@scl^(0+128)
 10407                           
 10408                           ;doprnt.c: 428: if(scl < 0) {
 10409  00AA  1FB4               	btfss	scale@scl^(0+128),7
 10410  00AB  2A3D               	goto	l7072
 10411                           
 10412                           ;doprnt.c: 429: scl = -scl;
 10413  00AC  09B4               	comf	scale@scl^(0+128),f
 10414  00AD  0AB4               	incf	scale@scl^(0+128),f
 10415                           
 10416                           ;doprnt.c: 430: if(scl>=110)
 10417  00AE  0834               	movf	scale@scl^(0+128),w
 10418  00AF  3A80               	xorlw	128
 10419  00B0  3E12               	addlw	-238
 10420  00B1  1C03               	skipc
 10421  00B2  2998               	goto	l7062
 10422                           
 10423                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10424  00B3  300A               	movlw	10
 10425  00B4  0020               	movlb	0	; select bank0
 10426  00B5  00A0               	movwf	___awdiv@divisor
 10427  00B6  3000               	movlw	0
 10428  00B7  00A1               	movwf	___awdiv@divisor+1
 10429  00B8  0021               	movlb	1	; select bank1
 10430  00B9  0834               	movf	scale@scl^(0+128),w
 10431  00BA  00F4               	movwf	___awmod@dividend
 10432  00BB  01F5               	clrf	___awmod@dividend+1
 10433  00BC  1BF4               	btfsc	___awmod@dividend,7
 10434  00BD  03F5               	decf	___awmod@dividend+1,f
 10435  00BE  3064               	movlw	100
 10436  00BF  00F2               	movwf	___awmod@divisor
 10437  00C0  3000               	movlw	0
 10438  00C1  00F3               	movwf	___awmod@divisor+1
 10439  00C2  31AD  257C  3180   	fcall	___awmod
 10440  00C5  0873               	movf	?___awmod+1,w
 10441  00C6  0020               	movlb	0	; select bank0
 10442  00C7  00A3               	movwf	___awdiv@dividend+1
 10443  00C8  0872               	movf	?___awmod,w
 10444  00C9  00A2               	movwf	___awdiv@dividend
 10445  00CA  31AE  26B2  3180   	fcall	___awdiv
 10446  00CD  0020               	movlb	0	; select bank0
 10447  00CE  0820               	movf	?___awdiv,w
 10448  00CF  0021               	movlb	1	; select bank1
 10449  00D0  00A0               	movwf	??_scale^(0+128)
 10450  00D1  0020               	movlb	0	; select bank0
 10451  00D2  0821               	movf	?___awdiv+1,w
 10452  00D3  0021               	movlb	1	; select bank1
 10453  00D4  00A1               	movwf	(??_scale^(0+128)+1)
 10454  00D5  35A0               	lslf	??_scale^(0+128),f
 10455  00D6  0DA1               	rlf	(??_scale^(0+128)+1),f
 10456  00D7  35A0               	lslf	??_scale^(0+128),f
 10457  00D8  0DA1               	rlf	(??_scale^(0+128)+1),f
 10458  00D9  0820               	movf	??_scale^(0+128),w
 10459  00DA  3E24               	addlw	36
 10460  00DB  00A2               	movwf	(??_scale+2)^(0+128)
 10461  00DC  3000               	movlw	0
 10462  00DD  3D21               	addwfc	(??_scale+1)^(0+128),w
 10463  00DE  00A3               	movwf	(??_scale+3)^(0+128)
 10464  00DF  3034               	movlw	low (__npowers_| (0+32768))
 10465  00E0  0722               	addwf	(??_scale+2)^(0+128),w
 10466  00E1  0084               	movwf	4
 10467  00E2  30B0               	movlw	high (__npowers_| (0+32768))
 10468  00E3  3D23               	addwfc	(??_scale+3)^(0+128),w
 10469  00E4  0085               	movwf	5
 10470  00E5  3F00               	moviw [0]fsr0
 10471  00E6  00A4               	movwf	(??_scale+4)^(0+128)
 10472  00E7  3F01               	moviw [1]fsr0
 10473  00E8  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10474  00E9  3F02               	moviw [2]fsr0
 10475  00EA  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10476  00EB  3F03               	moviw [3]fsr0
 10477  00EC  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10478  00ED  0827               	movf	(??_scale+7)^(0+128),w
 10479  00EE  0020               	movlb	0	; select bank0
 10480  00EF  00D5               	movwf	___flmul@b+3
 10481  00F0  0021               	movlb	1	; select bank1
 10482  00F1  0826               	movf	(??_scale+6)^(0+128),w
 10483  00F2  0020               	movlb	0	; select bank0
 10484  00F3  00D4               	movwf	___flmul@b+2
 10485  00F4  0021               	movlb	1	; select bank1
 10486  00F5  0825               	movf	(??_scale+5)^(0+128),w
 10487  00F6  0020               	movlb	0	; select bank0
 10488  00F7  00D3               	movwf	___flmul@b+1
 10489  00F8  0021               	movlb	1	; select bank1
 10490  00F9  0824               	movf	(??_scale+4)^(0+128),w
 10491  00FA  0020               	movlb	0	; select bank0
 10492  00FB  00D2               	movwf	___flmul@b
 10493  00FC  3064               	movlw	100
 10494  00FD  00A0               	movwf	___awdiv@divisor
 10495  00FE  3000               	movlw	0
 10496  00FF  00A1               	movwf	___awdiv@divisor+1
 10497  0100  0021               	movlb	1	; select bank1
 10498  0101  0834               	movf	scale@scl^(0+128),w
 10499  0102  0020               	movlb	0	; select bank0
 10500  0103  00A2               	movwf	___awdiv@dividend
 10501  0104  01A3               	clrf	___awdiv@dividend+1
 10502  0105  1BA2               	btfsc	___awdiv@dividend,7
 10503  0106  03A3               	decf	___awdiv@dividend+1,f
 10504  0107  31AE  26B2  3180   	fcall	___awdiv
 10505  010A  0020               	movlb	0	; select bank0
 10506  010B  0820               	movf	?___awdiv,w
 10507  010C  0021               	movlb	1	; select bank1
 10508  010D  00A8               	movwf	(??_scale+8)^(0+128)
 10509  010E  0020               	movlb	0	; select bank0
 10510  010F  0821               	movf	?___awdiv+1,w
 10511  0110  0021               	movlb	1	; select bank1
 10512  0111  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10513  0112  35A8               	lslf	(??_scale+8)^(0+128),f
 10514  0113  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10515  0114  35A8               	lslf	(??_scale+8)^(0+128),f
 10516  0115  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10517  0116  0828               	movf	(??_scale+8)^(0+128),w
 10518  0117  3E48               	addlw	72
 10519  0118  00AA               	movwf	(??_scale+10)^(0+128)
 10520  0119  3000               	movlw	0
 10521  011A  3D29               	addwfc	(??_scale+9)^(0+128),w
 10522  011B  00AB               	movwf	(??_scale+11)^(0+128)
 10523  011C  3034               	movlw	low (__npowers_| (0+32768))
 10524  011D  072A               	addwf	(??_scale+10)^(0+128),w
 10525  011E  0084               	movwf	4
 10526  011F  30B0               	movlw	high (__npowers_| (0+32768))
 10527  0120  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10528  0121  0085               	movwf	5
 10529  0122  3F00               	moviw [0]fsr0
 10530  0123  00AC               	movwf	(??_scale+12)^(0+128)
 10531  0124  3F01               	moviw [1]fsr0
 10532  0125  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10533  0126  3F02               	moviw [2]fsr0
 10534  0127  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10535  0128  3F03               	moviw [3]fsr0
 10536  0129  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10537  012A  082F               	movf	(??_scale+15)^(0+128),w
 10538  012B  0020               	movlb	0	; select bank0
 10539  012C  00D9               	movwf	___flmul@a+3
 10540  012D  0021               	movlb	1	; select bank1
 10541  012E  082E               	movf	(??_scale+14)^(0+128),w
 10542  012F  0020               	movlb	0	; select bank0
 10543  0130  00D8               	movwf	___flmul@a+2
 10544  0131  0021               	movlb	1	; select bank1
 10545  0132  082D               	movf	(??_scale+13)^(0+128),w
 10546  0133  0020               	movlb	0	; select bank0
 10547  0134  00D7               	movwf	___flmul@a+1
 10548  0135  0021               	movlb	1	; select bank1
 10549  0136  082C               	movf	(??_scale+12)^(0+128),w
 10550  0137  0020               	movlb	0	; select bank0
 10551  0138  00D6               	movwf	___flmul@a
 10552  0139  3183  23CD  3180   	fcall	___flmul
 10553  013C  0020               	movlb	0	; select bank0
 10554  013D  0855               	movf	?___flmul+3,w
 10555  013E  0021               	movlb	1	; select bank1
 10556  013F  00B3               	movwf	(_scale$2179+3)^(0+128)
 10557  0140  0020               	movlb	0	; select bank0
 10558  0141  0854               	movf	?___flmul+2,w
 10559  0142  0021               	movlb	1	; select bank1
 10560  0143  00B2               	movwf	(_scale$2179+2)^(0+128)
 10561  0144  0020               	movlb	0	; select bank0
 10562  0145  0853               	movf	?___flmul+1,w
 10563  0146  0021               	movlb	1	; select bank1
 10564  0147  00B1               	movwf	(_scale$2179+1)^(0+128)
 10565  0148  0020               	movlb	0	; select bank0
 10566  0149  0852               	movf	?___flmul,w
 10567  014A  0021               	movlb	1	; select bank1
 10568  014B  00B0               	movwf	_scale$2179^(0+128)
 10569                           
 10570                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10571  014C  300A               	movlw	10
 10572  014D  00F2               	movwf	___awmod@divisor
 10573  014E  3000               	movlw	0
 10574  014F  00F3               	movwf	___awmod@divisor+1
 10575  0150  0834               	movf	scale@scl^(0+128),w
 10576  0151  00F4               	movwf	___awmod@dividend
 10577  0152  01F5               	clrf	___awmod@dividend+1
 10578  0153  1BF4               	btfsc	___awmod@dividend,7
 10579  0154  03F5               	decf	___awmod@dividend+1,f
 10580  0155  31AD  257C  3180   	fcall	___awmod
 10581  0158  0873               	movf	?___awmod+1,w
 10582  0159  0085               	movwf	5
 10583  015A  0872               	movf	?___awmod,w
 10584  015B  0084               	movwf	4
 10585  015C  3584               	lslf	4,f
 10586  015D  0D85               	rlf	5,f
 10587  015E  3584               	lslf	4,f
 10588  015F  0D85               	rlf	5,f
 10589  0160  3034               	movlw	low (__npowers_| (0+32768))
 10590  0161  0784               	addwf	4,f
 10591  0162  30B0               	movlw	high (__npowers_| (0+32768))
 10592  0163  3D85               	addwfc	5,f
 10593  0164  3F00               	moviw [0]fsr0
 10594  0165  0021               	movlb	1	; select bank1
 10595  0166  00A0               	movwf	??_scale^(0+128)
 10596  0167  3F01               	moviw [1]fsr0
 10597  0168  00A1               	movwf	(??_scale^(0+128)+1)
 10598  0169  3F02               	moviw [2]fsr0
 10599  016A  00A2               	movwf	(??_scale^(0+128)+2)
 10600  016B  3F03               	moviw [3]fsr0
 10601  016C  00A3               	movwf	(??_scale^(0+128)+3)
 10602  016D  0823               	movf	(??_scale+3)^(0+128),w
 10603  016E  0020               	movlb	0	; select bank0
 10604  016F  00D5               	movwf	___flmul@b+3
 10605  0170  0021               	movlb	1	; select bank1
 10606  0171  0822               	movf	(??_scale+2)^(0+128),w
 10607  0172  0020               	movlb	0	; select bank0
 10608  0173  00D4               	movwf	___flmul@b+2
 10609  0174  0021               	movlb	1	; select bank1
 10610  0175  0821               	movf	(??_scale+1)^(0+128),w
 10611  0176  0020               	movlb	0	; select bank0
 10612  0177  00D3               	movwf	___flmul@b+1
 10613  0178  0021               	movlb	1	; select bank1
 10614  0179  0820               	movf	??_scale^(0+128),w
 10615  017A  0020               	movlb	0	; select bank0
 10616  017B  00D2               	movwf	___flmul@b
 10617  017C  0021               	movlb	1	; select bank1
 10618  017D  0833               	movf	(_scale$2179+3)^(0+128),w
 10619  017E  0020               	movlb	0	; select bank0
 10620  017F  00D9               	movwf	___flmul@a+3
 10621  0180  0021               	movlb	1	; select bank1
 10622  0181  0832               	movf	(_scale$2179+2)^(0+128),w
 10623  0182  0020               	movlb	0	; select bank0
 10624  0183  00D8               	movwf	___flmul@a+2
 10625  0184  0021               	movlb	1	; select bank1
 10626  0185  0831               	movf	(_scale$2179+1)^(0+128),w
 10627  0186  0020               	movlb	0	; select bank0
 10628  0187  00D7               	movwf	___flmul@a+1
 10629  0188  0021               	movlb	1	; select bank1
 10630  0189  0830               	movf	_scale$2179^(0+128),w
 10631  018A  0020               	movlb	0	; select bank0
 10632  018B  00D6               	movwf	___flmul@a
 10633  018C  3183  23CD         	fcall	___flmul
 10634  018E  0020               	movlb	0	; select bank0
 10635  018F  0855               	movf	?___flmul+3,w
 10636  0190  00EF               	movwf	?_scale+3
 10637  0191  0854               	movf	?___flmul+2,w
 10638  0192  00EE               	movwf	?_scale+2
 10639  0193  0853               	movf	?___flmul+1,w
 10640  0194  00ED               	movwf	?_scale+1
 10641  0195  0852               	movf	?___flmul,w
 10642  0196  00EC               	movwf	?_scale
 10643  0197  0008               	return
 10644  0198                     l7062:	
 10645                           
 10646                           ;doprnt.c: 432: else if(scl > 10)
 10647  0198  0021               	movlb	1	; select bank1
 10648  0199  0834               	movf	scale@scl^(0+128),w
 10649  019A  3A80               	xorlw	128
 10650  019B  3E75               	addlw	-139
 10651  019C  1C03               	skipc
 10652  019D  2A17               	goto	l7068
 10653                           
 10654                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10655  019E  300A               	movlw	10
 10656  019F  00F2               	movwf	___awmod@divisor
 10657  01A0  3000               	movlw	0
 10658  01A1  00F3               	movwf	___awmod@divisor+1
 10659  01A2  0834               	movf	scale@scl^(0+128),w
 10660  01A3  00F4               	movwf	___awmod@dividend
 10661  01A4  01F5               	clrf	___awmod@dividend+1
 10662  01A5  1BF4               	btfsc	___awmod@dividend,7
 10663  01A6  03F5               	decf	___awmod@dividend+1,f
 10664  01A7  31AD  257C  3180   	fcall	___awmod
 10665  01AA  0873               	movf	?___awmod+1,w
 10666  01AB  0085               	movwf	5
 10667  01AC  0872               	movf	?___awmod,w
 10668  01AD  0084               	movwf	4
 10669  01AE  3584               	lslf	4,f
 10670  01AF  0D85               	rlf	5,f
 10671  01B0  3584               	lslf	4,f
 10672  01B1  0D85               	rlf	5,f
 10673  01B2  3034               	movlw	low (__npowers_| (0+32768))
 10674  01B3  0784               	addwf	4,f
 10675  01B4  30B0               	movlw	high (__npowers_| (0+32768))
 10676  01B5  3D85               	addwfc	5,f
 10677  01B6  3F00               	moviw [0]fsr0
 10678  01B7  0021               	movlb	1	; select bank1
 10679  01B8  00A0               	movwf	??_scale^(0+128)
 10680  01B9  3F01               	moviw [1]fsr0
 10681  01BA  00A1               	movwf	(??_scale^(0+128)+1)
 10682  01BB  3F02               	moviw [2]fsr0
 10683  01BC  00A2               	movwf	(??_scale^(0+128)+2)
 10684  01BD  3F03               	moviw [3]fsr0
 10685  01BE  00A3               	movwf	(??_scale^(0+128)+3)
 10686  01BF  0823               	movf	(??_scale+3)^(0+128),w
 10687  01C0  0020               	movlb	0	; select bank0
 10688  01C1  00D5               	movwf	___flmul@b+3
 10689  01C2  0021               	movlb	1	; select bank1
 10690  01C3  0822               	movf	(??_scale+2)^(0+128),w
 10691  01C4  0020               	movlb	0	; select bank0
 10692  01C5  00D4               	movwf	___flmul@b+2
 10693  01C6  0021               	movlb	1	; select bank1
 10694  01C7  0821               	movf	(??_scale+1)^(0+128),w
 10695  01C8  0020               	movlb	0	; select bank0
 10696  01C9  00D3               	movwf	___flmul@b+1
 10697  01CA  0021               	movlb	1	; select bank1
 10698  01CB  0820               	movf	??_scale^(0+128),w
 10699  01CC  0020               	movlb	0	; select bank0
 10700  01CD  00D2               	movwf	___flmul@b
 10701  01CE  300A               	movlw	10
 10702  01CF  00A0               	movwf	___awdiv@divisor
 10703  01D0  3000               	movlw	0
 10704  01D1  00A1               	movwf	___awdiv@divisor+1
 10705  01D2  0021               	movlb	1	; select bank1
 10706  01D3  0834               	movf	scale@scl^(0+128),w
 10707  01D4  0020               	movlb	0	; select bank0
 10708  01D5  00A2               	movwf	___awdiv@dividend
 10709  01D6  01A3               	clrf	___awdiv@dividend+1
 10710  01D7  1BA2               	btfsc	___awdiv@dividend,7
 10711  01D8  03A3               	decf	___awdiv@dividend+1,f
 10712  01D9  31AE  26B2  3180   	fcall	___awdiv
 10713  01DC  0020               	movlb	0	; select bank0
 10714  01DD  0820               	movf	?___awdiv,w
 10715  01DE  0021               	movlb	1	; select bank1
 10716  01DF  00A4               	movwf	(??_scale+4)^(0+128)
 10717  01E0  0020               	movlb	0	; select bank0
 10718  01E1  0821               	movf	?___awdiv+1,w
 10719  01E2  0021               	movlb	1	; select bank1
 10720  01E3  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10721  01E4  35A4               	lslf	(??_scale+4)^(0+128),f
 10722  01E5  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10723  01E6  35A4               	lslf	(??_scale+4)^(0+128),f
 10724  01E7  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10725  01E8  0824               	movf	(??_scale+4)^(0+128),w
 10726  01E9  3E24               	addlw	36
 10727  01EA  00A6               	movwf	(??_scale+6)^(0+128)
 10728  01EB  3000               	movlw	0
 10729  01EC  3D25               	addwfc	(??_scale+5)^(0+128),w
 10730  01ED  00A7               	movwf	(??_scale+7)^(0+128)
 10731  01EE  3034               	movlw	low (__npowers_| (0+32768))
 10732  01EF  0726               	addwf	(??_scale+6)^(0+128),w
 10733  01F0  0084               	movwf	4
 10734  01F1  30B0               	movlw	high (__npowers_| (0+32768))
 10735  01F2  3D27               	addwfc	(??_scale+7)^(0+128),w
 10736  01F3  0085               	movwf	5
 10737  01F4  3F00               	moviw [0]fsr0
 10738  01F5  00A8               	movwf	(??_scale+8)^(0+128)
 10739  01F6  3F01               	moviw [1]fsr0
 10740  01F7  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10741  01F8  3F02               	moviw [2]fsr0
 10742  01F9  00AA               	movwf	((??_scale+8)^(0+128)+2)
 10743  01FA  3F03               	moviw [3]fsr0
 10744  01FB  00AB               	movwf	((??_scale+8)^(0+128)+3)
 10745  01FC  082B               	movf	(??_scale+11)^(0+128),w
 10746  01FD  0020               	movlb	0	; select bank0
 10747  01FE  00D9               	movwf	___flmul@a+3
 10748  01FF  0021               	movlb	1	; select bank1
 10749  0200  082A               	movf	(??_scale+10)^(0+128),w
 10750  0201  0020               	movlb	0	; select bank0
 10751  0202  00D8               	movwf	___flmul@a+2
 10752  0203  0021               	movlb	1	; select bank1
 10753  0204  0829               	movf	(??_scale+9)^(0+128),w
 10754  0205  0020               	movlb	0	; select bank0
 10755  0206  00D7               	movwf	___flmul@a+1
 10756  0207  0021               	movlb	1	; select bank1
 10757  0208  0828               	movf	(??_scale+8)^(0+128),w
 10758  0209  0020               	movlb	0	; select bank0
 10759  020A  00D6               	movwf	___flmul@a
 10760  020B  3183  23CD         	fcall	___flmul
 10761  020D  0020               	movlb	0	; select bank0
 10762  020E  0855               	movf	?___flmul+3,w
 10763  020F  00EF               	movwf	?_scale+3
 10764  0210  0854               	movf	?___flmul+2,w
 10765  0211  00EE               	movwf	?_scale+2
 10766  0212  0853               	movf	?___flmul+1,w
 10767  0213  00ED               	movwf	?_scale+1
 10768  0214  0852               	movf	?___flmul,w
 10769  0215  00EC               	movwf	?_scale
 10770  0216  0008               	return
 10771  0217                     l7068:	
 10772                           
 10773                           ;doprnt.c: 434: return _npowers_[scl];
 10774  0217  0021               	movlb	1	; select bank1
 10775  0218  0834               	movf	scale@scl^(0+128),w
 10776  0219  00A0               	movwf	??_scale^(0+128)
 10777  021A  01A1               	clrf	(??_scale^(0+128)+1)
 10778  021B  35A0               	lslf	??_scale^(0+128),f
 10779  021C  0DA1               	rlf	(??_scale^(0+128)+1),f
 10780  021D  35A0               	lslf	??_scale^(0+128),f
 10781  021E  0DA1               	rlf	(??_scale^(0+128)+1),f
 10782  021F  3034               	movlw	low (__npowers_| (0+32768))
 10783  0220  0720               	addwf	??_scale^(0+128),w
 10784  0221  0084               	movwf	4
 10785  0222  30B0               	movlw	high (__npowers_| (0+32768))
 10786  0223  3D21               	addwfc	(??_scale+1)^(0+128),w
 10787  0224  0085               	movwf	5
 10788  0225  3F00               	moviw [0]fsr0
 10789  0226  00A2               	movwf	(??_scale+2)^(0+128)
 10790  0227  3F01               	moviw [1]fsr0
 10791  0228  00A3               	movwf	((??_scale+2)^(0+128)+1)
 10792  0229  3F02               	moviw [2]fsr0
 10793  022A  00A4               	movwf	((??_scale+2)^(0+128)+2)
 10794  022B  3F03               	moviw [3]fsr0
 10795  022C  00A5               	movwf	((??_scale+2)^(0+128)+3)
 10796  022D  0825               	movf	(??_scale+5)^(0+128),w
 10797  022E  0020               	movlb	0	; select bank0
 10798  022F  00EF               	movwf	?_scale+3
 10799  0230  0021               	movlb	1	; select bank1
 10800  0231  0824               	movf	(??_scale+4)^(0+128),w
 10801  0232  0020               	movlb	0	; select bank0
 10802  0233  00EE               	movwf	?_scale+2
 10803  0234  0021               	movlb	1	; select bank1
 10804  0235  0823               	movf	(??_scale+3)^(0+128),w
 10805  0236  0020               	movlb	0	; select bank0
 10806  0237  00ED               	movwf	?_scale+1
 10807  0238  0021               	movlb	1	; select bank1
 10808  0239  0822               	movf	(??_scale+2)^(0+128),w
 10809  023A  0020               	movlb	0	; select bank0
 10810  023B  00EC               	movwf	?_scale
 10811  023C  0008               	return
 10812  023D                     l7072:	
 10813                           
 10814                           ;doprnt.c: 435: }
 10815                           ;doprnt.c: 436: if(scl>=110)
 10816  023D  0021               	movlb	1	; select bank1
 10817  023E  0834               	movf	scale@scl^(0+128),w
 10818  023F  3A80               	xorlw	128
 10819  0240  3E12               	addlw	-238
 10820  0241  1C03               	skipc
 10821  0242  2B28               	goto	l7080
 10822                           
 10823                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10824  0243  300A               	movlw	10
 10825  0244  0020               	movlb	0	; select bank0
 10826  0245  00A0               	movwf	___awdiv@divisor
 10827  0246  3000               	movlw	0
 10828  0247  00A1               	movwf	___awdiv@divisor+1
 10829  0248  0021               	movlb	1	; select bank1
 10830  0249  0834               	movf	scale@scl^(0+128),w
 10831  024A  00F4               	movwf	___awmod@dividend
 10832  024B  01F5               	clrf	___awmod@dividend+1
 10833  024C  1BF4               	btfsc	___awmod@dividend,7
 10834  024D  03F5               	decf	___awmod@dividend+1,f
 10835  024E  3064               	movlw	100
 10836  024F  00F2               	movwf	___awmod@divisor
 10837  0250  3000               	movlw	0
 10838  0251  00F3               	movwf	___awmod@divisor+1
 10839  0252  31AD  257C  3180   	fcall	___awmod
 10840  0255  0873               	movf	?___awmod+1,w
 10841  0256  0020               	movlb	0	; select bank0
 10842  0257  00A3               	movwf	___awdiv@dividend+1
 10843  0258  0872               	movf	?___awmod,w
 10844  0259  00A2               	movwf	___awdiv@dividend
 10845  025A  31AE  26B2  3180   	fcall	___awdiv
 10846  025D  0020               	movlb	0	; select bank0
 10847  025E  0820               	movf	?___awdiv,w
 10848  025F  0021               	movlb	1	; select bank1
 10849  0260  00A0               	movwf	??_scale^(0+128)
 10850  0261  0020               	movlb	0	; select bank0
 10851  0262  0821               	movf	?___awdiv+1,w
 10852  0263  0021               	movlb	1	; select bank1
 10853  0264  00A1               	movwf	(??_scale^(0+128)+1)
 10854  0265  35A0               	lslf	??_scale^(0+128),f
 10855  0266  0DA1               	rlf	(??_scale^(0+128)+1),f
 10856  0267  35A0               	lslf	??_scale^(0+128),f
 10857  0268  0DA1               	rlf	(??_scale^(0+128)+1),f
 10858  0269  0820               	movf	??_scale^(0+128),w
 10859  026A  3E24               	addlw	36
 10860  026B  00A2               	movwf	(??_scale+2)^(0+128)
 10861  026C  3000               	movlw	0
 10862  026D  3D21               	addwfc	(??_scale+1)^(0+128),w
 10863  026E  00A3               	movwf	(??_scale+3)^(0+128)
 10864  026F  3000               	movlw	low (__powers_| (0+32768))
 10865  0270  0722               	addwf	(??_scale+2)^(0+128),w
 10866  0271  0084               	movwf	4
 10867  0272  30B0               	movlw	high (__powers_| (0+32768))
 10868  0273  3D23               	addwfc	(??_scale+3)^(0+128),w
 10869  0274  0085               	movwf	5
 10870  0275  3F00               	moviw [0]fsr0
 10871  0276  00A4               	movwf	(??_scale+4)^(0+128)
 10872  0277  3F01               	moviw [1]fsr0
 10873  0278  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10874  0279  3F02               	moviw [2]fsr0
 10875  027A  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10876  027B  3F03               	moviw [3]fsr0
 10877  027C  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10878  027D  0827               	movf	(??_scale+7)^(0+128),w
 10879  027E  0020               	movlb	0	; select bank0
 10880  027F  00D5               	movwf	___flmul@b+3
 10881  0280  0021               	movlb	1	; select bank1
 10882  0281  0826               	movf	(??_scale+6)^(0+128),w
 10883  0282  0020               	movlb	0	; select bank0
 10884  0283  00D4               	movwf	___flmul@b+2
 10885  0284  0021               	movlb	1	; select bank1
 10886  0285  0825               	movf	(??_scale+5)^(0+128),w
 10887  0286  0020               	movlb	0	; select bank0
 10888  0287  00D3               	movwf	___flmul@b+1
 10889  0288  0021               	movlb	1	; select bank1
 10890  0289  0824               	movf	(??_scale+4)^(0+128),w
 10891  028A  0020               	movlb	0	; select bank0
 10892  028B  00D2               	movwf	___flmul@b
 10893  028C  3064               	movlw	100
 10894  028D  00A0               	movwf	___awdiv@divisor
 10895  028E  3000               	movlw	0
 10896  028F  00A1               	movwf	___awdiv@divisor+1
 10897  0290  0021               	movlb	1	; select bank1
 10898  0291  0834               	movf	scale@scl^(0+128),w
 10899  0292  0020               	movlb	0	; select bank0
 10900  0293  00A2               	movwf	___awdiv@dividend
 10901  0294  01A3               	clrf	___awdiv@dividend+1
 10902  0295  1BA2               	btfsc	___awdiv@dividend,7
 10903  0296  03A3               	decf	___awdiv@dividend+1,f
 10904  0297  31AE  26B2  3180   	fcall	___awdiv
 10905  029A  0020               	movlb	0	; select bank0
 10906  029B  0820               	movf	?___awdiv,w
 10907  029C  0021               	movlb	1	; select bank1
 10908  029D  00A8               	movwf	(??_scale+8)^(0+128)
 10909  029E  0020               	movlb	0	; select bank0
 10910  029F  0821               	movf	?___awdiv+1,w
 10911  02A0  0021               	movlb	1	; select bank1
 10912  02A1  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10913  02A2  35A8               	lslf	(??_scale+8)^(0+128),f
 10914  02A3  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10915  02A4  35A8               	lslf	(??_scale+8)^(0+128),f
 10916  02A5  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10917  02A6  0828               	movf	(??_scale+8)^(0+128),w
 10918  02A7  3E48               	addlw	72
 10919  02A8  00AA               	movwf	(??_scale+10)^(0+128)
 10920  02A9  3000               	movlw	0
 10921  02AA  3D29               	addwfc	(??_scale+9)^(0+128),w
 10922  02AB  00AB               	movwf	(??_scale+11)^(0+128)
 10923  02AC  3000               	movlw	low (__powers_| (0+32768))
 10924  02AD  072A               	addwf	(??_scale+10)^(0+128),w
 10925  02AE  0084               	movwf	4
 10926  02AF  30B0               	movlw	high (__powers_| (0+32768))
 10927  02B0  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10928  02B1  0085               	movwf	5
 10929  02B2  3F00               	moviw [0]fsr0
 10930  02B3  00AC               	movwf	(??_scale+12)^(0+128)
 10931  02B4  3F01               	moviw [1]fsr0
 10932  02B5  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10933  02B6  3F02               	moviw [2]fsr0
 10934  02B7  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10935  02B8  3F03               	moviw [3]fsr0
 10936  02B9  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10937  02BA  082F               	movf	(??_scale+15)^(0+128),w
 10938  02BB  0020               	movlb	0	; select bank0
 10939  02BC  00D9               	movwf	___flmul@a+3
 10940  02BD  0021               	movlb	1	; select bank1
 10941  02BE  082E               	movf	(??_scale+14)^(0+128),w
 10942  02BF  0020               	movlb	0	; select bank0
 10943  02C0  00D8               	movwf	___flmul@a+2
 10944  02C1  0021               	movlb	1	; select bank1
 10945  02C2  082D               	movf	(??_scale+13)^(0+128),w
 10946  02C3  0020               	movlb	0	; select bank0
 10947  02C4  00D7               	movwf	___flmul@a+1
 10948  02C5  0021               	movlb	1	; select bank1
 10949  02C6  082C               	movf	(??_scale+12)^(0+128),w
 10950  02C7  0020               	movlb	0	; select bank0
 10951  02C8  00D6               	movwf	___flmul@a
 10952  02C9  3183  23CD  3180   	fcall	___flmul
 10953  02CC  0020               	movlb	0	; select bank0
 10954  02CD  0855               	movf	?___flmul+3,w
 10955  02CE  0021               	movlb	1	; select bank1
 10956  02CF  00B3               	movwf	(_scale$2179+3)^(0+128)
 10957  02D0  0020               	movlb	0	; select bank0
 10958  02D1  0854               	movf	?___flmul+2,w
 10959  02D2  0021               	movlb	1	; select bank1
 10960  02D3  00B2               	movwf	(_scale$2179+2)^(0+128)
 10961  02D4  0020               	movlb	0	; select bank0
 10962  02D5  0853               	movf	?___flmul+1,w
 10963  02D6  0021               	movlb	1	; select bank1
 10964  02D7  00B1               	movwf	(_scale$2179+1)^(0+128)
 10965  02D8  0020               	movlb	0	; select bank0
 10966  02D9  0852               	movf	?___flmul,w
 10967  02DA  0021               	movlb	1	; select bank1
 10968  02DB  00B0               	movwf	_scale$2179^(0+128)
 10969                           
 10970                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10971  02DC  300A               	movlw	10
 10972  02DD  00F2               	movwf	___awmod@divisor
 10973  02DE  3000               	movlw	0
 10974  02DF  00F3               	movwf	___awmod@divisor+1
 10975  02E0  0834               	movf	scale@scl^(0+128),w
 10976  02E1  00F4               	movwf	___awmod@dividend
 10977  02E2  01F5               	clrf	___awmod@dividend+1
 10978  02E3  1BF4               	btfsc	___awmod@dividend,7
 10979  02E4  03F5               	decf	___awmod@dividend+1,f
 10980  02E5  31AD  257C  3180   	fcall	___awmod
 10981  02E8  0873               	movf	?___awmod+1,w
 10982  02E9  0085               	movwf	5
 10983  02EA  0872               	movf	?___awmod,w
 10984  02EB  0084               	movwf	4
 10985  02EC  3584               	lslf	4,f
 10986  02ED  0D85               	rlf	5,f
 10987  02EE  3584               	lslf	4,f
 10988  02EF  0D85               	rlf	5,f
 10989  02F0  3000               	movlw	low (__powers_| (0+32768))
 10990  02F1  0784               	addwf	4,f
 10991  02F2  30B0               	movlw	high (__powers_| (0+32768))
 10992  02F3  3D85               	addwfc	5,f
 10993  02F4  3F00               	moviw [0]fsr0
 10994  02F5  0021               	movlb	1	; select bank1
 10995  02F6  00A0               	movwf	??_scale^(0+128)
 10996  02F7  3F01               	moviw [1]fsr0
 10997  02F8  00A1               	movwf	(??_scale^(0+128)+1)
 10998  02F9  3F02               	moviw [2]fsr0
 10999  02FA  00A2               	movwf	(??_scale^(0+128)+2)
 11000  02FB  3F03               	moviw [3]fsr0
 11001  02FC  00A3               	movwf	(??_scale^(0+128)+3)
 11002  02FD  0823               	movf	(??_scale+3)^(0+128),w
 11003  02FE  0020               	movlb	0	; select bank0
 11004  02FF  00D5               	movwf	___flmul@b+3
 11005  0300  0021               	movlb	1	; select bank1
 11006  0301  0822               	movf	(??_scale+2)^(0+128),w
 11007  0302  0020               	movlb	0	; select bank0
 11008  0303  00D4               	movwf	___flmul@b+2
 11009  0304  0021               	movlb	1	; select bank1
 11010  0305  0821               	movf	(??_scale+1)^(0+128),w
 11011  0306  0020               	movlb	0	; select bank0
 11012  0307  00D3               	movwf	___flmul@b+1
 11013  0308  0021               	movlb	1	; select bank1
 11014  0309  0820               	movf	??_scale^(0+128),w
 11015  030A  0020               	movlb	0	; select bank0
 11016  030B  00D2               	movwf	___flmul@b
 11017  030C  0021               	movlb	1	; select bank1
 11018  030D  0833               	movf	(_scale$2179+3)^(0+128),w
 11019  030E  0020               	movlb	0	; select bank0
 11020  030F  00D9               	movwf	___flmul@a+3
 11021  0310  0021               	movlb	1	; select bank1
 11022  0311  0832               	movf	(_scale$2179+2)^(0+128),w
 11023  0312  0020               	movlb	0	; select bank0
 11024  0313  00D8               	movwf	___flmul@a+2
 11025  0314  0021               	movlb	1	; select bank1
 11026  0315  0831               	movf	(_scale$2179+1)^(0+128),w
 11027  0316  0020               	movlb	0	; select bank0
 11028  0317  00D7               	movwf	___flmul@a+1
 11029  0318  0021               	movlb	1	; select bank1
 11030  0319  0830               	movf	_scale$2179^(0+128),w
 11031  031A  0020               	movlb	0	; select bank0
 11032  031B  00D6               	movwf	___flmul@a
 11033  031C  3183  23CD         	fcall	___flmul
 11034  031E  0020               	movlb	0	; select bank0
 11035  031F  0855               	movf	?___flmul+3,w
 11036  0320  00EF               	movwf	?_scale+3
 11037  0321  0854               	movf	?___flmul+2,w
 11038  0322  00EE               	movwf	?_scale+2
 11039  0323  0853               	movf	?___flmul+1,w
 11040  0324  00ED               	movwf	?_scale+1
 11041  0325  0852               	movf	?___flmul,w
 11042  0326  00EC               	movwf	?_scale
 11043  0327  0008               	return
 11044  0328                     l7080:	
 11045                           
 11046                           ;doprnt.c: 438: else if(scl > 10)
 11047  0328  0021               	movlb	1	; select bank1
 11048  0329  0834               	movf	scale@scl^(0+128),w
 11049  032A  3A80               	xorlw	128
 11050  032B  3E75               	addlw	-139
 11051  032C  1C03               	skipc
 11052  032D  2BA7               	goto	l7086
 11053                           
 11054                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11055  032E  300A               	movlw	10
 11056  032F  00F2               	movwf	___awmod@divisor
 11057  0330  3000               	movlw	0
 11058  0331  00F3               	movwf	___awmod@divisor+1
 11059  0332  0834               	movf	scale@scl^(0+128),w
 11060  0333  00F4               	movwf	___awmod@dividend
 11061  0334  01F5               	clrf	___awmod@dividend+1
 11062  0335  1BF4               	btfsc	___awmod@dividend,7
 11063  0336  03F5               	decf	___awmod@dividend+1,f
 11064  0337  31AD  257C  3180   	fcall	___awmod
 11065  033A  0873               	movf	?___awmod+1,w
 11066  033B  0085               	movwf	5
 11067  033C  0872               	movf	?___awmod,w
 11068  033D  0084               	movwf	4
 11069  033E  3584               	lslf	4,f
 11070  033F  0D85               	rlf	5,f
 11071  0340  3584               	lslf	4,f
 11072  0341  0D85               	rlf	5,f
 11073  0342  3000               	movlw	low (__powers_| (0+32768))
 11074  0343  0784               	addwf	4,f
 11075  0344  30B0               	movlw	high (__powers_| (0+32768))
 11076  0345  3D85               	addwfc	5,f
 11077  0346  3F00               	moviw [0]fsr0
 11078  0347  0021               	movlb	1	; select bank1
 11079  0348  00A0               	movwf	??_scale^(0+128)
 11080  0349  3F01               	moviw [1]fsr0
 11081  034A  00A1               	movwf	(??_scale^(0+128)+1)
 11082  034B  3F02               	moviw [2]fsr0
 11083  034C  00A2               	movwf	(??_scale^(0+128)+2)
 11084  034D  3F03               	moviw [3]fsr0
 11085  034E  00A3               	movwf	(??_scale^(0+128)+3)
 11086  034F  0823               	movf	(??_scale+3)^(0+128),w
 11087  0350  0020               	movlb	0	; select bank0
 11088  0351  00D5               	movwf	___flmul@b+3
 11089  0352  0021               	movlb	1	; select bank1
 11090  0353  0822               	movf	(??_scale+2)^(0+128),w
 11091  0354  0020               	movlb	0	; select bank0
 11092  0355  00D4               	movwf	___flmul@b+2
 11093  0356  0021               	movlb	1	; select bank1
 11094  0357  0821               	movf	(??_scale+1)^(0+128),w
 11095  0358  0020               	movlb	0	; select bank0
 11096  0359  00D3               	movwf	___flmul@b+1
 11097  035A  0021               	movlb	1	; select bank1
 11098  035B  0820               	movf	??_scale^(0+128),w
 11099  035C  0020               	movlb	0	; select bank0
 11100  035D  00D2               	movwf	___flmul@b
 11101  035E  300A               	movlw	10
 11102  035F  00A0               	movwf	___awdiv@divisor
 11103  0360  3000               	movlw	0
 11104  0361  00A1               	movwf	___awdiv@divisor+1
 11105  0362  0021               	movlb	1	; select bank1
 11106  0363  0834               	movf	scale@scl^(0+128),w
 11107  0364  0020               	movlb	0	; select bank0
 11108  0365  00A2               	movwf	___awdiv@dividend
 11109  0366  01A3               	clrf	___awdiv@dividend+1
 11110  0367  1BA2               	btfsc	___awdiv@dividend,7
 11111  0368  03A3               	decf	___awdiv@dividend+1,f
 11112  0369  31AE  26B2  3180   	fcall	___awdiv
 11113  036C  0020               	movlb	0	; select bank0
 11114  036D  0820               	movf	?___awdiv,w
 11115  036E  0021               	movlb	1	; select bank1
 11116  036F  00A4               	movwf	(??_scale+4)^(0+128)
 11117  0370  0020               	movlb	0	; select bank0
 11118  0371  0821               	movf	?___awdiv+1,w
 11119  0372  0021               	movlb	1	; select bank1
 11120  0373  00A5               	movwf	((??_scale+4)^(0+128)+1)
 11121  0374  35A4               	lslf	(??_scale+4)^(0+128),f
 11122  0375  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 11123  0376  35A4               	lslf	(??_scale+4)^(0+128),f
 11124  0377  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 11125  0378  0824               	movf	(??_scale+4)^(0+128),w
 11126  0379  3E24               	addlw	36
 11127  037A  00A6               	movwf	(??_scale+6)^(0+128)
 11128  037B  3000               	movlw	0
 11129  037C  3D25               	addwfc	(??_scale+5)^(0+128),w
 11130  037D  00A7               	movwf	(??_scale+7)^(0+128)
 11131  037E  3000               	movlw	low (__powers_| (0+32768))
 11132  037F  0726               	addwf	(??_scale+6)^(0+128),w
 11133  0380  0084               	movwf	4
 11134  0381  30B0               	movlw	high (__powers_| (0+32768))
 11135  0382  3D27               	addwfc	(??_scale+7)^(0+128),w
 11136  0383  0085               	movwf	5
 11137  0384  3F00               	moviw [0]fsr0
 11138  0385  00A8               	movwf	(??_scale+8)^(0+128)
 11139  0386  3F01               	moviw [1]fsr0
 11140  0387  00A9               	movwf	((??_scale+8)^(0+128)+1)
 11141  0388  3F02               	moviw [2]fsr0
 11142  0389  00AA               	movwf	((??_scale+8)^(0+128)+2)
 11143  038A  3F03               	moviw [3]fsr0
 11144  038B  00AB               	movwf	((??_scale+8)^(0+128)+3)
 11145  038C  082B               	movf	(??_scale+11)^(0+128),w
 11146  038D  0020               	movlb	0	; select bank0
 11147  038E  00D9               	movwf	___flmul@a+3
 11148  038F  0021               	movlb	1	; select bank1
 11149  0390  082A               	movf	(??_scale+10)^(0+128),w
 11150  0391  0020               	movlb	0	; select bank0
 11151  0392  00D8               	movwf	___flmul@a+2
 11152  0393  0021               	movlb	1	; select bank1
 11153  0394  0829               	movf	(??_scale+9)^(0+128),w
 11154  0395  0020               	movlb	0	; select bank0
 11155  0396  00D7               	movwf	___flmul@a+1
 11156  0397  0021               	movlb	1	; select bank1
 11157  0398  0828               	movf	(??_scale+8)^(0+128),w
 11158  0399  0020               	movlb	0	; select bank0
 11159  039A  00D6               	movwf	___flmul@a
 11160  039B  3183  23CD         	fcall	___flmul
 11161  039D  0020               	movlb	0	; select bank0
 11162  039E  0855               	movf	?___flmul+3,w
 11163  039F  00EF               	movwf	?_scale+3
 11164  03A0  0854               	movf	?___flmul+2,w
 11165  03A1  00EE               	movwf	?_scale+2
 11166  03A2  0853               	movf	?___flmul+1,w
 11167  03A3  00ED               	movwf	?_scale+1
 11168  03A4  0852               	movf	?___flmul,w
 11169  03A5  00EC               	movwf	?_scale
 11170  03A6  0008               	return
 11171  03A7                     l7086:	
 11172                           
 11173                           ;doprnt.c: 440: return _powers_[scl];
 11174  03A7  0021               	movlb	1	; select bank1
 11175  03A8  0834               	movf	scale@scl^(0+128),w
 11176  03A9  00A0               	movwf	??_scale^(0+128)
 11177  03AA  01A1               	clrf	(??_scale^(0+128)+1)
 11178  03AB  35A0               	lslf	??_scale^(0+128),f
 11179  03AC  0DA1               	rlf	(??_scale^(0+128)+1),f
 11180  03AD  35A0               	lslf	??_scale^(0+128),f
 11181  03AE  0DA1               	rlf	(??_scale^(0+128)+1),f
 11182  03AF  3000               	movlw	low (__powers_| (0+32768))
 11183  03B0  0720               	addwf	??_scale^(0+128),w
 11184  03B1  0084               	movwf	4
 11185  03B2  30B0               	movlw	high (__powers_| (0+32768))
 11186  03B3  3D21               	addwfc	(??_scale+1)^(0+128),w
 11187  03B4  0085               	movwf	5
 11188  03B5  3F00               	moviw [0]fsr0
 11189  03B6  00A2               	movwf	(??_scale+2)^(0+128)
 11190  03B7  3F01               	moviw [1]fsr0
 11191  03B8  00A3               	movwf	((??_scale+2)^(0+128)+1)
 11192  03B9  3F02               	moviw [2]fsr0
 11193  03BA  00A4               	movwf	((??_scale+2)^(0+128)+2)
 11194  03BB  3F03               	moviw [3]fsr0
 11195  03BC  00A5               	movwf	((??_scale+2)^(0+128)+3)
 11196  03BD  0825               	movf	(??_scale+5)^(0+128),w
 11197  03BE  0020               	movlb	0	; select bank0
 11198  03BF  00EF               	movwf	?_scale+3
 11199  03C0  0021               	movlb	1	; select bank1
 11200  03C1  0824               	movf	(??_scale+4)^(0+128),w
 11201  03C2  0020               	movlb	0	; select bank0
 11202  03C3  00EE               	movwf	?_scale+2
 11203  03C4  0021               	movlb	1	; select bank1
 11204  03C5  0823               	movf	(??_scale+3)^(0+128),w
 11205  03C6  0020               	movlb	0	; select bank0
 11206  03C7  00ED               	movwf	?_scale+1
 11207  03C8  0021               	movlb	1	; select bank1
 11208  03C9  0822               	movf	(??_scale+2)^(0+128),w
 11209  03CA  0020               	movlb	0	; select bank0
 11210  03CB  00EC               	movwf	?_scale
 11211  03CC  0008               	return
 11212  03CD                     __end_of_scale:	
 11213                           
 11214                           	psect	text9
 11215  2B08                     __ptext9:	
 11216 ;; *************** function _isdigit *****************
 11217 ;; Defined at:
 11218 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11219 ;; Parameters:    Size  Location     Type
 11220 ;;  c               1    wreg     unsigned char 
 11221 ;; Auto vars:     Size  Location     Type
 11222 ;;  c               1    3[COMMON] unsigned char 
 11223 ;; Return value:  Size  Location     Type
 11224 ;;		None               void
 11225 ;; Registers used:
 11226 ;;		wreg, status,2, status,0
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11233 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11235 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11236 ;;Total ram usage:        2 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    2
 11239 ;; This function calls:
 11240 ;;		Nothing
 11241 ;; This function is called by:
 11242 ;;		_sprintf
 11243 ;; This function uses a non-reentrant model
 11244 ;;
 11245                           
 11246                           
 11247                           ;psect for function _isdigit
 11248  2B08                     _isdigit:	
 11249                           
 11250                           ;incstack = 0
 11251                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11252                           ;isdigit@c stored from wreg
 11253  2B08  00F3               	movwf	isdigit@c
 11254  2B09  01F2               	clrf	_isdigit$1783
 11255  2B0A  303A               	movlw	58
 11256  2B0B  0273               	subwf	isdigit@c,w
 11257  2B0C  1803               	skipnc
 11258  2B0D  2B14               	goto	l7098
 11259  2B0E  3030               	movlw	48
 11260  2B0F  0273               	subwf	isdigit@c,w
 11261  2B10  1C03               	skipc
 11262  2B11  2B14               	goto	l7098
 11263  2B12  01F2               	clrf	_isdigit$1783
 11264  2B13  0AF2               	incf	_isdigit$1783,f
 11265  2B14                     l7098:	
 11266  2B14  0C72               	rrf	_isdigit$1783,w
 11267  2B15  0008               	return
 11268  2B16                     __end_of_isdigit:	
 11269                           
 11270                           	psect	text10
 11271  15F7                     __ptext10:	
 11272 ;; *************** function _fround *****************
 11273 ;; Defined at:
 11274 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;  prec            1    wreg     unsigned char 
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;  prec            1   28[BANK1 ] unsigned char 
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  4   76[BANK0 ] unsigned char 
 11281 ;; Registers used:
 11282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11288 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11289 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11290 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11291 ;;      Totals:         0       4      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11292 ;;Total ram usage:       33 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    4
 11295 ;; This function calls:
 11296 ;;		___awdiv
 11297 ;;		___awmod
 11298 ;;		___flmul
 11299 ;; This function is called by:
 11300 ;;		_sprintf
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           
 11305                           ;psect for function _fround
 11306  15F7                     _fround:	
 11307                           
 11308                           ;incstack = 0
 11309                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11310                           ;fround@prec stored from wreg
 11311  15F7  0021               	movlb	1	; select bank1
 11312  15F8  00BC               	movwf	fround@prec^(0+128)
 11313                           
 11314                           ;doprnt.c: 413: if(prec>=110)
 11315  15F9  306E               	movlw	110
 11316  15FA  023C               	subwf	fround@prec^(0+128),w
 11317  15FB  1C03               	skipc
 11318  15FC  2F16               	goto	l7038
 11319                           
 11320                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11321  15FD  300A               	movlw	10
 11322  15FE  0020               	movlb	0	; select bank0
 11323  15FF  00A0               	movwf	___awdiv@divisor
 11324  1600  3000               	movlw	0
 11325  1601  00A1               	movwf	___awdiv@divisor+1
 11326  1602  0021               	movlb	1	; select bank1
 11327  1603  083C               	movf	fround@prec^(0+128),w
 11328  1604  00A0               	movwf	??_fround^(0+128)
 11329  1605  01A1               	clrf	(??_fround^(0+128)+1)
 11330  1606  0820               	movf	??_fround^(0+128),w
 11331  1607  00F4               	movwf	___awmod@dividend
 11332  1608  0821               	movf	(??_fround+1)^(0+128),w
 11333  1609  00F5               	movwf	___awmod@dividend+1
 11334  160A  3064               	movlw	100
 11335  160B  00F2               	movwf	___awmod@divisor
 11336  160C  3000               	movlw	0
 11337  160D  00F3               	movwf	___awmod@divisor+1
 11338  160E  31AD  257C  3195   	fcall	___awmod
 11339  1611  0873               	movf	?___awmod+1,w
 11340  1612  0020               	movlb	0	; select bank0
 11341  1613  00A3               	movwf	___awdiv@dividend+1
 11342  1614  0872               	movf	?___awmod,w
 11343  1615  00A2               	movwf	___awdiv@dividend
 11344  1616  31AE  26B2  3195   	fcall	___awdiv
 11345  1619  0020               	movlb	0	; select bank0
 11346  161A  0820               	movf	?___awdiv,w
 11347  161B  0021               	movlb	1	; select bank1
 11348  161C  00A2               	movwf	(??_fround+2)^(0+128)
 11349  161D  0020               	movlb	0	; select bank0
 11350  161E  0821               	movf	?___awdiv+1,w
 11351  161F  0021               	movlb	1	; select bank1
 11352  1620  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11353  1621  35A2               	lslf	(??_fround+2)^(0+128),f
 11354  1622  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11355  1623  35A2               	lslf	(??_fround+2)^(0+128),f
 11356  1624  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11357  1625  0822               	movf	(??_fround+2)^(0+128),w
 11358  1626  3E24               	addlw	36
 11359  1627  00A4               	movwf	(??_fround+4)^(0+128)
 11360  1628  3000               	movlw	0
 11361  1629  3D23               	addwfc	(??_fround+3)^(0+128),w
 11362  162A  00A5               	movwf	(??_fround+5)^(0+128)
 11363  162B  3034               	movlw	low (__npowers_| (0+32768))
 11364  162C  0724               	addwf	(??_fround+4)^(0+128),w
 11365  162D  0084               	movwf	4
 11366  162E  30B0               	movlw	high (__npowers_| (0+32768))
 11367  162F  3D25               	addwfc	(??_fround+5)^(0+128),w
 11368  1630  0085               	movwf	5
 11369  1631  3F00               	moviw [0]fsr0
 11370  1632  00A6               	movwf	(??_fround+6)^(0+128)
 11371  1633  3F01               	moviw [1]fsr0
 11372  1634  00A7               	movwf	((??_fround+6)^(0+128)+1)
 11373  1635  3F02               	moviw [2]fsr0
 11374  1636  00A8               	movwf	((??_fround+6)^(0+128)+2)
 11375  1637  3F03               	moviw [3]fsr0
 11376  1638  00A9               	movwf	((??_fround+6)^(0+128)+3)
 11377  1639  0829               	movf	(??_fround+9)^(0+128),w
 11378  163A  0020               	movlb	0	; select bank0
 11379  163B  00D5               	movwf	___flmul@b+3
 11380  163C  0021               	movlb	1	; select bank1
 11381  163D  0828               	movf	(??_fround+8)^(0+128),w
 11382  163E  0020               	movlb	0	; select bank0
 11383  163F  00D4               	movwf	___flmul@b+2
 11384  1640  0021               	movlb	1	; select bank1
 11385  1641  0827               	movf	(??_fround+7)^(0+128),w
 11386  1642  0020               	movlb	0	; select bank0
 11387  1643  00D3               	movwf	___flmul@b+1
 11388  1644  0021               	movlb	1	; select bank1
 11389  1645  0826               	movf	(??_fround+6)^(0+128),w
 11390  1646  0020               	movlb	0	; select bank0
 11391  1647  00D2               	movwf	___flmul@b
 11392  1648  3064               	movlw	100
 11393  1649  00A0               	movwf	___awdiv@divisor
 11394  164A  3000               	movlw	0
 11395  164B  00A1               	movwf	___awdiv@divisor+1
 11396  164C  0021               	movlb	1	; select bank1
 11397  164D  083C               	movf	fround@prec^(0+128),w
 11398  164E  00AA               	movwf	(??_fround+10)^(0+128)
 11399  164F  01AB               	clrf	((??_fround+10)^(0+128)+1)
 11400  1650  082A               	movf	(??_fround+10)^(0+128),w
 11401  1651  0020               	movlb	0	; select bank0
 11402  1652  00A2               	movwf	___awdiv@dividend
 11403  1653  0021               	movlb	1	; select bank1
 11404  1654  082B               	movf	(??_fround+11)^(0+128),w
 11405  1655  0020               	movlb	0	; select bank0
 11406  1656  00A3               	movwf	___awdiv@dividend+1
 11407  1657  31AE  26B2  3195   	fcall	___awdiv
 11408  165A  0020               	movlb	0	; select bank0
 11409  165B  0820               	movf	?___awdiv,w
 11410  165C  0021               	movlb	1	; select bank1
 11411  165D  00AC               	movwf	(??_fround+12)^(0+128)
 11412  165E  0020               	movlb	0	; select bank0
 11413  165F  0821               	movf	?___awdiv+1,w
 11414  1660  0021               	movlb	1	; select bank1
 11415  1661  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11416  1662  35AC               	lslf	(??_fround+12)^(0+128),f
 11417  1663  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11418  1664  35AC               	lslf	(??_fround+12)^(0+128),f
 11419  1665  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11420  1666  082C               	movf	(??_fround+12)^(0+128),w
 11421  1667  3E48               	addlw	72
 11422  1668  00AE               	movwf	(??_fround+14)^(0+128)
 11423  1669  3000               	movlw	0
 11424  166A  3D2D               	addwfc	(??_fround+13)^(0+128),w
 11425  166B  00AF               	movwf	(??_fround+15)^(0+128)
 11426  166C  3034               	movlw	low (__npowers_| (0+32768))
 11427  166D  072E               	addwf	(??_fround+14)^(0+128),w
 11428  166E  0084               	movwf	4
 11429  166F  30B0               	movlw	high (__npowers_| (0+32768))
 11430  1670  3D2F               	addwfc	(??_fround+15)^(0+128),w
 11431  1671  0085               	movwf	5
 11432  1672  3F00               	moviw [0]fsr0
 11433  1673  00B0               	movwf	(??_fround+16)^(0+128)
 11434  1674  3F01               	moviw [1]fsr0
 11435  1675  00B1               	movwf	((??_fround+16)^(0+128)+1)
 11436  1676  3F02               	moviw [2]fsr0
 11437  1677  00B2               	movwf	((??_fround+16)^(0+128)+2)
 11438  1678  3F03               	moviw [3]fsr0
 11439  1679  00B3               	movwf	((??_fround+16)^(0+128)+3)
 11440  167A  0833               	movf	(??_fround+19)^(0+128),w
 11441  167B  0020               	movlb	0	; select bank0
 11442  167C  00D9               	movwf	___flmul@a+3
 11443  167D  0021               	movlb	1	; select bank1
 11444  167E  0832               	movf	(??_fround+18)^(0+128),w
 11445  167F  0020               	movlb	0	; select bank0
 11446  1680  00D8               	movwf	___flmul@a+2
 11447  1681  0021               	movlb	1	; select bank1
 11448  1682  0831               	movf	(??_fround+17)^(0+128),w
 11449  1683  0020               	movlb	0	; select bank0
 11450  1684  00D7               	movwf	___flmul@a+1
 11451  1685  0021               	movlb	1	; select bank1
 11452  1686  0830               	movf	(??_fround+16)^(0+128),w
 11453  1687  0020               	movlb	0	; select bank0
 11454  1688  00D6               	movwf	___flmul@a
 11455  1689  3183  23CD  3195   	fcall	___flmul
 11456  168C  0020               	movlb	0	; select bank0
 11457  168D  0855               	movf	?___flmul+3,w
 11458  168E  0021               	movlb	1	; select bank1
 11459  168F  00BB               	movwf	(_fround$2177+3)^(0+128)
 11460  1690  0020               	movlb	0	; select bank0
 11461  1691  0854               	movf	?___flmul+2,w
 11462  1692  0021               	movlb	1	; select bank1
 11463  1693  00BA               	movwf	(_fround$2177+2)^(0+128)
 11464  1694  0020               	movlb	0	; select bank0
 11465  1695  0853               	movf	?___flmul+1,w
 11466  1696  0021               	movlb	1	; select bank1
 11467  1697  00B9               	movwf	(_fround$2177+1)^(0+128)
 11468  1698  0020               	movlb	0	; select bank0
 11469  1699  0852               	movf	?___flmul,w
 11470  169A  0021               	movlb	1	; select bank1
 11471  169B  00B8               	movwf	_fround$2177^(0+128)
 11472                           
 11473                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11474  169C  300A               	movlw	10
 11475  169D  00F2               	movwf	___awmod@divisor
 11476  169E  3000               	movlw	0
 11477  169F  00F3               	movwf	___awmod@divisor+1
 11478  16A0  083C               	movf	fround@prec^(0+128),w
 11479  16A1  00A0               	movwf	??_fround^(0+128)
 11480  16A2  01A1               	clrf	(??_fround^(0+128)+1)
 11481  16A3  0820               	movf	??_fround^(0+128),w
 11482  16A4  00F4               	movwf	___awmod@dividend
 11483  16A5  0821               	movf	(??_fround+1)^(0+128),w
 11484  16A6  00F5               	movwf	___awmod@dividend+1
 11485  16A7  31AD  257C  3195   	fcall	___awmod
 11486  16AA  0873               	movf	?___awmod+1,w
 11487  16AB  0085               	movwf	5
 11488  16AC  0872               	movf	?___awmod,w
 11489  16AD  0084               	movwf	4
 11490  16AE  3584               	lslf	4,f
 11491  16AF  0D85               	rlf	5,f
 11492  16B0  3584               	lslf	4,f
 11493  16B1  0D85               	rlf	5,f
 11494  16B2  3034               	movlw	low (__npowers_| (0+32768))
 11495  16B3  0784               	addwf	4,f
 11496  16B4  30B0               	movlw	high (__npowers_| (0+32768))
 11497  16B5  3D85               	addwfc	5,f
 11498  16B6  3F00               	moviw [0]fsr0
 11499  16B7  0021               	movlb	1	; select bank1
 11500  16B8  00A2               	movwf	(??_fround+2)^(0+128)
 11501  16B9  3F01               	moviw [1]fsr0
 11502  16BA  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11503  16BB  3F02               	moviw [2]fsr0
 11504  16BC  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11505  16BD  3F03               	moviw [3]fsr0
 11506  16BE  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11507  16BF  0825               	movf	(??_fround+5)^(0+128),w
 11508  16C0  0020               	movlb	0	; select bank0
 11509  16C1  00D5               	movwf	___flmul@b+3
 11510  16C2  0021               	movlb	1	; select bank1
 11511  16C3  0824               	movf	(??_fround+4)^(0+128),w
 11512  16C4  0020               	movlb	0	; select bank0
 11513  16C5  00D4               	movwf	___flmul@b+2
 11514  16C6  0021               	movlb	1	; select bank1
 11515  16C7  0823               	movf	(??_fround+3)^(0+128),w
 11516  16C8  0020               	movlb	0	; select bank0
 11517  16C9  00D3               	movwf	___flmul@b+1
 11518  16CA  0021               	movlb	1	; select bank1
 11519  16CB  0822               	movf	(??_fround+2)^(0+128),w
 11520  16CC  0020               	movlb	0	; select bank0
 11521  16CD  00D2               	movwf	___flmul@b
 11522  16CE  0021               	movlb	1	; select bank1
 11523  16CF  083B               	movf	(_fround$2177+3)^(0+128),w
 11524  16D0  0020               	movlb	0	; select bank0
 11525  16D1  00D9               	movwf	___flmul@a+3
 11526  16D2  0021               	movlb	1	; select bank1
 11527  16D3  083A               	movf	(_fround$2177+2)^(0+128),w
 11528  16D4  0020               	movlb	0	; select bank0
 11529  16D5  00D8               	movwf	___flmul@a+2
 11530  16D6  0021               	movlb	1	; select bank1
 11531  16D7  0839               	movf	(_fround$2177+1)^(0+128),w
 11532  16D8  0020               	movlb	0	; select bank0
 11533  16D9  00D7               	movwf	___flmul@a+1
 11534  16DA  0021               	movlb	1	; select bank1
 11535  16DB  0838               	movf	_fround$2177^(0+128),w
 11536  16DC  0020               	movlb	0	; select bank0
 11537  16DD  00D6               	movwf	___flmul@a
 11538  16DE  3183  23CD  3195   	fcall	___flmul
 11539  16E1  0020               	movlb	0	; select bank0
 11540  16E2  0855               	movf	?___flmul+3,w
 11541  16E3  0021               	movlb	1	; select bank1
 11542  16E4  00B7               	movwf	(_fround$2178+3)^(0+128)
 11543  16E5  0020               	movlb	0	; select bank0
 11544  16E6  0854               	movf	?___flmul+2,w
 11545  16E7  0021               	movlb	1	; select bank1
 11546  16E8  00B6               	movwf	(_fround$2178+2)^(0+128)
 11547  16E9  0020               	movlb	0	; select bank0
 11548  16EA  0853               	movf	?___flmul+1,w
 11549  16EB  0021               	movlb	1	; select bank1
 11550  16EC  00B5               	movwf	(_fround$2178+1)^(0+128)
 11551  16ED  0020               	movlb	0	; select bank0
 11552  16EE  0852               	movf	?___flmul,w
 11553  16EF  0021               	movlb	1	; select bank1
 11554  16F0  00B4               	movwf	_fround$2178^(0+128)
 11555                           
 11556                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11557  16F1  303F               	movlw	63
 11558  16F2  0020               	movlb	0	; select bank0
 11559  16F3  00D5               	movwf	___flmul@b+3
 11560  16F4  3000               	movlw	0
 11561  16F5  00D4               	movwf	___flmul@b+2
 11562  16F6  3000               	movlw	0
 11563  16F7  00D3               	movwf	___flmul@b+1
 11564  16F8  3000               	movlw	0
 11565  16F9  00D2               	movwf	___flmul@b
 11566  16FA  0021               	movlb	1	; select bank1
 11567  16FB  0837               	movf	(_fround$2178+3)^(0+128),w
 11568  16FC  0020               	movlb	0	; select bank0
 11569  16FD  00D9               	movwf	___flmul@a+3
 11570  16FE  0021               	movlb	1	; select bank1
 11571  16FF  0836               	movf	(_fround$2178+2)^(0+128),w
 11572  1700  0020               	movlb	0	; select bank0
 11573  1701  00D8               	movwf	___flmul@a+2
 11574  1702  0021               	movlb	1	; select bank1
 11575  1703  0835               	movf	(_fround$2178+1)^(0+128),w
 11576  1704  0020               	movlb	0	; select bank0
 11577  1705  00D7               	movwf	___flmul@a+1
 11578  1706  0021               	movlb	1	; select bank1
 11579  1707  0834               	movf	_fround$2178^(0+128),w
 11580  1708  0020               	movlb	0	; select bank0
 11581  1709  00D6               	movwf	___flmul@a
 11582  170A  3183  23CD         	fcall	___flmul
 11583  170C  0020               	movlb	0	; select bank0
 11584  170D  0855               	movf	?___flmul+3,w
 11585  170E  00EF               	movwf	?_fround+3
 11586  170F  0854               	movf	?___flmul+2,w
 11587  1710  00EE               	movwf	?_fround+2
 11588  1711  0853               	movf	?___flmul+1,w
 11589  1712  00ED               	movwf	?_fround+1
 11590  1713  0852               	movf	?___flmul,w
 11591  1714  00EC               	movwf	?_fround
 11592  1715  0008               	return
 11593  1716                     l7038:	
 11594                           
 11595                           ;doprnt.c: 415: else if(prec > 10)
 11596  1716  300B               	movlw	11
 11597  1717  0021               	movlb	1	; select bank1
 11598  1718  023C               	subwf	fround@prec^(0+128),w
 11599  1719  1C03               	skipc
 11600  171A  2FC6               	goto	l7046
 11601                           
 11602                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11603  171B  300A               	movlw	10
 11604  171C  00F2               	movwf	___awmod@divisor
 11605  171D  3000               	movlw	0
 11606  171E  00F3               	movwf	___awmod@divisor+1
 11607  171F  083C               	movf	fround@prec^(0+128),w
 11608  1720  00A0               	movwf	??_fround^(0+128)
 11609  1721  01A1               	clrf	(??_fround^(0+128)+1)
 11610  1722  0820               	movf	??_fround^(0+128),w
 11611  1723  00F4               	movwf	___awmod@dividend
 11612  1724  0821               	movf	(??_fround+1)^(0+128),w
 11613  1725  00F5               	movwf	___awmod@dividend+1
 11614  1726  31AD  257C  3195   	fcall	___awmod
 11615  1729  0873               	movf	?___awmod+1,w
 11616  172A  0085               	movwf	5
 11617  172B  0872               	movf	?___awmod,w
 11618  172C  0084               	movwf	4
 11619  172D  3584               	lslf	4,f
 11620  172E  0D85               	rlf	5,f
 11621  172F  3584               	lslf	4,f
 11622  1730  0D85               	rlf	5,f
 11623  1731  3034               	movlw	low (__npowers_| (0+32768))
 11624  1732  0784               	addwf	4,f
 11625  1733  30B0               	movlw	high (__npowers_| (0+32768))
 11626  1734  3D85               	addwfc	5,f
 11627  1735  3F00               	moviw [0]fsr0
 11628  1736  0021               	movlb	1	; select bank1
 11629  1737  00A2               	movwf	(??_fround+2)^(0+128)
 11630  1738  3F01               	moviw [1]fsr0
 11631  1739  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11632  173A  3F02               	moviw [2]fsr0
 11633  173B  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11634  173C  3F03               	moviw [3]fsr0
 11635  173D  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11636  173E  0825               	movf	(??_fround+5)^(0+128),w
 11637  173F  0020               	movlb	0	; select bank0
 11638  1740  00D5               	movwf	___flmul@b+3
 11639  1741  0021               	movlb	1	; select bank1
 11640  1742  0824               	movf	(??_fround+4)^(0+128),w
 11641  1743  0020               	movlb	0	; select bank0
 11642  1744  00D4               	movwf	___flmul@b+2
 11643  1745  0021               	movlb	1	; select bank1
 11644  1746  0823               	movf	(??_fround+3)^(0+128),w
 11645  1747  0020               	movlb	0	; select bank0
 11646  1748  00D3               	movwf	___flmul@b+1
 11647  1749  0021               	movlb	1	; select bank1
 11648  174A  0822               	movf	(??_fround+2)^(0+128),w
 11649  174B  0020               	movlb	0	; select bank0
 11650  174C  00D2               	movwf	___flmul@b
 11651  174D  300A               	movlw	10
 11652  174E  00A0               	movwf	___awdiv@divisor
 11653  174F  3000               	movlw	0
 11654  1750  00A1               	movwf	___awdiv@divisor+1
 11655  1751  0021               	movlb	1	; select bank1
 11656  1752  083C               	movf	fround@prec^(0+128),w
 11657  1753  00A6               	movwf	(??_fround+6)^(0+128)
 11658  1754  01A7               	clrf	((??_fround+6)^(0+128)+1)
 11659  1755  0826               	movf	(??_fround+6)^(0+128),w
 11660  1756  0020               	movlb	0	; select bank0
 11661  1757  00A2               	movwf	___awdiv@dividend
 11662  1758  0021               	movlb	1	; select bank1
 11663  1759  0827               	movf	(??_fround+7)^(0+128),w
 11664  175A  0020               	movlb	0	; select bank0
 11665  175B  00A3               	movwf	___awdiv@dividend+1
 11666  175C  31AE  26B2  3195   	fcall	___awdiv
 11667  175F  0020               	movlb	0	; select bank0
 11668  1760  0820               	movf	?___awdiv,w
 11669  1761  0021               	movlb	1	; select bank1
 11670  1762  00A8               	movwf	(??_fround+8)^(0+128)
 11671  1763  0020               	movlb	0	; select bank0
 11672  1764  0821               	movf	?___awdiv+1,w
 11673  1765  0021               	movlb	1	; select bank1
 11674  1766  00A9               	movwf	((??_fround+8)^(0+128)+1)
 11675  1767  35A8               	lslf	(??_fround+8)^(0+128),f
 11676  1768  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11677  1769  35A8               	lslf	(??_fround+8)^(0+128),f
 11678  176A  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11679  176B  0828               	movf	(??_fround+8)^(0+128),w
 11680  176C  3E24               	addlw	36
 11681  176D  00AA               	movwf	(??_fround+10)^(0+128)
 11682  176E  3000               	movlw	0
 11683  176F  3D29               	addwfc	(??_fround+9)^(0+128),w
 11684  1770  00AB               	movwf	(??_fround+11)^(0+128)
 11685  1771  3034               	movlw	low (__npowers_| (0+32768))
 11686  1772  072A               	addwf	(??_fround+10)^(0+128),w
 11687  1773  0084               	movwf	4
 11688  1774  30B0               	movlw	high (__npowers_| (0+32768))
 11689  1775  3D2B               	addwfc	(??_fround+11)^(0+128),w
 11690  1776  0085               	movwf	5
 11691  1777  3F00               	moviw [0]fsr0
 11692  1778  00AC               	movwf	(??_fround+12)^(0+128)
 11693  1779  3F01               	moviw [1]fsr0
 11694  177A  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11695  177B  3F02               	moviw [2]fsr0
 11696  177C  00AE               	movwf	((??_fround+12)^(0+128)+2)
 11697  177D  3F03               	moviw [3]fsr0
 11698  177E  00AF               	movwf	((??_fround+12)^(0+128)+3)
 11699  177F  082F               	movf	(??_fround+15)^(0+128),w
 11700  1780  0020               	movlb	0	; select bank0
 11701  1781  00D9               	movwf	___flmul@a+3
 11702  1782  0021               	movlb	1	; select bank1
 11703  1783  082E               	movf	(??_fround+14)^(0+128),w
 11704  1784  0020               	movlb	0	; select bank0
 11705  1785  00D8               	movwf	___flmul@a+2
 11706  1786  0021               	movlb	1	; select bank1
 11707  1787  082D               	movf	(??_fround+13)^(0+128),w
 11708  1788  0020               	movlb	0	; select bank0
 11709  1789  00D7               	movwf	___flmul@a+1
 11710  178A  0021               	movlb	1	; select bank1
 11711  178B  082C               	movf	(??_fround+12)^(0+128),w
 11712  178C  0020               	movlb	0	; select bank0
 11713  178D  00D6               	movwf	___flmul@a
 11714  178E  3183  23CD  3195   	fcall	___flmul
 11715  1791  0020               	movlb	0	; select bank0
 11716  1792  0855               	movf	?___flmul+3,w
 11717  1793  0021               	movlb	1	; select bank1
 11718  1794  00BB               	movwf	(_fround$2177+3)^(0+128)
 11719  1795  0020               	movlb	0	; select bank0
 11720  1796  0854               	movf	?___flmul+2,w
 11721  1797  0021               	movlb	1	; select bank1
 11722  1798  00BA               	movwf	(_fround$2177+2)^(0+128)
 11723  1799  0020               	movlb	0	; select bank0
 11724  179A  0853               	movf	?___flmul+1,w
 11725  179B  0021               	movlb	1	; select bank1
 11726  179C  00B9               	movwf	(_fround$2177+1)^(0+128)
 11727  179D  0020               	movlb	0	; select bank0
 11728  179E  0852               	movf	?___flmul,w
 11729  179F  0021               	movlb	1	; select bank1
 11730  17A0  00B8               	movwf	_fround$2177^(0+128)
 11731                           
 11732                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11733  17A1  303F               	movlw	63
 11734  17A2  0020               	movlb	0	; select bank0
 11735  17A3  00D5               	movwf	___flmul@b+3
 11736  17A4  3000               	movlw	0
 11737  17A5  00D4               	movwf	___flmul@b+2
 11738  17A6  3000               	movlw	0
 11739  17A7  00D3               	movwf	___flmul@b+1
 11740  17A8  3000               	movlw	0
 11741  17A9  00D2               	movwf	___flmul@b
 11742  17AA  0021               	movlb	1	; select bank1
 11743  17AB  083B               	movf	(_fround$2177+3)^(0+128),w
 11744  17AC  0020               	movlb	0	; select bank0
 11745  17AD  00D9               	movwf	___flmul@a+3
 11746  17AE  0021               	movlb	1	; select bank1
 11747  17AF  083A               	movf	(_fround$2177+2)^(0+128),w
 11748  17B0  0020               	movlb	0	; select bank0
 11749  17B1  00D8               	movwf	___flmul@a+2
 11750  17B2  0021               	movlb	1	; select bank1
 11751  17B3  0839               	movf	(_fround$2177+1)^(0+128),w
 11752  17B4  0020               	movlb	0	; select bank0
 11753  17B5  00D7               	movwf	___flmul@a+1
 11754  17B6  0021               	movlb	1	; select bank1
 11755  17B7  0838               	movf	_fround$2177^(0+128),w
 11756  17B8  0020               	movlb	0	; select bank0
 11757  17B9  00D6               	movwf	___flmul@a
 11758  17BA  3183  23CD         	fcall	___flmul
 11759  17BC  0020               	movlb	0	; select bank0
 11760  17BD  0855               	movf	?___flmul+3,w
 11761  17BE  00EF               	movwf	?_fround+3
 11762  17BF  0854               	movf	?___flmul+2,w
 11763  17C0  00EE               	movwf	?_fround+2
 11764  17C1  0853               	movf	?___flmul+1,w
 11765  17C2  00ED               	movwf	?_fround+1
 11766  17C3  0852               	movf	?___flmul,w
 11767  17C4  00EC               	movwf	?_fround
 11768  17C5  0008               	return
 11769  17C6                     l7046:	
 11770                           
 11771                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11772  17C6  303F               	movlw	63
 11773  17C7  0020               	movlb	0	; select bank0
 11774  17C8  00D5               	movwf	___flmul@b+3
 11775  17C9  3000               	movlw	0
 11776  17CA  00D4               	movwf	___flmul@b+2
 11777  17CB  3000               	movlw	0
 11778  17CC  00D3               	movwf	___flmul@b+1
 11779  17CD  3000               	movlw	0
 11780  17CE  00D2               	movwf	___flmul@b
 11781  17CF  0021               	movlb	1	; select bank1
 11782  17D0  083C               	movf	fround@prec^(0+128),w
 11783  17D1  00A0               	movwf	??_fround^(0+128)
 11784  17D2  01A1               	clrf	(??_fround^(0+128)+1)
 11785  17D3  35A0               	lslf	??_fround^(0+128),f
 11786  17D4  0DA1               	rlf	(??_fround^(0+128)+1),f
 11787  17D5  35A0               	lslf	??_fround^(0+128),f
 11788  17D6  0DA1               	rlf	(??_fround^(0+128)+1),f
 11789  17D7  3034               	movlw	low (__npowers_| (0+32768))
 11790  17D8  0720               	addwf	??_fround^(0+128),w
 11791  17D9  0084               	movwf	4
 11792  17DA  30B0               	movlw	high (__npowers_| (0+32768))
 11793  17DB  3D21               	addwfc	(??_fround+1)^(0+128),w
 11794  17DC  0085               	movwf	5
 11795  17DD  3F00               	moviw [0]fsr0
 11796  17DE  00A2               	movwf	(??_fround+2)^(0+128)
 11797  17DF  3F01               	moviw [1]fsr0
 11798  17E0  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11799  17E1  3F02               	moviw [2]fsr0
 11800  17E2  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11801  17E3  3F03               	moviw [3]fsr0
 11802  17E4  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11803  17E5  0825               	movf	(??_fround+5)^(0+128),w
 11804  17E6  0020               	movlb	0	; select bank0
 11805  17E7  00D9               	movwf	___flmul@a+3
 11806  17E8  0021               	movlb	1	; select bank1
 11807  17E9  0824               	movf	(??_fround+4)^(0+128),w
 11808  17EA  0020               	movlb	0	; select bank0
 11809  17EB  00D8               	movwf	___flmul@a+2
 11810  17EC  0021               	movlb	1	; select bank1
 11811  17ED  0823               	movf	(??_fround+3)^(0+128),w
 11812  17EE  0020               	movlb	0	; select bank0
 11813  17EF  00D7               	movwf	___flmul@a+1
 11814  17F0  0021               	movlb	1	; select bank1
 11815  17F1  0822               	movf	(??_fround+2)^(0+128),w
 11816  17F2  0020               	movlb	0	; select bank0
 11817  17F3  00D6               	movwf	___flmul@a
 11818  17F4  3183  23CD         	fcall	___flmul
 11819  17F6  0020               	movlb	0	; select bank0
 11820  17F7  0855               	movf	?___flmul+3,w
 11821  17F8  00EF               	movwf	?_fround+3
 11822  17F9  0854               	movf	?___flmul+2,w
 11823  17FA  00EE               	movwf	?_fround+2
 11824  17FB  0853               	movf	?___flmul+1,w
 11825  17FC  00ED               	movwf	?_fround+1
 11826  17FD  0852               	movf	?___flmul,w
 11827  17FE  00EC               	movwf	?_fround
 11828  17FF  0008               	return
 11829  1800                     __end_of_fround:	
 11830                           
 11831                           	psect	text11
 11832  2D7C                     __ptext11:	
 11833 ;; *************** function ___awmod *****************
 11834 ;; Defined at:
 11835 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11836 ;; Parameters:    Size  Location     Type
 11837 ;;  divisor         2    2[COMMON] int 
 11838 ;;  dividend        2    4[COMMON] int 
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;  sign            1    8[COMMON] unsigned char 
 11841 ;;  counter         1    7[COMMON] unsigned char 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;                  2    2[COMMON] int 
 11844 ;; Registers used:
 11845 ;;		wreg, status,2, status,0
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11854 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11855 ;;Total ram usage:        7 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:    2
 11858 ;; This function calls:
 11859 ;;		Nothing
 11860 ;; This function is called by:
 11861 ;;		_fround
 11862 ;;		_scale
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           
 11867                           ;psect for function ___awmod
 11868  2D7C                     ___awmod:	
 11869                           
 11870                           ;incstack = 0
 11871                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11872  2D7C  01F8               	clrf	___awmod@sign
 11873  2D7D  1FF5               	btfss	___awmod@dividend+1,7
 11874  2D7E  2D86               	goto	l6648
 11875  2D7F  09F4               	comf	___awmod@dividend,f
 11876  2D80  09F5               	comf	___awmod@dividend+1,f
 11877  2D81  0AF4               	incf	___awmod@dividend,f
 11878  2D82  1903               	skipnz
 11879  2D83  0AF5               	incf	___awmod@dividend+1,f
 11880  2D84  01F8               	clrf	___awmod@sign
 11881  2D85  0AF8               	incf	___awmod@sign,f
 11882  2D86                     l6648:	
 11883  2D86  1FF3               	btfss	___awmod@divisor+1,7
 11884  2D87  2D8D               	goto	l6652
 11885  2D88  09F2               	comf	___awmod@divisor,f
 11886  2D89  09F3               	comf	___awmod@divisor+1,f
 11887  2D8A  0AF2               	incf	___awmod@divisor,f
 11888  2D8B  1903               	skipnz
 11889  2D8C  0AF3               	incf	___awmod@divisor+1,f
 11890  2D8D                     l6652:	
 11891  2D8D  0872               	movf	___awmod@divisor,w
 11892  2D8E  0473               	iorwf	___awmod@divisor+1,w
 11893  2D8F  1903               	btfsc	3,2
 11894  2D90  2DB4               	goto	l6670
 11895  2D91  01F7               	clrf	___awmod@counter
 11896  2D92  0AF7               	incf	___awmod@counter,f
 11897  2D93                     l6660:	
 11898  2D93  1BF3               	btfsc	___awmod@divisor+1,7
 11899  2D94  2D9F               	goto	l6662
 11900  2D95  3001               	movlw	1
 11901  2D96                     u8495:	
 11902  2D96  35F2               	lslf	___awmod@divisor,f
 11903  2D97  0DF3               	rlf	___awmod@divisor+1,f
 11904  2D98  0B89               	decfsz	9,f
 11905  2D99  2D96               	goto	u8495
 11906  2D9A  3001               	movlw	1
 11907  2D9B  00F6               	movwf	??___awmod
 11908  2D9C  0876               	movf	??___awmod,w
 11909  2D9D  07F7               	addwf	___awmod@counter,f
 11910  2D9E  2D93               	goto	l6660
 11911  2D9F                     l6662:	
 11912  2D9F  0873               	movf	___awmod@divisor+1,w
 11913  2DA0  0275               	subwf	___awmod@dividend+1,w
 11914  2DA1  1D03               	skipz
 11915  2DA2  2DA5               	goto	u8515
 11916  2DA3  0872               	movf	___awmod@divisor,w
 11917  2DA4  0274               	subwf	___awmod@dividend,w
 11918  2DA5                     u8515:	
 11919  2DA5  1C03               	skipc
 11920  2DA6  2DAB               	goto	l6666
 11921  2DA7  0872               	movf	___awmod@divisor,w
 11922  2DA8  02F4               	subwf	___awmod@dividend,f
 11923  2DA9  0873               	movf	___awmod@divisor+1,w
 11924  2DAA  3BF5               	subwfb	___awmod@dividend+1,f
 11925  2DAB                     l6666:	
 11926  2DAB  3001               	movlw	1
 11927  2DAC                     u8525:	
 11928  2DAC  36F3               	lsrf	___awmod@divisor+1,f
 11929  2DAD  0CF2               	rrf	___awmod@divisor,f
 11930  2DAE  0B89               	decfsz	9,f
 11931  2DAF  2DAC               	goto	u8525
 11932  2DB0  3001               	movlw	1
 11933  2DB1  02F7               	subwf	___awmod@counter,f
 11934  2DB2  1D03               	btfss	3,2
 11935  2DB3  2D9F               	goto	l6662
 11936  2DB4                     l6670:	
 11937  2DB4  0878               	movf	___awmod@sign,w
 11938  2DB5  1903               	btfsc	3,2
 11939  2DB6  2DBC               	goto	l6674
 11940  2DB7  09F4               	comf	___awmod@dividend,f
 11941  2DB8  09F5               	comf	___awmod@dividend+1,f
 11942  2DB9  0AF4               	incf	___awmod@dividend,f
 11943  2DBA  1903               	skipnz
 11944  2DBB  0AF5               	incf	___awmod@dividend+1,f
 11945  2DBC                     l6674:	
 11946  2DBC  0875               	movf	___awmod@dividend+1,w
 11947  2DBD  00F3               	movwf	?___awmod+1
 11948  2DBE  0874               	movf	___awmod@dividend,w
 11949  2DBF  00F2               	movwf	?___awmod
 11950  2DC0  0008               	return
 11951  2DC1                     __end_of___awmod:	
 11952                           
 11953                           	psect	text12
 11954  2EB2                     __ptext12:	
 11955 ;; *************** function ___awdiv *****************
 11956 ;; Defined at:
 11957 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  divisor         2    0[BANK0 ] int 
 11960 ;;  dividend        2    2[BANK0 ] int 
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;  quotient        2    6[BANK0 ] int 
 11963 ;;  sign            1    5[BANK0 ] unsigned char 
 11964 ;;  counter         1    4[BANK0 ] unsigned char 
 11965 ;; Return value:  Size  Location     Type
 11966 ;;                  2    0[BANK0 ] int 
 11967 ;; Registers used:
 11968 ;;		wreg, status,2, status,0
 11969 ;; Tracked objects:
 11970 ;;		On entry : 0/0
 11971 ;;		On exit  : 0/0
 11972 ;;		Unchanged: 0/0
 11973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11974 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11975 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11976 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11977 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11978 ;;Total ram usage:        9 bytes
 11979 ;; Hardware stack levels used:    1
 11980 ;; Hardware stack levels required when called:    2
 11981 ;; This function calls:
 11982 ;;		Nothing
 11983 ;; This function is called by:
 11984 ;;		_fround
 11985 ;;		_scale
 11986 ;;		_sprintf
 11987 ;; This function uses a non-reentrant model
 11988 ;;
 11989                           
 11990                           
 11991                           ;psect for function ___awdiv
 11992  2EB2                     ___awdiv:	
 11993                           
 11994                           ;incstack = 0
 11995                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11996  2EB2  0020               	movlb	0	; select bank0
 11997  2EB3  01A5               	clrf	___awdiv@sign
 11998  2EB4  1FA1               	btfss	___awdiv@divisor+1,7
 11999  2EB5  2EBD               	goto	l6604
 12000  2EB6  09A0               	comf	___awdiv@divisor,f
 12001  2EB7  09A1               	comf	___awdiv@divisor+1,f
 12002  2EB8  0AA0               	incf	___awdiv@divisor,f
 12003  2EB9  1903               	skipnz
 12004  2EBA  0AA1               	incf	___awdiv@divisor+1,f
 12005  2EBB  01A5               	clrf	___awdiv@sign
 12006  2EBC  0AA5               	incf	___awdiv@sign,f
 12007  2EBD                     l6604:	
 12008  2EBD  1FA3               	btfss	___awdiv@dividend+1,7
 12009  2EBE  2EC8               	goto	l6610
 12010  2EBF  09A2               	comf	___awdiv@dividend,f
 12011  2EC0  09A3               	comf	___awdiv@dividend+1,f
 12012  2EC1  0AA2               	incf	___awdiv@dividend,f
 12013  2EC2  1903               	skipnz
 12014  2EC3  0AA3               	incf	___awdiv@dividend+1,f
 12015  2EC4  3001               	movlw	1
 12016  2EC5  00F9               	movwf	??___awdiv
 12017  2EC6  0879               	movf	??___awdiv,w
 12018  2EC7  06A5               	xorwf	___awdiv@sign,f
 12019  2EC8                     l6610:	
 12020  2EC8  01A6               	clrf	___awdiv@quotient
 12021  2EC9  01A7               	clrf	___awdiv@quotient+1
 12022  2ECA  0820               	movf	___awdiv@divisor,w
 12023  2ECB  0421               	iorwf	___awdiv@divisor+1,w
 12024  2ECC  1903               	btfsc	3,2
 12025  2ECD  2EF7               	goto	l6632
 12026  2ECE  01A4               	clrf	___awdiv@counter
 12027  2ECF  0AA4               	incf	___awdiv@counter,f
 12028  2ED0                     l6620:	
 12029  2ED0  1BA1               	btfsc	___awdiv@divisor+1,7
 12030  2ED1  2EDC               	goto	l6622
 12031  2ED2  3001               	movlw	1
 12032  2ED3                     u8395:	
 12033  2ED3  35A0               	lslf	___awdiv@divisor,f
 12034  2ED4  0DA1               	rlf	___awdiv@divisor+1,f
 12035  2ED5  0B89               	decfsz	9,f
 12036  2ED6  2ED3               	goto	u8395
 12037  2ED7  3001               	movlw	1
 12038  2ED8  00F9               	movwf	??___awdiv
 12039  2ED9  0879               	movf	??___awdiv,w
 12040  2EDA  07A4               	addwf	___awdiv@counter,f
 12041  2EDB  2ED0               	goto	l6620
 12042  2EDC                     l6622:	
 12043  2EDC  3001               	movlw	1
 12044  2EDD                     u8415:	
 12045  2EDD  35A6               	lslf	___awdiv@quotient,f
 12046  2EDE  0DA7               	rlf	___awdiv@quotient+1,f
 12047  2EDF  0B89               	decfsz	9,f
 12048  2EE0  2EDD               	goto	u8415
 12049  2EE1  0821               	movf	___awdiv@divisor+1,w
 12050  2EE2  0223               	subwf	___awdiv@dividend+1,w
 12051  2EE3  1D03               	skipz
 12052  2EE4  2EE7               	goto	u8425
 12053  2EE5  0820               	movf	___awdiv@divisor,w
 12054  2EE6  0222               	subwf	___awdiv@dividend,w
 12055  2EE7                     u8425:	
 12056  2EE7  1C03               	skipc
 12057  2EE8  2EEE               	goto	l6628
 12058  2EE9  0820               	movf	___awdiv@divisor,w
 12059  2EEA  02A2               	subwf	___awdiv@dividend,f
 12060  2EEB  0821               	movf	___awdiv@divisor+1,w
 12061  2EEC  3BA3               	subwfb	___awdiv@dividend+1,f
 12062  2EED  1426               	bsf	___awdiv@quotient,0
 12063  2EEE                     l6628:	
 12064  2EEE  3001               	movlw	1
 12065  2EEF                     u8435:	
 12066  2EEF  36A1               	lsrf	___awdiv@divisor+1,f
 12067  2EF0  0CA0               	rrf	___awdiv@divisor,f
 12068  2EF1  0B89               	decfsz	9,f
 12069  2EF2  2EEF               	goto	u8435
 12070  2EF3  3001               	movlw	1
 12071  2EF4  02A4               	subwf	___awdiv@counter,f
 12072  2EF5  1D03               	btfss	3,2
 12073  2EF6  2EDC               	goto	l6622
 12074  2EF7                     l6632:	
 12075  2EF7  0825               	movf	___awdiv@sign,w
 12076  2EF8  1903               	btfsc	3,2
 12077  2EF9  2EFF               	goto	l6636
 12078  2EFA  09A6               	comf	___awdiv@quotient,f
 12079  2EFB  09A7               	comf	___awdiv@quotient+1,f
 12080  2EFC  0AA6               	incf	___awdiv@quotient,f
 12081  2EFD  1903               	skipnz
 12082  2EFE  0AA7               	incf	___awdiv@quotient+1,f
 12083  2EFF                     l6636:	
 12084  2EFF  0827               	movf	___awdiv@quotient+1,w
 12085  2F00  00A1               	movwf	?___awdiv+1
 12086  2F01  0826               	movf	___awdiv@quotient,w
 12087  2F02  00A0               	movwf	?___awdiv
 12088  2F03  0008               	return
 12089  2F04                     __end_of___awdiv:	
 12090                           
 12091                           	psect	text13
 12092  24C8                     __ptext13:	
 12093 ;; *************** function __tdiv_to_l_ *****************
 12094 ;; Defined at:
 12095 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;  f1              4    2[COMMON] float 
 12098 ;;  f2              4    6[COMMON] float 
 12099 ;; Auto vars:     Size  Location     Type
 12100 ;;  quot            4    4[BANK0 ] unsigned long 
 12101 ;;  exp1            1    9[BANK0 ] unsigned char 
 12102 ;;  cntr            1    8[BANK0 ] unsigned char 
 12103 ;; Return value:  Size  Location     Type
 12104 ;;                  4    2[COMMON] unsigned long 
 12105 ;; Registers used:
 12106 ;;		wreg, status,2, status,0
 12107 ;; Tracked objects:
 12108 ;;		On entry : 0/0
 12109 ;;		On exit  : 0/0
 12110 ;;		Unchanged: 0/0
 12111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12113 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12114 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12115 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12116 ;;Total ram usage:       18 bytes
 12117 ;; Hardware stack levels used:    1
 12118 ;; Hardware stack levels required when called:    2
 12119 ;; This function calls:
 12120 ;;		Nothing
 12121 ;; This function is called by:
 12122 ;;		_sprintf
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function __tdiv_to_l_
 12128  24C8                     __tdiv_to_l_:	
 12129                           
 12130                           ;incstack = 0
 12131                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 12132  24C8  0872               	movf	__tdiv_to_l_@f1,w
 12133  24C9  0020               	movlb	0	; select bank0
 12134  24CA  00A0               	movwf	??__tdiv_to_l_
 12135  24CB  0873               	movf	__tdiv_to_l_@f1+1,w
 12136  24CC  00A1               	movwf	??__tdiv_to_l_+1
 12137  24CD  0874               	movf	__tdiv_to_l_@f1+2,w
 12138  24CE  00A2               	movwf	??__tdiv_to_l_+2
 12139  24CF  1003               	clrc
 12140  24D0  0D21               	rlf	??__tdiv_to_l_+1,w
 12141  24D1  0D22               	rlf	??__tdiv_to_l_+2,w
 12142  24D2  00A3               	movwf	??__tdiv_to_l_+3
 12143  24D3  0823               	movf	??__tdiv_to_l_+3,w
 12144  24D4  00A9               	movwf	__tdiv_to_l_@exp1
 12145  24D5  0829               	movf	__tdiv_to_l_@exp1,w
 12146  24D6  1D03               	btfss	3,2
 12147  24D7  2CE1               	goto	l7108
 12148  24D8  3000               	movlw	0
 12149  24D9  00F5               	movwf	?__tdiv_to_l_+3
 12150  24DA  3000               	movlw	0
 12151  24DB  00F4               	movwf	?__tdiv_to_l_+2
 12152  24DC  3000               	movlw	0
 12153  24DD  00F3               	movwf	?__tdiv_to_l_+1
 12154  24DE  3000               	movlw	0
 12155  24DF  00F2               	movwf	?__tdiv_to_l_
 12156  24E0  0008               	return
 12157  24E1                     l7108:	
 12158  24E1  0876               	movf	__tdiv_to_l_@f2,w
 12159  24E2  00A0               	movwf	??__tdiv_to_l_
 12160  24E3  0877               	movf	__tdiv_to_l_@f2+1,w
 12161  24E4  00A1               	movwf	??__tdiv_to_l_+1
 12162  24E5  0878               	movf	__tdiv_to_l_@f2+2,w
 12163  24E6  00A2               	movwf	??__tdiv_to_l_+2
 12164  24E7  1003               	clrc
 12165  24E8  0D21               	rlf	??__tdiv_to_l_+1,w
 12166  24E9  0D22               	rlf	??__tdiv_to_l_+2,w
 12167  24EA  00A3               	movwf	??__tdiv_to_l_+3
 12168  24EB  0823               	movf	??__tdiv_to_l_+3,w
 12169  24EC  00A8               	movwf	__tdiv_to_l_@cntr
 12170  24ED  0828               	movf	__tdiv_to_l_@cntr,w
 12171  24EE  1D03               	btfss	3,2
 12172  24EF  2CF9               	goto	l1188
 12173  24F0  3000               	movlw	0
 12174  24F1  00F5               	movwf	?__tdiv_to_l_+3
 12175  24F2  3000               	movlw	0
 12176  24F3  00F4               	movwf	?__tdiv_to_l_+2
 12177  24F4  3000               	movlw	0
 12178  24F5  00F3               	movwf	?__tdiv_to_l_+1
 12179  24F6  3000               	movlw	0
 12180  24F7  00F2               	movwf	?__tdiv_to_l_
 12181  24F8  0008               	return
 12182  24F9                     l1188:	
 12183  24F9  17F3               	bsf	__tdiv_to_l_@f1+1,7
 12184  24FA  30FF               	movlw	255
 12185  24FB  05F2               	andwf	__tdiv_to_l_@f1,f
 12186  24FC  30FF               	movlw	255
 12187  24FD  05F3               	andwf	__tdiv_to_l_@f1+1,f
 12188  24FE  3000               	movlw	0
 12189  24FF  05F4               	andwf	__tdiv_to_l_@f1+2,f
 12190  2500  17F7               	bsf	__tdiv_to_l_@f2+1,7
 12191  2501  30FF               	movlw	255
 12192  2502  05F6               	andwf	__tdiv_to_l_@f2,f
 12193  2503  30FF               	movlw	255
 12194  2504  05F7               	andwf	__tdiv_to_l_@f2+1,f
 12195  2505  3000               	movlw	0
 12196  2506  05F8               	andwf	__tdiv_to_l_@f2+2,f
 12197  2507  3000               	movlw	0
 12198  2508  00A7               	movwf	__tdiv_to_l_@quot+3
 12199  2509  3000               	movlw	0
 12200  250A  00A6               	movwf	__tdiv_to_l_@quot+2
 12201  250B  3000               	movlw	0
 12202  250C  00A5               	movwf	__tdiv_to_l_@quot+1
 12203  250D  3000               	movlw	0
 12204  250E  00A4               	movwf	__tdiv_to_l_@quot
 12205  250F  307F               	movlw	127
 12206  2510  02A9               	subwf	__tdiv_to_l_@exp1,f
 12207  2511  3098               	movlw	152
 12208  2512  0728               	addwf	__tdiv_to_l_@cntr,w
 12209  2513  00A0               	movwf	??__tdiv_to_l_
 12210  2514  0820               	movf	??__tdiv_to_l_,w
 12211  2515  02A9               	subwf	__tdiv_to_l_@exp1,f
 12212  2516  3018               	movlw	24
 12213  2517  00A0               	movwf	??__tdiv_to_l_
 12214  2518  0820               	movf	??__tdiv_to_l_,w
 12215  2519  00A8               	movwf	__tdiv_to_l_@cntr
 12216  251A                     l7122:	
 12217  251A  3001               	movlw	1
 12218  251B                     u9375:	
 12219  251B  35A4               	lslf	__tdiv_to_l_@quot,f
 12220  251C  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12221  251D  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12222  251E  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12223  251F  0B89               	decfsz	9,f
 12224  2520  2D1B               	goto	u9375
 12225  2521  0878               	movf	__tdiv_to_l_@f2+2,w
 12226  2522  0274               	subwf	__tdiv_to_l_@f1+2,w
 12227  2523  1D03               	skipz
 12228  2524  2D2B               	goto	u9385
 12229  2525  0877               	movf	__tdiv_to_l_@f2+1,w
 12230  2526  0273               	subwf	__tdiv_to_l_@f1+1,w
 12231  2527  1D03               	skipz
 12232  2528  2D2B               	goto	u9385
 12233  2529  0876               	movf	__tdiv_to_l_@f2,w
 12234  252A  0272               	subwf	__tdiv_to_l_@f1,w
 12235  252B                     u9385:	
 12236  252B  1C03               	skipc
 12237  252C  2D34               	goto	l7130
 12238  252D  0876               	movf	__tdiv_to_l_@f2,w
 12239  252E  02F2               	subwf	__tdiv_to_l_@f1,f
 12240  252F  0877               	movf	__tdiv_to_l_@f2+1,w
 12241  2530  3BF3               	subwfb	__tdiv_to_l_@f1+1,f
 12242  2531  0878               	movf	__tdiv_to_l_@f2+2,w
 12243  2532  3BF4               	subwfb	__tdiv_to_l_@f1+2,f
 12244  2533  1424               	bsf	__tdiv_to_l_@quot,0
 12245  2534                     l7130:	
 12246  2534  3001               	movlw	1
 12247  2535                     u9395:	
 12248  2535  35F2               	lslf	__tdiv_to_l_@f1,f
 12249  2536  0DF3               	rlf	__tdiv_to_l_@f1+1,f
 12250  2537  0DF4               	rlf	__tdiv_to_l_@f1+2,f
 12251  2538  0B89               	decfsz	9,f
 12252  2539  2D35               	goto	u9395
 12253  253A  3001               	movlw	1
 12254  253B  02A8               	subwf	__tdiv_to_l_@cntr,f
 12255  253C  1D03               	btfss	3,2
 12256  253D  2D1A               	goto	l7122
 12257  253E  1FA9               	btfss	__tdiv_to_l_@exp1,7
 12258  253F  2D5C               	goto	l7142
 12259  2540  0829               	movf	__tdiv_to_l_@exp1,w
 12260  2541  3A80               	xorlw	128
 12261  2542  3E97               	addlw	151
 12262  2543  1803               	skipnc
 12263  2544  2D4E               	goto	l7140
 12264  2545  3000               	movlw	0
 12265  2546  00F5               	movwf	?__tdiv_to_l_+3
 12266  2547  3000               	movlw	0
 12267  2548  00F4               	movwf	?__tdiv_to_l_+2
 12268  2549  3000               	movlw	0
 12269  254A  00F3               	movwf	?__tdiv_to_l_+1
 12270  254B  3000               	movlw	0
 12271  254C  00F2               	movwf	?__tdiv_to_l_
 12272  254D  0008               	return
 12273  254E                     l7140:	
 12274  254E  3001               	movlw	1
 12275  254F                     u9435:	
 12276  254F  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 12277  2550  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 12278  2551  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 12279  2552  0CA4               	rrf	__tdiv_to_l_@quot,f
 12280  2553  0B89               	decfsz	9,f
 12281  2554  2D4F               	goto	u9435
 12282  2555  3001               	movlw	1
 12283  2556  00A0               	movwf	??__tdiv_to_l_
 12284  2557  0820               	movf	??__tdiv_to_l_,w
 12285  2558  07A9               	addwf	__tdiv_to_l_@exp1,f
 12286  2559  1903               	btfsc	3,2
 12287  255A  2D75               	goto	l7150
 12288  255B  2D4E               	goto	l7140
 12289  255C                     l7142:	
 12290  255C  3018               	movlw	24
 12291  255D  0229               	subwf	__tdiv_to_l_@exp1,w
 12292  255E  1C03               	skipc
 12293  255F  2D72               	goto	l1198
 12294  2560  3000               	movlw	0
 12295  2561  00F5               	movwf	?__tdiv_to_l_+3
 12296  2562  3000               	movlw	0
 12297  2563  00F4               	movwf	?__tdiv_to_l_+2
 12298  2564  3000               	movlw	0
 12299  2565  00F3               	movwf	?__tdiv_to_l_+1
 12300  2566  3000               	movlw	0
 12301  2567  00F2               	movwf	?__tdiv_to_l_
 12302  2568  0008               	return
 12303  2569                     l7148:	
 12304  2569  3001               	movlw	1
 12305  256A                     u9465:	
 12306  256A  35A4               	lslf	__tdiv_to_l_@quot,f
 12307  256B  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12308  256C  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12309  256D  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12310  256E  0B89               	decfsz	9,f
 12311  256F  2D6A               	goto	u9465
 12312  2570  3001               	movlw	1
 12313  2571  02A9               	subwf	__tdiv_to_l_@exp1,f
 12314  2572                     l1198:	
 12315  2572  0829               	movf	__tdiv_to_l_@exp1,w
 12316  2573  1D03               	btfss	3,2
 12317  2574  2D69               	goto	l7148
 12318  2575                     l7150:	
 12319  2575  0827               	movf	__tdiv_to_l_@quot+3,w
 12320  2576  00F5               	movwf	?__tdiv_to_l_+3
 12321  2577  0826               	movf	__tdiv_to_l_@quot+2,w
 12322  2578  00F4               	movwf	?__tdiv_to_l_+2
 12323  2579  0825               	movf	__tdiv_to_l_@quot+1,w
 12324  257A  00F3               	movwf	?__tdiv_to_l_+1
 12325  257B  0824               	movf	__tdiv_to_l_@quot,w
 12326  257C  00F2               	movwf	?__tdiv_to_l_
 12327  257D  0008               	return
 12328  257E                     __end_of__tdiv_to_l_:	
 12329                           
 12330                           	psect	text14
 12331  257E                     __ptext14:	
 12332 ;; *************** function __div_to_l_ *****************
 12333 ;; Defined at:
 12334 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12335 ;; Parameters:    Size  Location     Type
 12336 ;;  f1              4    2[COMMON] unsigned long 
 12337 ;;  f2              4    6[COMMON] unsigned long 
 12338 ;; Auto vars:     Size  Location     Type
 12339 ;;  quot            4    5[BANK0 ] unsigned long 
 12340 ;;  exp1            1   10[BANK0 ] unsigned char 
 12341 ;;  cntr            1    9[BANK0 ] unsigned char 
 12342 ;; Return value:  Size  Location     Type
 12343 ;;                  4    2[COMMON] unsigned long 
 12344 ;; Registers used:
 12345 ;;		wreg, status,2, status,0
 12346 ;; Tracked objects:
 12347 ;;		On entry : 0/0
 12348 ;;		On exit  : 0/0
 12349 ;;		Unchanged: 0/0
 12350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12351 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12352 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12353 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12354 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12355 ;;Total ram usage:       19 bytes
 12356 ;; Hardware stack levels used:    1
 12357 ;; Hardware stack levels required when called:    2
 12358 ;; This function calls:
 12359 ;;		Nothing
 12360 ;; This function is called by:
 12361 ;;		_sprintf
 12362 ;; This function uses a non-reentrant model
 12363 ;;
 12364                           
 12365                           
 12366                           ;psect for function __div_to_l_
 12367  257E                     __div_to_l_:	
 12368                           
 12369                           ;incstack = 0
 12370                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 12371  257E  0872               	movf	__div_to_l_@f1,w
 12372  257F  0020               	movlb	0	; select bank0
 12373  2580  00A0               	movwf	??__div_to_l_
 12374  2581  0873               	movf	__div_to_l_@f1+1,w
 12375  2582  00A1               	movwf	??__div_to_l_+1
 12376  2583  0874               	movf	__div_to_l_@f1+2,w
 12377  2584  00A2               	movwf	??__div_to_l_+2
 12378  2585  0875               	movf	__div_to_l_@f1+3,w
 12379  2586  00A3               	movwf	??__div_to_l_+3
 12380  2587  1003               	clrc
 12381  2588  0D22               	rlf	??__div_to_l_+2,w
 12382  2589  0D23               	rlf	??__div_to_l_+3,w
 12383  258A  00A4               	movwf	??__div_to_l_+4
 12384  258B  0824               	movf	??__div_to_l_+4,w
 12385  258C  00AA               	movwf	__div_to_l_@exp1
 12386  258D  082A               	movf	__div_to_l_@exp1,w
 12387  258E  1D03               	btfss	3,2
 12388  258F  2D99               	goto	l7160
 12389  2590  3000               	movlw	0
 12390  2591  00F5               	movwf	?__div_to_l_+3
 12391  2592  3000               	movlw	0
 12392  2593  00F4               	movwf	?__div_to_l_+2
 12393  2594  3000               	movlw	0
 12394  2595  00F3               	movwf	?__div_to_l_+1
 12395  2596  3000               	movlw	0
 12396  2597  00F2               	movwf	?__div_to_l_
 12397  2598  0008               	return
 12398  2599                     l7160:	
 12399  2599  0876               	movf	__div_to_l_@f2,w
 12400  259A  00A0               	movwf	??__div_to_l_
 12401  259B  0877               	movf	__div_to_l_@f2+1,w
 12402  259C  00A1               	movwf	??__div_to_l_+1
 12403  259D  0878               	movf	__div_to_l_@f2+2,w
 12404  259E  00A2               	movwf	??__div_to_l_+2
 12405  259F  0879               	movf	__div_to_l_@f2+3,w
 12406  25A0  00A3               	movwf	??__div_to_l_+3
 12407  25A1  1003               	clrc
 12408  25A2  0D22               	rlf	??__div_to_l_+2,w
 12409  25A3  0D23               	rlf	??__div_to_l_+3,w
 12410  25A4  00A4               	movwf	??__div_to_l_+4
 12411  25A5  0824               	movf	??__div_to_l_+4,w
 12412  25A6  00A9               	movwf	__div_to_l_@cntr
 12413  25A7  0829               	movf	__div_to_l_@cntr,w
 12414  25A8  1D03               	btfss	3,2
 12415  25A9  2DB3               	goto	l1146
 12416  25AA  3000               	movlw	0
 12417  25AB  00F5               	movwf	?__div_to_l_+3
 12418  25AC  3000               	movlw	0
 12419  25AD  00F4               	movwf	?__div_to_l_+2
 12420  25AE  3000               	movlw	0
 12421  25AF  00F3               	movwf	?__div_to_l_+1
 12422  25B0  3000               	movlw	0
 12423  25B1  00F2               	movwf	?__div_to_l_
 12424  25B2  0008               	return
 12425  25B3                     l1146:	
 12426  25B3  17F4               	bsf	__div_to_l_@f1+2,7
 12427  25B4  30FF               	movlw	255
 12428  25B5  05F2               	andwf	__div_to_l_@f1,f
 12429  25B6  30FF               	movlw	255
 12430  25B7  05F3               	andwf	__div_to_l_@f1+1,f
 12431  25B8  30FF               	movlw	255
 12432  25B9  05F4               	andwf	__div_to_l_@f1+2,f
 12433  25BA  3000               	movlw	0
 12434  25BB  05F5               	andwf	__div_to_l_@f1+3,f
 12435  25BC  17F8               	bsf	__div_to_l_@f2+2,7
 12436  25BD  30FF               	movlw	255
 12437  25BE  05F6               	andwf	__div_to_l_@f2,f
 12438  25BF  30FF               	movlw	255
 12439  25C0  05F7               	andwf	__div_to_l_@f2+1,f
 12440  25C1  30FF               	movlw	255
 12441  25C2  05F8               	andwf	__div_to_l_@f2+2,f
 12442  25C3  3000               	movlw	0
 12443  25C4  05F9               	andwf	__div_to_l_@f2+3,f
 12444  25C5  3000               	movlw	0
 12445  25C6  00A8               	movwf	__div_to_l_@quot+3
 12446  25C7  3000               	movlw	0
 12447  25C8  00A7               	movwf	__div_to_l_@quot+2
 12448  25C9  3000               	movlw	0
 12449  25CA  00A6               	movwf	__div_to_l_@quot+1
 12450  25CB  3000               	movlw	0
 12451  25CC  00A5               	movwf	__div_to_l_@quot
 12452  25CD  307F               	movlw	127
 12453  25CE  02AA               	subwf	__div_to_l_@exp1,f
 12454  25CF  30A0               	movlw	160
 12455  25D0  0729               	addwf	__div_to_l_@cntr,w
 12456  25D1  00A0               	movwf	??__div_to_l_
 12457  25D2  0820               	movf	??__div_to_l_,w
 12458  25D3  02AA               	subwf	__div_to_l_@exp1,f
 12459  25D4  3020               	movlw	32
 12460  25D5  00A0               	movwf	??__div_to_l_
 12461  25D6  0820               	movf	??__div_to_l_,w
 12462  25D7  00A9               	movwf	__div_to_l_@cntr
 12463  25D8                     l7174:	
 12464  25D8  3001               	movlw	1
 12465  25D9                     u9505:	
 12466  25D9  35A5               	lslf	__div_to_l_@quot,f
 12467  25DA  0DA6               	rlf	__div_to_l_@quot+1,f
 12468  25DB  0DA7               	rlf	__div_to_l_@quot+2,f
 12469  25DC  0DA8               	rlf	__div_to_l_@quot+3,f
 12470  25DD  0B89               	decfsz	9,f
 12471  25DE  2DD9               	goto	u9505
 12472  25DF  0879               	movf	__div_to_l_@f2+3,w
 12473  25E0  0275               	subwf	__div_to_l_@f1+3,w
 12474  25E1  1D03               	skipz
 12475  25E2  2DED               	goto	u9515
 12476  25E3  0878               	movf	__div_to_l_@f2+2,w
 12477  25E4  0274               	subwf	__div_to_l_@f1+2,w
 12478  25E5  1D03               	skipz
 12479  25E6  2DED               	goto	u9515
 12480  25E7  0877               	movf	__div_to_l_@f2+1,w
 12481  25E8  0273               	subwf	__div_to_l_@f1+1,w
 12482  25E9  1D03               	skipz
 12483  25EA  2DED               	goto	u9515
 12484  25EB  0876               	movf	__div_to_l_@f2,w
 12485  25EC  0272               	subwf	__div_to_l_@f1,w
 12486  25ED                     u9515:	
 12487  25ED  1C03               	skipc
 12488  25EE  2DF8               	goto	l7182
 12489  25EF  0876               	movf	__div_to_l_@f2,w
 12490  25F0  02F2               	subwf	__div_to_l_@f1,f
 12491  25F1  0877               	movf	__div_to_l_@f2+1,w
 12492  25F2  3BF3               	subwfb	__div_to_l_@f1+1,f
 12493  25F3  0878               	movf	__div_to_l_@f2+2,w
 12494  25F4  3BF4               	subwfb	__div_to_l_@f1+2,f
 12495  25F5  0879               	movf	__div_to_l_@f2+3,w
 12496  25F6  3BF5               	subwfb	__div_to_l_@f1+3,f
 12497  25F7  1425               	bsf	__div_to_l_@quot,0
 12498  25F8                     l7182:	
 12499  25F8  3001               	movlw	1
 12500  25F9                     u9525:	
 12501  25F9  35F2               	lslf	__div_to_l_@f1,f
 12502  25FA  0DF3               	rlf	__div_to_l_@f1+1,f
 12503  25FB  0DF4               	rlf	__div_to_l_@f1+2,f
 12504  25FC  0DF5               	rlf	__div_to_l_@f1+3,f
 12505  25FD  0B89               	decfsz	9,f
 12506  25FE  2DF9               	goto	u9525
 12507  25FF  3001               	movlw	1
 12508  2600  02A9               	subwf	__div_to_l_@cntr,f
 12509  2601  1D03               	btfss	3,2
 12510  2602  2DD8               	goto	l7174
 12511  2603  1FAA               	btfss	__div_to_l_@exp1,7
 12512  2604  2E21               	goto	l7194
 12513  2605  082A               	movf	__div_to_l_@exp1,w
 12514  2606  3A80               	xorlw	128
 12515  2607  3E9F               	addlw	159
 12516  2608  1803               	skipnc
 12517  2609  2E13               	goto	l7192
 12518  260A  3000               	movlw	0
 12519  260B  00F5               	movwf	?__div_to_l_+3
 12520  260C  3000               	movlw	0
 12521  260D  00F4               	movwf	?__div_to_l_+2
 12522  260E  3000               	movlw	0
 12523  260F  00F3               	movwf	?__div_to_l_+1
 12524  2610  3000               	movlw	0
 12525  2611  00F2               	movwf	?__div_to_l_
 12526  2612  0008               	return
 12527  2613                     l7192:	
 12528  2613  3001               	movlw	1
 12529  2614                     u9565:	
 12530  2614  36A8               	lsrf	__div_to_l_@quot+3,f
 12531  2615  0CA7               	rrf	__div_to_l_@quot+2,f
 12532  2616  0CA6               	rrf	__div_to_l_@quot+1,f
 12533  2617  0CA5               	rrf	__div_to_l_@quot,f
 12534  2618  0B89               	decfsz	9,f
 12535  2619  2E14               	goto	u9565
 12536  261A  3001               	movlw	1
 12537  261B  00A0               	movwf	??__div_to_l_
 12538  261C  0820               	movf	??__div_to_l_,w
 12539  261D  07AA               	addwf	__div_to_l_@exp1,f
 12540  261E  1903               	btfsc	3,2
 12541  261F  2E3A               	goto	l7202
 12542  2620  2E13               	goto	l7192
 12543  2621                     l7194:	
 12544  2621  3020               	movlw	32
 12545  2622  022A               	subwf	__div_to_l_@exp1,w
 12546  2623  1C03               	skipc
 12547  2624  2E37               	goto	l1156
 12548  2625  3000               	movlw	0
 12549  2626  00F5               	movwf	?__div_to_l_+3
 12550  2627  3000               	movlw	0
 12551  2628  00F4               	movwf	?__div_to_l_+2
 12552  2629  3000               	movlw	0
 12553  262A  00F3               	movwf	?__div_to_l_+1
 12554  262B  3000               	movlw	0
 12555  262C  00F2               	movwf	?__div_to_l_
 12556  262D  0008               	return
 12557  262E                     l7200:	
 12558  262E  3001               	movlw	1
 12559  262F                     u9595:	
 12560  262F  35A5               	lslf	__div_to_l_@quot,f
 12561  2630  0DA6               	rlf	__div_to_l_@quot+1,f
 12562  2631  0DA7               	rlf	__div_to_l_@quot+2,f
 12563  2632  0DA8               	rlf	__div_to_l_@quot+3,f
 12564  2633  0B89               	decfsz	9,f
 12565  2634  2E2F               	goto	u9595
 12566  2635  3001               	movlw	1
 12567  2636  02AA               	subwf	__div_to_l_@exp1,f
 12568  2637                     l1156:	
 12569  2637  082A               	movf	__div_to_l_@exp1,w
 12570  2638  1D03               	btfss	3,2
 12571  2639  2E2E               	goto	l7200
 12572  263A                     l7202:	
 12573  263A  0828               	movf	__div_to_l_@quot+3,w
 12574  263B  00F5               	movwf	?__div_to_l_+3
 12575  263C  0827               	movf	__div_to_l_@quot+2,w
 12576  263D  00F4               	movwf	?__div_to_l_+2
 12577  263E  0826               	movf	__div_to_l_@quot+1,w
 12578  263F  00F3               	movwf	?__div_to_l_+1
 12579  2640  0825               	movf	__div_to_l_@quot,w
 12580  2641  00F2               	movwf	?__div_to_l_
 12581  2642  0008               	return
 12582  2643                     __end_of__div_to_l_:	
 12583                           
 12584                           	psect	text15
 12585  2D39                     __ptext15:	
 12586 ;; *************** function ___llmod *****************
 12587 ;; Defined at:
 12588 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12589 ;; Parameters:    Size  Location     Type
 12590 ;;  divisor         4    6[BANK0 ] unsigned long 
 12591 ;;  dividend        4   10[BANK0 ] unsigned long 
 12592 ;; Auto vars:     Size  Location     Type
 12593 ;;  counter         1   15[BANK0 ] unsigned char 
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  4    6[BANK0 ] unsigned long 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12603 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12606 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12607 ;;Total ram usage:       10 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:    2
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_sprintf
 12614 ;; This function uses a non-reentrant model
 12615 ;;
 12616                           
 12617                           
 12618                           ;psect for function ___llmod
 12619  2D39                     ___llmod:	
 12620                           
 12621                           ;incstack = 0
 12622                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12623  2D39  0020               	movlb	0	; select bank0
 12624  2D3A  0829               	movf	___llmod@divisor+3,w
 12625  2D3B  0428               	iorwf	___llmod@divisor+2,w
 12626  2D3C  0427               	iorwf	___llmod@divisor+1,w
 12627  2D3D  0426               	iorwf	___llmod@divisor,w
 12628  2D3E  1903               	skipnz
 12629  2D3F  2D73               	goto	l7330
 12630  2D40  01AF               	clrf	___llmod@counter
 12631  2D41  0AAF               	incf	___llmod@counter,f
 12632  2D42                     l7320:	
 12633  2D42  1BA9               	btfsc	___llmod@divisor+3,7
 12634  2D43  2D50               	goto	l7322
 12635  2D44  3001               	movlw	1
 12636  2D45                     u9895:	
 12637  2D45  35A6               	lslf	___llmod@divisor,f
 12638  2D46  0DA7               	rlf	___llmod@divisor+1,f
 12639  2D47  0DA8               	rlf	___llmod@divisor+2,f
 12640  2D48  0DA9               	rlf	___llmod@divisor+3,f
 12641  2D49  0B89               	decfsz	9,f
 12642  2D4A  2D45               	goto	u9895
 12643  2D4B  3001               	movlw	1
 12644  2D4C  00AE               	movwf	??___llmod
 12645  2D4D  082E               	movf	??___llmod,w
 12646  2D4E  07AF               	addwf	___llmod@counter,f
 12647  2D4F  2D42               	goto	l7320
 12648  2D50                     l7322:	
 12649  2D50  0829               	movf	___llmod@divisor+3,w
 12650  2D51  022D               	subwf	___llmod@dividend+3,w
 12651  2D52  1D03               	skipz
 12652  2D53  2D5E               	goto	u9915
 12653  2D54  0828               	movf	___llmod@divisor+2,w
 12654  2D55  022C               	subwf	___llmod@dividend+2,w
 12655  2D56  1D03               	skipz
 12656  2D57  2D5E               	goto	u9915
 12657  2D58  0827               	movf	___llmod@divisor+1,w
 12658  2D59  022B               	subwf	___llmod@dividend+1,w
 12659  2D5A  1D03               	skipz
 12660  2D5B  2D5E               	goto	u9915
 12661  2D5C  0826               	movf	___llmod@divisor,w
 12662  2D5D  022A               	subwf	___llmod@dividend,w
 12663  2D5E                     u9915:	
 12664  2D5E  1C03               	skipc
 12665  2D5F  2D68               	goto	l7326
 12666  2D60  0826               	movf	___llmod@divisor,w
 12667  2D61  02AA               	subwf	___llmod@dividend,f
 12668  2D62  0827               	movf	___llmod@divisor+1,w
 12669  2D63  3BAB               	subwfb	___llmod@dividend+1,f
 12670  2D64  0828               	movf	___llmod@divisor+2,w
 12671  2D65  3BAC               	subwfb	___llmod@dividend+2,f
 12672  2D66  0829               	movf	___llmod@divisor+3,w
 12673  2D67  3BAD               	subwfb	___llmod@dividend+3,f
 12674  2D68                     l7326:	
 12675  2D68  3001               	movlw	1
 12676  2D69                     u9925:	
 12677  2D69  36A9               	lsrf	___llmod@divisor+3,f
 12678  2D6A  0CA8               	rrf	___llmod@divisor+2,f
 12679  2D6B  0CA7               	rrf	___llmod@divisor+1,f
 12680  2D6C  0CA6               	rrf	___llmod@divisor,f
 12681  2D6D  0B89               	decfsz	9,f
 12682  2D6E  2D69               	goto	u9925
 12683  2D6F  3001               	movlw	1
 12684  2D70  02AF               	subwf	___llmod@counter,f
 12685  2D71  1D03               	btfss	3,2
 12686  2D72  2D50               	goto	l7322
 12687  2D73                     l7330:	
 12688  2D73  082D               	movf	___llmod@dividend+3,w
 12689  2D74  00A9               	movwf	?___llmod+3
 12690  2D75  082C               	movf	___llmod@dividend+2,w
 12691  2D76  00A8               	movwf	?___llmod+2
 12692  2D77  082B               	movf	___llmod@dividend+1,w
 12693  2D78  00A7               	movwf	?___llmod+1
 12694  2D79  082A               	movf	___llmod@dividend,w
 12695  2D7A  00A6               	movwf	?___llmod
 12696  2D7B  0008               	return
 12697  2D7C                     __end_of___llmod:	
 12698                           
 12699                           	psect	text16
 12700  2F04                     __ptext16:	
 12701 ;; *************** function ___lldiv *****************
 12702 ;; Defined at:
 12703 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12704 ;; Parameters:    Size  Location     Type
 12705 ;;  divisor         4    2[COMMON] unsigned long 
 12706 ;;  dividend        4    6[COMMON] unsigned long 
 12707 ;; Auto vars:     Size  Location     Type
 12708 ;;  quotient        4    1[BANK0 ] unsigned long 
 12709 ;;  counter         1    5[BANK0 ] unsigned char 
 12710 ;; Return value:  Size  Location     Type
 12711 ;;                  4    2[COMMON] unsigned long 
 12712 ;; Registers used:
 12713 ;;		wreg, status,2, status,0
 12714 ;; Tracked objects:
 12715 ;;		On entry : 0/0
 12716 ;;		On exit  : 0/0
 12717 ;;		Unchanged: 0/0
 12718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12719 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12720 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12721 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12722 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12723 ;;Total ram usage:       14 bytes
 12724 ;; Hardware stack levels used:    1
 12725 ;; Hardware stack levels required when called:    2
 12726 ;; This function calls:
 12727 ;;		Nothing
 12728 ;; This function is called by:
 12729 ;;		_sprintf
 12730 ;; This function uses a non-reentrant model
 12731 ;;
 12732                           
 12733                           
 12734                           ;psect for function ___lldiv
 12735  2F04                     ___lldiv:	
 12736                           
 12737                           ;incstack = 0
 12738                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12739  2F04  3000               	movlw	0
 12740  2F05  0020               	movlb	0	; select bank0
 12741  2F06  00A4               	movwf	___lldiv@quotient+3
 12742  2F07  3000               	movlw	0
 12743  2F08  00A3               	movwf	___lldiv@quotient+2
 12744  2F09  3000               	movlw	0
 12745  2F0A  00A2               	movwf	___lldiv@quotient+1
 12746  2F0B  3000               	movlw	0
 12747  2F0C  00A1               	movwf	___lldiv@quotient
 12748  2F0D  0875               	movf	___lldiv@divisor+3,w
 12749  2F0E  0474               	iorwf	___lldiv@divisor+2,w
 12750  2F0F  0473               	iorwf	___lldiv@divisor+1,w
 12751  2F10  0472               	iorwf	___lldiv@divisor,w
 12752  2F11  1903               	skipnz
 12753  2F12  2F4E               	goto	l7310
 12754  2F13  01A5               	clrf	___lldiv@counter
 12755  2F14  0AA5               	incf	___lldiv@counter,f
 12756  2F15                     l7296:	
 12757  2F15  1BF5               	btfsc	___lldiv@divisor+3,7
 12758  2F16  2F23               	goto	l7298
 12759  2F17  3001               	movlw	1
 12760  2F18                     u9825:	
 12761  2F18  35F2               	lslf	___lldiv@divisor,f
 12762  2F19  0DF3               	rlf	___lldiv@divisor+1,f
 12763  2F1A  0DF4               	rlf	___lldiv@divisor+2,f
 12764  2F1B  0DF5               	rlf	___lldiv@divisor+3,f
 12765  2F1C  0B89               	decfsz	9,f
 12766  2F1D  2F18               	goto	u9825
 12767  2F1E  3001               	movlw	1
 12768  2F1F  00A0               	movwf	??___lldiv
 12769  2F20  0820               	movf	??___lldiv,w
 12770  2F21  07A5               	addwf	___lldiv@counter,f
 12771  2F22  2F15               	goto	l7296
 12772  2F23                     l7298:	
 12773  2F23  3001               	movlw	1
 12774  2F24                     u9845:	
 12775  2F24  35A1               	lslf	___lldiv@quotient,f
 12776  2F25  0DA2               	rlf	___lldiv@quotient+1,f
 12777  2F26  0DA3               	rlf	___lldiv@quotient+2,f
 12778  2F27  0DA4               	rlf	___lldiv@quotient+3,f
 12779  2F28  0B89               	decfsz	9,f
 12780  2F29  2F24               	goto	u9845
 12781  2F2A  0875               	movf	___lldiv@divisor+3,w
 12782  2F2B  0279               	subwf	___lldiv@dividend+3,w
 12783  2F2C  1D03               	skipz
 12784  2F2D  2F38               	goto	u9855
 12785  2F2E  0874               	movf	___lldiv@divisor+2,w
 12786  2F2F  0278               	subwf	___lldiv@dividend+2,w
 12787  2F30  1D03               	skipz
 12788  2F31  2F38               	goto	u9855
 12789  2F32  0873               	movf	___lldiv@divisor+1,w
 12790  2F33  0277               	subwf	___lldiv@dividend+1,w
 12791  2F34  1D03               	skipz
 12792  2F35  2F38               	goto	u9855
 12793  2F36  0872               	movf	___lldiv@divisor,w
 12794  2F37  0276               	subwf	___lldiv@dividend,w
 12795  2F38                     u9855:	
 12796  2F38  1C03               	skipc
 12797  2F39  2F43               	goto	l7306
 12798  2F3A  0872               	movf	___lldiv@divisor,w
 12799  2F3B  02F6               	subwf	___lldiv@dividend,f
 12800  2F3C  0873               	movf	___lldiv@divisor+1,w
 12801  2F3D  3BF7               	subwfb	___lldiv@dividend+1,f
 12802  2F3E  0874               	movf	___lldiv@divisor+2,w
 12803  2F3F  3BF8               	subwfb	___lldiv@dividend+2,f
 12804  2F40  0875               	movf	___lldiv@divisor+3,w
 12805  2F41  3BF9               	subwfb	___lldiv@dividend+3,f
 12806  2F42  1421               	bsf	___lldiv@quotient,0
 12807  2F43                     l7306:	
 12808  2F43  3001               	movlw	1
 12809  2F44                     u9865:	
 12810  2F44  36F5               	lsrf	___lldiv@divisor+3,f
 12811  2F45  0CF4               	rrf	___lldiv@divisor+2,f
 12812  2F46  0CF3               	rrf	___lldiv@divisor+1,f
 12813  2F47  0CF2               	rrf	___lldiv@divisor,f
 12814  2F48  0B89               	decfsz	9,f
 12815  2F49  2F44               	goto	u9865
 12816  2F4A  3001               	movlw	1
 12817  2F4B  02A5               	subwf	___lldiv@counter,f
 12818  2F4C  1D03               	btfss	3,2
 12819  2F4D  2F23               	goto	l7298
 12820  2F4E                     l7310:	
 12821  2F4E  0824               	movf	___lldiv@quotient+3,w
 12822  2F4F  00F5               	movwf	?___lldiv+3
 12823  2F50  0823               	movf	___lldiv@quotient+2,w
 12824  2F51  00F4               	movwf	?___lldiv+2
 12825  2F52  0822               	movf	___lldiv@quotient+1,w
 12826  2F53  00F3               	movwf	?___lldiv+1
 12827  2F54  0821               	movf	___lldiv@quotient,w
 12828  2F55  00F2               	movwf	?___lldiv
 12829  2F56  0008               	return
 12830  2F57                     __end_of___lldiv:	
 12831                           
 12832                           	psect	text17
 12833  2BA9                     __ptext17:	
 12834 ;; *************** function ___flsub *****************
 12835 ;; Defined at:
 12836 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12837 ;; Parameters:    Size  Location     Type
 12838 ;;  a               4   53[BANK1 ] unsigned long 
 12839 ;;  b               4   57[BANK1 ] unsigned long 
 12840 ;; Auto vars:     Size  Location     Type
 12841 ;;		None
 12842 ;; Return value:  Size  Location     Type
 12843 ;;                  4   53[BANK1 ] unsigned long 
 12844 ;; Registers used:
 12845 ;;		wreg, status,2, status,0, pclath, cstack
 12846 ;; Tracked objects:
 12847 ;;		On entry : 0/0
 12848 ;;		On exit  : 0/0
 12849 ;;		Unchanged: 0/0
 12850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12851 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12854 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12855 ;;Total ram usage:        8 bytes
 12856 ;; Hardware stack levels used:    1
 12857 ;; Hardware stack levels required when called:    3
 12858 ;; This function calls:
 12859 ;;		___fladd
 12860 ;; This function is called by:
 12861 ;;		_sprintf
 12862 ;; This function uses a non-reentrant model
 12863 ;;
 12864                           
 12865                           
 12866                           ;psect for function ___flsub
 12867  2BA9                     ___flsub:	
 12868                           
 12869                           ;incstack = 0
 12870                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12871  2BA9  3080               	movlw	128
 12872  2BAA  0021               	movlb	1	; select bank1
 12873  2BAB  06D8               	xorwf	(___flsub@a+3)^(0+128),f
 12874  2BAC  085C               	movf	(___flsub@b+3)^(0+128),w
 12875  2BAD  00C0               	movwf	(___fladd@b+3)^(0+128)
 12876  2BAE  085B               	movf	(___flsub@b+2)^(0+128),w
 12877  2BAF  00BF               	movwf	(___fladd@b+2)^(0+128)
 12878  2BB0  085A               	movf	(___flsub@b+1)^(0+128),w
 12879  2BB1  00BE               	movwf	(___fladd@b+1)^(0+128)
 12880  2BB2  0859               	movf	___flsub@b^(0+128),w
 12881  2BB3  00BD               	movwf	___fladd@b^(0+128)
 12882  2BB4  0858               	movf	(___flsub@a+3)^(0+128),w
 12883  2BB5  00C4               	movwf	(___fladd@a+3)^(0+128)
 12884  2BB6  0857               	movf	(___flsub@a+2)^(0+128),w
 12885  2BB7  00C3               	movwf	(___fladd@a+2)^(0+128)
 12886  2BB8  0856               	movf	(___flsub@a+1)^(0+128),w
 12887  2BB9  00C2               	movwf	(___fladd@a+1)^(0+128)
 12888  2BBA  0855               	movf	___flsub@a^(0+128),w
 12889  2BBB  00C1               	movwf	___fladd@a^(0+128)
 12890  2BBC  3185  25F9         	fcall	___fladd
 12891  2BBE  0021               	movlb	1	; select bank1
 12892  2BBF  0840               	movf	(?___fladd+3)^(0+128),w
 12893  2BC0  00D8               	movwf	(?___flsub+3)^(0+128)
 12894  2BC1  083F               	movf	(?___fladd+2)^(0+128),w
 12895  2BC2  00D7               	movwf	(?___flsub+2)^(0+128)
 12896  2BC3  083E               	movf	(?___fladd+1)^(0+128),w
 12897  2BC4  00D6               	movwf	(?___flsub+1)^(0+128)
 12898  2BC5  083D               	movf	?___fladd^(0+128),w
 12899  2BC6  00D5               	movwf	?___flsub^(0+128)
 12900  2BC7  0008               	return
 12901  2BC8                     __end_of___flsub:	
 12902                           
 12903                           	psect	text18
 12904  2ADB                     __ptext18:	
 12905 ;; *************** function ___flneg *****************
 12906 ;; Defined at:
 12907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 12908 ;; Parameters:    Size  Location     Type
 12909 ;;  f1              4    2[COMMON] unsigned long 
 12910 ;; Auto vars:     Size  Location     Type
 12911 ;;		None
 12912 ;; Return value:  Size  Location     Type
 12913 ;;                  4    2[COMMON] unsigned long 
 12914 ;; Registers used:
 12915 ;;		wreg
 12916 ;; Tracked objects:
 12917 ;;		On entry : 0/0
 12918 ;;		On exit  : 0/0
 12919 ;;		Unchanged: 0/0
 12920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12921 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12925 ;;Total ram usage:        4 bytes
 12926 ;; Hardware stack levels used:    1
 12927 ;; Hardware stack levels required when called:    2
 12928 ;; This function calls:
 12929 ;;		Nothing
 12930 ;; This function is called by:
 12931 ;;		_writeVoltages
 12932 ;;		_sprintf
 12933 ;; This function uses a non-reentrant model
 12934 ;;
 12935                           
 12936                           
 12937                           ;psect for function ___flneg
 12938  2ADB                     ___flneg:	
 12939                           
 12940                           ;incstack = 0
 12941                           ; Regs used in ___flneg: [wreg]
 12942  2ADB  0875               	movf	___flneg@f1+3,w
 12943  2ADC  0474               	iorwf	___flneg@f1+2,w
 12944  2ADD  0473               	iorwf	___flneg@f1+1,w
 12945  2ADE  0472               	iorwf	___flneg@f1,w
 12946  2ADF  1903               	skipnz
 12947  2AE0  0008               	return
 12948  2AE1  3080               	movlw	128
 12949  2AE2  06F5               	xorwf	___flneg@f1+3,f
 12950  2AE3  0008               	return
 12951  2AE4                     __end_of___flneg:	
 12952                           
 12953                           	psect	text19
 12954  2E10                     __ptext19:	
 12955 ;; *************** function _sumVoltages *****************
 12956 ;; Defined at:
 12957 ;;		line 79 in file "ltc6804.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;  voltages        1    wreg     PTR float 
 12960 ;;		 -> main@voltages(48), 
 12961 ;;  numVoltages     2   76[BANK0 ] int 
 12962 ;; Auto vars:     Size  Location     Type
 12963 ;;  voltages        1   13[BANK1 ] PTR float 
 12964 ;;		 -> main@voltages(48), 
 12965 ;;  data            8    5[BANK1 ] unsigned char [8]
 12966 ;;  totalVoltage    2   14[BANK1 ] unsigned int 
 12967 ;; Return value:  Size  Location     Type
 12968 ;;                  4   76[BANK0 ] float 
 12969 ;; Registers used:
 12970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12971 ;; Tracked objects:
 12972 ;;		On entry : 0/0
 12973 ;;		On exit  : 0/0
 12974 ;;		Unchanged: 0/0
 12975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12976 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12977 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12979 ;;      Totals:         0       4      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12980 ;;Total ram usage:       20 bytes
 12981 ;; Hardware stack levels used:    1
 12982 ;; Hardware stack levels required when called:    5
 12983 ;; This function calls:
 12984 ;;		_LTC6804_adstat
 12985 ;;		_LTC6804_rdstat_reg
 12986 ;;		___flmul
 12987 ;;		___xxtofl
 12988 ;; This function is called by:
 12989 ;;		_main
 12990 ;;		_startUp
 12991 ;; This function uses a non-reentrant model
 12992 ;;
 12993                           
 12994                           
 12995                           ;psect for function _sumVoltages
 12996  2E10                     _sumVoltages:	
 12997                           
 12998                           ;ltc6804.c: 85: char data[8];
 12999                           ;ltc6804.c: 86: LTC6804_adstat();
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _sumVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13003  2E10  31AC  248E  31AE   	fcall	_LTC6804_adstat
 13004                           
 13005                           ;ltc6804.c: 87: _delay((unsigned long)((100)*(32000000/4000000.0)));
 13006  2E13  30A0               	movlw	160
 13007  2E14                     u11707:	
 13008  2E14  3200               	nop2
 13009  2E15  0B89               	decfsz	9,f
 13010  2E16  2E14               	goto	u11707
 13011                           
 13012                           ;ltc6804.c: 88: LTC6804_rdstat_reg(1, 1, data);
 13013  2E17  0020               	movlb	0	; select bank0
 13014  2E18  01AF               	clrf	LTC6804_rdstat_reg@total_ic
 13015  2E19  0AAF               	incf	LTC6804_rdstat_reg@total_ic,f
 13016  2E1A  30A5               	movlw	(low (sumVoltages@data| 0))& (0+255)
 13017  2E1B  0021               	movlb	1	; select bank1
 13018  2E1C  00A0               	movwf	??_sumVoltages^(0+128)
 13019  2E1D  0820               	movf	??_sumVoltages^(0+128),w
 13020  2E1E  0020               	movlb	0	; select bank0
 13021  2E1F  00B0               	movwf	LTC6804_rdstat_reg@data
 13022  2E20  3001               	movlw	1
 13023  2E21  31AE  2660  31AE   	fcall	_LTC6804_rdstat_reg
 13024                           
 13025                           ;ltc6804.c: 90: unsigned int totalVoltage = (data[1] << 8) | data[0];
 13026  2E24  0021               	movlb	1	; select bank1
 13027  2E25  0825               	movf	sumVoltages@data^(0+128),w
 13028  2E26  00A0               	movwf	??_sumVoltages^(0+128)
 13029  2E27  01A1               	clrf	(??_sumVoltages^(0+128)+1)
 13030  2E28  0826               	movf	(sumVoltages@data^(0+128)+1),w
 13031  2E29  00A2               	movwf	(??_sumVoltages+2)^(0+128)
 13032  2E2A  01A3               	clrf	((??_sumVoltages+2)^(0+128)+1)
 13033  2E2B  0822               	movf	(??_sumVoltages+2)^(0+128),w
 13034  2E2C  00A3               	movwf	((??_sumVoltages+2)^(0+128)+1)
 13035  2E2D  01A2               	clrf	(??_sumVoltages+2)^(0+128)
 13036  2E2E  0820               	movf	??_sumVoltages^(0+128),w
 13037  2E2F  0422               	iorwf	(??_sumVoltages+2)^(0+128),w
 13038  2E30  00AE               	movwf	sumVoltages@totalVoltage^(0+128)
 13039  2E31  0821               	movf	(??_sumVoltages+1)^(0+128),w
 13040  2E32  0423               	iorwf	(??_sumVoltages+3)^(0+128),w
 13041  2E33  00AF               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 13042                           
 13043                           ;ltc6804.c: 92: return ((float)totalVoltage*0.002);
 13044  2E34  303B               	movlw	59
 13045  2E35  0020               	movlb	0	; select bank0
 13046  2E36  00D5               	movwf	___flmul@b+3
 13047  2E37  3003               	movlw	3
 13048  2E38  00D4               	movwf	___flmul@b+2
 13049  2E39  3012               	movlw	18
 13050  2E3A  00D3               	movwf	___flmul@b+1
 13051  2E3B  306F               	movlw	111
 13052  2E3C  00D2               	movwf	___flmul@b
 13053  2E3D  0021               	movlb	1	; select bank1
 13054  2E3E  082E               	movf	sumVoltages@totalVoltage^(0+128),w
 13055  2E3F  0020               	movlb	0	; select bank0
 13056  2E40  00AE               	movwf	___xxtofl@val
 13057  2E41  0021               	movlb	1	; select bank1
 13058  2E42  082F               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 13059  2E43  0020               	movlb	0	; select bank0
 13060  2E44  00AF               	movwf	___xxtofl@val+1
 13061  2E45  01B0               	clrf	___xxtofl@val+2
 13062  2E46  01B1               	clrf	___xxtofl@val+3
 13063  2E47  3000               	movlw	0
 13064  2E48  31A3  2381  31AE   	fcall	___xxtofl
 13065  2E4B  0020               	movlb	0	; select bank0
 13066  2E4C  0831               	movf	?___xxtofl+3,w
 13067  2E4D  00D9               	movwf	___flmul@a+3
 13068  2E4E  0830               	movf	?___xxtofl+2,w
 13069  2E4F  00D8               	movwf	___flmul@a+2
 13070  2E50  082F               	movf	?___xxtofl+1,w
 13071  2E51  00D7               	movwf	___flmul@a+1
 13072  2E52  082E               	movf	?___xxtofl,w
 13073  2E53  00D6               	movwf	___flmul@a
 13074  2E54  3183  23CD         	fcall	___flmul
 13075  2E56  0020               	movlb	0	; select bank0
 13076  2E57  0855               	movf	?___flmul+3,w
 13077  2E58  00EF               	movwf	?_sumVoltages+3
 13078  2E59  0854               	movf	?___flmul+2,w
 13079  2E5A  00EE               	movwf	?_sumVoltages+2
 13080  2E5B  0853               	movf	?___flmul+1,w
 13081  2E5C  00ED               	movwf	?_sumVoltages+1
 13082  2E5D  0852               	movf	?___flmul,w
 13083  2E5E  00EC               	movwf	?_sumVoltages
 13084  2E5F  0008               	return
 13085  2E60                     __end_of_sumVoltages:	
 13086                           
 13087                           	psect	text20
 13088  2E60                     __ptext20:	
 13089 ;; *************** function _LTC6804_rdstat_reg *****************
 13090 ;; Defined at:
 13091 ;;		line 222 in file "ltc6804.c"
 13092 ;; Parameters:    Size  Location     Type
 13093 ;;  reg             1    wreg     unsigned char 
 13094 ;;  total_ic        1   15[BANK0 ] unsigned char 
 13095 ;;  data            1   16[BANK0 ] PTR unsigned char 
 13096 ;;		 -> sumVoltages@data(8), 
 13097 ;; Auto vars:     Size  Location     Type
 13098 ;;  reg             1   21[BANK0 ] unsigned char 
 13099 ;;  cmd             4   24[BANK0 ] unsigned char [4]
 13100 ;;  cmd_pec         2   22[BANK0 ] int 
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13111 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13112 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13113 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13114 ;;Total ram usage:       13 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; Hardware stack levels required when called:    4
 13117 ;; This function calls:
 13118 ;;		___bmul
 13119 ;;		_pec15_calc
 13120 ;;		_spi_write_read
 13121 ;;		_wakeup_idle
 13122 ;; This function is called by:
 13123 ;;		_sumVoltages
 13124 ;; This function uses a non-reentrant model
 13125 ;;
 13126                           
 13127                           
 13128                           ;psect for function _LTC6804_rdstat_reg
 13129  2E60                     _LTC6804_rdstat_reg:	
 13130                           
 13131                           ;incstack = 0
 13132                           ; Regs used in _LTC6804_rdstat_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13133                           ;LTC6804_rdstat_reg@reg stored from wreg
 13134  2E60  0020               	movlb	0	; select bank0
 13135  2E61  00B5               	movwf	LTC6804_rdstat_reg@reg
 13136                           
 13137                           ;ltc6804.c: 227: const char REG_LEN = 8;
 13138                           ;ltc6804.c: 228: char cmd[4];
 13139                           ;ltc6804.c: 229: int cmd_pec;
 13140                           ;ltc6804.c: 232: if (reg == 1)
 13141  2E62  0335               	decf	LTC6804_rdstat_reg@reg,w
 13142  2E63  1D03               	btfss	3,2
 13143  2E64  2E67               	goto	l7912
 13144                           
 13145                           ;ltc6804.c: 233: {
 13146                           ;ltc6804.c: 234: cmd[1] = 0x10;
 13147  2E65  3010               	movlw	16
 13148  2E66  2E6C               	goto	L9
 13149  2E67                     l7912:	
 13150                           ;ltc6804.c: 236: }
 13151                           
 13152                           ;ltc6804.c: 235: cmd[0] = 0x00;
 13153                           
 13154                           
 13155                           ;ltc6804.c: 237: else if(reg == 2)
 13156  2E67  3002               	movlw	2
 13157  2E68  0635               	xorwf	LTC6804_rdstat_reg@reg,w
 13158  2E69  1D03               	btfss	3,2
 13159  2E6A  2E71               	goto	l7918
 13160                           
 13161                           ;ltc6804.c: 238: {
 13162                           ;ltc6804.c: 239: cmd[1] = 0x12;
 13163  2E6B  3012               	movlw	18
 13164  2E6C                     L9:	
 13165  2E6C  00B1               	movwf	??_LTC6804_rdstat_reg
 13166  2E6D  0831               	movf	??_LTC6804_rdstat_reg,w
 13167  2E6E  00B9               	movwf	LTC6804_rdstat_reg@cmd+1
 13168                           
 13169                           ;ltc6804.c: 240: cmd[0] = 0x00;
 13170  2E6F  01B8               	clrf	LTC6804_rdstat_reg@cmd
 13171                           
 13172                           ;ltc6804.c: 241: }
 13173  2E70  2E79               	goto	l7920
 13174  2E71                     l7918:	
 13175                           
 13176                           ;ltc6804.c: 242: else
 13177                           ;ltc6804.c: 243: {
 13178                           ;ltc6804.c: 244: cmd[1] = 0x22;
 13179  2E71  3022               	movlw	34
 13180  2E72  00B1               	movwf	??_LTC6804_rdstat_reg
 13181  2E73  0831               	movf	??_LTC6804_rdstat_reg,w
 13182  2E74  00B9               	movwf	LTC6804_rdstat_reg@cmd+1
 13183                           
 13184                           ;ltc6804.c: 245: cmd[0] = 0x07;
 13185  2E75  3007               	movlw	7
 13186  2E76  00B1               	movwf	??_LTC6804_rdstat_reg
 13187  2E77  0831               	movf	??_LTC6804_rdstat_reg,w
 13188  2E78  00B8               	movwf	LTC6804_rdstat_reg@cmd
 13189  2E79                     l7920:	
 13190                           
 13191                           ;ltc6804.c: 246: }
 13192                           ;ltc6804.c: 248: cmd_pec = pec15_calc(2, cmd);
 13193  2E79  3038               	movlw	low LTC6804_rdstat_reg@cmd
 13194  2E7A  00F8               	movwf	pec15_calc@data
 13195  2E7B  3000               	movlw	high LTC6804_rdstat_reg@cmd
 13196  2E7C  00F9               	movwf	pec15_calc@data+1
 13197  2E7D  3002               	movlw	2
 13198  2E7E  31AD  25C1  31AE   	fcall	_pec15_calc
 13199  2E81  0879               	movf	?_pec15_calc+1,w
 13200  2E82  0020               	movlb	0	; select bank0
 13201  2E83  00B7               	movwf	LTC6804_rdstat_reg@cmd_pec+1
 13202  2E84  0878               	movf	?_pec15_calc,w
 13203  2E85  00B6               	movwf	LTC6804_rdstat_reg@cmd_pec
 13204                           
 13205                           ;ltc6804.c: 249: cmd[2] = (char)(cmd_pec >> 8);
 13206  2E86  0837               	movf	LTC6804_rdstat_reg@cmd_pec+1,w
 13207  2E87  00B1               	movwf	??_LTC6804_rdstat_reg
 13208  2E88  0831               	movf	??_LTC6804_rdstat_reg,w
 13209  2E89  00BA               	movwf	LTC6804_rdstat_reg@cmd+2
 13210                           
 13211                           ;ltc6804.c: 250: cmd[3] = (char)(cmd_pec);
 13212  2E8A  0836               	movf	LTC6804_rdstat_reg@cmd_pec,w
 13213  2E8B  00B1               	movwf	??_LTC6804_rdstat_reg
 13214  2E8C  0831               	movf	??_LTC6804_rdstat_reg,w
 13215  2E8D  00BB               	movwf	LTC6804_rdstat_reg@cmd+3
 13216                           
 13217                           ;ltc6804.c: 253: wakeup_idle ();
 13218  2E8E  31AA  22D2  31AE   	fcall	_wakeup_idle
 13219                           
 13220                           ;ltc6804.c: 255: LATDbits.LATD3 = 0;
 13221  2E91  0022               	movlb	2	; select bank2
 13222  2E92  118F               	bcf	15,3	;volatile
 13223                           
 13224                           ;ltc6804.c: 256: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 13225  2E93  3004               	movlw	4
 13226  2E94  0020               	movlb	0	; select bank0
 13227  2E95  00B1               	movwf	??_LTC6804_rdstat_reg
 13228  2E96  0831               	movf	??_LTC6804_rdstat_reg,w
 13229  2E97  00F6               	movwf	spi_write_read@tx_len
 13230  2E98  0830               	movf	LTC6804_rdstat_reg@data,w
 13231  2E99  00B2               	movwf	??_LTC6804_rdstat_reg+1
 13232  2E9A  0832               	movf	??_LTC6804_rdstat_reg+1,w
 13233  2E9B  00F7               	movwf	spi_write_read@rx_data
 13234  2E9C  082F               	movf	LTC6804_rdstat_reg@total_ic,w
 13235  2E9D  00B3               	movwf	??_LTC6804_rdstat_reg+2
 13236  2E9E  0833               	movf	??_LTC6804_rdstat_reg+2,w
 13237  2E9F  00F2               	movwf	___bmul@multiplicand
 13238  2EA0  30C2               	movlw	low (LTC6804_rdstat_reg@REG_LEN| (0+32768))
 13239  2EA1  0084               	movwf	4
 13240  2EA2  30B0               	movlw	high (LTC6804_rdstat_reg@REG_LEN| (0+32768))
 13241  2EA3  0085               	movwf	5
 13242  2EA4  0800               	movf	0,w	;code access
 13243  2EA5  31AB  2316  31AE   	fcall	___bmul
 13244  2EA8  0020               	movlb	0	; select bank0
 13245  2EA9  00B4               	movwf	??_LTC6804_rdstat_reg+3
 13246  2EAA  0834               	movf	??_LTC6804_rdstat_reg+3,w
 13247  2EAB  00F8               	movwf	spi_write_read@rx_len
 13248  2EAC  3038               	movlw	(low (LTC6804_rdstat_reg@cmd| 0))& (0+255)
 13249  2EAD  31AC  242E         	fcall	_spi_write_read
 13250                           
 13251                           ;ltc6804.c: 257: LATDbits.LATD3 = 1;
 13252  2EAF  0022               	movlb	2	; select bank2
 13253  2EB0  158F               	bsf	15,3	;volatile
 13254  2EB1  0008               	return
 13255  2EB2                     __end_of_LTC6804_rdstat_reg:	
 13256                           
 13257                           	psect	text21
 13258  2C8E                     __ptext21:	
 13259 ;; *************** function _LTC6804_adstat *****************
 13260 ;; Defined at:
 13261 ;;		line 262 in file "ltc6804.c"
 13262 ;; Parameters:    Size  Location     Type
 13263 ;;		None
 13264 ;; Auto vars:     Size  Location     Type
 13265 ;;  cmd             4   16[BANK0 ] unsigned char [4]
 13266 ;;  cmd_pec         2   20[BANK0 ] int 
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  1    wreg      void 
 13269 ;; Registers used:
 13270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/0
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13277 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13278 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13279 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13280 ;;Total ram usage:        7 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; Hardware stack levels required when called:    4
 13283 ;; This function calls:
 13284 ;;		_pec15_calc
 13285 ;;		_spi_write_array
 13286 ;;		_wakeup_idle
 13287 ;; This function is called by:
 13288 ;;		_sumVoltages
 13289 ;; This function uses a non-reentrant model
 13290 ;;
 13291                           
 13292                           
 13293                           ;psect for function _LTC6804_adstat
 13294  2C8E                     _LTC6804_adstat:	
 13295                           
 13296                           ;ltc6804.c: 265: char cmd[4];
 13297                           ;ltc6804.c: 266: int cmd_pec;
 13298                           ;ltc6804.c: 269: cmd[0] = ADSTAT[0];
 13299                           
 13300                           ;incstack = 0
 13301                           ; Regs used in _LTC6804_adstat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13302  2C8E  0025               	movlb	5	; select bank5
 13303  2C8F  085C               	movf	_ADSTAT^(0+640),w
 13304  2C90  0020               	movlb	0	; select bank0
 13305  2C91  00AF               	movwf	??_LTC6804_adstat
 13306  2C92  082F               	movf	??_LTC6804_adstat,w
 13307  2C93  00B0               	movwf	LTC6804_adstat@cmd
 13308                           
 13309                           ;ltc6804.c: 270: cmd[1] = ADSTAT[1];
 13310  2C94  0025               	movlb	5	; select bank5
 13311  2C95  085D               	movf	(_ADSTAT^(0+640)+1),w
 13312  2C96  0020               	movlb	0	; select bank0
 13313  2C97  00AF               	movwf	??_LTC6804_adstat
 13314  2C98  082F               	movf	??_LTC6804_adstat,w
 13315  2C99  00B1               	movwf	LTC6804_adstat@cmd+1
 13316                           
 13317                           ;ltc6804.c: 273: cmd_pec = pec15_calc(2, ADSTAT);
 13318  2C9A  30DC               	movlw	low _ADSTAT
 13319  2C9B  00F8               	movwf	pec15_calc@data
 13320  2C9C  3002               	movlw	high _ADSTAT
 13321  2C9D  00F9               	movwf	pec15_calc@data+1
 13322  2C9E  3002               	movlw	2
 13323  2C9F  31AD  25C1  31AC   	fcall	_pec15_calc
 13324  2CA2  0879               	movf	?_pec15_calc+1,w
 13325  2CA3  0020               	movlb	0	; select bank0
 13326  2CA4  00B5               	movwf	LTC6804_adstat@cmd_pec+1
 13327  2CA5  0878               	movf	?_pec15_calc,w
 13328  2CA6  00B4               	movwf	LTC6804_adstat@cmd_pec
 13329                           
 13330                           ;ltc6804.c: 274: cmd[2] = (char)(cmd_pec >> 8);
 13331  2CA7  0835               	movf	LTC6804_adstat@cmd_pec+1,w
 13332  2CA8  00AF               	movwf	??_LTC6804_adstat
 13333  2CA9  082F               	movf	??_LTC6804_adstat,w
 13334  2CAA  00B2               	movwf	LTC6804_adstat@cmd+2
 13335                           
 13336                           ;ltc6804.c: 275: cmd[3] = (char)(cmd_pec);
 13337  2CAB  0834               	movf	LTC6804_adstat@cmd_pec,w
 13338  2CAC  00AF               	movwf	??_LTC6804_adstat
 13339  2CAD  082F               	movf	??_LTC6804_adstat,w
 13340  2CAE  00B3               	movwf	LTC6804_adstat@cmd+3
 13341                           
 13342                           ;ltc6804.c: 278: wakeup_idle ();
 13343  2CAF  31AA  22D2  31AC   	fcall	_wakeup_idle
 13344                           
 13345                           ;ltc6804.c: 281: LATDbits.LATD3 = 0;
 13346  2CB2  0022               	movlb	2	; select bank2
 13347  2CB3  118F               	bcf	15,3	;volatile
 13348                           
 13349                           ;ltc6804.c: 282: spi_write_array(4,cmd);
 13350  2CB4  3030               	movlw	(low (LTC6804_adstat@cmd| 0))& (0+255)
 13351  2CB5  0020               	movlb	0	; select bank0
 13352  2CB6  00AF               	movwf	??_LTC6804_adstat
 13353  2CB7  082F               	movf	??_LTC6804_adstat,w
 13354  2CB8  00F5               	movwf	spi_write_array@data
 13355  2CB9  3004               	movlw	4
 13356  2CBA  31AB  235B         	fcall	_spi_write_array
 13357                           
 13358                           ;ltc6804.c: 283: LATDbits.LATD3 = 1;
 13359  2CBC  0022               	movlb	2	; select bank2
 13360  2CBD  158F               	bsf	15,3	;volatile
 13361  2CBE  0008               	return
 13362  2CBF                     __end_of_LTC6804_adstat:	
 13363                           
 13364                           	psect	text22
 13365  2C08                     __ptext22:	
 13366 ;; *************** function _setup *****************
 13367 ;; Defined at:
 13368 ;;		line 222 in file "main.c"
 13369 ;; Parameters:    Size  Location     Type
 13370 ;;		None
 13371 ;; Auto vars:     Size  Location     Type
 13372 ;;		None
 13373 ;; Return value:  Size  Location     Type
 13374 ;;                  1    wreg      void 
 13375 ;; Registers used:
 13376 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13377 ;; Tracked objects:
 13378 ;;		On entry : 0/0
 13379 ;;		On exit  : 0/0
 13380 ;;		Unchanged: 0/0
 13381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13386 ;;Total ram usage:        0 bytes
 13387 ;; Hardware stack levels used:    1
 13388 ;; Hardware stack levels required when called:    6
 13389 ;; This function calls:
 13390 ;;		_LTC6804_initialize
 13391 ;;		_adcSetup
 13392 ;;		_i2cSetup
 13393 ;;		_spiSetup
 13394 ;;		_timerSetup
 13395 ;;		_uartSetup
 13396 ;; This function is called by:
 13397 ;;		_main
 13398 ;; This function uses a non-reentrant model
 13399 ;;
 13400                           
 13401                           
 13402                           ;psect for function _setup
 13403  2C08                     _setup:	
 13404                           
 13405                           ;main.c: 224: TRISDbits.TRISD4 = 0;
 13406                           
 13407                           ;incstack = 0
 13408                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13409  2C08  0021               	movlb	1	; select bank1
 13410  2C09  120F               	bcf	15,4	;volatile
 13411                           
 13412                           ;main.c: 225: TRISDbits.TRISD5 = 0;
 13413  2C0A  128F               	bcf	15,5	;volatile
 13414                           
 13415                           ;main.c: 226: TRISAbits.TRISA0 = 1;
 13416  2C0B  140C               	bsf	12,0	;volatile
 13417                           
 13418                           ;main.c: 229: INTCONbits.GIE = 1;
 13419  2C0C  178B               	bsf	11,7	;volatile
 13420                           
 13421                           ;main.c: 230: INTCONbits.PEIE = 1;
 13422  2C0D  170B               	bsf	11,6	;volatile
 13423                           
 13424                           ;main.c: 233: timerSetup();
 13425  2C0E  31AA  22B3  31AC   	fcall	_timerSetup
 13426                           
 13427                           ;main.c: 236: TRISAbits.TRISA5 = 0;
 13428  2C11  0021               	movlb	1	; select bank1
 13429  2C12  128C               	bcf	12,5	;volatile
 13430                           
 13431                           ;main.c: 237: LATAbits.LATA5 = 1;
 13432  2C13  0022               	movlb	2	; select bank2
 13433  2C14  168C               	bsf	12,5	;volatile
 13434                           
 13435                           ;main.c: 240: TRISAbits.TRISA4 = 0;
 13436  2C15  0021               	movlb	1	; select bank1
 13437  2C16  120C               	bcf	12,4	;volatile
 13438                           
 13439                           ;main.c: 243: adcSetup();
 13440  2C17  31AB  238B  31AC   	fcall	_adcSetup
 13441                           
 13442                           ;main.c: 246: uartSetup();
 13443  2C1A  31AA  22FB  31AC   	fcall	_uartSetup
 13444                           
 13445                           ;main.c: 249: TRISBbits.TRISB6 = 1;
 13446  2C1D  0021               	movlb	1	; select bank1
 13447  2C1E  170D               	bsf	13,6	;volatile
 13448                           
 13449                           ;main.c: 250: TRISBbits.TRISB7 = 1;
 13450  2C1F  178D               	bsf	13,7	;volatile
 13451                           
 13452                           ;main.c: 251: i2cSetup();
 13453  2C20  31AB  2338  31AC   	fcall	_i2cSetup
 13454                           
 13455                           ;main.c: 254: TRISCbits.TRISC5 = 0;
 13456  2C23  0021               	movlb	1	; select bank1
 13457  2C24  128E               	bcf	14,5	;volatile
 13458                           
 13459                           ;main.c: 255: TRISCbits.TRISC4 = 1;
 13460  2C25  160E               	bsf	14,4	;volatile
 13461                           
 13462                           ;main.c: 256: TRISCbits.TRISC3 = 0;
 13463  2C26  118E               	bcf	14,3	;volatile
 13464                           
 13465                           ;main.c: 257: TRISDbits.TRISD3 = 0;
 13466  2C27  118F               	bcf	15,3	;volatile
 13467                           
 13468                           ;main.c: 258: spiSetup();
 13469  2C28  31AB  2349  31AC   	fcall	_spiSetup
 13470                           
 13471                           ;main.c: 261: LTC6804_initialize();
 13472  2C2B  31AB  2327         	fcall	_LTC6804_initialize
 13473  2C2D  0008               	return
 13474  2C2E                     __end_of_setup:	
 13475                           
 13476                           	psect	text23
 13477  2AFB                     __ptext23:	
 13478 ;; *************** function _uartSetup *****************
 13479 ;; Defined at:
 13480 ;;		line 83 in file "uart.c"
 13481 ;; Parameters:    Size  Location     Type
 13482 ;;		None
 13483 ;; Auto vars:     Size  Location     Type
 13484 ;;		None
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1    wreg      void 
 13487 ;; Registers used:
 13488 ;;		wreg, status,2
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13498 ;;Total ram usage:        0 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; Hardware stack levels required when called:    2
 13501 ;; This function calls:
 13502 ;;		Nothing
 13503 ;; This function is called by:
 13504 ;;		_setup
 13505 ;; This function uses a non-reentrant model
 13506 ;;
 13507                           
 13508                           
 13509                           ;psect for function _uartSetup
 13510  2AFB                     _uartSetup:	
 13511                           
 13512                           ;uart.c: 84: TXSTAbits.TX9 = 0;
 13513                           
 13514                           ;incstack = 0
 13515                           ; Regs used in _uartSetup: [wreg+status,2]
 13516  2AFB  0023               	movlb	3	; select bank3
 13517  2AFC  131E               	bcf	30,6	;volatile
 13518                           
 13519                           ;uart.c: 85: TXSTAbits.TXEN = 1;
 13520  2AFD  169E               	bsf	30,5	;volatile
 13521                           
 13522                           ;uart.c: 86: TXSTAbits.SYNC = 0;
 13523  2AFE  121E               	bcf	30,4	;volatile
 13524                           
 13525                           ;uart.c: 87: TXSTAbits.BRGH = 0;
 13526  2AFF  111E               	bcf	30,2	;volatile
 13527                           
 13528                           ;uart.c: 88: RCSTAbits.RX9 = 0;
 13529  2B00  131D               	bcf	29,6	;volatile
 13530                           
 13531                           ;uart.c: 89: RCSTAbits.SPEN = 1;
 13532  2B01  179D               	bsf	29,7	;volatile
 13533                           
 13534                           ;uart.c: 90: SPBRGH = 0;
 13535  2B02  019C               	clrf	28	;volatile
 13536                           
 13537                           ;uart.c: 91: SPBRGL = 2;
 13538  2B03  3002               	movlw	2
 13539  2B04  009B               	movwf	27	;volatile
 13540                           
 13541                           ;uart.c: 92: PIR1bits.TXIF = 0;
 13542  2B05  0020               	movlb	0	; select bank0
 13543  2B06  1211               	bcf	17,4	;volatile
 13544  2B07  0008               	return
 13545  2B08                     __end_of_uartSetup:	
 13546                           
 13547                           	psect	text24
 13548  2AB3                     __ptext24:	
 13549 ;; *************** function _timerSetup *****************
 13550 ;; Defined at:
 13551 ;;		line 10 in file "timer.c"
 13552 ;; Parameters:    Size  Location     Type
 13553 ;;		None
 13554 ;; Auto vars:     Size  Location     Type
 13555 ;;		None
 13556 ;; Return value:  Size  Location     Type
 13557 ;;                  1    wreg      void 
 13558 ;; Registers used:
 13559 ;;		wreg, status,2, status,0, pclath, cstack
 13560 ;; Tracked objects:
 13561 ;;		On entry : 0/0
 13562 ;;		On exit  : 0/0
 13563 ;;		Unchanged: 0/0
 13564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13569 ;;Total ram usage:        0 bytes
 13570 ;; Hardware stack levels used:    1
 13571 ;; Hardware stack levels required when called:    3
 13572 ;; This function calls:
 13573 ;;		_timer0Setup
 13574 ;;		_timer2Setup
 13575 ;; This function is called by:
 13576 ;;		_setup
 13577 ;; This function uses a non-reentrant model
 13578 ;;
 13579                           
 13580                           
 13581                           ;psect for function _timerSetup
 13582  2AB3                     _timerSetup:	
 13583                           
 13584                           ;timer.c: 11: timer0Setup();
 13585                           
 13586                           ;incstack = 0
 13587                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 13588  2AB3  3188  2000  31AA   	fcall	_timer0Setup
 13589                           
 13590                           ;timer.c: 12: timer2Setup();
 13591  2AB6  3187  27F5         	fcall	_timer2Setup
 13592  2AB8  0008               	return
 13593  2AB9                     __end_of_timerSetup:	
 13594                           
 13595                           	psect	text25
 13596  07F5                     __ptext25:	
 13597 ;; *************** function _timer2Setup *****************
 13598 ;; Defined at:
 13599 ;;		line 15 in file "timer.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;		None
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;		None
 13604 ;; Return value:  Size  Location     Type
 13605 ;;                  1    wreg      void 
 13606 ;; Registers used:
 13607 ;;		wreg
 13608 ;; Tracked objects:
 13609 ;;		On entry : 0/0
 13610 ;;		On exit  : 0/0
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13617 ;;Total ram usage:        0 bytes
 13618 ;; Hardware stack levels used:    1
 13619 ;; Hardware stack levels required when called:    2
 13620 ;; This function calls:
 13621 ;;		Nothing
 13622 ;; This function is called by:
 13623 ;;		_timerSetup
 13624 ;; This function uses a non-reentrant model
 13625 ;;
 13626                           
 13627                           
 13628                           ;psect for function _timer2Setup
 13629  07F5                     _timer2Setup:	
 13630                           
 13631                           ;timer.c: 16: CCP2CON = 0x06;
 13632                           
 13633                           ;incstack = 0
 13634                           ; Regs used in _timer2Setup: [wreg]
 13635  07F5  3006               	movlw	6
 13636  07F6  0025               	movlb	5	; select bank5
 13637  07F7  009A               	movwf	26	;volatile
 13638                           
 13639                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 13640  07F8  0021               	movlb	1	; select bank1
 13641  07F9  1491               	bsf	17,1	;volatile
 13642                           
 13643                           ;timer.c: 18: PR2 = 254;
 13644  07FA  30FE               	movlw	254
 13645  07FB  0020               	movlb	0	; select bank0
 13646  07FC  009B               	movwf	27	;volatile
 13647                           
 13648                           ;timer.c: 19: T2CON = 0x4F;
 13649  07FD  304F               	movlw	79
 13650  07FE  009C               	movwf	28	;volatile
 13651  07FF  0008               	return
 13652  0800                     __end_of_timer2Setup:	
 13653                           
 13654                           	psect	text26
 13655  0800                     __ptext26:	
 13656 ;; *************** function _timer0Setup *****************
 13657 ;; Defined at:
 13658 ;;		line 22 in file "timer.c"
 13659 ;; Parameters:    Size  Location     Type
 13660 ;;		None
 13661 ;; Auto vars:     Size  Location     Type
 13662 ;;		None
 13663 ;; Return value:  Size  Location     Type
 13664 ;;                  1    wreg      void 
 13665 ;; Registers used:
 13666 ;;		wreg
 13667 ;; Tracked objects:
 13668 ;;		On entry : 0/0
 13669 ;;		On exit  : 0/0
 13670 ;;		Unchanged: 0/0
 13671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13676 ;;Total ram usage:        0 bytes
 13677 ;; Hardware stack levels used:    1
 13678 ;; Hardware stack levels required when called:    2
 13679 ;; This function calls:
 13680 ;;		Nothing
 13681 ;; This function is called by:
 13682 ;;		_timerSetup
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           
 13687                           ;psect for function _timer0Setup
 13688  0800                     _timer0Setup:	
 13689                           
 13690                           ;timer.c: 23: OPTION_REG = 0b10001110;
 13691                           
 13692                           ;incstack = 0
 13693                           ; Regs used in _timer0Setup: [wreg]
 13694  0800  308E               	movlw	142
 13695  0801  0021               	movlb	1	; select bank1
 13696  0802  0095               	movwf	21	;volatile
 13697                           
 13698                           ;timer.c: 24: INTCONbits.TMR0IE = 1;
 13699  0803  168B               	bsf	11,5	;volatile
 13700  0804  0008               	return
 13701  0805                     __end_of_timer0Setup:	
 13702                           
 13703                           	psect	text27
 13704  2B49                     __ptext27:	
 13705 ;; *************** function _spiSetup *****************
 13706 ;; Defined at:
 13707 ;;		line 12 in file "spi.c"
 13708 ;; Parameters:    Size  Location     Type
 13709 ;;		None
 13710 ;; Auto vars:     Size  Location     Type
 13711 ;;		None
 13712 ;; Return value:  Size  Location     Type
 13713 ;;                  1    wreg      void 
 13714 ;; Registers used:
 13715 ;;		wreg
 13716 ;; Tracked objects:
 13717 ;;		On entry : 0/0
 13718 ;;		On exit  : 0/0
 13719 ;;		Unchanged: 0/0
 13720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13725 ;;Total ram usage:        0 bytes
 13726 ;; Hardware stack levels used:    1
 13727 ;; Hardware stack levels required when called:    2
 13728 ;; This function calls:
 13729 ;;		Nothing
 13730 ;; This function is called by:
 13731 ;;		_setup
 13732 ;; This function uses a non-reentrant model
 13733 ;;
 13734                           
 13735                           
 13736                           ;psect for function _spiSetup
 13737  2B49                     _spiSetup:	
 13738                           
 13739                           ;spi.c: 15: LATDbits.LATD3 = 1;
 13740                           
 13741                           ;incstack = 0
 13742                           ; Regs used in _spiSetup: [wreg]
 13743  2B49  0022               	movlb	2	; select bank2
 13744  2B4A  158F               	bsf	15,3	;volatile
 13745                           
 13746                           ;spi.c: 17: APFCON1bits.SDOSEL = 0;
 13747  2B4B  129D               	bcf	29,5	;volatile
 13748                           
 13749                           ;spi.c: 18: APFCON1bits.SCKSEL = 0;
 13750  2B4C  121D               	bcf	29,4	;volatile
 13751                           
 13752                           ;spi.c: 19: APFCON1bits.SDISEL = 0;
 13753  2B4D  119D               	bcf	29,3	;volatile
 13754                           
 13755                           ;spi.c: 21: SSP1CON3bits.BOEN = 0;
 13756  2B4E  0024               	movlb	4	; select bank4
 13757  2B4F  1217               	bcf	23,4	;volatile
 13758                           
 13759                           ;spi.c: 25: SSP1STATbits.SMP = 1;
 13760  2B50  1794               	bsf	20,7	;volatile
 13761                           
 13762                           ;spi.c: 26: SSP1STATbits.CKE = 1;
 13763  2B51  1714               	bsf	20,6	;volatile
 13764                           
 13765                           ;spi.c: 28: SSP1CON1 = 0x12;
 13766  2B52  3012               	movlw	18
 13767  2B53  0095               	movwf	21	;volatile
 13768                           
 13769                           ;spi.c: 30: PIE1bits.SSP1IE = 1;
 13770  2B54  0021               	movlb	1	; select bank1
 13771  2B55  1591               	bsf	17,3	;volatile
 13772                           
 13773                           ;spi.c: 31: PIR1bits.SSP1IF = 0;
 13774  2B56  0020               	movlb	0	; select bank0
 13775  2B57  1191               	bcf	17,3	;volatile
 13776                           
 13777                           ;spi.c: 33: SSP1CON1bits.SSPEN = 1;
 13778  2B58  0024               	movlb	4	; select bank4
 13779  2B59  1695               	bsf	21,5	;volatile
 13780  2B5A  0008               	return
 13781  2B5B                     __end_of_spiSetup:	
 13782                           
 13783                           	psect	text28
 13784  2B38                     __ptext28:	
 13785 ;; *************** function _i2cSetup *****************
 13786 ;; Defined at:
 13787 ;;		line 40 in file "i2c.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;		None
 13790 ;; Auto vars:     Size  Location     Type
 13791 ;;		None
 13792 ;; Return value:  Size  Location     Type
 13793 ;;                  1    wreg      void 
 13794 ;; Registers used:
 13795 ;;		wreg
 13796 ;; Tracked objects:
 13797 ;;		On entry : 0/0
 13798 ;;		On exit  : 0/0
 13799 ;;		Unchanged: 0/0
 13800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13805 ;;Total ram usage:        0 bytes
 13806 ;; Hardware stack levels used:    1
 13807 ;; Hardware stack levels required when called:    2
 13808 ;; This function calls:
 13809 ;;		Nothing
 13810 ;; This function is called by:
 13811 ;;		_setup
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815                           
 13816                           ;psect for function _i2cSetup
 13817  2B38                     _i2cSetup:	
 13818                           
 13819                           ;i2c.c: 41: APFCON1bits.SDISEL = 1;
 13820                           
 13821                           ;incstack = 0
 13822                           ; Regs used in _i2cSetup: [wreg]
 13823  2B38  0022               	movlb	2	; select bank2
 13824  2B39  159D               	bsf	29,3	;volatile
 13825                           
 13826                           ;i2c.c: 42: APFCON1bits.SCKSEL = 1;
 13827  2B3A  161D               	bsf	29,4	;volatile
 13828                           
 13829                           ;i2c.c: 43: PIE1bits.SSP1IE = 0;
 13830  2B3B  0021               	movlb	1	; select bank1
 13831  2B3C  1191               	bcf	17,3	;volatile
 13832                           
 13833                           ;i2c.c: 44: PIE2bits.BCL1IE = 0;
 13834  2B3D  1192               	bcf	18,3	;volatile
 13835                           
 13836                           ;i2c.c: 45: PIR1bits.SSP1IF = 0;
 13837  2B3E  0020               	movlb	0	; select bank0
 13838  2B3F  1191               	bcf	17,3	;volatile
 13839                           
 13840                           ;i2c.c: 46: PIR2bits.BCL1IF = 0;
 13841  2B40  1192               	bcf	18,3	;volatile
 13842                           
 13843                           ;i2c.c: 47: SSPADD = 0x4F;
 13844  2B41  304F               	movlw	79
 13845  2B42  0024               	movlb	4	; select bank4
 13846  2B43  0092               	movwf	18	;volatile
 13847                           
 13848                           ;i2c.c: 48: SSPCON1 = 0x28;
 13849  2B44  3028               	movlw	40
 13850  2B45  0095               	movwf	21	;volatile
 13851                           
 13852                           ;i2c.c: 49: SSPSTAT = 0xC0;
 13853  2B46  30C0               	movlw	192
 13854  2B47  0094               	movwf	20	;volatile
 13855  2B48  0008               	return
 13856  2B49                     __end_of_i2cSetup:	
 13857                           
 13858                           	psect	text29
 13859  2B8B                     __ptext29:	
 13860 ;; *************** function _adcSetup *****************
 13861 ;; Defined at:
 13862 ;;		line 78 in file "adc.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;		None
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		wreg, status,2
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13880 ;;Total ram usage:        0 bytes
 13881 ;; Hardware stack levels used:    1
 13882 ;; Hardware stack levels required when called:    2
 13883 ;; This function calls:
 13884 ;;		Nothing
 13885 ;; This function is called by:
 13886 ;;		_setup
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           
 13891                           ;psect for function _adcSetup
 13892  2B8B                     _adcSetup:	
 13893                           
 13894                           ;adc.c: 80: TRISBbits.TRISB5 = 0;
 13895                           
 13896                           ;incstack = 0
 13897                           ; Regs used in _adcSetup: [wreg+status,2]
 13898  2B8B  0021               	movlb	1	; select bank1
 13899  2B8C  128D               	bcf	13,5	;volatile
 13900                           
 13901                           ;adc.c: 83: TRISAbits.TRISA0 = 1;
 13902  2B8D  140C               	bsf	12,0	;volatile
 13903                           
 13904                           ;adc.c: 84: TRISAbits.TRISA1 = 1;
 13905  2B8E  148C               	bsf	12,1	;volatile
 13906                           
 13907                           ;adc.c: 85: TRISAbits.TRISA2 = 1;
 13908  2B8F  150C               	bsf	12,2	;volatile
 13909                           
 13910                           ;adc.c: 86: TRISAbits.TRISA3 = 1;
 13911  2B90  158C               	bsf	12,3	;volatile
 13912                           
 13913                           ;adc.c: 89: TRISBbits.TRISB0 = 1;
 13914  2B91  140D               	bsf	13,0	;volatile
 13915                           
 13916                           ;adc.c: 90: TRISBbits.TRISB1 = 1;
 13917  2B92  148D               	bsf	13,1	;volatile
 13918                           
 13919                           ;adc.c: 91: TRISBbits.TRISB2 = 1;
 13920  2B93  150D               	bsf	13,2	;volatile
 13921                           
 13922                           ;adc.c: 92: TRISBbits.TRISB3 = 1;
 13923  2B94  158D               	bsf	13,3	;volatile
 13924                           
 13925                           ;adc.c: 93: TRISBbits.TRISB4 = 1;
 13926  2B95  160D               	bsf	13,4	;volatile
 13927                           
 13928                           ;adc.c: 96: TRISDbits.TRISD1 = 1;
 13929  2B96  148F               	bsf	15,1	;volatile
 13930                           
 13931                           ;adc.c: 99: ANSELA = 0x0F;
 13932  2B97  300F               	movlw	15
 13933  2B98  0023               	movlb	3	; select bank3
 13934  2B99  008C               	movwf	12	;volatile
 13935                           
 13936                           ;adc.c: 100: ANSELB = 0x1F;
 13937  2B9A  301F               	movlw	31
 13938  2B9B  008D               	movwf	13	;volatile
 13939                           
 13940                           ;adc.c: 101: ANSELD = 0x01;
 13941  2B9C  3001               	movlw	1
 13942  2B9D  008F               	movwf	15	;volatile
 13943                           
 13944                           ;adc.c: 102: TRISDbits.TRISD1 = 1;
 13945  2B9E  0021               	movlb	1	; select bank1
 13946  2B9F  148F               	bsf	15,1	;volatile
 13947                           
 13948                           ;adc.c: 103: WPUD = 0x00;
 13949  2BA0  0024               	movlb	4	; select bank4
 13950  2BA1  018F               	clrf	15	;volatile
 13951                           
 13952                           ;adc.c: 106: ADCON0 = 0x00;
 13953  2BA2  0021               	movlb	1	; select bank1
 13954  2BA3  019D               	clrf	29	;volatile
 13955                           
 13956                           ;adc.c: 107: ADCON1 = 0x60;
 13957  2BA4  3060               	movlw	96
 13958  2BA5  009E               	movwf	30	;volatile
 13959                           
 13960                           ;adc.c: 108: ADCON2 = 0x0F;
 13961  2BA6  300F               	movlw	15
 13962  2BA7  009F               	movwf	31	;volatile
 13963  2BA8  0008               	return
 13964  2BA9                     __end_of_adcSetup:	
 13965                           
 13966                           	psect	text30
 13967  2B27                     __ptext30:	
 13968 ;; *************** function _LTC6804_initialize *****************
 13969 ;; Defined at:
 13970 ;;		line 297 in file "ltc6804.c"
 13971 ;; Parameters:    Size  Location     Type
 13972 ;;  configReg       2   41[BANK0 ] int 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;		None
 13975 ;; Return value:  Size  Location     Type
 13976 ;;                  1    wreg      void 
 13977 ;; Registers used:
 13978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13984 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13987 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13988 ;;Total ram usage:        2 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    5
 13991 ;; This function calls:
 13992 ;;		_LTC6804_wrcfg
 13993 ;;		_set_adc
 13994 ;; This function is called by:
 13995 ;;		_setup
 13996 ;; This function uses a non-reentrant model
 13997 ;;
 13998                           
 13999                           
 14000                           ;psect for function _LTC6804_initialize
 14001  2B27                     _LTC6804_initialize:	
 14002                           
 14003                           ;ltc6804.c: 299: set_adc(2,1,0,0);
 14004                           
 14005                           ;incstack = 0
 14006                           ; Regs used in _LTC6804_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14007  2B27  01F2               	clrf	set_adc@DCP
 14008  2B28  0AF2               	incf	set_adc@DCP,f
 14009  2B29  01F3               	clrf	set_adc@CH
 14010  2B2A  01F4               	clrf	set_adc@CHG
 14011  2B2B  3002               	movlw	2
 14012  2B2C  31A0  208E  31AB   	fcall	_set_adc
 14013                           
 14014                           ;ltc6804.c: 300: LTC6804_wrcfg(1, configReg);
 14015  2B2F  0020               	movlb	0	; select bank0
 14016  2B30  084A               	movf	LTC6804_initialize@configReg+1,w
 14017  2B31  00B0               	movwf	LTC6804_wrcfg@config+1
 14018  2B32  0849               	movf	LTC6804_initialize@configReg,w
 14019  2B33  00AF               	movwf	LTC6804_wrcfg@config
 14020  2B34  3001               	movlw	1
 14021  2B35  31A4  2417         	fcall	_LTC6804_wrcfg
 14022  2B37  0008               	return
 14023  2B38                     __end_of_LTC6804_initialize:	
 14024                           
 14025                           	psect	text31
 14026  208E                     __ptext31:	
 14027 ;; *************** function _set_adc *****************
 14028 ;; Defined at:
 14029 ;;		line 320 in file "ltc6804.c"
 14030 ;; Parameters:    Size  Location     Type
 14031 ;;  MD              1    wreg     unsigned char 
 14032 ;;  DCP             1    2[COMMON] unsigned char 
 14033 ;;  CH              1    3[COMMON] unsigned char 
 14034 ;;  CHG             1    4[COMMON] unsigned char 
 14035 ;; Auto vars:     Size  Location     Type
 14036 ;;  MD              1    7[COMMON] unsigned char 
 14037 ;;  md_bits         1    8[COMMON] unsigned char 
 14038 ;; Return value:  Size  Location     Type
 14039 ;;                  1    wreg      void 
 14040 ;; Registers used:
 14041 ;;		wreg, status,2, status,0
 14042 ;; Tracked objects:
 14043 ;;		On entry : 0/0
 14044 ;;		On exit  : 0/0
 14045 ;;		Unchanged: 0/0
 14046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14047 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14048 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14050 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14051 ;;Total ram usage:        7 bytes
 14052 ;; Hardware stack levels used:    1
 14053 ;; Hardware stack levels required when called:    2
 14054 ;; This function calls:
 14055 ;;		Nothing
 14056 ;; This function is called by:
 14057 ;;		_LTC6804_initialize
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           
 14062                           ;psect for function _set_adc
 14063  208E                     _set_adc:	
 14064                           
 14065                           ;incstack = 0
 14066                           ; Regs used in _set_adc: [wreg+status,2+status,0]
 14067                           ;set_adc@MD stored from wreg
 14068  208E  00F7               	movwf	set_adc@MD
 14069                           
 14070                           ;ltc6804.c: 326: char md_bits;
 14071                           ;ltc6804.c: 328: md_bits = (MD & 0x02) >> 1;
 14072  208F  3677               	lsrf	set_adc@MD,w
 14073  2090  3901               	andlw	1
 14074  2091  00F5               	movwf	??_set_adc
 14075  2092  0875               	movf	??_set_adc,w
 14076  2093  00F8               	movwf	set_adc@md_bits
 14077                           
 14078                           ;ltc6804.c: 329: ADCV[0] = md_bits + 0x02;
 14079  2094  0878               	movf	set_adc@md_bits,w
 14080  2095  3E02               	addlw	2
 14081  2096  00F5               	movwf	??_set_adc
 14082  2097  0875               	movf	??_set_adc,w
 14083  2098  0025               	movlb	5	; select bank5
 14084  2099  00E0               	movwf	_ADCV^(0+640)
 14085                           
 14086                           ;ltc6804.c: 330: md_bits = (MD & 0x01) << 7;
 14087  209A  0877               	movf	set_adc@MD,w
 14088  209B  3901               	andlw	1
 14089  209C  00F5               	movwf	??_set_adc
 14090  209D  3006               	movlw	6
 14091  209E                     u6605:	
 14092  209E  35F5               	lslf	??_set_adc,f
 14093  209F  3EFF               	addlw	-1
 14094  20A0  1D03               	skipz
 14095  20A1  289E               	goto	u6605
 14096  20A2  3575               	lslf	??_set_adc,w
 14097  20A3  00F6               	movwf	??_set_adc+1
 14098  20A4  0876               	movf	??_set_adc+1,w
 14099  20A5  00F8               	movwf	set_adc@md_bits
 14100                           
 14101                           ;ltc6804.c: 331: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 14102  20A6  0872               	movf	set_adc@DCP,w
 14103  20A7  00F5               	movwf	??_set_adc
 14104  20A8  3003               	movlw	3
 14105  20A9                     u6615:	
 14106  20A9  35F5               	lslf	??_set_adc,f
 14107  20AA  3EFF               	addlw	-1
 14108  20AB  1D03               	skipz
 14109  20AC  28A9               	goto	u6615
 14110  20AD  3575               	lslf	??_set_adc,w
 14111  20AE  0778               	addwf	set_adc@md_bits,w
 14112  20AF  0773               	addwf	set_adc@CH,w
 14113  20B0  3E60               	addlw	96
 14114  20B1  00F6               	movwf	??_set_adc+1
 14115  20B2  0876               	movf	??_set_adc+1,w
 14116  20B3  00E1               	movwf	(_ADCV^(0+640)+1)
 14117                           
 14118                           ;ltc6804.c: 333: md_bits = (MD & 0x02) >> 1;
 14119  20B4  3677               	lsrf	set_adc@MD,w
 14120  20B5  3901               	andlw	1
 14121  20B6  00F5               	movwf	??_set_adc
 14122  20B7  0875               	movf	??_set_adc,w
 14123  20B8  00F8               	movwf	set_adc@md_bits
 14124                           
 14125                           ;ltc6804.c: 334: ADAX[0] = md_bits + 0x04;
 14126  20B9  0878               	movf	set_adc@md_bits,w
 14127  20BA  3E04               	addlw	4
 14128  20BB  00F5               	movwf	??_set_adc
 14129  20BC  0875               	movf	??_set_adc,w
 14130  20BD  00DE               	movwf	_ADAX^(0+640)
 14131                           
 14132                           ;ltc6804.c: 335: md_bits = (MD & 0x01) << 7;
 14133  20BE  0877               	movf	set_adc@MD,w
 14134  20BF  3901               	andlw	1
 14135  20C0  00F5               	movwf	??_set_adc
 14136  20C1  3006               	movlw	6
 14137  20C2                     u6625:	
 14138  20C2  35F5               	lslf	??_set_adc,f
 14139  20C3  3EFF               	addlw	-1
 14140  20C4  1D03               	skipz
 14141  20C5  28C2               	goto	u6625
 14142  20C6  3575               	lslf	??_set_adc,w
 14143  20C7  00F6               	movwf	??_set_adc+1
 14144  20C8  0876               	movf	??_set_adc+1,w
 14145  20C9  00F8               	movwf	set_adc@md_bits
 14146                           
 14147                           ;ltc6804.c: 336: ADAX[1] = md_bits + 0x60 + CHG ;
 14148  20CA  0878               	movf	set_adc@md_bits,w
 14149  20CB  0774               	addwf	set_adc@CHG,w
 14150  20CC  3E60               	addlw	96
 14151  20CD  00F5               	movwf	??_set_adc
 14152  20CE  0875               	movf	??_set_adc,w
 14153  20CF  00DF               	movwf	(_ADAX^(0+640)+1)
 14154                           
 14155                           ;ltc6804.c: 338: md_bits = (MD & 0x02) >> 1;
 14156  20D0  3677               	lsrf	set_adc@MD,w
 14157  20D1  3901               	andlw	1
 14158  20D2  00F5               	movwf	??_set_adc
 14159  20D3  0875               	movf	??_set_adc,w
 14160  20D4  00F8               	movwf	set_adc@md_bits
 14161                           
 14162                           ;ltc6804.c: 339: ADSTAT[0] = md_bits + 0x04;
 14163  20D5  0878               	movf	set_adc@md_bits,w
 14164  20D6  3E04               	addlw	4
 14165  20D7  00F5               	movwf	??_set_adc
 14166  20D8  0875               	movf	??_set_adc,w
 14167  20D9  00DC               	movwf	_ADSTAT^(0+640)
 14168                           
 14169                           ;ltc6804.c: 340: md_bits = (MD & 0x01) << 7;
 14170  20DA  0877               	movf	set_adc@MD,w
 14171  20DB  3901               	andlw	1
 14172  20DC  00F5               	movwf	??_set_adc
 14173  20DD  3006               	movlw	6
 14174  20DE                     u6635:	
 14175  20DE  35F5               	lslf	??_set_adc,f
 14176  20DF  3EFF               	addlw	-1
 14177  20E0  1D03               	skipz
 14178  20E1  28DE               	goto	u6635
 14179  20E2  3575               	lslf	??_set_adc,w
 14180  20E3  00F6               	movwf	??_set_adc+1
 14181  20E4  0876               	movf	??_set_adc+1,w
 14182  20E5  00F8               	movwf	set_adc@md_bits
 14183                           
 14184                           ;ltc6804.c: 341: ADSTAT[1] = md_bits + 0x69;
 14185  20E6  0878               	movf	set_adc@md_bits,w
 14186  20E7  3E69               	addlw	105
 14187  20E8  00F5               	movwf	??_set_adc
 14188  20E9  0875               	movf	??_set_adc,w
 14189  20EA  00DD               	movwf	(_ADSTAT^(0+640)+1)
 14190  20EB  0008               	return
 14191  20EC                     __end_of_set_adc:	
 14192                           
 14193                           	psect	text32
 14194  1C05                     __ptext32:	
 14195 ;; *************** function _measureVoltages *****************
 14196 ;; Defined at:
 14197 ;;		line 96 in file "ltc6804.c"
 14198 ;; Parameters:    Size  Location     Type
 14199 ;;  voltages        1    wreg     PTR float 
 14200 ;;		 -> main@voltages(48), 
 14201 ;;  totalVoltage    2   69[BANK1 ] PTR float 
 14202 ;;		 -> startUp@totalVoltage(4), main@totalVoltage(4), 
 14203 ;;  numVoltages     2   71[BANK1 ] int 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  voltages        1   25[BANK2 ] PTR float 
 14206 ;;		 -> main@voltages(48), 
 14207 ;;  i               2   26[BANK2 ] int 
 14208 ;;  ltcData        24    0[BANK2 ] unsigned int [12][1]
 14209 ;;  pecError        1   24[BANK2 ] unsigned char 
 14210 ;; Return value:  Size  Location     Type
 14211 ;;                  1    wreg      void 
 14212 ;; Registers used:
 14213 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14214 ;; Tracked objects:
 14215 ;;		On entry : 0/0
 14216 ;;		On exit  : 0/0
 14217 ;;		Unchanged: 0/0
 14218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14219 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14220 ;;      Locals:         0       0       0      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14221 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14222 ;;      Totals:         0       0       8      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14223 ;;Total ram usage:       36 bytes
 14224 ;; Hardware stack levels used:    1
 14225 ;; Hardware stack levels required when called:    6
 14226 ;; This function calls:
 14227 ;;		_LTC6804_adcv
 14228 ;;		_LTC6804_rdcv
 14229 ;;		___fldiv
 14230 ;;		___flge
 14231 ;;		___flmul
 14232 ;;		___xxtofl
 14233 ;; This function is called by:
 14234 ;;		_main
 14235 ;;		_startUp
 14236 ;; This function uses a non-reentrant model
 14237 ;;
 14238                           
 14239                           
 14240                           ;psect for function _measureVoltages
 14241  1C05                     _measureVoltages:	
 14242                           
 14243                           ;incstack = 0
 14244                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14245                           ;measureVoltages@voltages stored from wreg
 14246  1C05  0022               	movlb	2	; select bank2
 14247  1C06  00B9               	movwf	measureVoltages@voltages^(0+256)
 14248                           
 14249                           ;ltc6804.c: 97: char pecError = -1;
 14250  1C07  30FF               	movlw	255
 14251  1C08  0021               	movlb	1	; select bank1
 14252  1C09  00E9               	movwf	??_measureVoltages^(0+128)
 14253  1C0A  0869               	movf	??_measureVoltages^(0+128),w
 14254  1C0B  0022               	movlb	2	; select bank2
 14255  1C0C  00B8               	movwf	measureVoltages@pecError^(0+256)
 14256                           
 14257                           ;ltc6804.c: 98: unsigned int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 14258  1C0D  3020               	movlw	low measureVoltages@F7580
 14259  1C0E  0086               	movwf	6
 14260  1C0F  3003               	movlw	high measureVoltages@F7580
 14261  1C10  0087               	movwf	7
 14262  1C11  3020               	movlw	low measureVoltages@ltcData
 14263  1C12  0084               	movwf	4
 14264  1C13  3001               	movlw	high measureVoltages@ltcData
 14265  1C14  0085               	movwf	5
 14266  1C15  3018               	movlw	24
 14267  1C16  0021               	movlb	1	; select bank1
 14268  1C17  00E9               	movwf	??_measureVoltages^(0+128)
 14269  1C18                     u11080:	
 14270  1C18  0016               	moviw fsr1++
 14271  1C19  001A               	movwi fsr0++
 14272  1C1A  0BE9               	decfsz	??_measureVoltages^(0+128),f
 14273  1C1B  2C18               	goto	u11080
 14274                           
 14275                           ;ltc6804.c: 100: LTC6804_adcv();
 14276  1C1C  31AC  245D  319C   	fcall	_LTC6804_adcv
 14277  1C1F                     l8064:	
 14278                           ;ltc6804.c: 102: do{
 14279                           
 14280                           
 14281                           ;ltc6804.c: 103: pecError = LTC6804_rdcv(0, 1, ltcData);
 14282  1C1F  0020               	movlb	0	; select bank0
 14283  1C20  01BC               	clrf	LTC6804_rdcv@total_ic
 14284  1C21  0ABC               	incf	LTC6804_rdcv@total_ic,f
 14285  1C22  3020               	movlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 14286  1C23  0021               	movlb	1	; select bank1
 14287  1C24  00E9               	movwf	??_measureVoltages^(0+128)
 14288  1C25  0869               	movf	??_measureVoltages^(0+128),w
 14289  1C26  0020               	movlb	0	; select bank0
 14290  1C27  00BD               	movwf	LTC6804_rdcv@cell_codes
 14291  1C28  3000               	movlw	0
 14292  1C29  319C  24E6  319C   	fcall	_LTC6804_rdcv
 14293  1C2C  0021               	movlb	1	; select bank1
 14294  1C2D  00EA               	movwf	(??_measureVoltages+1)^(0+128)
 14295  1C2E  086A               	movf	(??_measureVoltages+1)^(0+128),w
 14296  1C2F  0022               	movlb	2	; select bank2
 14297  1C30  00B8               	movwf	measureVoltages@pecError^(0+256)
 14298                           
 14299                           ;ltc6804.c: 104: }while(pecError != 0);
 14300  1C31  0838               	movf	measureVoltages@pecError^(0+256),w
 14301  1C32  1D03               	btfss	3,2
 14302  1C33  2C1F               	goto	l8064
 14303                           
 14304                           ;ltc6804.c: 106: for(int i = 0; i< 12; i ++){
 14305  1C34  01BA               	clrf	measureVoltages@i^(0+256)
 14306  1C35  01BB               	clrf	(measureVoltages@i+1)^(0+256)
 14307  1C36                     L10:	
 14308  1C36  083B               	movf	(measureVoltages@i+1)^(0+256),w
 14309  1C37  3A80               	xorlw	128
 14310  1C38  0021               	movlb	1	; select bank1
 14311  1C39  00E9               	movwf	??_measureVoltages^(0+128)
 14312  1C3A  3080               	movlw	128
 14313  1C3B  0269               	subwf	??_measureVoltages^(0+128),w
 14314  1C3C  1D03               	skipz
 14315  1C3D  2C41               	goto	u11105
 14316  1C3E  300C               	movlw	12
 14317  1C3F  0022               	movlb	2	; select bank2
 14318  1C40  023A               	subwf	measureVoltages@i^(0+256),w
 14319  1C41                     u11105:	
 14320  1C41  1803               	btfsc	3,0
 14321  1C42  0008               	return
 14322                           
 14323                           ;ltc6804.c: 107: voltages[i] = 1.0*((float)ltcData[0][i]/10000.0);
 14324  1C43  303F               	movlw	63
 14325  1C44  0020               	movlb	0	; select bank0
 14326  1C45  00D5               	movwf	___flmul@b+3
 14327  1C46  3080               	movlw	128
 14328  1C47  00D4               	movwf	___flmul@b+2
 14329  1C48  3000               	movlw	0
 14330  1C49  00D3               	movwf	___flmul@b+1
 14331  1C4A  3000               	movlw	0
 14332  1C4B  00D2               	movwf	___flmul@b
 14333  1C4C  3046               	movlw	70
 14334  1C4D  00BB               	movwf	___fldiv@a+3
 14335  1C4E  301C               	movlw	28
 14336  1C4F  00BA               	movwf	___fldiv@a+2
 14337  1C50  3040               	movlw	64
 14338  1C51  00B9               	movwf	___fldiv@a+1
 14339  1C52  3000               	movlw	0
 14340  1C53  00B8               	movwf	___fldiv@a
 14341  1C54  0022               	movlb	2	; select bank2
 14342  1C55  353A               	lslf	measureVoltages@i^(0+256),w
 14343  1C56  3E20               	addlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 14344  1C57  0086               	movwf	6
 14345  1C58  3001               	movlw	1	; select bank2/3
 14346  1C59  0087               	movwf	7
 14347  1C5A  3F40               	moviw [0]fsr1
 14348  1C5B  0021               	movlb	1	; select bank1
 14349  1C5C  00E9               	movwf	??_measureVoltages^(0+128)
 14350  1C5D  3F41               	moviw [1]fsr1
 14351  1C5E  00EA               	movwf	(??_measureVoltages^(0+128)+1)
 14352  1C5F  0869               	movf	??_measureVoltages^(0+128),w
 14353  1C60  0020               	movlb	0	; select bank0
 14354  1C61  00AE               	movwf	___xxtofl@val
 14355  1C62  0021               	movlb	1	; select bank1
 14356  1C63  086A               	movf	(??_measureVoltages+1)^(0+128),w
 14357  1C64  0020               	movlb	0	; select bank0
 14358  1C65  00AF               	movwf	___xxtofl@val+1
 14359  1C66  01B0               	clrf	___xxtofl@val+2
 14360  1C67  01B1               	clrf	___xxtofl@val+3
 14361  1C68  3000               	movlw	0
 14362  1C69  31A3  2381  319C   	fcall	___xxtofl
 14363  1C6C  0020               	movlb	0	; select bank0
 14364  1C6D  0831               	movf	?___xxtofl+3,w
 14365  1C6E  00BF               	movwf	___fldiv@b+3
 14366  1C6F  0830               	movf	?___xxtofl+2,w
 14367  1C70  00BE               	movwf	___fldiv@b+2
 14368  1C71  082F               	movf	?___xxtofl+1,w
 14369  1C72  00BD               	movwf	___fldiv@b+1
 14370  1C73  082E               	movf	?___xxtofl,w
 14371  1C74  00BC               	movwf	___fldiv@b
 14372  1C75  319E  2671  319C   	fcall	___fldiv
 14373  1C78  0020               	movlb	0	; select bank0
 14374  1C79  083B               	movf	?___fldiv+3,w
 14375  1C7A  00D9               	movwf	___flmul@a+3
 14376  1C7B  083A               	movf	?___fldiv+2,w
 14377  1C7C  00D8               	movwf	___flmul@a+2
 14378  1C7D  0839               	movf	?___fldiv+1,w
 14379  1C7E  00D7               	movwf	___flmul@a+1
 14380  1C7F  0838               	movf	?___fldiv,w
 14381  1C80  00D6               	movwf	___flmul@a
 14382  1C81  3183  23CD  319C   	fcall	___flmul
 14383  1C84  0022               	movlb	2	; select bank2
 14384  1C85  083A               	movf	measureVoltages@i^(0+256),w
 14385  1C86  0021               	movlb	1	; select bank1
 14386  1C87  00EB               	movwf	(??_measureVoltages+2)^(0+128)
 14387  1C88  3001               	movlw	1
 14388  1C89                     u11115:	
 14389  1C89  35EB               	lslf	(??_measureVoltages+2)^(0+128),f
 14390  1C8A  3EFF               	addlw	-1
 14391  1C8B  1D03               	skipz
 14392  1C8C  2C89               	goto	u11115
 14393  1C8D  356B               	lslf	(??_measureVoltages+2)^(0+128),w
 14394  1C8E  0022               	movlb	2	; select bank2
 14395  1C8F  0739               	addwf	measureVoltages@voltages^(0+256),w
 14396  1C90  0021               	movlb	1	; select bank1
 14397  1C91  00EC               	movwf	(??_measureVoltages+3)^(0+128)
 14398  1C92  086C               	movf	(??_measureVoltages+3)^(0+128),w
 14399  1C93  0086               	movwf	6
 14400  1C94  3002               	movlw	2	; select bank4/5
 14401  1C95  0087               	movwf	7
 14402  1C96  0020               	movlb	0	; select bank0
 14403  1C97  0852               	movf	?___flmul,w
 14404  1C98  3FC0               	movwi [0]fsr1
 14405  1C99  0853               	movf	?___flmul+1,w
 14406  1C9A  3FC1               	movwi [1]fsr1
 14407  1C9B  0854               	movf	?___flmul+2,w
 14408  1C9C  3FC2               	movwi [2]fsr1
 14409  1C9D  0855               	movf	?___flmul+3,w
 14410  1C9E  3FC3               	movwi [3]fsr1
 14411                           
 14412                           ;ltc6804.c: 109: if(voltages[i] < 0.1){
 14413  1C9F  0022               	movlb	2	; select bank2
 14414  1CA0  083A               	movf	measureVoltages@i^(0+256),w
 14415  1CA1  0021               	movlb	1	; select bank1
 14416  1CA2  00E9               	movwf	??_measureVoltages^(0+128)
 14417  1CA3  3001               	movlw	1
 14418  1CA4                     u11125:	
 14419  1CA4  35E9               	lslf	??_measureVoltages^(0+128),f
 14420  1CA5  3EFF               	addlw	-1
 14421  1CA6  1D03               	skipz
 14422  1CA7  2CA4               	goto	u11125
 14423  1CA8  3569               	lslf	??_measureVoltages^(0+128),w
 14424  1CA9  0022               	movlb	2	; select bank2
 14425  1CAA  0739               	addwf	measureVoltages@voltages^(0+256),w
 14426  1CAB  0021               	movlb	1	; select bank1
 14427  1CAC  00EA               	movwf	(??_measureVoltages+1)^(0+128)
 14428  1CAD  086A               	movf	(??_measureVoltages+1)^(0+128),w
 14429  1CAE  0086               	movwf	6
 14430  1CAF  3002               	movlw	2	; select bank4/5
 14431  1CB0  0087               	movwf	7
 14432  1CB1  3F40               	moviw [0]fsr1
 14433  1CB2  00D5               	movwf	___flge@ff1^(0+128)
 14434  1CB3  3F41               	moviw [1]fsr1
 14435  1CB4  00D6               	movwf	(___flge@ff1+1)^(0+128)
 14436  1CB5  3F42               	moviw [2]fsr1
 14437  1CB6  00D7               	movwf	(___flge@ff1+2)^(0+128)
 14438  1CB7  3F43               	moviw [3]fsr1
 14439  1CB8  00D8               	movwf	(___flge@ff1+3)^(0+128)
 14440  1CB9  303D               	movlw	61
 14441  1CBA  00DC               	movwf	(___flge@ff2+3)^(0+128)
 14442  1CBB  30CC               	movlw	204
 14443  1CBC  00DB               	movwf	(___flge@ff2+2)^(0+128)
 14444  1CBD  30CC               	movlw	204
 14445  1CBE  00DA               	movwf	(___flge@ff2+1)^(0+128)
 14446  1CBF  30CD               	movlw	205
 14447  1CC0  00D9               	movwf	___flge@ff2^(0+128)
 14448  1CC1  3188  2005  319C   	fcall	___flge
 14449  1CC4  1803               	btfsc	3,0
 14450  1CC5  2CE0               	goto	l8078
 14451                           
 14452                           ;ltc6804.c: 110: voltages[i] = 0.0;
 14453  1CC6  0022               	movlb	2	; select bank2
 14454  1CC7  083A               	movf	measureVoltages@i^(0+256),w
 14455  1CC8  0021               	movlb	1	; select bank1
 14456  1CC9  00E9               	movwf	??_measureVoltages^(0+128)
 14457  1CCA  3001               	movlw	1
 14458  1CCB                     u11145:	
 14459  1CCB  35E9               	lslf	??_measureVoltages^(0+128),f
 14460  1CCC  3EFF               	addlw	-1
 14461  1CCD  1D03               	skipz
 14462  1CCE  2CCB               	goto	u11145
 14463  1CCF  3569               	lslf	??_measureVoltages^(0+128),w
 14464  1CD0  0022               	movlb	2	; select bank2
 14465  1CD1  0739               	addwf	measureVoltages@voltages^(0+256),w
 14466  1CD2  0021               	movlb	1	; select bank1
 14467  1CD3  00EA               	movwf	(??_measureVoltages+1)^(0+128)
 14468  1CD4  086A               	movf	(??_measureVoltages+1)^(0+128),w
 14469  1CD5  0086               	movwf	6
 14470  1CD6  3002               	movlw	2	; select bank4/5
 14471  1CD7  0087               	movwf	7
 14472  1CD8  3000               	movlw	0
 14473  1CD9  3FC0               	movwi [0]fsr1
 14474  1CDA  3000               	movlw	0
 14475  1CDB  3FC1               	movwi [1]fsr1
 14476  1CDC  3000               	movlw	0
 14477  1CDD  3FC2               	movwi [2]fsr1
 14478  1CDE  3000               	movlw	0
 14479  1CDF  3FC3               	movwi [3]fsr1
 14480  1CE0                     l8078:	
 14481  1CE0  3001               	movlw	1
 14482  1CE1  0022               	movlb	2	; select bank2
 14483  1CE2  07BA               	addwf	measureVoltages@i^(0+256),f
 14484  1CE3  3000               	movlw	0
 14485  1CE4  3DBB               	addwfc	(measureVoltages@i+1)^(0+256),f
 14486  1CE5  2C36               	goto	L10
 14487  1CE6                     __end_of_measureVoltages:	
 14488                           
 14489                           	psect	text33
 14490  1CE6                     __ptext33:	
 14491 ;; *************** function _LTC6804_rdcv *****************
 14492 ;; Defined at:
 14493 ;;		line 478 in file "ltc6804.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;  reg             1    wreg     unsigned char 
 14496 ;;  total_ic        1   28[BANK0 ] unsigned char 
 14497 ;;  cell_codes      1   29[BANK0 ] PTR unsigned int [12]
 14498 ;;		 -> measureVoltages@ltcData(24), 
 14499 ;; Auto vars:     Size  Location     Type
 14500 ;;  reg             1   50[BANK0 ] unsigned char 
 14501 ;;  current_cell    1   52[BANK0 ] unsigned char 
 14502 ;;  current_cell    1   54[BANK0 ] unsigned char 
 14503 ;;  current_ic      1   51[BANK0 ] unsigned char 
 14504 ;;  current_ic      1   53[BANK0 ] unsigned char 
 14505 ;;  cell_reg        1   55[BANK0 ] unsigned char 
 14506 ;;  cell_data       8   35[BANK0 ] unsigned char [8]
 14507 ;;  data_pec        2   48[BANK0 ] int 
 14508 ;;  received_pec    2   46[BANK0 ] int 
 14509 ;;  parsed_cell     2   44[BANK0 ] int 
 14510 ;;  data_counter    1   56[BANK0 ] unsigned char 
 14511 ;;  pec_error       1   43[BANK0 ] unsigned char 
 14512 ;; Return value:  Size  Location     Type
 14513 ;;                  1    wreg      unsigned char 
 14514 ;; Registers used:
 14515 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14516 ;; Tracked objects:
 14517 ;;		On entry : 0/0
 14518 ;;		On exit  : 0/0
 14519 ;;		Unchanged: 0/0
 14520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14522 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14523 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14524 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14525 ;;Total ram usage:       29 bytes
 14526 ;; Hardware stack levels used:    1
 14527 ;; Hardware stack levels required when called:    5
 14528 ;; This function calls:
 14529 ;;		_LTC6804_rdcv_reg
 14530 ;;		___bmul
 14531 ;;		___wmul
 14532 ;;		_pec15_calc
 14533 ;; This function is called by:
 14534 ;;		_measureVoltages
 14535 ;; This function uses a non-reentrant model
 14536 ;;
 14537                           
 14538                           
 14539                           ;psect for function _LTC6804_rdcv
 14540  1CE6                     _LTC6804_rdcv:	
 14541                           
 14542                           ;incstack = 0
 14543                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14544                           ;LTC6804_rdcv@reg stored from wreg
 14545  1CE6  0020               	movlb	0	; select bank0
 14546  1CE7  00D2               	movwf	LTC6804_rdcv@reg
 14547                           
 14548                           ;ltc6804.c: 484: const char NUM_RX_BYT = 8;
 14549                           ;ltc6804.c: 485: const char BYT_IN_REG = 6;
 14550                           ;ltc6804.c: 486: const char CELL_IN_REG = 3;
 14551                           ;ltc6804.c: 488: char cell_data[8];
 14552                           ;ltc6804.c: 489: char pec_error = 0;
 14553  1CE8  01CB               	clrf	LTC6804_rdcv@pec_error
 14554                           
 14555                           ;ltc6804.c: 490: int parsed_cell;
 14556                           ;ltc6804.c: 491: int received_pec;
 14557                           ;ltc6804.c: 492: int data_pec;
 14558                           ;ltc6804.c: 493: char data_counter=0;
 14559  1CE9  01D8               	clrf	LTC6804_rdcv@data_counter
 14560                           
 14561                           ;ltc6804.c: 496: if (reg == 0)
 14562  1CEA  0852               	movf	LTC6804_rdcv@reg,w
 14563  1CEB  1D03               	btfss	3,2
 14564  1CEC  2DB4               	goto	l7998
 14565                           
 14566                           ;ltc6804.c: 497: {
 14567                           ;ltc6804.c: 499: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 14568  1CED  01D7               	clrf	LTC6804_rdcv@cell_reg
 14569  1CEE  0AD7               	incf	LTC6804_rdcv@cell_reg,f
 14570  1CEF                     L11:	
 14571  1CEF  3005               	movlw	5
 14572  1CF0  0257               	subwf	LTC6804_rdcv@cell_reg,w
 14573  1CF1  1803               	btfsc	3,0
 14574  1CF2  2E6F               	goto	l8030
 14575                           
 14576                           ;ltc6804.c: 500: {
 14577                           ;ltc6804.c: 501: data_counter = 0;
 14578  1CF3  01D8               	clrf	LTC6804_rdcv@data_counter
 14579                           
 14580                           ;ltc6804.c: 502: LTC6804_rdcv_reg(cell_reg, total_ic, cell_data);
 14581  1CF4  083C               	movf	LTC6804_rdcv@total_ic,w
 14582  1CF5  00BE               	movwf	??_LTC6804_rdcv
 14583  1CF6  083E               	movf	??_LTC6804_rdcv,w
 14584  1CF7  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 14585  1CF8  3043               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14586  1CF9  00BF               	movwf	??_LTC6804_rdcv+1
 14587  1CFA  083F               	movf	??_LTC6804_rdcv+1,w
 14588  1CFB  00B0               	movwf	LTC6804_rdcv_reg@data
 14589  1CFC  0857               	movf	LTC6804_rdcv@cell_reg,w
 14590  1CFD  31AF  27AB  319C   	fcall	_LTC6804_rdcv_reg
 14591                           
 14592                           ;ltc6804.c: 504: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14593  1D00  0020               	movlb	0	; select bank0
 14594  1D01  01D3               	clrf	LTC6804_rdcv@current_ic
 14595  1D02                     l648:	
 14596  1D02  083C               	movf	LTC6804_rdcv@total_ic,w
 14597  1D03  0253               	subwf	LTC6804_rdcv@current_ic,w
 14598  1D04  1803               	btfsc	3,0
 14599  1D05  2DAF               	goto	l7994
 14600                           
 14601                           ;ltc6804.c: 505: {
 14602                           ;ltc6804.c: 508: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 14603  1D06  01D4               	clrf	LTC6804_rdcv@current_cell
 14604  1D07  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14605  1D08  0084               	movwf	4
 14606  1D09  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14607  1D0A  0085               	movwf	5
 14608  1D0B  0800               	movf	0,w	;code access
 14609  1D0C  0254               	subwf	LTC6804_rdcv@current_cell,w
 14610  1D0D  1803               	btfsc	3,0
 14611  1D0E  2D64               	goto	l7982
 14612  1D0F                     l7972:	
 14613                           
 14614                           ;ltc6804.c: 509: {
 14615                           ;ltc6804.c: 511: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 14616  1D0F  0858               	movf	LTC6804_rdcv@data_counter,w
 14617  1D10  3E01               	addlw	1
 14618  1D11  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14619  1D12  0086               	movwf	6
 14620  1D13  0187               	clrf	7
 14621  1D14  0801               	movf	1,w
 14622  1D15  00BE               	movwf	??_LTC6804_rdcv
 14623  1D16  01BF               	clrf	??_LTC6804_rdcv+1
 14624  1D17  083E               	movf	??_LTC6804_rdcv,w
 14625  1D18  00BF               	movwf	??_LTC6804_rdcv+1
 14626  1D19  01BE               	clrf	??_LTC6804_rdcv
 14627  1D1A  0858               	movf	LTC6804_rdcv@data_counter,w
 14628  1D1B  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14629  1D1C  0086               	movwf	6
 14630  1D1D  0187               	clrf	7
 14631  1D1E  0801               	movf	1,w
 14632  1D1F  073E               	addwf	??_LTC6804_rdcv,w
 14633  1D20  00CC               	movwf	LTC6804_rdcv@parsed_cell
 14634  1D21  083F               	movf	??_LTC6804_rdcv+1,w
 14635  1D22  1803               	skipnc
 14636  1D23  0A3F               	incf	??_LTC6804_rdcv+1,w
 14637  1D24  00CD               	movwf	LTC6804_rdcv@parsed_cell+1
 14638                           
 14639                           ;ltc6804.c: 514: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 14640  1D25  3018               	movlw	24
 14641  1D26  00BE               	movwf	??_LTC6804_rdcv
 14642  1D27  083E               	movf	??_LTC6804_rdcv,w
 14643  1D28  00F2               	movwf	___bmul@multiplicand
 14644  1D29  0853               	movf	LTC6804_rdcv@current_ic,w
 14645  1D2A  31AB  2316  319C   	fcall	___bmul
 14646  1D2D  0020               	movlb	0	; select bank0
 14647  1D2E  073D               	addwf	LTC6804_rdcv@cell_codes,w
 14648  1D2F  00BF               	movwf	??_LTC6804_rdcv+1
 14649  1D30  0857               	movf	LTC6804_rdcv@cell_reg,w
 14650  1D31  3EFF               	addlw	255
 14651  1D32  00F2               	movwf	___wmul@multiplier
 14652  1D33  30FF               	movlw	255
 14653  1D34  1803               	skipnc
 14654  1D35  3000               	movlw	0
 14655  1D36  00F3               	movwf	___wmul@multiplier+1
 14656  1D37  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14657  1D38  0084               	movwf	4
 14658  1D39  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14659  1D3A  0085               	movwf	5
 14660  1D3B  0800               	movf	0,w	;code access
 14661  1D3C  00C0               	movwf	??_LTC6804_rdcv+2
 14662  1D3D  01C1               	clrf	??_LTC6804_rdcv+3
 14663  1D3E  0840               	movf	??_LTC6804_rdcv+2,w
 14664  1D3F  00F4               	movwf	___wmul@multiplicand
 14665  1D40  0841               	movf	??_LTC6804_rdcv+3,w
 14666  1D41  00F5               	movwf	___wmul@multiplicand+1
 14667  1D42  31AB  2370  319C   	fcall	___wmul
 14668  1D45  0872               	movf	?___wmul,w
 14669  1D46  0020               	movlb	0	; select bank0
 14670  1D47  0754               	addwf	LTC6804_rdcv@current_cell,w
 14671  1D48  0709               	addwf	9,w
 14672  1D49  073F               	addwf	??_LTC6804_rdcv+1,w
 14673  1D4A  00C2               	movwf	??_LTC6804_rdcv+4
 14674  1D4B  0842               	movf	??_LTC6804_rdcv+4,w
 14675  1D4C  0086               	movwf	6
 14676  1D4D  3001               	movlw	1	; select bank2/3
 14677  1D4E  0087               	movwf	7
 14678  1D4F  084C               	movf	LTC6804_rdcv@parsed_cell,w
 14679  1D50  3FC0               	movwi [0]fsr1
 14680  1D51  084D               	movf	LTC6804_rdcv@parsed_cell+1,w
 14681  1D52  3FC1               	movwi [1]fsr1
 14682                           
 14683                           ;ltc6804.c: 515: data_counter = data_counter + 2;
 14684  1D53  0858               	movf	LTC6804_rdcv@data_counter,w
 14685  1D54  3E02               	addlw	2
 14686  1D55  00BE               	movwf	??_LTC6804_rdcv
 14687  1D56  083E               	movf	??_LTC6804_rdcv,w
 14688  1D57  00D8               	movwf	LTC6804_rdcv@data_counter
 14689  1D58  3001               	movlw	1
 14690  1D59  00BE               	movwf	??_LTC6804_rdcv
 14691  1D5A  083E               	movf	??_LTC6804_rdcv,w
 14692  1D5B  07D4               	addwf	LTC6804_rdcv@current_cell,f
 14693  1D5C  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14694  1D5D  0084               	movwf	4
 14695  1D5E  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14696  1D5F  0085               	movwf	5
 14697  1D60  0800               	movf	0,w	;code access
 14698  1D61  0254               	subwf	LTC6804_rdcv@current_cell,w
 14699  1D62  1C03               	skipc
 14700  1D63  2D0F               	goto	l7972
 14701  1D64                     l7982:	
 14702                           
 14703                           ;ltc6804.c: 517: }
 14704                           ;ltc6804.c: 519: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 14705  1D64  0858               	movf	LTC6804_rdcv@data_counter,w
 14706  1D65  3E01               	addlw	1
 14707  1D66  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14708  1D67  0086               	movwf	6
 14709  1D68  0187               	clrf	7
 14710  1D69  0801               	movf	1,w
 14711  1D6A  00BE               	movwf	??_LTC6804_rdcv
 14712  1D6B  01BF               	clrf	??_LTC6804_rdcv+1
 14713  1D6C  0858               	movf	LTC6804_rdcv@data_counter,w
 14714  1D6D  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14715  1D6E  0086               	movwf	6
 14716  1D6F  0187               	clrf	7
 14717  1D70  0801               	movf	1,w
 14718  1D71  00C0               	movwf	??_LTC6804_rdcv+2
 14719  1D72  01C1               	clrf	??_LTC6804_rdcv+3
 14720  1D73  0840               	movf	??_LTC6804_rdcv+2,w
 14721  1D74  00C1               	movwf	??_LTC6804_rdcv+3
 14722  1D75  01C0               	clrf	??_LTC6804_rdcv+2
 14723  1D76  083E               	movf	??_LTC6804_rdcv,w
 14724  1D77  0740               	addwf	??_LTC6804_rdcv+2,w
 14725  1D78  00CE               	movwf	LTC6804_rdcv@received_pec
 14726  1D79  083F               	movf	??_LTC6804_rdcv+1,w
 14727  1D7A  3D41               	addwfc	??_LTC6804_rdcv+3,w
 14728  1D7B  00CF               	movwf	LTC6804_rdcv@received_pec+1
 14729                           
 14730                           ;ltc6804.c: 521: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14731  1D7C  3068               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14732  1D7D  0084               	movwf	4
 14733  1D7E  30B1               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14734  1D7F  0085               	movwf	5
 14735  1D80  0800               	movf	0,w	;code access
 14736  1D81  00BE               	movwf	??_LTC6804_rdcv
 14737  1D82  083E               	movf	??_LTC6804_rdcv,w
 14738  1D83  00F2               	movwf	___bmul@multiplicand
 14739  1D84  0853               	movf	LTC6804_rdcv@current_ic,w
 14740  1D85  31AB  2316  319C   	fcall	___bmul
 14741  1D88  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14742  1D89  00F8               	movwf	pec15_calc@data
 14743  1D8A  3000               	movlw	0
 14744  1D8B  00F9               	movwf	pec15_calc@data+1
 14745  1D8C  3067               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14746  1D8D  0084               	movwf	4
 14747  1D8E  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14748  1D8F  0085               	movwf	5
 14749  1D90  0800               	movf	0,w	;code access
 14750  1D91  31AD  25C1  319C   	fcall	_pec15_calc
 14751  1D94  0879               	movf	?_pec15_calc+1,w
 14752  1D95  0020               	movlb	0	; select bank0
 14753  1D96  00D1               	movwf	LTC6804_rdcv@data_pec+1
 14754  1D97  0878               	movf	?_pec15_calc,w
 14755  1D98  00D0               	movwf	LTC6804_rdcv@data_pec
 14756                           
 14757                           ;ltc6804.c: 522: if(received_pec != data_pec)
 14758  1D99  0851               	movf	LTC6804_rdcv@data_pec+1,w
 14759  1D9A  064F               	xorwf	LTC6804_rdcv@received_pec+1,w
 14760  1D9B  1D03               	skipz
 14761  1D9C  2D9F               	goto	u11015
 14762  1D9D  0850               	movf	LTC6804_rdcv@data_pec,w
 14763  1D9E  064E               	xorwf	LTC6804_rdcv@received_pec,w
 14764  1D9F                     u11015:	
 14765  1D9F  1903               	skipnz
 14766  1DA0  2DA5               	goto	l7990
 14767                           
 14768                           ;ltc6804.c: 523: {
 14769                           ;ltc6804.c: 524: pec_error = -1;
 14770  1DA1  30FF               	movlw	255
 14771  1DA2  00BE               	movwf	??_LTC6804_rdcv
 14772  1DA3  083E               	movf	??_LTC6804_rdcv,w
 14773  1DA4  00CB               	movwf	LTC6804_rdcv@pec_error
 14774  1DA5                     l7990:	
 14775                           
 14776                           ;ltc6804.c: 526: }
 14777                           ;ltc6804.c: 527: data_counter=data_counter+2;
 14778  1DA5  0858               	movf	LTC6804_rdcv@data_counter,w
 14779  1DA6  3E02               	addlw	2
 14780  1DA7  00BE               	movwf	??_LTC6804_rdcv
 14781  1DA8  083E               	movf	??_LTC6804_rdcv,w
 14782  1DA9  00D8               	movwf	LTC6804_rdcv@data_counter
 14783  1DAA  3001               	movlw	1
 14784  1DAB  00BE               	movwf	??_LTC6804_rdcv
 14785  1DAC  083E               	movf	??_LTC6804_rdcv,w
 14786  1DAD  07D3               	addwf	LTC6804_rdcv@current_ic,f
 14787  1DAE  2D02               	goto	l648
 14788  1DAF                     l7994:	
 14789  1DAF  3001               	movlw	1
 14790  1DB0  00BE               	movwf	??_LTC6804_rdcv
 14791  1DB1  083E               	movf	??_LTC6804_rdcv,w
 14792  1DB2  07D7               	addwf	LTC6804_rdcv@cell_reg,f
 14793  1DB3  2CEF               	goto	L11
 14794  1DB4                     l7998:	
 14795                           ;ltc6804.c: 529: }
 14796                           ;ltc6804.c: 530: }
 14797                           ;ltc6804.c: 531: }
 14798                           
 14799                           
 14800                           ;ltc6804.c: 533: else
 14801                           ;ltc6804.c: 534: {
 14802                           ;ltc6804.c: 536: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 14803  1DB4  083C               	movf	LTC6804_rdcv@total_ic,w
 14804  1DB5  00BE               	movwf	??_LTC6804_rdcv
 14805  1DB6  083E               	movf	??_LTC6804_rdcv,w
 14806  1DB7  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 14807  1DB8  3043               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14808  1DB9  00BF               	movwf	??_LTC6804_rdcv+1
 14809  1DBA  083F               	movf	??_LTC6804_rdcv+1,w
 14810  1DBB  00B0               	movwf	LTC6804_rdcv_reg@data
 14811  1DBC  0852               	movf	LTC6804_rdcv@reg,w
 14812  1DBD  31AF  27AB  319C   	fcall	_LTC6804_rdcv_reg
 14813                           
 14814                           ;ltc6804.c: 537: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14815  1DC0  0020               	movlb	0	; select bank0
 14816  1DC1  01D5               	clrf	LTC6804_rdcv@current_ic_1355
 14817  1DC2                     l655:	
 14818  1DC2  083C               	movf	LTC6804_rdcv@total_ic,w
 14819  1DC3  0255               	subwf	LTC6804_rdcv@current_ic_1355,w
 14820  1DC4  1803               	btfsc	3,0
 14821  1DC5  2E6F               	goto	l8030
 14822                           
 14823                           ;ltc6804.c: 538: {
 14824                           ;ltc6804.c: 540: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 14825  1DC6  01D6               	clrf	LTC6804_rdcv@current_cell_1356
 14826  1DC7  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14827  1DC8  0084               	movwf	4
 14828  1DC9  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14829  1DCA  0085               	movwf	5
 14830  1DCB  0800               	movf	0,w	;code access
 14831  1DCC  0256               	subwf	LTC6804_rdcv@current_cell_1356,w
 14832  1DCD  1803               	btfsc	3,0
 14833  1DCE  2E24               	goto	l8018
 14834  1DCF                     l8008:	
 14835                           
 14836                           ;ltc6804.c: 541: {
 14837                           ;ltc6804.c: 543: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 14838  1DCF  0858               	movf	LTC6804_rdcv@data_counter,w
 14839  1DD0  3E01               	addlw	1
 14840  1DD1  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14841  1DD2  0086               	movwf	6
 14842  1DD3  0187               	clrf	7
 14843  1DD4  0801               	movf	1,w
 14844  1DD5  00BE               	movwf	??_LTC6804_rdcv
 14845  1DD6  01BF               	clrf	??_LTC6804_rdcv+1
 14846  1DD7  083E               	movf	??_LTC6804_rdcv,w
 14847  1DD8  00BF               	movwf	??_LTC6804_rdcv+1
 14848  1DD9  01BE               	clrf	??_LTC6804_rdcv
 14849  1DDA  0858               	movf	LTC6804_rdcv@data_counter,w
 14850  1DDB  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14851  1DDC  0086               	movwf	6
 14852  1DDD  0187               	clrf	7
 14853  1DDE  0801               	movf	1,w
 14854  1DDF  073E               	addwf	??_LTC6804_rdcv,w
 14855  1DE0  00CC               	movwf	LTC6804_rdcv@parsed_cell
 14856  1DE1  083F               	movf	??_LTC6804_rdcv+1,w
 14857  1DE2  1803               	skipnc
 14858  1DE3  0A3F               	incf	??_LTC6804_rdcv+1,w
 14859  1DE4  00CD               	movwf	LTC6804_rdcv@parsed_cell+1
 14860                           
 14861                           ;ltc6804.c: 546: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 14862  1DE5  3018               	movlw	24
 14863  1DE6  00BE               	movwf	??_LTC6804_rdcv
 14864  1DE7  083E               	movf	??_LTC6804_rdcv,w
 14865  1DE8  00F2               	movwf	___bmul@multiplicand
 14866  1DE9  0855               	movf	LTC6804_rdcv@current_ic_1355,w
 14867  1DEA  31AB  2316  319C   	fcall	___bmul
 14868  1DED  0020               	movlb	0	; select bank0
 14869  1DEE  073D               	addwf	LTC6804_rdcv@cell_codes,w
 14870  1DEF  00BF               	movwf	??_LTC6804_rdcv+1
 14871  1DF0  0852               	movf	LTC6804_rdcv@reg,w
 14872  1DF1  3EFF               	addlw	255
 14873  1DF2  00F2               	movwf	___wmul@multiplier
 14874  1DF3  30FF               	movlw	255
 14875  1DF4  1803               	skipnc
 14876  1DF5  3000               	movlw	0
 14877  1DF6  00F3               	movwf	___wmul@multiplier+1
 14878  1DF7  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14879  1DF8  0084               	movwf	4
 14880  1DF9  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14881  1DFA  0085               	movwf	5
 14882  1DFB  0800               	movf	0,w	;code access
 14883  1DFC  00C0               	movwf	??_LTC6804_rdcv+2
 14884  1DFD  01C1               	clrf	??_LTC6804_rdcv+3
 14885  1DFE  0840               	movf	??_LTC6804_rdcv+2,w
 14886  1DFF  00F4               	movwf	___wmul@multiplicand
 14887  1E00  0841               	movf	??_LTC6804_rdcv+3,w
 14888  1E01  00F5               	movwf	___wmul@multiplicand+1
 14889  1E02  31AB  2370  319C   	fcall	___wmul
 14890  1E05  0872               	movf	?___wmul,w
 14891  1E06  0020               	movlb	0	; select bank0
 14892  1E07  0756               	addwf	LTC6804_rdcv@current_cell_1356,w
 14893  1E08  0709               	addwf	9,w
 14894  1E09  073F               	addwf	??_LTC6804_rdcv+1,w
 14895  1E0A  00C2               	movwf	??_LTC6804_rdcv+4
 14896  1E0B  0842               	movf	??_LTC6804_rdcv+4,w
 14897  1E0C  0086               	movwf	6
 14898  1E0D  3001               	movlw	1	; select bank2/3
 14899  1E0E  0087               	movwf	7
 14900  1E0F  084C               	movf	LTC6804_rdcv@parsed_cell,w
 14901  1E10  3FC0               	movwi [0]fsr1
 14902  1E11  084D               	movf	LTC6804_rdcv@parsed_cell+1,w
 14903  1E12  3FC1               	movwi [1]fsr1
 14904                           
 14905                           ;ltc6804.c: 547: data_counter= data_counter + 2;
 14906  1E13  0858               	movf	LTC6804_rdcv@data_counter,w
 14907  1E14  3E02               	addlw	2
 14908  1E15  00BE               	movwf	??_LTC6804_rdcv
 14909  1E16  083E               	movf	??_LTC6804_rdcv,w
 14910  1E17  00D8               	movwf	LTC6804_rdcv@data_counter
 14911  1E18  3001               	movlw	1
 14912  1E19  00BE               	movwf	??_LTC6804_rdcv
 14913  1E1A  083E               	movf	??_LTC6804_rdcv,w
 14914  1E1B  07D6               	addwf	LTC6804_rdcv@current_cell_1356,f
 14915  1E1C  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14916  1E1D  0084               	movwf	4
 14917  1E1E  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14918  1E1F  0085               	movwf	5
 14919  1E20  0800               	movf	0,w	;code access
 14920  1E21  0256               	subwf	LTC6804_rdcv@current_cell_1356,w
 14921  1E22  1C03               	skipc
 14922  1E23  2DCF               	goto	l8008
 14923  1E24                     l8018:	
 14924                           
 14925                           ;ltc6804.c: 549: }
 14926                           ;ltc6804.c: 551: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 14927  1E24  0858               	movf	LTC6804_rdcv@data_counter,w
 14928  1E25  3E01               	addlw	1
 14929  1E26  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14930  1E27  0086               	movwf	6
 14931  1E28  0187               	clrf	7
 14932  1E29  0801               	movf	1,w
 14933  1E2A  00BE               	movwf	??_LTC6804_rdcv
 14934  1E2B  01BF               	clrf	??_LTC6804_rdcv+1
 14935  1E2C  0858               	movf	LTC6804_rdcv@data_counter,w
 14936  1E2D  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14937  1E2E  0086               	movwf	6
 14938  1E2F  0187               	clrf	7
 14939  1E30  0801               	movf	1,w
 14940  1E31  00C0               	movwf	??_LTC6804_rdcv+2
 14941  1E32  01C1               	clrf	??_LTC6804_rdcv+3
 14942  1E33  0840               	movf	??_LTC6804_rdcv+2,w
 14943  1E34  00C1               	movwf	??_LTC6804_rdcv+3
 14944  1E35  01C0               	clrf	??_LTC6804_rdcv+2
 14945  1E36  083E               	movf	??_LTC6804_rdcv,w
 14946  1E37  0740               	addwf	??_LTC6804_rdcv+2,w
 14947  1E38  00CE               	movwf	LTC6804_rdcv@received_pec
 14948  1E39  083F               	movf	??_LTC6804_rdcv+1,w
 14949  1E3A  3D41               	addwfc	??_LTC6804_rdcv+3,w
 14950  1E3B  00CF               	movwf	LTC6804_rdcv@received_pec+1
 14951                           
 14952                           ;ltc6804.c: 553: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14953  1E3C  3068               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14954  1E3D  0084               	movwf	4
 14955  1E3E  30B1               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14956  1E3F  0085               	movwf	5
 14957  1E40  0800               	movf	0,w	;code access
 14958  1E41  00BE               	movwf	??_LTC6804_rdcv
 14959  1E42  083E               	movf	??_LTC6804_rdcv,w
 14960  1E43  00F2               	movwf	___bmul@multiplicand
 14961  1E44  0855               	movf	LTC6804_rdcv@current_ic_1355,w
 14962  1E45  31AB  2316  319C   	fcall	___bmul
 14963  1E48  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14964  1E49  00F8               	movwf	pec15_calc@data
 14965  1E4A  3000               	movlw	0
 14966  1E4B  00F9               	movwf	pec15_calc@data+1
 14967  1E4C  3067               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14968  1E4D  0084               	movwf	4
 14969  1E4E  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14970  1E4F  0085               	movwf	5
 14971  1E50  0800               	movf	0,w	;code access
 14972  1E51  31AD  25C1  319C   	fcall	_pec15_calc
 14973  1E54  0879               	movf	?_pec15_calc+1,w
 14974  1E55  0020               	movlb	0	; select bank0
 14975  1E56  00D1               	movwf	LTC6804_rdcv@data_pec+1
 14976  1E57  0878               	movf	?_pec15_calc,w
 14977  1E58  00D0               	movwf	LTC6804_rdcv@data_pec
 14978                           
 14979                           ;ltc6804.c: 554: if(received_pec != data_pec)
 14980  1E59  0851               	movf	LTC6804_rdcv@data_pec+1,w
 14981  1E5A  064F               	xorwf	LTC6804_rdcv@received_pec+1,w
 14982  1E5B  1D03               	skipz
 14983  1E5C  2E5F               	goto	u11065
 14984  1E5D  0850               	movf	LTC6804_rdcv@data_pec,w
 14985  1E5E  064E               	xorwf	LTC6804_rdcv@received_pec,w
 14986  1E5F                     u11065:	
 14987  1E5F  1903               	skipnz
 14988  1E60  2E65               	goto	l8026
 14989                           
 14990                           ;ltc6804.c: 555: {
 14991                           ;ltc6804.c: 556: pec_error = -1;
 14992  1E61  30FF               	movlw	255
 14993  1E62  00BE               	movwf	??_LTC6804_rdcv
 14994  1E63  083E               	movf	??_LTC6804_rdcv,w
 14995  1E64  00CB               	movwf	LTC6804_rdcv@pec_error
 14996  1E65                     l8026:	
 14997                           
 14998                           ;ltc6804.c: 558: }
 14999                           ;ltc6804.c: 559: data_counter= data_counter + 2;
 15000  1E65  0858               	movf	LTC6804_rdcv@data_counter,w
 15001  1E66  3E02               	addlw	2
 15002  1E67  00BE               	movwf	??_LTC6804_rdcv
 15003  1E68  083E               	movf	??_LTC6804_rdcv,w
 15004  1E69  00D8               	movwf	LTC6804_rdcv@data_counter
 15005  1E6A  3001               	movlw	1
 15006  1E6B  00BE               	movwf	??_LTC6804_rdcv
 15007  1E6C  083E               	movf	??_LTC6804_rdcv,w
 15008  1E6D  07D5               	addwf	LTC6804_rdcv@current_ic_1355,f
 15009  1E6E  2DC2               	goto	l655
 15010  1E6F                     l8030:	
 15011                           
 15012                           ;ltc6804.c: 561: }
 15013                           ;ltc6804.c: 562: }
 15014                           ;ltc6804.c: 566: return(pec_error);
 15015  1E6F  084B               	movf	LTC6804_rdcv@pec_error,w
 15016  1E70  0008               	return
 15017  1E71                     __end_of_LTC6804_rdcv:	
 15018                           
 15019                           	psect	text34
 15020  2FAB                     __ptext34:	
 15021 ;; *************** function _LTC6804_rdcv_reg *****************
 15022 ;; Defined at:
 15023 ;;		line 616 in file "ltc6804.c"
 15024 ;; Parameters:    Size  Location     Type
 15025 ;;  reg             1    wreg     unsigned char 
 15026 ;;  total_ic        1   15[BANK0 ] unsigned char 
 15027 ;;  data            1   16[BANK0 ] PTR unsigned char 
 15028 ;;		 -> LTC6804_rdcv@cell_data(8), 
 15029 ;; Auto vars:     Size  Location     Type
 15030 ;;  reg             1   27[BANK0 ] unsigned char 
 15031 ;;  cmd             4   23[BANK0 ] unsigned char [4]
 15032 ;;  cmd_pec         2   21[BANK0 ] int 
 15033 ;; Return value:  Size  Location     Type
 15034 ;;                  1    wreg      void 
 15035 ;; Registers used:
 15036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15037 ;; Tracked objects:
 15038 ;;		On entry : 0/0
 15039 ;;		On exit  : 0/0
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15043 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15044 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15045 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15046 ;;Total ram usage:       13 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:    4
 15049 ;; This function calls:
 15050 ;;		___bmul
 15051 ;;		_pec15_calc
 15052 ;;		_spi_write_read
 15053 ;;		_wakeup_idle
 15054 ;; This function is called by:
 15055 ;;		_LTC6804_rdcv
 15056 ;; This function uses a non-reentrant model
 15057 ;;
 15058                           
 15059                           
 15060                           ;psect for function _LTC6804_rdcv_reg
 15061  2FAB                     _LTC6804_rdcv_reg:	
 15062                           
 15063                           ;incstack = 0
 15064                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15065                           ;LTC6804_rdcv_reg@reg stored from wreg
 15066  2FAB  0020               	movlb	0	; select bank0
 15067  2FAC  00BB               	movwf	LTC6804_rdcv_reg@reg
 15068                           
 15069                           ;ltc6804.c: 621: const char REG_LEN = 8;
 15070                           ;ltc6804.c: 622: char cmd[4];
 15071                           ;ltc6804.c: 623: int cmd_pec;
 15072                           ;ltc6804.c: 626: if (reg == 1)
 15073  2FAD  033B               	decf	LTC6804_rdcv_reg@reg,w
 15074  2FAE  1D03               	btfss	3,2
 15075  2FAF  2FB2               	goto	l7768
 15076                           
 15077                           ;ltc6804.c: 627: {
 15078                           ;ltc6804.c: 628: cmd[1] = 0x04;
 15079  2FB0  3004               	movlw	4
 15080  2FB1  2FC3               	goto	L12
 15081  2FB2                     l7768:	
 15082                           ;ltc6804.c: 630: }
 15083                           
 15084                           ;ltc6804.c: 629: cmd[0] = 0x00;
 15085                           
 15086                           
 15087                           ;ltc6804.c: 631: else if(reg == 2)
 15088  2FB2  3002               	movlw	2
 15089  2FB3  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 15090  2FB4  1D03               	btfss	3,2
 15091  2FB5  2FB8               	goto	l7774
 15092                           
 15093                           ;ltc6804.c: 632: {
 15094                           ;ltc6804.c: 633: cmd[1] = 0x06;
 15095  2FB6  3006               	movlw	6
 15096  2FB7  2FC3               	goto	L12
 15097  2FB8                     l7774:	
 15098                           ;ltc6804.c: 635: }
 15099                           
 15100                           ;ltc6804.c: 634: cmd[0] = 0x00;
 15101                           
 15102                           
 15103                           ;ltc6804.c: 636: else if(reg == 3)
 15104  2FB8  3003               	movlw	3
 15105  2FB9  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 15106  2FBA  1D03               	btfss	3,2
 15107  2FBB  2FBE               	goto	l7780
 15108                           
 15109                           ;ltc6804.c: 637: {
 15110                           ;ltc6804.c: 638: cmd[1] = 0x08;
 15111  2FBC  3008               	movlw	8
 15112  2FBD  2FC3               	goto	L12
 15113  2FBE                     l7780:	
 15114                           ;ltc6804.c: 640: }
 15115                           
 15116                           ;ltc6804.c: 639: cmd[0] = 0x00;
 15117                           
 15118                           
 15119                           ;ltc6804.c: 641: else if(reg == 4)
 15120  2FBE  3004               	movlw	4
 15121  2FBF  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 15122  2FC0  1D03               	btfss	3,2
 15123  2FC1  2FC7               	goto	l7786
 15124                           
 15125                           ;ltc6804.c: 642: {
 15126                           ;ltc6804.c: 643: cmd[1] = 0x0A;
 15127  2FC2  300A               	movlw	10
 15128  2FC3                     L12:	
 15129  2FC3  00B1               	movwf	??_LTC6804_rdcv_reg
 15130  2FC4  0831               	movf	??_LTC6804_rdcv_reg,w
 15131  2FC5  00B8               	movwf	LTC6804_rdcv_reg@cmd+1
 15132                           
 15133                           ;ltc6804.c: 644: cmd[0] = 0x00;
 15134  2FC6  01B7               	clrf	LTC6804_rdcv_reg@cmd
 15135  2FC7                     l7786:	
 15136                           
 15137                           ;ltc6804.c: 645: }
 15138                           ;ltc6804.c: 648: cmd_pec = pec15_calc(2, cmd);
 15139  2FC7  3037               	movlw	low LTC6804_rdcv_reg@cmd
 15140  2FC8  00F8               	movwf	pec15_calc@data
 15141  2FC9  3000               	movlw	high LTC6804_rdcv_reg@cmd
 15142  2FCA  00F9               	movwf	pec15_calc@data+1
 15143  2FCB  3002               	movlw	2
 15144  2FCC  31AD  25C1  31AF   	fcall	_pec15_calc
 15145  2FCF  0879               	movf	?_pec15_calc+1,w
 15146  2FD0  0020               	movlb	0	; select bank0
 15147  2FD1  00B6               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 15148  2FD2  0878               	movf	?_pec15_calc,w
 15149  2FD3  00B5               	movwf	LTC6804_rdcv_reg@cmd_pec
 15150                           
 15151                           ;ltc6804.c: 649: cmd[2] = (char)(cmd_pec >> 8);
 15152  2FD4  0836               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 15153  2FD5  00B1               	movwf	??_LTC6804_rdcv_reg
 15154  2FD6  0831               	movf	??_LTC6804_rdcv_reg,w
 15155  2FD7  00B9               	movwf	LTC6804_rdcv_reg@cmd+2
 15156                           
 15157                           ;ltc6804.c: 650: cmd[3] = (char)(cmd_pec);
 15158  2FD8  0835               	movf	LTC6804_rdcv_reg@cmd_pec,w
 15159  2FD9  00B1               	movwf	??_LTC6804_rdcv_reg
 15160  2FDA  0831               	movf	??_LTC6804_rdcv_reg,w
 15161  2FDB  00BA               	movwf	LTC6804_rdcv_reg@cmd+3
 15162                           
 15163                           ;ltc6804.c: 653: wakeup_idle ();
 15164  2FDC  31AA  22D2  31AF   	fcall	_wakeup_idle
 15165                           
 15166                           ;ltc6804.c: 656: LATDbits.LATD3 = 0;
 15167  2FDF  0022               	movlb	2	; select bank2
 15168  2FE0  118F               	bcf	15,3	;volatile
 15169                           
 15170                           ;ltc6804.c: 657: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 15171  2FE1  3004               	movlw	4
 15172  2FE2  0020               	movlb	0	; select bank0
 15173  2FE3  00B1               	movwf	??_LTC6804_rdcv_reg
 15174  2FE4  0831               	movf	??_LTC6804_rdcv_reg,w
 15175  2FE5  00F6               	movwf	spi_write_read@tx_len
 15176  2FE6  0830               	movf	LTC6804_rdcv_reg@data,w
 15177  2FE7  00B2               	movwf	??_LTC6804_rdcv_reg+1
 15178  2FE8  0832               	movf	??_LTC6804_rdcv_reg+1,w
 15179  2FE9  00F7               	movwf	spi_write_read@rx_data
 15180  2FEA  082F               	movf	LTC6804_rdcv_reg@total_ic,w
 15181  2FEB  00B3               	movwf	??_LTC6804_rdcv_reg+2
 15182  2FEC  0833               	movf	??_LTC6804_rdcv_reg+2,w
 15183  2FED  00F2               	movwf	___bmul@multiplicand
 15184  2FEE  3065               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 15185  2FEF  0084               	movwf	4
 15186  2FF0  30B1               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 15187  2FF1  0085               	movwf	5
 15188  2FF2  0800               	movf	0,w	;code access
 15189  2FF3  31AB  2316  31AF   	fcall	___bmul
 15190  2FF6  0020               	movlb	0	; select bank0
 15191  2FF7  00B4               	movwf	??_LTC6804_rdcv_reg+3
 15192  2FF8  0834               	movf	??_LTC6804_rdcv_reg+3,w
 15193  2FF9  00F8               	movwf	spi_write_read@rx_len
 15194  2FFA  3037               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 15195  2FFB  31AC  242E         	fcall	_spi_write_read
 15196                           
 15197                           ;ltc6804.c: 658: LATDbits.LATD3 = 1;
 15198  2FFD  0022               	movlb	2	; select bank2
 15199  2FFE  158F               	bsf	15,3	;volatile
 15200  2FFF  0008               	return
 15201  3000                     __end_of_LTC6804_rdcv_reg:	
 15202                           
 15203                           	psect	text35
 15204  2C2E                     __ptext35:	
 15205 ;; *************** function _spi_write_read *****************
 15206 ;; Defined at:
 15207 ;;		line 1228 in file "ltc6804.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;  tx_Data         1    wreg     PTR unsigned char 
 15210 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 15211 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 15212 ;;  tx_len          1    6[COMMON] unsigned char 
 15213 ;;  rx_data         1    7[COMMON] PTR unsigned char 
 15214 ;;		 -> LTC6804_rdaux@data(8), LTC6804_rdcv@cell_data(8), sumVoltages@data(8), NULL(0), 
 15215 ;;  rx_len          1    8[COMMON] unsigned char 
 15216 ;; Auto vars:     Size  Location     Type
 15217 ;;  tx_Data         1    4[BANK0 ] PTR unsigned char 
 15218 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 15219 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 15220 ;;  i               1    3[BANK0 ] unsigned char 
 15221 ;;  i               1    2[BANK0 ] unsigned char 
 15222 ;; Return value:  Size  Location     Type
 15223 ;;                  1    wreg      void 
 15224 ;; Registers used:
 15225 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15226 ;; Tracked objects:
 15227 ;;		On entry : 0/0
 15228 ;;		On exit  : 0/0
 15229 ;;		Unchanged: 0/0
 15230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15231 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15232 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15233 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15234 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15235 ;;Total ram usage:        8 bytes
 15236 ;; Hardware stack levels used:    1
 15237 ;; Hardware stack levels required when called:    3
 15238 ;; This function calls:
 15239 ;;		_spi_read
 15240 ;;		_spi_write
 15241 ;; This function is called by:
 15242 ;;		_LTC6804_rdstat_reg
 15243 ;;		_LTC6804_rdcv_reg
 15244 ;;		_LTC6804_rdaux_reg
 15245 ;;		_LTC6804_clrcell
 15246 ;;		_LTC6804_clraux
 15247 ;;		_LTC6804_rdcfg
 15248 ;; This function uses a non-reentrant model
 15249 ;;
 15250                           
 15251                           
 15252                           ;psect for function _spi_write_read
 15253  2C2E                     _spi_write_read:	
 15254                           
 15255                           ;incstack = 0
 15256                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15257                           ;spi_write_read@tx_Data stored from wreg
 15258  2C2E  0020               	movlb	0	; select bank0
 15259  2C2F  00A4               	movwf	spi_write_read@tx_Data
 15260                           
 15261                           ;ltc6804.c: 1234: for(char i = 0; i < tx_len; i++)
 15262  2C30  01A2               	clrf	spi_write_read@i
 15263  2C31                     l7018:	
 15264  2C31  0876               	movf	spi_write_read@tx_len,w
 15265  2C32  0222               	subwf	spi_write_read@i,w
 15266  2C33  1803               	btfsc	3,0
 15267  2C34  2C45               	goto	l7020
 15268                           
 15269                           ;ltc6804.c: 1235: {
 15270                           ;ltc6804.c: 1236: spi_write(tx_Data[i]);
 15271  2C35  0822               	movf	spi_write_read@i,w
 15272  2C36  0724               	addwf	spi_write_read@tx_Data,w
 15273  2C37  00A0               	movwf	??_spi_write_read
 15274  2C38  0820               	movf	??_spi_write_read,w
 15275  2C39  0086               	movwf	6
 15276  2C3A  0187               	clrf	7
 15277  2C3B  0801               	movf	1,w
 15278  2C3C  31AA  22E4  31AC   	fcall	_spi_write
 15279  2C3F  3001               	movlw	1
 15280  2C40  0020               	movlb	0	; select bank0
 15281  2C41  00A0               	movwf	??_spi_write_read
 15282  2C42  0820               	movf	??_spi_write_read,w
 15283  2C43  07A2               	addwf	spi_write_read@i,f
 15284  2C44  2C31               	goto	l7018
 15285  2C45                     l7020:	
 15286                           
 15287                           ;ltc6804.c: 1238: }
 15288                           ;ltc6804.c: 1240: for(char i = 0; i < rx_len; i++)
 15289  2C45  01A3               	clrf	spi_write_read@i_1437
 15290  2C46                     l7026:	
 15291  2C46  0878               	movf	spi_write_read@rx_len,w
 15292  2C47  0223               	subwf	spi_write_read@i_1437,w
 15293  2C48  1803               	btfsc	3,0
 15294  2C49  0008               	return
 15295                           
 15296                           ;ltc6804.c: 1241: {
 15297                           ;ltc6804.c: 1242: rx_data[i] = (char)spi_read(0xFF);
 15298  2C4A  30FF               	movlw	255
 15299  2C4B  31AA  22EF  31AC   	fcall	_spi_read
 15300  2C4E  0020               	movlb	0	; select bank0
 15301  2C4F  00A0               	movwf	??_spi_write_read
 15302  2C50  0823               	movf	spi_write_read@i_1437,w
 15303  2C51  0777               	addwf	spi_write_read@rx_data,w
 15304  2C52  00A1               	movwf	??_spi_write_read+1
 15305  2C53  0821               	movf	??_spi_write_read+1,w
 15306  2C54  0086               	movwf	6
 15307  2C55  0187               	clrf	7
 15308  2C56  0820               	movf	??_spi_write_read,w
 15309  2C57  0081               	movwf	1
 15310  2C58  3001               	movlw	1
 15311  2C59  00A0               	movwf	??_spi_write_read
 15312  2C5A  0820               	movf	??_spi_write_read,w
 15313  2C5B  07A3               	addwf	spi_write_read@i_1437,f
 15314  2C5C  2C46               	goto	l7026
 15315  2C5D                     __end_of_spi_write_read:	
 15316                           
 15317                           	psect	text36
 15318  2AEF                     __ptext36:	
 15319 ;; *************** function _spi_read *****************
 15320 ;; Defined at:
 15321 ;;		line 42 in file "spi.c"
 15322 ;; Parameters:    Size  Location     Type
 15323 ;;  data            1    wreg     unsigned char 
 15324 ;; Auto vars:     Size  Location     Type
 15325 ;;  data            1    3[COMMON] unsigned char 
 15326 ;;  readData        1    4[COMMON] unsigned char 
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      unsigned char 
 15329 ;; Registers used:
 15330 ;;		wreg
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15338 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15339 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15340 ;;Total ram usage:        3 bytes
 15341 ;; Hardware stack levels used:    1
 15342 ;; Hardware stack levels required when called:    2
 15343 ;; This function calls:
 15344 ;;		Nothing
 15345 ;; This function is called by:
 15346 ;;		_spi_write_read
 15347 ;; This function uses a non-reentrant model
 15348 ;;
 15349                           
 15350                           
 15351                           ;psect for function _spi_read
 15352  2AEF                     _spi_read:	
 15353                           
 15354                           ;incstack = 0
 15355                           ; Regs used in _spi_read: [wreg]
 15356                           ;spi_read@data stored from wreg
 15357  2AEF  00F3               	movwf	spi_read@data
 15358                           
 15359                           ;spi.c: 43: SSP1BUF = data;
 15360  2AF0  0873               	movf	spi_read@data,w
 15361  2AF1  0024               	movlb	4	; select bank4
 15362  2AF2  0091               	movwf	17	;volatile
 15363  2AF3                     l790:	
 15364                           ;spi.c: 44: while(SSP1STATbits.BF == 0);
 15365                           
 15366  2AF3  1C14               	btfss	20,0	;volatile
 15367  2AF4  2AF3               	goto	l790
 15368                           
 15369                           ;spi.c: 45: char readData = SSP1BUF;
 15370  2AF5  0811               	movf	17,w	;volatile
 15371  2AF6  00F2               	movwf	??_spi_read
 15372  2AF7  0872               	movf	??_spi_read,w
 15373  2AF8  00F4               	movwf	spi_read@readData
 15374                           
 15375                           ;spi.c: 46: return readData;
 15376  2AF9  0874               	movf	spi_read@readData,w
 15377  2AFA  0008               	return
 15378  2AFB                     __end_of_spi_read:	
 15379                           
 15380                           	psect	text37
 15381  2B16                     __ptext37:	
 15382 ;; *************** function ___bmul *****************
 15383 ;; Defined at:
 15384 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;  multiplier      1    wreg     unsigned char 
 15387 ;;  multiplicand    1    2[COMMON] unsigned char 
 15388 ;; Auto vars:     Size  Location     Type
 15389 ;;  multiplier      1    5[COMMON] unsigned char 
 15390 ;;  product         1    4[COMMON] unsigned char 
 15391 ;; Return value:  Size  Location     Type
 15392 ;;                  1    wreg      unsigned char 
 15393 ;; Registers used:
 15394 ;;		wreg, status,2, status,0
 15395 ;; Tracked objects:
 15396 ;;		On entry : 0/0
 15397 ;;		On exit  : 0/0
 15398 ;;		Unchanged: 0/0
 15399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15400 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15404 ;;Total ram usage:        4 bytes
 15405 ;; Hardware stack levels used:    1
 15406 ;; Hardware stack levels required when called:    2
 15407 ;; This function calls:
 15408 ;;		Nothing
 15409 ;; This function is called by:
 15410 ;;		_LTC6804_rdstat_reg
 15411 ;;		_LTC6804_rdcv
 15412 ;;		_LTC6804_rdcv_reg
 15413 ;;		_LTC6804_rdaux
 15414 ;;		_LTC6804_rdaux_reg
 15415 ;;		_LTC6804_rdcfg
 15416 ;; This function uses a non-reentrant model
 15417 ;;
 15418                           
 15419                           
 15420                           ;psect for function ___bmul
 15421  2B16                     ___bmul:	
 15422                           
 15423                           ;incstack = 0
 15424                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 15425                           ;___bmul@multiplier stored from wreg
 15426  2B16  00F5               	movwf	___bmul@multiplier
 15427  2B17  01F4               	clrf	___bmul@product
 15428  2B18                     l4714:	
 15429  2B18  1C75               	btfss	___bmul@multiplier,0
 15430  2B19  2B1E               	goto	l4718
 15431  2B1A  0872               	movf	___bmul@multiplicand,w
 15432  2B1B  00F3               	movwf	??___bmul
 15433  2B1C  0873               	movf	??___bmul,w
 15434  2B1D  07F4               	addwf	___bmul@product,f
 15435  2B1E                     l4718:	
 15436  2B1E  1003               	clrc
 15437  2B1F  0DF2               	rlf	___bmul@multiplicand,f
 15438  2B20  1003               	clrc
 15439  2B21  0CF5               	rrf	___bmul@multiplier,f
 15440  2B22  0875               	movf	___bmul@multiplier,w
 15441  2B23  1D03               	btfss	3,2
 15442  2B24  2B18               	goto	l4714
 15443  2B25  0874               	movf	___bmul@product,w
 15444  2B26  0008               	return
 15445  2B27                     __end_of___bmul:	
 15446                           
 15447                           	psect	text38
 15448  2C5D                     __ptext38:	
 15449 ;; *************** function _LTC6804_adcv *****************
 15450 ;; Defined at:
 15451 ;;		line 364 in file "ltc6804.c"
 15452 ;; Parameters:    Size  Location     Type
 15453 ;;		None
 15454 ;; Auto vars:     Size  Location     Type
 15455 ;;  cmd             4   16[BANK0 ] unsigned char [4]
 15456 ;;  cmd_pec         2   20[BANK0 ] int 
 15457 ;; Return value:  Size  Location     Type
 15458 ;;                  1    wreg      void 
 15459 ;; Registers used:
 15460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15461 ;; Tracked objects:
 15462 ;;		On entry : 0/0
 15463 ;;		On exit  : 0/0
 15464 ;;		Unchanged: 0/0
 15465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15467 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15468 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15469 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15470 ;;Total ram usage:        7 bytes
 15471 ;; Hardware stack levels used:    1
 15472 ;; Hardware stack levels required when called:    4
 15473 ;; This function calls:
 15474 ;;		_pec15_calc
 15475 ;;		_spi_write_array
 15476 ;;		_wakeup_idle
 15477 ;; This function is called by:
 15478 ;;		_measureVoltages
 15479 ;; This function uses a non-reentrant model
 15480 ;;
 15481                           
 15482                           
 15483                           ;psect for function _LTC6804_adcv
 15484  2C5D                     _LTC6804_adcv:	
 15485                           
 15486                           ;ltc6804.c: 367: char cmd[4];
 15487                           ;ltc6804.c: 368: int cmd_pec;
 15488                           ;ltc6804.c: 371: cmd[0] = ADCV[0];
 15489                           
 15490                           ;incstack = 0
 15491                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15492  2C5D  0025               	movlb	5	; select bank5
 15493  2C5E  0860               	movf	_ADCV^(0+640),w
 15494  2C5F  0020               	movlb	0	; select bank0
 15495  2C60  00AF               	movwf	??_LTC6804_adcv
 15496  2C61  082F               	movf	??_LTC6804_adcv,w
 15497  2C62  00B0               	movwf	LTC6804_adcv@cmd
 15498                           
 15499                           ;ltc6804.c: 372: cmd[1] = ADCV[1];
 15500  2C63  0025               	movlb	5	; select bank5
 15501  2C64  0861               	movf	(_ADCV^(0+640)+1),w
 15502  2C65  0020               	movlb	0	; select bank0
 15503  2C66  00AF               	movwf	??_LTC6804_adcv
 15504  2C67  082F               	movf	??_LTC6804_adcv,w
 15505  2C68  00B1               	movwf	LTC6804_adcv@cmd+1
 15506                           
 15507                           ;ltc6804.c: 375: cmd_pec = pec15_calc(2, ADCV);
 15508  2C69  30E0               	movlw	low _ADCV
 15509  2C6A  00F8               	movwf	pec15_calc@data
 15510  2C6B  3002               	movlw	high _ADCV
 15511  2C6C  00F9               	movwf	pec15_calc@data+1
 15512  2C6D  3002               	movlw	2
 15513  2C6E  31AD  25C1  31AC   	fcall	_pec15_calc
 15514  2C71  0879               	movf	?_pec15_calc+1,w
 15515  2C72  0020               	movlb	0	; select bank0
 15516  2C73  00B5               	movwf	LTC6804_adcv@cmd_pec+1
 15517  2C74  0878               	movf	?_pec15_calc,w
 15518  2C75  00B4               	movwf	LTC6804_adcv@cmd_pec
 15519                           
 15520                           ;ltc6804.c: 376: cmd[2] = (char)(cmd_pec >> 8);
 15521  2C76  0835               	movf	LTC6804_adcv@cmd_pec+1,w
 15522  2C77  00AF               	movwf	??_LTC6804_adcv
 15523  2C78  082F               	movf	??_LTC6804_adcv,w
 15524  2C79  00B2               	movwf	LTC6804_adcv@cmd+2
 15525                           
 15526                           ;ltc6804.c: 377: cmd[3] = (char)(cmd_pec);
 15527  2C7A  0834               	movf	LTC6804_adcv@cmd_pec,w
 15528  2C7B  00AF               	movwf	??_LTC6804_adcv
 15529  2C7C  082F               	movf	??_LTC6804_adcv,w
 15530  2C7D  00B3               	movwf	LTC6804_adcv@cmd+3
 15531                           
 15532                           ;ltc6804.c: 380: wakeup_idle ();
 15533  2C7E  31AA  22D2  31AC   	fcall	_wakeup_idle
 15534                           
 15535                           ;ltc6804.c: 383: LATDbits.LATD3 = 0;
 15536  2C81  0022               	movlb	2	; select bank2
 15537  2C82  118F               	bcf	15,3	;volatile
 15538                           
 15539                           ;ltc6804.c: 384: spi_write_array(4,cmd);
 15540  2C83  3030               	movlw	(low (LTC6804_adcv@cmd| 0))& (0+255)
 15541  2C84  0020               	movlb	0	; select bank0
 15542  2C85  00AF               	movwf	??_LTC6804_adcv
 15543  2C86  082F               	movf	??_LTC6804_adcv,w
 15544  2C87  00F5               	movwf	spi_write_array@data
 15545  2C88  3004               	movlw	4
 15546  2C89  31AB  235B         	fcall	_spi_write_array
 15547                           
 15548                           ;ltc6804.c: 385: LATDbits.LATD3 = 1;
 15549  2C8B  0022               	movlb	2	; select bank2
 15550  2C8C  158F               	bsf	15,3	;volatile
 15551  2C8D  0008               	return
 15552  2C8E                     __end_of_LTC6804_adcv:	
 15553                           
 15554                           	psect	text39
 15555  216B                     __ptext39:	
 15556 ;; *************** function _getTemps *****************
 15557 ;; Defined at:
 15558 ;;		line 32 in file "adc.c"
 15559 ;; Parameters:    Size  Location     Type
 15560 ;;  temperatures    1    wreg     PTR int 
 15561 ;;		 -> main@temps(10), 
 15562 ;;  numTemps        2   40[BANK1 ] int 
 15563 ;; Auto vars:     Size  Location     Type
 15564 ;;  temperatures    1   48[BANK1 ] PTR int 
 15565 ;;		 -> main@temps(10), 
 15566 ;;  inc             2   49[BANK1 ] int 
 15567 ;;  highestTemp     2   46[BANK1 ] int 
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  2   40[BANK1 ] int 
 15570 ;; Registers used:
 15571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/0
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15577 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15578 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15579 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15580 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15581 ;;Total ram usage:       11 bytes
 15582 ;; Hardware stack levels used:    1
 15583 ;; Hardware stack levels required when called:    5
 15584 ;; This function calls:
 15585 ;;		_adcRead
 15586 ;;		_calculateTemp
 15587 ;; This function is called by:
 15588 ;;		_main
 15589 ;;		_startUp
 15590 ;; This function uses a non-reentrant model
 15591 ;;
 15592                           
 15593                           
 15594                           ;psect for function _getTemps
 15595  216B                     _getTemps:	
 15596                           
 15597                           ;incstack = 0
 15598                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15599                           ;getTemps@temperatures stored from wreg
 15600  216B  0021               	movlb	1	; select bank1
 15601  216C  00D0               	movwf	getTemps@temperatures^(0+128)
 15602                           
 15603                           ;adc.c: 33: int highestTemp = 0;
 15604  216D  01CE               	clrf	getTemps@highestTemp^(0+128)
 15605  216E  01CF               	clrf	(getTemps@highestTemp+1)^(0+128)
 15606                           
 15607                           ;adc.c: 35: LATBbits.LATB5 = 0;
 15608  216F  0022               	movlb	2	; select bank2
 15609  2170  128D               	bcf	13,5	;volatile
 15610                           
 15611                           ;adc.c: 36: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 15612  2171  0025               	movlb	5	; select bank5
 15613  2172  0862               	movf	_tempChannels^(0+640),w
 15614  2173  31AF  2757  31A1   	fcall	_adcRead
 15615  2176  0873               	movf	?_adcRead+1,w
 15616  2177  0021               	movlb	1	; select bank1
 15617  2178  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15618  2179  0872               	movf	?_adcRead,w
 15619  217A  00C0               	movwf	calculateTemp@adcValue^(0+128)
 15620  217B  31A2  2271  31A1   	fcall	_calculateTemp
 15621  217E  0021               	movlb	1	; select bank1
 15622  217F  0841               	movf	(?_calculateTemp+1)^(0+128),w
 15623  2180  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 15624  2181  0840               	movf	?_calculateTemp^(0+128),w
 15625  2182  00CE               	movwf	getTemps@highestTemp^(0+128)
 15626                           
 15627                           ;adc.c: 37: temperatures[0] = highestTemp;
 15628  2183  0850               	movf	getTemps@temperatures^(0+128),w
 15629  2184  0086               	movwf	6
 15630  2185  3002               	movlw	2	; select bank4/5
 15631  2186  0087               	movwf	7
 15632  2187  084E               	movf	getTemps@highestTemp^(0+128),w
 15633  2188  3FC0               	movwi [0]fsr1
 15634  2189  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15635  218A  3FC1               	movwi [1]fsr1
 15636                           
 15637                           ;adc.c: 38: for(int inc = 1; inc < numTemps; inc ++){
 15638  218B  3001               	movlw	1
 15639  218C  00D1               	movwf	getTemps@inc^(0+128)
 15640  218D  3000               	movlw	0
 15641  218E  00D2               	movwf	(getTemps@inc^(0+128)+1)
 15642  218F                     l8110:	
 15643  218F  0852               	movf	(getTemps@inc+1)^(0+128),w
 15644  2190  3A80               	xorlw	128
 15645  2191  00CA               	movwf	??_getTemps^(0+128)
 15646  2192  0849               	movf	(getTemps@numTemps+1)^(0+128),w
 15647  2193  3A80               	xorlw	128
 15648  2194  024A               	subwf	??_getTemps^(0+128),w
 15649  2195  1D03               	skipz
 15650  2196  2999               	goto	u11175
 15651  2197  0848               	movf	getTemps@numTemps^(0+128),w
 15652  2198  0251               	subwf	getTemps@inc^(0+128),w
 15653  2199                     u11175:	
 15654  2199  1803               	btfsc	3,0
 15655  219A  29E2               	goto	l188
 15656                           
 15657                           ;adc.c: 39: temperatures[inc] = calculateTemp(adcRead(tempChannels[inc]));
 15658  219B  0021               	movlb	1	; select bank1
 15659  219C  0851               	movf	getTemps@inc^(0+128),w
 15660  219D  3EE2               	addlw	(low (_tempChannels| (0+512)))& (0+255)
 15661  219E  0086               	movwf	6
 15662  219F  3002               	movlw	2	; select bank5/6
 15663  21A0  0087               	movwf	7
 15664  21A1  0801               	movf	1,w
 15665  21A2  31AF  2757  31A1   	fcall	_adcRead
 15666  21A5  0873               	movf	?_adcRead+1,w
 15667  21A6  0021               	movlb	1	; select bank1
 15668  21A7  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15669  21A8  0872               	movf	?_adcRead,w
 15670  21A9  00C0               	movwf	calculateTemp@adcValue^(0+128)
 15671  21AA  31A2  2271  31A1   	fcall	_calculateTemp
 15672  21AD  0021               	movlb	1	; select bank1
 15673  21AE  3551               	lslf	getTemps@inc^(0+128),w
 15674  21AF  0750               	addwf	getTemps@temperatures^(0+128),w
 15675  21B0  00CA               	movwf	??_getTemps^(0+128)
 15676  21B1  084A               	movf	??_getTemps^(0+128),w
 15677  21B2  0086               	movwf	6
 15678  21B3  3002               	movlw	2	; select bank4/5
 15679  21B4  0087               	movwf	7
 15680  21B5  0840               	movf	?_calculateTemp^(0+128),w
 15681  21B6  3FC0               	movwi [0]fsr1
 15682  21B7  0841               	movf	(?_calculateTemp+1)^(0+128),w
 15683  21B8  3FC1               	movwi [1]fsr1
 15684                           
 15685                           ;adc.c: 40: if(temperatures[inc] > highestTemp){
 15686  21B9  3551               	lslf	getTemps@inc^(0+128),w
 15687  21BA  0750               	addwf	getTemps@temperatures^(0+128),w
 15688  21BB  00CA               	movwf	??_getTemps^(0+128)
 15689  21BC  084A               	movf	??_getTemps^(0+128),w
 15690  21BD  0086               	movwf	6
 15691  21BE  3002               	movlw	2	; select bank4/5
 15692  21BF  0087               	movwf	7
 15693  21C0  3F40               	moviw [0]fsr1
 15694  21C1  00CB               	movwf	(??_getTemps+1)^(0+128)
 15695  21C2  3F41               	moviw [1]fsr1
 15696  21C3  00CC               	movwf	((??_getTemps+1)^(0+128)+1)
 15697  21C4  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15698  21C5  3A80               	xorlw	128
 15699  21C6  00CD               	movwf	(??_getTemps+3)^(0+128)
 15700  21C7  084C               	movf	(??_getTemps+2)^(0+128),w
 15701  21C8  3A80               	xorlw	128
 15702  21C9  024D               	subwf	(??_getTemps+3)^(0+128),w
 15703  21CA  1D03               	skipz
 15704  21CB  29CE               	goto	u11165
 15705  21CC  084B               	movf	(??_getTemps+1)^(0+128),w
 15706  21CD  024E               	subwf	getTemps@highestTemp^(0+128),w
 15707  21CE                     u11165:	
 15708  21CE  1803               	skipnc
 15709  21CF  29DC               	goto	l8108
 15710                           
 15711                           ;adc.c: 41: highestTemp = temperatures[inc];
 15712  21D0  0021               	movlb	1	; select bank1
 15713  21D1  3551               	lslf	getTemps@inc^(0+128),w
 15714  21D2  0750               	addwf	getTemps@temperatures^(0+128),w
 15715  21D3  00CA               	movwf	??_getTemps^(0+128)
 15716  21D4  084A               	movf	??_getTemps^(0+128),w
 15717  21D5  0086               	movwf	6
 15718  21D6  3002               	movlw	2	; select bank4/5
 15719  21D7  0087               	movwf	7
 15720  21D8  3F40               	moviw [0]fsr1
 15721  21D9  00CE               	movwf	getTemps@highestTemp^(0+128)
 15722  21DA  3F41               	moviw [1]fsr1
 15723  21DB  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 15724  21DC                     l8108:	
 15725  21DC  3001               	movlw	1
 15726  21DD  0021               	movlb	1	; select bank1
 15727  21DE  07D1               	addwf	getTemps@inc^(0+128),f
 15728  21DF  3000               	movlw	0
 15729  21E0  3DD2               	addwfc	(getTemps@inc+1)^(0+128),f
 15730  21E1  298F               	goto	l8110
 15731  21E2                     l188:	
 15732                           
 15733                           ;adc.c: 42: }
 15734                           ;adc.c: 43: }
 15735                           ;adc.c: 45: LATBbits.LATB5 = 1;
 15736  21E2  0022               	movlb	2	; select bank2
 15737  21E3  168D               	bsf	13,5	;volatile
 15738                           
 15739                           ;adc.c: 46: return highestTemp;
 15740  21E4  0021               	movlb	1	; select bank1
 15741  21E5  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15742  21E6  00C9               	movwf	(?_getTemps+1)^(0+128)
 15743  21E7  084E               	movf	getTemps@highestTemp^(0+128),w
 15744  21E8  00C8               	movwf	?_getTemps^(0+128)
 15745  21E9  0008               	return
 15746  21EA                     __end_of_getTemps:	
 15747                           
 15748                           	psect	text40
 15749  2271                     __ptext40:	
 15750 ;; *************** function _calculateTemp *****************
 15751 ;; Defined at:
 15752 ;;		line 12 in file "adc.c"
 15753 ;; Parameters:    Size  Location     Type
 15754 ;;  adcValue        2   32[BANK1 ] int 
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;  voltage         4   36[BANK1 ] float 
 15757 ;; Return value:  Size  Location     Type
 15758 ;;                  2   32[BANK1 ] int 
 15759 ;; Registers used:
 15760 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15761 ;; Tracked objects:
 15762 ;;		On entry : 0/0
 15763 ;;		On exit  : 0/0
 15764 ;;		Unchanged: 0/0
 15765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15766 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15767 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15768 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15769 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15770 ;;Total ram usage:        8 bytes
 15771 ;; Hardware stack levels used:    1
 15772 ;; Hardware stack levels required when called:    4
 15773 ;; This function calls:
 15774 ;;		___fldiv
 15775 ;;		___flmul
 15776 ;;		___fltol
 15777 ;;		___xxtofl
 15778 ;; This function is called by:
 15779 ;;		_getTemps
 15780 ;; This function uses a non-reentrant model
 15781 ;;
 15782                           
 15783                           
 15784                           ;psect for function _calculateTemp
 15785  2271                     _calculateTemp:	
 15786                           
 15787                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 15788                           
 15789                           ;incstack = 0
 15790                           ; Regs used in _calculateTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15791  2271  3040               	movlw	64
 15792  2272  0020               	movlb	0	; select bank0
 15793  2273  00D5               	movwf	___flmul@b+3
 15794  2274  30A0               	movlw	160
 15795  2275  00D4               	movwf	___flmul@b+2
 15796  2276  3000               	movlw	0
 15797  2277  00D3               	movwf	___flmul@b+1
 15798  2278  3000               	movlw	0
 15799  2279  00D2               	movwf	___flmul@b
 15800  227A  3045               	movlw	69
 15801  227B  00BB               	movwf	___fldiv@a+3
 15802  227C  3080               	movlw	128
 15803  227D  00BA               	movwf	___fldiv@a+2
 15804  227E  3000               	movlw	0
 15805  227F  00B9               	movwf	___fldiv@a+1
 15806  2280  3000               	movlw	0
 15807  2281  00B8               	movwf	___fldiv@a
 15808  2282  0021               	movlb	1	; select bank1
 15809  2283  0840               	movf	calculateTemp@adcValue^(0+128),w
 15810  2284  0020               	movlb	0	; select bank0
 15811  2285  00AE               	movwf	___xxtofl@val
 15812  2286  0021               	movlb	1	; select bank1
 15813  2287  0841               	movf	(calculateTemp@adcValue+1)^(0+128),w
 15814  2288  0020               	movlb	0	; select bank0
 15815  2289  00AF               	movwf	___xxtofl@val+1
 15816  228A  0D89               	rlf	9,f
 15817  228B  3B89               	subwfb	9,f
 15818  228C  0989               	comf	9,f
 15819  228D  00B0               	movwf	___xxtofl@val+2
 15820  228E  00B1               	movwf	___xxtofl@val+3
 15821  228F  3001               	movlw	1
 15822  2290  31A3  2381  31A2   	fcall	___xxtofl
 15823  2293  0020               	movlb	0	; select bank0
 15824  2294  0831               	movf	?___xxtofl+3,w
 15825  2295  00BF               	movwf	___fldiv@b+3
 15826  2296  0830               	movf	?___xxtofl+2,w
 15827  2297  00BE               	movwf	___fldiv@b+2
 15828  2298  082F               	movf	?___xxtofl+1,w
 15829  2299  00BD               	movwf	___fldiv@b+1
 15830  229A  082E               	movf	?___xxtofl,w
 15831  229B  00BC               	movwf	___fldiv@b
 15832  229C  319E  2671  31A2   	fcall	___fldiv
 15833  229F  0020               	movlb	0	; select bank0
 15834  22A0  083B               	movf	?___fldiv+3,w
 15835  22A1  00D9               	movwf	___flmul@a+3
 15836  22A2  083A               	movf	?___fldiv+2,w
 15837  22A3  00D8               	movwf	___flmul@a+2
 15838  22A4  0839               	movf	?___fldiv+1,w
 15839  22A5  00D7               	movwf	___flmul@a+1
 15840  22A6  0838               	movf	?___fldiv,w
 15841  22A7  00D6               	movwf	___flmul@a
 15842  22A8  3183  23CD  31A2   	fcall	___flmul
 15843  22AB  0020               	movlb	0	; select bank0
 15844  22AC  0855               	movf	?___flmul+3,w
 15845  22AD  0021               	movlb	1	; select bank1
 15846  22AE  00C7               	movwf	(calculateTemp@voltage+3)^(0+128)
 15847  22AF  0020               	movlb	0	; select bank0
 15848  22B0  0854               	movf	?___flmul+2,w
 15849  22B1  0021               	movlb	1	; select bank1
 15850  22B2  00C6               	movwf	(calculateTemp@voltage+2)^(0+128)
 15851  22B3  0020               	movlb	0	; select bank0
 15852  22B4  0853               	movf	?___flmul+1,w
 15853  22B5  0021               	movlb	1	; select bank1
 15854  22B6  00C5               	movwf	(calculateTemp@voltage+1)^(0+128)
 15855  22B7  0020               	movlb	0	; select bank0
 15856  22B8  0852               	movf	?___flmul,w
 15857  22B9  0021               	movlb	1	; select bank1
 15858  22BA  00C4               	movwf	calculateTemp@voltage^(0+128)
 15859                           
 15860                           ;adc.c: 14: return temperatures[(int)(voltage*10)];
 15861  22BB  0847               	movf	(calculateTemp@voltage+3)^(0+128),w
 15862  22BC  0020               	movlb	0	; select bank0
 15863  22BD  00D9               	movwf	___flmul@a+3
 15864  22BE  0021               	movlb	1	; select bank1
 15865  22BF  0846               	movf	(calculateTemp@voltage+2)^(0+128),w
 15866  22C0  0020               	movlb	0	; select bank0
 15867  22C1  00D8               	movwf	___flmul@a+2
 15868  22C2  0021               	movlb	1	; select bank1
 15869  22C3  0845               	movf	(calculateTemp@voltage+1)^(0+128),w
 15870  22C4  0020               	movlb	0	; select bank0
 15871  22C5  00D7               	movwf	___flmul@a+1
 15872  22C6  0021               	movlb	1	; select bank1
 15873  22C7  0844               	movf	calculateTemp@voltage^(0+128),w
 15874  22C8  0020               	movlb	0	; select bank0
 15875  22C9  00D6               	movwf	___flmul@a
 15876  22CA  3041               	movlw	65
 15877  22CB  00D5               	movwf	___flmul@b+3
 15878  22CC  3020               	movlw	32
 15879  22CD  00D4               	movwf	___flmul@b+2
 15880  22CE  3000               	movlw	0
 15881  22CF  00D3               	movwf	___flmul@b+1
 15882  22D0  3000               	movlw	0
 15883  22D1  00D2               	movwf	___flmul@b
 15884  22D2  3183  23CD  31A2   	fcall	___flmul
 15885  22D5  0020               	movlb	0	; select bank0
 15886  22D6  0855               	movf	?___flmul+3,w
 15887  22D7  0021               	movlb	1	; select bank1
 15888  22D8  00B8               	movwf	(___fltol@f1+3)^(0+128)
 15889  22D9  0020               	movlb	0	; select bank0
 15890  22DA  0854               	movf	?___flmul+2,w
 15891  22DB  0021               	movlb	1	; select bank1
 15892  22DC  00B7               	movwf	(___fltol@f1+2)^(0+128)
 15893  22DD  0020               	movlb	0	; select bank0
 15894  22DE  0853               	movf	?___flmul+1,w
 15895  22DF  0021               	movlb	1	; select bank1
 15896  22E0  00B6               	movwf	(___fltol@f1+1)^(0+128)
 15897  22E1  0020               	movlb	0	; select bank0
 15898  22E2  0852               	movf	?___flmul,w
 15899  22E3  0021               	movlb	1	; select bank1
 15900  22E4  00B5               	movwf	___fltol@f1^(0+128)
 15901  22E5  31A0  20EC         	fcall	___fltol
 15902  22E7  0021               	movlb	1	; select bank1
 15903  22E8  0836               	movf	(?___fltol+1)^(0+128),w
 15904  22E9  0085               	movwf	5
 15905  22EA  0835               	movf	?___fltol^(0+128),w
 15906  22EB  0084               	movwf	4
 15907  22EC  3068               	movlw	low (_temperatures| (0+32768))
 15908  22ED  0784               	addwf	4,f
 15909  22EE  30B0               	movlw	high (_temperatures| (0+32768))
 15910  22EF  3D85               	addwfc	5,f
 15911  22F0  0800               	movf	0,w	;code access
 15912  22F1  00C2               	movwf	??_calculateTemp^(0+128)
 15913  22F2  01C3               	clrf	(??_calculateTemp^(0+128)+1)
 15914  22F3  0842               	movf	??_calculateTemp^(0+128),w
 15915  22F4  00C0               	movwf	?_calculateTemp^(0+128)
 15916  22F5  0843               	movf	(??_calculateTemp+1)^(0+128),w
 15917  22F6  00C1               	movwf	(?_calculateTemp+1)^(0+128)
 15918  22F7  0008               	return
 15919  22F8                     __end_of_calculateTemp:	
 15920                           
 15921                           	psect	text41
 15922  20EC                     __ptext41:	
 15923 ;; *************** function ___fltol *****************
 15924 ;; Defined at:
 15925 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;  f1              4   21[BANK1 ] int 
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;  exp1            1   31[BANK1 ] unsigned char 
 15930 ;;  sign1           1   30[BANK1 ] unsigned char 
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  4   21[BANK1 ] long 
 15933 ;; Registers used:
 15934 ;;		wreg, status,2, status,0
 15935 ;; Tracked objects:
 15936 ;;		On entry : 0/0
 15937 ;;		On exit  : 0/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15940 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15941 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15942 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15943 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15944 ;;Total ram usage:       11 bytes
 15945 ;; Hardware stack levels used:    1
 15946 ;; Hardware stack levels required when called:    2
 15947 ;; This function calls:
 15948 ;;		Nothing
 15949 ;; This function is called by:
 15950 ;;		_calculateTemp
 15951 ;;		_sprintf
 15952 ;;		_startUp
 15953 ;; This function uses a non-reentrant model
 15954 ;;
 15955                           
 15956                           
 15957                           ;psect for function ___fltol
 15958  20EC                     ___fltol:	
 15959                           
 15960                           ;incstack = 0
 15961                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15962  20EC  0021               	movlb	1	; select bank1
 15963  20ED  0835               	movf	___fltol@f1^(0+128),w
 15964  20EE  00B9               	movwf	??___fltol^(0+128)
 15965  20EF  0836               	movf	(___fltol@f1+1)^(0+128),w
 15966  20F0  00BA               	movwf	(??___fltol^(0+128)+1)
 15967  20F1  0837               	movf	(___fltol@f1+2)^(0+128),w
 15968  20F2  00BB               	movwf	(??___fltol^(0+128)+2)
 15969  20F3  0838               	movf	(___fltol@f1+3)^(0+128),w
 15970  20F4  00BC               	movwf	(??___fltol^(0+128)+3)
 15971  20F5  1003               	clrc
 15972  20F6  0D3B               	rlf	(??___fltol^(0+128)+2),w
 15973  20F7  0D3C               	rlf	(??___fltol^(0+128)+3),w
 15974  20F8  00BD               	movwf	(??___fltol+4)^(0+128)
 15975  20F9  083D               	movf	(??___fltol+4)^(0+128),w
 15976  20FA  00BF               	movwf	___fltol@exp1^(0+128)
 15977  20FB  083F               	movf	___fltol@exp1^(0+128),w
 15978  20FC  1D03               	btfss	3,2
 15979  20FD  2907               	goto	l7260
 15980  20FE  3000               	movlw	0
 15981  20FF  00B8               	movwf	(?___fltol+3)^(0+128)
 15982  2100  3000               	movlw	0
 15983  2101  00B7               	movwf	(?___fltol+2)^(0+128)
 15984  2102  3000               	movlw	0
 15985  2103  00B6               	movwf	(?___fltol+1)^(0+128)
 15986  2104  3000               	movlw	0
 15987  2105  00B5               	movwf	?___fltol^(0+128)
 15988  2106  0008               	return
 15989  2107                     l7260:	
 15990  2107  0835               	movf	___fltol@f1^(0+128),w
 15991  2108  00B9               	movwf	??___fltol^(0+128)
 15992  2109  0836               	movf	(___fltol@f1+1)^(0+128),w
 15993  210A  00BA               	movwf	(??___fltol^(0+128)+1)
 15994  210B  0837               	movf	(___fltol@f1+2)^(0+128),w
 15995  210C  00BB               	movwf	(??___fltol^(0+128)+2)
 15996  210D  0838               	movf	(___fltol@f1+3)^(0+128),w
 15997  210E  00BC               	movwf	(??___fltol^(0+128)+3)
 15998  210F  301F               	movlw	31
 15999  2110                     u9725:	
 16000  2110  36BC               	lsrf	(??___fltol^(0+128)+3),f
 16001  2111  0CBB               	rrf	(??___fltol^(0+128)+2),f
 16002  2112  0CBA               	rrf	(??___fltol^(0+128)+1),f
 16003  2113  0CB9               	rrf	??___fltol^(0+128),f
 16004  2114  0B89               	decfsz	9,f
 16005  2115  2910               	goto	u9725
 16006  2116  0839               	movf	??___fltol^(0+128),w
 16007  2117  00BD               	movwf	(??___fltol+4)^(0+128)
 16008  2118  083D               	movf	(??___fltol+4)^(0+128),w
 16009  2119  00BE               	movwf	___fltol@sign1^(0+128)
 16010  211A  17B7               	bsf	(___fltol@f1^(0+128)+2),7
 16011  211B  30FF               	movlw	255
 16012  211C  05B5               	andwf	___fltol@f1^(0+128),f
 16013  211D  30FF               	movlw	255
 16014  211E  05B6               	andwf	(___fltol@f1+1)^(0+128),f
 16015  211F  30FF               	movlw	255
 16016  2120  05B7               	andwf	(___fltol@f1+2)^(0+128),f
 16017  2121  3000               	movlw	0
 16018  2122  05B8               	andwf	(___fltol@f1+3)^(0+128),f
 16019  2123  3096               	movlw	150
 16020  2124  02BF               	subwf	___fltol@exp1^(0+128),f
 16021  2125  1FBF               	btfss	___fltol@exp1^(0+128),7
 16022  2126  2943               	goto	l7278
 16023  2127  083F               	movf	___fltol@exp1^(0+128),w
 16024  2128  3A80               	xorlw	128
 16025  2129  3E97               	addlw	151
 16026  212A  1803               	skipnc
 16027  212B  2935               	goto	l7276
 16028  212C  3000               	movlw	0
 16029  212D  00B8               	movwf	(?___fltol+3)^(0+128)
 16030  212E  3000               	movlw	0
 16031  212F  00B7               	movwf	(?___fltol+2)^(0+128)
 16032  2130  3000               	movlw	0
 16033  2131  00B6               	movwf	(?___fltol+1)^(0+128)
 16034  2132  3000               	movlw	0
 16035  2133  00B5               	movwf	?___fltol^(0+128)
 16036  2134  0008               	return
 16037  2135                     l7276:	
 16038  2135  3001               	movlw	1
 16039  2136                     u9755:	
 16040  2136  36B8               	lsrf	(___fltol@f1+3)^(0+128),f
 16041  2137  0CB7               	rrf	(___fltol@f1+2)^(0+128),f
 16042  2138  0CB6               	rrf	(___fltol@f1+1)^(0+128),f
 16043  2139  0CB5               	rrf	___fltol@f1^(0+128),f
 16044  213A  0B89               	decfsz	9,f
 16045  213B  2936               	goto	u9755
 16046  213C  3001               	movlw	1
 16047  213D  00B9               	movwf	??___fltol^(0+128)
 16048  213E  0839               	movf	??___fltol^(0+128),w
 16049  213F  07BF               	addwf	___fltol@exp1^(0+128),f
 16050  2140  1903               	btfsc	3,2
 16051  2141  295C               	goto	l7286
 16052  2142  2935               	goto	l7276
 16053  2143                     l7278:	
 16054  2143  3020               	movlw	32
 16055  2144  023F               	subwf	___fltol@exp1^(0+128),w
 16056  2145  1C03               	skipc
 16057  2146  2959               	goto	l1180
 16058  2147  3000               	movlw	0
 16059  2148  00B8               	movwf	(?___fltol+3)^(0+128)
 16060  2149  3000               	movlw	0
 16061  214A  00B7               	movwf	(?___fltol+2)^(0+128)
 16062  214B  3000               	movlw	0
 16063  214C  00B6               	movwf	(?___fltol+1)^(0+128)
 16064  214D  3000               	movlw	0
 16065  214E  00B5               	movwf	?___fltol^(0+128)
 16066  214F  0008               	return
 16067  2150                     l7284:	
 16068  2150  3001               	movlw	1
 16069  2151                     u9785:	
 16070  2151  35B5               	lslf	___fltol@f1^(0+128),f
 16071  2152  0DB6               	rlf	(___fltol@f1+1)^(0+128),f
 16072  2153  0DB7               	rlf	(___fltol@f1+2)^(0+128),f
 16073  2154  0DB8               	rlf	(___fltol@f1+3)^(0+128),f
 16074  2155  0B89               	decfsz	9,f
 16075  2156  2951               	goto	u9785
 16076  2157  3001               	movlw	1
 16077  2158  02BF               	subwf	___fltol@exp1^(0+128),f
 16078  2159                     l1180:	
 16079  2159  083F               	movf	___fltol@exp1^(0+128),w
 16080  215A  1D03               	btfss	3,2
 16081  215B  2950               	goto	l7284
 16082  215C                     l7286:	
 16083  215C  083E               	movf	___fltol@sign1^(0+128),w
 16084  215D  1903               	btfsc	3,2
 16085  215E  0008               	return
 16086  215F  09B5               	comf	___fltol@f1^(0+128),f
 16087  2160  09B6               	comf	(___fltol@f1+1)^(0+128),f
 16088  2161  09B7               	comf	(___fltol@f1+2)^(0+128),f
 16089  2162  09B8               	comf	(___fltol@f1+3)^(0+128),f
 16090  2163  0AB5               	incf	___fltol@f1^(0+128),f
 16091  2164  1903               	skipnz
 16092  2165  0AB6               	incf	(___fltol@f1+1)^(0+128),f
 16093  2166  1903               	skipnz
 16094  2167  0AB7               	incf	(___fltol@f1+2)^(0+128),f
 16095  2168  1903               	skipnz
 16096  2169  0AB8               	incf	(___fltol@f1+3)^(0+128),f
 16097  216A  0008               	return
 16098  216B                     __end_of___fltol:	
 16099                           
 16100                           	psect	text42
 16101  2CFB                     __ptext42:	
 16102 ;; *************** function _getCurrent *****************
 16103 ;; Defined at:
 16104 ;;		line 24 in file "adc.c"
 16105 ;; Parameters:    Size  Location     Type
 16106 ;;		None
 16107 ;; Auto vars:     Size  Location     Type
 16108 ;;  currentValue    4   69[BANK1 ] float 
 16109 ;; Return value:  Size  Location     Type
 16110 ;;                  4   65[BANK1 ] float 
 16111 ;; Registers used:
 16112 ;;		wreg, status,2, status,0, pclath, cstack
 16113 ;; Tracked objects:
 16114 ;;		On entry : 0/0
 16115 ;;		On exit  : 0/0
 16116 ;;		Unchanged: 0/0
 16117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16118 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16119 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16121 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16122 ;;Total ram usage:        8 bytes
 16123 ;; Hardware stack levels used:    1
 16124 ;; Hardware stack levels required when called:    5
 16125 ;; This function calls:
 16126 ;;		___xxtofl
 16127 ;;		_adcRead
 16128 ;;		_calculateCurrent
 16129 ;; This function is called by:
 16130 ;;		_main
 16131 ;;		_startUp
 16132 ;; This function uses a non-reentrant model
 16133 ;;
 16134                           
 16135                           
 16136                           ;psect for function _getCurrent
 16137  2CFB                     _getCurrent:	
 16138                           
 16139                           ;adc.c: 25: float currentValue = (float)adcRead((char)10101);
 16140                           
 16141                           ;incstack = 0
 16142                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 16143  2CFB  3075               	movlw	117
 16144  2CFC  31AF  2757  31AC   	fcall	_adcRead
 16145  2CFF  0872               	movf	?_adcRead,w
 16146  2D00  0020               	movlb	0	; select bank0
 16147  2D01  00AE               	movwf	___xxtofl@val
 16148  2D02  0873               	movf	?_adcRead+1,w
 16149  2D03  00AF               	movwf	___xxtofl@val+1
 16150  2D04  0D89               	rlf	9,f
 16151  2D05  3B89               	subwfb	9,f
 16152  2D06  0989               	comf	9,f
 16153  2D07  00B0               	movwf	___xxtofl@val+2
 16154  2D08  00B1               	movwf	___xxtofl@val+3
 16155  2D09  3001               	movlw	1
 16156  2D0A  31A3  2381  31AC   	fcall	___xxtofl
 16157  2D0D  0020               	movlb	0	; select bank0
 16158  2D0E  0831               	movf	?___xxtofl+3,w
 16159  2D0F  0021               	movlb	1	; select bank1
 16160  2D10  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 16161  2D11  0020               	movlb	0	; select bank0
 16162  2D12  0830               	movf	?___xxtofl+2,w
 16163  2D13  0021               	movlb	1	; select bank1
 16164  2D14  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 16165  2D15  0020               	movlb	0	; select bank0
 16166  2D16  082F               	movf	?___xxtofl+1,w
 16167  2D17  0021               	movlb	1	; select bank1
 16168  2D18  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 16169  2D19  0020               	movlb	0	; select bank0
 16170  2D1A  082E               	movf	?___xxtofl,w
 16171  2D1B  0021               	movlb	1	; select bank1
 16172  2D1C  00E5               	movwf	getCurrent@currentValue^(0+128)
 16173                           
 16174                           ;adc.c: 26: currentValue = calculateCurrent(currentValue);
 16175  2D1D  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 16176  2D1E  00D8               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 16177  2D1F  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 16178  2D20  00D7               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 16179  2D21  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 16180  2D22  00D6               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 16181  2D23  0865               	movf	getCurrent@currentValue^(0+128),w
 16182  2D24  00D5               	movwf	calculateCurrent@adcValue^(0+128)
 16183  2D25  31A2  22F8         	fcall	_calculateCurrent
 16184  2D27  0021               	movlb	1	; select bank1
 16185  2D28  0858               	movf	(?_calculateCurrent+3)^(0+128),w
 16186  2D29  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 16187  2D2A  0857               	movf	(?_calculateCurrent+2)^(0+128),w
 16188  2D2B  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 16189  2D2C  0856               	movf	(?_calculateCurrent+1)^(0+128),w
 16190  2D2D  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 16191  2D2E  0855               	movf	?_calculateCurrent^(0+128),w
 16192  2D2F  00E5               	movwf	getCurrent@currentValue^(0+128)
 16193                           
 16194                           ;adc.c: 28: return currentValue;
 16195  2D30  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 16196  2D31  00E4               	movwf	(?_getCurrent+3)^(0+128)
 16197  2D32  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 16198  2D33  00E3               	movwf	(?_getCurrent+2)^(0+128)
 16199  2D34  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 16200  2D35  00E2               	movwf	(?_getCurrent+1)^(0+128)
 16201  2D36  0865               	movf	getCurrent@currentValue^(0+128),w
 16202  2D37  00E1               	movwf	?_getCurrent^(0+128)
 16203  2D38  0008               	return
 16204  2D39                     __end_of_getCurrent:	
 16205                           
 16206                           	psect	text43
 16207  22F8                     __ptext43:	
 16208 ;; *************** function _calculateCurrent *****************
 16209 ;; Defined at:
 16210 ;;		line 19 in file "adc.c"
 16211 ;; Parameters:    Size  Location     Type
 16212 ;;  adcValue        4   53[BANK1 ] float 
 16213 ;; Auto vars:     Size  Location     Type
 16214 ;;  curr            4   57[BANK1 ] float 
 16215 ;; Return value:  Size  Location     Type
 16216 ;;                  4   53[BANK1 ] float 
 16217 ;; Registers used:
 16218 ;;		wreg, status,2, status,0, pclath, cstack
 16219 ;; Tracked objects:
 16220 ;;		On entry : 0/0
 16221 ;;		On exit  : 0/0
 16222 ;;		Unchanged: 0/0
 16223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16224 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16225 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16227 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16228 ;;Total ram usage:       12 bytes
 16229 ;; Hardware stack levels used:    1
 16230 ;; Hardware stack levels required when called:    4
 16231 ;; This function calls:
 16232 ;;		___fladd
 16233 ;;		___fldiv
 16234 ;;		___flmul
 16235 ;; This function is called by:
 16236 ;;		_getCurrent
 16237 ;; This function uses a non-reentrant model
 16238 ;;
 16239                           
 16240                           
 16241                           ;psect for function _calculateCurrent
 16242  22F8                     _calculateCurrent:	
 16243                           
 16244                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16245                           
 16246                           ;incstack = 0
 16247                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16248  22F8  30C0               	movlw	192
 16249  22F9  0021               	movlb	1	; select bank1
 16250  22FA  00C0               	movwf	(___fladd@b+3)^(0+128)
 16251  22FB  3020               	movlw	32
 16252  22FC  00BF               	movwf	(___fladd@b+2)^(0+128)
 16253  22FD  3000               	movlw	0
 16254  22FE  00BE               	movwf	(___fladd@b+1)^(0+128)
 16255  22FF  3000               	movlw	0
 16256  2300  00BD               	movwf	___fladd@b^(0+128)
 16257  2301  3040               	movlw	64
 16258  2302  0020               	movlb	0	; select bank0
 16259  2303  00D5               	movwf	___flmul@b+3
 16260  2304  30A0               	movlw	160
 16261  2305  00D4               	movwf	___flmul@b+2
 16262  2306  3000               	movlw	0
 16263  2307  00D3               	movwf	___flmul@b+1
 16264  2308  3000               	movlw	0
 16265  2309  00D2               	movwf	___flmul@b
 16266  230A  3045               	movlw	69
 16267  230B  00BB               	movwf	___fldiv@a+3
 16268  230C  307F               	movlw	127
 16269  230D  00BA               	movwf	___fldiv@a+2
 16270  230E  30F0               	movlw	240
 16271  230F  00B9               	movwf	___fldiv@a+1
 16272  2310  3000               	movlw	0
 16273  2311  00B8               	movwf	___fldiv@a
 16274  2312  0021               	movlb	1	; select bank1
 16275  2313  0858               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 16276  2314  0020               	movlb	0	; select bank0
 16277  2315  00BF               	movwf	___fldiv@b+3
 16278  2316  0021               	movlb	1	; select bank1
 16279  2317  0857               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 16280  2318  0020               	movlb	0	; select bank0
 16281  2319  00BE               	movwf	___fldiv@b+2
 16282  231A  0021               	movlb	1	; select bank1
 16283  231B  0856               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 16284  231C  0020               	movlb	0	; select bank0
 16285  231D  00BD               	movwf	___fldiv@b+1
 16286  231E  0021               	movlb	1	; select bank1
 16287  231F  0855               	movf	calculateCurrent@adcValue^(0+128),w
 16288  2320  0020               	movlb	0	; select bank0
 16289  2321  00BC               	movwf	___fldiv@b
 16290  2322  319E  2671  31A2   	fcall	___fldiv
 16291  2325  0020               	movlb	0	; select bank0
 16292  2326  083B               	movf	?___fldiv+3,w
 16293  2327  00D9               	movwf	___flmul@a+3
 16294  2328  083A               	movf	?___fldiv+2,w
 16295  2329  00D8               	movwf	___flmul@a+2
 16296  232A  0839               	movf	?___fldiv+1,w
 16297  232B  00D7               	movwf	___flmul@a+1
 16298  232C  0838               	movf	?___fldiv,w
 16299  232D  00D6               	movwf	___flmul@a
 16300  232E  3183  23CD  31A2   	fcall	___flmul
 16301  2331  0020               	movlb	0	; select bank0
 16302  2332  0855               	movf	?___flmul+3,w
 16303  2333  0021               	movlb	1	; select bank1
 16304  2334  00C4               	movwf	(___fladd@a+3)^(0+128)
 16305  2335  0020               	movlb	0	; select bank0
 16306  2336  0854               	movf	?___flmul+2,w
 16307  2337  0021               	movlb	1	; select bank1
 16308  2338  00C3               	movwf	(___fladd@a+2)^(0+128)
 16309  2339  0020               	movlb	0	; select bank0
 16310  233A  0853               	movf	?___flmul+1,w
 16311  233B  0021               	movlb	1	; select bank1
 16312  233C  00C2               	movwf	(___fladd@a+1)^(0+128)
 16313  233D  0020               	movlb	0	; select bank0
 16314  233E  0852               	movf	?___flmul,w
 16315  233F  0021               	movlb	1	; select bank1
 16316  2340  00C1               	movwf	___fladd@a^(0+128)
 16317  2341  3185  25F9  31A2   	fcall	___fladd
 16318  2344  0021               	movlb	1	; select bank1
 16319  2345  0840               	movf	(?___fladd+3)^(0+128),w
 16320  2346  00E0               	movwf	(_calculateCurrent$2175+3)^(0+128)
 16321  2347  083F               	movf	(?___fladd+2)^(0+128),w
 16322  2348  00DF               	movwf	(_calculateCurrent$2175+2)^(0+128)
 16323  2349  083E               	movf	(?___fladd+1)^(0+128),w
 16324  234A  00DE               	movwf	(_calculateCurrent$2175+1)^(0+128)
 16325  234B  083D               	movf	?___fladd^(0+128),w
 16326  234C  00DD               	movwf	_calculateCurrent$2175^(0+128)
 16327                           
 16328                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16329  234D  303D               	movlw	61
 16330  234E  0020               	movlb	0	; select bank0
 16331  234F  00BB               	movwf	___fldiv@a+3
 16332  2350  3021               	movlw	33
 16333  2351  00BA               	movwf	___fldiv@a+2
 16334  2352  3061               	movlw	97
 16335  2353  00B9               	movwf	___fldiv@a+1
 16336  2354  30E5               	movlw	229
 16337  2355  00B8               	movwf	___fldiv@a
 16338  2356  0021               	movlb	1	; select bank1
 16339  2357  0860               	movf	(_calculateCurrent$2175+3)^(0+128),w
 16340  2358  0020               	movlb	0	; select bank0
 16341  2359  00BF               	movwf	___fldiv@b+3
 16342  235A  0021               	movlb	1	; select bank1
 16343  235B  085F               	movf	(_calculateCurrent$2175+2)^(0+128),w
 16344  235C  0020               	movlb	0	; select bank0
 16345  235D  00BE               	movwf	___fldiv@b+2
 16346  235E  0021               	movlb	1	; select bank1
 16347  235F  085E               	movf	(_calculateCurrent$2175+1)^(0+128),w
 16348  2360  0020               	movlb	0	; select bank0
 16349  2361  00BD               	movwf	___fldiv@b+1
 16350  2362  0021               	movlb	1	; select bank1
 16351  2363  085D               	movf	_calculateCurrent$2175^(0+128),w
 16352  2364  0020               	movlb	0	; select bank0
 16353  2365  00BC               	movwf	___fldiv@b
 16354  2366  319E  2671         	fcall	___fldiv
 16355  2368  0020               	movlb	0	; select bank0
 16356  2369  083B               	movf	?___fldiv+3,w
 16357  236A  0021               	movlb	1	; select bank1
 16358  236B  00DC               	movwf	(calculateCurrent@curr+3)^(0+128)
 16359  236C  0020               	movlb	0	; select bank0
 16360  236D  083A               	movf	?___fldiv+2,w
 16361  236E  0021               	movlb	1	; select bank1
 16362  236F  00DB               	movwf	(calculateCurrent@curr+2)^(0+128)
 16363  2370  0020               	movlb	0	; select bank0
 16364  2371  0839               	movf	?___fldiv+1,w
 16365  2372  0021               	movlb	1	; select bank1
 16366  2373  00DA               	movwf	(calculateCurrent@curr+1)^(0+128)
 16367  2374  0020               	movlb	0	; select bank0
 16368  2375  0838               	movf	?___fldiv,w
 16369  2376  0021               	movlb	1	; select bank1
 16370  2377  00D9               	movwf	calculateCurrent@curr^(0+128)
 16371                           
 16372                           ;adc.c: 21: return curr;
 16373  2378  085C               	movf	(calculateCurrent@curr+3)^(0+128),w
 16374  2379  00D8               	movwf	(?_calculateCurrent+3)^(0+128)
 16375  237A  085B               	movf	(calculateCurrent@curr+2)^(0+128),w
 16376  237B  00D7               	movwf	(?_calculateCurrent+2)^(0+128)
 16377  237C  085A               	movf	(calculateCurrent@curr+1)^(0+128),w
 16378  237D  00D6               	movwf	(?_calculateCurrent+1)^(0+128)
 16379  237E  0859               	movf	calculateCurrent@curr^(0+128),w
 16380  237F  00D5               	movwf	?_calculateCurrent^(0+128)
 16381  2380  0008               	return
 16382  2381                     __end_of_calculateCurrent:	
 16383                           
 16384                           	psect	text44
 16385  03CD                     __ptext44:	
 16386 ;; *************** function ___flmul *****************
 16387 ;; Defined at:
 16388 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;  b               4   50[BANK0 ] float 
 16391 ;;  a               4   54[BANK0 ] float 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  prod            4   70[BANK0 ] struct .
 16394 ;;  grs             4   65[BANK0 ] unsigned long 
 16395 ;;  temp            2   74[BANK0 ] struct .
 16396 ;;  bexp            1   69[BANK0 ] unsigned char 
 16397 ;;  aexp            1   64[BANK0 ] unsigned char 
 16398 ;;  sign            1   63[BANK0 ] unsigned char 
 16399 ;; Return value:  Size  Location     Type
 16400 ;;                  4   50[BANK0 ] unsigned char 
 16401 ;; Registers used:
 16402 ;;		wreg, status,2, status,0, pclath, cstack
 16403 ;; Tracked objects:
 16404 ;;		On entry : 0/0
 16405 ;;		On exit  : 0/0
 16406 ;;		Unchanged: 0/0
 16407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16408 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16409 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16410 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16411 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16412 ;;Total ram usage:       26 bytes
 16413 ;; Hardware stack levels used:    1
 16414 ;; Hardware stack levels required when called:    3
 16415 ;; This function calls:
 16416 ;;		__Umul8_16
 16417 ;; This function is called by:
 16418 ;;		_calculateTemp
 16419 ;;		_calculateCurrent
 16420 ;;		_sumVoltages
 16421 ;;		_measureVoltages
 16422 ;;		_fround
 16423 ;;		_scale
 16424 ;;		_sprintf
 16425 ;;		_startUp
 16426 ;; This function uses a non-reentrant model
 16427 ;;
 16428                           
 16429                           
 16430                           ;psect for function ___flmul
 16431  03CD                     ___flmul:	
 16432                           
 16433                           ;incstack = 0
 16434                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16435  03CD  0020               	movlb	0	; select bank0
 16436  03CE  0855               	movf	___flmul@b+3,w
 16437  03CF  3980               	andlw	128
 16438  03D0  00DA               	movwf	??___flmul
 16439  03D1  085A               	movf	??___flmul,w
 16440  03D2  00DF               	movwf	___flmul@sign
 16441  03D3  3555               	lslf	___flmul@b+3,w
 16442  03D4  00DA               	movwf	??___flmul
 16443  03D5  085A               	movf	??___flmul,w
 16444  03D6  00E5               	movwf	___flmul@bexp
 16445  03D7  1BD4               	btfsc	___flmul@b+2,7
 16446  03D8  1465               	bsf	___flmul@bexp,0
 16447  03D9  0865               	movf	___flmul@bexp,w
 16448  03DA  1903               	btfsc	3,2
 16449  03DB  2BE9               	goto	l6888
 16450  03DC  0A65               	incf	___flmul@bexp,w
 16451  03DD  1D03               	btfss	3,2
 16452  03DE  2BE7               	goto	l6886
 16453  03DF  3000               	movlw	0
 16454  03E0  00D5               	movwf	___flmul@b+3
 16455  03E1  3000               	movlw	0
 16456  03E2  00D4               	movwf	___flmul@b+2
 16457  03E3  3000               	movlw	0
 16458  03E4  00D3               	movwf	___flmul@b+1
 16459  03E5  3000               	movlw	0
 16460  03E6  00D2               	movwf	___flmul@b
 16461  03E7                     l6886:	
 16462  03E7  17D4               	bsf	___flmul@b+2,7
 16463  03E8  2BF1               	goto	l6890
 16464  03E9                     l6888:	
 16465  03E9  3000               	movlw	0
 16466  03EA  00D5               	movwf	___flmul@b+3
 16467  03EB  3000               	movlw	0
 16468  03EC  00D4               	movwf	___flmul@b+2
 16469  03ED  3000               	movlw	0
 16470  03EE  00D3               	movwf	___flmul@b+1
 16471  03EF  3000               	movlw	0
 16472  03F0  00D2               	movwf	___flmul@b
 16473  03F1                     l6890:	
 16474  03F1  0859               	movf	___flmul@a+3,w
 16475  03F2  3980               	andlw	128
 16476  03F3  00DA               	movwf	??___flmul
 16477  03F4  085A               	movf	??___flmul,w
 16478  03F5  06DF               	xorwf	___flmul@sign,f
 16479  03F6  3559               	lslf	___flmul@a+3,w
 16480  03F7  00DA               	movwf	??___flmul
 16481  03F8  085A               	movf	??___flmul,w
 16482  03F9  00E0               	movwf	___flmul@aexp
 16483  03FA  1BD8               	btfsc	___flmul@a+2,7
 16484  03FB  1460               	bsf	___flmul@aexp,0
 16485  03FC  0860               	movf	___flmul@aexp,w
 16486  03FD  1903               	btfsc	3,2
 16487  03FE  2C0C               	goto	l6906
 16488  03FF  0A60               	incf	___flmul@aexp,w
 16489  0400  1D03               	btfss	3,2
 16490  0401  2C0A               	goto	l6904
 16491  0402  3000               	movlw	0
 16492  0403  00D9               	movwf	___flmul@a+3
 16493  0404  3000               	movlw	0
 16494  0405  00D8               	movwf	___flmul@a+2
 16495  0406  3000               	movlw	0
 16496  0407  00D7               	movwf	___flmul@a+1
 16497  0408  3000               	movlw	0
 16498  0409  00D6               	movwf	___flmul@a
 16499  040A                     l6904:	
 16500  040A  17D8               	bsf	___flmul@a+2,7
 16501  040B  2C14               	goto	l6908
 16502  040C                     l6906:	
 16503  040C  3000               	movlw	0
 16504  040D  00D9               	movwf	___flmul@a+3
 16505  040E  3000               	movlw	0
 16506  040F  00D8               	movwf	___flmul@a+2
 16507  0410  3000               	movlw	0
 16508  0411  00D7               	movwf	___flmul@a+1
 16509  0412  3000               	movlw	0
 16510  0413  00D6               	movwf	___flmul@a
 16511  0414                     l6908:	
 16512  0414  0860               	movf	___flmul@aexp,w
 16513  0415  1D03               	btfss	3,2
 16514  0416  0865               	movf	___flmul@bexp,w
 16515  0417  1D03               	btfss	3,2
 16516  0418  2C22               	goto	l6916
 16517  0419  3000               	movlw	0
 16518  041A  00D5               	movwf	?___flmul+3
 16519  041B  3000               	movlw	0
 16520  041C  00D4               	movwf	?___flmul+2
 16521  041D  3000               	movlw	0
 16522  041E  00D3               	movwf	?___flmul+1
 16523  041F  3000               	movlw	0
 16524  0420  00D2               	movwf	?___flmul
 16525  0421  0008               	return
 16526  0422                     l6916:	
 16527  0422  0852               	movf	___flmul@b,w
 16528  0423  00DA               	movwf	??___flmul
 16529  0424  085A               	movf	??___flmul,w
 16530  0425  00F2               	movwf	__Umul8_16@multiplicand
 16531  0426  0858               	movf	___flmul@a+2,w
 16532  0427  31AB  23C8  3183   	fcall	__Umul8_16
 16533  042A  0873               	movf	?__Umul8_16+1,w
 16534  042B  0020               	movlb	0	; select bank0
 16535  042C  00EB               	movwf	___flmul@temp+1
 16536  042D  0872               	movf	?__Umul8_16,w
 16537  042E  00EA               	movwf	___flmul@temp
 16538  042F  086A               	movf	___flmul@temp,w
 16539  0430  00DA               	movwf	??___flmul
 16540  0431  01DB               	clrf	??___flmul+1
 16541  0432  01DC               	clrf	??___flmul+2
 16542  0433  01DD               	clrf	??___flmul+3
 16543  0434  085D               	movf	??___flmul+3,w
 16544  0435  00E4               	movwf	___flmul@grs+3
 16545  0436  085C               	movf	??___flmul+2,w
 16546  0437  00E3               	movwf	___flmul@grs+2
 16547  0438  085B               	movf	??___flmul+1,w
 16548  0439  00E2               	movwf	___flmul@grs+1
 16549  043A  085A               	movf	??___flmul,w
 16550  043B  00E1               	movwf	___flmul@grs
 16551  043C  086B               	movf	___flmul@temp+1,w
 16552  043D  00DA               	movwf	??___flmul
 16553  043E  01DB               	clrf	??___flmul+1
 16554  043F  01DC               	clrf	??___flmul+2
 16555  0440  01DD               	clrf	??___flmul+3
 16556  0441  085D               	movf	??___flmul+3,w
 16557  0442  00E9               	movwf	___flmul@prod+3
 16558  0443  085C               	movf	??___flmul+2,w
 16559  0444  00E8               	movwf	___flmul@prod+2
 16560  0445  085B               	movf	??___flmul+1,w
 16561  0446  00E7               	movwf	___flmul@prod+1
 16562  0447  085A               	movf	??___flmul,w
 16563  0448  00E6               	movwf	___flmul@prod
 16564  0449  0853               	movf	___flmul@b+1,w
 16565  044A  00DA               	movwf	??___flmul
 16566  044B  085A               	movf	??___flmul,w
 16567  044C  00F2               	movwf	__Umul8_16@multiplicand
 16568  044D  0857               	movf	___flmul@a+1,w
 16569  044E  31AB  23C8  3183   	fcall	__Umul8_16
 16570  0451  0873               	movf	?__Umul8_16+1,w
 16571  0452  0020               	movlb	0	; select bank0
 16572  0453  00EB               	movwf	___flmul@temp+1
 16573  0454  0872               	movf	?__Umul8_16,w
 16574  0455  00EA               	movwf	___flmul@temp
 16575  0456  086A               	movf	___flmul@temp,w
 16576  0457  00DA               	movwf	??___flmul
 16577  0458  01DB               	clrf	??___flmul+1
 16578  0459  01DC               	clrf	??___flmul+2
 16579  045A  01DD               	clrf	??___flmul+3
 16580  045B  085A               	movf	??___flmul,w
 16581  045C  07E1               	addwf	___flmul@grs,f
 16582  045D  085B               	movf	??___flmul+1,w
 16583  045E  3DE2               	addwfc	___flmul@grs+1,f
 16584  045F  085C               	movf	??___flmul+2,w
 16585  0460  3DE3               	addwfc	___flmul@grs+2,f
 16586  0461  085D               	movf	??___flmul+3,w
 16587  0462  3DE4               	addwfc	___flmul@grs+3,f
 16588  0463  086B               	movf	___flmul@temp+1,w
 16589  0464  00DA               	movwf	??___flmul
 16590  0465  01DB               	clrf	??___flmul+1
 16591  0466  01DC               	clrf	??___flmul+2
 16592  0467  01DD               	clrf	??___flmul+3
 16593  0468  085A               	movf	??___flmul,w
 16594  0469  07E6               	addwf	___flmul@prod,f
 16595  046A  085B               	movf	??___flmul+1,w
 16596  046B  3DE7               	addwfc	___flmul@prod+1,f
 16597  046C  085C               	movf	??___flmul+2,w
 16598  046D  3DE8               	addwfc	___flmul@prod+2,f
 16599  046E  085D               	movf	??___flmul+3,w
 16600  046F  3DE9               	addwfc	___flmul@prod+3,f
 16601  0470  0854               	movf	___flmul@b+2,w
 16602  0471  00DA               	movwf	??___flmul
 16603  0472  085A               	movf	??___flmul,w
 16604  0473  00F2               	movwf	__Umul8_16@multiplicand
 16605  0474  0856               	movf	___flmul@a,w
 16606  0475  31AB  23C8  3183   	fcall	__Umul8_16
 16607  0478  0873               	movf	?__Umul8_16+1,w
 16608  0479  0020               	movlb	0	; select bank0
 16609  047A  00EB               	movwf	___flmul@temp+1
 16610  047B  0872               	movf	?__Umul8_16,w
 16611  047C  00EA               	movwf	___flmul@temp
 16612  047D  086A               	movf	___flmul@temp,w
 16613  047E  00DA               	movwf	??___flmul
 16614  047F  01DB               	clrf	??___flmul+1
 16615  0480  01DC               	clrf	??___flmul+2
 16616  0481  01DD               	clrf	??___flmul+3
 16617  0482  085A               	movf	??___flmul,w
 16618  0483  07E1               	addwf	___flmul@grs,f
 16619  0484  085B               	movf	??___flmul+1,w
 16620  0485  3DE2               	addwfc	___flmul@grs+1,f
 16621  0486  085C               	movf	??___flmul+2,w
 16622  0487  3DE3               	addwfc	___flmul@grs+2,f
 16623  0488  085D               	movf	??___flmul+3,w
 16624  0489  3DE4               	addwfc	___flmul@grs+3,f
 16625  048A  086B               	movf	___flmul@temp+1,w
 16626  048B  00DA               	movwf	??___flmul
 16627  048C  01DB               	clrf	??___flmul+1
 16628  048D  01DC               	clrf	??___flmul+2
 16629  048E  01DD               	clrf	??___flmul+3
 16630  048F  085A               	movf	??___flmul,w
 16631  0490  07E6               	addwf	___flmul@prod,f
 16632  0491  085B               	movf	??___flmul+1,w
 16633  0492  3DE7               	addwfc	___flmul@prod+1,f
 16634  0493  085C               	movf	??___flmul+2,w
 16635  0494  3DE8               	addwfc	___flmul@prod+2,f
 16636  0495  085D               	movf	??___flmul+3,w
 16637  0496  3DE9               	addwfc	___flmul@prod+3,f
 16638  0497  3008               	movlw	8
 16639  0498                     u9065:	
 16640  0498  35E1               	lslf	___flmul@grs,f
 16641  0499  0DE2               	rlf	___flmul@grs+1,f
 16642  049A  0DE3               	rlf	___flmul@grs+2,f
 16643  049B  0DE4               	rlf	___flmul@grs+3,f
 16644  049C  0B89               	decfsz	9,f
 16645  049D  2C98               	goto	u9065
 16646  049E  0853               	movf	___flmul@b+1,w
 16647  049F  00DA               	movwf	??___flmul
 16648  04A0  085A               	movf	??___flmul,w
 16649  04A1  00F2               	movwf	__Umul8_16@multiplicand
 16650  04A2  0856               	movf	___flmul@a,w
 16651  04A3  31AB  23C8  3183   	fcall	__Umul8_16
 16652  04A6  0873               	movf	?__Umul8_16+1,w
 16653  04A7  0020               	movlb	0	; select bank0
 16654  04A8  00EB               	movwf	___flmul@temp+1
 16655  04A9  0872               	movf	?__Umul8_16,w
 16656  04AA  00EA               	movwf	___flmul@temp
 16657  04AB  086A               	movf	___flmul@temp,w
 16658  04AC  07E1               	addwf	___flmul@grs,f
 16659  04AD  086B               	movf	___flmul@temp+1,w
 16660  04AE  3DE2               	addwfc	___flmul@grs+1,f
 16661  04AF  3000               	movlw	0
 16662  04B0  3DE3               	addwfc	___flmul@grs+2,f
 16663  04B1  3DE4               	addwfc	___flmul@grs+3,f
 16664  04B2  0852               	movf	___flmul@b,w
 16665  04B3  00DA               	movwf	??___flmul
 16666  04B4  085A               	movf	??___flmul,w
 16667  04B5  00F2               	movwf	__Umul8_16@multiplicand
 16668  04B6  0857               	movf	___flmul@a+1,w
 16669  04B7  31AB  23C8  3183   	fcall	__Umul8_16
 16670  04BA  0873               	movf	?__Umul8_16+1,w
 16671  04BB  0020               	movlb	0	; select bank0
 16672  04BC  00EB               	movwf	___flmul@temp+1
 16673  04BD  0872               	movf	?__Umul8_16,w
 16674  04BE  00EA               	movwf	___flmul@temp
 16675  04BF  086A               	movf	___flmul@temp,w
 16676  04C0  07E1               	addwf	___flmul@grs,f
 16677  04C1  086B               	movf	___flmul@temp+1,w
 16678  04C2  3DE2               	addwfc	___flmul@grs+1,f
 16679  04C3  3000               	movlw	0
 16680  04C4  3DE3               	addwfc	___flmul@grs+2,f
 16681  04C5  3DE4               	addwfc	___flmul@grs+3,f
 16682  04C6  3008               	movlw	8
 16683  04C7                     u9075:	
 16684  04C7  35E1               	lslf	___flmul@grs,f
 16685  04C8  0DE2               	rlf	___flmul@grs+1,f
 16686  04C9  0DE3               	rlf	___flmul@grs+2,f
 16687  04CA  0DE4               	rlf	___flmul@grs+3,f
 16688  04CB  0B89               	decfsz	9,f
 16689  04CC  2CC7               	goto	u9075
 16690  04CD  0852               	movf	___flmul@b,w
 16691  04CE  00DA               	movwf	??___flmul
 16692  04CF  085A               	movf	??___flmul,w
 16693  04D0  00F2               	movwf	__Umul8_16@multiplicand
 16694  04D1  0856               	movf	___flmul@a,w
 16695  04D2  31AB  23C8  3183   	fcall	__Umul8_16
 16696  04D5  0873               	movf	?__Umul8_16+1,w
 16697  04D6  0020               	movlb	0	; select bank0
 16698  04D7  00EB               	movwf	___flmul@temp+1
 16699  04D8  0872               	movf	?__Umul8_16,w
 16700  04D9  00EA               	movwf	___flmul@temp
 16701  04DA  086A               	movf	___flmul@temp,w
 16702  04DB  07E1               	addwf	___flmul@grs,f
 16703  04DC  086B               	movf	___flmul@temp+1,w
 16704  04DD  3DE2               	addwfc	___flmul@grs+1,f
 16705  04DE  3000               	movlw	0
 16706  04DF  3DE3               	addwfc	___flmul@grs+2,f
 16707  04E0  3DE4               	addwfc	___flmul@grs+3,f
 16708  04E1  0853               	movf	___flmul@b+1,w
 16709  04E2  00DA               	movwf	??___flmul
 16710  04E3  085A               	movf	??___flmul,w
 16711  04E4  00F2               	movwf	__Umul8_16@multiplicand
 16712  04E5  0858               	movf	___flmul@a+2,w
 16713  04E6  31AB  23C8  3183   	fcall	__Umul8_16
 16714  04E9  0873               	movf	?__Umul8_16+1,w
 16715  04EA  0020               	movlb	0	; select bank0
 16716  04EB  00EB               	movwf	___flmul@temp+1
 16717  04EC  0872               	movf	?__Umul8_16,w
 16718  04ED  00EA               	movwf	___flmul@temp
 16719  04EE  086A               	movf	___flmul@temp,w
 16720  04EF  07E6               	addwf	___flmul@prod,f
 16721  04F0  086B               	movf	___flmul@temp+1,w
 16722  04F1  3DE7               	addwfc	___flmul@prod+1,f
 16723  04F2  3000               	movlw	0
 16724  04F3  3DE8               	addwfc	___flmul@prod+2,f
 16725  04F4  3DE9               	addwfc	___flmul@prod+3,f
 16726  04F5  0854               	movf	___flmul@b+2,w
 16727  04F6  00DA               	movwf	??___flmul
 16728  04F7  085A               	movf	??___flmul,w
 16729  04F8  00F2               	movwf	__Umul8_16@multiplicand
 16730  04F9  0857               	movf	___flmul@a+1,w
 16731  04FA  31AB  23C8  3183   	fcall	__Umul8_16
 16732  04FD  0873               	movf	?__Umul8_16+1,w
 16733  04FE  0020               	movlb	0	; select bank0
 16734  04FF  00EB               	movwf	___flmul@temp+1
 16735  0500  0872               	movf	?__Umul8_16,w
 16736  0501  00EA               	movwf	___flmul@temp
 16737  0502  086A               	movf	___flmul@temp,w
 16738  0503  07E6               	addwf	___flmul@prod,f
 16739  0504  086B               	movf	___flmul@temp+1,w
 16740  0505  3DE7               	addwfc	___flmul@prod+1,f
 16741  0506  3000               	movlw	0
 16742  0507  3DE8               	addwfc	___flmul@prod+2,f
 16743  0508  3DE9               	addwfc	___flmul@prod+3,f
 16744  0509  0854               	movf	___flmul@b+2,w
 16745  050A  00DA               	movwf	??___flmul
 16746  050B  085A               	movf	??___flmul,w
 16747  050C  00F2               	movwf	__Umul8_16@multiplicand
 16748  050D  0858               	movf	___flmul@a+2,w
 16749  050E  31AB  23C8  3183   	fcall	__Umul8_16
 16750  0511  0873               	movf	?__Umul8_16+1,w
 16751  0512  0020               	movlb	0	; select bank0
 16752  0513  00EB               	movwf	___flmul@temp+1
 16753  0514  0872               	movf	?__Umul8_16,w
 16754  0515  00EA               	movwf	___flmul@temp
 16755  0516  086A               	movf	___flmul@temp,w
 16756  0517  00DA               	movwf	??___flmul
 16757  0518  086B               	movf	___flmul@temp+1,w
 16758  0519  00DB               	movwf	??___flmul+1
 16759  051A  01DC               	clrf	??___flmul+2
 16760  051B  01DD               	clrf	??___flmul+3
 16761  051C  3008               	movlw	8
 16762  051D                     u9085:	
 16763  051D  35DA               	lslf	??___flmul,f
 16764  051E  0DDB               	rlf	??___flmul+1,f
 16765  051F  0DDC               	rlf	??___flmul+2,f
 16766  0520  0DDD               	rlf	??___flmul+3,f
 16767  0521  0B89               	decfsz	9,f
 16768  0522  2D1D               	goto	u9085
 16769  0523  085A               	movf	??___flmul,w
 16770  0524  07E6               	addwf	___flmul@prod,f
 16771  0525  085B               	movf	??___flmul+1,w
 16772  0526  3DE7               	addwfc	___flmul@prod+1,f
 16773  0527  085C               	movf	??___flmul+2,w
 16774  0528  3DE8               	addwfc	___flmul@prod+2,f
 16775  0529  085D               	movf	??___flmul+3,w
 16776  052A  3DE9               	addwfc	___flmul@prod+3,f
 16777  052B  0861               	movf	___flmul@grs,w
 16778  052C  00DA               	movwf	??___flmul
 16779  052D  0862               	movf	___flmul@grs+1,w
 16780  052E  00DB               	movwf	??___flmul+1
 16781  052F  0863               	movf	___flmul@grs+2,w
 16782  0530  00DC               	movwf	??___flmul+2
 16783  0531  0864               	movf	___flmul@grs+3,w
 16784  0532  00DD               	movwf	??___flmul+3
 16785  0533  3018               	movlw	24
 16786  0534                     u9095:	
 16787  0534  36DD               	lsrf	??___flmul+3,f
 16788  0535  0CDC               	rrf	??___flmul+2,f
 16789  0536  0CDB               	rrf	??___flmul+1,f
 16790  0537  0CDA               	rrf	??___flmul,f
 16791  0538  0B89               	decfsz	9,f
 16792  0539  2D34               	goto	u9095
 16793  053A  085A               	movf	??___flmul,w
 16794  053B  07E6               	addwf	___flmul@prod,f
 16795  053C  085B               	movf	??___flmul+1,w
 16796  053D  3DE7               	addwfc	___flmul@prod+1,f
 16797  053E  085C               	movf	??___flmul+2,w
 16798  053F  3DE8               	addwfc	___flmul@prod+2,f
 16799  0540  085D               	movf	??___flmul+3,w
 16800  0541  3DE9               	addwfc	___flmul@prod+3,f
 16801  0542  3008               	movlw	8
 16802  0543                     u9105:	
 16803  0543  35E1               	lslf	___flmul@grs,f
 16804  0544  0DE2               	rlf	___flmul@grs+1,f
 16805  0545  0DE3               	rlf	___flmul@grs+2,f
 16806  0546  0DE4               	rlf	___flmul@grs+3,f
 16807  0547  0B89               	decfsz	9,f
 16808  0548  2D43               	goto	u9105
 16809  0549  0865               	movf	___flmul@bexp,w
 16810  054A  0760               	addwf	___flmul@aexp,w
 16811  054B  00DA               	movwf	??___flmul
 16812  054C  01DB               	clrf	??___flmul+1
 16813  054D  0DDB               	rlf	??___flmul+1,f
 16814  054E  085A               	movf	??___flmul,w
 16815  054F  3E82               	addlw	130
 16816  0550  00EA               	movwf	___flmul@temp
 16817  0551  30FF               	movlw	255
 16818  0552  3D5B               	addwfc	??___flmul+1,w
 16819  0553  00EB               	movwf	___flmul@temp+1
 16820  0554                     l6968:	
 16821  0554  1BE8               	btfsc	___flmul@prod+2,7
 16822  0555  2D6B               	goto	l6970
 16823  0556  3001               	movlw	1
 16824  0557                     u9115:	
 16825  0557  35E6               	lslf	___flmul@prod,f
 16826  0558  0DE7               	rlf	___flmul@prod+1,f
 16827  0559  0DE8               	rlf	___flmul@prod+2,f
 16828  055A  0DE9               	rlf	___flmul@prod+3,f
 16829  055B  0B89               	decfsz	9,f
 16830  055C  2D57               	goto	u9115
 16831  055D  1BE4               	btfsc	___flmul@grs+3,7
 16832  055E  1466               	bsf	___flmul@prod,0
 16833  055F  3001               	movlw	1
 16834  0560                     u9135:	
 16835  0560  35E1               	lslf	___flmul@grs,f
 16836  0561  0DE2               	rlf	___flmul@grs+1,f
 16837  0562  0DE3               	rlf	___flmul@grs+2,f
 16838  0563  0DE4               	rlf	___flmul@grs+3,f
 16839  0564  0B89               	decfsz	9,f
 16840  0565  2D60               	goto	u9135
 16841  0566  30FF               	movlw	255
 16842  0567  07EA               	addwf	___flmul@temp,f
 16843  0568  30FF               	movlw	255
 16844  0569  3DEB               	addwfc	___flmul@temp+1,f
 16845  056A  2D54               	goto	l6968
 16846  056B                     l6970:	
 16847  056B  01E0               	clrf	___flmul@aexp
 16848  056C  1FE4               	btfss	___flmul@grs+3,7
 16849  056D  2D84               	goto	l6980
 16850  056E  30FF               	movlw	255
 16851  056F  0561               	andwf	___flmul@grs,w
 16852  0570  00DA               	movwf	??___flmul
 16853  0571  30FF               	movlw	255
 16854  0572  0562               	andwf	___flmul@grs+1,w
 16855  0573  00DB               	movwf	??___flmul+1
 16856  0574  30FF               	movlw	255
 16857  0575  0563               	andwf	___flmul@grs+2,w
 16858  0576  00DC               	movwf	??___flmul+2
 16859  0577  307F               	movlw	127
 16860  0578  0564               	andwf	___flmul@grs+3,w
 16861  0579  00DD               	movwf	??___flmul+3
 16862  057A  085D               	movf	??___flmul+3,w
 16863  057B  045C               	iorwf	??___flmul+2,w
 16864  057C  045B               	iorwf	??___flmul+1,w
 16865  057D  045A               	iorwf	??___flmul,w
 16866  057E  1D03               	btfss	3,2
 16867  057F  2D82               	goto	l6978
 16868  0580  1C66               	btfss	___flmul@prod,0
 16869  0581  2D84               	goto	l6980
 16870  0582                     l6978:	
 16871  0582  01E0               	clrf	___flmul@aexp
 16872  0583  0AE0               	incf	___flmul@aexp,f
 16873  0584                     l6980:	
 16874  0584  0860               	movf	___flmul@aexp,w
 16875  0585  1903               	btfsc	3,2
 16876  0586  2DAD               	goto	l6990
 16877  0587  3001               	movlw	1
 16878  0588  07E6               	addwf	___flmul@prod,f
 16879  0589  3000               	movlw	0
 16880  058A  3DE7               	addwfc	___flmul@prod+1,f
 16881  058B  3000               	movlw	0
 16882  058C  3DE8               	addwfc	___flmul@prod+2,f
 16883  058D  3000               	movlw	0
 16884  058E  3DE9               	addwfc	___flmul@prod+3,f
 16885  058F  1C69               	btfss	___flmul@prod+3,0
 16886  0590  2DAD               	goto	l6990
 16887  0591  0866               	movf	___flmul@prod,w
 16888  0592  00DA               	movwf	??___flmul
 16889  0593  0867               	movf	___flmul@prod+1,w
 16890  0594  00DB               	movwf	??___flmul+1
 16891  0595  0868               	movf	___flmul@prod+2,w
 16892  0596  00DC               	movwf	??___flmul+2
 16893  0597  0869               	movf	___flmul@prod+3,w
 16894  0598  00DD               	movwf	??___flmul+3
 16895  0599  3001               	movlw	1
 16896  059A  00DE               	movwf	??___flmul+4
 16897  059B                     u9205:	
 16898  059B  37DD               	asrf	??___flmul+3,f
 16899  059C  0CDC               	rrf	??___flmul+2,f
 16900  059D  0CDB               	rrf	??___flmul+1,f
 16901  059E  0CDA               	rrf	??___flmul,f
 16902  059F  0BDE               	decfsz	??___flmul+4,f
 16903  05A0  2D9B               	goto	u9205
 16904  05A1  085D               	movf	??___flmul+3,w
 16905  05A2  00E9               	movwf	___flmul@prod+3
 16906  05A3  085C               	movf	??___flmul+2,w
 16907  05A4  00E8               	movwf	___flmul@prod+2
 16908  05A5  085B               	movf	??___flmul+1,w
 16909  05A6  00E7               	movwf	___flmul@prod+1
 16910  05A7  085A               	movf	??___flmul,w
 16911  05A8  00E6               	movwf	___flmul@prod
 16912  05A9  3001               	movlw	1
 16913  05AA  07EA               	addwf	___flmul@temp,f
 16914  05AB  3000               	movlw	0
 16915  05AC  3DEB               	addwfc	___flmul@temp+1,f
 16916  05AD                     l6990:	
 16917  05AD  086B               	movf	___flmul@temp+1,w
 16918  05AE  3A80               	xorlw	128
 16919  05AF  00DA               	movwf	??___flmul
 16920  05B0  3080               	movlw	128
 16921  05B1  025A               	subwf	??___flmul,w
 16922  05B2  1D03               	skipz
 16923  05B3  2DB6               	goto	u9215
 16924  05B4  30FF               	movlw	255
 16925  05B5  026A               	subwf	___flmul@temp,w
 16926  05B6                     u9215:	
 16927  05B6  1C03               	skipc
 16928  05B7  2DC2               	goto	l6994
 16929  05B8  307F               	movlw	127
 16930  05B9  0020               	movlb	0	; select bank0
 16931  05BA  00E9               	movwf	___flmul@prod+3
 16932  05BB  3080               	movlw	128
 16933  05BC  00E8               	movwf	___flmul@prod+2
 16934  05BD  3000               	movlw	0
 16935  05BE  00E7               	movwf	___flmul@prod+1
 16936  05BF  3000               	movlw	0
 16937  05C0  00E6               	movwf	___flmul@prod
 16938  05C1  2DEC               	goto	l1404
 16939  05C2                     l6994:	
 16940  05C2  0020               	movlb	0	; select bank0
 16941  05C3  086B               	movf	___flmul@temp+1,w
 16942  05C4  3A80               	xorlw	128
 16943  05C5  00DA               	movwf	??___flmul
 16944  05C6  3080               	movlw	128
 16945  05C7  025A               	subwf	??___flmul,w
 16946  05C8  1D03               	skipz
 16947  05C9  2DCC               	goto	u9225
 16948  05CA  3001               	movlw	1
 16949  05CB  026A               	subwf	___flmul@temp,w
 16950  05CC                     u9225:	
 16951  05CC  1803               	skipnc
 16952  05CD  2DD9               	goto	l7000
 16953  05CE  3000               	movlw	0
 16954  05CF  0020               	movlb	0	; select bank0
 16955  05D0  00E9               	movwf	___flmul@prod+3
 16956  05D1  3000               	movlw	0
 16957  05D2  00E8               	movwf	___flmul@prod+2
 16958  05D3  3000               	movlw	0
 16959  05D4  00E7               	movwf	___flmul@prod+1
 16960  05D5  3000               	movlw	0
 16961  05D6  00E6               	movwf	___flmul@prod
 16962  05D7  01DF               	clrf	___flmul@sign
 16963  05D8  2DEC               	goto	l1404
 16964  05D9                     l7000:	
 16965  05D9  0020               	movlb	0	; select bank0
 16966  05DA  086A               	movf	___flmul@temp,w
 16967  05DB  00DA               	movwf	??___flmul
 16968  05DC  085A               	movf	??___flmul,w
 16969  05DD  00E5               	movwf	___flmul@bexp
 16970  05DE  30FF               	movlw	255
 16971  05DF  05E6               	andwf	___flmul@prod,f
 16972  05E0  30FF               	movlw	255
 16973  05E1  05E7               	andwf	___flmul@prod+1,f
 16974  05E2  307F               	movlw	127
 16975  05E3  05E8               	andwf	___flmul@prod+2,f
 16976  05E4  3000               	movlw	0
 16977  05E5  05E9               	andwf	___flmul@prod+3,f
 16978  05E6  1865               	btfsc	___flmul@bexp,0
 16979  05E7  17E8               	bsf	___flmul@prod+2,7
 16980  05E8  3665               	lsrf	___flmul@bexp,w
 16981  05E9  00DA               	movwf	??___flmul
 16982  05EA  085A               	movf	??___flmul,w
 16983  05EB  00E9               	movwf	___flmul@prod+3
 16984  05EC                     l1404:	
 16985  05EC  085F               	movf	___flmul@sign,w
 16986  05ED  00DA               	movwf	??___flmul
 16987  05EE  085A               	movf	??___flmul,w
 16988  05EF  04E9               	iorwf	___flmul@prod+3,f
 16989  05F0  0869               	movf	___flmul@prod+3,w
 16990  05F1  00D5               	movwf	?___flmul+3
 16991  05F2  0868               	movf	___flmul@prod+2,w
 16992  05F3  00D4               	movwf	?___flmul+2
 16993  05F4  0867               	movf	___flmul@prod+1,w
 16994  05F5  00D3               	movwf	?___flmul+1
 16995  05F6  0866               	movf	___flmul@prod,w
 16996  05F7  00D2               	movwf	?___flmul
 16997  05F8  0008               	return
 16998  05F9                     __end_of___flmul:	
 16999                           
 17000                           	psect	text45
 17001  2BC8                     __ptext45:	
 17002 ;; *************** function __Umul8_16 *****************
 17003 ;; Defined at:
 17004 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  multiplier      1    wreg     unsigned char 
 17007 ;;  multiplicand    1    2[COMMON] unsigned char 
 17008 ;; Auto vars:     Size  Location     Type
 17009 ;;  multiplier      1    4[BANK0 ] unsigned char 
 17010 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 17011 ;;  product         2    0[BANK0 ] unsigned int 
 17012 ;; Return value:  Size  Location     Type
 17013 ;;                  2    2[COMMON] unsigned int 
 17014 ;; Registers used:
 17015 ;;		wreg, status,2, status,0
 17016 ;; Tracked objects:
 17017 ;;		On entry : 0/0
 17018 ;;		On exit  : 0/0
 17019 ;;		Unchanged: 0/0
 17020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17021 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17022 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17023 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17024 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17025 ;;Total ram usage:        9 bytes
 17026 ;; Hardware stack levels used:    1
 17027 ;; Hardware stack levels required when called:    2
 17028 ;; This function calls:
 17029 ;;		Nothing
 17030 ;; This function is called by:
 17031 ;;		___flmul
 17032 ;; This function uses a non-reentrant model
 17033 ;;
 17034                           
 17035                           
 17036                           ;psect for function __Umul8_16
 17037  2BC8                     __Umul8_16:	
 17038                           
 17039                           ;incstack = 0
 17040                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17041                           ;__Umul8_16@multiplier stored from wreg
 17042  2BC8  0020               	movlb	0	; select bank0
 17043  2BC9  00A4               	movwf	__Umul8_16@multiplier
 17044  2BCA  01A0               	clrf	__Umul8_16@product
 17045  2BCB  01A1               	clrf	__Umul8_16@product+1
 17046  2BCC  0872               	movf	__Umul8_16@multiplicand,w
 17047  2BCD  00F4               	movwf	??__Umul8_16
 17048  2BCE  01F5               	clrf	??__Umul8_16+1
 17049  2BCF  0874               	movf	??__Umul8_16,w
 17050  2BD0  00A2               	movwf	__Umul8_16@word_mpld
 17051  2BD1  0875               	movf	??__Umul8_16+1,w
 17052  2BD2  00A3               	movwf	__Umul8_16@word_mpld+1
 17053  2BD3                     l6586:	
 17054  2BD3  1C24               	btfss	__Umul8_16@multiplier,0
 17055  2BD4  2BD9               	goto	l1430
 17056  2BD5  0822               	movf	__Umul8_16@word_mpld,w
 17057  2BD6  07A0               	addwf	__Umul8_16@product,f
 17058  2BD7  0823               	movf	__Umul8_16@word_mpld+1,w
 17059  2BD8  3DA1               	addwfc	__Umul8_16@product+1,f
 17060  2BD9                     l1430:	
 17061  2BD9  3001               	movlw	1
 17062  2BDA                     u8345:	
 17063  2BDA  35A2               	lslf	__Umul8_16@word_mpld,f
 17064  2BDB  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 17065  2BDC  0B89               	decfsz	9,f
 17066  2BDD  2BDA               	goto	u8345
 17067  2BDE  1003               	clrc
 17068  2BDF  0CA4               	rrf	__Umul8_16@multiplier,f
 17069  2BE0  0824               	movf	__Umul8_16@multiplier,w
 17070  2BE1  1D03               	btfss	3,2
 17071  2BE2  2BD3               	goto	l6586
 17072  2BE3  0821               	movf	__Umul8_16@product+1,w
 17073  2BE4  00F3               	movwf	?__Umul8_16+1
 17074  2BE5  0820               	movf	__Umul8_16@product,w
 17075  2BE6  00F2               	movwf	?__Umul8_16
 17076  2BE7  0008               	return
 17077  2BE8                     __end_of__Umul8_16:	
 17078                           
 17079                           	psect	text46
 17080  2F57                     __ptext46:	
 17081 ;; *************** function _adcRead *****************
 17082 ;; Defined at:
 17083 ;;		line 50 in file "adc.c"
 17084 ;; Parameters:    Size  Location     Type
 17085 ;;  ch              1    wreg     unsigned char 
 17086 ;; Auto vars:     Size  Location     Type
 17087 ;;  ch              1    7[BANK0 ] unsigned char 
 17088 ;;  total           2   12[BANK0 ] int 
 17089 ;;  ansLow          2   10[BANK0 ] int 
 17090 ;;  ansHigh         2    8[BANK0 ] int 
 17091 ;; Return value:  Size  Location     Type
 17092 ;;                  2    2[COMMON] int 
 17093 ;; Registers used:
 17094 ;;		wreg, status,2, status,0
 17095 ;; Tracked objects:
 17096 ;;		On entry : 0/0
 17097 ;;		On exit  : 0/0
 17098 ;;		Unchanged: 0/0
 17099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17100 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17101 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17102 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17103 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17104 ;;Total ram usage:       16 bytes
 17105 ;; Hardware stack levels used:    1
 17106 ;; Hardware stack levels required when called:    2
 17107 ;; This function calls:
 17108 ;;		Nothing
 17109 ;; This function is called by:
 17110 ;;		_getCurrent
 17111 ;;		_getTemps
 17112 ;; This function uses a non-reentrant model
 17113 ;;
 17114                           
 17115                           
 17116                           ;psect for function _adcRead
 17117  2F57                     _adcRead:	
 17118                           
 17119                           ;incstack = 0
 17120                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 17121                           ;adcRead@ch stored from wreg
 17122  2F57  0020               	movlb	0	; select bank0
 17123  2F58  00A7               	movwf	adcRead@ch
 17124                           
 17125                           ;adc.c: 51: ADCON0bits.CHS = ch;
 17126  2F59  0827               	movf	adcRead@ch,w
 17127  2F5A  00A0               	movwf	??_adcRead
 17128  2F5B  0DA0               	rlf	??_adcRead,f
 17129  2F5C  0DA0               	rlf	??_adcRead,f
 17130  2F5D  0021               	movlb	1	; select bank1
 17131  2F5E  081D               	movf	29,w	;volatile
 17132  2F5F  0020               	movlb	0	; select bank0
 17133  2F60  0620               	xorwf	??_adcRead,w
 17134  2F61  3983               	andlw	-125
 17135  2F62  0620               	xorwf	??_adcRead,w
 17136  2F63  0021               	movlb	1	; select bank1
 17137  2F64  009D               	movwf	29	;volatile
 17138                           
 17139                           ;adc.c: 52: ADCON0bits.ADON = 1;
 17140  2F65  141D               	bsf	29,0	;volatile
 17141                           
 17142                           ;adc.c: 54: _delay((unsigned long)((100)*(32000000/4000000.0)));
 17143  2F66  30A0               	movlw	160
 17144  2F67                     u11717:	
 17145  2F67  3200               	nop2
 17146  2F68  0B89               	decfsz	9,f
 17147  2F69  2F67               	goto	u11717
 17148                           
 17149                           ;adc.c: 55: ADCON0bits.GO = 1;
 17150  2F6A  0021               	movlb	1	; select bank1
 17151  2F6B  149D               	bsf	29,1	;volatile
 17152  2F6C                     l192:	
 17153                           ;adc.c: 57: while(ADCON0bits.DONE == 1);
 17154                           
 17155  2F6C  189D               	btfsc	29,1	;volatile
 17156  2F6D  2F6C               	goto	l192
 17157                           
 17158                           ;adc.c: 59: int ansHigh = ADRESH;
 17159  2F6E  081C               	movf	28,w	;volatile
 17160  2F6F  0020               	movlb	0	; select bank0
 17161  2F70  00A0               	movwf	??_adcRead
 17162  2F71  01A1               	clrf	??_adcRead+1
 17163  2F72  0820               	movf	??_adcRead,w
 17164  2F73  00A8               	movwf	adcRead@ansHigh
 17165  2F74  0821               	movf	??_adcRead+1,w
 17166  2F75  00A9               	movwf	adcRead@ansHigh+1
 17167                           
 17168                           ;adc.c: 60: int ansLow = ADRESL;
 17169  2F76  0021               	movlb	1	; select bank1
 17170  2F77  081B               	movf	27,w	;volatile
 17171  2F78  0020               	movlb	0	; select bank0
 17172  2F79  00A0               	movwf	??_adcRead
 17173  2F7A  01A1               	clrf	??_adcRead+1
 17174  2F7B  0820               	movf	??_adcRead,w
 17175  2F7C  00AA               	movwf	adcRead@ansLow
 17176  2F7D  0821               	movf	??_adcRead+1,w
 17177  2F7E  00AB               	movwf	adcRead@ansLow+1
 17178                           
 17179                           ;adc.c: 62: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 17180  2F7F  082B               	movf	adcRead@ansLow+1,w
 17181  2F80  00A1               	movwf	??_adcRead+1
 17182  2F81  082A               	movf	adcRead@ansLow,w
 17183  2F82  00A0               	movwf	??_adcRead
 17184  2F83  3004               	movlw	4
 17185  2F84  00A2               	movwf	??_adcRead+2
 17186  2F85                     u10745:	
 17187  2F85  0D21               	rlf	??_adcRead+1,w
 17188  2F86  0CA1               	rrf	??_adcRead+1,f
 17189  2F87  0CA0               	rrf	??_adcRead,f
 17190  2F88  0BA2               	decfsz	??_adcRead+2,f
 17191  2F89  2F85               	goto	u10745
 17192  2F8A  30FF               	movlw	255
 17193  2F8B  0520               	andwf	??_adcRead,w
 17194  2F8C  00A3               	movwf	??_adcRead+3
 17195  2F8D  300F               	movlw	15
 17196  2F8E  0521               	andwf	??_adcRead+1,w
 17197  2F8F  00A4               	movwf	??_adcRead+4
 17198  2F90  0829               	movf	adcRead@ansHigh+1,w
 17199  2F91  00A6               	movwf	??_adcRead+6
 17200  2F92  0828               	movf	adcRead@ansHigh,w
 17201  2F93  00A5               	movwf	??_adcRead+5
 17202  2F94  0EA5               	swapf	??_adcRead+5,f
 17203  2F95  0EA6               	swapf	??_adcRead+6,f
 17204  2F96  30F0               	movlw	240
 17205  2F97  05A6               	andwf	??_adcRead+6,f
 17206  2F98  0825               	movf	??_adcRead+5,w
 17207  2F99  390F               	andlw	15
 17208  2F9A  04A6               	iorwf	??_adcRead+6,f
 17209  2F9B  30F0               	movlw	240
 17210  2F9C  05A5               	andwf	??_adcRead+5,f
 17211  2F9D  0823               	movf	??_adcRead+3,w
 17212  2F9E  0425               	iorwf	??_adcRead+5,w
 17213  2F9F  00AC               	movwf	adcRead@total
 17214  2FA0  0824               	movf	??_adcRead+4,w
 17215  2FA1  0426               	iorwf	??_adcRead+6,w
 17216  2FA2  00AD               	movwf	adcRead@total+1
 17217                           
 17218                           ;adc.c: 63: ADCON0bits.ADON = 0;
 17219  2FA3  0021               	movlb	1	; select bank1
 17220  2FA4  101D               	bcf	29,0	;volatile
 17221                           
 17222                           ;adc.c: 64: return total;
 17223  2FA5  0020               	movlb	0	; select bank0
 17224  2FA6  082D               	movf	adcRead@total+1,w
 17225  2FA7  00F3               	movwf	?_adcRead+1
 17226  2FA8  082C               	movf	adcRead@total,w
 17227  2FA9  00F2               	movwf	?_adcRead
 17228  2FAA  0008               	return
 17229  2FAB                     __end_of_adcRead:	
 17230                           
 17231                           	psect	text47
 17232  2720                     __ptext47:	
 17233 ;; *************** function _cellBalancing *****************
 17234 ;; Defined at:
 17235 ;;		line 115 in file "ltc6804.c"
 17236 ;; Parameters:    Size  Location     Type
 17237 ;;  voltages        1    wreg     PTR float 
 17238 ;;		 -> main@voltages(48), 
 17239 ;;  numVoltages     2   69[BANK1 ] int 
 17240 ;; Auto vars:     Size  Location     Type
 17241 ;;  voltages        1    9[BANK2 ] PTR float 
 17242 ;;		 -> main@voltages(48), 
 17243 ;;  i               2    7[BANK2 ] int 
 17244 ;;  i               2    5[BANK2 ] int 
 17245 ;;  minVoltage      4    1[BANK2 ] float 
 17246 ;;  boolean         1    0[BANK2 ] unsigned char 
 17247 ;; Return value:  Size  Location     Type
 17248 ;;                  1    wreg      void 
 17249 ;; Registers used:
 17250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17251 ;; Tracked objects:
 17252 ;;		On entry : 0/0
 17253 ;;		On exit  : 0/0
 17254 ;;		Unchanged: 0/0
 17255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17256 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17257 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17258 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17259 ;;      Totals:         0       0       4      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17260 ;;Total ram usage:       14 bytes
 17261 ;; Hardware stack levels used:    1
 17262 ;; Hardware stack levels required when called:    5
 17263 ;; This function calls:
 17264 ;;		_LTC6804_wrcfg
 17265 ;;		___fladd
 17266 ;;		___flge
 17267 ;;		_setDischarge
 17268 ;; This function is called by:
 17269 ;;		_main
 17270 ;; This function uses a non-reentrant model
 17271 ;;
 17272                           
 17273                           
 17274                           ;psect for function _cellBalancing
 17275  2720                     _cellBalancing:	
 17276                           
 17277                           ;incstack = 0
 17278                           ; Regs used in _cellBalancing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17279                           ;cellBalancing@voltages stored from wreg
 17280  2720  0022               	movlb	2	; select bank2
 17281  2721  00A9               	movwf	cellBalancing@voltages^(0+256)
 17282                           
 17283                           ;ltc6804.c: 116: float minVoltage = voltages[0];
 17284  2722  0829               	movf	cellBalancing@voltages^(0+256),w
 17285  2723  0086               	movwf	6
 17286  2724  3002               	movlw	2	; select bank4/5
 17287  2725  0087               	movwf	7
 17288  2726  3F40               	moviw [0]fsr1
 17289  2727  00A1               	movwf	cellBalancing@minVoltage^(0+256)
 17290  2728  3F41               	moviw [1]fsr1
 17291  2729  00A2               	movwf	(cellBalancing@minVoltage+1)^(0+256)
 17292  272A  3F42               	moviw [2]fsr1
 17293  272B  00A3               	movwf	(cellBalancing@minVoltage+2)^(0+256)
 17294  272C  3F43               	moviw [3]fsr1
 17295  272D  00A4               	movwf	(cellBalancing@minVoltage+3)^(0+256)
 17296                           
 17297                           ;ltc6804.c: 118: for(int i = 0; i < numVoltages; i++){
 17298  272E  01A5               	clrf	cellBalancing@i^(0+256)
 17299  272F  01A6               	clrf	(cellBalancing@i+1)^(0+256)
 17300  2730                     l8132:	
 17301  2730  0826               	movf	(cellBalancing@i+1)^(0+256),w
 17302  2731  3A80               	xorlw	128
 17303  2732  0021               	movlb	1	; select bank1
 17304  2733  00E7               	movwf	??_cellBalancing^(0+128)
 17305  2734  0866               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 17306  2735  3A80               	xorlw	128
 17307  2736  0267               	subwf	??_cellBalancing^(0+128),w
 17308  2737  1D03               	skipz
 17309  2738  2F3C               	goto	u11215
 17310  2739  0865               	movf	cellBalancing@numVoltages^(0+128),w
 17311  273A  0022               	movlb	2	; select bank2
 17312  273B  0225               	subwf	cellBalancing@i^(0+256),w
 17313  273C                     u11215:	
 17314  273C  1803               	btfsc	3,0
 17315  273D  2F8E               	goto	l8134
 17316                           
 17317                           ;ltc6804.c: 119: if(voltages[i] < minVoltage){
 17318  273E  0022               	movlb	2	; select bank2
 17319  273F  0825               	movf	cellBalancing@i^(0+256),w
 17320  2740  0021               	movlb	1	; select bank1
 17321  2741  00E7               	movwf	??_cellBalancing^(0+128)
 17322  2742  3001               	movlw	1
 17323  2743                     u11185:	
 17324  2743  35E7               	lslf	??_cellBalancing^(0+128),f
 17325  2744  3EFF               	addlw	-1
 17326  2745  1D03               	skipz
 17327  2746  2F43               	goto	u11185
 17328  2747  3567               	lslf	??_cellBalancing^(0+128),w
 17329  2748  0022               	movlb	2	; select bank2
 17330  2749  0729               	addwf	cellBalancing@voltages^(0+256),w
 17331  274A  0021               	movlb	1	; select bank1
 17332  274B  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 17333  274C  0868               	movf	(??_cellBalancing+1)^(0+128),w
 17334  274D  0086               	movwf	6
 17335  274E  3002               	movlw	2	; select bank4/5
 17336  274F  0087               	movwf	7
 17337  2750  3F40               	moviw [0]fsr1
 17338  2751  00D5               	movwf	___flge@ff1^(0+128)
 17339  2752  3F41               	moviw [1]fsr1
 17340  2753  00D6               	movwf	(___flge@ff1+1)^(0+128)
 17341  2754  3F42               	moviw [2]fsr1
 17342  2755  00D7               	movwf	(___flge@ff1+2)^(0+128)
 17343  2756  3F43               	moviw [3]fsr1
 17344  2757  00D8               	movwf	(___flge@ff1+3)^(0+128)
 17345  2758  0022               	movlb	2	; select bank2
 17346  2759  0824               	movf	(cellBalancing@minVoltage+3)^(0+256),w
 17347  275A  0021               	movlb	1	; select bank1
 17348  275B  00DC               	movwf	(___flge@ff2+3)^(0+128)
 17349  275C  0022               	movlb	2	; select bank2
 17350  275D  0823               	movf	(cellBalancing@minVoltage+2)^(0+256),w
 17351  275E  0021               	movlb	1	; select bank1
 17352  275F  00DB               	movwf	(___flge@ff2+2)^(0+128)
 17353  2760  0022               	movlb	2	; select bank2
 17354  2761  0822               	movf	(cellBalancing@minVoltage+1)^(0+256),w
 17355  2762  0021               	movlb	1	; select bank1
 17356  2763  00DA               	movwf	(___flge@ff2+1)^(0+128)
 17357  2764  0022               	movlb	2	; select bank2
 17358  2765  0821               	movf	cellBalancing@minVoltage^(0+256),w
 17359  2766  0021               	movlb	1	; select bank1
 17360  2767  00D9               	movwf	___flge@ff2^(0+128)
 17361  2768  3188  2005  31A7   	fcall	___flge
 17362  276B  1803               	btfsc	3,0
 17363  276C  2F88               	goto	l8130
 17364                           
 17365                           ;ltc6804.c: 120: minVoltage = voltages[i];
 17366  276D  0022               	movlb	2	; select bank2
 17367  276E  0825               	movf	cellBalancing@i^(0+256),w
 17368  276F  0021               	movlb	1	; select bank1
 17369  2770  00E7               	movwf	??_cellBalancing^(0+128)
 17370  2771  3001               	movlw	1
 17371  2772                     u11205:	
 17372  2772  35E7               	lslf	??_cellBalancing^(0+128),f
 17373  2773  3EFF               	addlw	-1
 17374  2774  1D03               	skipz
 17375  2775  2F72               	goto	u11205
 17376  2776  3567               	lslf	??_cellBalancing^(0+128),w
 17377  2777  0022               	movlb	2	; select bank2
 17378  2778  0729               	addwf	cellBalancing@voltages^(0+256),w
 17379  2779  0021               	movlb	1	; select bank1
 17380  277A  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 17381  277B  0868               	movf	(??_cellBalancing+1)^(0+128),w
 17382  277C  0086               	movwf	6
 17383  277D  3002               	movlw	2	; select bank4/5
 17384  277E  0087               	movwf	7
 17385  277F  3F40               	moviw [0]fsr1
 17386  2780  0022               	movlb	2	; select bank2
 17387  2781  00A1               	movwf	cellBalancing@minVoltage^(0+256)
 17388  2782  3F41               	moviw [1]fsr1
 17389  2783  00A2               	movwf	(cellBalancing@minVoltage+1)^(0+256)
 17390  2784  3F42               	moviw [2]fsr1
 17391  2785  00A3               	movwf	(cellBalancing@minVoltage+2)^(0+256)
 17392  2786  3F43               	moviw [3]fsr1
 17393  2787  00A4               	movwf	(cellBalancing@minVoltage+3)^(0+256)
 17394  2788                     l8130:	
 17395  2788  3001               	movlw	1
 17396  2789  0022               	movlb	2	; select bank2
 17397  278A  07A5               	addwf	cellBalancing@i^(0+256),f
 17398  278B  3000               	movlw	0
 17399  278C  3DA6               	addwfc	(cellBalancing@i+1)^(0+256),f
 17400  278D  2F30               	goto	l8132
 17401  278E                     l8134:	
 17402                           
 17403                           ;ltc6804.c: 121: }
 17404                           ;ltc6804.c: 122: }
 17405                           ;ltc6804.c: 123: char boolean;
 17406                           ;ltc6804.c: 124: for(int i = 0; i < numVoltages; i++){
 17407  278E  0022               	movlb	2	; select bank2
 17408  278F  01A7               	clrf	cellBalancing@i_1309^(0+256)
 17409  2790  01A8               	clrf	(cellBalancing@i_1309+1)^(0+256)
 17410  2791                     l8142:	
 17411  2791  0828               	movf	(cellBalancing@i_1309+1)^(0+256),w
 17412  2792  3A80               	xorlw	128
 17413  2793  0021               	movlb	1	; select bank1
 17414  2794  00E7               	movwf	??_cellBalancing^(0+128)
 17415  2795  0866               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 17416  2796  3A80               	xorlw	128
 17417  2797  0267               	subwf	??_cellBalancing^(0+128),w
 17418  2798  1D03               	skipz
 17419  2799  2F9D               	goto	u11235
 17420  279A  0865               	movf	cellBalancing@numVoltages^(0+128),w
 17421  279B  0022               	movlb	2	; select bank2
 17422  279C  0227               	subwf	cellBalancing@i_1309^(0+256),w
 17423  279D                     u11235:	
 17424  279D  1803               	btfsc	3,0
 17425  279E  2FF7               	goto	l8144
 17426                           
 17427                           ;ltc6804.c: 125: boolean = (voltages[i] >= (minVoltage + 0.015));
 17428  279F  0022               	movlb	2	; select bank2
 17429  27A0  0827               	movf	cellBalancing@i_1309^(0+256),w
 17430  27A1  0021               	movlb	1	; select bank1
 17431  27A2  00E7               	movwf	??_cellBalancing^(0+128)
 17432  27A3  3001               	movlw	1
 17433  27A4                     u11225:	
 17434  27A4  35E7               	lslf	??_cellBalancing^(0+128),f
 17435  27A5  3EFF               	addlw	-1
 17436  27A6  1D03               	skipz
 17437  27A7  2FA4               	goto	u11225
 17438  27A8  3567               	lslf	??_cellBalancing^(0+128),w
 17439  27A9  0022               	movlb	2	; select bank2
 17440  27AA  0729               	addwf	cellBalancing@voltages^(0+256),w
 17441  27AB  0021               	movlb	1	; select bank1
 17442  27AC  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 17443  27AD  0868               	movf	(??_cellBalancing+1)^(0+128),w
 17444  27AE  0086               	movwf	6
 17445  27AF  3002               	movlw	2	; select bank4/5
 17446  27B0  0087               	movwf	7
 17447  27B1  3F40               	moviw [0]fsr1
 17448  27B2  00D5               	movwf	___flge@ff1^(0+128)
 17449  27B3  3F41               	moviw [1]fsr1
 17450  27B4  00D6               	movwf	(___flge@ff1+1)^(0+128)
 17451  27B5  3F42               	moviw [2]fsr1
 17452  27B6  00D7               	movwf	(___flge@ff1+2)^(0+128)
 17453  27B7  3F43               	moviw [3]fsr1
 17454  27B8  00D8               	movwf	(___flge@ff1+3)^(0+128)
 17455  27B9  303C               	movlw	60
 17456  27BA  00C0               	movwf	(___fladd@b+3)^(0+128)
 17457  27BB  3075               	movlw	117
 17458  27BC  00BF               	movwf	(___fladd@b+2)^(0+128)
 17459  27BD  30C2               	movlw	194
 17460  27BE  00BE               	movwf	(___fladd@b+1)^(0+128)
 17461  27BF  308F               	movlw	143
 17462  27C0  00BD               	movwf	___fladd@b^(0+128)
 17463  27C1  0022               	movlb	2	; select bank2
 17464  27C2  0824               	movf	(cellBalancing@minVoltage+3)^(0+256),w
 17465  27C3  0021               	movlb	1	; select bank1
 17466  27C4  00C4               	movwf	(___fladd@a+3)^(0+128)
 17467  27C5  0022               	movlb	2	; select bank2
 17468  27C6  0823               	movf	(cellBalancing@minVoltage+2)^(0+256),w
 17469  27C7  0021               	movlb	1	; select bank1
 17470  27C8  00C3               	movwf	(___fladd@a+2)^(0+128)
 17471  27C9  0022               	movlb	2	; select bank2
 17472  27CA  0822               	movf	(cellBalancing@minVoltage+1)^(0+256),w
 17473  27CB  0021               	movlb	1	; select bank1
 17474  27CC  00C2               	movwf	(___fladd@a+1)^(0+128)
 17475  27CD  0022               	movlb	2	; select bank2
 17476  27CE  0821               	movf	cellBalancing@minVoltage^(0+256),w
 17477  27CF  0021               	movlb	1	; select bank1
 17478  27D0  00C1               	movwf	___fladd@a^(0+128)
 17479  27D1  3185  25F9  31A7   	fcall	___fladd
 17480  27D4  0021               	movlb	1	; select bank1
 17481  27D5  0840               	movf	(?___fladd+3)^(0+128),w
 17482  27D6  00DC               	movwf	(___flge@ff2+3)^(0+128)
 17483  27D7  083F               	movf	(?___fladd+2)^(0+128),w
 17484  27D8  00DB               	movwf	(___flge@ff2+2)^(0+128)
 17485  27D9  083E               	movf	(?___fladd+1)^(0+128),w
 17486  27DA  00DA               	movwf	(___flge@ff2+1)^(0+128)
 17487  27DB  083D               	movf	?___fladd^(0+128),w
 17488  27DC  00D9               	movwf	___flge@ff2^(0+128)
 17489  27DD  3188  2005  31A7   	fcall	___flge
 17490  27E0  3000               	movlw	0
 17491  27E1  1803               	btfsc	3,0
 17492  27E2  3001               	movlw	1
 17493  27E3  0022               	movlb	2	; select bank2
 17494  27E4  00A0               	movwf	cellBalancing@boolean^(0+256)
 17495                           
 17496                           ;ltc6804.c: 126: setDischarge(i, boolean);
 17497  27E5  0828               	movf	(cellBalancing@i_1309+1)^(0+256),w
 17498  27E6  00F3               	movwf	setDischarge@index+1
 17499  27E7  0827               	movf	cellBalancing@i_1309^(0+256),w
 17500  27E8  00F2               	movwf	setDischarge@index
 17501  27E9  0820               	movf	cellBalancing@boolean^(0+256),w
 17502  27EA  0021               	movlb	1	; select bank1
 17503  27EB  00E7               	movwf	??_cellBalancing^(0+128)
 17504  27EC  0867               	movf	??_cellBalancing^(0+128),w
 17505  27ED  00F4               	movwf	setDischarge@boolean
 17506  27EE  31A6  2643  31A7   	fcall	_setDischarge
 17507  27F1  3001               	movlw	1
 17508  27F2  0022               	movlb	2	; select bank2
 17509  27F3  07A7               	addwf	cellBalancing@i_1309^(0+256),f
 17510  27F4  3000               	movlw	0
 17511  27F5  3DA8               	addwfc	(cellBalancing@i_1309+1)^(0+256),f
 17512  27F6  2F91               	goto	l8142
 17513  27F7                     l8144:	
 17514                           
 17515                           ;ltc6804.c: 127: }
 17516                           ;ltc6804.c: 128: LTC6804_wrcfg(1, configReg);
 17517  27F7  306A               	movlw	low _configReg
 17518  27F8  0020               	movlb	0	; select bank0
 17519  27F9  00AF               	movwf	LTC6804_wrcfg@config
 17520  27FA  3002               	movlw	high _configReg
 17521  27FB  00B0               	movwf	LTC6804_wrcfg@config+1
 17522  27FC  3001               	movlw	1
 17523  27FD  31A4  2417         	fcall	_LTC6804_wrcfg
 17524  27FF  0008               	return
 17525  2800                     __end_of_cellBalancing:	
 17526                           
 17527                           	psect	text48
 17528  2643                     __ptext48:	
 17529 ;; *************** function _setDischarge *****************
 17530 ;; Defined at:
 17531 ;;		line 131 in file "ltc6804.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;  index           2    2[COMMON] int 
 17534 ;;  boolean         1    4[COMMON] unsigned char 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;		None
 17537 ;; Return value:  Size  Location     Type
 17538 ;;                  1    wreg      void 
 17539 ;; Registers used:
 17540 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17541 ;; Tracked objects:
 17542 ;;		On entry : 0/0
 17543 ;;		On exit  : 0/0
 17544 ;;		Unchanged: 0/0
 17545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17548 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17550 ;;Total ram usage:        4 bytes
 17551 ;; Hardware stack levels used:    1
 17552 ;; Hardware stack levels required when called:    2
 17553 ;; This function calls:
 17554 ;;		Nothing
 17555 ;; This function is called by:
 17556 ;;		_cellBalancing
 17557 ;; This function uses a non-reentrant model
 17558 ;;
 17559                           
 17560                           
 17561                           ;psect for function _setDischarge
 17562  2643                     _setDischarge:	
 17563                           
 17564                           ;ltc6804.c: 132: switch(index){
 17565                           
 17566                           ;incstack = 0
 17567                           ; Regs used in _setDischarge: [wreg-fsr0h+status,2+status,0]
 17568  2643  2F10               	goto	l5838
 17569  2644                     l5764:	
 17570                           ;ltc6804.c: 133: case 0:
 17571                           
 17572                           
 17573                           ;ltc6804.c: 134: if(boolean){
 17574  2644  0874               	movf	setDischarge@boolean,w
 17575  2645  1903               	btfsc	3,2
 17576  2646  2E4E               	goto	l5768
 17577                           
 17578                           ;ltc6804.c: 135: configReg[0][4]= configReg[0][4] | 0x01;
 17579  2647  0024               	movlb	4	; select bank4
 17580  2648  086E               	movf	(_configReg^(0+512)+4),w
 17581  2649  3801               	iorlw	1
 17582  264A  00F5               	movwf	??_setDischarge
 17583  264B  0875               	movf	??_setDischarge,w
 17584  264C  00EE               	movwf	(_configReg^(0+512)+4)
 17585                           
 17586                           ;ltc6804.c: 136: }else{
 17587  264D  0008               	return
 17588  264E                     l5768:	
 17589                           
 17590                           ;ltc6804.c: 137: configReg[0][4]= configReg[0][4] & (~0x01);
 17591  264E  0024               	movlb	4	; select bank4
 17592  264F  086E               	movf	(_configReg^(0+512)+4),w
 17593  2650  39FE               	andlw	254
 17594  2651  00F5               	movwf	??_setDischarge
 17595  2652  0875               	movf	??_setDischarge,w
 17596  2653  00EE               	movwf	(_configReg^(0+512)+4)
 17597                           
 17598                           ;ltc6804.c: 138: }
 17599                           ;ltc6804.c: 139: break;
 17600  2654  0008               	return
 17601  2655                     l5770:	
 17602                           ;ltc6804.c: 140: case 1:
 17603                           
 17604                           
 17605                           ;ltc6804.c: 141: if(boolean){
 17606  2655  0874               	movf	setDischarge@boolean,w
 17607  2656  1903               	btfsc	3,2
 17608  2657  2E5F               	goto	l5774
 17609                           
 17610                           ;ltc6804.c: 142: configReg[0][4]= configReg[0][4] | 0x02;
 17611  2658  0024               	movlb	4	; select bank4
 17612  2659  086E               	movf	(_configReg^(0+512)+4),w
 17613  265A  3802               	iorlw	2
 17614  265B  00F5               	movwf	??_setDischarge
 17615  265C  0875               	movf	??_setDischarge,w
 17616  265D  00EE               	movwf	(_configReg^(0+512)+4)
 17617                           
 17618                           ;ltc6804.c: 143: }else{
 17619  265E  0008               	return
 17620  265F                     l5774:	
 17621                           
 17622                           ;ltc6804.c: 144: configReg[0][4]= configReg[0][4] & (~0x02);
 17623  265F  0024               	movlb	4	; select bank4
 17624  2660  086E               	movf	(_configReg^(0+512)+4),w
 17625  2661  39FD               	andlw	253
 17626  2662  00F5               	movwf	??_setDischarge
 17627  2663  0875               	movf	??_setDischarge,w
 17628  2664  00EE               	movwf	(_configReg^(0+512)+4)
 17629                           
 17630                           ;ltc6804.c: 145: }
 17631                           ;ltc6804.c: 146: break;
 17632  2665  0008               	return
 17633  2666                     l5776:	
 17634                           ;ltc6804.c: 147: case 2:
 17635                           
 17636                           
 17637                           ;ltc6804.c: 148: if(boolean){
 17638  2666  0874               	movf	setDischarge@boolean,w
 17639  2667  1903               	btfsc	3,2
 17640  2668  2E70               	goto	l5780
 17641                           
 17642                           ;ltc6804.c: 149: configReg[0][4]= configReg[0][4] | 0x04;
 17643  2669  0024               	movlb	4	; select bank4
 17644  266A  086E               	movf	(_configReg^(0+512)+4),w
 17645  266B  3804               	iorlw	4
 17646  266C  00F5               	movwf	??_setDischarge
 17647  266D  0875               	movf	??_setDischarge,w
 17648  266E  00EE               	movwf	(_configReg^(0+512)+4)
 17649                           
 17650                           ;ltc6804.c: 150: }else{
 17651  266F  0008               	return
 17652  2670                     l5780:	
 17653                           
 17654                           ;ltc6804.c: 151: configReg[0][4]= configReg[0][4] & (~0x04);
 17655  2670  0024               	movlb	4	; select bank4
 17656  2671  086E               	movf	(_configReg^(0+512)+4),w
 17657  2672  39FB               	andlw	251
 17658  2673  00F5               	movwf	??_setDischarge
 17659  2674  0875               	movf	??_setDischarge,w
 17660  2675  00EE               	movwf	(_configReg^(0+512)+4)
 17661                           
 17662                           ;ltc6804.c: 152: }
 17663                           ;ltc6804.c: 153: break;
 17664  2676  0008               	return
 17665  2677                     l5782:	
 17666                           ;ltc6804.c: 154: case 3:
 17667                           
 17668                           
 17669                           ;ltc6804.c: 155: if(boolean){
 17670  2677  0874               	movf	setDischarge@boolean,w
 17671  2678  1903               	btfsc	3,2
 17672  2679  2E81               	goto	l5786
 17673                           
 17674                           ;ltc6804.c: 156: configReg[0][4]= configReg[0][4] | 0x08;
 17675  267A  0024               	movlb	4	; select bank4
 17676  267B  086E               	movf	(_configReg^(0+512)+4),w
 17677  267C  3808               	iorlw	8
 17678  267D  00F5               	movwf	??_setDischarge
 17679  267E  0875               	movf	??_setDischarge,w
 17680  267F  00EE               	movwf	(_configReg^(0+512)+4)
 17681                           
 17682                           ;ltc6804.c: 157: }else{
 17683  2680  0008               	return
 17684  2681                     l5786:	
 17685                           
 17686                           ;ltc6804.c: 158: configReg[0][4]= configReg[0][4] & (~0x08);
 17687  2681  0024               	movlb	4	; select bank4
 17688  2682  086E               	movf	(_configReg^(0+512)+4),w
 17689  2683  39F7               	andlw	247
 17690  2684  00F5               	movwf	??_setDischarge
 17691  2685  0875               	movf	??_setDischarge,w
 17692  2686  00EE               	movwf	(_configReg^(0+512)+4)
 17693                           
 17694                           ;ltc6804.c: 159: }
 17695                           ;ltc6804.c: 160: break;
 17696  2687  0008               	return
 17697  2688                     l5788:	
 17698                           ;ltc6804.c: 161: case 4:
 17699                           
 17700                           
 17701                           ;ltc6804.c: 162: if(boolean){
 17702  2688  0874               	movf	setDischarge@boolean,w
 17703  2689  1903               	btfsc	3,2
 17704  268A  2E92               	goto	l5792
 17705                           
 17706                           ;ltc6804.c: 163: configReg[0][4]= configReg[0][4] | 0x10;
 17707  268B  0024               	movlb	4	; select bank4
 17708  268C  086E               	movf	(_configReg^(0+512)+4),w
 17709  268D  3810               	iorlw	16
 17710  268E  00F5               	movwf	??_setDischarge
 17711  268F  0875               	movf	??_setDischarge,w
 17712  2690  00EE               	movwf	(_configReg^(0+512)+4)
 17713                           
 17714                           ;ltc6804.c: 164: }else{
 17715  2691  0008               	return
 17716  2692                     l5792:	
 17717                           
 17718                           ;ltc6804.c: 165: configReg[0][4]= configReg[0][4] & (~0x10);
 17719  2692  0024               	movlb	4	; select bank4
 17720  2693  086E               	movf	(_configReg^(0+512)+4),w
 17721  2694  39EF               	andlw	239
 17722  2695  00F5               	movwf	??_setDischarge
 17723  2696  0875               	movf	??_setDischarge,w
 17724  2697  00EE               	movwf	(_configReg^(0+512)+4)
 17725                           
 17726                           ;ltc6804.c: 166: }
 17727                           ;ltc6804.c: 167: break;
 17728  2698  0008               	return
 17729  2699                     l5794:	
 17730                           ;ltc6804.c: 168: case 5:
 17731                           
 17732                           
 17733                           ;ltc6804.c: 169: if(boolean){
 17734  2699  0874               	movf	setDischarge@boolean,w
 17735  269A  1903               	btfsc	3,2
 17736  269B  2EA3               	goto	l5798
 17737                           
 17738                           ;ltc6804.c: 170: configReg[0][4]= configReg[0][4] | 0x20;
 17739  269C  0024               	movlb	4	; select bank4
 17740  269D  086E               	movf	(_configReg^(0+512)+4),w
 17741  269E  3820               	iorlw	32
 17742  269F  00F5               	movwf	??_setDischarge
 17743  26A0  0875               	movf	??_setDischarge,w
 17744  26A1  00EE               	movwf	(_configReg^(0+512)+4)
 17745                           
 17746                           ;ltc6804.c: 171: }else{
 17747  26A2  0008               	return
 17748  26A3                     l5798:	
 17749                           
 17750                           ;ltc6804.c: 172: configReg[0][4]= configReg[0][4] & (~0x20);
 17751  26A3  0024               	movlb	4	; select bank4
 17752  26A4  086E               	movf	(_configReg^(0+512)+4),w
 17753  26A5  39DF               	andlw	223
 17754  26A6  00F5               	movwf	??_setDischarge
 17755  26A7  0875               	movf	??_setDischarge,w
 17756  26A8  00EE               	movwf	(_configReg^(0+512)+4)
 17757                           
 17758                           ;ltc6804.c: 173: }
 17759                           ;ltc6804.c: 174: break;
 17760  26A9  0008               	return
 17761  26AA                     l5800:	
 17762                           ;ltc6804.c: 175: case 6:
 17763                           
 17764                           
 17765                           ;ltc6804.c: 176: if(boolean){
 17766  26AA  0874               	movf	setDischarge@boolean,w
 17767  26AB  1903               	btfsc	3,2
 17768  26AC  2EB4               	goto	l5804
 17769                           
 17770                           ;ltc6804.c: 177: configReg[0][4]= configReg[0][4] | 0x40;
 17771  26AD  0024               	movlb	4	; select bank4
 17772  26AE  086E               	movf	(_configReg^(0+512)+4),w
 17773  26AF  3840               	iorlw	64
 17774  26B0  00F5               	movwf	??_setDischarge
 17775  26B1  0875               	movf	??_setDischarge,w
 17776  26B2  00EE               	movwf	(_configReg^(0+512)+4)
 17777                           
 17778                           ;ltc6804.c: 178: }else{
 17779  26B3  0008               	return
 17780  26B4                     l5804:	
 17781                           
 17782                           ;ltc6804.c: 179: configReg[0][4]= configReg[0][4] & (~0x40);
 17783  26B4  0024               	movlb	4	; select bank4
 17784  26B5  086E               	movf	(_configReg^(0+512)+4),w
 17785  26B6  39BF               	andlw	191
 17786  26B7  00F5               	movwf	??_setDischarge
 17787  26B8  0875               	movf	??_setDischarge,w
 17788  26B9  00EE               	movwf	(_configReg^(0+512)+4)
 17789                           
 17790                           ;ltc6804.c: 180: }
 17791                           ;ltc6804.c: 181: break;
 17792  26BA  0008               	return
 17793  26BB                     l5806:	
 17794                           ;ltc6804.c: 182: case 7:
 17795                           
 17796                           
 17797                           ;ltc6804.c: 183: if(boolean){
 17798  26BB  0874               	movf	setDischarge@boolean,w
 17799  26BC  1903               	btfsc	3,2
 17800  26BD  2EC5               	goto	l5810
 17801                           
 17802                           ;ltc6804.c: 184: configReg[0][4]= configReg[0][4] | 0x80;
 17803  26BE  0024               	movlb	4	; select bank4
 17804  26BF  086E               	movf	(_configReg^(0+512)+4),w
 17805  26C0  3880               	iorlw	128
 17806  26C1  00F5               	movwf	??_setDischarge
 17807  26C2  0875               	movf	??_setDischarge,w
 17808  26C3  00EE               	movwf	(_configReg^(0+512)+4)
 17809                           
 17810                           ;ltc6804.c: 185: }else{
 17811  26C4  0008               	return
 17812  26C5                     l5810:	
 17813                           
 17814                           ;ltc6804.c: 186: configReg[0][4]= configReg[0][4] & (~0x80);
 17815  26C5  0024               	movlb	4	; select bank4
 17816  26C6  086E               	movf	(_configReg^(0+512)+4),w
 17817  26C7  397F               	andlw	127
 17818  26C8  00F5               	movwf	??_setDischarge
 17819  26C9  0875               	movf	??_setDischarge,w
 17820  26CA  00EE               	movwf	(_configReg^(0+512)+4)
 17821                           
 17822                           ;ltc6804.c: 187: }
 17823                           ;ltc6804.c: 188: break;
 17824  26CB  0008               	return
 17825  26CC                     l5812:	
 17826                           ;ltc6804.c: 189: case 8:
 17827                           
 17828                           
 17829                           ;ltc6804.c: 190: if(boolean){
 17830  26CC  0874               	movf	setDischarge@boolean,w
 17831  26CD  1903               	btfsc	3,2
 17832  26CE  2ED6               	goto	l5816
 17833                           
 17834                           ;ltc6804.c: 191: configReg[0][5]= configReg[0][5] | 0x01;
 17835  26CF  0024               	movlb	4	; select bank4
 17836  26D0  086F               	movf	(_configReg^(0+512)+5),w
 17837  26D1  3801               	iorlw	1
 17838  26D2  00F5               	movwf	??_setDischarge
 17839  26D3  0875               	movf	??_setDischarge,w
 17840  26D4  00EF               	movwf	(_configReg^(0+512)+5)
 17841                           
 17842                           ;ltc6804.c: 192: }else{
 17843  26D5  0008               	return
 17844  26D6                     l5816:	
 17845                           
 17846                           ;ltc6804.c: 193: configReg[0][5]= configReg[0][5] & (~0x01);
 17847  26D6  0024               	movlb	4	; select bank4
 17848  26D7  086F               	movf	(_configReg^(0+512)+5),w
 17849  26D8  39FE               	andlw	254
 17850  26D9  00F5               	movwf	??_setDischarge
 17851  26DA  0875               	movf	??_setDischarge,w
 17852  26DB  00EF               	movwf	(_configReg^(0+512)+5)
 17853                           
 17854                           ;ltc6804.c: 194: }
 17855                           ;ltc6804.c: 195: break;
 17856  26DC  0008               	return
 17857  26DD                     l5818:	
 17858                           ;ltc6804.c: 196: case 9:
 17859                           
 17860                           
 17861                           ;ltc6804.c: 197: if(boolean){
 17862  26DD  0874               	movf	setDischarge@boolean,w
 17863  26DE  1903               	btfsc	3,2
 17864  26DF  2EE7               	goto	l5822
 17865                           
 17866                           ;ltc6804.c: 198: configReg[0][5]= configReg[0][5] | 0x02;
 17867  26E0  0024               	movlb	4	; select bank4
 17868  26E1  086F               	movf	(_configReg^(0+512)+5),w
 17869  26E2  3802               	iorlw	2
 17870  26E3  00F5               	movwf	??_setDischarge
 17871  26E4  0875               	movf	??_setDischarge,w
 17872  26E5  00EF               	movwf	(_configReg^(0+512)+5)
 17873                           
 17874                           ;ltc6804.c: 199: }else{
 17875  26E6  0008               	return
 17876  26E7                     l5822:	
 17877                           
 17878                           ;ltc6804.c: 200: configReg[0][5]= configReg[0][5] & (~0x02);
 17879  26E7  0024               	movlb	4	; select bank4
 17880  26E8  086F               	movf	(_configReg^(0+512)+5),w
 17881  26E9  39FD               	andlw	253
 17882  26EA  00F5               	movwf	??_setDischarge
 17883  26EB  0875               	movf	??_setDischarge,w
 17884  26EC  00EF               	movwf	(_configReg^(0+512)+5)
 17885                           
 17886                           ;ltc6804.c: 201: }
 17887                           ;ltc6804.c: 202: break;
 17888  26ED  0008               	return
 17889  26EE                     l5824:	
 17890                           ;ltc6804.c: 203: case 10:
 17891                           
 17892                           
 17893                           ;ltc6804.c: 204: if(boolean){
 17894  26EE  0874               	movf	setDischarge@boolean,w
 17895  26EF  1903               	btfsc	3,2
 17896  26F0  2EF8               	goto	l5828
 17897                           
 17898                           ;ltc6804.c: 205: configReg[0][5]= configReg[0][5] | 0x04;
 17899  26F1  0024               	movlb	4	; select bank4
 17900  26F2  086F               	movf	(_configReg^(0+512)+5),w
 17901  26F3  3804               	iorlw	4
 17902  26F4  00F5               	movwf	??_setDischarge
 17903  26F5  0875               	movf	??_setDischarge,w
 17904  26F6  00EF               	movwf	(_configReg^(0+512)+5)
 17905                           
 17906                           ;ltc6804.c: 206: }else{
 17907  26F7  0008               	return
 17908  26F8                     l5828:	
 17909                           
 17910                           ;ltc6804.c: 207: configReg[0][5]= configReg[0][5] & (~0x04);
 17911  26F8  0024               	movlb	4	; select bank4
 17912  26F9  086F               	movf	(_configReg^(0+512)+5),w
 17913  26FA  39FB               	andlw	251
 17914  26FB  00F5               	movwf	??_setDischarge
 17915  26FC  0875               	movf	??_setDischarge,w
 17916  26FD  00EF               	movwf	(_configReg^(0+512)+5)
 17917                           
 17918                           ;ltc6804.c: 208: }
 17919                           ;ltc6804.c: 209: break;
 17920  26FE  0008               	return
 17921  26FF                     l5830:	
 17922                           ;ltc6804.c: 210: case 11:
 17923                           
 17924                           
 17925                           ;ltc6804.c: 211: if(boolean){
 17926  26FF  0874               	movf	setDischarge@boolean,w
 17927  2700  1903               	btfsc	3,2
 17928  2701  2F09               	goto	l5834
 17929                           
 17930                           ;ltc6804.c: 212: configReg[0][5]= configReg[0][5] | 0x08;
 17931  2702  0024               	movlb	4	; select bank4
 17932  2703  086F               	movf	(_configReg^(0+512)+5),w
 17933  2704  3808               	iorlw	8
 17934  2705  00F5               	movwf	??_setDischarge
 17935  2706  0875               	movf	??_setDischarge,w
 17936  2707  00EF               	movwf	(_configReg^(0+512)+5)
 17937                           
 17938                           ;ltc6804.c: 213: }else{
 17939  2708  0008               	return
 17940  2709                     l5834:	
 17941                           
 17942                           ;ltc6804.c: 214: configReg[0][5]= configReg[0][5] & (~0x08);
 17943  2709  0024               	movlb	4	; select bank4
 17944  270A  086F               	movf	(_configReg^(0+512)+5),w
 17945  270B  39F7               	andlw	247
 17946  270C  00F5               	movwf	??_setDischarge
 17947  270D  0875               	movf	??_setDischarge,w
 17948  270E  00EF               	movwf	(_configReg^(0+512)+5)
 17949                           
 17950                           ;ltc6804.c: 219: }
 17951                           
 17952                           ;ltc6804.c: 218: break;
 17953                           
 17954                           ;ltc6804.c: 217: default:
 17955                           
 17956                           ;ltc6804.c: 215: }
 17957                           ;ltc6804.c: 216: break;
 17958  270F  0008               	return
 17959  2710                     l5838:	
 17960                           
 17961                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17962                           ; Switch size 1, requested type "space"
 17963                           ; Number of cases is 1, Range of values is 0 to 0
 17964                           ; switch strategies available:
 17965                           ; Name         Instructions Cycles
 17966                           ; simple_byte            4     3 (average)
 17967                           ; direct_byte            8     6 (fixed)
 17968                           ; jumptable            260     6 (fixed)
 17969                           ;	Chosen strategy is simple_byte
 17970  2710  0873               	movf	setDischarge@index+1,w
 17971  2711  3A00               	xorlw	0	; case 0
 17972  2712  1903               	skipnz
 17973  2713  2F15               	goto	l8490
 17974  2714  2F1F               	goto	l612
 17975  2715                     l8490:	
 17976                           
 17977                           ; Switch size 1, requested type "space"
 17978                           ; Number of cases is 12, Range of values is 0 to 11
 17979                           ; switch strategies available:
 17980                           ; Name         Instructions Cycles
 17981                           ; direct_byte           30     6 (fixed)
 17982                           ; simple_byte           37    19 (average)
 17983                           ; jumptable            260     6 (fixed)
 17984                           ;	Chosen strategy is direct_byte
 17985  2715  0872               	movf	setDischarge@index,w
 17986  2716  0084               	movwf	4
 17987  2717  300C               	movlw	12
 17988  2718  0204               	subwf	4,w
 17989  2719  1803               	skipnc
 17990  271A  0008               	return
 17991  271B  31A8               	movlp	high S8492
 17992  271C  3504               	lslf	4,w
 17993  271D  3E00               	addlw	low S8492
 17994  271E  0082               	movwf	2
 17995  271F                     l612:	
 17996  271F  0008               	return
 17997  2720                     __end_of_setDischarge:	
 17998                           
 17999                           	psect	swtext1
 18000  2800                     __pswtext1:	
 18001  2800                     S8492:	
 18002  2800  31A6  2E44         	ljmp	l5764
 18003  2802  31A6  2E55         	ljmp	l5770
 18004  2804  31A6  2E66         	ljmp	l5776
 18005  2806  31A6  2E77         	ljmp	l5782
 18006  2808  31A6  2E88         	ljmp	l5788
 18007  280A  31A6  2E99         	ljmp	l5794
 18008  280C  31A6  2EAA         	ljmp	l5800
 18009  280E  31A6  2EBB         	ljmp	l5806
 18010  2810  31A6  2ECC         	ljmp	l5812
 18011  2812  31A6  2EDD         	ljmp	l5818
 18012  2814  31A6  2EEE         	ljmp	l5824
 18013  2816  31A6  2EFF         	ljmp	l5830
 18014                           
 18015                           	psect	text49
 18016  0805                     __ptext49:	
 18017 ;; *************** function ___flge *****************
 18018 ;; Defined at:
 18019 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 18020 ;; Parameters:    Size  Location     Type
 18021 ;;  ff1             4   53[BANK1 ] void 
 18022 ;;  ff2             4   57[BANK1 ] void 
 18023 ;; Auto vars:     Size  Location     Type
 18024 ;;		None
 18025 ;; Return value:  Size  Location     Type
 18026 ;;		None               void
 18027 ;; Registers used:
 18028 ;;		wreg, status,2, status,0
 18029 ;; Tracked objects:
 18030 ;;		On entry : 0/0
 18031 ;;		On exit  : 0/0
 18032 ;;		Unchanged: 0/0
 18033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18034 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18036 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18037 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18038 ;;Total ram usage:       16 bytes
 18039 ;; Hardware stack levels used:    1
 18040 ;; Hardware stack levels required when called:    2
 18041 ;; This function calls:
 18042 ;;		Nothing
 18043 ;; This function is called by:
 18044 ;;		_main
 18045 ;;		_writeVoltages
 18046 ;;		_measureVoltages
 18047 ;;		_cellBalancing
 18048 ;;		_sprintf
 18049 ;;		_startUp
 18050 ;; This function uses a non-reentrant model
 18051 ;;
 18052                           
 18053                           
 18054                           ;psect for function ___flge
 18055  0805                     ___flge:	
 18056                           
 18057                           ;incstack = 0
 18058                           ; Regs used in ___flge: [wreg+status,2+status,0]
 18059  0805  3000               	movlw	0
 18060  0806  0021               	movlb	1	; select bank1
 18061  0807  0555               	andwf	___flge@ff1^(0+128),w
 18062  0808  00DD               	movwf	??___flge^(0+128)
 18063  0809  3000               	movlw	0
 18064  080A  0556               	andwf	(___flge@ff1+1)^(0+128),w
 18065  080B  00DE               	movwf	(??___flge^(0+128)+1)
 18066  080C  3080               	movlw	128
 18067  080D  0557               	andwf	(___flge@ff1+2)^(0+128),w
 18068  080E  00DF               	movwf	(??___flge^(0+128)+2)
 18069  080F  307F               	movlw	127
 18070  0810  0558               	andwf	(___flge@ff1+3)^(0+128),w
 18071  0811  00E0               	movwf	(??___flge^(0+128)+3)
 18072  0812  0860               	movf	(??___flge+3)^(0+128),w
 18073  0813  045F               	iorwf	(??___flge+2)^(0+128),w
 18074  0814  045E               	iorwf	(??___flge+1)^(0+128),w
 18075  0815  045D               	iorwf	??___flge^(0+128),w
 18076  0816  1D03               	skipz
 18077  0817  2820               	goto	l1161
 18078  0818  3000               	movlw	0
 18079  0819  00D8               	movwf	(___flge@ff1+3)^(0+128)
 18080  081A  3000               	movlw	0
 18081  081B  00D7               	movwf	(___flge@ff1+2)^(0+128)
 18082  081C  3000               	movlw	0
 18083  081D  00D6               	movwf	(___flge@ff1+1)^(0+128)
 18084  081E  3000               	movlw	0
 18085  081F  00D5               	movwf	___flge@ff1^(0+128)
 18086  0820                     l1161:	
 18087  0820  3000               	movlw	0
 18088  0821  0559               	andwf	___flge@ff2^(0+128),w
 18089  0822  00DD               	movwf	??___flge^(0+128)
 18090  0823  3000               	movlw	0
 18091  0824  055A               	andwf	(___flge@ff2+1)^(0+128),w
 18092  0825  00DE               	movwf	(??___flge^(0+128)+1)
 18093  0826  3080               	movlw	128
 18094  0827  055B               	andwf	(___flge@ff2+2)^(0+128),w
 18095  0828  00DF               	movwf	(??___flge^(0+128)+2)
 18096  0829  307F               	movlw	127
 18097  082A  055C               	andwf	(___flge@ff2+3)^(0+128),w
 18098  082B  00E0               	movwf	(??___flge^(0+128)+3)
 18099  082C  0860               	movf	(??___flge+3)^(0+128),w
 18100  082D  045F               	iorwf	(??___flge+2)^(0+128),w
 18101  082E  045E               	iorwf	(??___flge+1)^(0+128),w
 18102  082F  045D               	iorwf	??___flge^(0+128),w
 18103  0830  1D03               	skipz
 18104  0831  283A               	goto	l7226
 18105  0832  3000               	movlw	0
 18106  0833  00DC               	movwf	(___flge@ff2+3)^(0+128)
 18107  0834  3000               	movlw	0
 18108  0835  00DB               	movwf	(___flge@ff2+2)^(0+128)
 18109  0836  3000               	movlw	0
 18110  0837  00DA               	movwf	(___flge@ff2+1)^(0+128)
 18111  0838  3000               	movlw	0
 18112  0839  00D9               	movwf	___flge@ff2^(0+128)
 18113  083A                     l7226:	
 18114  083A  1FD8               	btfss	(___flge@ff1+3)^(0+128),7
 18115  083B  2863               	goto	l7230
 18116  083C  3000               	movlw	0
 18117  083D  00DD               	movwf	??___flge^(0+128)
 18118  083E  3000               	movlw	0
 18119  083F  00DE               	movwf	(??___flge^(0+128)+1)
 18120  0840  3000               	movlw	0
 18121  0841  00DF               	movwf	(??___flge^(0+128)+2)
 18122  0842  3080               	movlw	128
 18123  0843  00E0               	movwf	(??___flge^(0+128)+3)
 18124  0844  0955               	comf	___flge@ff1^(0+128),w
 18125  0845  00E1               	movwf	(??___flge+4)^(0+128)
 18126  0846  0956               	comf	(___flge@ff1+1)^(0+128),w
 18127  0847  00E2               	movwf	((??___flge+4)^(0+128)+1)
 18128  0848  0957               	comf	(___flge@ff1+2)^(0+128),w
 18129  0849  00E3               	movwf	((??___flge+4)^(0+128)+2)
 18130  084A  0958               	comf	(___flge@ff1+3)^(0+128),w
 18131  084B  00E4               	movwf	((??___flge+4)^(0+128)+3)
 18132  084C  0AE1               	incf	(??___flge+4)^(0+128),f
 18133  084D  1903               	skipnz
 18134  084E  0AE2               	incf	((??___flge+4)^(0+128)+1),f
 18135  084F  1903               	skipnz
 18136  0850  0AE3               	incf	((??___flge+4)^(0+128)+2),f
 18137  0851  1903               	skipnz
 18138  0852  0AE4               	incf	((??___flge+4)^(0+128)+3),f
 18139  0853  0861               	movf	(??___flge+4)^(0+128),w
 18140  0854  07DD               	addwf	??___flge^(0+128),f
 18141  0855  0862               	movf	(??___flge+5)^(0+128),w
 18142  0856  3DDE               	addwfc	(??___flge^(0+128)+1),f
 18143  0857  0863               	movf	(??___flge+6)^(0+128),w
 18144  0858  3DDF               	addwfc	(??___flge^(0+128)+2),f
 18145  0859  0864               	movf	(??___flge+7)^(0+128),w
 18146  085A  3DE0               	addwfc	(??___flge^(0+128)+3),f
 18147  085B  0860               	movf	(??___flge+3)^(0+128),w
 18148  085C  00D8               	movwf	(___flge@ff1+3)^(0+128)
 18149  085D  085F               	movf	(??___flge+2)^(0+128),w
 18150  085E  00D7               	movwf	(___flge@ff1+2)^(0+128)
 18151  085F  085E               	movf	(??___flge+1)^(0+128),w
 18152  0860  00D6               	movwf	(___flge@ff1+1)^(0+128)
 18153  0861  085D               	movf	??___flge^(0+128),w
 18154  0862  00D5               	movwf	___flge@ff1^(0+128)
 18155  0863                     l7230:	
 18156  0863  1FDC               	btfss	(___flge@ff2+3)^(0+128),7
 18157  0864  288C               	goto	l7234
 18158  0865  3000               	movlw	0
 18159  0866  00DD               	movwf	??___flge^(0+128)
 18160  0867  3000               	movlw	0
 18161  0868  00DE               	movwf	(??___flge^(0+128)+1)
 18162  0869  3000               	movlw	0
 18163  086A  00DF               	movwf	(??___flge^(0+128)+2)
 18164  086B  3080               	movlw	128
 18165  086C  00E0               	movwf	(??___flge^(0+128)+3)
 18166  086D  0959               	comf	___flge@ff2^(0+128),w
 18167  086E  00E1               	movwf	(??___flge+4)^(0+128)
 18168  086F  095A               	comf	(___flge@ff2+1)^(0+128),w
 18169  0870  00E2               	movwf	((??___flge+4)^(0+128)+1)
 18170  0871  095B               	comf	(___flge@ff2+2)^(0+128),w
 18171  0872  00E3               	movwf	((??___flge+4)^(0+128)+2)
 18172  0873  095C               	comf	(___flge@ff2+3)^(0+128),w
 18173  0874  00E4               	movwf	((??___flge+4)^(0+128)+3)
 18174  0875  0AE1               	incf	(??___flge+4)^(0+128),f
 18175  0876  1903               	skipnz
 18176  0877  0AE2               	incf	((??___flge+4)^(0+128)+1),f
 18177  0878  1903               	skipnz
 18178  0879  0AE3               	incf	((??___flge+4)^(0+128)+2),f
 18179  087A  1903               	skipnz
 18180  087B  0AE4               	incf	((??___flge+4)^(0+128)+3),f
 18181  087C  0861               	movf	(??___flge+4)^(0+128),w
 18182  087D  07DD               	addwf	??___flge^(0+128),f
 18183  087E  0862               	movf	(??___flge+5)^(0+128),w
 18184  087F  3DDE               	addwfc	(??___flge^(0+128)+1),f
 18185  0880  0863               	movf	(??___flge+6)^(0+128),w
 18186  0881  3DDF               	addwfc	(??___flge^(0+128)+2),f
 18187  0882  0864               	movf	(??___flge+7)^(0+128),w
 18188  0883  3DE0               	addwfc	(??___flge^(0+128)+3),f
 18189  0884  0860               	movf	(??___flge+3)^(0+128),w
 18190  0885  00DC               	movwf	(___flge@ff2+3)^(0+128)
 18191  0886  085F               	movf	(??___flge+2)^(0+128),w
 18192  0887  00DB               	movwf	(___flge@ff2+2)^(0+128)
 18193  0888  085E               	movf	(??___flge+1)^(0+128),w
 18194  0889  00DA               	movwf	(___flge@ff2+1)^(0+128)
 18195  088A  085D               	movf	??___flge^(0+128),w
 18196  088B  00D9               	movwf	___flge@ff2^(0+128)
 18197  088C                     l7234:	
 18198  088C  3080               	movlw	128
 18199  088D  06D8               	xorwf	(___flge@ff1+3)^(0+128),f
 18200  088E  3080               	movlw	128
 18201  088F  06DC               	xorwf	(___flge@ff2+3)^(0+128),f
 18202  0890  085C               	movf	(___flge@ff2+3)^(0+128),w
 18203  0891  0258               	subwf	(___flge@ff1+3)^(0+128),w
 18204  0892  1D03               	skipz
 18205  0893  0008               	return
 18206  0894  085B               	movf	(___flge@ff2+2)^(0+128),w
 18207  0895  0257               	subwf	(___flge@ff1+2)^(0+128),w
 18208  0896  1D03               	skipz
 18209  0897  0008               	return
 18210  0898  085A               	movf	(___flge@ff2+1)^(0+128),w
 18211  0899  0256               	subwf	(___flge@ff1+1)^(0+128),w
 18212  089A  1D03               	skipz
 18213  089B  0008               	return
 18214  089C  0859               	movf	___flge@ff2^(0+128),w
 18215  089D  0255               	subwf	___flge@ff1^(0+128),w
 18216  089E  0008               	return
 18217  089F                     __end_of___flge:	
 18218                           
 18219                           	psect	text50
 18220  2417                     __ptext50:	
 18221 ;; *************** function _LTC6804_wrcfg *****************
 18222 ;; Defined at:
 18223 ;;		line 1006 in file "ltc6804.c"
 18224 ;; Parameters:    Size  Location     Type
 18225 ;;  total_ic        1    wreg     unsigned char 
 18226 ;;  config          2   15[BANK0 ] PTR unsigned char [6]
 18227 ;;		 -> RAM(4096), configReg(6), 
 18228 ;; Auto vars:     Size  Location     Type
 18229 ;;  total_ic        1   35[BANK0 ] unsigned char 
 18230 ;;  current_byte    1   38[BANK0 ] unsigned char 
 18231 ;;  current_ic      1   39[BANK0 ] unsigned char 
 18232 ;;  cmd            12   22[BANK0 ] unsigned char [12]
 18233 ;;  cfg_pec         2   36[BANK0 ] int 
 18234 ;;  cmd_index       1   40[BANK0 ] unsigned char 
 18235 ;;  CMD_LEN         1   34[BANK0 ] unsigned char 
 18236 ;; Return value:  Size  Location     Type
 18237 ;;                  1    wreg      void 
 18238 ;; Registers used:
 18239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18240 ;; Tracked objects:
 18241 ;;		On entry : 0/0
 18242 ;;		On exit  : 0/0
 18243 ;;		Unchanged: 0/0
 18244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18245 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18246 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18247 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18248 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18249 ;;Total ram usage:       26 bytes
 18250 ;; Hardware stack levels used:    1
 18251 ;; Hardware stack levels required when called:    4
 18252 ;; This function calls:
 18253 ;;		___wmul
 18254 ;;		_pec15_calc
 18255 ;;		_spi_write_array
 18256 ;;		_wakeup_idle
 18257 ;; This function is called by:
 18258 ;;		_cellBalancing
 18259 ;;		_LTC6804_initialize
 18260 ;; This function uses a non-reentrant model
 18261 ;;
 18262                           
 18263                           
 18264                           ;psect for function _LTC6804_wrcfg
 18265  2417                     _LTC6804_wrcfg:	
 18266                           
 18267                           ;incstack = 0
 18268                           ; Regs used in _LTC6804_wrcfg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18269                           ;LTC6804_wrcfg@total_ic stored from wreg
 18270  2417  0020               	movlb	0	; select bank0
 18271  2418  00C3               	movwf	LTC6804_wrcfg@total_ic
 18272                           
 18273                           ;ltc6804.c: 1010: const char BYTES_IN_REG = 6;
 18274                           ;ltc6804.c: 1011: char CMD_LEN = 4+(8*total_ic);
 18275  2419  0843               	movf	LTC6804_wrcfg@total_ic,w
 18276  241A  00B1               	movwf	??_LTC6804_wrcfg
 18277  241B  3002               	movlw	2
 18278  241C                     u10645:	
 18279  241C  35B1               	lslf	??_LTC6804_wrcfg,f
 18280  241D  3EFF               	addlw	-1
 18281  241E  1D03               	skipz
 18282  241F  2C1C               	goto	u10645
 18283  2420  3531               	lslf	??_LTC6804_wrcfg,w
 18284  2421  3E04               	addlw	4
 18285  2422  00B2               	movwf	??_LTC6804_wrcfg+1
 18286  2423  0832               	movf	??_LTC6804_wrcfg+1,w
 18287  2424  00C2               	movwf	LTC6804_wrcfg@CMD_LEN
 18288                           
 18289                           ;ltc6804.c: 1012: char cmd[12];
 18290                           ;ltc6804.c: 1013: int cfg_pec;
 18291                           ;ltc6804.c: 1014: char cmd_index;
 18292                           ;ltc6804.c: 1019: cmd[0] = 0x00;
 18293  2425  01B6               	clrf	LTC6804_wrcfg@cmd
 18294                           
 18295                           ;ltc6804.c: 1020: cmd[1] = 0x01;
 18296  2426  01B7               	clrf	LTC6804_wrcfg@cmd+1
 18297  2427  0AB7               	incf	LTC6804_wrcfg@cmd+1,f
 18298                           
 18299                           ;ltc6804.c: 1021: cmd[2] = 0x3d;
 18300  2428  303D               	movlw	61
 18301  2429  00B1               	movwf	??_LTC6804_wrcfg
 18302  242A  0831               	movf	??_LTC6804_wrcfg,w
 18303  242B  00B8               	movwf	LTC6804_wrcfg@cmd+2
 18304                           
 18305                           ;ltc6804.c: 1022: cmd[3] = 0x6e;
 18306  242C  306E               	movlw	110
 18307  242D  00B1               	movwf	??_LTC6804_wrcfg
 18308  242E  0831               	movf	??_LTC6804_wrcfg,w
 18309  242F  00B9               	movwf	LTC6804_wrcfg@cmd+3
 18310                           
 18311                           ;ltc6804.c: 1025: cmd_index = 4;
 18312  2430  3004               	movlw	4
 18313  2431  00B1               	movwf	??_LTC6804_wrcfg
 18314  2432  0831               	movf	??_LTC6804_wrcfg,w
 18315  2433  00C8               	movwf	LTC6804_wrcfg@cmd_index
 18316                           
 18317                           ;ltc6804.c: 1026: for (char current_ic = total_ic; current_ic > 0; current_ic--)
 18318  2434  0843               	movf	LTC6804_wrcfg@total_ic,w
 18319  2435  00B1               	movwf	??_LTC6804_wrcfg
 18320  2436  0831               	movf	??_LTC6804_wrcfg,w
 18321  2437  00C7               	movwf	LTC6804_wrcfg@current_ic
 18322  2438  0847               	movf	LTC6804_wrcfg@current_ic,w
 18323  2439  1903               	btfsc	3,2
 18324  243A  2CB8               	goto	l7754
 18325  243B                     l7728:	
 18326                           
 18327                           ;ltc6804.c: 1027: {
 18328                           ;ltc6804.c: 1030: for (char current_byte = 0; current_byte < BYTES_IN_REG; current_byte+
      +                          +)
 18329  243B  01C6               	clrf	LTC6804_wrcfg@current_byte
 18330  243C  3060               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18331  243D  0084               	movwf	4
 18332  243E  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18333  243F  0085               	movwf	5
 18334  2440  0800               	movf	0,w	;code access
 18335  2441  0246               	subwf	LTC6804_wrcfg@current_byte,w
 18336  2442  1803               	btfsc	3,0
 18337  2443  2C7B               	goto	l7742
 18338  2444                     l7734:	
 18339                           
 18340                           ;ltc6804.c: 1031: {
 18341                           ;ltc6804.c: 1033: cmd[cmd_index] = config[current_ic-1][current_byte];
 18342  2444  0846               	movf	LTC6804_wrcfg@current_byte,w
 18343  2445  00B1               	movwf	??_LTC6804_wrcfg
 18344  2446  01B2               	clrf	??_LTC6804_wrcfg+1
 18345  2447  0847               	movf	LTC6804_wrcfg@current_ic,w
 18346  2448  3EFF               	addlw	255
 18347  2449  00F2               	movwf	___wmul@multiplier
 18348  244A  30FF               	movlw	255
 18349  244B  1803               	skipnc
 18350  244C  3000               	movlw	0
 18351  244D  00F3               	movwf	___wmul@multiplier+1
 18352  244E  3006               	movlw	6
 18353  244F  00F4               	movwf	___wmul@multiplicand
 18354  2450  3000               	movlw	0
 18355  2451  00F5               	movwf	___wmul@multiplicand+1
 18356  2452  31AB  2370  31A4   	fcall	___wmul
 18357  2455  0872               	movf	?___wmul,w
 18358  2456  0020               	movlb	0	; select bank0
 18359  2457  072F               	addwf	LTC6804_wrcfg@config,w
 18360  2458  00B3               	movwf	??_LTC6804_wrcfg+2
 18361  2459  0873               	movf	?___wmul+1,w
 18362  245A  3D30               	addwfc	LTC6804_wrcfg@config+1,w
 18363  245B  00B4               	movwf	??_LTC6804_wrcfg+3
 18364  245C  0831               	movf	??_LTC6804_wrcfg,w
 18365  245D  0733               	addwf	??_LTC6804_wrcfg+2,w
 18366  245E  0086               	movwf	6
 18367  245F  0832               	movf	??_LTC6804_wrcfg+1,w
 18368  2460  3D34               	addwfc	??_LTC6804_wrcfg+3,w
 18369  2461  0087               	movwf	7
 18370  2462  0801               	movf	1,w
 18371  2463  00B5               	movwf	??_LTC6804_wrcfg+4
 18372  2464  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18373  2465  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18374  2466  0086               	movwf	6
 18375  2467  0187               	clrf	7
 18376  2468  0835               	movf	??_LTC6804_wrcfg+4,w
 18377  2469  0081               	movwf	1
 18378                           
 18379                           ;ltc6804.c: 1034: cmd_index = cmd_index + 1;
 18380  246A  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18381  246B  3E01               	addlw	1
 18382  246C  00B1               	movwf	??_LTC6804_wrcfg
 18383  246D  0831               	movf	??_LTC6804_wrcfg,w
 18384  246E  00C8               	movwf	LTC6804_wrcfg@cmd_index
 18385  246F  3001               	movlw	1
 18386  2470  00B1               	movwf	??_LTC6804_wrcfg
 18387  2471  0831               	movf	??_LTC6804_wrcfg,w
 18388  2472  07C6               	addwf	LTC6804_wrcfg@current_byte,f
 18389  2473  3060               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18390  2474  0084               	movwf	4
 18391  2475  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18392  2476  0085               	movwf	5
 18393  2477  0800               	movf	0,w	;code access
 18394  2478  0246               	subwf	LTC6804_wrcfg@current_byte,w
 18395  2479  1C03               	skipc
 18396  247A  2C44               	goto	l7734
 18397  247B                     l7742:	
 18398                           
 18399                           ;ltc6804.c: 1035: }
 18400                           ;ltc6804.c: 1037: cfg_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
 18401  247B  0847               	movf	LTC6804_wrcfg@current_ic,w
 18402  247C  3EFF               	addlw	255
 18403  247D  00F2               	movwf	___wmul@multiplier
 18404  247E  30FF               	movlw	255
 18405  247F  1803               	skipnc
 18406  2480  3000               	movlw	0
 18407  2481  00F3               	movwf	___wmul@multiplier+1
 18408  2482  3006               	movlw	6
 18409  2483  00F4               	movwf	___wmul@multiplicand
 18410  2484  3000               	movlw	0
 18411  2485  00F5               	movwf	___wmul@multiplicand+1
 18412  2486  31AB  2370  31A4   	fcall	___wmul
 18413  2489  0872               	movf	?___wmul,w
 18414  248A  0020               	movlb	0	; select bank0
 18415  248B  072F               	addwf	LTC6804_wrcfg@config,w
 18416  248C  00F8               	movwf	pec15_calc@data
 18417  248D  0873               	movf	?___wmul+1,w
 18418  248E  3D30               	addwfc	LTC6804_wrcfg@config+1,w
 18419  248F  00F9               	movwf	pec15_calc@data+1
 18420  2490  3060               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18421  2491  0084               	movwf	4
 18422  2492  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18423  2493  0085               	movwf	5
 18424  2494  0800               	movf	0,w	;code access
 18425  2495  31AD  25C1  31A4   	fcall	_pec15_calc
 18426  2498  0879               	movf	?_pec15_calc+1,w
 18427  2499  0020               	movlb	0	; select bank0
 18428  249A  00C5               	movwf	LTC6804_wrcfg@cfg_pec+1
 18429  249B  0878               	movf	?_pec15_calc,w
 18430  249C  00C4               	movwf	LTC6804_wrcfg@cfg_pec
 18431                           
 18432                           ;ltc6804.c: 1038: cmd[cmd_index] = (char)(cfg_pec >> 8);
 18433  249D  0845               	movf	LTC6804_wrcfg@cfg_pec+1,w
 18434  249E  00B1               	movwf	??_LTC6804_wrcfg
 18435  249F  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18436  24A0  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18437  24A1  0086               	movwf	6
 18438  24A2  0187               	clrf	7
 18439  24A3  0831               	movf	??_LTC6804_wrcfg,w
 18440  24A4  0081               	movwf	1
 18441                           
 18442                           ;ltc6804.c: 1039: cmd[cmd_index + 1] = (char)cfg_pec;
 18443  24A5  0844               	movf	LTC6804_wrcfg@cfg_pec,w
 18444  24A6  00B1               	movwf	??_LTC6804_wrcfg
 18445  24A7  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18446  24A8  3E01               	addlw	1
 18447  24A9  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18448  24AA  0086               	movwf	6
 18449  24AB  0187               	clrf	7
 18450  24AC  0831               	movf	??_LTC6804_wrcfg,w
 18451  24AD  0081               	movwf	1
 18452                           
 18453                           ;ltc6804.c: 1040: cmd_index = cmd_index + 2;
 18454  24AE  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18455  24AF  3E02               	addlw	2
 18456  24B0  00B1               	movwf	??_LTC6804_wrcfg
 18457  24B1  0831               	movf	??_LTC6804_wrcfg,w
 18458  24B2  00C8               	movwf	LTC6804_wrcfg@cmd_index
 18459  24B3  3001               	movlw	1
 18460  24B4  02C7               	subwf	LTC6804_wrcfg@current_ic,f
 18461  24B5  0847               	movf	LTC6804_wrcfg@current_ic,w
 18462  24B6  1D03               	btfss	3,2
 18463  24B7  2C3B               	goto	l7728
 18464  24B8                     l7754:	
 18465                           
 18466                           ;ltc6804.c: 1041: }
 18467                           ;ltc6804.c: 1044: wakeup_idle ();
 18468  24B8  31AA  22D2  31A4   	fcall	_wakeup_idle
 18469                           
 18470                           ;ltc6804.c: 1046: LATDbits.LATD3 = 0;
 18471  24BB  0022               	movlb	2	; select bank2
 18472  24BC  118F               	bcf	15,3	;volatile
 18473                           
 18474                           ;ltc6804.c: 1047: spi_write_array(CMD_LEN, cmd);
 18475  24BD  3036               	movlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18476  24BE  0020               	movlb	0	; select bank0
 18477  24BF  00B1               	movwf	??_LTC6804_wrcfg
 18478  24C0  0831               	movf	??_LTC6804_wrcfg,w
 18479  24C1  00F5               	movwf	spi_write_array@data
 18480  24C2  0842               	movf	LTC6804_wrcfg@CMD_LEN,w
 18481  24C3  31AB  235B         	fcall	_spi_write_array
 18482                           
 18483                           ;ltc6804.c: 1048: LATDbits.LATD3 = 1;
 18484  24C5  0022               	movlb	2	; select bank2
 18485  24C6  158F               	bsf	15,3	;volatile
 18486  24C7  0008               	return
 18487  24C8                     __end_of_LTC6804_wrcfg:	
 18488                           
 18489                           	psect	text51
 18490  2AD2                     __ptext51:	
 18491 ;; *************** function _wakeup_idle *****************
 18492 ;; Defined at:
 18493 ;;		line 1157 in file "ltc6804.c"
 18494 ;; Parameters:    Size  Location     Type
 18495 ;;		None
 18496 ;; Auto vars:     Size  Location     Type
 18497 ;;		None
 18498 ;; Return value:  Size  Location     Type
 18499 ;;                  1    wreg      void 
 18500 ;; Registers used:
 18501 ;;		wreg
 18502 ;; Tracked objects:
 18503 ;;		On entry : 0/0
 18504 ;;		On exit  : 0/0
 18505 ;;		Unchanged: 0/0
 18506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18511 ;;Total ram usage:        0 bytes
 18512 ;; Hardware stack levels used:    1
 18513 ;; Hardware stack levels required when called:    2
 18514 ;; This function calls:
 18515 ;;		Nothing
 18516 ;; This function is called by:
 18517 ;;		_LTC6804_rdstat_reg
 18518 ;;		_LTC6804_adstat
 18519 ;;		_LTC6804_adcv
 18520 ;;		_LTC6804_rdcv_reg
 18521 ;;		_LTC6804_wrcfg
 18522 ;;		_LTC6804_adax
 18523 ;;		_LTC6804_rdaux_reg
 18524 ;;		_LTC6804_clrcell
 18525 ;;		_LTC6804_clraux
 18526 ;;		_LTC6804_rdcfg
 18527 ;; This function uses a non-reentrant model
 18528 ;;
 18529                           
 18530                           
 18531                           ;psect for function _wakeup_idle
 18532  2AD2                     _wakeup_idle:	
 18533                           
 18534                           ;ltc6804.c: 1159: LATDbits.LATD3 = 0;
 18535                           
 18536                           ;incstack = 0
 18537                           ; Regs used in _wakeup_idle: [wreg]
 18538  2AD2  0022               	movlb	2	; select bank2
 18539  2AD3  118F               	bcf	15,3	;volatile
 18540                           
 18541                           ;ltc6804.c: 1160: _delay((unsigned long)((2)*(32000000/4000000.0)));
 18542  2AD4  3005               	movlw	5
 18543  2AD5                     u11727:	
 18544  2AD5  0B89               	decfsz	9,f
 18545  2AD6  2AD5               	goto	u11727
 18546  2AD7  0000               	nop
 18547                           
 18548                           ;ltc6804.c: 1161: LATDbits.LATD3 = 1;
 18549  2AD8  0022               	movlb	2	; select bank2
 18550  2AD9  158F               	bsf	15,3	;volatile
 18551  2ADA  0008               	return
 18552  2ADB                     __end_of_wakeup_idle:	
 18553                           
 18554                           	psect	text52
 18555  2B5B                     __ptext52:	
 18556 ;; *************** function _spi_write_array *****************
 18557 ;; Defined at:
 18558 ;;		line 1208 in file "ltc6804.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  len             1    wreg     unsigned char 
 18561 ;;  data            1    5[COMMON] PTR unsigned char 
 18562 ;;		 -> LTC6804_wrcfg@cmd(12), LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), LTC6804_adstat@cmd(4), 
 18563 ;; Auto vars:     Size  Location     Type
 18564 ;;  len             1    7[COMMON] unsigned char 
 18565 ;;  i               1    8[COMMON] unsigned char 
 18566 ;; Return value:  Size  Location     Type
 18567 ;;                  1    wreg      void 
 18568 ;; Registers used:
 18569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18570 ;; Tracked objects:
 18571 ;;		On entry : 0/0
 18572 ;;		On exit  : 0/0
 18573 ;;		Unchanged: 0/0
 18574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18575 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18576 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18579 ;;Total ram usage:        4 bytes
 18580 ;; Hardware stack levels used:    1
 18581 ;; Hardware stack levels required when called:    3
 18582 ;; This function calls:
 18583 ;;		_spi_write
 18584 ;; This function is called by:
 18585 ;;		_LTC6804_adstat
 18586 ;;		_LTC6804_adcv
 18587 ;;		_LTC6804_wrcfg
 18588 ;;		_LTC6804_adax
 18589 ;; This function uses a non-reentrant model
 18590 ;;
 18591                           
 18592                           
 18593                           ;psect for function _spi_write_array
 18594  2B5B                     _spi_write_array:	
 18595                           
 18596                           ;incstack = 0
 18597                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18598                           ;spi_write_array@len stored from wreg
 18599  2B5B  00F7               	movwf	spi_write_array@len
 18600                           
 18601                           ;ltc6804.c: 1212: for(char i = 0; i < len; i++)
 18602  2B5C  01F8               	clrf	spi_write_array@i
 18603  2B5D                     l4518:	
 18604  2B5D  0877               	movf	spi_write_array@len,w
 18605  2B5E  0278               	subwf	spi_write_array@i,w
 18606  2B5F  1803               	btfsc	3,0
 18607  2B60  0008               	return
 18608                           
 18609                           ;ltc6804.c: 1213: {
 18610                           ;ltc6804.c: 1214: spi_write((char)data[i]);
 18611  2B61  0878               	movf	spi_write_array@i,w
 18612  2B62  0775               	addwf	spi_write_array@data,w
 18613  2B63  00F6               	movwf	??_spi_write_array
 18614  2B64  0876               	movf	??_spi_write_array,w
 18615  2B65  0086               	movwf	6
 18616  2B66  0187               	clrf	7
 18617  2B67  0801               	movf	1,w
 18618  2B68  31AA  22E4  31AB   	fcall	_spi_write
 18619  2B6B  3001               	movlw	1
 18620  2B6C  00F6               	movwf	??_spi_write_array
 18621  2B6D  0876               	movf	??_spi_write_array,w
 18622  2B6E  07F8               	addwf	spi_write_array@i,f
 18623  2B6F  2B5D               	goto	l4518
 18624  2B70                     __end_of_spi_write_array:	
 18625                           
 18626                           	psect	text53
 18627  2AE4                     __ptext53:	
 18628 ;; *************** function _spi_write *****************
 18629 ;; Defined at:
 18630 ;;		line 36 in file "spi.c"
 18631 ;; Parameters:    Size  Location     Type
 18632 ;;  data            1    wreg     unsigned char 
 18633 ;; Auto vars:     Size  Location     Type
 18634 ;;  data            1    4[COMMON] unsigned char 
 18635 ;;  readData        1    3[COMMON] unsigned char 
 18636 ;; Return value:  Size  Location     Type
 18637 ;;                  1    wreg      void 
 18638 ;; Registers used:
 18639 ;;		wreg
 18640 ;; Tracked objects:
 18641 ;;		On entry : 0/0
 18642 ;;		On exit  : 0/0
 18643 ;;		Unchanged: 0/0
 18644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18646 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18649 ;;Total ram usage:        3 bytes
 18650 ;; Hardware stack levels used:    1
 18651 ;; Hardware stack levels required when called:    2
 18652 ;; This function calls:
 18653 ;;		Nothing
 18654 ;; This function is called by:
 18655 ;;		_spi_write_array
 18656 ;;		_spi_write_read
 18657 ;; This function uses a non-reentrant model
 18658 ;;
 18659                           
 18660                           
 18661                           ;psect for function _spi_write
 18662  2AE4                     _spi_write:	
 18663                           
 18664                           ;incstack = 0
 18665                           ; Regs used in _spi_write: [wreg]
 18666                           ;spi_write@data stored from wreg
 18667  2AE4  00F4               	movwf	spi_write@data
 18668                           
 18669                           ;spi.c: 37: SSP1BUF = data;
 18670  2AE5  0874               	movf	spi_write@data,w
 18671  2AE6  0024               	movlb	4	; select bank4
 18672  2AE7  0091               	movwf	17	;volatile
 18673  2AE8                     l784:	
 18674                           ;spi.c: 38: while(SSP1STATbits.BF == 0);
 18675                           
 18676  2AE8  1C14               	btfss	20,0	;volatile
 18677  2AE9  2AE8               	goto	l784
 18678                           
 18679                           ;spi.c: 39: char readData = SSP1BUF;
 18680  2AEA  0811               	movf	17,w	;volatile
 18681  2AEB  00F2               	movwf	??_spi_write
 18682  2AEC  0872               	movf	??_spi_write,w
 18683  2AED  00F3               	movwf	spi_write@readData
 18684  2AEE  0008               	return
 18685  2AEF                     __end_of_spi_write:	
 18686                           
 18687                           	psect	text54
 18688  2DC1                     __ptext54:	
 18689 ;; *************** function _pec15_calc *****************
 18690 ;; Defined at:
 18691 ;;		line 1185 in file "ltc6804.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;  len             1    wreg     unsigned char 
 18694 ;;  data            2    8[COMMON] PTR unsigned char 
 18695 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), LTC6804_rdaux@data(8), 
 18696 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), 
 18697 ;;		 -> RAM(4096), ADSTAT(2), LTC6804_rdstat_reg@cmd(4), configReg(6), 
 18698 ;; Auto vars:     Size  Location     Type
 18699 ;;  len             1   11[BANK0 ] unsigned char 
 18700 ;;  i               1   12[BANK0 ] unsigned char 
 18701 ;;  remainder       2   13[BANK0 ] int 
 18702 ;;  addr            2    9[BANK0 ] int 
 18703 ;; Return value:  Size  Location     Type
 18704 ;;                  2    8[COMMON] int 
 18705 ;; Registers used:
 18706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18707 ;; Tracked objects:
 18708 ;;		On entry : 0/0
 18709 ;;		On exit  : 0/0
 18710 ;;		Unchanged: 0/0
 18711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18713 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18714 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18715 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18716 ;;Total ram usage:       17 bytes
 18717 ;; Hardware stack levels used:    1
 18718 ;; Hardware stack levels required when called:    2
 18719 ;; This function calls:
 18720 ;;		Nothing
 18721 ;; This function is called by:
 18722 ;;		_LTC6804_rdstat_reg
 18723 ;;		_LTC6804_adstat
 18724 ;;		_LTC6804_adcv
 18725 ;;		_LTC6804_rdcv
 18726 ;;		_LTC6804_rdcv_reg
 18727 ;;		_LTC6804_wrcfg
 18728 ;;		_LTC6804_adax
 18729 ;;		_LTC6804_rdaux
 18730 ;;		_LTC6804_rdaux_reg
 18731 ;;		_LTC6804_clrcell
 18732 ;;		_LTC6804_clraux
 18733 ;;		_LTC6804_rdcfg
 18734 ;; This function uses a non-reentrant model
 18735 ;;
 18736                           
 18737                           
 18738                           ;psect for function _pec15_calc
 18739  2DC1                     _pec15_calc:	
 18740                           
 18741                           ;incstack = 0
 18742                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 18743                           ;pec15_calc@len stored from wreg
 18744  2DC1  0020               	movlb	0	; select bank0
 18745  2DC2  00AB               	movwf	pec15_calc@len
 18746                           
 18747                           ;ltc6804.c: 1189: int remainder,addr;
 18748                           ;ltc6804.c: 1191: remainder = 16;
 18749  2DC3  3010               	movlw	16
 18750  2DC4  00AD               	movwf	pec15_calc@remainder
 18751  2DC5  3000               	movlw	0
 18752  2DC6  00AE               	movwf	pec15_calc@remainder+1
 18753                           
 18754                           ;ltc6804.c: 1192: for(char i = 0; i<len;i++)
 18755  2DC7  01AC               	clrf	pec15_calc@i
 18756  2DC8                     l4484:	
 18757  2DC8  082B               	movf	pec15_calc@len,w
 18758  2DC9  022C               	subwf	pec15_calc@i,w
 18759  2DCA  1803               	btfsc	3,0
 18760  2DCB  2E0B               	goto	l4486
 18761                           
 18762                           ;ltc6804.c: 1193: {
 18763                           ;ltc6804.c: 1194: addr = ((remainder>>7)^data[i])&0xff;
 18764  2DCC  082C               	movf	pec15_calc@i,w
 18765  2DCD  00A0               	movwf	??_pec15_calc
 18766  2DCE  01A1               	clrf	??_pec15_calc+1
 18767  2DCF  0820               	movf	??_pec15_calc,w
 18768  2DD0  0778               	addwf	pec15_calc@data,w
 18769  2DD1  0086               	movwf	6
 18770  2DD2  0821               	movf	??_pec15_calc+1,w
 18771  2DD3  3D79               	addwfc	pec15_calc@data+1,w
 18772  2DD4  0087               	movwf	7
 18773  2DD5  0801               	movf	1,w
 18774  2DD6  00A2               	movwf	??_pec15_calc+2
 18775  2DD7  01A3               	clrf	??_pec15_calc+3
 18776  2DD8  082E               	movf	pec15_calc@remainder+1,w
 18777  2DD9  00A5               	movwf	??_pec15_calc+5
 18778  2DDA  082D               	movf	pec15_calc@remainder,w
 18779  2DDB  00A4               	movwf	??_pec15_calc+4
 18780  2DDC  3007               	movlw	7
 18781  2DDD  00A6               	movwf	??_pec15_calc+6
 18782  2DDE                     u5105:	
 18783  2DDE  0D25               	rlf	??_pec15_calc+5,w
 18784  2DDF  0CA5               	rrf	??_pec15_calc+5,f
 18785  2DE0  0CA4               	rrf	??_pec15_calc+4,f
 18786  2DE1  0BA6               	decfsz	??_pec15_calc+6,f
 18787  2DE2  2DDE               	goto	u5105
 18788  2DE3  0822               	movf	??_pec15_calc+2,w
 18789  2DE4  0624               	xorwf	??_pec15_calc+4,w
 18790  2DE5  00A7               	movwf	??_pec15_calc+7
 18791  2DE6  0823               	movf	??_pec15_calc+3,w
 18792  2DE7  0625               	xorwf	??_pec15_calc+5,w
 18793  2DE8  00A8               	movwf	??_pec15_calc+8
 18794  2DE9  30FF               	movlw	255
 18795  2DEA  0527               	andwf	??_pec15_calc+7,w
 18796  2DEB  00A9               	movwf	pec15_calc@addr
 18797  2DEC  3000               	movlw	0
 18798  2DED  0528               	andwf	??_pec15_calc+8,w
 18799  2DEE  00AA               	movwf	pec15_calc@addr+1
 18800                           
 18801                           ;ltc6804.c: 1195: remainder = (remainder<<8)^crc15Table[addr];
 18802  2DEF  082A               	movf	pec15_calc@addr+1,w
 18803  2DF0  0085               	movwf	5
 18804  2DF1  0829               	movf	pec15_calc@addr,w
 18805  2DF2  0084               	movwf	4
 18806  2DF3  3584               	lslf	4,f
 18807  2DF4  0D85               	rlf	5,f
 18808  2DF5  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 18809  2DF6  0784               	addwf	4,f
 18810  2DF7  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 18811  2DF8  3D85               	addwfc	5,f
 18812  2DF9  3F00               	moviw [0]fsr0
 18813  2DFA  00A0               	movwf	??_pec15_calc
 18814  2DFB  3F01               	moviw [1]fsr0
 18815  2DFC  00A1               	movwf	??_pec15_calc+1
 18816  2DFD  082D               	movf	pec15_calc@remainder,w
 18817  2DFE  00A3               	movwf	??_pec15_calc+3
 18818  2DFF  01A2               	clrf	??_pec15_calc+2
 18819  2E00  0820               	movf	??_pec15_calc,w
 18820  2E01  0622               	xorwf	??_pec15_calc+2,w
 18821  2E02  00AD               	movwf	pec15_calc@remainder
 18822  2E03  0821               	movf	??_pec15_calc+1,w
 18823  2E04  0623               	xorwf	??_pec15_calc+3,w
 18824  2E05  00AE               	movwf	pec15_calc@remainder+1
 18825  2E06  3001               	movlw	1
 18826  2E07  00A0               	movwf	??_pec15_calc
 18827  2E08  0820               	movf	??_pec15_calc,w
 18828  2E09  07AC               	addwf	pec15_calc@i,f
 18829  2E0A  2DC8               	goto	l4484
 18830  2E0B                     l4486:	
 18831                           
 18832                           ;ltc6804.c: 1196: }
 18833                           ;ltc6804.c: 1197: return(remainder*2);
 18834  2E0B  352D               	lslf	pec15_calc@remainder,w
 18835  2E0C  00F8               	movwf	?_pec15_calc
 18836  2E0D  0D2E               	rlf	pec15_calc@remainder+1,w
 18837  2E0E  00F9               	movwf	?_pec15_calc+1
 18838  2E0F  0008               	return
 18839  2E10                     __end_of_pec15_calc:	
 18840                           
 18841                           	psect	text55
 18842  2B70                     __ptext55:	
 18843 ;; *************** function ___wmul *****************
 18844 ;; Defined at:
 18845 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 18846 ;; Parameters:    Size  Location     Type
 18847 ;;  multiplier      2    2[COMMON] unsigned int 
 18848 ;;  multiplicand    2    4[COMMON] unsigned int 
 18849 ;; Auto vars:     Size  Location     Type
 18850 ;;  product         2    6[COMMON] unsigned int 
 18851 ;; Return value:  Size  Location     Type
 18852 ;;                  2    2[COMMON] unsigned int 
 18853 ;; Registers used:
 18854 ;;		wreg, status,2, status,0
 18855 ;; Tracked objects:
 18856 ;;		On entry : 0/0
 18857 ;;		On exit  : 0/0
 18858 ;;		Unchanged: 0/0
 18859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18864 ;;Total ram usage:        6 bytes
 18865 ;; Hardware stack levels used:    1
 18866 ;; Hardware stack levels required when called:    2
 18867 ;; This function calls:
 18868 ;;		Nothing
 18869 ;; This function is called by:
 18870 ;;		_LTC6804_rdcv
 18871 ;;		_LTC6804_wrcfg
 18872 ;;		_sprintf
 18873 ;;		_LTC6804_rdaux
 18874 ;; This function uses a non-reentrant model
 18875 ;;
 18876                           
 18877                           
 18878                           ;psect for function ___wmul
 18879  2B70                     ___wmul:	
 18880                           
 18881                           ;incstack = 0
 18882                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18883  2B70  01F6               	clrf	___wmul@product
 18884  2B71  01F7               	clrf	___wmul@product+1
 18885  2B72                     l7208:	
 18886  2B72  1C72               	btfss	___wmul@multiplier,0
 18887  2B73  2B78               	goto	l1017
 18888  2B74  0874               	movf	___wmul@multiplicand,w
 18889  2B75  07F6               	addwf	___wmul@product,f
 18890  2B76  0875               	movf	___wmul@multiplicand+1,w
 18891  2B77  3DF7               	addwfc	___wmul@product+1,f
 18892  2B78                     l1017:	
 18893  2B78  3001               	movlw	1
 18894  2B79                     u9625:	
 18895  2B79  35F4               	lslf	___wmul@multiplicand,f
 18896  2B7A  0DF5               	rlf	___wmul@multiplicand+1,f
 18897  2B7B  0B89               	decfsz	9,f
 18898  2B7C  2B79               	goto	u9625
 18899  2B7D  3001               	movlw	1
 18900  2B7E                     u9635:	
 18901  2B7E  36F3               	lsrf	___wmul@multiplier+1,f
 18902  2B7F  0CF2               	rrf	___wmul@multiplier,f
 18903  2B80  0B89               	decfsz	9,f
 18904  2B81  2B7E               	goto	u9635
 18905  2B82  0872               	movf	___wmul@multiplier,w
 18906  2B83  0473               	iorwf	___wmul@multiplier+1,w
 18907  2B84  1D03               	btfss	3,2
 18908  2B85  2B72               	goto	l7208
 18909  2B86  0877               	movf	___wmul@product+1,w
 18910  2B87  00F3               	movwf	?___wmul+1
 18911  2B88  0876               	movf	___wmul@product,w
 18912  2B89  00F2               	movwf	?___wmul
 18913  2B8A  0008               	return
 18914  2B8B                     __end_of___wmul:	
 18915                           
 18916                           	psect	text56
 18917  21EA                     __ptext56:	
 18918 ;; *************** function _avgBuff *****************
 18919 ;; Defined at:
 18920 ;;		line 68 in file "adc.c"
 18921 ;; Parameters:    Size  Location     Type
 18922 ;;  buff            1    wreg     PTR float 
 18923 ;;		 -> main@currentBuff(80), 
 18924 ;;  size            2   53[BANK1 ] int 
 18925 ;; Auto vars:     Size  Location     Type
 18926 ;;  buff            1   59[BANK1 ] PTR float 
 18927 ;;		 -> main@currentBuff(80), 
 18928 ;;  total           4   60[BANK1 ] float 
 18929 ;;  inc             2   64[BANK1 ] int 
 18930 ;; Return value:  Size  Location     Type
 18931 ;;                  4   53[BANK1 ] float 
 18932 ;; Registers used:
 18933 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18934 ;; Tracked objects:
 18935 ;;		On entry : 0/0
 18936 ;;		On exit  : 0/0
 18937 ;;		Unchanged: 0/0
 18938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18939 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18940 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18941 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18942 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18943 ;;Total ram usage:       13 bytes
 18944 ;; Hardware stack levels used:    1
 18945 ;; Hardware stack levels required when called:    3
 18946 ;; This function calls:
 18947 ;;		___fladd
 18948 ;;		___fldiv
 18949 ;;		___xxtofl
 18950 ;; This function is called by:
 18951 ;;		_main
 18952 ;; This function uses a non-reentrant model
 18953 ;;
 18954                           
 18955                           
 18956                           ;psect for function _avgBuff
 18957  21EA                     _avgBuff:	
 18958                           
 18959                           ;incstack = 0
 18960                           ; Regs used in _avgBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18961                           ;avgBuff@buff stored from wreg
 18962  21EA  0021               	movlb	1	; select bank1
 18963  21EB  00DB               	movwf	avgBuff@buff^(0+128)
 18964                           
 18965                           ;adc.c: 69: int inc = 0;
 18966  21EC  01E0               	clrf	avgBuff@inc^(0+128)
 18967  21ED  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 18968                           
 18969                           ;adc.c: 70: float total = 0;
 18970  21EE  3000               	movlw	0
 18971  21EF  00DF               	movwf	(avgBuff@total+3)^(0+128)
 18972  21F0  3000               	movlw	0
 18973  21F1  00DE               	movwf	(avgBuff@total+2)^(0+128)
 18974  21F2  3000               	movlw	0
 18975  21F3  00DD               	movwf	(avgBuff@total+1)^(0+128)
 18976  21F4  3000               	movlw	0
 18977  21F5  00DC               	movwf	avgBuff@total^(0+128)
 18978                           
 18979                           ;adc.c: 71: for(inc = 0; inc < size; inc++){
 18980  21F6  01E0               	clrf	avgBuff@inc^(0+128)
 18981  21F7  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 18982  21F8                     l8156:	
 18983  21F8  0861               	movf	(avgBuff@inc+1)^(0+128),w
 18984  21F9  3A80               	xorlw	128
 18985  21FA  00D9               	movwf	??_avgBuff^(0+128)
 18986  21FB  0856               	movf	(avgBuff@size+1)^(0+128),w
 18987  21FC  3A80               	xorlw	128
 18988  21FD  0259               	subwf	??_avgBuff^(0+128),w
 18989  21FE  1D03               	skipz
 18990  21FF  2A02               	goto	u11255
 18991  2200  0855               	movf	avgBuff@size^(0+128),w
 18992  2201  0260               	subwf	avgBuff@inc^(0+128),w
 18993  2202                     u11255:	
 18994  2202  1803               	btfsc	3,0
 18995  2203  2A34               	goto	l8158
 18996                           
 18997                           ;adc.c: 72: total += buff[inc];
 18998  2204  0021               	movlb	1	; select bank1
 18999  2205  0860               	movf	avgBuff@inc^(0+128),w
 19000  2206  00D9               	movwf	??_avgBuff^(0+128)
 19001  2207  3001               	movlw	1
 19002  2208                     u11245:	
 19003  2208  35D9               	lslf	??_avgBuff^(0+128),f
 19004  2209  3EFF               	addlw	-1
 19005  220A  1D03               	skipz
 19006  220B  2A08               	goto	u11245
 19007  220C  3559               	lslf	??_avgBuff^(0+128),w
 19008  220D  075B               	addwf	avgBuff@buff^(0+128),w
 19009  220E  00DA               	movwf	(??_avgBuff+1)^(0+128)
 19010  220F  085A               	movf	(??_avgBuff+1)^(0+128),w
 19011  2210  0086               	movwf	6
 19012  2211  3001               	movlw	1	; select bank2/3
 19013  2212  0087               	movwf	7
 19014  2213  3F40               	moviw [0]fsr1
 19015  2214  00BD               	movwf	___fladd@b^(0+128)
 19016  2215  3F41               	moviw [1]fsr1
 19017  2216  00BE               	movwf	(___fladd@b+1)^(0+128)
 19018  2217  3F42               	moviw [2]fsr1
 19019  2218  00BF               	movwf	(___fladd@b+2)^(0+128)
 19020  2219  3F43               	moviw [3]fsr1
 19021  221A  00C0               	movwf	(___fladd@b+3)^(0+128)
 19022  221B  085F               	movf	(avgBuff@total+3)^(0+128),w
 19023  221C  00C4               	movwf	(___fladd@a+3)^(0+128)
 19024  221D  085E               	movf	(avgBuff@total+2)^(0+128),w
 19025  221E  00C3               	movwf	(___fladd@a+2)^(0+128)
 19026  221F  085D               	movf	(avgBuff@total+1)^(0+128),w
 19027  2220  00C2               	movwf	(___fladd@a+1)^(0+128)
 19028  2221  085C               	movf	avgBuff@total^(0+128),w
 19029  2222  00C1               	movwf	___fladd@a^(0+128)
 19030  2223  3185  25F9  31A1   	fcall	___fladd
 19031  2226  0021               	movlb	1	; select bank1
 19032  2227  0840               	movf	(?___fladd+3)^(0+128),w
 19033  2228  00DF               	movwf	(avgBuff@total+3)^(0+128)
 19034  2229  083F               	movf	(?___fladd+2)^(0+128),w
 19035  222A  00DE               	movwf	(avgBuff@total+2)^(0+128)
 19036  222B  083E               	movf	(?___fladd+1)^(0+128),w
 19037  222C  00DD               	movwf	(avgBuff@total+1)^(0+128)
 19038  222D  083D               	movf	?___fladd^(0+128),w
 19039  222E  00DC               	movwf	avgBuff@total^(0+128)
 19040  222F  3001               	movlw	1
 19041  2230  07E0               	addwf	avgBuff@inc^(0+128),f
 19042  2231  3000               	movlw	0
 19043  2232  3DE1               	addwfc	(avgBuff@inc+1)^(0+128),f
 19044  2233  29F8               	goto	l8156
 19045  2234                     l8158:	
 19046                           
 19047                           ;adc.c: 73: }
 19048                           ;adc.c: 75: return ((float) total)/((float) size);
 19049  2234  0021               	movlb	1	; select bank1
 19050  2235  0855               	movf	avgBuff@size^(0+128),w
 19051  2236  0020               	movlb	0	; select bank0
 19052  2237  00AE               	movwf	___xxtofl@val
 19053  2238  0021               	movlb	1	; select bank1
 19054  2239  0856               	movf	(avgBuff@size+1)^(0+128),w
 19055  223A  0020               	movlb	0	; select bank0
 19056  223B  00AF               	movwf	___xxtofl@val+1
 19057  223C  0D89               	rlf	9,f
 19058  223D  3B89               	subwfb	9,f
 19059  223E  0989               	comf	9,f
 19060  223F  00B0               	movwf	___xxtofl@val+2
 19061  2240  00B1               	movwf	___xxtofl@val+3
 19062  2241  3001               	movlw	1
 19063  2242  31A3  2381  31A1   	fcall	___xxtofl
 19064  2245  0020               	movlb	0	; select bank0
 19065  2246  0831               	movf	?___xxtofl+3,w
 19066  2247  00BB               	movwf	___fldiv@a+3
 19067  2248  0830               	movf	?___xxtofl+2,w
 19068  2249  00BA               	movwf	___fldiv@a+2
 19069  224A  082F               	movf	?___xxtofl+1,w
 19070  224B  00B9               	movwf	___fldiv@a+1
 19071  224C  082E               	movf	?___xxtofl,w
 19072  224D  00B8               	movwf	___fldiv@a
 19073  224E  0021               	movlb	1	; select bank1
 19074  224F  085F               	movf	(avgBuff@total+3)^(0+128),w
 19075  2250  0020               	movlb	0	; select bank0
 19076  2251  00BF               	movwf	___fldiv@b+3
 19077  2252  0021               	movlb	1	; select bank1
 19078  2253  085E               	movf	(avgBuff@total+2)^(0+128),w
 19079  2254  0020               	movlb	0	; select bank0
 19080  2255  00BE               	movwf	___fldiv@b+2
 19081  2256  0021               	movlb	1	; select bank1
 19082  2257  085D               	movf	(avgBuff@total+1)^(0+128),w
 19083  2258  0020               	movlb	0	; select bank0
 19084  2259  00BD               	movwf	___fldiv@b+1
 19085  225A  0021               	movlb	1	; select bank1
 19086  225B  085C               	movf	avgBuff@total^(0+128),w
 19087  225C  0020               	movlb	0	; select bank0
 19088  225D  00BC               	movwf	___fldiv@b
 19089  225E  319E  2671         	fcall	___fldiv
 19090  2260  0020               	movlb	0	; select bank0
 19091  2261  083B               	movf	?___fldiv+3,w
 19092  2262  0021               	movlb	1	; select bank1
 19093  2263  00D8               	movwf	(?_avgBuff+3)^(0+128)
 19094  2264  0020               	movlb	0	; select bank0
 19095  2265  083A               	movf	?___fldiv+2,w
 19096  2266  0021               	movlb	1	; select bank1
 19097  2267  00D7               	movwf	(?_avgBuff+2)^(0+128)
 19098  2268  0020               	movlb	0	; select bank0
 19099  2269  0839               	movf	?___fldiv+1,w
 19100  226A  0021               	movlb	1	; select bank1
 19101  226B  00D6               	movwf	(?_avgBuff+1)^(0+128)
 19102  226C  0020               	movlb	0	; select bank0
 19103  226D  0838               	movf	?___fldiv,w
 19104  226E  0021               	movlb	1	; select bank1
 19105  226F  00D5               	movwf	?_avgBuff^(0+128)
 19106  2270  0008               	return
 19107  2271                     __end_of_avgBuff:	
 19108                           
 19109                           	psect	text57
 19110  2381                     __ptext57:	
 19111 ;; *************** function ___xxtofl *****************
 19112 ;; Defined at:
 19113 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 19114 ;; Parameters:    Size  Location     Type
 19115 ;;  sign            1    wreg     unsigned char 
 19116 ;;  val             4   14[BANK0 ] long 
 19117 ;; Auto vars:     Size  Location     Type
 19118 ;;  sign            1   18[BANK0 ] unsigned char 
 19119 ;;  arg             4   20[BANK0 ] unsigned long 
 19120 ;;  exp             1   19[BANK0 ] unsigned char 
 19121 ;; Return value:  Size  Location     Type
 19122 ;;                  4   14[BANK0 ] unsigned char 
 19123 ;; Registers used:
 19124 ;;		wreg, status,2, status,0
 19125 ;; Tracked objects:
 19126 ;;		On entry : 0/0
 19127 ;;		On exit  : 0/0
 19128 ;;		Unchanged: 0/0
 19129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19130 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19131 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19132 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19133 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19134 ;;Total ram usage:       14 bytes
 19135 ;; Hardware stack levels used:    1
 19136 ;; Hardware stack levels required when called:    2
 19137 ;; This function calls:
 19138 ;;		Nothing
 19139 ;; This function is called by:
 19140 ;;		_calculateTemp
 19141 ;;		_getCurrent
 19142 ;;		_avgBuff
 19143 ;;		_sumVoltages
 19144 ;;		_measureVoltages
 19145 ;;		_sprintf
 19146 ;; This function uses a non-reentrant model
 19147 ;;
 19148                           
 19149                           
 19150                           ;psect for function ___xxtofl
 19151  2381                     ___xxtofl:	
 19152                           
 19153                           ;incstack = 0
 19154                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 19155                           ;___xxtofl@sign stored from wreg
 19156  2381  0020               	movlb	0	; select bank0
 19157  2382  00B2               	movwf	___xxtofl@sign
 19158  2383  0832               	movf	___xxtofl@sign,w
 19159  2384  1D03               	btfss	3,2
 19160  2385  1FB1               	btfss	___xxtofl@val+3,7
 19161  2386  2B97               	goto	l7346
 19162  2387  092E               	comf	___xxtofl@val,w
 19163  2388  00B4               	movwf	___xxtofl@arg
 19164  2389  092F               	comf	___xxtofl@val+1,w
 19165  238A  00B5               	movwf	___xxtofl@arg+1
 19166  238B  0930               	comf	___xxtofl@val+2,w
 19167  238C  00B6               	movwf	___xxtofl@arg+2
 19168  238D  0931               	comf	___xxtofl@val+3,w
 19169  238E  00B7               	movwf	___xxtofl@arg+3
 19170  238F  0AB4               	incf	___xxtofl@arg,f
 19171  2390  1903               	skipnz
 19172  2391  0AB5               	incf	___xxtofl@arg+1,f
 19173  2392  1903               	skipnz
 19174  2393  0AB6               	incf	___xxtofl@arg+2,f
 19175  2394  1903               	skipnz
 19176  2395  0AB7               	incf	___xxtofl@arg+3,f
 19177  2396  2B9F               	goto	l1411
 19178  2397                     l7346:	
 19179  2397  0831               	movf	___xxtofl@val+3,w
 19180  2398  00B7               	movwf	___xxtofl@arg+3
 19181  2399  0830               	movf	___xxtofl@val+2,w
 19182  239A  00B6               	movwf	___xxtofl@arg+2
 19183  239B  082F               	movf	___xxtofl@val+1,w
 19184  239C  00B5               	movwf	___xxtofl@arg+1
 19185  239D  082E               	movf	___xxtofl@val,w
 19186  239E  00B4               	movwf	___xxtofl@arg
 19187  239F                     l1411:	
 19188  239F  0831               	movf	___xxtofl@val+3,w
 19189  23A0  0430               	iorwf	___xxtofl@val+2,w
 19190  23A1  042F               	iorwf	___xxtofl@val+1,w
 19191  23A2  042E               	iorwf	___xxtofl@val,w
 19192  23A3  1D03               	skipz
 19193  23A4  2BAE               	goto	l7352
 19194  23A5  3000               	movlw	0
 19195  23A6  00B1               	movwf	?___xxtofl+3
 19196  23A7  3000               	movlw	0
 19197  23A8  00B0               	movwf	?___xxtofl+2
 19198  23A9  3000               	movlw	0
 19199  23AA  00AF               	movwf	?___xxtofl+1
 19200  23AB  3000               	movlw	0
 19201  23AC  00AE               	movwf	?___xxtofl
 19202  23AD  0008               	return
 19203  23AE                     l7352:	
 19204  23AE  3096               	movlw	150
 19205  23AF  00F4               	movwf	??___xxtofl
 19206  23B0  0874               	movf	??___xxtofl,w
 19207  23B1  00B3               	movwf	___xxtofl@exp
 19208  23B2                     l7356:	
 19209  23B2  30FE               	movlw	254
 19210  23B3  0537               	andwf	___xxtofl@arg+3,w
 19211  23B4  1903               	btfsc	3,2
 19212  23B5  2BD5               	goto	l1417
 19213  23B6  3001               	movlw	1
 19214  23B7  00F4               	movwf	??___xxtofl
 19215  23B8  0874               	movf	??___xxtofl,w
 19216  23B9  07B3               	addwf	___xxtofl@exp,f
 19217  23BA  3001               	movlw	1
 19218  23BB                     u9975:	
 19219  23BB  36B7               	lsrf	___xxtofl@arg+3,f
 19220  23BC  0CB6               	rrf	___xxtofl@arg+2,f
 19221  23BD  0CB5               	rrf	___xxtofl@arg+1,f
 19222  23BE  0CB4               	rrf	___xxtofl@arg,f
 19223  23BF  0B89               	decfsz	9,f
 19224  23C0  2BBB               	goto	u9975
 19225  23C1  2BB2               	goto	l7356
 19226  23C2                     l7358:	
 19227  23C2  3001               	movlw	1
 19228  23C3  00F4               	movwf	??___xxtofl
 19229  23C4  0874               	movf	??___xxtofl,w
 19230  23C5  07B3               	addwf	___xxtofl@exp,f
 19231  23C6  3001               	movlw	1
 19232  23C7  07B4               	addwf	___xxtofl@arg,f
 19233  23C8  3000               	movlw	0
 19234  23C9  3DB5               	addwfc	___xxtofl@arg+1,f
 19235  23CA  3000               	movlw	0
 19236  23CB  3DB6               	addwfc	___xxtofl@arg+2,f
 19237  23CC  3000               	movlw	0
 19238  23CD  3DB7               	addwfc	___xxtofl@arg+3,f
 19239  23CE  3001               	movlw	1
 19240  23CF                     u9995:	
 19241  23CF  36B7               	lsrf	___xxtofl@arg+3,f
 19242  23D0  0CB6               	rrf	___xxtofl@arg+2,f
 19243  23D1  0CB5               	rrf	___xxtofl@arg+1,f
 19244  23D2  0CB4               	rrf	___xxtofl@arg,f
 19245  23D3  0B89               	decfsz	9,f
 19246  23D4  2BCF               	goto	u9995
 19247  23D5                     l1417:	
 19248  23D5  30FF               	movlw	255
 19249  23D6  0537               	andwf	___xxtofl@arg+3,w
 19250  23D7  1903               	btfsc	3,2
 19251  23D8  2BE3               	goto	l7366
 19252  23D9  2BC2               	goto	l7358
 19253  23DA                     l7364:	
 19254  23DA  3001               	movlw	1
 19255  23DB  02B3               	subwf	___xxtofl@exp,f
 19256  23DC  3001               	movlw	1
 19257  23DD                     u10015:	
 19258  23DD  35B4               	lslf	___xxtofl@arg,f
 19259  23DE  0DB5               	rlf	___xxtofl@arg+1,f
 19260  23DF  0DB6               	rlf	___xxtofl@arg+2,f
 19261  23E0  0DB7               	rlf	___xxtofl@arg+3,f
 19262  23E1  0B89               	decfsz	9,f
 19263  23E2  2BDD               	goto	u10015
 19264  23E3                     l7366:	
 19265  23E3  1BB6               	btfsc	___xxtofl@arg+2,7
 19266  23E4  2BE9               	goto	l1424
 19267  23E5  3002               	movlw	2
 19268  23E6  0233               	subwf	___xxtofl@exp,w
 19269  23E7  1803               	skipnc
 19270  23E8  2BDA               	goto	l7364
 19271  23E9                     l1424:	
 19272  23E9  1833               	btfsc	___xxtofl@exp,0
 19273  23EA  2BF3               	goto	l1425
 19274  23EB  30FF               	movlw	255
 19275  23EC  05B4               	andwf	___xxtofl@arg,f
 19276  23ED  30FF               	movlw	255
 19277  23EE  05B5               	andwf	___xxtofl@arg+1,f
 19278  23EF  307F               	movlw	127
 19279  23F0  05B6               	andwf	___xxtofl@arg+2,f
 19280  23F1  30FF               	movlw	255
 19281  23F2  05B7               	andwf	___xxtofl@arg+3,f
 19282  23F3                     l1425:	
 19283  23F3  1003               	clrc
 19284  23F4  0CB3               	rrf	___xxtofl@exp,f
 19285  23F5  0833               	movf	___xxtofl@exp,w
 19286  23F6  00F4               	movwf	??___xxtofl
 19287  23F7  01F5               	clrf	??___xxtofl+1
 19288  23F8  01F6               	clrf	??___xxtofl+2
 19289  23F9  01F7               	clrf	??___xxtofl+3
 19290  23FA  3018               	movlw	24
 19291  23FB                     u10055:	
 19292  23FB  35F4               	lslf	??___xxtofl,f
 19293  23FC  0DF5               	rlf	??___xxtofl+1,f
 19294  23FD  0DF6               	rlf	??___xxtofl+2,f
 19295  23FE  0DF7               	rlf	??___xxtofl+3,f
 19296  23FF  0B89               	decfsz	9,f
 19297  2400  2BFB               	goto	u10055
 19298  2401  0874               	movf	??___xxtofl,w
 19299  2402  04B4               	iorwf	___xxtofl@arg,f
 19300  2403  0875               	movf	??___xxtofl+1,w
 19301  2404  04B5               	iorwf	___xxtofl@arg+1,f
 19302  2405  0876               	movf	??___xxtofl+2,w
 19303  2406  04B6               	iorwf	___xxtofl@arg+2,f
 19304  2407  0877               	movf	??___xxtofl+3,w
 19305  2408  04B7               	iorwf	___xxtofl@arg+3,f
 19306  2409  0832               	movf	___xxtofl@sign,w
 19307  240A  1D03               	btfss	3,2
 19308  240B  1FB1               	btfss	___xxtofl@val+3,7
 19309  240C  2C0E               	goto	l7380
 19310  240D  17B7               	bsf	___xxtofl@arg+3,7
 19311  240E                     l7380:	
 19312  240E  0837               	movf	___xxtofl@arg+3,w
 19313  240F  00B1               	movwf	?___xxtofl+3
 19314  2410  0836               	movf	___xxtofl@arg+2,w
 19315  2411  00B0               	movwf	?___xxtofl+2
 19316  2412  0835               	movf	___xxtofl@arg+1,w
 19317  2413  00AF               	movwf	?___xxtofl+1
 19318  2414  0834               	movf	___xxtofl@arg,w
 19319  2415  00AE               	movwf	?___xxtofl
 19320  2416  0008               	return
 19321  2417                     __end_of___xxtofl:	
 19322                           
 19323                           	psect	text58
 19324  1E71                     __ptext58:	
 19325 ;; *************** function ___fldiv *****************
 19326 ;; Defined at:
 19327 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 19328 ;; Parameters:    Size  Location     Type
 19329 ;;  a               4   24[BANK0 ] unsigned char 
 19330 ;;  b               4   28[BANK0 ] unsigned char 
 19331 ;; Auto vars:     Size  Location     Type
 19332 ;;  grs             4   44[BANK0 ] unsigned long 
 19333 ;;  rem             4   38[BANK0 ] unsigned long 
 19334 ;;  new_exp         2   42[BANK0 ] int 
 19335 ;;  aexp            1   49[BANK0 ] unsigned char 
 19336 ;;  bexp            1   48[BANK0 ] unsigned char 
 19337 ;;  sign            1   37[BANK0 ] unsigned char 
 19338 ;; Return value:  Size  Location     Type
 19339 ;;                  4   24[BANK0 ] unsigned char 
 19340 ;; Registers used:
 19341 ;;		wreg, status,2, status,0
 19342 ;; Tracked objects:
 19343 ;;		On entry : 0/0
 19344 ;;		On exit  : 0/0
 19345 ;;		Unchanged: 0/0
 19346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19348 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19349 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19350 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19351 ;;Total ram usage:       26 bytes
 19352 ;; Hardware stack levels used:    1
 19353 ;; Hardware stack levels required when called:    2
 19354 ;; This function calls:
 19355 ;;		Nothing
 19356 ;; This function is called by:
 19357 ;;		_calculateTemp
 19358 ;;		_calculateCurrent
 19359 ;;		_avgBuff
 19360 ;;		_measureVoltages
 19361 ;;		_startUp
 19362 ;; This function uses a non-reentrant model
 19363 ;;
 19364                           
 19365                           
 19366                           ;psect for function ___fldiv
 19367  1E71                     ___fldiv:	
 19368                           
 19369                           ;incstack = 0
 19370                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19371  1E71  0020               	movlb	0	; select bank0
 19372  1E72  083F               	movf	___fldiv@b+3,w
 19373  1E73  3980               	andlw	128
 19374  1E74  00C0               	movwf	??___fldiv
 19375  1E75  0840               	movf	??___fldiv,w
 19376  1E76  00C5               	movwf	___fldiv@sign
 19377  1E77  353F               	lslf	___fldiv@b+3,w
 19378  1E78  00C0               	movwf	??___fldiv
 19379  1E79  0840               	movf	??___fldiv,w
 19380  1E7A  00D0               	movwf	___fldiv@bexp
 19381  1E7B  1BBE               	btfsc	___fldiv@b+2,7
 19382  1E7C  1450               	bsf	___fldiv@bexp,0
 19383  1E7D  0850               	movf	___fldiv@bexp,w
 19384  1E7E  1903               	btfsc	3,2
 19385  1E7F  2E8E               	goto	l5334
 19386  1E80  0A50               	incf	___fldiv@bexp,w
 19387  1E81  1D03               	btfss	3,2
 19388  1E82  2E8B               	goto	l5330
 19389  1E83  3000               	movlw	0
 19390  1E84  00BF               	movwf	___fldiv@b+3
 19391  1E85  3000               	movlw	0
 19392  1E86  00BE               	movwf	___fldiv@b+2
 19393  1E87  3000               	movlw	0
 19394  1E88  00BD               	movwf	___fldiv@b+1
 19395  1E89  3000               	movlw	0
 19396  1E8A  00BC               	movwf	___fldiv@b
 19397  1E8B                     l5330:	
 19398  1E8B  17BE               	bsf	___fldiv@b+2,7
 19399  1E8C  01BF               	clrf	___fldiv@b+3
 19400  1E8D  2E96               	goto	l5336
 19401  1E8E                     l5334:	
 19402  1E8E  3000               	movlw	0
 19403  1E8F  00BF               	movwf	___fldiv@b+3
 19404  1E90  3000               	movlw	0
 19405  1E91  00BE               	movwf	___fldiv@b+2
 19406  1E92  3000               	movlw	0
 19407  1E93  00BD               	movwf	___fldiv@b+1
 19408  1E94  3000               	movlw	0
 19409  1E95  00BC               	movwf	___fldiv@b
 19410  1E96                     l5336:	
 19411  1E96  083B               	movf	___fldiv@a+3,w
 19412  1E97  3980               	andlw	128
 19413  1E98  00C0               	movwf	??___fldiv
 19414  1E99  0840               	movf	??___fldiv,w
 19415  1E9A  06C5               	xorwf	___fldiv@sign,f
 19416  1E9B  353B               	lslf	___fldiv@a+3,w
 19417  1E9C  00C0               	movwf	??___fldiv
 19418  1E9D  0840               	movf	??___fldiv,w
 19419  1E9E  00D1               	movwf	___fldiv@aexp
 19420  1E9F  1BBA               	btfsc	___fldiv@a+2,7
 19421  1EA0  1451               	bsf	___fldiv@aexp,0
 19422  1EA1  0851               	movf	___fldiv@aexp,w
 19423  1EA2  1903               	btfsc	3,2
 19424  1EA3  2EB2               	goto	l5354
 19425  1EA4  0A51               	incf	___fldiv@aexp,w
 19426  1EA5  1D03               	btfss	3,2
 19427  1EA6  2EAF               	goto	l5350
 19428  1EA7  3000               	movlw	0
 19429  1EA8  00BB               	movwf	___fldiv@a+3
 19430  1EA9  3000               	movlw	0
 19431  1EAA  00BA               	movwf	___fldiv@a+2
 19432  1EAB  3000               	movlw	0
 19433  1EAC  00B9               	movwf	___fldiv@a+1
 19434  1EAD  3000               	movlw	0
 19435  1EAE  00B8               	movwf	___fldiv@a
 19436  1EAF                     l5350:	
 19437  1EAF  17BA               	bsf	___fldiv@a+2,7
 19438  1EB0  01BB               	clrf	___fldiv@a+3
 19439  1EB1  2EBA               	goto	l1352
 19440  1EB2                     l5354:	
 19441  1EB2  3000               	movlw	0
 19442  1EB3  00BB               	movwf	___fldiv@a+3
 19443  1EB4  3000               	movlw	0
 19444  1EB5  00BA               	movwf	___fldiv@a+2
 19445  1EB6  3000               	movlw	0
 19446  1EB7  00B9               	movwf	___fldiv@a+1
 19447  1EB8  3000               	movlw	0
 19448  1EB9  00B8               	movwf	___fldiv@a
 19449  1EBA                     l1352:	
 19450  1EBA  083B               	movf	___fldiv@a+3,w
 19451  1EBB  043A               	iorwf	___fldiv@a+2,w
 19452  1EBC  0439               	iorwf	___fldiv@a+1,w
 19453  1EBD  0438               	iorwf	___fldiv@a,w
 19454  1EBE  1D03               	skipz
 19455  1EBF  2ED5               	goto	l5360
 19456  1EC0  3000               	movlw	0
 19457  1EC1  00BF               	movwf	___fldiv@b+3
 19458  1EC2  3000               	movlw	0
 19459  1EC3  00BE               	movwf	___fldiv@b+2
 19460  1EC4  3000               	movlw	0
 19461  1EC5  00BD               	movwf	___fldiv@b+1
 19462  1EC6  3000               	movlw	0
 19463  1EC7  00BC               	movwf	___fldiv@b
 19464  1EC8  3080               	movlw	128
 19465  1EC9  04BE               	iorwf	___fldiv@b+2,f
 19466  1ECA  307F               	movlw	127
 19467  1ECB  04BF               	iorwf	___fldiv@b+3,f
 19468  1ECC  083F               	movf	___fldiv@b+3,w
 19469  1ECD  00BB               	movwf	?___fldiv+3
 19470  1ECE  083E               	movf	___fldiv@b+2,w
 19471  1ECF  00BA               	movwf	?___fldiv+2
 19472  1ED0  083D               	movf	___fldiv@b+1,w
 19473  1ED1  00B9               	movwf	?___fldiv+1
 19474  1ED2  083C               	movf	___fldiv@b,w
 19475  1ED3  00B8               	movwf	?___fldiv
 19476  1ED4  0008               	return
 19477  1ED5                     l5360:	
 19478  1ED5  0850               	movf	___fldiv@bexp,w
 19479  1ED6  1D03               	btfss	3,2
 19480  1ED7  2EE9               	goto	l5366
 19481  1ED8  3000               	movlw	0
 19482  1ED9  00BF               	movwf	___fldiv@b+3
 19483  1EDA  3000               	movlw	0
 19484  1EDB  00BE               	movwf	___fldiv@b+2
 19485  1EDC  3000               	movlw	0
 19486  1EDD  00BD               	movwf	___fldiv@b+1
 19487  1EDE  3000               	movlw	0
 19488  1EDF  00BC               	movwf	___fldiv@b
 19489  1EE0  083F               	movf	___fldiv@b+3,w
 19490  1EE1  00BB               	movwf	?___fldiv+3
 19491  1EE2  083E               	movf	___fldiv@b+2,w
 19492  1EE3  00BA               	movwf	?___fldiv+2
 19493  1EE4  083D               	movf	___fldiv@b+1,w
 19494  1EE5  00B9               	movwf	?___fldiv+1
 19495  1EE6  083C               	movf	___fldiv@b,w
 19496  1EE7  00B8               	movwf	?___fldiv
 19497  1EE8  0008               	return
 19498  1EE9                     l5366:	
 19499  1EE9  0851               	movf	___fldiv@aexp,w
 19500  1EEA  00C0               	movwf	??___fldiv
 19501  1EEB  01C1               	clrf	??___fldiv+1
 19502  1EEC  09C0               	comf	??___fldiv,f
 19503  1EED  09C1               	comf	??___fldiv+1,f
 19504  1EEE  0AC0               	incf	??___fldiv,f
 19505  1EEF  1903               	skipnz
 19506  1EF0  0AC1               	incf	??___fldiv+1,f
 19507  1EF1  0850               	movf	___fldiv@bexp,w
 19508  1EF2  0740               	addwf	??___fldiv,w
 19509  1EF3  00C2               	movwf	??___fldiv+2
 19510  1EF4  0841               	movf	??___fldiv+1,w
 19511  1EF5  1803               	skipnc
 19512  1EF6  0A41               	incf	??___fldiv+1,w
 19513  1EF7  00C3               	movwf	??___fldiv+3
 19514  1EF8  0842               	movf	??___fldiv+2,w
 19515  1EF9  3E7F               	addlw	127
 19516  1EFA  00CA               	movwf	___fldiv@new_exp
 19517  1EFB  3000               	movlw	0
 19518  1EFC  3D43               	addwfc	??___fldiv+3,w
 19519  1EFD  00CB               	movwf	___fldiv@new_exp+1
 19520  1EFE  083F               	movf	___fldiv@b+3,w
 19521  1EFF  00C9               	movwf	___fldiv@rem+3
 19522  1F00  083E               	movf	___fldiv@b+2,w
 19523  1F01  00C8               	movwf	___fldiv@rem+2
 19524  1F02  083D               	movf	___fldiv@b+1,w
 19525  1F03  00C7               	movwf	___fldiv@rem+1
 19526  1F04  083C               	movf	___fldiv@b,w
 19527  1F05  00C6               	movwf	___fldiv@rem
 19528  1F06  3000               	movlw	0
 19529  1F07  00BF               	movwf	___fldiv@b+3
 19530  1F08  3000               	movlw	0
 19531  1F09  00BE               	movwf	___fldiv@b+2
 19532  1F0A  3000               	movlw	0
 19533  1F0B  00BD               	movwf	___fldiv@b+1
 19534  1F0C  3000               	movlw	0
 19535  1F0D  00BC               	movwf	___fldiv@b
 19536  1F0E  3000               	movlw	0
 19537  1F0F  00CF               	movwf	___fldiv@grs+3
 19538  1F10  3000               	movlw	0
 19539  1F11  00CE               	movwf	___fldiv@grs+2
 19540  1F12  3000               	movlw	0
 19541  1F13  00CD               	movwf	___fldiv@grs+1
 19542  1F14  3000               	movlw	0
 19543  1F15  00CC               	movwf	___fldiv@grs
 19544  1F16  01D1               	clrf	___fldiv@aexp
 19545  1F17                     l5394:	
 19546  1F17  301A               	movlw	26
 19547  1F18  0251               	subwf	___fldiv@aexp,w
 19548  1F19  1803               	btfsc	3,0
 19549  1F1A  2F53               	goto	l5396
 19550  1F1B  0851               	movf	___fldiv@aexp,w
 19551  1F1C  1903               	btfsc	3,2
 19552  1F1D  2F35               	goto	l5386
 19553  1F1E  3001               	movlw	1
 19554  1F1F                     u6775:	
 19555  1F1F  35C6               	lslf	___fldiv@rem,f
 19556  1F20  0DC7               	rlf	___fldiv@rem+1,f
 19557  1F21  0DC8               	rlf	___fldiv@rem+2,f
 19558  1F22  0DC9               	rlf	___fldiv@rem+3,f
 19559  1F23  0B89               	decfsz	9,f
 19560  1F24  2F1F               	goto	u6775
 19561  1F25  3001               	movlw	1
 19562  1F26                     u6785:	
 19563  1F26  35BC               	lslf	___fldiv@b,f
 19564  1F27  0DBD               	rlf	___fldiv@b+1,f
 19565  1F28  0DBE               	rlf	___fldiv@b+2,f
 19566  1F29  0DBF               	rlf	___fldiv@b+3,f
 19567  1F2A  0B89               	decfsz	9,f
 19568  1F2B  2F26               	goto	u6785
 19569  1F2C  1BCF               	btfsc	___fldiv@grs+3,7
 19570  1F2D  143C               	bsf	___fldiv@b,0
 19571  1F2E  3001               	movlw	1
 19572  1F2F                     u6805:	
 19573  1F2F  35CC               	lslf	___fldiv@grs,f
 19574  1F30  0DCD               	rlf	___fldiv@grs+1,f
 19575  1F31  0DCE               	rlf	___fldiv@grs+2,f
 19576  1F32  0DCF               	rlf	___fldiv@grs+3,f
 19577  1F33  0B89               	decfsz	9,f
 19578  1F34  2F2F               	goto	u6805
 19579  1F35                     l5386:	
 19580  1F35  083B               	movf	___fldiv@a+3,w
 19581  1F36  0249               	subwf	___fldiv@rem+3,w
 19582  1F37  1D03               	skipz
 19583  1F38  2F43               	goto	u6815
 19584  1F39  083A               	movf	___fldiv@a+2,w
 19585  1F3A  0248               	subwf	___fldiv@rem+2,w
 19586  1F3B  1D03               	skipz
 19587  1F3C  2F43               	goto	u6815
 19588  1F3D  0839               	movf	___fldiv@a+1,w
 19589  1F3E  0247               	subwf	___fldiv@rem+1,w
 19590  1F3F  1D03               	skipz
 19591  1F40  2F43               	goto	u6815
 19592  1F41  0838               	movf	___fldiv@a,w
 19593  1F42  0246               	subwf	___fldiv@rem,w
 19594  1F43                     u6815:	
 19595  1F43  1C03               	skipc
 19596  1F44  2F4E               	goto	l5392
 19597  1F45  174F               	bsf	___fldiv@grs+3,6
 19598  1F46  0838               	movf	___fldiv@a,w
 19599  1F47  02C6               	subwf	___fldiv@rem,f
 19600  1F48  0839               	movf	___fldiv@a+1,w
 19601  1F49  3BC7               	subwfb	___fldiv@rem+1,f
 19602  1F4A  083A               	movf	___fldiv@a+2,w
 19603  1F4B  3BC8               	subwfb	___fldiv@rem+2,f
 19604  1F4C  083B               	movf	___fldiv@a+3,w
 19605  1F4D  3BC9               	subwfb	___fldiv@rem+3,f
 19606  1F4E                     l5392:	
 19607  1F4E  3001               	movlw	1
 19608  1F4F  00C0               	movwf	??___fldiv
 19609  1F50  0840               	movf	??___fldiv,w
 19610  1F51  07D1               	addwf	___fldiv@aexp,f
 19611  1F52  2F17               	goto	l5394
 19612  1F53                     l5396:	
 19613  1F53  0849               	movf	___fldiv@rem+3,w
 19614  1F54  0448               	iorwf	___fldiv@rem+2,w
 19615  1F55  0447               	iorwf	___fldiv@rem+1,w
 19616  1F56  0446               	iorwf	___fldiv@rem,w
 19617  1F57  1D03               	btfss	3,2
 19618  1F58  144C               	bsf	___fldiv@grs,0
 19619  1F59                     l5410:	
 19620  1F59  1BBE               	btfsc	___fldiv@b+2,7
 19621  1F5A  2F70               	goto	l5412
 19622  1F5B  3001               	movlw	1
 19623  1F5C                     u6845:	
 19624  1F5C  35BC               	lslf	___fldiv@b,f
 19625  1F5D  0DBD               	rlf	___fldiv@b+1,f
 19626  1F5E  0DBE               	rlf	___fldiv@b+2,f
 19627  1F5F  0DBF               	rlf	___fldiv@b+3,f
 19628  1F60  0B89               	decfsz	9,f
 19629  1F61  2F5C               	goto	u6845
 19630  1F62  1BCF               	btfsc	___fldiv@grs+3,7
 19631  1F63  143C               	bsf	___fldiv@b,0
 19632  1F64  3001               	movlw	1
 19633  1F65                     u6865:	
 19634  1F65  35CC               	lslf	___fldiv@grs,f
 19635  1F66  0DCD               	rlf	___fldiv@grs+1,f
 19636  1F67  0DCE               	rlf	___fldiv@grs+2,f
 19637  1F68  0DCF               	rlf	___fldiv@grs+3,f
 19638  1F69  0B89               	decfsz	9,f
 19639  1F6A  2F65               	goto	u6865
 19640  1F6B  30FF               	movlw	255
 19641  1F6C  07CA               	addwf	___fldiv@new_exp,f
 19642  1F6D  30FF               	movlw	255
 19643  1F6E  3DCB               	addwfc	___fldiv@new_exp+1,f
 19644  1F6F  2F59               	goto	l5410
 19645  1F70                     l5412:	
 19646  1F70  01D1               	clrf	___fldiv@aexp
 19647  1F71  1FCF               	btfss	___fldiv@grs+3,7
 19648  1F72  2F89               	goto	l5422
 19649  1F73  30FF               	movlw	255
 19650  1F74  054C               	andwf	___fldiv@grs,w
 19651  1F75  00C0               	movwf	??___fldiv
 19652  1F76  30FF               	movlw	255
 19653  1F77  054D               	andwf	___fldiv@grs+1,w
 19654  1F78  00C1               	movwf	??___fldiv+1
 19655  1F79  30FF               	movlw	255
 19656  1F7A  054E               	andwf	___fldiv@grs+2,w
 19657  1F7B  00C2               	movwf	??___fldiv+2
 19658  1F7C  307F               	movlw	127
 19659  1F7D  054F               	andwf	___fldiv@grs+3,w
 19660  1F7E  00C3               	movwf	??___fldiv+3
 19661  1F7F  0843               	movf	??___fldiv+3,w
 19662  1F80  0442               	iorwf	??___fldiv+2,w
 19663  1F81  0441               	iorwf	??___fldiv+1,w
 19664  1F82  0440               	iorwf	??___fldiv,w
 19665  1F83  1D03               	btfss	3,2
 19666  1F84  2F87               	goto	l5420
 19667  1F85  1C3C               	btfss	___fldiv@b,0
 19668  1F86  2F89               	goto	l5422
 19669  1F87                     l5420:	
 19670  1F87  01D1               	clrf	___fldiv@aexp
 19671  1F88  0AD1               	incf	___fldiv@aexp,f
 19672  1F89                     l5422:	
 19673  1F89  0851               	movf	___fldiv@aexp,w
 19674  1F8A  1903               	btfsc	3,2
 19675  1F8B  2FB2               	goto	l5432
 19676  1F8C  3001               	movlw	1
 19677  1F8D  07BC               	addwf	___fldiv@b,f
 19678  1F8E  3000               	movlw	0
 19679  1F8F  3DBD               	addwfc	___fldiv@b+1,f
 19680  1F90  3000               	movlw	0
 19681  1F91  3DBE               	addwfc	___fldiv@b+2,f
 19682  1F92  3000               	movlw	0
 19683  1F93  3DBF               	addwfc	___fldiv@b+3,f
 19684  1F94  1C3F               	btfss	___fldiv@b+3,0
 19685  1F95  2FB2               	goto	l5432
 19686  1F96  083C               	movf	___fldiv@b,w
 19687  1F97  00C0               	movwf	??___fldiv
 19688  1F98  083D               	movf	___fldiv@b+1,w
 19689  1F99  00C1               	movwf	??___fldiv+1
 19690  1F9A  083E               	movf	___fldiv@b+2,w
 19691  1F9B  00C2               	movwf	??___fldiv+2
 19692  1F9C  083F               	movf	___fldiv@b+3,w
 19693  1F9D  00C3               	movwf	??___fldiv+3
 19694  1F9E  3001               	movlw	1
 19695  1F9F  00C4               	movwf	??___fldiv+4
 19696  1FA0                     u6935:	
 19697  1FA0  37C3               	asrf	??___fldiv+3,f
 19698  1FA1  0CC2               	rrf	??___fldiv+2,f
 19699  1FA2  0CC1               	rrf	??___fldiv+1,f
 19700  1FA3  0CC0               	rrf	??___fldiv,f
 19701  1FA4  0BC4               	decfsz	??___fldiv+4,f
 19702  1FA5  2FA0               	goto	u6935
 19703  1FA6  0843               	movf	??___fldiv+3,w
 19704  1FA7  00BF               	movwf	___fldiv@b+3
 19705  1FA8  0842               	movf	??___fldiv+2,w
 19706  1FA9  00BE               	movwf	___fldiv@b+2
 19707  1FAA  0841               	movf	??___fldiv+1,w
 19708  1FAB  00BD               	movwf	___fldiv@b+1
 19709  1FAC  0840               	movf	??___fldiv,w
 19710  1FAD  00BC               	movwf	___fldiv@b
 19711  1FAE  3001               	movlw	1
 19712  1FAF  07CA               	addwf	___fldiv@new_exp,f
 19713  1FB0  3000               	movlw	0
 19714  1FB1  3DCB               	addwfc	___fldiv@new_exp+1,f
 19715  1FB2                     l5432:	
 19716  1FB2  084B               	movf	___fldiv@new_exp+1,w
 19717  1FB3  3A80               	xorlw	128
 19718  1FB4  00C0               	movwf	??___fldiv
 19719  1FB5  3080               	movlw	128
 19720  1FB6  0240               	subwf	??___fldiv,w
 19721  1FB7  1D03               	skipz
 19722  1FB8  2FBB               	goto	u6945
 19723  1FB9  30FF               	movlw	255
 19724  1FBA  024A               	subwf	___fldiv@new_exp,w
 19725  1FBB                     u6945:	
 19726  1FBB  1C03               	skipc
 19727  1FBC  2FCA               	goto	l1373
 19728  1FBD  30FF               	movlw	255
 19729  1FBE  0020               	movlb	0	; select bank0
 19730  1FBF  00CA               	movwf	___fldiv@new_exp
 19731  1FC0  3000               	movlw	0
 19732  1FC1  00CB               	movwf	___fldiv@new_exp+1
 19733  1FC2  3000               	movlw	0
 19734  1FC3  00BF               	movwf	___fldiv@b+3
 19735  1FC4  3000               	movlw	0
 19736  1FC5  00BE               	movwf	___fldiv@b+2
 19737  1FC6  3000               	movlw	0
 19738  1FC7  00BD               	movwf	___fldiv@b+1
 19739  1FC8  3000               	movlw	0
 19740  1FC9  00BC               	movwf	___fldiv@b
 19741  1FCA                     l1373:	
 19742  1FCA  0020               	movlb	0	; select bank0
 19743  1FCB  084B               	movf	___fldiv@new_exp+1,w
 19744  1FCC  3A80               	xorlw	128
 19745  1FCD  00C0               	movwf	??___fldiv
 19746  1FCE  3080               	movlw	128
 19747  1FCF  0240               	subwf	??___fldiv,w
 19748  1FD0  1D03               	skipz
 19749  1FD1  2FD4               	goto	u6955
 19750  1FD2  3001               	movlw	1
 19751  1FD3  024A               	subwf	___fldiv@new_exp,w
 19752  1FD4                     u6955:	
 19753  1FD4  1803               	skipnc
 19754  1FD5  2FE2               	goto	l1374
 19755  1FD6  0020               	movlb	0	; select bank0
 19756  1FD7  01CA               	clrf	___fldiv@new_exp
 19757  1FD8  01CB               	clrf	___fldiv@new_exp+1
 19758  1FD9  3000               	movlw	0
 19759  1FDA  00BF               	movwf	___fldiv@b+3
 19760  1FDB  3000               	movlw	0
 19761  1FDC  00BE               	movwf	___fldiv@b+2
 19762  1FDD  3000               	movlw	0
 19763  1FDE  00BD               	movwf	___fldiv@b+1
 19764  1FDF  3000               	movlw	0
 19765  1FE0  00BC               	movwf	___fldiv@b
 19766  1FE1  01C5               	clrf	___fldiv@sign
 19767  1FE2                     l1374:	
 19768  1FE2  0020               	movlb	0	; select bank0
 19769  1FE3  084A               	movf	___fldiv@new_exp,w
 19770  1FE4  00C0               	movwf	??___fldiv
 19771  1FE5  0840               	movf	??___fldiv,w
 19772  1FE6  00D0               	movwf	___fldiv@bexp
 19773  1FE7  1C50               	btfss	___fldiv@bexp,0
 19774  1FE8  2FEB               	goto	l5446
 19775  1FE9  17BE               	bsf	___fldiv@b+2,7
 19776  1FEA  2FEF               	goto	l1376
 19777  1FEB                     l5446:	
 19778  1FEB  307F               	movlw	127
 19779  1FEC  00C0               	movwf	??___fldiv
 19780  1FED  0840               	movf	??___fldiv,w
 19781  1FEE  05BE               	andwf	___fldiv@b+2,f
 19782  1FEF                     l1376:	
 19783  1FEF  3650               	lsrf	___fldiv@bexp,w
 19784  1FF0  00C0               	movwf	??___fldiv
 19785  1FF1  0840               	movf	??___fldiv,w
 19786  1FF2  00BF               	movwf	___fldiv@b+3
 19787  1FF3  0845               	movf	___fldiv@sign,w
 19788  1FF4  00C0               	movwf	??___fldiv
 19789  1FF5  0840               	movf	??___fldiv,w
 19790  1FF6  04BF               	iorwf	___fldiv@b+3,f
 19791  1FF7  083F               	movf	___fldiv@b+3,w
 19792  1FF8  00BB               	movwf	?___fldiv+3
 19793  1FF9  083E               	movf	___fldiv@b+2,w
 19794  1FFA  00BA               	movwf	?___fldiv+2
 19795  1FFB  083D               	movf	___fldiv@b+1,w
 19796  1FFC  00B9               	movwf	?___fldiv+1
 19797  1FFD  083C               	movf	___fldiv@b,w
 19798  1FFE  00B8               	movwf	?___fldiv
 19799  1FFF  0008               	return
 19800  2000                     __end_of___fldiv:	
 19801                           
 19802                           	psect	text59
 19803  05F9                     __ptext59:	
 19804 ;; *************** function ___fladd *****************
 19805 ;; Defined at:
 19806 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19807 ;; Parameters:    Size  Location     Type
 19808 ;;  b               4   29[BANK1 ] unsigned char 
 19809 ;;  a               4   33[BANK1 ] unsigned char 
 19810 ;; Auto vars:     Size  Location     Type
 19811 ;;  grs             1   52[BANK1 ] unsigned char 
 19812 ;;  bexp            1   51[BANK1 ] unsigned char 
 19813 ;;  aexp            1   50[BANK1 ] unsigned char 
 19814 ;;  signs           1   49[BANK1 ] unsigned char 
 19815 ;; Return value:  Size  Location     Type
 19816 ;;                  4   29[BANK1 ] unsigned char 
 19817 ;; Registers used:
 19818 ;;		wreg, status,2, status,0
 19819 ;; Tracked objects:
 19820 ;;		On entry : 0/0
 19821 ;;		On exit  : 0/0
 19822 ;;		Unchanged: 0/0
 19823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19824 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19825 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19826 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19827 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19828 ;;Total ram usage:       24 bytes
 19829 ;; Hardware stack levels used:    1
 19830 ;; Hardware stack levels required when called:    2
 19831 ;; This function calls:
 19832 ;;		Nothing
 19833 ;; This function is called by:
 19834 ;;		_calculateCurrent
 19835 ;;		_avgBuff
 19836 ;;		_writeVoltages
 19837 ;;		_cellBalancing
 19838 ;;		_sprintf
 19839 ;;		___flsub
 19840 ;; This function uses a non-reentrant model
 19841 ;;
 19842                           
 19843                           
 19844                           ;psect for function ___fladd
 19845  05F9                     ___fladd:	
 19846                           
 19847                           ;incstack = 0
 19848                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19849  05F9  0021               	movlb	1	; select bank1
 19850  05FA  0840               	movf	(___fladd@b^(0+128)+3),w
 19851  05FB  3980               	andlw	128
 19852  05FC  00C5               	movwf	??___fladd^(0+128)
 19853  05FD  0845               	movf	??___fladd^(0+128),w
 19854  05FE  00D1               	movwf	___fladd@signs^(0+128)
 19855  05FF  3540               	lslf	(___fladd@b^(0+128)+3),w
 19856  0600  00C5               	movwf	??___fladd^(0+128)
 19857  0601  0845               	movf	??___fladd^(0+128),w
 19858  0602  00D3               	movwf	___fladd@bexp^(0+128)
 19859  0603  1BBF               	btfsc	(___fladd@b^(0+128)+2),7
 19860  0604  1453               	bsf	___fladd@bexp^(0+128),0
 19861  0605  0853               	movf	___fladd@bexp^(0+128),w
 19862  0606  1903               	btfsc	3,2
 19863  0607  2E16               	goto	l6696
 19864  0608  0A53               	incf	___fladd@bexp^(0+128),w
 19865  0609  1D03               	btfss	3,2
 19866  060A  2E13               	goto	l6692
 19867  060B  3000               	movlw	0
 19868  060C  00C0               	movwf	(___fladd@b+3)^(0+128)
 19869  060D  3000               	movlw	0
 19870  060E  00BF               	movwf	(___fladd@b+2)^(0+128)
 19871  060F  3000               	movlw	0
 19872  0610  00BE               	movwf	(___fladd@b+1)^(0+128)
 19873  0611  3000               	movlw	0
 19874  0612  00BD               	movwf	___fladd@b^(0+128)
 19875  0613                     l6692:	
 19876  0613  17BF               	bsf	(___fladd@b^(0+128)+2),7
 19877  0614  01C0               	clrf	(___fladd@b^(0+128)+3)
 19878  0615  2E1E               	goto	l6698
 19879  0616                     l6696:	
 19880  0616  3000               	movlw	0
 19881  0617  00C0               	movwf	(___fladd@b+3)^(0+128)
 19882  0618  3000               	movlw	0
 19883  0619  00BF               	movwf	(___fladd@b+2)^(0+128)
 19884  061A  3000               	movlw	0
 19885  061B  00BE               	movwf	(___fladd@b+1)^(0+128)
 19886  061C  3000               	movlw	0
 19887  061D  00BD               	movwf	___fladd@b^(0+128)
 19888  061E                     l6698:	
 19889  061E  0844               	movf	(___fladd@a^(0+128)+3),w
 19890  061F  3980               	andlw	128
 19891  0620  00C5               	movwf	??___fladd^(0+128)
 19892  0621  0845               	movf	??___fladd^(0+128),w
 19893  0622  00D2               	movwf	___fladd@aexp^(0+128)
 19894  0623  0852               	movf	___fladd@aexp^(0+128),w
 19895  0624  0651               	xorwf	___fladd@signs^(0+128),w
 19896  0625  1D03               	btfss	3,2
 19897  0626  1751               	bsf	___fladd@signs^(0+128),6
 19898  0627  3544               	lslf	(___fladd@a^(0+128)+3),w
 19899  0628  00C5               	movwf	??___fladd^(0+128)
 19900  0629  0845               	movf	??___fladd^(0+128),w
 19901  062A  00D2               	movwf	___fladd@aexp^(0+128)
 19902  062B  1BC3               	btfsc	(___fladd@a^(0+128)+2),7
 19903  062C  1452               	bsf	___fladd@aexp^(0+128),0
 19904  062D  0852               	movf	___fladd@aexp^(0+128),w
 19905  062E  1903               	btfsc	3,2
 19906  062F  2E3E               	goto	l6720
 19907  0630  0A52               	incf	___fladd@aexp^(0+128),w
 19908  0631  1D03               	btfss	3,2
 19909  0632  2E3B               	goto	l6716
 19910  0633  3000               	movlw	0
 19911  0634  00C4               	movwf	(___fladd@a+3)^(0+128)
 19912  0635  3000               	movlw	0
 19913  0636  00C3               	movwf	(___fladd@a+2)^(0+128)
 19914  0637  3000               	movlw	0
 19915  0638  00C2               	movwf	(___fladd@a+1)^(0+128)
 19916  0639  3000               	movlw	0
 19917  063A  00C1               	movwf	___fladd@a^(0+128)
 19918  063B                     l6716:	
 19919  063B  17C3               	bsf	(___fladd@a^(0+128)+2),7
 19920  063C  01C4               	clrf	(___fladd@a^(0+128)+3)
 19921  063D  2E46               	goto	l1296
 19922  063E                     l6720:	
 19923  063E  3000               	movlw	0
 19924  063F  00C4               	movwf	(___fladd@a+3)^(0+128)
 19925  0640  3000               	movlw	0
 19926  0641  00C3               	movwf	(___fladd@a+2)^(0+128)
 19927  0642  3000               	movlw	0
 19928  0643  00C2               	movwf	(___fladd@a+1)^(0+128)
 19929  0644  3000               	movlw	0
 19930  0645  00C1               	movwf	___fladd@a^(0+128)
 19931  0646                     l1296:	
 19932  0646  0853               	movf	___fladd@bexp^(0+128),w
 19933  0647  0252               	subwf	___fladd@aexp^(0+128),w
 19934  0648  1803               	skipnc
 19935  0649  2E8C               	goto	l6756
 19936  064A  1F51               	btfss	___fladd@signs^(0+128),6
 19937  064B  2E50               	goto	l6726
 19938  064C  3080               	movlw	128
 19939  064D  00C5               	movwf	??___fladd^(0+128)
 19940  064E  0845               	movf	??___fladd^(0+128),w
 19941  064F  06D1               	xorwf	___fladd@signs^(0+128),f
 19942  0650                     l6726:	
 19943  0650  0853               	movf	___fladd@bexp^(0+128),w
 19944  0651  00C5               	movwf	??___fladd^(0+128)
 19945  0652  0845               	movf	??___fladd^(0+128),w
 19946  0653  00D4               	movwf	___fladd@grs^(0+128)
 19947  0654  0852               	movf	___fladd@aexp^(0+128),w
 19948  0655  00C5               	movwf	??___fladd^(0+128)
 19949  0656  0845               	movf	??___fladd^(0+128),w
 19950  0657  00D3               	movwf	___fladd@bexp^(0+128)
 19951  0658  0854               	movf	___fladd@grs^(0+128),w
 19952  0659  00C5               	movwf	??___fladd^(0+128)
 19953  065A  0845               	movf	??___fladd^(0+128),w
 19954  065B  00D2               	movwf	___fladd@aexp^(0+128)
 19955  065C  083D               	movf	___fladd@b^(0+128),w
 19956  065D  00C5               	movwf	??___fladd^(0+128)
 19957  065E  0845               	movf	??___fladd^(0+128),w
 19958  065F  00D4               	movwf	___fladd@grs^(0+128)
 19959  0660  0841               	movf	___fladd@a^(0+128),w
 19960  0661  00C5               	movwf	??___fladd^(0+128)
 19961  0662  0845               	movf	??___fladd^(0+128),w
 19962  0663  00BD               	movwf	___fladd@b^(0+128)
 19963  0664  0854               	movf	___fladd@grs^(0+128),w
 19964  0665  00C5               	movwf	??___fladd^(0+128)
 19965  0666  0845               	movf	??___fladd^(0+128),w
 19966  0667  00C1               	movwf	___fladd@a^(0+128)
 19967  0668  083E               	movf	(___fladd@b^(0+128)+1),w
 19968  0669  00C5               	movwf	??___fladd^(0+128)
 19969  066A  0845               	movf	??___fladd^(0+128),w
 19970  066B  00D4               	movwf	___fladd@grs^(0+128)
 19971  066C  0842               	movf	(___fladd@a^(0+128)+1),w
 19972  066D  00C5               	movwf	??___fladd^(0+128)
 19973  066E  0845               	movf	??___fladd^(0+128),w
 19974  066F  00BE               	movwf	(___fladd@b^(0+128)+1)
 19975  0670  0854               	movf	___fladd@grs^(0+128),w
 19976  0671  00C5               	movwf	??___fladd^(0+128)
 19977  0672  0845               	movf	??___fladd^(0+128),w
 19978  0673  00C2               	movwf	(___fladd@a^(0+128)+1)
 19979  0674  083F               	movf	(___fladd@b^(0+128)+2),w
 19980  0675  00C5               	movwf	??___fladd^(0+128)
 19981  0676  0845               	movf	??___fladd^(0+128),w
 19982  0677  00D4               	movwf	___fladd@grs^(0+128)
 19983  0678  0843               	movf	(___fladd@a^(0+128)+2),w
 19984  0679  00C5               	movwf	??___fladd^(0+128)
 19985  067A  0845               	movf	??___fladd^(0+128),w
 19986  067B  00BF               	movwf	(___fladd@b^(0+128)+2)
 19987  067C  0854               	movf	___fladd@grs^(0+128),w
 19988  067D  00C5               	movwf	??___fladd^(0+128)
 19989  067E  0845               	movf	??___fladd^(0+128),w
 19990  067F  00C3               	movwf	(___fladd@a^(0+128)+2)
 19991  0680  0840               	movf	(___fladd@b^(0+128)+3),w
 19992  0681  00C5               	movwf	??___fladd^(0+128)
 19993  0682  0845               	movf	??___fladd^(0+128),w
 19994  0683  00D4               	movwf	___fladd@grs^(0+128)
 19995  0684  0844               	movf	(___fladd@a^(0+128)+3),w
 19996  0685  00C5               	movwf	??___fladd^(0+128)
 19997  0686  0845               	movf	??___fladd^(0+128),w
 19998  0687  00C0               	movwf	(___fladd@b^(0+128)+3)
 19999  0688  0854               	movf	___fladd@grs^(0+128),w
 20000  0689  00C5               	movwf	??___fladd^(0+128)
 20001  068A  0845               	movf	??___fladd^(0+128),w
 20002  068B  00C4               	movwf	(___fladd@a^(0+128)+3)
 20003  068C                     l6756:	
 20004  068C  01D4               	clrf	___fladd@grs^(0+128)
 20005  068D  0853               	movf	___fladd@bexp^(0+128),w
 20006  068E  00C5               	movwf	??___fladd^(0+128)
 20007  068F  01C6               	clrf	(??___fladd^(0+128)+1)
 20008  0690  09C5               	comf	??___fladd^(0+128),f
 20009  0691  09C6               	comf	(??___fladd^(0+128)+1),f
 20010  0692  0AC5               	incf	??___fladd^(0+128),f
 20011  0693  1903               	skipnz
 20012  0694  0AC6               	incf	(??___fladd^(0+128)+1),f
 20013  0695  0852               	movf	___fladd@aexp^(0+128),w
 20014  0696  0745               	addwf	??___fladd^(0+128),w
 20015  0697  00C7               	movwf	(??___fladd+2)^(0+128)
 20016  0698  0846               	movf	(??___fladd+1)^(0+128),w
 20017  0699  1803               	skipnc
 20018  069A  0A46               	incf	(??___fladd+1)^(0+128),w
 20019  069B  00C8               	movwf	((??___fladd+2)^(0+128)+1)
 20020  069C  0848               	movf	(??___fladd+3)^(0+128),w
 20021  069D  3A80               	xorlw	128
 20022  069E  00C9               	movwf	(??___fladd+4)^(0+128)
 20023  069F  3080               	movlw	128
 20024  06A0  0249               	subwf	(??___fladd+4)^(0+128),w
 20025  06A1  1D03               	skipz
 20026  06A2  2EA5               	goto	u8645
 20027  06A3  301A               	movlw	26
 20028  06A4  0247               	subwf	(??___fladd+2)^(0+128),w
 20029  06A5                     u8645:	
 20030  06A5  1C03               	skipc
 20031  06A6  2ED9               	goto	l6774
 20032  06A7  0021               	movlb	1	; select bank1
 20033  06A8  0840               	movf	(___fladd@b+3)^(0+128),w
 20034  06A9  043F               	iorwf	(___fladd@b+2)^(0+128),w
 20035  06AA  043E               	iorwf	(___fladd@b+1)^(0+128),w
 20036  06AB  043D               	iorwf	___fladd@b^(0+128),w
 20037  06AC  1903               	btfsc	3,2
 20038  06AD  2EB0               	goto	u8650
 20039  06AE  3001               	movlw	1
 20040  06AF  2EB1               	goto	u8660
 20041  06B0                     u8650:	
 20042  06B0  3000               	movlw	0
 20043  06B1                     u8660:	
 20044  06B1  00C5               	movwf	??___fladd^(0+128)
 20045  06B2  0845               	movf	??___fladd^(0+128),w
 20046  06B3  00D4               	movwf	___fladd@grs^(0+128)
 20047  06B4  3000               	movlw	0
 20048  06B5  00C0               	movwf	(___fladd@b+3)^(0+128)
 20049  06B6  3000               	movlw	0
 20050  06B7  00BF               	movwf	(___fladd@b+2)^(0+128)
 20051  06B8  3000               	movlw	0
 20052  06B9  00BE               	movwf	(___fladd@b+1)^(0+128)
 20053  06BA  3000               	movlw	0
 20054  06BB  00BD               	movwf	___fladd@b^(0+128)
 20055  06BC  0852               	movf	___fladd@aexp^(0+128),w
 20056  06BD  00C5               	movwf	??___fladd^(0+128)
 20057  06BE  0845               	movf	??___fladd^(0+128),w
 20058  06BF  00D3               	movwf	___fladd@bexp^(0+128)
 20059  06C0  2EDE               	goto	l1300
 20060  06C1                     l1302:	
 20061  06C1  1C54               	btfss	___fladd@grs^(0+128),0
 20062  06C2  2EC9               	goto	l6764
 20063  06C3  3654               	lsrf	___fladd@grs^(0+128),w
 20064  06C4  3801               	iorlw	1
 20065  06C5  00C5               	movwf	??___fladd^(0+128)
 20066  06C6  0845               	movf	??___fladd^(0+128),w
 20067  06C7  00D4               	movwf	___fladd@grs^(0+128)
 20068  06C8  2ECB               	goto	l6766
 20069  06C9                     l6764:	
 20070  06C9  1003               	clrc
 20071  06CA  0CD4               	rrf	___fladd@grs^(0+128),f
 20072  06CB                     l6766:	
 20073  06CB  183D               	btfsc	___fladd@b^(0+128),0
 20074  06CC  17D4               	bsf	___fladd@grs^(0+128),7
 20075  06CD  3001               	movlw	1
 20076  06CE  00C5               	movwf	??___fladd^(0+128)
 20077  06CF                     u8695:	
 20078  06CF  37C0               	asrf	(___fladd@b+3)^(0+128),f
 20079  06D0  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 20080  06D1  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 20081  06D2  0CBD               	rrf	___fladd@b^(0+128),f
 20082  06D3  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 20083  06D4  2ECF               	goto	u8695
 20084  06D5  3001               	movlw	1
 20085  06D6  00C5               	movwf	??___fladd^(0+128)
 20086  06D7  0845               	movf	??___fladd^(0+128),w
 20087  06D8  07D3               	addwf	___fladd@bexp^(0+128),f
 20088  06D9                     l6774:	
 20089  06D9  0021               	movlb	1	; select bank1
 20090  06DA  0852               	movf	___fladd@aexp^(0+128),w
 20091  06DB  0253               	subwf	___fladd@bexp^(0+128),w
 20092  06DC  1C03               	skipc
 20093  06DD  2EC1               	goto	l1302
 20094  06DE                     l1300:	
 20095  06DE  1B51               	btfsc	___fladd@signs^(0+128),6
 20096  06DF  2F11               	goto	l6800
 20097  06E0  0853               	movf	___fladd@bexp^(0+128),w
 20098  06E1  1D03               	btfss	3,2
 20099  06E2  2EEC               	goto	l6782
 20100  06E3  3000               	movlw	0
 20101  06E4  00C0               	movwf	(?___fladd+3)^(0+128)
 20102  06E5  3000               	movlw	0
 20103  06E6  00BF               	movwf	(?___fladd+2)^(0+128)
 20104  06E7  3000               	movlw	0
 20105  06E8  00BE               	movwf	(?___fladd+1)^(0+128)
 20106  06E9  3000               	movlw	0
 20107  06EA  00BD               	movwf	?___fladd^(0+128)
 20108  06EB  0008               	return
 20109  06EC                     l6782:	
 20110  06EC  0841               	movf	___fladd@a^(0+128),w
 20111  06ED  07BD               	addwf	___fladd@b^(0+128),f
 20112  06EE  0842               	movf	(___fladd@a+1)^(0+128),w
 20113  06EF  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 20114  06F0  0843               	movf	(___fladd@a+2)^(0+128),w
 20115  06F1  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 20116  06F2  0844               	movf	(___fladd@a+3)^(0+128),w
 20117  06F3  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 20118  06F4  1C40               	btfss	(___fladd@b+3)^(0+128),0
 20119  06F5  2F9E               	goto	l6834
 20120  06F6  1C54               	btfss	___fladd@grs^(0+128),0
 20121  06F7  2F00               	goto	l6790
 20122  06F8  1003               	clrc
 20123  06F9  0CD4               	rrf	___fladd@grs^(0+128),f
 20124  06FA  0854               	movf	___fladd@grs^(0+128),w
 20125  06FB  3801               	iorlw	1
 20126  06FC  00C5               	movwf	??___fladd^(0+128)
 20127  06FD  0845               	movf	??___fladd^(0+128),w
 20128  06FE  00D4               	movwf	___fladd@grs^(0+128)
 20129  06FF  2F02               	goto	l6792
 20130  0700                     l6790:	
 20131  0700  1003               	clrc
 20132  0701  0CD4               	rrf	___fladd@grs^(0+128),f
 20133  0702                     l6792:	
 20134  0702  183D               	btfsc	___fladd@b^(0+128),0
 20135  0703  17D4               	bsf	___fladd@grs^(0+128),7
 20136  0704  3001               	movlw	1
 20137  0705  00C5               	movwf	??___fladd^(0+128)
 20138  0706                     u8765:	
 20139  0706  37C0               	asrf	(___fladd@b+3)^(0+128),f
 20140  0707  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 20141  0708  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 20142  0709  0CBD               	rrf	___fladd@b^(0+128),f
 20143  070A  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 20144  070B  2F06               	goto	u8765
 20145  070C  3001               	movlw	1
 20146  070D  00C5               	movwf	??___fladd^(0+128)
 20147  070E  0845               	movf	??___fladd^(0+128),w
 20148  070F  07D3               	addwf	___fladd@bexp^(0+128),f
 20149  0710  2F9E               	goto	l6834
 20150  0711                     l6800:	
 20151  0711  0840               	movf	(___fladd@b+3)^(0+128),w
 20152  0712  3A80               	xorlw	128
 20153  0713  00C5               	movwf	??___fladd^(0+128)
 20154  0714  0844               	movf	(___fladd@a+3)^(0+128),w
 20155  0715  3A80               	xorlw	128
 20156  0716  0245               	subwf	??___fladd^(0+128),w
 20157  0717  1D03               	skipz
 20158  0718  2F23               	goto	u8773
 20159  0719  0843               	movf	(___fladd@a+2)^(0+128),w
 20160  071A  023F               	subwf	(___fladd@b+2)^(0+128),w
 20161  071B  1D03               	skipz
 20162  071C  2F23               	goto	u8773
 20163  071D  0842               	movf	(___fladd@a+1)^(0+128),w
 20164  071E  023E               	subwf	(___fladd@b+1)^(0+128),w
 20165  071F  1D03               	skipz
 20166  0720  2F23               	goto	u8773
 20167  0721  0841               	movf	___fladd@a^(0+128),w
 20168  0722  023D               	subwf	___fladd@b^(0+128),w
 20169  0723                     u8773:	
 20170  0723  1803               	skipnc
 20171  0724  2F6E               	goto	l6810
 20172  0725  30FF               	movlw	255
 20173  0726  00C5               	movwf	??___fladd^(0+128)
 20174  0727  30FF               	movlw	255
 20175  0728  00C6               	movwf	(??___fladd^(0+128)+1)
 20176  0729  30FF               	movlw	255
 20177  072A  00C7               	movwf	(??___fladd^(0+128)+2)
 20178  072B  30FF               	movlw	255
 20179  072C  00C8               	movwf	(??___fladd^(0+128)+3)
 20180  072D  0841               	movf	___fladd@a^(0+128),w
 20181  072E  00C9               	movwf	(??___fladd+4)^(0+128)
 20182  072F  0842               	movf	(___fladd@a+1)^(0+128),w
 20183  0730  00CA               	movwf	((??___fladd+4)^(0+128)+1)
 20184  0731  0843               	movf	(___fladd@a+2)^(0+128),w
 20185  0732  00CB               	movwf	((??___fladd+4)^(0+128)+2)
 20186  0733  0844               	movf	(___fladd@a+3)^(0+128),w
 20187  0734  00CC               	movwf	((??___fladd+4)^(0+128)+3)
 20188  0735  093D               	comf	___fladd@b^(0+128),w
 20189  0736  00CD               	movwf	(??___fladd+8)^(0+128)
 20190  0737  093E               	comf	(___fladd@b+1)^(0+128),w
 20191  0738  00CE               	movwf	((??___fladd+8)^(0+128)+1)
 20192  0739  093F               	comf	(___fladd@b+2)^(0+128),w
 20193  073A  00CF               	movwf	((??___fladd+8)^(0+128)+2)
 20194  073B  0940               	comf	(___fladd@b+3)^(0+128),w
 20195  073C  00D0               	movwf	((??___fladd+8)^(0+128)+3)
 20196  073D  0ACD               	incf	(??___fladd+8)^(0+128),f
 20197  073E  1903               	skipnz
 20198  073F  0ACE               	incf	((??___fladd+8)^(0+128)+1),f
 20199  0740  1903               	skipnz
 20200  0741  0ACF               	incf	((??___fladd+8)^(0+128)+2),f
 20201  0742  1903               	skipnz
 20202  0743  0AD0               	incf	((??___fladd+8)^(0+128)+3),f
 20203  0744  084D               	movf	(??___fladd+8)^(0+128),w
 20204  0745  07C9               	addwf	(??___fladd+4)^(0+128),f
 20205  0746  084E               	movf	(??___fladd+9)^(0+128),w
 20206  0747  3DCA               	addwfc	((??___fladd+4)^(0+128)+1),f
 20207  0748  084F               	movf	(??___fladd+10)^(0+128),w
 20208  0749  3DCB               	addwfc	((??___fladd+4)^(0+128)+2),f
 20209  074A  0850               	movf	(??___fladd+11)^(0+128),w
 20210  074B  3DCC               	addwfc	((??___fladd+4)^(0+128)+3),f
 20211  074C  0849               	movf	(??___fladd+4)^(0+128),w
 20212  074D  07C5               	addwf	??___fladd^(0+128),f
 20213  074E  084A               	movf	(??___fladd+5)^(0+128),w
 20214  074F  3DC6               	addwfc	(??___fladd^(0+128)+1),f
 20215  0750  084B               	movf	(??___fladd+6)^(0+128),w
 20216  0751  3DC7               	addwfc	(??___fladd^(0+128)+2),f
 20217  0752  084C               	movf	(??___fladd+7)^(0+128),w
 20218  0753  3DC8               	addwfc	(??___fladd^(0+128)+3),f
 20219  0754  0848               	movf	(??___fladd+3)^(0+128),w
 20220  0755  00C0               	movwf	(___fladd@b+3)^(0+128)
 20221  0756  0847               	movf	(??___fladd+2)^(0+128),w
 20222  0757  00BF               	movwf	(___fladd@b+2)^(0+128)
 20223  0758  0846               	movf	(??___fladd+1)^(0+128),w
 20224  0759  00BE               	movwf	(___fladd@b+1)^(0+128)
 20225  075A  0845               	movf	??___fladd^(0+128),w
 20226  075B  00BD               	movwf	___fladd@b^(0+128)
 20227  075C  3080               	movlw	128
 20228  075D  00C5               	movwf	??___fladd^(0+128)
 20229  075E  0845               	movf	??___fladd^(0+128),w
 20230  075F  06D1               	xorwf	___fladd@signs^(0+128),f
 20231  0760  09D4               	comf	___fladd@grs^(0+128),f
 20232  0761  0AD4               	incf	___fladd@grs^(0+128),f
 20233  0762  0854               	movf	___fladd@grs^(0+128),w
 20234  0763  1D03               	btfss	3,2
 20235  0764  2F76               	goto	l1317
 20236  0765  3001               	movlw	1
 20237  0766  07BD               	addwf	___fladd@b^(0+128),f
 20238  0767  3000               	movlw	0
 20239  0768  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 20240  0769  3000               	movlw	0
 20241  076A  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 20242  076B  3000               	movlw	0
 20243  076C  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 20244  076D  2F76               	goto	l1317
 20245  076E                     l6810:	
 20246  076E  0841               	movf	___fladd@a^(0+128),w
 20247  076F  02BD               	subwf	___fladd@b^(0+128),f
 20248  0770  0842               	movf	(___fladd@a+1)^(0+128),w
 20249  0771  3BBE               	subwfb	(___fladd@b+1)^(0+128),f
 20250  0772  0843               	movf	(___fladd@a+2)^(0+128),w
 20251  0773  3BBF               	subwfb	(___fladd@b+2)^(0+128),f
 20252  0774  0844               	movf	(___fladd@a+3)^(0+128),w
 20253  0775  3BC0               	subwfb	(___fladd@b+3)^(0+128),f
 20254  0776                     l1317:	
 20255  0776  0840               	movf	(___fladd@b+3)^(0+128),w
 20256  0777  043F               	iorwf	(___fladd@b+2)^(0+128),w
 20257  0778  043E               	iorwf	(___fladd@b+1)^(0+128),w
 20258  0779  043D               	iorwf	___fladd@b^(0+128),w
 20259  077A  1D03               	skipz
 20260  077B  2F9C               	goto	l6832
 20261  077C  0854               	movf	___fladd@grs^(0+128),w
 20262  077D  1D03               	btfss	3,2
 20263  077E  2F9C               	goto	l6832
 20264  077F  3000               	movlw	0
 20265  0780  00C0               	movwf	(?___fladd+3)^(0+128)
 20266  0781  3000               	movlw	0
 20267  0782  00BF               	movwf	(?___fladd+2)^(0+128)
 20268  0783  3000               	movlw	0
 20269  0784  00BE               	movwf	(?___fladd+1)^(0+128)
 20270  0785  3000               	movlw	0
 20271  0786  00BD               	movwf	?___fladd^(0+128)
 20272  0787  0008               	return
 20273  0788                     l6818:	
 20274  0788  3001               	movlw	1
 20275  0789                     u8815:	
 20276  0789  35BD               	lslf	___fladd@b^(0+128),f
 20277  078A  0DBE               	rlf	(___fladd@b+1)^(0+128),f
 20278  078B  0DBF               	rlf	(___fladd@b+2)^(0+128),f
 20279  078C  0DC0               	rlf	(___fladd@b+3)^(0+128),f
 20280  078D  0B89               	decfsz	9,f
 20281  078E  2F89               	goto	u8815
 20282  078F  1BD4               	btfsc	___fladd@grs^(0+128),7
 20283  0790  143D               	bsf	___fladd@b^(0+128),0
 20284  0791  1C54               	btfss	___fladd@grs^(0+128),0
 20285  0792  2F95               	goto	l6826
 20286  0793  1403               	setc
 20287  0794  2F96               	goto	L14
 20288  0795                     l6826:	
 20289  0795  1003               	clrc
 20290  0796                     L14:	
 20291  0796  0DD4               	rlf	___fladd@grs^(0+128),f
 20292  0797  0853               	movf	___fladd@bexp^(0+128),w
 20293  0798  1903               	btfsc	3,2
 20294  0799  2F9C               	goto	l6832
 20295  079A  3001               	movlw	1
 20296  079B  02D3               	subwf	___fladd@bexp^(0+128),f
 20297  079C                     l6832:	
 20298  079C  1FBF               	btfss	(___fladd@b+2)^(0+128),7
 20299  079D  2F88               	goto	l6818
 20300  079E                     l6834:	
 20301  079E  01D2               	clrf	___fladd@aexp^(0+128)
 20302  079F  1FD4               	btfss	___fladd@grs^(0+128),7
 20303  07A0  2FA9               	goto	l6844
 20304  07A1  0854               	movf	___fladd@grs^(0+128),w
 20305  07A2  397F               	andlw	127
 20306  07A3  1D03               	btfss	3,2
 20307  07A4  2FA7               	goto	l6842
 20308  07A5  1C3D               	btfss	___fladd@b^(0+128),0
 20309  07A6  2FA9               	goto	l6844
 20310  07A7                     l6842:	
 20311  07A7  01D2               	clrf	___fladd@aexp^(0+128)
 20312  07A8  0AD2               	incf	___fladd@aexp^(0+128),f
 20313  07A9                     l6844:	
 20314  07A9  0852               	movf	___fladd@aexp^(0+128),w
 20315  07AA  1903               	btfsc	3,2
 20316  07AB  2FD5               	goto	l1330
 20317  07AC  3001               	movlw	1
 20318  07AD  07BD               	addwf	___fladd@b^(0+128),f
 20319  07AE  3000               	movlw	0
 20320  07AF  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 20321  07B0  3000               	movlw	0
 20322  07B1  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 20323  07B2  3000               	movlw	0
 20324  07B3  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 20325  07B4  1C40               	btfss	(___fladd@b+3)^(0+128),0
 20326  07B5  2FD5               	goto	l1330
 20327  07B6  083D               	movf	___fladd@b^(0+128),w
 20328  07B7  00C5               	movwf	??___fladd^(0+128)
 20329  07B8  083E               	movf	(___fladd@b+1)^(0+128),w
 20330  07B9  00C6               	movwf	(??___fladd^(0+128)+1)
 20331  07BA  083F               	movf	(___fladd@b+2)^(0+128),w
 20332  07BB  00C7               	movwf	(??___fladd^(0+128)+2)
 20333  07BC  0840               	movf	(___fladd@b+3)^(0+128),w
 20334  07BD  00C8               	movwf	(??___fladd^(0+128)+3)
 20335  07BE  3001               	movlw	1
 20336  07BF  00C9               	movwf	(??___fladd+4)^(0+128)
 20337  07C0                     u8915:	
 20338  07C0  37C8               	asrf	(??___fladd^(0+128)+3),f
 20339  07C1  0CC7               	rrf	(??___fladd^(0+128)+2),f
 20340  07C2  0CC6               	rrf	(??___fladd^(0+128)+1),f
 20341  07C3  0CC5               	rrf	??___fladd^(0+128),f
 20342  07C4  0BC9               	decfsz	(??___fladd+4)^(0+128),f
 20343  07C5  2FC0               	goto	u8915
 20344  07C6  0848               	movf	(??___fladd+3)^(0+128),w
 20345  07C7  00C0               	movwf	(___fladd@b+3)^(0+128)
 20346  07C8  0847               	movf	(??___fladd+2)^(0+128),w
 20347  07C9  00BF               	movwf	(___fladd@b+2)^(0+128)
 20348  07CA  0846               	movf	(??___fladd+1)^(0+128),w
 20349  07CB  00BE               	movwf	(___fladd@b+1)^(0+128)
 20350  07CC  0845               	movf	??___fladd^(0+128),w
 20351  07CD  00BD               	movwf	___fladd@b^(0+128)
 20352  07CE  0A53               	incf	___fladd@bexp^(0+128),w
 20353  07CF  1903               	btfsc	3,2
 20354  07D0  2FD5               	goto	l1330
 20355  07D1  3001               	movlw	1
 20356  07D2  00C5               	movwf	??___fladd^(0+128)
 20357  07D3  0845               	movf	??___fladd^(0+128),w
 20358  07D4  07D3               	addwf	___fladd@bexp^(0+128),f
 20359  07D5                     l1330:	
 20360  07D5  0A53               	incf	___fladd@bexp^(0+128),w
 20361  07D6  1D03               	btfss	3,2
 20362  07D7  0853               	movf	___fladd@bexp^(0+128),w
 20363  07D8  1D03               	btfss	3,2
 20364  07D9  2FE5               	goto	l6862
 20365  07DA  3000               	movlw	0
 20366  07DB  00C0               	movwf	(___fladd@b+3)^(0+128)
 20367  07DC  3000               	movlw	0
 20368  07DD  00BF               	movwf	(___fladd@b+2)^(0+128)
 20369  07DE  3000               	movlw	0
 20370  07DF  00BE               	movwf	(___fladd@b+1)^(0+128)
 20371  07E0  3000               	movlw	0
 20372  07E1  00BD               	movwf	___fladd@b^(0+128)
 20373  07E2  0853               	movf	___fladd@bexp^(0+128),w
 20374  07E3  1903               	btfsc	3,2
 20375  07E4  01D1               	clrf	___fladd@signs^(0+128)
 20376  07E5                     l6862:	
 20377  07E5  1C53               	btfss	___fladd@bexp^(0+128),0
 20378  07E6  2FE9               	goto	l6866
 20379  07E7  17BF               	bsf	(___fladd@b^(0+128)+2),7
 20380  07E8  2FED               	goto	l1338
 20381  07E9                     l6866:	
 20382  07E9  307F               	movlw	127
 20383  07EA  00C5               	movwf	??___fladd^(0+128)
 20384  07EB  0845               	movf	??___fladd^(0+128),w
 20385  07EC  05BF               	andwf	(___fladd@b^(0+128)+2),f
 20386  07ED                     l1338:	
 20387  07ED  3653               	lsrf	___fladd@bexp^(0+128),w
 20388  07EE  00C5               	movwf	??___fladd^(0+128)
 20389  07EF  0845               	movf	??___fladd^(0+128),w
 20390  07F0  00C0               	movwf	(___fladd@b^(0+128)+3)
 20391  07F1  1FD1               	btfss	___fladd@signs^(0+128),7
 20392  07F2  0008               	return
 20393  07F3  17C0               	bsf	(___fladd@b^(0+128)+3),7
 20394  07F4  0008               	return
 20395  07F5                     __end_of___fladd:	
 20396                           
 20397                           	psect	intentry
 20398  0004                     __pintentry:	
 20399 ;; *************** function _ISR *****************
 20400 ;; Defined at:
 20401 ;;		line 180 in file "main.c"
 20402 ;; Parameters:    Size  Location     Type
 20403 ;;		None
 20404 ;; Auto vars:     Size  Location     Type
 20405 ;;		None
 20406 ;; Return value:  Size  Location     Type
 20407 ;;                  1    wreg      void 
 20408 ;; Registers used:
 20409 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20410 ;; Tracked objects:
 20411 ;;		On entry : 0/0
 20412 ;;		On exit  : 0/0
 20413 ;;		Unchanged: 0/0
 20414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20417 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20419 ;;Total ram usage:        2 bytes
 20420 ;; Hardware stack levels used:    1
 20421 ;; Hardware stack levels required when called:    1
 20422 ;; This function calls:
 20423 ;;		_uartDisable
 20424 ;; This function is called by:
 20425 ;;		Interrupt level 1
 20426 ;; This function uses a non-reentrant model
 20427 ;;
 20428                           
 20429  0004                     _ISR:	
 20430                           
 20431                           ;incstack = 0
 20432  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20433                           
 20434                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20435  0005  3180               	pagesel	$
 20436  0006  0020               	movlb	0	; select bank0
 20437  0007  087F               	movf	127,w
 20438  0008  00F1               	movwf	??_ISR+1
 20439                           
 20440                           ;main.c: 182: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 20441  0009  190B               	btfsc	11,2	;volatile
 20442  000A  1E8B               	btfss	11,5	;volatile
 20443  000B  283B               	goto	i1l6144
 20444                           
 20445                           ;main.c: 183: k ++;
 20446  000C  3001               	movlw	1
 20447  000D  0025               	movlb	5	; select bank5
 20448  000E  07A4               	addwf	_k^(0+640),f
 20449  000F  3000               	movlw	0
 20450  0010  3DA5               	addwfc	(_k+1)^(0+640),f
 20451                           
 20452                           ;main.c: 184: if(k >= 3){
 20453  0011  0825               	movf	(_k+1)^(0+640),w
 20454  0012  3A80               	xorlw	128
 20455  0013  00F0               	movwf	??_ISR
 20456  0014  3080               	movlw	128
 20457  0015  0270               	subwf	??_ISR,w
 20458  0016  1D03               	skipz
 20459  0017  281A               	goto	u789_25
 20460  0018  3003               	movlw	3
 20461  0019  0224               	subwf	_k^(0+640),w
 20462  001A                     u789_25:	
 20463  001A  1C03               	skipc
 20464  001B  2827               	goto	i1l6136
 20465                           
 20466                           ;main.c: 185: currentBool = 1;
 20467  001C  3001               	movlw	1
 20468  001D  0025               	movlb	5	; select bank5
 20469  001E  00A0               	movwf	_currentBool^(0+640)
 20470  001F  3000               	movlw	0
 20471  0020  00A1               	movwf	(_currentBool^(0+640)+1)
 20472                           
 20473                           ;main.c: 186: k=0;
 20474  0021  01A4               	clrf	_k^(0+640)
 20475  0022  01A5               	clrf	(_k+1)^(0+640)
 20476                           
 20477                           ;main.c: 187: j++;
 20478  0023  3001               	movlw	1
 20479  0024  07A6               	addwf	_j^(0+640),f
 20480  0025  3000               	movlw	0
 20481  0026  3DA7               	addwfc	(_j+1)^(0+640),f
 20482  0027                     i1l6136:	
 20483                           
 20484                           ;main.c: 188: }
 20485                           ;main.c: 190: if(j>=10000){
 20486  0027  0025               	movlb	5	; select bank5
 20487  0028  0827               	movf	(_j+1)^(0+640),w
 20488  0029  3A80               	xorlw	128
 20489  002A  00F0               	movwf	??_ISR
 20490  002B  30A7               	movlw	167
 20491  002C  0270               	subwf	??_ISR,w
 20492  002D  1D03               	skipz
 20493  002E  2831               	goto	u790_25
 20494  002F  3010               	movlw	16
 20495  0030  0226               	subwf	_j^(0+640),w
 20496  0031                     u790_25:	
 20497  0031  1C03               	skipc
 20498  0032  283A               	goto	i1l6142
 20499                           
 20500                           ;main.c: 191: uartBool = 1;
 20501  0033  3001               	movlw	1
 20502  0034  0025               	movlb	5	; select bank5
 20503  0035  00A2               	movwf	_uartBool^(0+640)
 20504  0036  3000               	movlw	0
 20505  0037  00A3               	movwf	(_uartBool^(0+640)+1)
 20506                           
 20507                           ;main.c: 192: j = 0;
 20508  0038  01A6               	clrf	_j^(0+640)
 20509  0039  01A7               	clrf	(_j+1)^(0+640)
 20510  003A                     i1l6142:	
 20511                           
 20512                           ;main.c: 193: }
 20513                           ;main.c: 194: INTCONbits.TMR0IF = 0;
 20514  003A  110B               	bcf	11,2	;volatile
 20515  003B                     i1l6144:	
 20516                           
 20517                           ;main.c: 195: }
 20518                           ;main.c: 197: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 20519  003B  0021               	movlb	1	; select bank1
 20520  003C  1C91               	btfss	17,1	;volatile
 20521  003D  2848               	goto	i1l6152
 20522  003E  0020               	movlb	0	; select bank0
 20523  003F  1C91               	btfss	17,1	;volatile
 20524  0040  2848               	goto	i1l6152
 20525                           
 20526                           ;main.c: 198: currentBool = 1;
 20527  0041  3001               	movlw	1
 20528  0042  0025               	movlb	5	; select bank5
 20529  0043  00A0               	movwf	_currentBool^(0+640)
 20530  0044  3000               	movlw	0
 20531  0045  00A1               	movwf	(_currentBool^(0+640)+1)
 20532                           
 20533                           ;main.c: 199: PIR1bits.TMR2IF = 0;
 20534  0046  0020               	movlb	0	; select bank0
 20535  0047  1091               	bcf	17,1	;volatile
 20536  0048                     i1l6152:	
 20537                           
 20538                           ;main.c: 200: }
 20539                           ;main.c: 202: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 20540  0048  0020               	movlb	0	; select bank0
 20541  0049  1E11               	btfss	17,4	;volatile
 20542  004A  2868               	goto	i1l6166
 20543  004B  0021               	movlb	1	; select bank1
 20544  004C  1E11               	btfss	17,4	;volatile
 20545  004D  2868               	goto	i1l6166
 20546                           
 20547                           ;main.c: 203: if(str[z] != '\0'){
 20548  004E  087A               	movf	_z,w
 20549  004F  3EAA               	addlw	(low (_str| (0+512)))& (0+255)
 20550  0050  0086               	movwf	6
 20551  0051  3002               	movlw	2	; select bank5/6
 20552  0052  0087               	movwf	7
 20553  0053  0801               	movf	1,w
 20554  0054  1903               	btfsc	3,2
 20555  0055  2863               	goto	i1l6162
 20556                           
 20557                           ;main.c: 204: TXREG = str[z];
 20558  0056  087A               	movf	_z,w
 20559  0057  3EAA               	addlw	(low (_str| (0+512)))& (0+255)
 20560  0058  0086               	movwf	6
 20561  0059  3002               	movlw	2	; select bank5/6
 20562  005A  0087               	movwf	7
 20563  005B  0801               	movf	1,w
 20564  005C  0023               	movlb	3	; select bank3
 20565  005D  009A               	movwf	26	;volatile
 20566                           
 20567                           ;main.c: 205: z++;
 20568  005E  3001               	movlw	1
 20569  005F  07FA               	addwf	_z,f
 20570  0060  3000               	movlw	0
 20571  0061  3DFB               	addwfc	_z+1,f
 20572                           
 20573                           ;main.c: 206: }else{
 20574  0062  2868               	goto	i1l6166
 20575  0063                     i1l6162:	
 20576                           
 20577                           ;main.c: 207: z = 0;
 20578  0063  01FA               	clrf	_z
 20579  0064  01FB               	clrf	_z+1
 20580                           
 20581                           ;main.c: 208: uartDisable();
 20582  0065  319C  2402  3180   	fcall	_uartDisable
 20583  0068                     i1l6166:	
 20584                           
 20585                           ;main.c: 209: }
 20586                           ;main.c: 210: }
 20587                           ;main.c: 212: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 20588  0068  0020               	movlb	0	; select bank0
 20589  0069  1D91               	btfss	17,3	;volatile
 20590  006A  2870               	goto	i1l130
 20591  006B  0021               	movlb	1	; select bank1
 20592  006C  1D91               	btfss	17,3	;volatile
 20593  006D  2870               	goto	i1l130
 20594                           
 20595                           ;main.c: 213: PIR1bits.SSP1IF = 0;
 20596  006E  0020               	movlb	0	; select bank0
 20597  006F  1191               	bcf	17,3	;volatile
 20598  0070                     i1l130:	
 20599  0070  0871               	movf	??_ISR+1,w
 20600  0071  0020               	movlb	0	; select bank0
 20601  0072  00FF               	movwf	127
 20602  0073  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20603  0074  0009               	retfie
 20604  0075                     __end_of_ISR:	
 20605                           
 20606                           	psect	text61
 20607  1C02                     __ptext61:	
 20608 ;; *************** function _uartDisable *****************
 20609 ;; Defined at:
 20610 ;;		line 79 in file "uart.c"
 20611 ;; Parameters:    Size  Location     Type
 20612 ;;		None
 20613 ;; Auto vars:     Size  Location     Type
 20614 ;;		None
 20615 ;; Return value:  Size  Location     Type
 20616 ;;                  1    wreg      void 
 20617 ;; Registers used:
 20618 ;;		None
 20619 ;; Tracked objects:
 20620 ;;		On entry : 0/0
 20621 ;;		On exit  : 0/0
 20622 ;;		Unchanged: 0/0
 20623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20628 ;;Total ram usage:        0 bytes
 20629 ;; Hardware stack levels used:    1
 20630 ;; This function calls:
 20631 ;;		Nothing
 20632 ;; This function is called by:
 20633 ;;		_ISR
 20634 ;; This function uses a non-reentrant model
 20635 ;;
 20636                           
 20637                           
 20638                           ;psect for function _uartDisable
 20639  1C02                     _uartDisable:	
 20640                           
 20641                           ;uart.c: 80: PIE1bits.TXIE = 0;
 20642                           
 20643                           ;incstack = 0
 20644                           ; Regs used in _uartDisable: []
 20645  1C02  0021               	movlb	1	; select bank1
 20646  1C03  1211               	bcf	17,4	;volatile
 20647  1C04  0008               	return
 20648  1C05                     __end_of_uartDisable:	
 20649  007E                     btemp	set	126	;btemp
 20650  007E                     int$flags	set	126
 20651  007E                     wtemp0	set	126


Data Sizes:
    Strings     150
    Constant    2003
    Data        13
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     77      80
    BANK3            80     80      80
    BANK4            80     74      80
    BANK5            80      0      73
    BANK6            80      0      24
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    sumVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@totalVoltage	PTR float  size(2) Largest target is 4
		 -> startUp@totalVoltage(COMMON[4]), main@totalVoltage(BANK4[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[20]), STR_5(CODE[15]), 
		 -> STR_4(CODE[19]), STR_3(CODE[38]), STR_2(CODE[23]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> str(BANK5[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdaux@data(COMMON[8]), LTC6804_rdcv@cell_data(BANK0[8]), sumVoltages@data(BANK1[8]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdstat_reg@cmd(BANK0[4]), 

    spi_write_array@data	PTR unsigned char  size(1) Largest target is 12
		 -> LTC6804_wrcfg@cmd(BANK0[12]), LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), LTC6804_adstat@cmd(BANK0[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 4096
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), LTC6804_rdaux@data(COMMON[8]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK5[2]), ADCV(BANK5[2]), 
		 -> RAM(DATA[4096]), ADSTAT(BANK5[2]), LTC6804_rdstat_reg@cmd(BANK0[4]), configReg(BANK4[6]), 

    LTC6804_wrcfg@config	PTR unsigned char [6] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), configReg(BANK4[6]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR unsigned int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK2[24]), 

    LTC6804_rdstat_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> sumVoltages@data(BANK1[8]), 

    cellBalancing@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    avgBuff@buff	PTR float  size(1) Largest target is 80
		 -> main@currentBuff(BANK3[80]), 

    getTemps@temperatures	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    _LTC6804_rdstat_reg->_pec15_calc
    _LTC6804_adstat->_pec15_calc
    _LTC6804_rdcv->_pec15_calc
    _LTC6804_rdcv_reg->_pec15_calc
    _spi_write_read->___bmul
    _LTC6804_adcv->_pec15_calc
    ___flmul->___awdiv
    _LTC6804_wrcfg->_pec15_calc
    _spi_write_array->_spi_write
    _pec15_calc->___wmul
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sumVoltages
    _sprintf->_fround
    _sprintf->_scale
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    _sumVoltages->___flmul
    _LTC6804_rdstat_reg->_pec15_calc
    _LTC6804_adstat->_pec15_calc
    _setup->_LTC6804_initialize
    _LTC6804_initialize->_LTC6804_wrcfg
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    ___fltol->_scale
    ___flmul->___fldiv
    _LTC6804_wrcfg->_pec15_calc
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _writeValuesToUart->_writeTemps
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___flge
    ___flsub->___fladd
    _measureVoltages->___flge
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    ___fltol->_scale
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fladd
    _cellBalancing->___flge
    ___flge->___fladd
    _avgBuff->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               163   163      0  332440
                                             72 BANK2      5     5      0
                                              0 BANK3     80    80      0
                                              0 BANK4     74    74      0
                             ___flge
                            _avgBuff
                      _cellBalancing
                         _getCurrent
                           _getTemps
                    _measureVoltages
                              _setup
                        _sumVoltages
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   18     1     17  234827
                                             54 BANK2     18     1     17
                        _clearScreen
                       _writeCurrent
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                       21    15      6   64308
                                             33 BANK2     21    15      6
                            ___fladd
                             ___flge
                            ___flneg
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                           8     4      4   56713
                                             79 BANK1      1     1      0
                                             33 BANK2      7     3      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         4     0      4   56426
                                             33 BANK2      4     0      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   56466
                                             33 BANK2      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (3) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             48    38     10   56305
                                             69 BANK1     10     0     10
                                              0 BANK2     33    33      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   11700
                                             76 BANK0      4     0      4
                                              0 BANK1     21    21      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4   11421
                                             76 BANK0      4     0      4
                                              0 BANK1     29    29      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4267
                                             53 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     245
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _sumVoltages                                         20    16      4   14814
                                             76 BANK0      4     0      4
                                              0 BANK1     16    16      0
                     _LTC6804_adstat
                 _LTC6804_rdstat_reg
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _LTC6804_rdstat_reg                                  13    11      2    4724
                                             15 BANK0     13    11      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (2) _LTC6804_adstat                                       7     7      0    1875
                                             15 BANK0      7     7      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    5938
                 _LTC6804_initialize
                           _adcSetup
                           _i2cSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_initialize                                   2     0      2    5938
                                             41 BANK0      2     0      2
                      _LTC6804_wrcfg
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                              7     4      3     564
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _measureVoltages                                     36    32      4   26856
                                             69 BANK1      8     4      4
                                              0 BANK2     28    28      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _LTC6804_rdcv                                        29    27      2   11585
                                             28 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv_reg                                    13    11      2    5006
                                             15 BANK0     13    11      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (3) _spi_write_read                                       8     5      3    2164
                                              6 COMMON     3     0      3
                                              0 BANK0      5     5      0
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (4) _spi_read                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     684
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _LTC6804_adcv                                         7     7      0    1875
                                             15 BANK0      7     7      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (1) _getTemps                                            11     9      2   11611
                                             40 BANK1     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                        8     6      2   10808
                                             32 BANK1      8     6      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     787
                                             21 BANK1     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCurrent                                           8     4      4   14188
                                             65 BANK1      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (2) _calculateCurrent                                    12     8      4   12971
                                             53 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    6773
                                             50 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _adcRead                                             16    14      2     133
                                              2 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _cellBalancing                                       14    12      2   13201
                                             69 BANK1      4     2      2
                                              0 BANK2     10    10      0
                      _LTC6804_wrcfg
                            ___fladd
                             ___flge
                       _setDischarge
 ---------------------------------------------------------------------------------
 (2) _setDischarge                                         4     1      3     438
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2786
                                             53 BANK1     16     8      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _LTC6804_wrcfg                                       26    24      2    5343
                                             15 BANK0     26    24      2
                             ___wmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (3) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _spi_write_array                                      4     3      1     417
                                              5 COMMON     4     3      1
                          _spi_write
 ---------------------------------------------------------------------------------
 (4) _spi_write                                            3     3      0      23
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _pec15_calc                                          17    15      2    1245
                                              8 COMMON     2     0      2
                                              0 BANK0     15    15      0
                             ___bmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2626
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _avgBuff                                             13     9      4    7383
                                             53 BANK1     13     9      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                              4 COMMON     4     4      0
                                             14 BANK0     10     6      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1987
                                             24 BANK0     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    4022
                                             29 BANK1     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                        _uartDisable
 ---------------------------------------------------------------------------------
 (8) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fladd (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   _avgBuff
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _cellBalancing
     _LTC6804_wrcfg
       ___wmul
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _setDischarge
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
   _measureVoltages
     _LTC6804_adcv
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdcv
       _LTC6804_rdcv_reg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
           ___wmul (ARG)
         _spi_write_read
           ___bmul (ARG)
           _spi_read (ARG)
           _spi_write (ARG)
         _wakeup_idle
       ___bmul
       ___wmul
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _setup
     _LTC6804_initialize
       _LTC6804_wrcfg
         ___wmul
         _pec15_calc
           ___bmul (ARG)
           ___wmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _set_adc
     _adcSetup
     _i2cSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _sumVoltages
     _LTC6804_adstat
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdstat_reg
       ___bmul
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_read
         ___bmul (ARG)
         _spi_read (ARG)
         _spi_write (ARG)
       _wakeup_idle
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeVoltages
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flneg
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable

 _ISR (ROOT)
   _uartDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4D      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     50      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     4A      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1FD      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      49      16       91.3%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      18      18       30.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1FD      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 12 12:36:35 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003C  
                         ___fldiv@aexp 0051                           ___fldiv@bexp 0050  
                                    _j 02A6                                      _k 02A4  
                                    _n 02A8                                      _z 007A  
                                    pc 0002                           ___fldiv@sign 0045  
                       ___bmul@product 0074                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0214                                     l90 156D  
                                   l93 15A1                           ___awdiv@sign 0025  
                                   _t0 3159                         ?_LTC6804_wrcfg 002F  
                      ?_LTC6804_adstat 0070                    ___wmul@multiplicand 0074  
              sumVoltages@totalVoltage 00AE                        writeTemps@temps 0145  
                  __Umul8_16@word_mpld 0022               writeValuesToUart@current 0161  
                                  l250 1462                                    l243 13BC  
                                  l262 2038                                    l238 130D  
                                  l247 13E1                                    l192 2F6C  
                                  l280 2CF7                                    l256 2C04  
                                  l264 206D                                    l612 271F  
                                  l188 21E2                                    l276 2CE2  
                                  l268 208A                                    l655 1DC2  
                                  l911 0F0F                                    l648 1D02  
                                  l851 096C                                    l836 08D3  
                                  l790 2AF3                                    l784 2AE8  
                                  l859 0AB8                                    _PR2 001B  
                         __CFG_CPD$OFF 0000                                    _ISR 0004  
              __end_of_measureVoltages 1CE6                                    _cmd 016D  
                                  _str 02AA                      SSD1306_Test@F7528 02E7  
                          _sumVoltages 2E10                           ___awmod@sign 0078  
               LTC6804_rdstat_reg@data 0030                           __CFG_BORV$LO 0000  
                                  wreg 0009                           __CFG_FOSC$HS 0000  
                         ___flmul@aexp 0060                           ___flmul@bexp 0065  
                         ___flmul@sign 005F                           ___flmul@temp 006A  
                         ___flmul@prod 0066                                   S8492 2800  
                         __CFG_LVP$OFF 0000                                   ?_ISR 0070  
                         ___fltol@exp1 00BF                                   l1017 2B78  
                                 l1300 06DE                                   l1302 06C1  
                                 l1161 0820                                   l1330 07D5  
                                 l1146 25B3                                   l1411 239F  
                                 l1404 05EC                                   l1180 2159  
                                 l1156 2637                                   l1317 0776  
                                 l1430 2BD9                                   l1352 1EBA  
                                 l1424 23E9                                   l1425 23F3  
                                 l1417 23D5                                   l1338 07ED  
                                 l1188 24F9                                   l1373 1FCA  
                                 l1374 1FE2                                   l1198 2572  
                                 l1296 0646                                   l1376 1FEF  
                                 l7000 05D9                                   l5410 1F59  
                                 l5330 1E8B                                   l5420 1F87  
                                 l5412 1F70                                   l7020 2C45  
                                 l5422 1F89                                   l5350 1EAF  
                                 l5334 1E8E                                   l4518 2B5D  
                                 l5432 1FB2                                   l5360 1ED5  
                                 l5336 1E96                                   l7200 262E  
                                 l5354 1EB2                                   l4714 2B18  
                                 l7026 2C46                                   l7018 2C31  
                                 l7202 263A                                   l7130 2534  
                                 l7122 251A                                   l4484 2DC8  
                                 l7140 254E                                   l7108 24E1  
                                 l5446 1FEB                                   l5366 1EE9  
                                 l4486 2E0B                                   l7230 0863  
                                 l8110 218F                                   l4718 2B1E  
                                 l8030 1E6F                                   l7310 2F4E  
                                 l7150 2575                                   l7142 255C  
                                 l7046 17C6                                   l7038 1716  
                                 l7062 0198                                   l5392 1F4E  
                                 l7208 2B72                                   l5800 26AA  
                                 l8008 1DCF                                   l7320 2D42  
                                 l7160 2599                                   l7080 0328  
                                 l7072 023D                                   l7400 08E4  
                                 l5386 1F35                                   l5394 1F17  
                                 l7234 088C                                   l7226 083A  
                                 l5810 26C5                                   l8130 2788  
                                 l8026 1E65                                   l8018 1E24  
                                 l7306 2F43                                   l7322 2D50  
                                 l7330 2D73                                   l6610 2EC8  
                                 l5396 1F53                                   l5812 26CC  
                                 l5804 26B4                                   l8132 2730  
                                 l7260 2107                                   l8108 21DC  
           __end_of_LTC6804_rdstat_reg 2EB2                                   l7148 2569  
                                 l6620 2ED0                                   l6604 2EBD  
                                 l7068 0217                                   l7404 08F1  
                                 l7412 0922                                   l8212 153C  
                                 l8204 1529                                   l5830 26FF  
                                 l5822 26E7                                   l5806 26BB  
                                 l8142 2791                                   l8134 278E  
                                 l7326 2D68                                   l7182 25F8  
                                 l7174 25D8                                   l6622 2EDC  
                                 l7086 03A7                                   l7502 0B91  
                                 l8206 152C                                   l6800 0711  
                                 l6720 063E                                   l7352 23AE  
                                 l5824 26EE                                   l5816 26D6  
                                 l8144 27F7                                   l8064 1C1F  
                                 l7192 2613                                   l6632 2EF7  
                                 l7512 0C02                                   l7440 099E  
                                 l7432 096E                                   l7424 0935  
                                 l8224 15B1                                   l8216 1568  
                                 l6810 076E                                   l7346 2397  
                                 l5834 2709                                   l5818 26DD  
                                 l5770 2655                                   l7194 2621  
                                 l7098 2B14                                   l7602 0E65  
                                 l7522 0C4C                                   l7506 0BFC  
                                 l7450 09E2                                   l7610 0E7A  
                                 l7434 098E                                   l7426 0967  
                                 l8218 157F                                   _ADAX 02DE  
                                 l6716 063B                                   l7380 240E  
                                 l7364 23DA                                   l7356 23B2  
                                 l8156 21F8                                   l5828 26F8  
                                 l5780 2670                                   l5764 2644  
                                 l7284 2150                                   l7276 2135  
                                 l6636 2EFF                                   l6628 2EEE  
                                 l6660 2D93                                   l6652 2D8D  
                                 l7700 0FB3                                   l7620 0E9F  
                                 l7540 0C72                                   l8180 1489  
                                 _ADCV 02E0                                   l6726 0650  
                                 l7366 23E3                                   l7358 23C2  
                                 l8158 2234                                   l5782 2677  
                                 l5774 265F                                   l5838 2710  
                                 l7286 215C                                   l7278 2143  
                                 l8078 1CE0                                   l6662 2D9F  
                                 l6670 2DB4                                   l7542 0C8F  
                                 l7526 0C5A                                   l7518 0C2F  
                                 l7702 08A5                                   l6832 079C  
                                 l5792 2692                                   l5776 2666  
                                 l5768 264E                                   l6904 040A  
                                 l7296 2F15                                   l6648 2D86  
                                 l7632 0EB3                                   l7608 0E75  
                                 l7480 0AFC                                   l7704 0FFA  
                                 l7392 08CE                                   l6842 07A7  
                                 l6826 0795                                   l6818 0788  
                                 l6834 079E                                   l5794 2699  
                                 l5786 2681                                   l6586 2BD3  
                                 l6906 040C                                   l7298 2F23  
                                 l6674 2DBC                                   l6666 2DAB  
                                 l7650 0F22                                   l7642 0EF7  
                                 l7626 0EAD                                   l7474 0A96  
                                 l7466 0A2E                                   l6844 07A9  
                                 l6764 06C9                                   l6756 068C  
                                 l6692 0613                                   l5788 2688  
                                 l6916 0422                                   l6908 0414  
                                 l7572 0D34                                   l7564 0CC3  
                                 l7548 0CA0                                   l7492 0B53  
                      spi_write_read@i 0022                                   l6862 07E5  
                                 l6790 0700                                   l6782 06EC  
                                 l6766 06CB                                   l6774 06D9  
                                 l7742 247B                                   l7734 2444  
                                 l5798 26A3                                   l7662 0F55  
                                 l7638 0EE0                                   l7566 0D23  
                                 l7398 08DA                                   l6792 0702  
                                 l6696 0616                                   l7728 243B  
                                 l7920 2E79                                   l7912 2E67  
                                 l7672 0F70                                   l7680 0F85  
                                 l7664 0F58                                   l7656 0F36  
                                 l7488 0B34                                   l6866 07E9  
                                 l6698 061E                                   l7754 24B8  
                                 l8490 2715                                   l6970 056B  
                                 l6890 03F1                                   l7682 0F89  
                                 l7658 0F39                                   l7586 0D6B  
                                 l7578 0D4E                                   l7842 2CC4  
                                 l6980 0584                                   l7780 2FBE  
                                 l7844 2CEB                                   l6990 05AD  
                                 l6886 03E7                                   l7774 2FB8  
                                 l7918 2E71                                   l7854 1354  
                                 l6968 0554                                   l6888 03E9  
                                 l7768 2FB2                                   l7688 0F9D  
                                 l7864 13C5                      spi_write@readData 0073  
                                 l6994 05C2                                   l6978 0582  
                                 l7786 2FC7                                   l7882 2076  
                                 l7858 138E                                   l7972 1D0F  
                                 l7990 1DA5                                   l7982 1D64  
                                 l7994 1DAF                                   l7998 1DB4  
                                 STR_1 3136                                   STR_2 30E9  
                                 STR_3 30C3                                   STR_4 3114  
                                 STR_5 3127                                   STR_6 3100  
                                 STR_7 3150                                   STR_8 3145  
                                 u5105 2DDE                                   u6605 209E  
                                 u6615 20A9                                   u9105 0543  
                                 u6625 20C2                                   u9115 0557  
                                 u6635 20DE                                   u6805 1F2F  
                                 u9205 059B                                   u6815 1F43  
                                 u9215 05B6                                   u9135 0560  
                                 u8415 2EDD                                   u8345 2BDA  
                                 u9225 05CC                                   u9065 0498  
                                 u8425 2EE7                                   u9075 04C7  
                                 u8435 2EEF                                   u8515 2DA5  
                                 u6845 1F5C                                   u9085 051D  
                                 u8525 2DAC                                   u6935 1FA0  
                                 u6775 1F1F                                   u9095 0534  
                                 u6945 1FBB                                   u6865 1F65  
                                 u6785 1F26                                   u9505 25D9  
                                 u8650 06B0                                   u6955 1FD4  
                                 u9515 25ED                                   u9435 254F  
                                 u8395 2ED3                                   u8660 06B1  
                                 u8645 06A5                                   u9525 25F9  
                                 u8815 0789                                   u9375 251B  
                                 u8495 2D96                                   u9625 2B79  
                                 u9465 256A                                   u9385 252B  
                                 u8915 07C0                                   u9635 2B7E  
                                 u9395 2535                                   u8773 0723  
                                 u8765 0706                                   u9725 2110  
                                 u9565 2614                                   u8695 06CF  
                                 u9825 2F18                                   u9755 2136  
                                 u9915 2D5E                                   u9595 262F  
                                 u9845 2F24                                   u9925 2D69  
                                 u9855 2F38                                   u9785 2151  
                                 u9865 2F44                                   u9975 23BB  
                                 u9895 2D45                                   u9995 23CF  
                                 _WPUD 020F                            main@current 0262  
                                 _Beta 315D                           __CFG_WRT$OFF 0000  
               __end_of_spi_write_read 2C5D                          __CFG_FCMEN$ON 0000  
                                 _main 1466                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                         spi_read@data 0073                          __CFG_BOREN$ON 0000  
                                 start 0075                          __CFG_IESO$OFF 0000  
                      ___fldiv@new_exp 004A                           _sprintf$2180 0126  
                  cellBalancing@i_1309 0127                         ??_LTC6804_adcv 002F  
                    ___bmul@multiplier 0075                          __CFG_MCLRE$ON 0000  
                       ??_LTC6804_rdcv 003E                         writeVoltages@k 0154  
                                ??_ISR 0070                      ?_LTC6804_rdcv_reg 002F  
                        __CFG_PLLEN$ON 0000                       spi_write_array@i 0078  
                        ___fltol@sign1 00BE        writeValuesToUart@temperatureArr 015C  
           __size_of_writeValuesToUart 0033                        __end_of___fladd 07F5  
                                ?_main 0070                        __end_of___fldiv 2000  
                      __end_of_adcRead 2FAB                        __end_of___awdiv 2F04  
                      __end_of___flneg 2AE4                          __CFG_WDTE$OFF 0000  
                      __end_of___awmod 2DC1                     ??_LTC6804_rdcv_reg 0031  
                      __end_of___flmul 05F9                        __end_of___flsub 2BC8  
                      __end_of___fltol 216B                        __end_of___lldiv 2F57  
                                u10015 23DD                                  u10205 0AC2  
                                u10055 23FB                                  u11015 1D9F  
                                u10215 0B06                                  u11105 1C41  
                                u11115 1C89                                  u11205 2772  
                                u11125 1CA4                                  u10245 0B32  
                                u11215 273C                                  u10335 0C7B  
                                u11080 1C18                                  u11225 27A4  
                                u11065 1E5F                                  u11145 1CCB  
                                u10345 0CAA                                  u11305 1550  
                                u11235 279D                                  u10275 0C25  
                                u11315 1566                        ___awdiv@divisor 0020  
                                u11245 2208                                  u11165 21CE  
                                u11325 157D                                  u11255 2202  
                                u11175 2199                                  u10535 0F2E  
                                u10375 0D3D                                  u11185 2743  
                      __end_of___llmod 2D7C                                  u10545 0F48  
                                u10465 0ED6                                  u10385 0D49  
                                u11345 15AD                                  u11275 14DE  
                                u10645 241C                                  u10485 0EEF  
                                u11285 1500                                  u10495 0F07  
                                u10815 1358                                  u11295 153A  
                                _T2CON 001C                                  u10745 2F85  
                                u10825 1370                                  u11707 2E14  
                                u11717 2F67                                  u10765 2CD4  
                                u10925 2046                                  u10845 13A1  
                                u11727 2AD5                                  u10865 1317  
                                u10785 131D                                  u10795 1335  
                                u10885 13E8                                  u10895 1400  
                                u11697 147F                                  i1l130 0070  
                      ___awdiv@counter 0024                                  _TXREG 019A  
            LTC6804_wrcfg@current_byte 0046                        __end_of_avgBuff 2271  
              __end_of_spi_write_array 2B70                     writeVoltages@volts 0153  
                      __end_of_dpowers 30C2                                  _scale 00A8  
                      __end_of_isdigit 2B16                                  _setup 2C08  
                                main@i 0268                        __end_of_set_adc 20EC  
                  clearScreen@numLines 0141                        ?_spi_write_read 0076  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 1000                           main@voltages 0220  
          LTC6804_rdcv@current_ic_1355 0055                  __size_of_writeCurrent 0020  
                         __end_of_Beta 315F                   __size_of_clearScreen 003C  
                      __initialization 0077                           __end_of_main 15F7  
                      ??_LTC6804_wrcfg 0031                  LTC6804_adstat@cmd_pec 0034  
                     __end_of_i2cSetup 2B49                     writeTemps@numTemps 0143  
                       __CFG_LPBOR$OFF 0000                       __end_of_OledFont 1300  
                               ??_main 0168                           adcRead@total 002C  
                    ?_calculateCurrent 00D5                         set_adc@md_bits 0078  
                     ?_measureVoltages 00E5                   __size_of__tdiv_to_l_ 00B6  
                 cellBalancing@boolean 0120                     ??_calculateCurrent 007A  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 3163       writeValuesToUart@temperatureHigh 015F  
                  pec15_calc@remainder 002D                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                     ___llmod@dividend 002A                                 ?_scale 006C  
                               _ADRESH 009C                                 _ADRESL 009B  
                               _ADSTAT 02DC                       ___awdiv@dividend 0022  
writeValuesToUart@temperatureArrLength 015D                                 ?_setup 0070  
                     __end_of_adcSetup 2BA9                           _writeCurrent 2BE8  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELD 018F                                 i1l6142 003A  
                               i1l6152 0048                                 i1l6136 0027  
                               i1l6144 003B                                 i1l6162 0063  
                               i1l6166 0068                                 u790_25 0031  
                               _SPBRGH 019C                                 _SPBRGL 019B  
                               u789_25 001A                LTC6804_rdaux@BYT_IN_REG 3163  
                               _SSPADD 0212                                 _SSPBUF 0211  
                     __end_of___xxtofl 2417                    writeVoltages@length 0141  
                       __CFG_PWRTE$OFF 0000                           ?_uartDisable 0070  
                     __end_of_getTemps 21EA                       __end_of__powers_ 3034  
     __end_ofLTC6804_rdaux_reg@REG_LEN 3162                                 ___flge 0805  
                               ___bmul 2B16                           ?_timer0Setup 0070  
                   _writeVoltages$2176 014B                              ??___fladd 00C5  
                               ___wmul 2B70                              ??___fldiv 0040  
                            ??_adcRead 0020                              ??___awdiv 0079  
                         ?_timer2Setup 0070                              ??___flneg 0076  
                       __CFG_STVREN$ON 0000                              ??___awmod 0076  
                            ??___flmul 005A                              ??___flsub 007A  
                            ??___fltol 00B9                              ??___lldiv 0020  
                        main@numFaults 025C                              ??___llmod 002E  
                               _fround 15F7                       ___awdiv@quotient 0026  
                      ___awmod@divisor 0072                              ??_avgBuff 00D9  
                      ___awmod@counter 0077                           ?_wakeup_idle 0070  
                     getTemps@numTemps 00C8                              ??_isdigit 0072  
                   __size_of__Umul8_16 0020                       __end_of_spiSetup 2B5B  
                            ??_set_adc 0075                       ?_spi_write_array 0075  
                     __end_of_spi_read 2AFB                   __end_of_LTC6804_adcv 2C8E  
       __end_ofLTC6804_rdcv@BYT_IN_REG 3168                   __end_of_LTC6804_rdcv 1E71  
                            ??_sprintf 0120                  LTC6804_wrcfg@total_ic 0043  
                           ___flge@ff1 00D5                             ___flge@ff2 00D9  
                         ___xxtofl@arg 0034                           ___xxtofl@exp 0033  
                         ___xxtofl@val 002E                __end_of__initialization 00A4  
                        spi_write@data 0074                             ___flneg@f1 0072  
                calculateTemp@adcValue 00C0                             ___fltol@f1 00B5  
              LTC6804_rdaux@NUM_RX_BYT 3164                    ___bmul@multiplicand 0072  
      __end_ofLTC6804_rdcv@CELL_IN_REG 3167                      ltc6804@crc15Table 1800  
                     ??_LTC6804_adstat 002F                             _crc15Table 1A00  
                       __pcstackCOMMON 0070                           __pidataBANK4 2AC5  
                         __pidataBANK5 2ACB                          __end_of_scale 03CD  
                        __end_of_setup 2C2E                     _LTC6804_initialize 2B27  
               __size_of_writeVoltages 0161                         cellBalancing@i 0125  
                           __end_of_t0 315D                          ?_setDischarge 0072  
                           __div_to_l_ 257E                           ?_sumVoltages 006C  
                  ?_LTC6804_initialize 0049                          adcRead@ansLow 002A  
                      __div_to_l_@exp1 002A                        __div_to_l_@cntr 0029  
                              ??_scale 00A0                        __div_to_l_@quot 0025  
                         sprintf@width 0137                                ??_setup 007A  
                           __pbssBANK2 016D                             __pbssBANK5 02A0  
                           __pbssBANK6 0320                              ?_i2cSetup 0070  
       __end_ofLTC6804_rdcv@NUM_RX_BYT 3169               LTC6804_rdaux@GPIO_IN_REG 3162  
                      __CFG_VCAPEN$OFF 0000              __end_ofltc6804@crc15Table 1A00  
                           _pec15_calc 2DC1                          __div_to_l_@f1 0072  
                        __div_to_l_@f2 0076                    writeCurrent@current 0141  
                 ??_LTC6804_initialize 007A                      __end_of__Umul8_16 2BE8  
                   spi_write_array@len 0077                             __pmaintext 1466  
              cellBalancing@minVoltage 0121                     _LTC6804_rdstat_reg 2E60  
                              ?___flge 00D5                                ?___bmul 0072  
               __size_of_cellBalancing 00E0                 LTC6804_rdcv@cell_codes 003D  
                              ?___wmul 0072                             __pintentry 0004  
             LTC6804_rdcv@data_counter 0058                             _getCurrent 2CFB  
                              _CCP2CON 029A      writeValuesToUart@voltageArrLength 0156  
                              ?_fround 006C                              ?_adcSetup 0070  
                     LTC6804_wrcfg@cmd 0036                         ??_setDischarge 0075  
             LTC6804_rdaux_reg@REG_LEN 3161                    ?_LTC6804_rdstat_reg 002F  
                   __size_of_uartSetup 000D                 __size_of_calculateTemp 0087  
                            ?___xxtofl 002E                  cellBalancing@voltages 0129  
               measureVoltages@ltcData 0120                     __size_of_spi_write 000B  
                     ??_spi_write_read 0020                                _SSP1BUF 0211  
                            ?_getTemps 00C8                                _SSPCON1 0215  
                              _SSPSTAT 0214              __size_of_LTC6804_rdcv_reg 0055  
                           ??_i2cSetup 0072                          _writeVoltages 1305  
                 spi_write_read@i_1437 0023                   writeVoltages@maxCell 014F  
                 ??_LTC6804_rdstat_reg 0031                   writeVoltages@minCell 0151  
                    __end_of__npowers_ 3068                 LTC6804_wrcfg@cmd_index 0048  
                           _scale$2179 00B0                              ?_spiSetup 0070  
                 __size_of_uartDisable 0003                        __size_of___flge 009A  
                      __size_of___bmul 0011                              ?_spi_read 0070  
                              ___fladd 05F9                   spi_write_read@rx_len 0078  
                              ___fldiv 1E71                                _adcRead 2F57  
                              ___awdiv 2EB2                                ___flneg 2ADB  
                              ___awmod 2D7C                                ___flmul 03CD  
                 spi_write_read@tx_len 0076                                ___flsub 2BA9  
                              ___fltol 20EC                                ___lldiv 2F04  
                      __size_of___wmul 001B                                ___llmod 2D39  
            writeVoltages@totalVoltage 0143                   __size_of_timer0Setup 0005  
                           ??_adcSetup 0072                   __size_of_timer2Setup 000B  
                      __size_of_fround 0209                                _avgBuff 21EA  
                              __ptext1 2001                                __ptext2 1305  
                              __ptext3 2034                                __ptext4 2BE8  
                              __ptext5 2CBF                                __ptext6 1302  
                              __ptext7 089F                                __ptext8 00A8  
                              __ptext9 2B08                  __size_of_LTC6804_adcv 0031  
          writeValuesToUart@voltageArr 0167                           __size_of_ISR 0071  
                          ?__div_to_l_ 0072                  __size_of_LTC6804_rdcv 018B  
                              _dpowers 309A                                _isdigit 2B08  
                           ??___xxtofl 0074                       ___awmod@dividend 0074  
                 __size_of_wakeup_idle 0009                 LTC6804_rdcv@current_ic 0053  
                              _set_adc 208E                          _cellBalancing 2720  
                           ??_getTemps 00CA                                _sprintf 089F  
                              clrloop0 2ABA                                main@soc 016B  
                           avgBuff@inc 00E0                   end_of_initialization 00A4  
                       ?_writeVoltages 0141        __end_ofLTC6804_rdcv_reg@REG_LEN 3166  
                              init_ram 2ABF                                initloop 2AC0  
            __size_of_calculateCurrent 0089                          ??_clearScreen 0143  
                        pec15_calc@len 002B                            ?_pec15_calc 0078  
                    __end_of_uartSetup 2B08                          _calculateTemp 2271  
             calculateCurrent@adcValue 00D5                        ___lldiv@divisor 0072  
                      ___lldiv@counter 0025                             _uartEnable 1302  
                 calculateCurrent@curr 00D9                             ??_spiSetup 0072  
                            _RCSTAbits 019D                      __end_of_spi_write 2AEF  
                         _LTC6804_adcv 2C5D                             ??_spi_read 0072  
                         _LTC6804_rdcv 1CE6                         __tdiv_to_l_@f1 0072  
                       __tdiv_to_l_@f2 0076                            ?_getCurrent 00E1  
    __end_ofLTC6804_rdstat_reg@REG_LEN 30C3                  __end_of_LTC6804_wrcfg 24C8  
                        ??__tdiv_to_l_ 0020                             _timerSetup 2AB3  
                  LTC6804_rdcv_reg@cmd 0037                    LTC6804_rdcv_reg@reg 003B  
                          ___fladd@grs 00D4                          ___xxtofl@sign 0032  
                            _TRISAbits 008C                              _TRISBbits 008D  
                       ?_cellBalancing 00E5                              _TRISCbits 008E  
                            _TRISDbits 008F                   __size_of_sumVoltages 0050  
                          ___fldiv@grs 004C                            ___fldiv@rem 0046  
                    LTC6804_adstat@cmd 0030               __size_of_measureVoltages 00E1  
                LTC6804_rdstat_reg@cmd 0038                  LTC6804_rdstat_reg@reg 0035  
                     main@currentIndex 0266                            ___flmul@grs 0061  
                 __end_of_setDischarge 2720                         ?_calculateTemp 00C0  
                            _TXSTAbits 019E                    __size_of__div_to_l_ 00C5  
                 LTC6804_wrcfg@CMD_LEN 0042                    __end_of_clearScreen 2CFB  
                       __end_of___flge 089F                         __end_of___bmul 2B27  
                           _writeTemps 2034                         __end_of___wmul 2B8B  
                       __end_of_fround 1800                    __size_of_pec15_calc 004F  
                  start_initialization 0077                            __end_of_ISR 0075  
                  __end_of__tdiv_to_l_ 257E                   measureVoltages@F7580 0320  
                      ??_writeVoltages 0147                       _LTC6804_rdcv_reg 2FAB  
                  __size_of_getCurrent 003E               __size_of_spi_write_array 0015  
                      ___llmod@divisor 0026                      __size_of_i2cSetup 0011  
                      ___llmod@counter 002F                    getTemps@highestTemp 00CE  
                 LTC6804_wrcfg@cfg_pec 0044                            _APFCON1bits 011D  
                       adcRead@ansHigh 0028                            ?_uartEnable 0070  
                             ??___flge 00DD                               ??___bmul 0073  
                             ??___wmul 0076                              __Umul8_16 2BC8  
                          __pdataBANK4 026A                            __pdataBANK5 02E2  
                             ??_fround 00A0                   getTemps@temperatures 00D0  
                      LTC6804_adcv@cmd 0030                            ?_timerSetup 0070  
                        sprintf@tmpval 012B                              ___fladd@a 00C1  
                            ___fladd@b 00BD                             fround@prec 00BC  
                      ??_cellBalancing 00E7                      __size_of_adcSetup 001E  
                            ___fldiv@a 0038                              ___fldiv@b 003C  
                            ___flmul@a 0056                              ___flmul@b 0052  
                          __pbssCOMMON 007A                              ___flsub@a 00D5  
                            ___flsub@b 00D9                    sumVoltages@voltages 00AD  
                            ___latbits 0003          writeValuesToUart@totalVoltage 0158  
                        __pcstackBANK0 0020                          __pcstackBANK1 00A0  
                        __pcstackBANK2 0120                          __pcstackBANK3 01A0  
                        __pcstackBANK4 0220                LTC6804_rdcv@CELL_IN_REG 3166  
                    __size_of___xxtofl 0096                           _isdigit$1783 0072  
                            adcRead@ch 0027                        ??_calculateTemp 00C2  
                    __size_of_getTemps 007F                        LTC6804_rdcv@reg 0052  
                          sprintf@flag 0135                            sprintf@fval 0139  
                     _calculateCurrent 22F8                            sprintf@prec 013D  
                          _clearScreen 2CBF                    spi_write_array@data 0075  
                 calculateTemp@voltage 00C4                      ??_measureVoltages 00E9  
          __size_of_LTC6804_initialize 0011                  LTC6804_rdcv@cell_data 0043  
                             ?___fladd 00BD                               ?___fldiv 0038  
                             ?_adcRead 0072                               ?___awdiv 0020  
                             ?___flneg 0072                               ?___awmod 0072  
                             ?___flmul 0052                               ?___flsub 00D5  
                             ?___fltol 00B5                               ?___lldiv 0072  
                             ?___llmod 0026                              __npowers_ 3034  
                           ?__Umul8_16 0072                   __end_of_temperatures 309A  
    __end_ofLTC6804_rdcfg@BYTES_IN_REG 3160                        main@highestTemp 025A  
    __end_ofLTC6804_wrcfg@BYTES_IN_REG 3161                 getCurrent@currentValue 00E5  
                          ?_writeTemps 0141                      __size_of_spiSetup 0012  
                            _configReg 026A                      setDischarge@index 0072  
                    __size_of_spi_read 000C                               ?_avgBuff 00D5  
                          __tdiv_to_l_ 24C8                              __pswtext1 2800  
              __size_of_LTC6804_adstat 0031                           ??__div_to_l_ 0020  
                           set_adc@CHG 0074                             set_adc@DCP 0072  
                             ?_isdigit 0070             LTC6804_rdstat_reg@total_ic 002F  
                             ?_set_adc 0072                    __size_of_uartEnable 0003  
                __size_of_setDischarge 00DD                               ?_sprintf 00E5  
                   __end_of_crc15Table 1C00                          ?_writeCurrent 0141  
                       __size_of_scale 0325                         __size_of_setup 0026  
                LTC6804_rdcv@pec_error 004B          LTC6804_rdcv@current_cell_1356 0056  
          __size_of_LTC6804_rdstat_reg 0052                         ___wmul@product 0076  
                  __size_of_timerSetup 0006                               _LATAbits 010C  
                             _LATBbits 010D                               _LATDbits 010F  
             LTC6804_rdcv@current_cell 0054                           ??_pec15_calc 0020  
                            clear_ram0 2AB9                    setDischarge@boolean 0074  
                             _PIE1bits 0091                               _PIE2bits 0092  
                        ??_uartDisable 0070                measureVoltages@pecError 0138  
                             _PIR1bits 0011                     __end_of__div_to_l_ 2643  
                             _PIR2bits 0012                              _uartSetup 2AFB  
                    ??_spi_write_array 0076                          ??_timer0Setup 0072  
                        ??_timer2Setup 0072                               _SSP1CON1 0215  
          measureVoltages@totalVoltage 00E5                           ??_getCurrent 007A  
                            _spi_write 2AE4                            writeTemps@k 0146  
                        ??_wakeup_idle 0072                             _ADCON0bits 009D  
                    ___wmul@multiplier 0072                           _setDischarge 2643  
                      main@currentBuff 01A0                              main@temps 0250  
                   __end_of_pec15_calc 2E10                           clearScreen@j 0146  
              measureVoltages@voltages 0139                         ??_writeCurrent 007A  
            LTC6804_rdstat_reg@REG_LEN 30C2                           avgBuff@total 00DC  
                             _i2cSetup 2B38             measureVoltages@numVoltages 00E7  
                  __size_of_writeTemps 005A               cellBalancing@numVoltages 00E5  
                   __end_of_getCurrent 2D39                       measureVoltages@i 013A  
             LTC6804_rdcv@received_pec 004E                               _OledFont 1000  
             LTC6804_rdcv_reg@total_ic 002F                __size_of_spi_write_read 002F  
                  LTC6804_wrcfg@config 002F                             ?_uartSetup 0070  
                          ??__Umul8_16 0074               __end_of_LTC6804_rdcv_reg 3000  
                spi_write_read@tx_Data 0024                       __size_of___fladd 01FC  
                     __size_of___fldiv 018F                       __size_of_adcRead 0054  
                     __size_of___awdiv 0052                       __size_of___flneg 0009  
                  __end_of_uartDisable 1C05                       __size_of___awmod 0045  
                spi_write_read@rx_data 0077                       __size_of___flmul 022C  
                     __size_of___flsub 001F                       __size_of___fltol 007F  
                     __size_of___lldiv 0053                       __size_of___llmod 0043  
                             _adcSetup 2B8B                             ?_spi_write 0070  
      __end_ofLTC6804_rdaux@BYT_IN_REG 3164                            _fround$2177 00B8  
                          _fround$2178 00B4                LTC6804_rdcv_reg@REG_LEN 3165  
                     __size_of_avgBuff 0087                    __end_of_timer0Setup 0805  
                  __end_of_timer2Setup 0800              LTC6804_rdstat_reg@cmd_pec 0036  
                          _currentBool 02A0                          ??_sumVoltages 00A0  
                         _tempChannels 02E2                             sprintf@exp 0133  
                           sprintf@val 012F                               ___xxtofl 2381  
                     __size_of_isdigit 000E                   LTC6804_rdcv@data_pec 0050  
                 LTC6804_rdcv@cell_reg 0057                    __end_of_wakeup_idle 2ADB  
                     __size_of_set_adc 005E                               __ptext10 15F7  
                             __ptext11 2D7C                               __ptext20 2E60  
                             __ptext12 2EB2                               __ptext21 2C8E  
                             __ptext13 24C8                               __ptext30 2B27  
                             __ptext22 2C08                               __ptext14 257E  
                             __ptext31 208E                               __ptext23 2AFB  
                             __ptext15 2D39                               __ptext40 2271  
                             __ptext32 1C05                               __ptext24 2AB3  
                             __ptext16 2F04                               __ptext41 20EC  
                             __ptext33 1CE6                               __ptext25 07F5  
                             __ptext17 2BA9                               __ptext50 2417  
                             __ptext42 2CFB                               __ptext34 2FAB  
                             __ptext26 0800                               __ptext18 2ADB  
                             __ptext51 2AD2                               __ptext43 22F8  
                             __ptext35 2C2E                               __ptext27 2B49  
                             __ptext19 2E10                               __ptext52 2B5B  
                             __ptext44 03CD                               __ptext36 2AEF  
                             __ptext28 2B38                               __ptext61 1C02  
                             __ptext53 2AE4                               __ptext45 2BC8  
                             __ptext37 2B16                               __ptext29 2B8B  
                             __ptext54 2DC1                               __ptext46 2F57  
                             __ptext38 2C5D                               __ptext55 2B70  
                             __ptext47 2720                               __ptext39 216B  
                             __ptext56 21EA                               __ptext48 2643  
                             __ptext57 2381                               __ptext49 0805  
                             __ptext58 1E71                               __ptext59 05F9  
                             _getTemps 216B                           _SSP1CON1bits 0215  
                         _SSP1CON3bits 0217                               __powers_ 3000  
                  LTC6804_adcv@cmd_pec 0034                       __size_of_sprintf 0761  
                            set_adc@CH 0073                              set_adc@MD 0077  
               __size_of_LTC6804_wrcfg 00B1                          __size_of_main 0191  
                         ??_uartEnable 0072                            pec15_calc@i 002C  
                             _uartBool 02A2                               _spiSetup 2B49  
              LTC6804_rdcv_reg@cmd_pec 0035                               _spi_read 2AEF  
                             int$flags 007E                LTC6804_wrcfg@current_ic 0047  
                _calculateCurrent$2175 00DD                           _SSP1STATbits 0214  
                         ??_timerSetup 0072                   LTC6804_rdcv@total_ic 003C  
           writeValuesToUart@uartLines 0165                            avgBuff@buff 00DB  
                       _LTC6804_adstat 2C8E               __end_of_calculateCurrent 2381  
                          avgBuff@size 00D5        __end_ofLTC6804_rdaux@NUM_RX_BYT 3165  
                    _writeValuesToUart 2001                             _INTCONbits 000B  
                       __pstringtext10 315F                         __pstringtext11 3160  
                       __pstringtext20 30C2                         __pstringtext12 3161  
                       __pstringtext21 30E9                         __pstringtext13 3162  
                       __pstringtext22 3100                         __pstringtext14 3163  
                       __pstringtext23 3114                         __pstringtext15 3164  
                       __pstringtext24 3127                         __pstringtext16 3165  
                       __pstringtext25 3136                         __pstringtext17 3166  
                       __pstringtext26 3145                         __pstringtext18 3167  
                       __pstringtext27 3150                         __pstringtext19 3168  
                       __pstringtext28 0000                     ?_writeValuesToUart 0156  
                             isdigit@c 0073                LTC6804_rdcv@parsed_cell 004C  
                     spi_read@readData 0074                               scale@scl 00B4  
                   __end_of_uartEnable 1305                        _measureVoltages 1C05  
                       pec15_calc@addr 0029                         pec15_calc@data 0078  
                  __end_of_sumVoltages 2E60                  __end_of_writeVoltages 1466  
                             intlevel1 0000                           _temperatures 3068  
                            sprintf@ap 012A                       __tdiv_to_l_@exp1 0029  
                     __tdiv_to_l_@cntr 0028                              sprintf@sp 013F  
                     __tdiv_to_l_@quot 0024                 sumVoltages@numVoltages 006C  
                  ??_writeValuesToUart 007A                       ___lldiv@dividend 0076  
               LTC6804_rdcv@BYT_IN_REG 3167                      __CFG_CLKOUTEN$OFF 0000  
                   __end_of_timerSetup 2AB9                           ?_clearScreen 0141  
                          _uartDisable 1C02                       main@totalVoltage 025E  
                          ??_uartSetup 0072                            _timer0Setup 0800  
                 __end_of_writeCurrent 2C08                            _timer2Setup 07F5  
                writeTemps@highestTemp 0141                           ??_writeTemps 00EF  
               __end_of_LTC6804_adstat 2CBF                            ??_spi_write 0072  
                        _LTC6804_wrcfg 2417                           ?__tdiv_to_l_ 0072  
                        __pstringtext1 1000                          __pstringtext2 1800  
                        __pstringtext3 1A00                          __pstringtext4 3000  
                        __pstringtext5 3034                          __pstringtext6 3068  
                        __pstringtext7 309A                          __pstringtext8 3159  
                        __pstringtext9 315D              __end_of_writeValuesToUart 2034  
                          _wakeup_idle 2AD2                 __Umul8_16@multiplicand 0072  
                           _OPTION_REG 0095                               sprintf@c 0140  
                             sprintf@f 00E5                       ___lldiv@quotient 0021  
                __end_of_cellBalancing 2800                            _SSPCON2bits 0216  
            LTC6804_rdcfg@BYTES_IN_REG 315F              LTC6804_wrcfg@BYTES_IN_REG 3160  
                      sumVoltages@data 00A5                          ___fladd@signs 00D1  
                          getTemps@inc 00D1                        _spi_write_array 2B5B  
                 LTC6804_rdcv_reg@data 0030                           ___fladd@aexp 00D2  
                         ___fladd@bexp 00D3                  __end_of_calculateTemp 22F8  
                   __end_of_writeTemps 208E                   __Umul8_16@multiplier 0024  
           __end_of_LTC6804_initialize 2B38                         _spi_write_read 2C2E  
          LTC6804_initialize@configReg 0049                 LTC6804_rdcv@NUM_RX_BYT 3168  
                    __Umul8_16@product 0020  
