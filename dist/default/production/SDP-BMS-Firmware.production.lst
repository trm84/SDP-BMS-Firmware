

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 12 17:28:50 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	stringtext29,global,class=STRCODE,delta=2
    35                           	psect	stringtext30,global,class=STRCODE,delta=2
    36                           	psect	cinit,global,class=CODE,merge=1,delta=2
    37                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    38                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    40                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    41                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    42                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    43                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    44                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    45                           	psect	inittext,global,class=CODE,delta=2
    46                           	psect	clrtext,global,class=CODE,delta=2
    47                           	psect	cstackBANK7,global,class=BANK7,space=1,delta=1
    48                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    49                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    50                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    51                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    52                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    53                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    54                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    55                           	psect	text1,local,class=CODE,merge=1,delta=2
    56                           	psect	text2,local,class=CODE,merge=1,delta=2
    57                           	psect	text3,local,class=CODE,merge=1,delta=2
    58                           	psect	text4,local,class=CODE,merge=1,delta=2
    59                           	psect	text5,local,class=CODE,merge=1,delta=2
    60                           	psect	text6,local,class=CODE,merge=1,delta=2
    61                           	psect	text7,local,class=CODE,merge=1,delta=2
    62                           	psect	text8,local,class=CODE,merge=1,delta=2
    63                           	psect	text9,local,class=CODE,merge=1,delta=2
    64                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text11,local,class=CODE,merge=1,delta=2
    66                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    74                           	psect	text20,local,class=CODE,merge=1,delta=2
    75                           	psect	text21,local,class=CODE,merge=1,delta=2
    76                           	psect	text22,local,class=CODE,merge=1,delta=2
    77                           	psect	text23,local,class=CODE,merge=1,delta=2
    78                           	psect	text24,local,class=CODE,merge=1,delta=2
    79                           	psect	swtext1,local,class=CONST,delta=2
    80                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text26,local,class=CODE,merge=1,delta=2
    82                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text28,local,class=CODE,merge=1,delta=2
    84                           	psect	text29,local,class=CODE,merge=1,delta=2
    85                           	psect	text30,local,class=CODE,merge=1,delta=2
    86                           	psect	text31,local,class=CODE,merge=1,delta=2
    87                           	psect	text32,local,class=CODE,merge=1,delta=2
    88                           	psect	text33,local,class=CODE,merge=1,delta=2
    89                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    90                           	psect	text35,local,class=CODE,merge=1,delta=2
    91                           	psect	text36,local,class=CODE,merge=1,delta=2
    92                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    93                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text39,local,class=CODE,merge=1,delta=2
    95                           	psect	text40,local,class=CODE,merge=1,delta=2
    96                           	psect	text41,local,class=CODE,merge=1,delta=2
    97                           	psect	text42,local,class=CODE,merge=1,delta=2
    98                           	psect	text43,local,class=CODE,merge=1,delta=2
    99                           	psect	text44,local,class=CODE,merge=1,delta=2
   100                           	psect	text45,local,class=CODE,merge=1,delta=2
   101                           	psect	text46,local,class=CODE,merge=1,delta=2
   102                           	psect	text47,local,class=CODE,merge=1,delta=2
   103                           	psect	text48,local,class=CODE,merge=1,delta=2
   104                           	psect	text49,local,class=CODE,merge=1,delta=2
   105                           	psect	text50,local,class=CODE,merge=1,delta=2
   106                           	psect	text51,local,class=CODE,merge=1,delta=2
   107                           	psect	text52,local,class=CODE,merge=1,delta=2
   108                           	psect	text53,local,class=CODE,merge=1,delta=2
   109                           	psect	text54,local,class=CODE,merge=1,delta=2
   110                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	text56,local,class=CODE,merge=1,delta=2
   112                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   113                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
   114                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
   115                           	psect	intentry,global,class=CODE,delta=2
   116                           	psect	text61,local,class=CODE,merge=1,delta=2
   117                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
   118                           	dabs	1,0x7E,2
   119  0000                     
   120                           ; Version 1.45
   121                           ; Generated 16/11/2017 GMT
   122                           ; 
   123                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC16F1789 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     	;# 
   155  0001                     	;# 
   156  0002                     	;# 
   157  0003                     	;# 
   158  0004                     	;# 
   159  0005                     	;# 
   160  0006                     	;# 
   161  0007                     	;# 
   162  0008                     	;# 
   163  0009                     	;# 
   164  000A                     	;# 
   165  000B                     	;# 
   166  000C                     	;# 
   167  000D                     	;# 
   168  000E                     	;# 
   169  000F                     	;# 
   170  0010                     	;# 
   171  0011                     	;# 
   172  0012                     	;# 
   173  0013                     	;# 
   174  0014                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0016                     	;# 
   178  0017                     	;# 
   179  0018                     	;# 
   180  0019                     	;# 
   181  001A                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0110                     	;# 
   210  0111                     	;# 
   211  0112                     	;# 
   212  0113                     	;# 
   213  0114                     	;# 
   214  0115                     	;# 
   215  0116                     	;# 
   216  0117                     	;# 
   217  0118                     	;# 
   218  0119                     	;# 
   219  011A                     	;# 
   220  011B                     	;# 
   221  011C                     	;# 
   222  011D                     	;# 
   223  011D                     	;# 
   224  011D                     	;# 
   225  011E                     	;# 
   226  011F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  018E                     	;# 
   230  018F                     	;# 
   231  0190                     	;# 
   232  0191                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0193                     	;# 
   236  0193                     	;# 
   237  0193                     	;# 
   238  0194                     	;# 
   239  0195                     	;# 
   240  0196                     	;# 
   241  0197                     	;# 
   242  0199                     	;# 
   243  0199                     	;# 
   244  0199                     	;# 
   245  019A                     	;# 
   246  019A                     	;# 
   247  019A                     	;# 
   248  019B                     	;# 
   249  019B                     	;# 
   250  019B                     	;# 
   251  019B                     	;# 
   252  019B                     	;# 
   253  019C                     	;# 
   254  019C                     	;# 
   255  019C                     	;# 
   256  019D                     	;# 
   257  019D                     	;# 
   258  019D                     	;# 
   259  019E                     	;# 
   260  019E                     	;# 
   261  019E                     	;# 
   262  019F                     	;# 
   263  019F                     	;# 
   264  019F                     	;# 
   265  019F                     	;# 
   266  019F                     	;# 
   267  020C                     	;# 
   268  020D                     	;# 
   269  020E                     	;# 
   270  020F                     	;# 
   271  0210                     	;# 
   272  0211                     	;# 
   273  0211                     	;# 
   274  0212                     	;# 
   275  0212                     	;# 
   276  0213                     	;# 
   277  0213                     	;# 
   278  0214                     	;# 
   279  0214                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0216                     	;# 
   285  0216                     	;# 
   286  0217                     	;# 
   287  0217                     	;# 
   288  028C                     	;# 
   289  028D                     	;# 
   290  028E                     	;# 
   291  028F                     	;# 
   292  0290                     	;# 
   293  0291                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0293                     	;# 
   297  0298                     	;# 
   298  0298                     	;# 
   299  0299                     	;# 
   300  029A                     	;# 
   301  030C                     	;# 
   302  030D                     	;# 
   303  030E                     	;# 
   304  030F                     	;# 
   305  0310                     	;# 
   306  0311                     	;# 
   307  0311                     	;# 
   308  0312                     	;# 
   309  0313                     	;# 
   310  038C                     	;# 
   311  038D                     	;# 
   312  038E                     	;# 
   313  038F                     	;# 
   314  0390                     	;# 
   315  0391                     	;# 
   316  0392                     	;# 
   317  0393                     	;# 
   318  0394                     	;# 
   319  0395                     	;# 
   320  0396                     	;# 
   321  0397                     	;# 
   322  0398                     	;# 
   323  0399                     	;# 
   324  039D                     	;# 
   325  039E                     	;# 
   326  039F                     	;# 
   327  0511                     	;# 
   328  0513                     	;# 
   329  0515                     	;# 
   330  051A                     	;# 
   331  0591                     	;# 
   332  0592                     	;# 
   333  0592                     	;# 
   334  0593                     	;# 
   335  0594                     	;# 
   336  0594                     	;# 
   337  0595                     	;# 
   338  0596                     	;# 
   339  0596                     	;# 
   340  0E91                     	;# 
   341  0E92                     	;# 
   342  0E93                     	;# 
   343  0E94                     	;# 
   344  0E95                     	;# 
   345  0E96                     	;# 
   346  0E97                     	;# 
   347  0E98                     	;# 
   348  0E99                     	;# 
   349  0E9A                     	;# 
   350  0E9B                     	;# 
   351  0E9C                     	;# 
   352  0E9D                     	;# 
   353  0E9E                     	;# 
   354  0E9F                     	;# 
   355  0EA0                     	;# 
   356  0EA1                     	;# 
   357  0EA1                     	;# 
   358  0EA2                     	;# 
   359  0EA3                     	;# 
   360  0EA3                     	;# 
   361  0EA4                     	;# 
   362  0EA5                     	;# 
   363  0EA5                     	;# 
   364  0EA6                     	;# 
   365  0EA7                     	;# 
   366  0EA7                     	;# 
   367  0EA8                     	;# 
   368  0EA9                     	;# 
   369  0EAA                     	;# 
   370  0EAB                     	;# 
   371  0EAC                     	;# 
   372  0EAD                     	;# 
   373  0EAE                     	;# 
   374  0EAF                     	;# 
   375  0EB1                     	;# 
   376  0EB2                     	;# 
   377  0EB3                     	;# 
   378  0EB4                     	;# 
   379  0EB5                     	;# 
   380  0EB6                     	;# 
   381  0EB7                     	;# 
   382  0EB8                     	;# 
   383  0EB9                     	;# 
   384  0EBA                     	;# 
   385  0EBB                     	;# 
   386  0EBC                     	;# 
   387  0EBD                     	;# 
   388  0EBE                     	;# 
   389  0EBF                     	;# 
   390  0EC0                     	;# 
   391  0EC1                     	;# 
   392  0EC1                     	;# 
   393  0EC2                     	;# 
   394  0EC3                     	;# 
   395  0EC3                     	;# 
   396  0EC4                     	;# 
   397  0EC5                     	;# 
   398  0EC5                     	;# 
   399  0EC6                     	;# 
   400  0EC7                     	;# 
   401  0EC7                     	;# 
   402  0EC8                     	;# 
   403  0EC9                     	;# 
   404  0ECA                     	;# 
   405  0ECB                     	;# 
   406  0ECC                     	;# 
   407  0ECD                     	;# 
   408  0ECE                     	;# 
   409  0ECF                     	;# 
   410  0ED1                     	;# 
   411  0ED2                     	;# 
   412  0ED3                     	;# 
   413  0ED4                     	;# 
   414  0ED5                     	;# 
   415  0ED6                     	;# 
   416  0ED7                     	;# 
   417  0ED8                     	;# 
   418  0ED9                     	;# 
   419  0EDA                     	;# 
   420  0EDB                     	;# 
   421  0EDC                     	;# 
   422  0EDD                     	;# 
   423  0EDE                     	;# 
   424  0EDF                     	;# 
   425  0EE0                     	;# 
   426  0EE1                     	;# 
   427  0EE1                     	;# 
   428  0EE2                     	;# 
   429  0EE3                     	;# 
   430  0EE3                     	;# 
   431  0EE4                     	;# 
   432  0EE5                     	;# 
   433  0EE5                     	;# 
   434  0EE6                     	;# 
   435  0EE7                     	;# 
   436  0EE7                     	;# 
   437  0EE8                     	;# 
   438  0EE9                     	;# 
   439  0EEA                     	;# 
   440  0EEB                     	;# 
   441  0EEC                     	;# 
   442  0EED                     	;# 
   443  0EEE                     	;# 
   444  0EEF                     	;# 
   445  0F11                     	;# 
   446  0F12                     	;# 
   447  0F13                     	;# 
   448  0F14                     	;# 
   449  0F15                     	;# 
   450  0F16                     	;# 
   451  0F17                     	;# 
   452  0F18                     	;# 
   453  0F19                     	;# 
   454  0F1A                     	;# 
   455  0F1B                     	;# 
   456  0F1C                     	;# 
   457  0F1D                     	;# 
   458  0F1E                     	;# 
   459  0F1F                     	;# 
   460  0F20                     	;# 
   461  0F21                     	;# 
   462  0F21                     	;# 
   463  0F22                     	;# 
   464  0F23                     	;# 
   465  0F23                     	;# 
   466  0F24                     	;# 
   467  0F25                     	;# 
   468  0F25                     	;# 
   469  0F26                     	;# 
   470  0F27                     	;# 
   471  0F27                     	;# 
   472  0F28                     	;# 
   473  0F29                     	;# 
   474  0F2A                     	;# 
   475  0F2B                     	;# 
   476  0F2C                     	;# 
   477  0F2D                     	;# 
   478  0F2E                     	;# 
   479  0F2F                     	;# 
   480  0FE4                     	;# 
   481  0FE5                     	;# 
   482  0FE6                     	;# 
   483  0FE7                     	;# 
   484  0FE8                     	;# 
   485  0FE9                     	;# 
   486  0FEA                     	;# 
   487  0FEB                     	;# 
   488  0FED                     	;# 
   489  0FEE                     	;# 
   490  0FEF                     	;# 
   491  0000                     	;# 
   492  0001                     	;# 
   493  0002                     	;# 
   494  0003                     	;# 
   495  0004                     	;# 
   496  0005                     	;# 
   497  0006                     	;# 
   498  0007                     	;# 
   499  0008                     	;# 
   500  0009                     	;# 
   501  000A                     	;# 
   502  000B                     	;# 
   503  000C                     	;# 
   504  000D                     	;# 
   505  000E                     	;# 
   506  000F                     	;# 
   507  0010                     	;# 
   508  0011                     	;# 
   509  0012                     	;# 
   510  0013                     	;# 
   511  0014                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  008F                     	;# 
   525  0090                     	;# 
   526  0091                     	;# 
   527  0092                     	;# 
   528  0093                     	;# 
   529  0094                     	;# 
   530  0095                     	;# 
   531  0096                     	;# 
   532  0097                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009A                     	;# 
   536  009B                     	;# 
   537  009B                     	;# 
   538  009C                     	;# 
   539  009D                     	;# 
   540  009E                     	;# 
   541  009F                     	;# 
   542  010C                     	;# 
   543  010D                     	;# 
   544  010E                     	;# 
   545  010F                     	;# 
   546  0110                     	;# 
   547  0111                     	;# 
   548  0112                     	;# 
   549  0113                     	;# 
   550  0114                     	;# 
   551  0115                     	;# 
   552  0116                     	;# 
   553  0117                     	;# 
   554  0118                     	;# 
   555  0119                     	;# 
   556  011A                     	;# 
   557  011B                     	;# 
   558  011C                     	;# 
   559  011D                     	;# 
   560  011D                     	;# 
   561  011D                     	;# 
   562  011E                     	;# 
   563  011F                     	;# 
   564  018C                     	;# 
   565  018D                     	;# 
   566  018E                     	;# 
   567  018F                     	;# 
   568  0190                     	;# 
   569  0191                     	;# 
   570  0191                     	;# 
   571  0192                     	;# 
   572  0193                     	;# 
   573  0193                     	;# 
   574  0193                     	;# 
   575  0194                     	;# 
   576  0195                     	;# 
   577  0196                     	;# 
   578  0197                     	;# 
   579  0199                     	;# 
   580  0199                     	;# 
   581  0199                     	;# 
   582  019A                     	;# 
   583  019A                     	;# 
   584  019A                     	;# 
   585  019B                     	;# 
   586  019B                     	;# 
   587  019B                     	;# 
   588  019B                     	;# 
   589  019B                     	;# 
   590  019C                     	;# 
   591  019C                     	;# 
   592  019C                     	;# 
   593  019D                     	;# 
   594  019D                     	;# 
   595  019D                     	;# 
   596  019E                     	;# 
   597  019E                     	;# 
   598  019E                     	;# 
   599  019F                     	;# 
   600  019F                     	;# 
   601  019F                     	;# 
   602  019F                     	;# 
   603  019F                     	;# 
   604  020C                     	;# 
   605  020D                     	;# 
   606  020E                     	;# 
   607  020F                     	;# 
   608  0210                     	;# 
   609  0211                     	;# 
   610  0211                     	;# 
   611  0212                     	;# 
   612  0212                     	;# 
   613  0213                     	;# 
   614  0213                     	;# 
   615  0214                     	;# 
   616  0214                     	;# 
   617  0215                     	;# 
   618  0215                     	;# 
   619  0215                     	;# 
   620  0215                     	;# 
   621  0216                     	;# 
   622  0216                     	;# 
   623  0217                     	;# 
   624  0217                     	;# 
   625  028C                     	;# 
   626  028D                     	;# 
   627  028E                     	;# 
   628  028F                     	;# 
   629  0290                     	;# 
   630  0291                     	;# 
   631  0291                     	;# 
   632  0292                     	;# 
   633  0293                     	;# 
   634  0298                     	;# 
   635  0298                     	;# 
   636  0299                     	;# 
   637  029A                     	;# 
   638  030C                     	;# 
   639  030D                     	;# 
   640  030E                     	;# 
   641  030F                     	;# 
   642  0310                     	;# 
   643  0311                     	;# 
   644  0311                     	;# 
   645  0312                     	;# 
   646  0313                     	;# 
   647  038C                     	;# 
   648  038D                     	;# 
   649  038E                     	;# 
   650  038F                     	;# 
   651  0390                     	;# 
   652  0391                     	;# 
   653  0392                     	;# 
   654  0393                     	;# 
   655  0394                     	;# 
   656  0395                     	;# 
   657  0396                     	;# 
   658  0397                     	;# 
   659  0398                     	;# 
   660  0399                     	;# 
   661  039D                     	;# 
   662  039E                     	;# 
   663  039F                     	;# 
   664  0511                     	;# 
   665  0513                     	;# 
   666  0515                     	;# 
   667  051A                     	;# 
   668  0591                     	;# 
   669  0592                     	;# 
   670  0592                     	;# 
   671  0593                     	;# 
   672  0594                     	;# 
   673  0594                     	;# 
   674  0595                     	;# 
   675  0596                     	;# 
   676  0596                     	;# 
   677  0E91                     	;# 
   678  0E92                     	;# 
   679  0E93                     	;# 
   680  0E94                     	;# 
   681  0E95                     	;# 
   682  0E96                     	;# 
   683  0E97                     	;# 
   684  0E98                     	;# 
   685  0E99                     	;# 
   686  0E9A                     	;# 
   687  0E9B                     	;# 
   688  0E9C                     	;# 
   689  0E9D                     	;# 
   690  0E9E                     	;# 
   691  0E9F                     	;# 
   692  0EA0                     	;# 
   693  0EA1                     	;# 
   694  0EA1                     	;# 
   695  0EA2                     	;# 
   696  0EA3                     	;# 
   697  0EA3                     	;# 
   698  0EA4                     	;# 
   699  0EA5                     	;# 
   700  0EA5                     	;# 
   701  0EA6                     	;# 
   702  0EA7                     	;# 
   703  0EA7                     	;# 
   704  0EA8                     	;# 
   705  0EA9                     	;# 
   706  0EAA                     	;# 
   707  0EAB                     	;# 
   708  0EAC                     	;# 
   709  0EAD                     	;# 
   710  0EAE                     	;# 
   711  0EAF                     	;# 
   712  0EB1                     	;# 
   713  0EB2                     	;# 
   714  0EB3                     	;# 
   715  0EB4                     	;# 
   716  0EB5                     	;# 
   717  0EB6                     	;# 
   718  0EB7                     	;# 
   719  0EB8                     	;# 
   720  0EB9                     	;# 
   721  0EBA                     	;# 
   722  0EBB                     	;# 
   723  0EBC                     	;# 
   724  0EBD                     	;# 
   725  0EBE                     	;# 
   726  0EBF                     	;# 
   727  0EC0                     	;# 
   728  0EC1                     	;# 
   729  0EC1                     	;# 
   730  0EC2                     	;# 
   731  0EC3                     	;# 
   732  0EC3                     	;# 
   733  0EC4                     	;# 
   734  0EC5                     	;# 
   735  0EC5                     	;# 
   736  0EC6                     	;# 
   737  0EC7                     	;# 
   738  0EC7                     	;# 
   739  0EC8                     	;# 
   740  0EC9                     	;# 
   741  0ECA                     	;# 
   742  0ECB                     	;# 
   743  0ECC                     	;# 
   744  0ECD                     	;# 
   745  0ECE                     	;# 
   746  0ECF                     	;# 
   747  0ED1                     	;# 
   748  0ED2                     	;# 
   749  0ED3                     	;# 
   750  0ED4                     	;# 
   751  0ED5                     	;# 
   752  0ED6                     	;# 
   753  0ED7                     	;# 
   754  0ED8                     	;# 
   755  0ED9                     	;# 
   756  0EDA                     	;# 
   757  0EDB                     	;# 
   758  0EDC                     	;# 
   759  0EDD                     	;# 
   760  0EDE                     	;# 
   761  0EDF                     	;# 
   762  0EE0                     	;# 
   763  0EE1                     	;# 
   764  0EE1                     	;# 
   765  0EE2                     	;# 
   766  0EE3                     	;# 
   767  0EE3                     	;# 
   768  0EE4                     	;# 
   769  0EE5                     	;# 
   770  0EE5                     	;# 
   771  0EE6                     	;# 
   772  0EE7                     	;# 
   773  0EE7                     	;# 
   774  0EE8                     	;# 
   775  0EE9                     	;# 
   776  0EEA                     	;# 
   777  0EEB                     	;# 
   778  0EEC                     	;# 
   779  0EED                     	;# 
   780  0EEE                     	;# 
   781  0EEF                     	;# 
   782  0F11                     	;# 
   783  0F12                     	;# 
   784  0F13                     	;# 
   785  0F14                     	;# 
   786  0F15                     	;# 
   787  0F16                     	;# 
   788  0F17                     	;# 
   789  0F18                     	;# 
   790  0F19                     	;# 
   791  0F1A                     	;# 
   792  0F1B                     	;# 
   793  0F1C                     	;# 
   794  0F1D                     	;# 
   795  0F1E                     	;# 
   796  0F1F                     	;# 
   797  0F20                     	;# 
   798  0F21                     	;# 
   799  0F21                     	;# 
   800  0F22                     	;# 
   801  0F23                     	;# 
   802  0F23                     	;# 
   803  0F24                     	;# 
   804  0F25                     	;# 
   805  0F25                     	;# 
   806  0F26                     	;# 
   807  0F27                     	;# 
   808  0F27                     	;# 
   809  0F28                     	;# 
   810  0F29                     	;# 
   811  0F2A                     	;# 
   812  0F2B                     	;# 
   813  0F2C                     	;# 
   814  0F2D                     	;# 
   815  0F2E                     	;# 
   816  0F2F                     	;# 
   817  0FE4                     	;# 
   818  0FE5                     	;# 
   819  0FE6                     	;# 
   820  0FE7                     	;# 
   821  0FE8                     	;# 
   822  0FE9                     	;# 
   823  0FEA                     	;# 
   824  0FEB                     	;# 
   825  0FED                     	;# 
   826  0FEE                     	;# 
   827  0FEF                     	;# 
   828  0000                     	;# 
   829  0001                     	;# 
   830  0002                     	;# 
   831  0003                     	;# 
   832  0004                     	;# 
   833  0005                     	;# 
   834  0006                     	;# 
   835  0007                     	;# 
   836  0008                     	;# 
   837  0009                     	;# 
   838  000A                     	;# 
   839  000B                     	;# 
   840  000C                     	;# 
   841  000D                     	;# 
   842  000E                     	;# 
   843  000F                     	;# 
   844  0010                     	;# 
   845  0011                     	;# 
   846  0012                     	;# 
   847  0013                     	;# 
   848  0014                     	;# 
   849  0015                     	;# 
   850  0016                     	;# 
   851  0016                     	;# 
   852  0017                     	;# 
   853  0018                     	;# 
   854  0019                     	;# 
   855  001A                     	;# 
   856  001B                     	;# 
   857  001C                     	;# 
   858  008C                     	;# 
   859  008D                     	;# 
   860  008E                     	;# 
   861  008F                     	;# 
   862  0090                     	;# 
   863  0091                     	;# 
   864  0092                     	;# 
   865  0093                     	;# 
   866  0094                     	;# 
   867  0095                     	;# 
   868  0096                     	;# 
   869  0097                     	;# 
   870  0098                     	;# 
   871  0099                     	;# 
   872  009A                     	;# 
   873  009B                     	;# 
   874  009B                     	;# 
   875  009C                     	;# 
   876  009D                     	;# 
   877  009E                     	;# 
   878  009F                     	;# 
   879  010C                     	;# 
   880  010D                     	;# 
   881  010E                     	;# 
   882  010F                     	;# 
   883  0110                     	;# 
   884  0111                     	;# 
   885  0112                     	;# 
   886  0113                     	;# 
   887  0114                     	;# 
   888  0115                     	;# 
   889  0116                     	;# 
   890  0117                     	;# 
   891  0118                     	;# 
   892  0119                     	;# 
   893  011A                     	;# 
   894  011B                     	;# 
   895  011C                     	;# 
   896  011D                     	;# 
   897  011D                     	;# 
   898  011D                     	;# 
   899  011E                     	;# 
   900  011F                     	;# 
   901  018C                     	;# 
   902  018D                     	;# 
   903  018E                     	;# 
   904  018F                     	;# 
   905  0190                     	;# 
   906  0191                     	;# 
   907  0191                     	;# 
   908  0192                     	;# 
   909  0193                     	;# 
   910  0193                     	;# 
   911  0193                     	;# 
   912  0194                     	;# 
   913  0195                     	;# 
   914  0196                     	;# 
   915  0197                     	;# 
   916  0199                     	;# 
   917  0199                     	;# 
   918  0199                     	;# 
   919  019A                     	;# 
   920  019A                     	;# 
   921  019A                     	;# 
   922  019B                     	;# 
   923  019B                     	;# 
   924  019B                     	;# 
   925  019B                     	;# 
   926  019B                     	;# 
   927  019C                     	;# 
   928  019C                     	;# 
   929  019C                     	;# 
   930  019D                     	;# 
   931  019D                     	;# 
   932  019D                     	;# 
   933  019E                     	;# 
   934  019E                     	;# 
   935  019E                     	;# 
   936  019F                     	;# 
   937  019F                     	;# 
   938  019F                     	;# 
   939  019F                     	;# 
   940  019F                     	;# 
   941  020C                     	;# 
   942  020D                     	;# 
   943  020E                     	;# 
   944  020F                     	;# 
   945  0210                     	;# 
   946  0211                     	;# 
   947  0211                     	;# 
   948  0212                     	;# 
   949  0212                     	;# 
   950  0213                     	;# 
   951  0213                     	;# 
   952  0214                     	;# 
   953  0214                     	;# 
   954  0215                     	;# 
   955  0215                     	;# 
   956  0215                     	;# 
   957  0215                     	;# 
   958  0216                     	;# 
   959  0216                     	;# 
   960  0217                     	;# 
   961  0217                     	;# 
   962  028C                     	;# 
   963  028D                     	;# 
   964  028E                     	;# 
   965  028F                     	;# 
   966  0290                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0298                     	;# 
   972  0298                     	;# 
   973  0299                     	;# 
   974  029A                     	;# 
   975  030C                     	;# 
   976  030D                     	;# 
   977  030E                     	;# 
   978  030F                     	;# 
   979  0310                     	;# 
   980  0311                     	;# 
   981  0311                     	;# 
   982  0312                     	;# 
   983  0313                     	;# 
   984  038C                     	;# 
   985  038D                     	;# 
   986  038E                     	;# 
   987  038F                     	;# 
   988  0390                     	;# 
   989  0391                     	;# 
   990  0392                     	;# 
   991  0393                     	;# 
   992  0394                     	;# 
   993  0395                     	;# 
   994  0396                     	;# 
   995  0397                     	;# 
   996  0398                     	;# 
   997  0399                     	;# 
   998  039D                     	;# 
   999  039E                     	;# 
  1000  039F                     	;# 
  1001  0511                     	;# 
  1002  0513                     	;# 
  1003  0515                     	;# 
  1004  051A                     	;# 
  1005  0591                     	;# 
  1006  0592                     	;# 
  1007  0592                     	;# 
  1008  0593                     	;# 
  1009  0594                     	;# 
  1010  0594                     	;# 
  1011  0595                     	;# 
  1012  0596                     	;# 
  1013  0596                     	;# 
  1014  0E91                     	;# 
  1015  0E92                     	;# 
  1016  0E93                     	;# 
  1017  0E94                     	;# 
  1018  0E95                     	;# 
  1019  0E96                     	;# 
  1020  0E97                     	;# 
  1021  0E98                     	;# 
  1022  0E99                     	;# 
  1023  0E9A                     	;# 
  1024  0E9B                     	;# 
  1025  0E9C                     	;# 
  1026  0E9D                     	;# 
  1027  0E9E                     	;# 
  1028  0E9F                     	;# 
  1029  0EA0                     	;# 
  1030  0EA1                     	;# 
  1031  0EA1                     	;# 
  1032  0EA2                     	;# 
  1033  0EA3                     	;# 
  1034  0EA3                     	;# 
  1035  0EA4                     	;# 
  1036  0EA5                     	;# 
  1037  0EA5                     	;# 
  1038  0EA6                     	;# 
  1039  0EA7                     	;# 
  1040  0EA7                     	;# 
  1041  0EA8                     	;# 
  1042  0EA9                     	;# 
  1043  0EAA                     	;# 
  1044  0EAB                     	;# 
  1045  0EAC                     	;# 
  1046  0EAD                     	;# 
  1047  0EAE                     	;# 
  1048  0EAF                     	;# 
  1049  0EB1                     	;# 
  1050  0EB2                     	;# 
  1051  0EB3                     	;# 
  1052  0EB4                     	;# 
  1053  0EB5                     	;# 
  1054  0EB6                     	;# 
  1055  0EB7                     	;# 
  1056  0EB8                     	;# 
  1057  0EB9                     	;# 
  1058  0EBA                     	;# 
  1059  0EBB                     	;# 
  1060  0EBC                     	;# 
  1061  0EBD                     	;# 
  1062  0EBE                     	;# 
  1063  0EBF                     	;# 
  1064  0EC0                     	;# 
  1065  0EC1                     	;# 
  1066  0EC1                     	;# 
  1067  0EC2                     	;# 
  1068  0EC3                     	;# 
  1069  0EC3                     	;# 
  1070  0EC4                     	;# 
  1071  0EC5                     	;# 
  1072  0EC5                     	;# 
  1073  0EC6                     	;# 
  1074  0EC7                     	;# 
  1075  0EC7                     	;# 
  1076  0EC8                     	;# 
  1077  0EC9                     	;# 
  1078  0ECA                     	;# 
  1079  0ECB                     	;# 
  1080  0ECC                     	;# 
  1081  0ECD                     	;# 
  1082  0ECE                     	;# 
  1083  0ECF                     	;# 
  1084  0ED1                     	;# 
  1085  0ED2                     	;# 
  1086  0ED3                     	;# 
  1087  0ED4                     	;# 
  1088  0ED5                     	;# 
  1089  0ED6                     	;# 
  1090  0ED7                     	;# 
  1091  0ED8                     	;# 
  1092  0ED9                     	;# 
  1093  0EDA                     	;# 
  1094  0EDB                     	;# 
  1095  0EDC                     	;# 
  1096  0EDD                     	;# 
  1097  0EDE                     	;# 
  1098  0EDF                     	;# 
  1099  0EE0                     	;# 
  1100  0EE1                     	;# 
  1101  0EE1                     	;# 
  1102  0EE2                     	;# 
  1103  0EE3                     	;# 
  1104  0EE3                     	;# 
  1105  0EE4                     	;# 
  1106  0EE5                     	;# 
  1107  0EE5                     	;# 
  1108  0EE6                     	;# 
  1109  0EE7                     	;# 
  1110  0EE7                     	;# 
  1111  0EE8                     	;# 
  1112  0EE9                     	;# 
  1113  0EEA                     	;# 
  1114  0EEB                     	;# 
  1115  0EEC                     	;# 
  1116  0EED                     	;# 
  1117  0EEE                     	;# 
  1118  0EEF                     	;# 
  1119  0F11                     	;# 
  1120  0F12                     	;# 
  1121  0F13                     	;# 
  1122  0F14                     	;# 
  1123  0F15                     	;# 
  1124  0F16                     	;# 
  1125  0F17                     	;# 
  1126  0F18                     	;# 
  1127  0F19                     	;# 
  1128  0F1A                     	;# 
  1129  0F1B                     	;# 
  1130  0F1C                     	;# 
  1131  0F1D                     	;# 
  1132  0F1E                     	;# 
  1133  0F1F                     	;# 
  1134  0F20                     	;# 
  1135  0F21                     	;# 
  1136  0F21                     	;# 
  1137  0F22                     	;# 
  1138  0F23                     	;# 
  1139  0F23                     	;# 
  1140  0F24                     	;# 
  1141  0F25                     	;# 
  1142  0F25                     	;# 
  1143  0F26                     	;# 
  1144  0F27                     	;# 
  1145  0F27                     	;# 
  1146  0F28                     	;# 
  1147  0F29                     	;# 
  1148  0F2A                     	;# 
  1149  0F2B                     	;# 
  1150  0F2C                     	;# 
  1151  0F2D                     	;# 
  1152  0F2E                     	;# 
  1153  0F2F                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  000F                     	;# 
  1181  0010                     	;# 
  1182  0011                     	;# 
  1183  0012                     	;# 
  1184  0013                     	;# 
  1185  0014                     	;# 
  1186  0015                     	;# 
  1187  0016                     	;# 
  1188  0016                     	;# 
  1189  0017                     	;# 
  1190  0018                     	;# 
  1191  0019                     	;# 
  1192  001A                     	;# 
  1193  001B                     	;# 
  1194  001C                     	;# 
  1195  008C                     	;# 
  1196  008D                     	;# 
  1197  008E                     	;# 
  1198  008F                     	;# 
  1199  0090                     	;# 
  1200  0091                     	;# 
  1201  0092                     	;# 
  1202  0093                     	;# 
  1203  0094                     	;# 
  1204  0095                     	;# 
  1205  0096                     	;# 
  1206  0097                     	;# 
  1207  0098                     	;# 
  1208  0099                     	;# 
  1209  009A                     	;# 
  1210  009B                     	;# 
  1211  009B                     	;# 
  1212  009C                     	;# 
  1213  009D                     	;# 
  1214  009E                     	;# 
  1215  009F                     	;# 
  1216  010C                     	;# 
  1217  010D                     	;# 
  1218  010E                     	;# 
  1219  010F                     	;# 
  1220  0110                     	;# 
  1221  0111                     	;# 
  1222  0112                     	;# 
  1223  0113                     	;# 
  1224  0114                     	;# 
  1225  0115                     	;# 
  1226  0116                     	;# 
  1227  0117                     	;# 
  1228  0118                     	;# 
  1229  0119                     	;# 
  1230  011A                     	;# 
  1231  011B                     	;# 
  1232  011C                     	;# 
  1233  011D                     	;# 
  1234  011D                     	;# 
  1235  011D                     	;# 
  1236  011E                     	;# 
  1237  011F                     	;# 
  1238  018C                     	;# 
  1239  018D                     	;# 
  1240  018E                     	;# 
  1241  018F                     	;# 
  1242  0190                     	;# 
  1243  0191                     	;# 
  1244  0191                     	;# 
  1245  0192                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0194                     	;# 
  1250  0195                     	;# 
  1251  0196                     	;# 
  1252  0197                     	;# 
  1253  0199                     	;# 
  1254  0199                     	;# 
  1255  0199                     	;# 
  1256  019A                     	;# 
  1257  019A                     	;# 
  1258  019A                     	;# 
  1259  019B                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019C                     	;# 
  1265  019C                     	;# 
  1266  019C                     	;# 
  1267  019D                     	;# 
  1268  019D                     	;# 
  1269  019D                     	;# 
  1270  019E                     	;# 
  1271  019E                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  019F                     	;# 
  1275  019F                     	;# 
  1276  019F                     	;# 
  1277  019F                     	;# 
  1278  020C                     	;# 
  1279  020D                     	;# 
  1280  020E                     	;# 
  1281  020F                     	;# 
  1282  0210                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0215                     	;# 
  1295  0216                     	;# 
  1296  0216                     	;# 
  1297  0217                     	;# 
  1298  0217                     	;# 
  1299  028C                     	;# 
  1300  028D                     	;# 
  1301  028E                     	;# 
  1302  028F                     	;# 
  1303  0290                     	;# 
  1304  0291                     	;# 
  1305  0291                     	;# 
  1306  0292                     	;# 
  1307  0293                     	;# 
  1308  0298                     	;# 
  1309  0298                     	;# 
  1310  0299                     	;# 
  1311  029A                     	;# 
  1312  030C                     	;# 
  1313  030D                     	;# 
  1314  030E                     	;# 
  1315  030F                     	;# 
  1316  0310                     	;# 
  1317  0311                     	;# 
  1318  0311                     	;# 
  1319  0312                     	;# 
  1320  0313                     	;# 
  1321  038C                     	;# 
  1322  038D                     	;# 
  1323  038E                     	;# 
  1324  038F                     	;# 
  1325  0390                     	;# 
  1326  0391                     	;# 
  1327  0392                     	;# 
  1328  0393                     	;# 
  1329  0394                     	;# 
  1330  0395                     	;# 
  1331  0396                     	;# 
  1332  0397                     	;# 
  1333  0398                     	;# 
  1334  0399                     	;# 
  1335  039D                     	;# 
  1336  039E                     	;# 
  1337  039F                     	;# 
  1338  0511                     	;# 
  1339  0513                     	;# 
  1340  0515                     	;# 
  1341  051A                     	;# 
  1342  0591                     	;# 
  1343  0592                     	;# 
  1344  0592                     	;# 
  1345  0593                     	;# 
  1346  0594                     	;# 
  1347  0594                     	;# 
  1348  0595                     	;# 
  1349  0596                     	;# 
  1350  0596                     	;# 
  1351  0E91                     	;# 
  1352  0E92                     	;# 
  1353  0E93                     	;# 
  1354  0E94                     	;# 
  1355  0E95                     	;# 
  1356  0E96                     	;# 
  1357  0E97                     	;# 
  1358  0E98                     	;# 
  1359  0E99                     	;# 
  1360  0E9A                     	;# 
  1361  0E9B                     	;# 
  1362  0E9C                     	;# 
  1363  0E9D                     	;# 
  1364  0E9E                     	;# 
  1365  0E9F                     	;# 
  1366  0EA0                     	;# 
  1367  0EA1                     	;# 
  1368  0EA1                     	;# 
  1369  0EA2                     	;# 
  1370  0EA3                     	;# 
  1371  0EA3                     	;# 
  1372  0EA4                     	;# 
  1373  0EA5                     	;# 
  1374  0EA5                     	;# 
  1375  0EA6                     	;# 
  1376  0EA7                     	;# 
  1377  0EA7                     	;# 
  1378  0EA8                     	;# 
  1379  0EA9                     	;# 
  1380  0EAA                     	;# 
  1381  0EAB                     	;# 
  1382  0EAC                     	;# 
  1383  0EAD                     	;# 
  1384  0EAE                     	;# 
  1385  0EAF                     	;# 
  1386  0EB1                     	;# 
  1387  0EB2                     	;# 
  1388  0EB3                     	;# 
  1389  0EB4                     	;# 
  1390  0EB5                     	;# 
  1391  0EB6                     	;# 
  1392  0EB7                     	;# 
  1393  0EB8                     	;# 
  1394  0EB9                     	;# 
  1395  0EBA                     	;# 
  1396  0EBB                     	;# 
  1397  0EBC                     	;# 
  1398  0EBD                     	;# 
  1399  0EBE                     	;# 
  1400  0EBF                     	;# 
  1401  0EC0                     	;# 
  1402  0EC1                     	;# 
  1403  0EC1                     	;# 
  1404  0EC2                     	;# 
  1405  0EC3                     	;# 
  1406  0EC3                     	;# 
  1407  0EC4                     	;# 
  1408  0EC5                     	;# 
  1409  0EC5                     	;# 
  1410  0EC6                     	;# 
  1411  0EC7                     	;# 
  1412  0EC7                     	;# 
  1413  0EC8                     	;# 
  1414  0EC9                     	;# 
  1415  0ECA                     	;# 
  1416  0ECB                     	;# 
  1417  0ECC                     	;# 
  1418  0ECD                     	;# 
  1419  0ECE                     	;# 
  1420  0ECF                     	;# 
  1421  0ED1                     	;# 
  1422  0ED2                     	;# 
  1423  0ED3                     	;# 
  1424  0ED4                     	;# 
  1425  0ED5                     	;# 
  1426  0ED6                     	;# 
  1427  0ED7                     	;# 
  1428  0ED8                     	;# 
  1429  0ED9                     	;# 
  1430  0EDA                     	;# 
  1431  0EDB                     	;# 
  1432  0EDC                     	;# 
  1433  0EDD                     	;# 
  1434  0EDE                     	;# 
  1435  0EDF                     	;# 
  1436  0EE0                     	;# 
  1437  0EE1                     	;# 
  1438  0EE1                     	;# 
  1439  0EE2                     	;# 
  1440  0EE3                     	;# 
  1441  0EE3                     	;# 
  1442  0EE4                     	;# 
  1443  0EE5                     	;# 
  1444  0EE5                     	;# 
  1445  0EE6                     	;# 
  1446  0EE7                     	;# 
  1447  0EE7                     	;# 
  1448  0EE8                     	;# 
  1449  0EE9                     	;# 
  1450  0EEA                     	;# 
  1451  0EEB                     	;# 
  1452  0EEC                     	;# 
  1453  0EED                     	;# 
  1454  0EEE                     	;# 
  1455  0EEF                     	;# 
  1456  0F11                     	;# 
  1457  0F12                     	;# 
  1458  0F13                     	;# 
  1459  0F14                     	;# 
  1460  0F15                     	;# 
  1461  0F16                     	;# 
  1462  0F17                     	;# 
  1463  0F18                     	;# 
  1464  0F19                     	;# 
  1465  0F1A                     	;# 
  1466  0F1B                     	;# 
  1467  0F1C                     	;# 
  1468  0F1D                     	;# 
  1469  0F1E                     	;# 
  1470  0F1F                     	;# 
  1471  0F20                     	;# 
  1472  0F21                     	;# 
  1473  0F21                     	;# 
  1474  0F22                     	;# 
  1475  0F23                     	;# 
  1476  0F23                     	;# 
  1477  0F24                     	;# 
  1478  0F25                     	;# 
  1479  0F25                     	;# 
  1480  0F26                     	;# 
  1481  0F27                     	;# 
  1482  0F27                     	;# 
  1483  0F28                     	;# 
  1484  0F29                     	;# 
  1485  0F2A                     	;# 
  1486  0F2B                     	;# 
  1487  0F2C                     	;# 
  1488  0F2D                     	;# 
  1489  0F2E                     	;# 
  1490  0F2F                     	;# 
  1491  0FE4                     	;# 
  1492  0FE5                     	;# 
  1493  0FE6                     	;# 
  1494  0FE7                     	;# 
  1495  0FE8                     	;# 
  1496  0FE9                     	;# 
  1497  0FEA                     	;# 
  1498  0FEB                     	;# 
  1499  0FED                     	;# 
  1500  0FEE                     	;# 
  1501  0FEF                     	;# 
  1502  0000                     	;# 
  1503  0001                     	;# 
  1504  0002                     	;# 
  1505  0003                     	;# 
  1506  0004                     	;# 
  1507  0005                     	;# 
  1508  0006                     	;# 
  1509  0007                     	;# 
  1510  0008                     	;# 
  1511  0009                     	;# 
  1512  000A                     	;# 
  1513  000B                     	;# 
  1514  000C                     	;# 
  1515  000D                     	;# 
  1516  000E                     	;# 
  1517  000F                     	;# 
  1518  0010                     	;# 
  1519  0011                     	;# 
  1520  0012                     	;# 
  1521  0013                     	;# 
  1522  0014                     	;# 
  1523  0015                     	;# 
  1524  0016                     	;# 
  1525  0016                     	;# 
  1526  0017                     	;# 
  1527  0018                     	;# 
  1528  0019                     	;# 
  1529  001A                     	;# 
  1530  001B                     	;# 
  1531  001C                     	;# 
  1532  008C                     	;# 
  1533  008D                     	;# 
  1534  008E                     	;# 
  1535  008F                     	;# 
  1536  0090                     	;# 
  1537  0091                     	;# 
  1538  0092                     	;# 
  1539  0093                     	;# 
  1540  0094                     	;# 
  1541  0095                     	;# 
  1542  0096                     	;# 
  1543  0097                     	;# 
  1544  0098                     	;# 
  1545  0099                     	;# 
  1546  009A                     	;# 
  1547  009B                     	;# 
  1548  009B                     	;# 
  1549  009C                     	;# 
  1550  009D                     	;# 
  1551  009E                     	;# 
  1552  009F                     	;# 
  1553  010C                     	;# 
  1554  010D                     	;# 
  1555  010E                     	;# 
  1556  010F                     	;# 
  1557  0110                     	;# 
  1558  0111                     	;# 
  1559  0112                     	;# 
  1560  0113                     	;# 
  1561  0114                     	;# 
  1562  0115                     	;# 
  1563  0116                     	;# 
  1564  0117                     	;# 
  1565  0118                     	;# 
  1566  0119                     	;# 
  1567  011A                     	;# 
  1568  011B                     	;# 
  1569  011C                     	;# 
  1570  011D                     	;# 
  1571  011D                     	;# 
  1572  011D                     	;# 
  1573  011E                     	;# 
  1574  011F                     	;# 
  1575  018C                     	;# 
  1576  018D                     	;# 
  1577  018E                     	;# 
  1578  018F                     	;# 
  1579  0190                     	;# 
  1580  0191                     	;# 
  1581  0191                     	;# 
  1582  0192                     	;# 
  1583  0193                     	;# 
  1584  0193                     	;# 
  1585  0193                     	;# 
  1586  0194                     	;# 
  1587  0195                     	;# 
  1588  0196                     	;# 
  1589  0197                     	;# 
  1590  0199                     	;# 
  1591  0199                     	;# 
  1592  0199                     	;# 
  1593  019A                     	;# 
  1594  019A                     	;# 
  1595  019A                     	;# 
  1596  019B                     	;# 
  1597  019B                     	;# 
  1598  019B                     	;# 
  1599  019B                     	;# 
  1600  019B                     	;# 
  1601  019C                     	;# 
  1602  019C                     	;# 
  1603  019C                     	;# 
  1604  019D                     	;# 
  1605  019D                     	;# 
  1606  019D                     	;# 
  1607  019E                     	;# 
  1608  019E                     	;# 
  1609  019E                     	;# 
  1610  019F                     	;# 
  1611  019F                     	;# 
  1612  019F                     	;# 
  1613  019F                     	;# 
  1614  019F                     	;# 
  1615  020C                     	;# 
  1616  020D                     	;# 
  1617  020E                     	;# 
  1618  020F                     	;# 
  1619  0210                     	;# 
  1620  0211                     	;# 
  1621  0211                     	;# 
  1622  0212                     	;# 
  1623  0212                     	;# 
  1624  0213                     	;# 
  1625  0213                     	;# 
  1626  0214                     	;# 
  1627  0214                     	;# 
  1628  0215                     	;# 
  1629  0215                     	;# 
  1630  0215                     	;# 
  1631  0215                     	;# 
  1632  0216                     	;# 
  1633  0216                     	;# 
  1634  0217                     	;# 
  1635  0217                     	;# 
  1636  028C                     	;# 
  1637  028D                     	;# 
  1638  028E                     	;# 
  1639  028F                     	;# 
  1640  0290                     	;# 
  1641  0291                     	;# 
  1642  0291                     	;# 
  1643  0292                     	;# 
  1644  0293                     	;# 
  1645  0298                     	;# 
  1646  0298                     	;# 
  1647  0299                     	;# 
  1648  029A                     	;# 
  1649  030C                     	;# 
  1650  030D                     	;# 
  1651  030E                     	;# 
  1652  030F                     	;# 
  1653  0310                     	;# 
  1654  0311                     	;# 
  1655  0311                     	;# 
  1656  0312                     	;# 
  1657  0313                     	;# 
  1658  038C                     	;# 
  1659  038D                     	;# 
  1660  038E                     	;# 
  1661  038F                     	;# 
  1662  0390                     	;# 
  1663  0391                     	;# 
  1664  0392                     	;# 
  1665  0393                     	;# 
  1666  0394                     	;# 
  1667  0395                     	;# 
  1668  0396                     	;# 
  1669  0397                     	;# 
  1670  0398                     	;# 
  1671  0399                     	;# 
  1672  039D                     	;# 
  1673  039E                     	;# 
  1674  039F                     	;# 
  1675  0511                     	;# 
  1676  0513                     	;# 
  1677  0515                     	;# 
  1678  051A                     	;# 
  1679  0591                     	;# 
  1680  0592                     	;# 
  1681  0592                     	;# 
  1682  0593                     	;# 
  1683  0594                     	;# 
  1684  0594                     	;# 
  1685  0595                     	;# 
  1686  0596                     	;# 
  1687  0596                     	;# 
  1688  0E91                     	;# 
  1689  0E92                     	;# 
  1690  0E93                     	;# 
  1691  0E94                     	;# 
  1692  0E95                     	;# 
  1693  0E96                     	;# 
  1694  0E97                     	;# 
  1695  0E98                     	;# 
  1696  0E99                     	;# 
  1697  0E9A                     	;# 
  1698  0E9B                     	;# 
  1699  0E9C                     	;# 
  1700  0E9D                     	;# 
  1701  0E9E                     	;# 
  1702  0E9F                     	;# 
  1703  0EA0                     	;# 
  1704  0EA1                     	;# 
  1705  0EA1                     	;# 
  1706  0EA2                     	;# 
  1707  0EA3                     	;# 
  1708  0EA3                     	;# 
  1709  0EA4                     	;# 
  1710  0EA5                     	;# 
  1711  0EA5                     	;# 
  1712  0EA6                     	;# 
  1713  0EA7                     	;# 
  1714  0EA7                     	;# 
  1715  0EA8                     	;# 
  1716  0EA9                     	;# 
  1717  0EAA                     	;# 
  1718  0EAB                     	;# 
  1719  0EAC                     	;# 
  1720  0EAD                     	;# 
  1721  0EAE                     	;# 
  1722  0EAF                     	;# 
  1723  0EB1                     	;# 
  1724  0EB2                     	;# 
  1725  0EB3                     	;# 
  1726  0EB4                     	;# 
  1727  0EB5                     	;# 
  1728  0EB6                     	;# 
  1729  0EB7                     	;# 
  1730  0EB8                     	;# 
  1731  0EB9                     	;# 
  1732  0EBA                     	;# 
  1733  0EBB                     	;# 
  1734  0EBC                     	;# 
  1735  0EBD                     	;# 
  1736  0EBE                     	;# 
  1737  0EBF                     	;# 
  1738  0EC0                     	;# 
  1739  0EC1                     	;# 
  1740  0EC1                     	;# 
  1741  0EC2                     	;# 
  1742  0EC3                     	;# 
  1743  0EC3                     	;# 
  1744  0EC4                     	;# 
  1745  0EC5                     	;# 
  1746  0EC5                     	;# 
  1747  0EC6                     	;# 
  1748  0EC7                     	;# 
  1749  0EC7                     	;# 
  1750  0EC8                     	;# 
  1751  0EC9                     	;# 
  1752  0ECA                     	;# 
  1753  0ECB                     	;# 
  1754  0ECC                     	;# 
  1755  0ECD                     	;# 
  1756  0ECE                     	;# 
  1757  0ECF                     	;# 
  1758  0ED1                     	;# 
  1759  0ED2                     	;# 
  1760  0ED3                     	;# 
  1761  0ED4                     	;# 
  1762  0ED5                     	;# 
  1763  0ED6                     	;# 
  1764  0ED7                     	;# 
  1765  0ED8                     	;# 
  1766  0ED9                     	;# 
  1767  0EDA                     	;# 
  1768  0EDB                     	;# 
  1769  0EDC                     	;# 
  1770  0EDD                     	;# 
  1771  0EDE                     	;# 
  1772  0EDF                     	;# 
  1773  0EE0                     	;# 
  1774  0EE1                     	;# 
  1775  0EE1                     	;# 
  1776  0EE2                     	;# 
  1777  0EE3                     	;# 
  1778  0EE3                     	;# 
  1779  0EE4                     	;# 
  1780  0EE5                     	;# 
  1781  0EE5                     	;# 
  1782  0EE6                     	;# 
  1783  0EE7                     	;# 
  1784  0EE7                     	;# 
  1785  0EE8                     	;# 
  1786  0EE9                     	;# 
  1787  0EEA                     	;# 
  1788  0EEB                     	;# 
  1789  0EEC                     	;# 
  1790  0EED                     	;# 
  1791  0EEE                     	;# 
  1792  0EEF                     	;# 
  1793  0F11                     	;# 
  1794  0F12                     	;# 
  1795  0F13                     	;# 
  1796  0F14                     	;# 
  1797  0F15                     	;# 
  1798  0F16                     	;# 
  1799  0F17                     	;# 
  1800  0F18                     	;# 
  1801  0F19                     	;# 
  1802  0F1A                     	;# 
  1803  0F1B                     	;# 
  1804  0F1C                     	;# 
  1805  0F1D                     	;# 
  1806  0F1E                     	;# 
  1807  0F1F                     	;# 
  1808  0F20                     	;# 
  1809  0F21                     	;# 
  1810  0F21                     	;# 
  1811  0F22                     	;# 
  1812  0F23                     	;# 
  1813  0F23                     	;# 
  1814  0F24                     	;# 
  1815  0F25                     	;# 
  1816  0F25                     	;# 
  1817  0F26                     	;# 
  1818  0F27                     	;# 
  1819  0F27                     	;# 
  1820  0F28                     	;# 
  1821  0F29                     	;# 
  1822  0F2A                     	;# 
  1823  0F2B                     	;# 
  1824  0F2C                     	;# 
  1825  0F2D                     	;# 
  1826  0F2E                     	;# 
  1827  0F2F                     	;# 
  1828  0FE4                     	;# 
  1829  0FE5                     	;# 
  1830  0FE6                     	;# 
  1831  0FE7                     	;# 
  1832  0FE8                     	;# 
  1833  0FE9                     	;# 
  1834  0FEA                     	;# 
  1835  0FEB                     	;# 
  1836  0FED                     	;# 
  1837  0FEE                     	;# 
  1838  0FEF                     	;# 
  1839  0000                     	;# 
  1840  0001                     	;# 
  1841  0002                     	;# 
  1842  0003                     	;# 
  1843  0004                     	;# 
  1844  0005                     	;# 
  1845  0006                     	;# 
  1846  0007                     	;# 
  1847  0008                     	;# 
  1848  0009                     	;# 
  1849  000A                     	;# 
  1850  000B                     	;# 
  1851  000C                     	;# 
  1852  000D                     	;# 
  1853  000E                     	;# 
  1854  000F                     	;# 
  1855  0010                     	;# 
  1856  0011                     	;# 
  1857  0012                     	;# 
  1858  0013                     	;# 
  1859  0014                     	;# 
  1860  0015                     	;# 
  1861  0016                     	;# 
  1862  0016                     	;# 
  1863  0017                     	;# 
  1864  0018                     	;# 
  1865  0019                     	;# 
  1866  001A                     	;# 
  1867  001B                     	;# 
  1868  001C                     	;# 
  1869  008C                     	;# 
  1870  008D                     	;# 
  1871  008E                     	;# 
  1872  008F                     	;# 
  1873  0090                     	;# 
  1874  0091                     	;# 
  1875  0092                     	;# 
  1876  0093                     	;# 
  1877  0094                     	;# 
  1878  0095                     	;# 
  1879  0096                     	;# 
  1880  0097                     	;# 
  1881  0098                     	;# 
  1882  0099                     	;# 
  1883  009A                     	;# 
  1884  009B                     	;# 
  1885  009B                     	;# 
  1886  009C                     	;# 
  1887  009D                     	;# 
  1888  009E                     	;# 
  1889  009F                     	;# 
  1890  010C                     	;# 
  1891  010D                     	;# 
  1892  010E                     	;# 
  1893  010F                     	;# 
  1894  0110                     	;# 
  1895  0111                     	;# 
  1896  0112                     	;# 
  1897  0113                     	;# 
  1898  0114                     	;# 
  1899  0115                     	;# 
  1900  0116                     	;# 
  1901  0117                     	;# 
  1902  0118                     	;# 
  1903  0119                     	;# 
  1904  011A                     	;# 
  1905  011B                     	;# 
  1906  011C                     	;# 
  1907  011D                     	;# 
  1908  011D                     	;# 
  1909  011D                     	;# 
  1910  011E                     	;# 
  1911  011F                     	;# 
  1912  018C                     	;# 
  1913  018D                     	;# 
  1914  018E                     	;# 
  1915  018F                     	;# 
  1916  0190                     	;# 
  1917  0191                     	;# 
  1918  0191                     	;# 
  1919  0192                     	;# 
  1920  0193                     	;# 
  1921  0193                     	;# 
  1922  0193                     	;# 
  1923  0194                     	;# 
  1924  0195                     	;# 
  1925  0196                     	;# 
  1926  0197                     	;# 
  1927  0199                     	;# 
  1928  0199                     	;# 
  1929  0199                     	;# 
  1930  019A                     	;# 
  1931  019A                     	;# 
  1932  019A                     	;# 
  1933  019B                     	;# 
  1934  019B                     	;# 
  1935  019B                     	;# 
  1936  019B                     	;# 
  1937  019B                     	;# 
  1938  019C                     	;# 
  1939  019C                     	;# 
  1940  019C                     	;# 
  1941  019D                     	;# 
  1942  019D                     	;# 
  1943  019D                     	;# 
  1944  019E                     	;# 
  1945  019E                     	;# 
  1946  019E                     	;# 
  1947  019F                     	;# 
  1948  019F                     	;# 
  1949  019F                     	;# 
  1950  019F                     	;# 
  1951  019F                     	;# 
  1952  020C                     	;# 
  1953  020D                     	;# 
  1954  020E                     	;# 
  1955  020F                     	;# 
  1956  0210                     	;# 
  1957  0211                     	;# 
  1958  0211                     	;# 
  1959  0212                     	;# 
  1960  0212                     	;# 
  1961  0213                     	;# 
  1962  0213                     	;# 
  1963  0214                     	;# 
  1964  0214                     	;# 
  1965  0215                     	;# 
  1966  0215                     	;# 
  1967  0215                     	;# 
  1968  0215                     	;# 
  1969  0216                     	;# 
  1970  0216                     	;# 
  1971  0217                     	;# 
  1972  0217                     	;# 
  1973  028C                     	;# 
  1974  028D                     	;# 
  1975  028E                     	;# 
  1976  028F                     	;# 
  1977  0290                     	;# 
  1978  0291                     	;# 
  1979  0291                     	;# 
  1980  0292                     	;# 
  1981  0293                     	;# 
  1982  0298                     	;# 
  1983  0298                     	;# 
  1984  0299                     	;# 
  1985  029A                     	;# 
  1986  030C                     	;# 
  1987  030D                     	;# 
  1988  030E                     	;# 
  1989  030F                     	;# 
  1990  0310                     	;# 
  1991  0311                     	;# 
  1992  0311                     	;# 
  1993  0312                     	;# 
  1994  0313                     	;# 
  1995  038C                     	;# 
  1996  038D                     	;# 
  1997  038E                     	;# 
  1998  038F                     	;# 
  1999  0390                     	;# 
  2000  0391                     	;# 
  2001  0392                     	;# 
  2002  0393                     	;# 
  2003  0394                     	;# 
  2004  0395                     	;# 
  2005  0396                     	;# 
  2006  0397                     	;# 
  2007  0398                     	;# 
  2008  0399                     	;# 
  2009  039D                     	;# 
  2010  039E                     	;# 
  2011  039F                     	;# 
  2012  0511                     	;# 
  2013  0513                     	;# 
  2014  0515                     	;# 
  2015  051A                     	;# 
  2016  0591                     	;# 
  2017  0592                     	;# 
  2018  0592                     	;# 
  2019  0593                     	;# 
  2020  0594                     	;# 
  2021  0594                     	;# 
  2022  0595                     	;# 
  2023  0596                     	;# 
  2024  0596                     	;# 
  2025  0E91                     	;# 
  2026  0E92                     	;# 
  2027  0E93                     	;# 
  2028  0E94                     	;# 
  2029  0E95                     	;# 
  2030  0E96                     	;# 
  2031  0E97                     	;# 
  2032  0E98                     	;# 
  2033  0E99                     	;# 
  2034  0E9A                     	;# 
  2035  0E9B                     	;# 
  2036  0E9C                     	;# 
  2037  0E9D                     	;# 
  2038  0E9E                     	;# 
  2039  0E9F                     	;# 
  2040  0EA0                     	;# 
  2041  0EA1                     	;# 
  2042  0EA1                     	;# 
  2043  0EA2                     	;# 
  2044  0EA3                     	;# 
  2045  0EA3                     	;# 
  2046  0EA4                     	;# 
  2047  0EA5                     	;# 
  2048  0EA5                     	;# 
  2049  0EA6                     	;# 
  2050  0EA7                     	;# 
  2051  0EA7                     	;# 
  2052  0EA8                     	;# 
  2053  0EA9                     	;# 
  2054  0EAA                     	;# 
  2055  0EAB                     	;# 
  2056  0EAC                     	;# 
  2057  0EAD                     	;# 
  2058  0EAE                     	;# 
  2059  0EAF                     	;# 
  2060  0EB1                     	;# 
  2061  0EB2                     	;# 
  2062  0EB3                     	;# 
  2063  0EB4                     	;# 
  2064  0EB5                     	;# 
  2065  0EB6                     	;# 
  2066  0EB7                     	;# 
  2067  0EB8                     	;# 
  2068  0EB9                     	;# 
  2069  0EBA                     	;# 
  2070  0EBB                     	;# 
  2071  0EBC                     	;# 
  2072  0EBD                     	;# 
  2073  0EBE                     	;# 
  2074  0EBF                     	;# 
  2075  0EC0                     	;# 
  2076  0EC1                     	;# 
  2077  0EC1                     	;# 
  2078  0EC2                     	;# 
  2079  0EC3                     	;# 
  2080  0EC3                     	;# 
  2081  0EC4                     	;# 
  2082  0EC5                     	;# 
  2083  0EC5                     	;# 
  2084  0EC6                     	;# 
  2085  0EC7                     	;# 
  2086  0EC7                     	;# 
  2087  0EC8                     	;# 
  2088  0EC9                     	;# 
  2089  0ECA                     	;# 
  2090  0ECB                     	;# 
  2091  0ECC                     	;# 
  2092  0ECD                     	;# 
  2093  0ECE                     	;# 
  2094  0ECF                     	;# 
  2095  0ED1                     	;# 
  2096  0ED2                     	;# 
  2097  0ED3                     	;# 
  2098  0ED4                     	;# 
  2099  0ED5                     	;# 
  2100  0ED6                     	;# 
  2101  0ED7                     	;# 
  2102  0ED8                     	;# 
  2103  0ED9                     	;# 
  2104  0EDA                     	;# 
  2105  0EDB                     	;# 
  2106  0EDC                     	;# 
  2107  0EDD                     	;# 
  2108  0EDE                     	;# 
  2109  0EDF                     	;# 
  2110  0EE0                     	;# 
  2111  0EE1                     	;# 
  2112  0EE1                     	;# 
  2113  0EE2                     	;# 
  2114  0EE3                     	;# 
  2115  0EE3                     	;# 
  2116  0EE4                     	;# 
  2117  0EE5                     	;# 
  2118  0EE5                     	;# 
  2119  0EE6                     	;# 
  2120  0EE7                     	;# 
  2121  0EE7                     	;# 
  2122  0EE8                     	;# 
  2123  0EE9                     	;# 
  2124  0EEA                     	;# 
  2125  0EEB                     	;# 
  2126  0EEC                     	;# 
  2127  0EED                     	;# 
  2128  0EEE                     	;# 
  2129  0EEF                     	;# 
  2130  0F11                     	;# 
  2131  0F12                     	;# 
  2132  0F13                     	;# 
  2133  0F14                     	;# 
  2134  0F15                     	;# 
  2135  0F16                     	;# 
  2136  0F17                     	;# 
  2137  0F18                     	;# 
  2138  0F19                     	;# 
  2139  0F1A                     	;# 
  2140  0F1B                     	;# 
  2141  0F1C                     	;# 
  2142  0F1D                     	;# 
  2143  0F1E                     	;# 
  2144  0F1F                     	;# 
  2145  0F20                     	;# 
  2146  0F21                     	;# 
  2147  0F21                     	;# 
  2148  0F22                     	;# 
  2149  0F23                     	;# 
  2150  0F23                     	;# 
  2151  0F24                     	;# 
  2152  0F25                     	;# 
  2153  0F25                     	;# 
  2154  0F26                     	;# 
  2155  0F27                     	;# 
  2156  0F27                     	;# 
  2157  0F28                     	;# 
  2158  0F29                     	;# 
  2159  0F2A                     	;# 
  2160  0F2B                     	;# 
  2161  0F2C                     	;# 
  2162  0F2D                     	;# 
  2163  0F2E                     	;# 
  2164  0F2F                     	;# 
  2165  0FE4                     	;# 
  2166  0FE5                     	;# 
  2167  0FE6                     	;# 
  2168  0FE7                     	;# 
  2169  0FE8                     	;# 
  2170  0FE9                     	;# 
  2171  0FEA                     	;# 
  2172  0FEB                     	;# 
  2173  0FED                     	;# 
  2174  0FEE                     	;# 
  2175  0FEF                     	;# 
  2176  0000                     	;# 
  2177  0001                     	;# 
  2178  0002                     	;# 
  2179  0003                     	;# 
  2180  0004                     	;# 
  2181  0005                     	;# 
  2182  0006                     	;# 
  2183  0007                     	;# 
  2184  0008                     	;# 
  2185  0009                     	;# 
  2186  000A                     	;# 
  2187  000B                     	;# 
  2188  000C                     	;# 
  2189  000D                     	;# 
  2190  000E                     	;# 
  2191  000F                     	;# 
  2192  0010                     	;# 
  2193  0011                     	;# 
  2194  0012                     	;# 
  2195  0013                     	;# 
  2196  0014                     	;# 
  2197  0015                     	;# 
  2198  0016                     	;# 
  2199  0016                     	;# 
  2200  0017                     	;# 
  2201  0018                     	;# 
  2202  0019                     	;# 
  2203  001A                     	;# 
  2204  001B                     	;# 
  2205  001C                     	;# 
  2206  008C                     	;# 
  2207  008D                     	;# 
  2208  008E                     	;# 
  2209  008F                     	;# 
  2210  0090                     	;# 
  2211  0091                     	;# 
  2212  0092                     	;# 
  2213  0093                     	;# 
  2214  0094                     	;# 
  2215  0095                     	;# 
  2216  0096                     	;# 
  2217  0097                     	;# 
  2218  0098                     	;# 
  2219  0099                     	;# 
  2220  009A                     	;# 
  2221  009B                     	;# 
  2222  009B                     	;# 
  2223  009C                     	;# 
  2224  009D                     	;# 
  2225  009E                     	;# 
  2226  009F                     	;# 
  2227  010C                     	;# 
  2228  010D                     	;# 
  2229  010E                     	;# 
  2230  010F                     	;# 
  2231  0110                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0113                     	;# 
  2235  0114                     	;# 
  2236  0115                     	;# 
  2237  0116                     	;# 
  2238  0117                     	;# 
  2239  0118                     	;# 
  2240  0119                     	;# 
  2241  011A                     	;# 
  2242  011B                     	;# 
  2243  011C                     	;# 
  2244  011D                     	;# 
  2245  011D                     	;# 
  2246  011D                     	;# 
  2247  011E                     	;# 
  2248  011F                     	;# 
  2249  018C                     	;# 
  2250  018D                     	;# 
  2251  018E                     	;# 
  2252  018F                     	;# 
  2253  0190                     	;# 
  2254  0191                     	;# 
  2255  0191                     	;# 
  2256  0192                     	;# 
  2257  0193                     	;# 
  2258  0193                     	;# 
  2259  0193                     	;# 
  2260  0194                     	;# 
  2261  0195                     	;# 
  2262  0196                     	;# 
  2263  0197                     	;# 
  2264  0199                     	;# 
  2265  0199                     	;# 
  2266  0199                     	;# 
  2267  019A                     	;# 
  2268  019A                     	;# 
  2269  019A                     	;# 
  2270  019B                     	;# 
  2271  019B                     	;# 
  2272  019B                     	;# 
  2273  019B                     	;# 
  2274  019B                     	;# 
  2275  019C                     	;# 
  2276  019C                     	;# 
  2277  019C                     	;# 
  2278  019D                     	;# 
  2279  019D                     	;# 
  2280  019D                     	;# 
  2281  019E                     	;# 
  2282  019E                     	;# 
  2283  019E                     	;# 
  2284  019F                     	;# 
  2285  019F                     	;# 
  2286  019F                     	;# 
  2287  019F                     	;# 
  2288  019F                     	;# 
  2289  020C                     	;# 
  2290  020D                     	;# 
  2291  020E                     	;# 
  2292  020F                     	;# 
  2293  0210                     	;# 
  2294  0211                     	;# 
  2295  0211                     	;# 
  2296  0212                     	;# 
  2297  0212                     	;# 
  2298  0213                     	;# 
  2299  0213                     	;# 
  2300  0214                     	;# 
  2301  0214                     	;# 
  2302  0215                     	;# 
  2303  0215                     	;# 
  2304  0215                     	;# 
  2305  0215                     	;# 
  2306  0216                     	;# 
  2307  0216                     	;# 
  2308  0217                     	;# 
  2309  0217                     	;# 
  2310  028C                     	;# 
  2311  028D                     	;# 
  2312  028E                     	;# 
  2313  028F                     	;# 
  2314  0290                     	;# 
  2315  0291                     	;# 
  2316  0291                     	;# 
  2317  0292                     	;# 
  2318  0293                     	;# 
  2319  0298                     	;# 
  2320  0298                     	;# 
  2321  0299                     	;# 
  2322  029A                     	;# 
  2323  030C                     	;# 
  2324  030D                     	;# 
  2325  030E                     	;# 
  2326  030F                     	;# 
  2327  0310                     	;# 
  2328  0311                     	;# 
  2329  0311                     	;# 
  2330  0312                     	;# 
  2331  0313                     	;# 
  2332  038C                     	;# 
  2333  038D                     	;# 
  2334  038E                     	;# 
  2335  038F                     	;# 
  2336  0390                     	;# 
  2337  0391                     	;# 
  2338  0392                     	;# 
  2339  0393                     	;# 
  2340  0394                     	;# 
  2341  0395                     	;# 
  2342  0396                     	;# 
  2343  0397                     	;# 
  2344  0398                     	;# 
  2345  0399                     	;# 
  2346  039D                     	;# 
  2347  039E                     	;# 
  2348  039F                     	;# 
  2349  0511                     	;# 
  2350  0513                     	;# 
  2351  0515                     	;# 
  2352  051A                     	;# 
  2353  0591                     	;# 
  2354  0592                     	;# 
  2355  0592                     	;# 
  2356  0593                     	;# 
  2357  0594                     	;# 
  2358  0594                     	;# 
  2359  0595                     	;# 
  2360  0596                     	;# 
  2361  0596                     	;# 
  2362  0E91                     	;# 
  2363  0E92                     	;# 
  2364  0E93                     	;# 
  2365  0E94                     	;# 
  2366  0E95                     	;# 
  2367  0E96                     	;# 
  2368  0E97                     	;# 
  2369  0E98                     	;# 
  2370  0E99                     	;# 
  2371  0E9A                     	;# 
  2372  0E9B                     	;# 
  2373  0E9C                     	;# 
  2374  0E9D                     	;# 
  2375  0E9E                     	;# 
  2376  0E9F                     	;# 
  2377  0EA0                     	;# 
  2378  0EA1                     	;# 
  2379  0EA1                     	;# 
  2380  0EA2                     	;# 
  2381  0EA3                     	;# 
  2382  0EA3                     	;# 
  2383  0EA4                     	;# 
  2384  0EA5                     	;# 
  2385  0EA5                     	;# 
  2386  0EA6                     	;# 
  2387  0EA7                     	;# 
  2388  0EA7                     	;# 
  2389  0EA8                     	;# 
  2390  0EA9                     	;# 
  2391  0EAA                     	;# 
  2392  0EAB                     	;# 
  2393  0EAC                     	;# 
  2394  0EAD                     	;# 
  2395  0EAE                     	;# 
  2396  0EAF                     	;# 
  2397  0EB1                     	;# 
  2398  0EB2                     	;# 
  2399  0EB3                     	;# 
  2400  0EB4                     	;# 
  2401  0EB5                     	;# 
  2402  0EB6                     	;# 
  2403  0EB7                     	;# 
  2404  0EB8                     	;# 
  2405  0EB9                     	;# 
  2406  0EBA                     	;# 
  2407  0EBB                     	;# 
  2408  0EBC                     	;# 
  2409  0EBD                     	;# 
  2410  0EBE                     	;# 
  2411  0EBF                     	;# 
  2412  0EC0                     	;# 
  2413  0EC1                     	;# 
  2414  0EC1                     	;# 
  2415  0EC2                     	;# 
  2416  0EC3                     	;# 
  2417  0EC3                     	;# 
  2418  0EC4                     	;# 
  2419  0EC5                     	;# 
  2420  0EC5                     	;# 
  2421  0EC6                     	;# 
  2422  0EC7                     	;# 
  2423  0EC7                     	;# 
  2424  0EC8                     	;# 
  2425  0EC9                     	;# 
  2426  0ECA                     	;# 
  2427  0ECB                     	;# 
  2428  0ECC                     	;# 
  2429  0ECD                     	;# 
  2430  0ECE                     	;# 
  2431  0ECF                     	;# 
  2432  0ED1                     	;# 
  2433  0ED2                     	;# 
  2434  0ED3                     	;# 
  2435  0ED4                     	;# 
  2436  0ED5                     	;# 
  2437  0ED6                     	;# 
  2438  0ED7                     	;# 
  2439  0ED8                     	;# 
  2440  0ED9                     	;# 
  2441  0EDA                     	;# 
  2442  0EDB                     	;# 
  2443  0EDC                     	;# 
  2444  0EDD                     	;# 
  2445  0EDE                     	;# 
  2446  0EDF                     	;# 
  2447  0EE0                     	;# 
  2448  0EE1                     	;# 
  2449  0EE1                     	;# 
  2450  0EE2                     	;# 
  2451  0EE3                     	;# 
  2452  0EE3                     	;# 
  2453  0EE4                     	;# 
  2454  0EE5                     	;# 
  2455  0EE5                     	;# 
  2456  0EE6                     	;# 
  2457  0EE7                     	;# 
  2458  0EE7                     	;# 
  2459  0EE8                     	;# 
  2460  0EE9                     	;# 
  2461  0EEA                     	;# 
  2462  0EEB                     	;# 
  2463  0EEC                     	;# 
  2464  0EED                     	;# 
  2465  0EEE                     	;# 
  2466  0EEF                     	;# 
  2467  0F11                     	;# 
  2468  0F12                     	;# 
  2469  0F13                     	;# 
  2470  0F14                     	;# 
  2471  0F15                     	;# 
  2472  0F16                     	;# 
  2473  0F17                     	;# 
  2474  0F18                     	;# 
  2475  0F19                     	;# 
  2476  0F1A                     	;# 
  2477  0F1B                     	;# 
  2478  0F1C                     	;# 
  2479  0F1D                     	;# 
  2480  0F1E                     	;# 
  2481  0F1F                     	;# 
  2482  0F20                     	;# 
  2483  0F21                     	;# 
  2484  0F21                     	;# 
  2485  0F22                     	;# 
  2486  0F23                     	;# 
  2487  0F23                     	;# 
  2488  0F24                     	;# 
  2489  0F25                     	;# 
  2490  0F25                     	;# 
  2491  0F26                     	;# 
  2492  0F27                     	;# 
  2493  0F27                     	;# 
  2494  0F28                     	;# 
  2495  0F29                     	;# 
  2496  0F2A                     	;# 
  2497  0F2B                     	;# 
  2498  0F2C                     	;# 
  2499  0F2D                     	;# 
  2500  0F2E                     	;# 
  2501  0F2F                     	;# 
  2502  0FE4                     	;# 
  2503  0FE5                     	;# 
  2504  0FE6                     	;# 
  2505  0FE7                     	;# 
  2506  0FE8                     	;# 
  2507  0FE9                     	;# 
  2508  0FEA                     	;# 
  2509  0FEB                     	;# 
  2510  0FED                     	;# 
  2511  0FEE                     	;# 
  2512  0FEF                     	;# 
  2513  0000                     	;# 
  2514  0001                     	;# 
  2515  0002                     	;# 
  2516  0003                     	;# 
  2517  0004                     	;# 
  2518  0005                     	;# 
  2519  0006                     	;# 
  2520  0007                     	;# 
  2521  0008                     	;# 
  2522  0009                     	;# 
  2523  000A                     	;# 
  2524  000B                     	;# 
  2525  000C                     	;# 
  2526  000D                     	;# 
  2527  000E                     	;# 
  2528  000F                     	;# 
  2529  0010                     	;# 
  2530  0011                     	;# 
  2531  0012                     	;# 
  2532  0013                     	;# 
  2533  0014                     	;# 
  2534  0015                     	;# 
  2535  0016                     	;# 
  2536  0016                     	;# 
  2537  0017                     	;# 
  2538  0018                     	;# 
  2539  0019                     	;# 
  2540  001A                     	;# 
  2541  001B                     	;# 
  2542  001C                     	;# 
  2543  008C                     	;# 
  2544  008D                     	;# 
  2545  008E                     	;# 
  2546  008F                     	;# 
  2547  0090                     	;# 
  2548  0091                     	;# 
  2549  0092                     	;# 
  2550  0093                     	;# 
  2551  0094                     	;# 
  2552  0095                     	;# 
  2553  0096                     	;# 
  2554  0097                     	;# 
  2555  0098                     	;# 
  2556  0099                     	;# 
  2557  009A                     	;# 
  2558  009B                     	;# 
  2559  009B                     	;# 
  2560  009C                     	;# 
  2561  009D                     	;# 
  2562  009E                     	;# 
  2563  009F                     	;# 
  2564  010C                     	;# 
  2565  010D                     	;# 
  2566  010E                     	;# 
  2567  010F                     	;# 
  2568  0110                     	;# 
  2569  0111                     	;# 
  2570  0112                     	;# 
  2571  0113                     	;# 
  2572  0114                     	;# 
  2573  0115                     	;# 
  2574  0116                     	;# 
  2575  0117                     	;# 
  2576  0118                     	;# 
  2577  0119                     	;# 
  2578  011A                     	;# 
  2579  011B                     	;# 
  2580  011C                     	;# 
  2581  011D                     	;# 
  2582  011D                     	;# 
  2583  011D                     	;# 
  2584  011E                     	;# 
  2585  011F                     	;# 
  2586  018C                     	;# 
  2587  018D                     	;# 
  2588  018E                     	;# 
  2589  018F                     	;# 
  2590  0190                     	;# 
  2591  0191                     	;# 
  2592  0191                     	;# 
  2593  0192                     	;# 
  2594  0193                     	;# 
  2595  0193                     	;# 
  2596  0193                     	;# 
  2597  0194                     	;# 
  2598  0195                     	;# 
  2599  0196                     	;# 
  2600  0197                     	;# 
  2601  0199                     	;# 
  2602  0199                     	;# 
  2603  0199                     	;# 
  2604  019A                     	;# 
  2605  019A                     	;# 
  2606  019A                     	;# 
  2607  019B                     	;# 
  2608  019B                     	;# 
  2609  019B                     	;# 
  2610  019B                     	;# 
  2611  019B                     	;# 
  2612  019C                     	;# 
  2613  019C                     	;# 
  2614  019C                     	;# 
  2615  019D                     	;# 
  2616  019D                     	;# 
  2617  019D                     	;# 
  2618  019E                     	;# 
  2619  019E                     	;# 
  2620  019E                     	;# 
  2621  019F                     	;# 
  2622  019F                     	;# 
  2623  019F                     	;# 
  2624  019F                     	;# 
  2625  019F                     	;# 
  2626  020C                     	;# 
  2627  020D                     	;# 
  2628  020E                     	;# 
  2629  020F                     	;# 
  2630  0210                     	;# 
  2631  0211                     	;# 
  2632  0211                     	;# 
  2633  0212                     	;# 
  2634  0212                     	;# 
  2635  0213                     	;# 
  2636  0213                     	;# 
  2637  0214                     	;# 
  2638  0214                     	;# 
  2639  0215                     	;# 
  2640  0215                     	;# 
  2641  0215                     	;# 
  2642  0215                     	;# 
  2643  0216                     	;# 
  2644  0216                     	;# 
  2645  0217                     	;# 
  2646  0217                     	;# 
  2647  028C                     	;# 
  2648  028D                     	;# 
  2649  028E                     	;# 
  2650  028F                     	;# 
  2651  0290                     	;# 
  2652  0291                     	;# 
  2653  0291                     	;# 
  2654  0292                     	;# 
  2655  0293                     	;# 
  2656  0298                     	;# 
  2657  0298                     	;# 
  2658  0299                     	;# 
  2659  029A                     	;# 
  2660  030C                     	;# 
  2661  030D                     	;# 
  2662  030E                     	;# 
  2663  030F                     	;# 
  2664  0310                     	;# 
  2665  0311                     	;# 
  2666  0311                     	;# 
  2667  0312                     	;# 
  2668  0313                     	;# 
  2669  038C                     	;# 
  2670  038D                     	;# 
  2671  038E                     	;# 
  2672  038F                     	;# 
  2673  0390                     	;# 
  2674  0391                     	;# 
  2675  0392                     	;# 
  2676  0393                     	;# 
  2677  0394                     	;# 
  2678  0395                     	;# 
  2679  0396                     	;# 
  2680  0397                     	;# 
  2681  0398                     	;# 
  2682  0399                     	;# 
  2683  039D                     	;# 
  2684  039E                     	;# 
  2685  039F                     	;# 
  2686  0511                     	;# 
  2687  0513                     	;# 
  2688  0515                     	;# 
  2689  051A                     	;# 
  2690  0591                     	;# 
  2691  0592                     	;# 
  2692  0592                     	;# 
  2693  0593                     	;# 
  2694  0594                     	;# 
  2695  0594                     	;# 
  2696  0595                     	;# 
  2697  0596                     	;# 
  2698  0596                     	;# 
  2699  0E91                     	;# 
  2700  0E92                     	;# 
  2701  0E93                     	;# 
  2702  0E94                     	;# 
  2703  0E95                     	;# 
  2704  0E96                     	;# 
  2705  0E97                     	;# 
  2706  0E98                     	;# 
  2707  0E99                     	;# 
  2708  0E9A                     	;# 
  2709  0E9B                     	;# 
  2710  0E9C                     	;# 
  2711  0E9D                     	;# 
  2712  0E9E                     	;# 
  2713  0E9F                     	;# 
  2714  0EA0                     	;# 
  2715  0EA1                     	;# 
  2716  0EA1                     	;# 
  2717  0EA2                     	;# 
  2718  0EA3                     	;# 
  2719  0EA3                     	;# 
  2720  0EA4                     	;# 
  2721  0EA5                     	;# 
  2722  0EA5                     	;# 
  2723  0EA6                     	;# 
  2724  0EA7                     	;# 
  2725  0EA7                     	;# 
  2726  0EA8                     	;# 
  2727  0EA9                     	;# 
  2728  0EAA                     	;# 
  2729  0EAB                     	;# 
  2730  0EAC                     	;# 
  2731  0EAD                     	;# 
  2732  0EAE                     	;# 
  2733  0EAF                     	;# 
  2734  0EB1                     	;# 
  2735  0EB2                     	;# 
  2736  0EB3                     	;# 
  2737  0EB4                     	;# 
  2738  0EB5                     	;# 
  2739  0EB6                     	;# 
  2740  0EB7                     	;# 
  2741  0EB8                     	;# 
  2742  0EB9                     	;# 
  2743  0EBA                     	;# 
  2744  0EBB                     	;# 
  2745  0EBC                     	;# 
  2746  0EBD                     	;# 
  2747  0EBE                     	;# 
  2748  0EBF                     	;# 
  2749  0EC0                     	;# 
  2750  0EC1                     	;# 
  2751  0EC1                     	;# 
  2752  0EC2                     	;# 
  2753  0EC3                     	;# 
  2754  0EC3                     	;# 
  2755  0EC4                     	;# 
  2756  0EC5                     	;# 
  2757  0EC5                     	;# 
  2758  0EC6                     	;# 
  2759  0EC7                     	;# 
  2760  0EC7                     	;# 
  2761  0EC8                     	;# 
  2762  0EC9                     	;# 
  2763  0ECA                     	;# 
  2764  0ECB                     	;# 
  2765  0ECC                     	;# 
  2766  0ECD                     	;# 
  2767  0ECE                     	;# 
  2768  0ECF                     	;# 
  2769  0ED1                     	;# 
  2770  0ED2                     	;# 
  2771  0ED3                     	;# 
  2772  0ED4                     	;# 
  2773  0ED5                     	;# 
  2774  0ED6                     	;# 
  2775  0ED7                     	;# 
  2776  0ED8                     	;# 
  2777  0ED9                     	;# 
  2778  0EDA                     	;# 
  2779  0EDB                     	;# 
  2780  0EDC                     	;# 
  2781  0EDD                     	;# 
  2782  0EDE                     	;# 
  2783  0EDF                     	;# 
  2784  0EE0                     	;# 
  2785  0EE1                     	;# 
  2786  0EE1                     	;# 
  2787  0EE2                     	;# 
  2788  0EE3                     	;# 
  2789  0EE3                     	;# 
  2790  0EE4                     	;# 
  2791  0EE5                     	;# 
  2792  0EE5                     	;# 
  2793  0EE6                     	;# 
  2794  0EE7                     	;# 
  2795  0EE7                     	;# 
  2796  0EE8                     	;# 
  2797  0EE9                     	;# 
  2798  0EEA                     	;# 
  2799  0EEB                     	;# 
  2800  0EEC                     	;# 
  2801  0EED                     	;# 
  2802  0EEE                     	;# 
  2803  0EEF                     	;# 
  2804  0F11                     	;# 
  2805  0F12                     	;# 
  2806  0F13                     	;# 
  2807  0F14                     	;# 
  2808  0F15                     	;# 
  2809  0F16                     	;# 
  2810  0F17                     	;# 
  2811  0F18                     	;# 
  2812  0F19                     	;# 
  2813  0F1A                     	;# 
  2814  0F1B                     	;# 
  2815  0F1C                     	;# 
  2816  0F1D                     	;# 
  2817  0F1E                     	;# 
  2818  0F1F                     	;# 
  2819  0F20                     	;# 
  2820  0F21                     	;# 
  2821  0F21                     	;# 
  2822  0F22                     	;# 
  2823  0F23                     	;# 
  2824  0F23                     	;# 
  2825  0F24                     	;# 
  2826  0F25                     	;# 
  2827  0F25                     	;# 
  2828  0F26                     	;# 
  2829  0F27                     	;# 
  2830  0F27                     	;# 
  2831  0F28                     	;# 
  2832  0F29                     	;# 
  2833  0F2A                     	;# 
  2834  0F2B                     	;# 
  2835  0F2C                     	;# 
  2836  0F2D                     	;# 
  2837  0F2E                     	;# 
  2838  0F2F                     	;# 
  2839  0FE4                     	;# 
  2840  0FE5                     	;# 
  2841  0FE6                     	;# 
  2842  0FE7                     	;# 
  2843  0FE8                     	;# 
  2844  0FE9                     	;# 
  2845  0FEA                     	;# 
  2846  0FEB                     	;# 
  2847  0FED                     	;# 
  2848  0FEE                     	;# 
  2849  0FEF                     	;# 
  2850                           
  2851                           	psect	idataBANK2
  2852  282C                     __pidataBANK2:	
  2853                           
  2854                           ;initializer for _configReg
  2855  282C  3400               	retlw	0
  2856  282D  3490               	retlw	144
  2857  282E  341F               	retlw	31
  2858  282F  34C4               	retlw	196
  2859  2830  3400               	retlw	0
  2860  2831  3490               	retlw	144
  2861                           
  2862                           	psect	idataBANK5
  2863  2832                     __pidataBANK5:	
  2864                           
  2865                           ;initializer for _tempChannels
  2866  2832  340C               	retlw	12
  2867  2833  340A               	retlw	10
  2868  2834  3408               	retlw	8
  2869  2835  3409               	retlw	9
  2870  2836  340B               	retlw	11
  2871                           
  2872                           ;initializer for SSD1306_Test@F7528
  2873  2837  348D               	retlw	141
  2874  2838  3414               	retlw	20
  2875                           
  2876                           	psect	stringtext1
  2877  0798                     __pstringtext1:	
  2878  0798                     _OledFont:	
  2879  0798  3400               	retlw	0
  2880  0799  3400               	retlw	0
  2881  079A  3400               	retlw	0
  2882  079B  3400               	retlw	0
  2883  079C  3400               	retlw	0
  2884  079D  3400               	retlw	0
  2885  079E  3400               	retlw	0
  2886  079F  3400               	retlw	0
  2887  07A0  3400               	retlw	0
  2888  07A1  3400               	retlw	0
  2889  07A2  345F               	retlw	95
  2890  07A3  3400               	retlw	0
  2891  07A4  3400               	retlw	0
  2892  07A5  3400               	retlw	0
  2893  07A6  3400               	retlw	0
  2894  07A7  3400               	retlw	0
  2895  07A8  3400               	retlw	0
  2896  07A9  3400               	retlw	0
  2897  07AA  3407               	retlw	7
  2898  07AB  3400               	retlw	0
  2899  07AC  3407               	retlw	7
  2900  07AD  3400               	retlw	0
  2901  07AE  3400               	retlw	0
  2902  07AF  3400               	retlw	0
  2903  07B0  3400               	retlw	0
  2904  07B1  3414               	retlw	20
  2905  07B2  347F               	retlw	127
  2906  07B3  3414               	retlw	20
  2907  07B4  347F               	retlw	127
  2908  07B5  3414               	retlw	20
  2909  07B6  3400               	retlw	0
  2910  07B7  3400               	retlw	0
  2911  07B8  3400               	retlw	0
  2912  07B9  3424               	retlw	36
  2913  07BA  342A               	retlw	42
  2914  07BB  347F               	retlw	127
  2915  07BC  342A               	retlw	42
  2916  07BD  3412               	retlw	18
  2917  07BE  3400               	retlw	0
  2918  07BF  3400               	retlw	0
  2919  07C0  3400               	retlw	0
  2920  07C1  3423               	retlw	35
  2921  07C2  3413               	retlw	19
  2922  07C3  3408               	retlw	8
  2923  07C4  3464               	retlw	100
  2924  07C5  3462               	retlw	98
  2925  07C6  3400               	retlw	0
  2926  07C7  3400               	retlw	0
  2927  07C8  3400               	retlw	0
  2928  07C9  3436               	retlw	54
  2929  07CA  3449               	retlw	73
  2930  07CB  3455               	retlw	85
  2931  07CC  3422               	retlw	34
  2932  07CD  3450               	retlw	80
  2933  07CE  3400               	retlw	0
  2934  07CF  3400               	retlw	0
  2935  07D0  3400               	retlw	0
  2936  07D1  3400               	retlw	0
  2937  07D2  3405               	retlw	5
  2938  07D3  3403               	retlw	3
  2939  07D4  3400               	retlw	0
  2940  07D5  3400               	retlw	0
  2941  07D6  3400               	retlw	0
  2942  07D7  3400               	retlw	0
  2943  07D8  3400               	retlw	0
  2944  07D9  341C               	retlw	28
  2945  07DA  3422               	retlw	34
  2946  07DB  3441               	retlw	65
  2947  07DC  3400               	retlw	0
  2948  07DD  3400               	retlw	0
  2949  07DE  3400               	retlw	0
  2950  07DF  3400               	retlw	0
  2951  07E0  3400               	retlw	0
  2952  07E1  3441               	retlw	65
  2953  07E2  3422               	retlw	34
  2954  07E3  341C               	retlw	28
  2955  07E4  3400               	retlw	0
  2956  07E5  3400               	retlw	0
  2957  07E6  3400               	retlw	0
  2958  07E7  3400               	retlw	0
  2959  07E8  3400               	retlw	0
  2960  07E9  3408               	retlw	8
  2961  07EA  342A               	retlw	42
  2962  07EB  341C               	retlw	28
  2963  07EC  342A               	retlw	42
  2964  07ED  3408               	retlw	8
  2965  07EE  3400               	retlw	0
  2966  07EF  3400               	retlw	0
  2967  07F0  3400               	retlw	0
  2968  07F1  3408               	retlw	8
  2969  07F2  3408               	retlw	8
  2970  07F3  343E               	retlw	62
  2971  07F4  3408               	retlw	8
  2972  07F5  3408               	retlw	8
  2973  07F6  3400               	retlw	0
  2974  07F7  3400               	retlw	0
  2975  07F8  3400               	retlw	0
  2976  07F9  34A0               	retlw	160
  2977  07FA  3460               	retlw	96
  2978  07FB  3400               	retlw	0
  2979  07FC  3400               	retlw	0
  2980  07FD  3400               	retlw	0
  2981  07FE  3400               	retlw	0
  2982  07FF  3400               	retlw	0
  2983  0800  3400               	retlw	0
  2984  0801  3408               	retlw	8
  2985  0802  3408               	retlw	8
  2986  0803  3408               	retlw	8
  2987  0804  3408               	retlw	8
  2988  0805  3408               	retlw	8
  2989  0806  3400               	retlw	0
  2990  0807  3400               	retlw	0
  2991  0808  3400               	retlw	0
  2992  0809  3460               	retlw	96
  2993  080A  3460               	retlw	96
  2994  080B  3400               	retlw	0
  2995  080C  3400               	retlw	0
  2996  080D  3400               	retlw	0
  2997  080E  3400               	retlw	0
  2998  080F  3400               	retlw	0
  2999  0810  3400               	retlw	0
  3000  0811  3420               	retlw	32
  3001  0812  3410               	retlw	16
  3002  0813  3408               	retlw	8
  3003  0814  3404               	retlw	4
  3004  0815  3402               	retlw	2
  3005  0816  3400               	retlw	0
  3006  0817  3400               	retlw	0
  3007  0818  3400               	retlw	0
  3008  0819  343E               	retlw	62
  3009  081A  3451               	retlw	81
  3010  081B  3449               	retlw	73
  3011  081C  3445               	retlw	69
  3012  081D  343E               	retlw	62
  3013  081E  3400               	retlw	0
  3014  081F  3400               	retlw	0
  3015  0820  3400               	retlw	0
  3016  0821  3400               	retlw	0
  3017  0822  3442               	retlw	66
  3018  0823  347F               	retlw	127
  3019  0824  3440               	retlw	64
  3020  0825  3400               	retlw	0
  3021  0826  3400               	retlw	0
  3022  0827  3400               	retlw	0
  3023  0828  3400               	retlw	0
  3024  0829  3462               	retlw	98
  3025  082A  3451               	retlw	81
  3026  082B  3449               	retlw	73
  3027  082C  3449               	retlw	73
  3028  082D  3446               	retlw	70
  3029  082E  3400               	retlw	0
  3030  082F  3400               	retlw	0
  3031  0830  3400               	retlw	0
  3032  0831  3422               	retlw	34
  3033  0832  3441               	retlw	65
  3034  0833  3449               	retlw	73
  3035  0834  3449               	retlw	73
  3036  0835  3436               	retlw	54
  3037  0836  3400               	retlw	0
  3038  0837  3400               	retlw	0
  3039  0838  3400               	retlw	0
  3040  0839  3418               	retlw	24
  3041  083A  3414               	retlw	20
  3042  083B  3412               	retlw	18
  3043  083C  347F               	retlw	127
  3044  083D  3410               	retlw	16
  3045  083E  3400               	retlw	0
  3046  083F  3400               	retlw	0
  3047  0840  3400               	retlw	0
  3048  0841  3427               	retlw	39
  3049  0842  3445               	retlw	69
  3050  0843  3445               	retlw	69
  3051  0844  3445               	retlw	69
  3052  0845  3439               	retlw	57
  3053  0846  3400               	retlw	0
  3054  0847  3400               	retlw	0
  3055  0848  3400               	retlw	0
  3056  0849  343C               	retlw	60
  3057  084A  344A               	retlw	74
  3058  084B  3449               	retlw	73
  3059  084C  3449               	retlw	73
  3060  084D  3430               	retlw	48
  3061  084E  3400               	retlw	0
  3062  084F  3400               	retlw	0
  3063  0850  3400               	retlw	0
  3064  0851  3401               	retlw	1
  3065  0852  3471               	retlw	113
  3066  0853  3409               	retlw	9
  3067  0854  3405               	retlw	5
  3068  0855  3403               	retlw	3
  3069  0856  3400               	retlw	0
  3070  0857  3400               	retlw	0
  3071  0858  3400               	retlw	0
  3072  0859  3436               	retlw	54
  3073  085A  3449               	retlw	73
  3074  085B  3449               	retlw	73
  3075  085C  3449               	retlw	73
  3076  085D  3436               	retlw	54
  3077  085E  3400               	retlw	0
  3078  085F  3400               	retlw	0
  3079  0860  3400               	retlw	0
  3080  0861  3406               	retlw	6
  3081  0862  3449               	retlw	73
  3082  0863  3449               	retlw	73
  3083  0864  3429               	retlw	41
  3084  0865  341E               	retlw	30
  3085  0866  3400               	retlw	0
  3086  0867  3400               	retlw	0
  3087  0868  3400               	retlw	0
  3088  0869  3400               	retlw	0
  3089  086A  3436               	retlw	54
  3090  086B  3436               	retlw	54
  3091  086C  3400               	retlw	0
  3092  086D  3400               	retlw	0
  3093  086E  3400               	retlw	0
  3094  086F  3400               	retlw	0
  3095  0870  3400               	retlw	0
  3096  0871  3400               	retlw	0
  3097  0872  34AC               	retlw	172
  3098  0873  346C               	retlw	108
  3099  0874  3400               	retlw	0
  3100  0875  3400               	retlw	0
  3101  0876  3400               	retlw	0
  3102  0877  3400               	retlw	0
  3103  0878  3400               	retlw	0
  3104  0879  3408               	retlw	8
  3105  087A  3414               	retlw	20
  3106  087B  3422               	retlw	34
  3107  087C  3441               	retlw	65
  3108  087D  3400               	retlw	0
  3109  087E  3400               	retlw	0
  3110  087F  3400               	retlw	0
  3111  0880  3400               	retlw	0
  3112  0881  3414               	retlw	20
  3113  0882  3414               	retlw	20
  3114  0883  3414               	retlw	20
  3115  0884  3414               	retlw	20
  3116  0885  3414               	retlw	20
  3117  0886  3400               	retlw	0
  3118  0887  3400               	retlw	0
  3119  0888  3400               	retlw	0
  3120  0889  3441               	retlw	65
  3121  088A  3422               	retlw	34
  3122  088B  3414               	retlw	20
  3123  088C  3408               	retlw	8
  3124  088D  3400               	retlw	0
  3125  088E  3400               	retlw	0
  3126  088F  3400               	retlw	0
  3127  0890  3400               	retlw	0
  3128  0891  3402               	retlw	2
  3129  0892  3401               	retlw	1
  3130  0893  3451               	retlw	81
  3131  0894  3409               	retlw	9
  3132  0895  3406               	retlw	6
  3133  0896  3400               	retlw	0
  3134  0897  3400               	retlw	0
  3135  0898  3400               	retlw	0
  3136  0899  3432               	retlw	50
  3137  089A  3449               	retlw	73
  3138  089B  3479               	retlw	121
  3139  089C  3441               	retlw	65
  3140  089D  343E               	retlw	62
  3141  089E  3400               	retlw	0
  3142  089F  3400               	retlw	0
  3143  08A0  3400               	retlw	0
  3144  08A1  347E               	retlw	126
  3145  08A2  3409               	retlw	9
  3146  08A3  3409               	retlw	9
  3147  08A4  3409               	retlw	9
  3148  08A5  347E               	retlw	126
  3149  08A6  3400               	retlw	0
  3150  08A7  3400               	retlw	0
  3151  08A8  3400               	retlw	0
  3152  08A9  347F               	retlw	127
  3153  08AA  3449               	retlw	73
  3154  08AB  3449               	retlw	73
  3155  08AC  3449               	retlw	73
  3156  08AD  3436               	retlw	54
  3157  08AE  3400               	retlw	0
  3158  08AF  3400               	retlw	0
  3159  08B0  3400               	retlw	0
  3160  08B1  343E               	retlw	62
  3161  08B2  3441               	retlw	65
  3162  08B3  3441               	retlw	65
  3163  08B4  3441               	retlw	65
  3164  08B5  3422               	retlw	34
  3165  08B6  3400               	retlw	0
  3166  08B7  3400               	retlw	0
  3167  08B8  3400               	retlw	0
  3168  08B9  347F               	retlw	127
  3169  08BA  3441               	retlw	65
  3170  08BB  3441               	retlw	65
  3171  08BC  3422               	retlw	34
  3172  08BD  341C               	retlw	28
  3173  08BE  3400               	retlw	0
  3174  08BF  3400               	retlw	0
  3175  08C0  3400               	retlw	0
  3176  08C1  347F               	retlw	127
  3177  08C2  3449               	retlw	73
  3178  08C3  3449               	retlw	73
  3179  08C4  3449               	retlw	73
  3180  08C5  3441               	retlw	65
  3181  08C6  3400               	retlw	0
  3182  08C7  3400               	retlw	0
  3183  08C8  3400               	retlw	0
  3184  08C9  347F               	retlw	127
  3185  08CA  3409               	retlw	9
  3186  08CB  3409               	retlw	9
  3187  08CC  3409               	retlw	9
  3188  08CD  3401               	retlw	1
  3189  08CE  3400               	retlw	0
  3190  08CF  3400               	retlw	0
  3191  08D0  3400               	retlw	0
  3192  08D1  343E               	retlw	62
  3193  08D2  3441               	retlw	65
  3194  08D3  3441               	retlw	65
  3195  08D4  3451               	retlw	81
  3196  08D5  3472               	retlw	114
  3197  08D6  3400               	retlw	0
  3198  08D7  3400               	retlw	0
  3199  08D8  3400               	retlw	0
  3200  08D9  347F               	retlw	127
  3201  08DA  3408               	retlw	8
  3202  08DB  3408               	retlw	8
  3203  08DC  3408               	retlw	8
  3204  08DD  347F               	retlw	127
  3205  08DE  3400               	retlw	0
  3206  08DF  3400               	retlw	0
  3207  08E0  3400               	retlw	0
  3208  08E1  3441               	retlw	65
  3209  08E2  347F               	retlw	127
  3210  08E3  3441               	retlw	65
  3211  08E4  3400               	retlw	0
  3212  08E5  3400               	retlw	0
  3213  08E6  3400               	retlw	0
  3214  08E7  3400               	retlw	0
  3215  08E8  3400               	retlw	0
  3216  08E9  3420               	retlw	32
  3217  08EA  3440               	retlw	64
  3218  08EB  3441               	retlw	65
  3219  08EC  343F               	retlw	63
  3220  08ED  3401               	retlw	1
  3221  08EE  3400               	retlw	0
  3222  08EF  3400               	retlw	0
  3223  08F0  3400               	retlw	0
  3224  08F1  347F               	retlw	127
  3225  08F2  3408               	retlw	8
  3226  08F3  3414               	retlw	20
  3227  08F4  3422               	retlw	34
  3228  08F5  3441               	retlw	65
  3229  08F6  3400               	retlw	0
  3230  08F7  3400               	retlw	0
  3231  08F8  3400               	retlw	0
  3232  08F9  347F               	retlw	127
  3233  08FA  3440               	retlw	64
  3234  08FB  3440               	retlw	64
  3235  08FC  3440               	retlw	64
  3236  08FD  3440               	retlw	64
  3237  08FE  3400               	retlw	0
  3238  08FF  3400               	retlw	0
  3239  0900  3400               	retlw	0
  3240  0901  347F               	retlw	127
  3241  0902  3402               	retlw	2
  3242  0903  340C               	retlw	12
  3243  0904  3402               	retlw	2
  3244  0905  347F               	retlw	127
  3245  0906  3400               	retlw	0
  3246  0907  3400               	retlw	0
  3247  0908  3400               	retlw	0
  3248  0909  347F               	retlw	127
  3249  090A  3404               	retlw	4
  3250  090B  3408               	retlw	8
  3251  090C  3410               	retlw	16
  3252  090D  347F               	retlw	127
  3253  090E  3400               	retlw	0
  3254  090F  3400               	retlw	0
  3255  0910  3400               	retlw	0
  3256  0911  343E               	retlw	62
  3257  0912  3441               	retlw	65
  3258  0913  3441               	retlw	65
  3259  0914  3441               	retlw	65
  3260  0915  343E               	retlw	62
  3261  0916  3400               	retlw	0
  3262  0917  3400               	retlw	0
  3263  0918  3400               	retlw	0
  3264  0919  347F               	retlw	127
  3265  091A  3409               	retlw	9
  3266  091B  3409               	retlw	9
  3267  091C  3409               	retlw	9
  3268  091D  3406               	retlw	6
  3269  091E  3400               	retlw	0
  3270  091F  3400               	retlw	0
  3271  0920  3400               	retlw	0
  3272  0921  343E               	retlw	62
  3273  0922  3441               	retlw	65
  3274  0923  3451               	retlw	81
  3275  0924  3421               	retlw	33
  3276  0925  345E               	retlw	94
  3277  0926  3400               	retlw	0
  3278  0927  3400               	retlw	0
  3279  0928  3400               	retlw	0
  3280  0929  347F               	retlw	127
  3281  092A  3409               	retlw	9
  3282  092B  3419               	retlw	25
  3283  092C  3429               	retlw	41
  3284  092D  3446               	retlw	70
  3285  092E  3400               	retlw	0
  3286  092F  3400               	retlw	0
  3287  0930  3400               	retlw	0
  3288  0931  3426               	retlw	38
  3289  0932  3449               	retlw	73
  3290  0933  3449               	retlw	73
  3291  0934  3449               	retlw	73
  3292  0935  3432               	retlw	50
  3293  0936  3400               	retlw	0
  3294  0937  3400               	retlw	0
  3295  0938  3400               	retlw	0
  3296  0939  3401               	retlw	1
  3297  093A  3401               	retlw	1
  3298  093B  347F               	retlw	127
  3299  093C  3401               	retlw	1
  3300  093D  3401               	retlw	1
  3301  093E  3400               	retlw	0
  3302  093F  3400               	retlw	0
  3303  0940  3400               	retlw	0
  3304  0941  343F               	retlw	63
  3305  0942  3440               	retlw	64
  3306  0943  3440               	retlw	64
  3307  0944  3440               	retlw	64
  3308  0945  343F               	retlw	63
  3309  0946  3400               	retlw	0
  3310  0947  3400               	retlw	0
  3311  0948  3400               	retlw	0
  3312  0949  341F               	retlw	31
  3313  094A  3420               	retlw	32
  3314  094B  3440               	retlw	64
  3315  094C  3420               	retlw	32
  3316  094D  341F               	retlw	31
  3317  094E  3400               	retlw	0
  3318  094F  3400               	retlw	0
  3319  0950  3400               	retlw	0
  3320  0951  343F               	retlw	63
  3321  0952  3440               	retlw	64
  3322  0953  3438               	retlw	56
  3323  0954  3440               	retlw	64
  3324  0955  343F               	retlw	63
  3325  0956  3400               	retlw	0
  3326  0957  3400               	retlw	0
  3327  0958  3400               	retlw	0
  3328  0959  3463               	retlw	99
  3329  095A  3414               	retlw	20
  3330  095B  3408               	retlw	8
  3331  095C  3414               	retlw	20
  3332  095D  3463               	retlw	99
  3333  095E  3400               	retlw	0
  3334  095F  3400               	retlw	0
  3335  0960  3400               	retlw	0
  3336  0961  3403               	retlw	3
  3337  0962  3404               	retlw	4
  3338  0963  3478               	retlw	120
  3339  0964  3404               	retlw	4
  3340  0965  3403               	retlw	3
  3341  0966  3400               	retlw	0
  3342  0967  3400               	retlw	0
  3343  0968  3400               	retlw	0
  3344  0969  3461               	retlw	97
  3345  096A  3451               	retlw	81
  3346  096B  3449               	retlw	73
  3347  096C  3445               	retlw	69
  3348  096D  3443               	retlw	67
  3349  096E  3400               	retlw	0
  3350  096F  3400               	retlw	0
  3351  0970  3400               	retlw	0
  3352  0971  347F               	retlw	127
  3353  0972  3441               	retlw	65
  3354  0973  3441               	retlw	65
  3355  0974  3400               	retlw	0
  3356  0975  3400               	retlw	0
  3357  0976  3400               	retlw	0
  3358  0977  3400               	retlw	0
  3359  0978  3400               	retlw	0
  3360  0979  3402               	retlw	2
  3361  097A  3404               	retlw	4
  3362  097B  3408               	retlw	8
  3363  097C  3410               	retlw	16
  3364  097D  3420               	retlw	32
  3365  097E  3400               	retlw	0
  3366  097F  3400               	retlw	0
  3367  0980  3400               	retlw	0
  3368  0981  3441               	retlw	65
  3369  0982  3441               	retlw	65
  3370  0983  347F               	retlw	127
  3371  0984  3400               	retlw	0
  3372  0985  3400               	retlw	0
  3373  0986  3400               	retlw	0
  3374  0987  3400               	retlw	0
  3375  0988  3400               	retlw	0
  3376  0989  3404               	retlw	4
  3377  098A  3402               	retlw	2
  3378  098B  3401               	retlw	1
  3379  098C  3402               	retlw	2
  3380  098D  3404               	retlw	4
  3381  098E  3400               	retlw	0
  3382  098F  3400               	retlw	0
  3383  0990  3400               	retlw	0
  3384  0991  3480               	retlw	128
  3385  0992  3480               	retlw	128
  3386  0993  3480               	retlw	128
  3387  0994  3480               	retlw	128
  3388  0995  3480               	retlw	128
  3389  0996  3400               	retlw	0
  3390  0997  3400               	retlw	0
  3391  0998  3400               	retlw	0
  3392  0999  3401               	retlw	1
  3393  099A  3402               	retlw	2
  3394  099B  3404               	retlw	4
  3395  099C  3400               	retlw	0
  3396  099D  3400               	retlw	0
  3397  099E  3400               	retlw	0
  3398  099F  3400               	retlw	0
  3399  09A0  3400               	retlw	0
  3400  09A1  3420               	retlw	32
  3401  09A2  3454               	retlw	84
  3402  09A3  3454               	retlw	84
  3403  09A4  3454               	retlw	84
  3404  09A5  3478               	retlw	120
  3405  09A6  3400               	retlw	0
  3406  09A7  3400               	retlw	0
  3407  09A8  3400               	retlw	0
  3408  09A9  347F               	retlw	127
  3409  09AA  3448               	retlw	72
  3410  09AB  3444               	retlw	68
  3411  09AC  3444               	retlw	68
  3412  09AD  3438               	retlw	56
  3413  09AE  3400               	retlw	0
  3414  09AF  3400               	retlw	0
  3415  09B0  3400               	retlw	0
  3416  09B1  3438               	retlw	56
  3417  09B2  3444               	retlw	68
  3418  09B3  3444               	retlw	68
  3419  09B4  3428               	retlw	40
  3420  09B5  3400               	retlw	0
  3421  09B6  3400               	retlw	0
  3422  09B7  3400               	retlw	0
  3423  09B8  3400               	retlw	0
  3424  09B9  3438               	retlw	56
  3425  09BA  3444               	retlw	68
  3426  09BB  3444               	retlw	68
  3427  09BC  3448               	retlw	72
  3428  09BD  347F               	retlw	127
  3429  09BE  3400               	retlw	0
  3430  09BF  3400               	retlw	0
  3431  09C0  3400               	retlw	0
  3432  09C1  3438               	retlw	56
  3433  09C2  3454               	retlw	84
  3434  09C3  3454               	retlw	84
  3435  09C4  3454               	retlw	84
  3436  09C5  3418               	retlw	24
  3437  09C6  3400               	retlw	0
  3438  09C7  3400               	retlw	0
  3439  09C8  3400               	retlw	0
  3440  09C9  3408               	retlw	8
  3441  09CA  347E               	retlw	126
  3442  09CB  3409               	retlw	9
  3443  09CC  3402               	retlw	2
  3444  09CD  3400               	retlw	0
  3445  09CE  3400               	retlw	0
  3446  09CF  3400               	retlw	0
  3447  09D0  3400               	retlw	0
  3448  09D1  3418               	retlw	24
  3449  09D2  34A4               	retlw	164
  3450  09D3  34A4               	retlw	164
  3451  09D4  34A4               	retlw	164
  3452  09D5  347C               	retlw	124
  3453  09D6  3400               	retlw	0
  3454  09D7  3400               	retlw	0
  3455  09D8  3400               	retlw	0
  3456  09D9  347F               	retlw	127
  3457  09DA  3408               	retlw	8
  3458  09DB  3404               	retlw	4
  3459  09DC  3404               	retlw	4
  3460  09DD  3478               	retlw	120
  3461  09DE  3400               	retlw	0
  3462  09DF  3400               	retlw	0
  3463  09E0  3400               	retlw	0
  3464  09E1  3400               	retlw	0
  3465  09E2  347D               	retlw	125
  3466  09E3  3400               	retlw	0
  3467  09E4  3400               	retlw	0
  3468  09E5  3400               	retlw	0
  3469  09E6  3400               	retlw	0
  3470  09E7  3400               	retlw	0
  3471  09E8  3400               	retlw	0
  3472  09E9  3480               	retlw	128
  3473  09EA  3484               	retlw	132
  3474  09EB  347D               	retlw	125
  3475  09EC  3400               	retlw	0
  3476  09ED  3400               	retlw	0
  3477  09EE  3400               	retlw	0
  3478  09EF  3400               	retlw	0
  3479  09F0  3400               	retlw	0
  3480  09F1  347F               	retlw	127
  3481  09F2  3410               	retlw	16
  3482  09F3  3428               	retlw	40
  3483  09F4  3444               	retlw	68
  3484  09F5  3400               	retlw	0
  3485  09F6  3400               	retlw	0
  3486  09F7  3400               	retlw	0
  3487  09F8  3400               	retlw	0
  3488  09F9  3441               	retlw	65
  3489  09FA  347F               	retlw	127
  3490  09FB  3440               	retlw	64
  3491  09FC  3400               	retlw	0
  3492  09FD  3400               	retlw	0
  3493  09FE  3400               	retlw	0
  3494  09FF  3400               	retlw	0
  3495  0A00  3400               	retlw	0
  3496  0A01  347C               	retlw	124
  3497  0A02  3404               	retlw	4
  3498  0A03  3418               	retlw	24
  3499  0A04  3404               	retlw	4
  3500  0A05  3478               	retlw	120
  3501  0A06  3400               	retlw	0
  3502  0A07  3400               	retlw	0
  3503  0A08  3400               	retlw	0
  3504  0A09  347C               	retlw	124
  3505  0A0A  3408               	retlw	8
  3506  0A0B  3404               	retlw	4
  3507  0A0C  347C               	retlw	124
  3508  0A0D  3400               	retlw	0
  3509  0A0E  3400               	retlw	0
  3510  0A0F  3400               	retlw	0
  3511  0A10  3400               	retlw	0
  3512  0A11  3438               	retlw	56
  3513  0A12  3444               	retlw	68
  3514  0A13  3444               	retlw	68
  3515  0A14  3438               	retlw	56
  3516  0A15  3400               	retlw	0
  3517  0A16  3400               	retlw	0
  3518  0A17  3400               	retlw	0
  3519  0A18  3400               	retlw	0
  3520  0A19  34FC               	retlw	252
  3521  0A1A  3424               	retlw	36
  3522  0A1B  3424               	retlw	36
  3523  0A1C  3418               	retlw	24
  3524  0A1D  3400               	retlw	0
  3525  0A1E  3400               	retlw	0
  3526  0A1F  3400               	retlw	0
  3527  0A20  3400               	retlw	0
  3528  0A21  3418               	retlw	24
  3529  0A22  3424               	retlw	36
  3530  0A23  3424               	retlw	36
  3531  0A24  34FC               	retlw	252
  3532  0A25  3400               	retlw	0
  3533  0A26  3400               	retlw	0
  3534  0A27  3400               	retlw	0
  3535  0A28  3400               	retlw	0
  3536  0A29  3400               	retlw	0
  3537  0A2A  347C               	retlw	124
  3538  0A2B  3408               	retlw	8
  3539  0A2C  3404               	retlw	4
  3540  0A2D  3400               	retlw	0
  3541  0A2E  3400               	retlw	0
  3542  0A2F  3400               	retlw	0
  3543  0A30  3400               	retlw	0
  3544  0A31  3448               	retlw	72
  3545  0A32  3454               	retlw	84
  3546  0A33  3454               	retlw	84
  3547  0A34  3424               	retlw	36
  3548  0A35  3400               	retlw	0
  3549  0A36  3400               	retlw	0
  3550  0A37  3400               	retlw	0
  3551  0A38  3400               	retlw	0
  3552  0A39  3404               	retlw	4
  3553  0A3A  347F               	retlw	127
  3554  0A3B  3444               	retlw	68
  3555  0A3C  3400               	retlw	0
  3556  0A3D  3400               	retlw	0
  3557  0A3E  3400               	retlw	0
  3558  0A3F  3400               	retlw	0
  3559  0A40  3400               	retlw	0
  3560  0A41  343C               	retlw	60
  3561  0A42  3440               	retlw	64
  3562  0A43  3440               	retlw	64
  3563  0A44  347C               	retlw	124
  3564  0A45  3400               	retlw	0
  3565  0A46  3400               	retlw	0
  3566  0A47  3400               	retlw	0
  3567  0A48  3400               	retlw	0
  3568  0A49  341C               	retlw	28
  3569  0A4A  3420               	retlw	32
  3570  0A4B  3440               	retlw	64
  3571  0A4C  3420               	retlw	32
  3572  0A4D  341C               	retlw	28
  3573  0A4E  3400               	retlw	0
  3574  0A4F  3400               	retlw	0
  3575  0A50  3400               	retlw	0
  3576  0A51  343C               	retlw	60
  3577  0A52  3440               	retlw	64
  3578  0A53  3430               	retlw	48
  3579  0A54  3440               	retlw	64
  3580  0A55  343C               	retlw	60
  3581  0A56  3400               	retlw	0
  3582  0A57  3400               	retlw	0
  3583  0A58  3400               	retlw	0
  3584  0A59  3444               	retlw	68
  3585  0A5A  3428               	retlw	40
  3586  0A5B  3410               	retlw	16
  3587  0A5C  3428               	retlw	40
  3588  0A5D  3444               	retlw	68
  3589  0A5E  3400               	retlw	0
  3590  0A5F  3400               	retlw	0
  3591  0A60  3400               	retlw	0
  3592  0A61  341C               	retlw	28
  3593  0A62  34A0               	retlw	160
  3594  0A63  34A0               	retlw	160
  3595  0A64  347C               	retlw	124
  3596  0A65  3400               	retlw	0
  3597  0A66  3400               	retlw	0
  3598  0A67  3400               	retlw	0
  3599  0A68  3400               	retlw	0
  3600  0A69  3444               	retlw	68
  3601  0A6A  3464               	retlw	100
  3602  0A6B  3454               	retlw	84
  3603  0A6C  344C               	retlw	76
  3604  0A6D  3444               	retlw	68
  3605  0A6E  3400               	retlw	0
  3606  0A6F  3400               	retlw	0
  3607  0A70  3400               	retlw	0
  3608  0A71  3408               	retlw	8
  3609  0A72  3436               	retlw	54
  3610  0A73  3441               	retlw	65
  3611  0A74  3400               	retlw	0
  3612  0A75  3400               	retlw	0
  3613  0A76  3400               	retlw	0
  3614  0A77  3400               	retlw	0
  3615  0A78  3400               	retlw	0
  3616  0A79  3400               	retlw	0
  3617  0A7A  347F               	retlw	127
  3618  0A7B  3400               	retlw	0
  3619  0A7C  3400               	retlw	0
  3620  0A7D  3400               	retlw	0
  3621  0A7E  3400               	retlw	0
  3622  0A7F  3400               	retlw	0
  3623  0A80  3400               	retlw	0
  3624  0A81  3441               	retlw	65
  3625  0A82  3436               	retlw	54
  3626  0A83  3408               	retlw	8
  3627  0A84  3400               	retlw	0
  3628  0A85  3400               	retlw	0
  3629  0A86  3400               	retlw	0
  3630  0A87  3400               	retlw	0
  3631  0A88  3400               	retlw	0
  3632  0A89  3402               	retlw	2
  3633  0A8A  3401               	retlw	1
  3634  0A8B  3401               	retlw	1
  3635  0A8C  3402               	retlw	2
  3636  0A8D  3401               	retlw	1
  3637  0A8E  3400               	retlw	0
  3638  0A8F  3400               	retlw	0
  3639  0A90  3400               	retlw	0
  3640  0A91  3402               	retlw	2
  3641  0A92  3405               	retlw	5
  3642  0A93  3405               	retlw	5
  3643  0A94  3402               	retlw	2
  3644  0A95  3400               	retlw	0
  3645  0A96  3400               	retlw	0
  3646  0A97  3400               	retlw	0
  3647  0A98                     __end_of_OledFont:	
  3648                           
  3649                           	psect	stringtext2
  3650  1800                     __pstringtext2:	
  3651  1800                     ltc6804@crc15Table:	
  3652  1800  3400               	retlw	0
  3653  1801  3400               	retlw	0
  3654  1802  3499               	retlw	153
  3655  1803  34C5               	retlw	197
  3656  1804  34AB               	retlw	171
  3657  1805  34CE               	retlw	206
  3658  1806  3432               	retlw	50
  3659  1807  340B               	retlw	11
  3660  1808  34CF               	retlw	207
  3661  1809  34D8               	retlw	216
  3662  180A  3456               	retlw	86
  3663  180B  341D               	retlw	29
  3664  180C  3464               	retlw	100
  3665  180D  3416               	retlw	22
  3666  180E  34FD               	retlw	253
  3667  180F  34D3               	retlw	211
  3668  1810  3407               	retlw	7
  3669  1811  34F4               	retlw	244
  3670  1812  349E               	retlw	158
  3671  1813  3431               	retlw	49
  3672  1814  34AC               	retlw	172
  3673  1815  343A               	retlw	58
  3674  1816  3435               	retlw	53
  3675  1817  34FF               	retlw	255
  3676  1818  34C8               	retlw	200
  3677  1819  342C               	retlw	44
  3678  181A  3451               	retlw	81
  3679  181B  34E9               	retlw	233
  3680  181C  3463               	retlw	99
  3681  181D  34E2               	retlw	226
  3682  181E  34FA               	retlw	250
  3683  181F  3427               	retlw	39
  3684  1820  3497               	retlw	151
  3685  1821  34AD               	retlw	173
  3686  1822  340E               	retlw	14
  3687  1823  3468               	retlw	104
  3688  1824  343C               	retlw	60
  3689  1825  3463               	retlw	99
  3690  1826  34A5               	retlw	165
  3691  1827  34A6               	retlw	166
  3692  1828  3458               	retlw	88
  3693  1829  3475               	retlw	117
  3694  182A  34C1               	retlw	193
  3695  182B  34B0               	retlw	176
  3696  182C  34F3               	retlw	243
  3697  182D  34BB               	retlw	187
  3698  182E  346A               	retlw	106
  3699  182F  347E               	retlw	126
  3700  1830  3490               	retlw	144
  3701  1831  3459               	retlw	89
  3702  1832  3409               	retlw	9
  3703  1833  349C               	retlw	156
  3704  1834  343B               	retlw	59
  3705  1835  3497               	retlw	151
  3706  1836  34A2               	retlw	162
  3707  1837  3452               	retlw	82
  3708  1838  345F               	retlw	95
  3709  1839  3481               	retlw	129
  3710  183A  34C6               	retlw	198
  3711  183B  3444               	retlw	68
  3712  183C  34F4               	retlw	244
  3713  183D  344F               	retlw	79
  3714  183E  346D               	retlw	109
  3715  183F  348A               	retlw	138
  3716  1840  342E               	retlw	46
  3717  1841  345B               	retlw	91
  3718  1842  34B7               	retlw	183
  3719  1843  349E               	retlw	158
  3720  1844  3485               	retlw	133
  3721  1845  3495               	retlw	149
  3722  1846  341C               	retlw	28
  3723  1847  3450               	retlw	80
  3724  1848  34E1               	retlw	225
  3725  1849  3483               	retlw	131
  3726  184A  3478               	retlw	120
  3727  184B  3446               	retlw	70
  3728  184C  344A               	retlw	74
  3729  184D  344D               	retlw	77
  3730  184E  34D3               	retlw	211
  3731  184F  3488               	retlw	136
  3732  1850  3429               	retlw	41
  3733  1851  34AF               	retlw	175
  3734  1852  34B0               	retlw	176
  3735  1853  346A               	retlw	106
  3736  1854  3482               	retlw	130
  3737  1855  3461               	retlw	97
  3738  1856  341B               	retlw	27
  3739  1857  34A4               	retlw	164
  3740  1858  34E6               	retlw	230
  3741  1859  3477               	retlw	119
  3742  185A  347F               	retlw	127
  3743  185B  34B2               	retlw	178
  3744  185C  344D               	retlw	77
  3745  185D  34B9               	retlw	185
  3746  185E  34D4               	retlw	212
  3747  185F  347C               	retlw	124
  3748  1860  34B9               	retlw	185
  3749  1861  34F6               	retlw	246
  3750  1862  3420               	retlw	32
  3751  1863  3433               	retlw	51
  3752  1864  3412               	retlw	18
  3753  1865  3438               	retlw	56
  3754  1866  348B               	retlw	139
  3755  1867  34FD               	retlw	253
  3756  1868  3476               	retlw	118
  3757  1869  342E               	retlw	46
  3758  186A  34EF               	retlw	239
  3759  186B  34EB               	retlw	235
  3760  186C  34DD               	retlw	221
  3761  186D  34E0               	retlw	224
  3762  186E  3444               	retlw	68
  3763  186F  3425               	retlw	37
  3764  1870  34BE               	retlw	190
  3765  1871  3402               	retlw	2
  3766  1872  3427               	retlw	39
  3767  1873  34C7               	retlw	199
  3768  1874  3415               	retlw	21
  3769  1875  34CC               	retlw	204
  3770  1876  348C               	retlw	140
  3771  1877  3409               	retlw	9
  3772  1878  3471               	retlw	113
  3773  1879  34DA               	retlw	218
  3774  187A  34E8               	retlw	232
  3775  187B  341F               	retlw	31
  3776  187C  34DA               	retlw	218
  3777  187D  3414               	retlw	20
  3778  187E  3443               	retlw	67
  3779  187F  34D1               	retlw	209
  3780  1880  34C5               	retlw	197
  3781  1881  34F3               	retlw	243
  3782  1882  345C               	retlw	92
  3783  1883  3436               	retlw	54
  3784  1884  346E               	retlw	110
  3785  1885  343D               	retlw	61
  3786  1886  34F7               	retlw	247
  3787  1887  34F8               	retlw	248
  3788  1888  340A               	retlw	10
  3789  1889  342B               	retlw	43
  3790  188A  3493               	retlw	147
  3791  188B  34EE               	retlw	238
  3792  188C  34A1               	retlw	161
  3793  188D  34E5               	retlw	229
  3794  188E  3438               	retlw	56
  3795  188F  3420               	retlw	32
  3796  1890  34C2               	retlw	194
  3797  1891  3407               	retlw	7
  3798  1892  345B               	retlw	91
  3799  1893  34C2               	retlw	194
  3800  1894  3469               	retlw	105
  3801  1895  34C9               	retlw	201
  3802  1896  34F0               	retlw	240
  3803  1897  340C               	retlw	12
  3804  1898  340D               	retlw	13
  3805  1899  34DF               	retlw	223
  3806  189A  3494               	retlw	148
  3807  189B  341A               	retlw	26
  3808  189C  34A6               	retlw	166
  3809  189D  3411               	retlw	17
  3810  189E  343F               	retlw	63
  3811  189F  34D4               	retlw	212
  3812  18A0  3452               	retlw	82
  3813  18A1  345E               	retlw	94
  3814  18A2  34CB               	retlw	203
  3815  18A3  349B               	retlw	155
  3816  18A4  34F9               	retlw	249
  3817  18A5  3490               	retlw	144
  3818  18A6  3460               	retlw	96
  3819  18A7  3455               	retlw	85
  3820  18A8  349D               	retlw	157
  3821  18A9  3486               	retlw	134
  3822  18AA  3404               	retlw	4
  3823  18AB  3443               	retlw	67
  3824  18AC  3436               	retlw	54
  3825  18AD  3448               	retlw	72
  3826  18AE  34AF               	retlw	175
  3827  18AF  348D               	retlw	141
  3828  18B0  3455               	retlw	85
  3829  18B1  34AA               	retlw	170
  3830  18B2  34CC               	retlw	204
  3831  18B3  346F               	retlw	111
  3832  18B4  34FE               	retlw	254
  3833  18B5  3464               	retlw	100
  3834  18B6  3467               	retlw	103
  3835  18B7  34A1               	retlw	161
  3836  18B8  349A               	retlw	154
  3837  18B9  3472               	retlw	114
  3838  18BA  3403               	retlw	3
  3839  18BB  34B7               	retlw	183
  3840  18BC  3431               	retlw	49
  3841  18BD  34BC               	retlw	188
  3842  18BE  34A8               	retlw	168
  3843  18BF  3479               	retlw	121
  3844  18C0  34EB               	retlw	235
  3845  18C1  34A8               	retlw	168
  3846  18C2  3472               	retlw	114
  3847  18C3  346D               	retlw	109
  3848  18C4  3440               	retlw	64
  3849  18C5  3466               	retlw	102
  3850  18C6  34D9               	retlw	217
  3851  18C7  34A3               	retlw	163
  3852  18C8  3424               	retlw	36
  3853  18C9  3470               	retlw	112
  3854  18CA  34BD               	retlw	189
  3855  18CB  34B5               	retlw	181
  3856  18CC  348F               	retlw	143
  3857  18CD  34BE               	retlw	190
  3858  18CE  3416               	retlw	22
  3859  18CF  347B               	retlw	123
  3860  18D0  34EC               	retlw	236
  3861  18D1  345C               	retlw	92
  3862  18D2  3475               	retlw	117
  3863  18D3  3499               	retlw	153
  3864  18D4  3447               	retlw	71
  3865  18D5  3492               	retlw	146
  3866  18D6  34DE               	retlw	222
  3867  18D7  3457               	retlw	87
  3868  18D8  3423               	retlw	35
  3869  18D9  3484               	retlw	132
  3870  18DA  34BA               	retlw	186
  3871  18DB  3441               	retlw	65
  3872  18DC  3488               	retlw	136
  3873  18DD  344A               	retlw	74
  3874  18DE  3411               	retlw	17
  3875  18DF  348F               	retlw	143
  3876  18E0  347C               	retlw	124
  3877  18E1  3405               	retlw	5
  3878  18E2  34E5               	retlw	229
  3879  18E3  34C0               	retlw	192
  3880  18E4  34D7               	retlw	215
  3881  18E5  34CB               	retlw	203
  3882  18E6  344E               	retlw	78
  3883  18E7  340E               	retlw	14
  3884  18E8  34B3               	retlw	179
  3885  18E9  34DD               	retlw	221
  3886  18EA  342A               	retlw	42
  3887  18EB  3418               	retlw	24
  3888  18EC  3418               	retlw	24
  3889  18ED  3413               	retlw	19
  3890  18EE  3481               	retlw	129
  3891  18EF  34D6               	retlw	214
  3892  18F0  347B               	retlw	123
  3893  18F1  34F1               	retlw	241
  3894  18F2  34E2               	retlw	226
  3895  18F3  3434               	retlw	52
  3896  18F4  34D0               	retlw	208
  3897  18F5  343F               	retlw	63
  3898  18F6  3449               	retlw	73
  3899  18F7  34FA               	retlw	250
  3900  18F8  34B4               	retlw	180
  3901  18F9  3429               	retlw	41
  3902  18FA  342D               	retlw	45
  3903  18FB  34EC               	retlw	236
  3904  18FC  341F               	retlw	31
  3905  18FD  34E7               	retlw	231
  3906  18FE  3486               	retlw	134
  3907  18FF  3422               	retlw	34
  3908  1900  3413               	retlw	19
  3909  1901  34A2               	retlw	162
  3910  1902  348A               	retlw	138
  3911  1903  3467               	retlw	103
  3912  1904  34B8               	retlw	184
  3913  1905  346C               	retlw	108
  3914  1906  3421               	retlw	33
  3915  1907  34A9               	retlw	169
  3916  1908  34DC               	retlw	220
  3917  1909  347A               	retlw	122
  3918  190A  3445               	retlw	69
  3919  190B  34BF               	retlw	191
  3920  190C  3477               	retlw	119
  3921  190D  34B4               	retlw	180
  3922  190E  34EE               	retlw	238
  3923  190F  3471               	retlw	113
  3924  1910  3414               	retlw	20
  3925  1911  3456               	retlw	86
  3926  1912  348D               	retlw	141
  3927  1913  3493               	retlw	147
  3928  1914  34BF               	retlw	191
  3929  1915  3498               	retlw	152
  3930  1916  3426               	retlw	38
  3931  1917  345D               	retlw	93
  3932  1918  34DB               	retlw	219
  3933  1919  348E               	retlw	142
  3934  191A  3442               	retlw	66
  3935  191B  344B               	retlw	75
  3936  191C  3470               	retlw	112
  3937  191D  3440               	retlw	64
  3938  191E  34E9               	retlw	233
  3939  191F  3485               	retlw	133
  3940  1920  3484               	retlw	132
  3941  1921  340F               	retlw	15
  3942  1922  341D               	retlw	29
  3943  1923  34CA               	retlw	202
  3944  1924  342F               	retlw	47
  3945  1925  34C1               	retlw	193
  3946  1926  346F               	retlw	111
  3947  1927  344B               	retlw	75
  3948  1928  344B               	retlw	75
  3949  1929  34D7               	retlw	215
  3950  192A  34D2               	retlw	210
  3951  192B  3412               	retlw	18
  3952  192C  34E0               	retlw	224
  3953  192D  3419               	retlw	25
  3954  192E  3479               	retlw	121
  3955  192F  34DC               	retlw	220
  3956  1930  3483               	retlw	131
  3957  1931  34FB               	retlw	251
  3958  1932  341A               	retlw	26
  3959  1933  343E               	retlw	62
  3960  1934  3428               	retlw	40
  3961  1935  3435               	retlw	53
  3962  1936  34B1               	retlw	177
  3963  1937  34F0               	retlw	240
  3964  1938  344C               	retlw	76
  3965  1939  3423               	retlw	35
  3966  193A  34D5               	retlw	213
  3967  193B  34E6               	retlw	230
  3968  193C  34E7               	retlw	231
  3969  193D  34ED               	retlw	237
  3970  193E  347E               	retlw	126
  3971  193F  3428               	retlw	40
  3972  1940  343D               	retlw	61
  3973  1941  34F9               	retlw	249
  3974  1942  34A4               	retlw	164
  3975  1943  343C               	retlw	60
  3976  1944  3496               	retlw	150
  3977  1945  3437               	retlw	55
  3978  1946  340F               	retlw	15
  3979  1947  34F2               	retlw	242
  3980  1948  34F2               	retlw	242
  3981  1949  3421               	retlw	33
  3982  194A  346B               	retlw	107
  3983  194B  34E4               	retlw	228
  3984  194C  3459               	retlw	89
  3985  194D  34EF               	retlw	239
  3986  194E  34C0               	retlw	192
  3987  194F  342A               	retlw	42
  3988  1950  343A               	retlw	58
  3989  1951  340D               	retlw	13
  3990  1952  34A3               	retlw	163
  3991  1953  34C8               	retlw	200
  3992  1954  3491               	retlw	145
  3993  1955  34C3               	retlw	195
  3994  1956  3408               	retlw	8
  3995  1957  3406               	retlw	6
  3996  1958  34F5               	retlw	245
  3997  1959  34D5               	retlw	213
  3998  195A  346C               	retlw	108
  3999  195B  3410               	retlw	16
  4000  195C  345E               	retlw	94
  4001  195D  341B               	retlw	27
  4002  195E  34C7               	retlw	199
  4003  195F  34DE               	retlw	222
  4004  1960  34AA               	retlw	170
  4005  1961  3454               	retlw	84
  4006  1962  3433               	retlw	51
  4007  1963  3491               	retlw	145
  4008  1964  3401               	retlw	1
  4009  1965  349A               	retlw	154
  4010  1966  3498               	retlw	152
  4011  1967  345F               	retlw	95
  4012  1968  3465               	retlw	101
  4013  1969  348C               	retlw	140
  4014  196A  34FC               	retlw	252
  4015  196B  3449               	retlw	73
  4016  196C  34CE               	retlw	206
  4017  196D  3442               	retlw	66
  4018  196E  3457               	retlw	87
  4019  196F  3487               	retlw	135
  4020  1970  34AD               	retlw	173
  4021  1971  34A0               	retlw	160
  4022  1972  3434               	retlw	52
  4023  1973  3465               	retlw	101
  4024  1974  3406               	retlw	6
  4025  1975  346E               	retlw	110
  4026  1976  349F               	retlw	159
  4027  1977  34AB               	retlw	171
  4028  1978  3462               	retlw	98
  4029  1979  3478               	retlw	120
  4030  197A  34FB               	retlw	251
  4031  197B  34BD               	retlw	189
  4032  197C  34C9               	retlw	201
  4033  197D  34B6               	retlw	182
  4034  197E  3450               	retlw	80
  4035  197F  3473               	retlw	115
  4036  1980  34D6               	retlw	214
  4037  1981  3451               	retlw	81
  4038  1982  344F               	retlw	79
  4039  1983  3494               	retlw	148
  4040  1984  347D               	retlw	125
  4041  1985  349F               	retlw	159
  4042  1986  34E4               	retlw	228
  4043  1987  345A               	retlw	90
  4044  1988  3419               	retlw	25
  4045  1989  3489               	retlw	137
  4046  198A  3480               	retlw	128
  4047  198B  344C               	retlw	76
  4048  198C  34B2               	retlw	178
  4049  198D  3447               	retlw	71
  4050  198E  342B               	retlw	43
  4051  198F  3482               	retlw	130
  4052  1990  34D1               	retlw	209
  4053  1991  34A5               	retlw	165
  4054  1992  3448               	retlw	72
  4055  1993  3460               	retlw	96
  4056  1994  347A               	retlw	122
  4057  1995  346B               	retlw	107
  4058  1996  34E3               	retlw	227
  4059  1997  34AE               	retlw	174
  4060  1998  341E               	retlw	30
  4061  1999  347D               	retlw	125
  4062  199A  3487               	retlw	135
  4063  199B  34B8               	retlw	184
  4064  199C  34B5               	retlw	181
  4065  199D  34B3               	retlw	179
  4066  199E  342C               	retlw	44
  4067  199F  3476               	retlw	118
  4068  19A0  3441               	retlw	65
  4069  19A1  34FC               	retlw	252
  4070  19A2  34D8               	retlw	216
  4071  19A3  3439               	retlw	57
  4072  19A4  34EA               	retlw	234
  4073  19A5  3432               	retlw	50
  4074  19A6  3473               	retlw	115
  4075  19A7  34F7               	retlw	247
  4076  19A8  348E               	retlw	142
  4077  19A9  3424               	retlw	36
  4078  19AA  3417               	retlw	23
  4079  19AB  34E1               	retlw	225
  4080  19AC  3425               	retlw	37
  4081  19AD  34EA               	retlw	234
  4082  19AE  34BC               	retlw	188
  4083  19AF  342F               	retlw	47
  4084  19B0  3446               	retlw	70
  4085  19B1  3408               	retlw	8
  4086  19B2  34DF               	retlw	223
  4087  19B3  34CD               	retlw	205
  4088  19B4  34ED               	retlw	237
  4089  19B5  34C6               	retlw	198
  4090  19B6  3474               	retlw	116
  4091  19B7  3403               	retlw	3
  4092  19B8  3489               	retlw	137
  4093  19B9  34D0               	retlw	208
  4094  19BA  3410               	retlw	16
  4095  19BB  3415               	retlw	21
  4096  19BC  3422               	retlw	34
  4097  19BD  341E               	retlw	30
  4098  19BE  34BB               	retlw	187
  4099  19BF  34DB               	retlw	219
  4100  19C0  34F8               	retlw	248
  4101  19C1  340A               	retlw	10
  4102  19C2  3461               	retlw	97
  4103  19C3  34CF               	retlw	207
  4104  19C4  3453               	retlw	83
  4105  19C5  34C4               	retlw	196
  4106  19C6  34CA               	retlw	202
  4107  19C7  3401               	retlw	1
  4108  19C8  3437               	retlw	55
  4109  19C9  34D2               	retlw	210
  4110  19CA  34AE               	retlw	174
  4111  19CB  3417               	retlw	23
  4112  19CC  349C               	retlw	156
  4113  19CD  341C               	retlw	28
  4114  19CE  3405               	retlw	5
  4115  19CF  34D9               	retlw	217
  4116  19D0  34FF               	retlw	255
  4117  19D1  34FE               	retlw	254
  4118  19D2  3466               	retlw	102
  4119  19D3  343B               	retlw	59
  4120  19D4  3454               	retlw	84
  4121  19D5  3430               	retlw	48
  4122  19D6  34CD               	retlw	205
  4123  19D7  34F5               	retlw	245
  4124  19D8  3430               	retlw	48
  4125  19D9  3426               	retlw	38
  4126  19DA  34A9               	retlw	169
  4127  19DB  34E3               	retlw	227
  4128  19DC  349B               	retlw	155
  4129  19DD  34E8               	retlw	232
  4130  19DE  3402               	retlw	2
  4131  19DF  342D               	retlw	45
  4132  19E0  346F               	retlw	111
  4133  19E1  34A7               	retlw	167
  4134  19E2  34F6               	retlw	246
  4135  19E3  3462               	retlw	98
  4136  19E4  34C4               	retlw	196
  4137  19E5  3469               	retlw	105
  4138  19E6  345D               	retlw	93
  4139  19E7  34AC               	retlw	172
  4140  19E8  34A0               	retlw	160
  4141  19E9  347F               	retlw	127
  4142  19EA  3439               	retlw	57
  4143  19EB  34BA               	retlw	186
  4144  19EC  340B               	retlw	11
  4145  19ED  34B1               	retlw	177
  4146  19EE  3492               	retlw	146
  4147  19EF  3474               	retlw	116
  4148  19F0  3468               	retlw	104
  4149  19F1  3453               	retlw	83
  4150  19F2  34F1               	retlw	241
  4151  19F3  3496               	retlw	150
  4152  19F4  34C3               	retlw	195
  4153  19F5  349D               	retlw	157
  4154  19F6  345A               	retlw	90
  4155  19F7  3458               	retlw	88
  4156  19F8  34A7               	retlw	167
  4157  19F9  348B               	retlw	139
  4158  19FA  343E               	retlw	62
  4159  19FB  344E               	retlw	78
  4160  19FC  340C               	retlw	12
  4161  19FD  3445               	retlw	69
  4162  19FE  3495               	retlw	149
  4163  19FF  3480               	retlw	128
  4164  1A00                     __end_ofltc6804@crc15Table:	
  4165                           
  4166                           	psect	stringtext3
  4167  1A00                     __pstringtext3:	
  4168  1A00                     _crc15Table:	
  4169  1A00  3400               	retlw	0
  4170  1A01  3400               	retlw	0
  4171  1A02  3499               	retlw	153
  4172  1A03  34C5               	retlw	197
  4173  1A04  34AB               	retlw	171
  4174  1A05  34CE               	retlw	206
  4175  1A06  3432               	retlw	50
  4176  1A07  340B               	retlw	11
  4177  1A08  34CF               	retlw	207
  4178  1A09  34D8               	retlw	216
  4179  1A0A  3456               	retlw	86
  4180  1A0B  341D               	retlw	29
  4181  1A0C  3464               	retlw	100
  4182  1A0D  3416               	retlw	22
  4183  1A0E  34FD               	retlw	253
  4184  1A0F  34D3               	retlw	211
  4185  1A10  3407               	retlw	7
  4186  1A11  34F4               	retlw	244
  4187  1A12  349E               	retlw	158
  4188  1A13  3431               	retlw	49
  4189  1A14  34AC               	retlw	172
  4190  1A15  343A               	retlw	58
  4191  1A16  3435               	retlw	53
  4192  1A17  34FF               	retlw	255
  4193  1A18  34C8               	retlw	200
  4194  1A19  342C               	retlw	44
  4195  1A1A  3451               	retlw	81
  4196  1A1B  34E9               	retlw	233
  4197  1A1C  3463               	retlw	99
  4198  1A1D  34E2               	retlw	226
  4199  1A1E  34FA               	retlw	250
  4200  1A1F  3427               	retlw	39
  4201  1A20  3497               	retlw	151
  4202  1A21  34AD               	retlw	173
  4203  1A22  340E               	retlw	14
  4204  1A23  3468               	retlw	104
  4205  1A24  343C               	retlw	60
  4206  1A25  3463               	retlw	99
  4207  1A26  34A5               	retlw	165
  4208  1A27  34A6               	retlw	166
  4209  1A28  3458               	retlw	88
  4210  1A29  3475               	retlw	117
  4211  1A2A  34C1               	retlw	193
  4212  1A2B  34B0               	retlw	176
  4213  1A2C  34F3               	retlw	243
  4214  1A2D  34BB               	retlw	187
  4215  1A2E  346A               	retlw	106
  4216  1A2F  347E               	retlw	126
  4217  1A30  3490               	retlw	144
  4218  1A31  3459               	retlw	89
  4219  1A32  3409               	retlw	9
  4220  1A33  349C               	retlw	156
  4221  1A34  343B               	retlw	59
  4222  1A35  3497               	retlw	151
  4223  1A36  34A2               	retlw	162
  4224  1A37  3452               	retlw	82
  4225  1A38  345F               	retlw	95
  4226  1A39  3481               	retlw	129
  4227  1A3A  34C6               	retlw	198
  4228  1A3B  3444               	retlw	68
  4229  1A3C  34F4               	retlw	244
  4230  1A3D  344F               	retlw	79
  4231  1A3E  346D               	retlw	109
  4232  1A3F  348A               	retlw	138
  4233  1A40  342E               	retlw	46
  4234  1A41  345B               	retlw	91
  4235  1A42  34B7               	retlw	183
  4236  1A43  349E               	retlw	158
  4237  1A44  3485               	retlw	133
  4238  1A45  3495               	retlw	149
  4239  1A46  341C               	retlw	28
  4240  1A47  3450               	retlw	80
  4241  1A48  34E1               	retlw	225
  4242  1A49  3483               	retlw	131
  4243  1A4A  3478               	retlw	120
  4244  1A4B  3446               	retlw	70
  4245  1A4C  344A               	retlw	74
  4246  1A4D  344D               	retlw	77
  4247  1A4E  34D3               	retlw	211
  4248  1A4F  3488               	retlw	136
  4249  1A50  3429               	retlw	41
  4250  1A51  34AF               	retlw	175
  4251  1A52  34B0               	retlw	176
  4252  1A53  346A               	retlw	106
  4253  1A54  3482               	retlw	130
  4254  1A55  3461               	retlw	97
  4255  1A56  341B               	retlw	27
  4256  1A57  34A4               	retlw	164
  4257  1A58  34E6               	retlw	230
  4258  1A59  3477               	retlw	119
  4259  1A5A  347F               	retlw	127
  4260  1A5B  34B2               	retlw	178
  4261  1A5C  344D               	retlw	77
  4262  1A5D  34B9               	retlw	185
  4263  1A5E  34D4               	retlw	212
  4264  1A5F  347C               	retlw	124
  4265  1A60  34B9               	retlw	185
  4266  1A61  34F6               	retlw	246
  4267  1A62  3420               	retlw	32
  4268  1A63  3433               	retlw	51
  4269  1A64  3412               	retlw	18
  4270  1A65  3438               	retlw	56
  4271  1A66  348B               	retlw	139
  4272  1A67  34FD               	retlw	253
  4273  1A68  3476               	retlw	118
  4274  1A69  342E               	retlw	46
  4275  1A6A  34EF               	retlw	239
  4276  1A6B  34EB               	retlw	235
  4277  1A6C  34DD               	retlw	221
  4278  1A6D  34E0               	retlw	224
  4279  1A6E  3444               	retlw	68
  4280  1A6F  3425               	retlw	37
  4281  1A70  34BE               	retlw	190
  4282  1A71  3402               	retlw	2
  4283  1A72  3427               	retlw	39
  4284  1A73  34C7               	retlw	199
  4285  1A74  3415               	retlw	21
  4286  1A75  34CC               	retlw	204
  4287  1A76  348C               	retlw	140
  4288  1A77  3409               	retlw	9
  4289  1A78  3471               	retlw	113
  4290  1A79  34DA               	retlw	218
  4291  1A7A  34E8               	retlw	232
  4292  1A7B  341F               	retlw	31
  4293  1A7C  34DA               	retlw	218
  4294  1A7D  3414               	retlw	20
  4295  1A7E  3443               	retlw	67
  4296  1A7F  34D1               	retlw	209
  4297  1A80  34C5               	retlw	197
  4298  1A81  34F3               	retlw	243
  4299  1A82  345C               	retlw	92
  4300  1A83  3436               	retlw	54
  4301  1A84  346E               	retlw	110
  4302  1A85  343D               	retlw	61
  4303  1A86  34F7               	retlw	247
  4304  1A87  34F8               	retlw	248
  4305  1A88  340A               	retlw	10
  4306  1A89  342B               	retlw	43
  4307  1A8A  3493               	retlw	147
  4308  1A8B  34EE               	retlw	238
  4309  1A8C  34A1               	retlw	161
  4310  1A8D  34E5               	retlw	229
  4311  1A8E  3438               	retlw	56
  4312  1A8F  3420               	retlw	32
  4313  1A90  34C2               	retlw	194
  4314  1A91  3407               	retlw	7
  4315  1A92  345B               	retlw	91
  4316  1A93  34C2               	retlw	194
  4317  1A94  3469               	retlw	105
  4318  1A95  34C9               	retlw	201
  4319  1A96  34F0               	retlw	240
  4320  1A97  340C               	retlw	12
  4321  1A98  340D               	retlw	13
  4322  1A99  34DF               	retlw	223
  4323  1A9A  3494               	retlw	148
  4324  1A9B  341A               	retlw	26
  4325  1A9C  34A6               	retlw	166
  4326  1A9D  3411               	retlw	17
  4327  1A9E  343F               	retlw	63
  4328  1A9F  34D4               	retlw	212
  4329  1AA0  3452               	retlw	82
  4330  1AA1  345E               	retlw	94
  4331  1AA2  34CB               	retlw	203
  4332  1AA3  349B               	retlw	155
  4333  1AA4  34F9               	retlw	249
  4334  1AA5  3490               	retlw	144
  4335  1AA6  3460               	retlw	96
  4336  1AA7  3455               	retlw	85
  4337  1AA8  349D               	retlw	157
  4338  1AA9  3486               	retlw	134
  4339  1AAA  3404               	retlw	4
  4340  1AAB  3443               	retlw	67
  4341  1AAC  3436               	retlw	54
  4342  1AAD  3448               	retlw	72
  4343  1AAE  34AF               	retlw	175
  4344  1AAF  348D               	retlw	141
  4345  1AB0  3455               	retlw	85
  4346  1AB1  34AA               	retlw	170
  4347  1AB2  34CC               	retlw	204
  4348  1AB3  346F               	retlw	111
  4349  1AB4  34FE               	retlw	254
  4350  1AB5  3464               	retlw	100
  4351  1AB6  3467               	retlw	103
  4352  1AB7  34A1               	retlw	161
  4353  1AB8  349A               	retlw	154
  4354  1AB9  3472               	retlw	114
  4355  1ABA  3403               	retlw	3
  4356  1ABB  34B7               	retlw	183
  4357  1ABC  3431               	retlw	49
  4358  1ABD  34BC               	retlw	188
  4359  1ABE  34A8               	retlw	168
  4360  1ABF  3479               	retlw	121
  4361  1AC0  34EB               	retlw	235
  4362  1AC1  34A8               	retlw	168
  4363  1AC2  3472               	retlw	114
  4364  1AC3  346D               	retlw	109
  4365  1AC4  3440               	retlw	64
  4366  1AC5  3466               	retlw	102
  4367  1AC6  34D9               	retlw	217
  4368  1AC7  34A3               	retlw	163
  4369  1AC8  3424               	retlw	36
  4370  1AC9  3470               	retlw	112
  4371  1ACA  34BD               	retlw	189
  4372  1ACB  34B5               	retlw	181
  4373  1ACC  348F               	retlw	143
  4374  1ACD  34BE               	retlw	190
  4375  1ACE  3416               	retlw	22
  4376  1ACF  347B               	retlw	123
  4377  1AD0  34EC               	retlw	236
  4378  1AD1  345C               	retlw	92
  4379  1AD2  3475               	retlw	117
  4380  1AD3  3499               	retlw	153
  4381  1AD4  3447               	retlw	71
  4382  1AD5  3492               	retlw	146
  4383  1AD6  34DE               	retlw	222
  4384  1AD7  3457               	retlw	87
  4385  1AD8  3423               	retlw	35
  4386  1AD9  3484               	retlw	132
  4387  1ADA  34BA               	retlw	186
  4388  1ADB  3441               	retlw	65
  4389  1ADC  3488               	retlw	136
  4390  1ADD  344A               	retlw	74
  4391  1ADE  3411               	retlw	17
  4392  1ADF  348F               	retlw	143
  4393  1AE0  347C               	retlw	124
  4394  1AE1  3405               	retlw	5
  4395  1AE2  34E5               	retlw	229
  4396  1AE3  34C0               	retlw	192
  4397  1AE4  34D7               	retlw	215
  4398  1AE5  34CB               	retlw	203
  4399  1AE6  344E               	retlw	78
  4400  1AE7  340E               	retlw	14
  4401  1AE8  34B3               	retlw	179
  4402  1AE9  34DD               	retlw	221
  4403  1AEA  342A               	retlw	42
  4404  1AEB  3418               	retlw	24
  4405  1AEC  3418               	retlw	24
  4406  1AED  3413               	retlw	19
  4407  1AEE  3481               	retlw	129
  4408  1AEF  34D6               	retlw	214
  4409  1AF0  347B               	retlw	123
  4410  1AF1  34F1               	retlw	241
  4411  1AF2  34E2               	retlw	226
  4412  1AF3  3434               	retlw	52
  4413  1AF4  34D0               	retlw	208
  4414  1AF5  343F               	retlw	63
  4415  1AF6  3449               	retlw	73
  4416  1AF7  34FA               	retlw	250
  4417  1AF8  34B4               	retlw	180
  4418  1AF9  3429               	retlw	41
  4419  1AFA  342D               	retlw	45
  4420  1AFB  34EC               	retlw	236
  4421  1AFC  341F               	retlw	31
  4422  1AFD  34E7               	retlw	231
  4423  1AFE  3486               	retlw	134
  4424  1AFF  3422               	retlw	34
  4425  1B00  3413               	retlw	19
  4426  1B01  34A2               	retlw	162
  4427  1B02  348A               	retlw	138
  4428  1B03  3467               	retlw	103
  4429  1B04  34B8               	retlw	184
  4430  1B05  346C               	retlw	108
  4431  1B06  3421               	retlw	33
  4432  1B07  34A9               	retlw	169
  4433  1B08  34DC               	retlw	220
  4434  1B09  347A               	retlw	122
  4435  1B0A  3445               	retlw	69
  4436  1B0B  34BF               	retlw	191
  4437  1B0C  3477               	retlw	119
  4438  1B0D  34B4               	retlw	180
  4439  1B0E  34EE               	retlw	238
  4440  1B0F  3471               	retlw	113
  4441  1B10  3414               	retlw	20
  4442  1B11  3456               	retlw	86
  4443  1B12  348D               	retlw	141
  4444  1B13  3493               	retlw	147
  4445  1B14  34BF               	retlw	191
  4446  1B15  3498               	retlw	152
  4447  1B16  3426               	retlw	38
  4448  1B17  345D               	retlw	93
  4449  1B18  34DB               	retlw	219
  4450  1B19  348E               	retlw	142
  4451  1B1A  3442               	retlw	66
  4452  1B1B  344B               	retlw	75
  4453  1B1C  3470               	retlw	112
  4454  1B1D  3440               	retlw	64
  4455  1B1E  34E9               	retlw	233
  4456  1B1F  3485               	retlw	133
  4457  1B20  3484               	retlw	132
  4458  1B21  340F               	retlw	15
  4459  1B22  341D               	retlw	29
  4460  1B23  34CA               	retlw	202
  4461  1B24  342F               	retlw	47
  4462  1B25  34C1               	retlw	193
  4463  1B26  346F               	retlw	111
  4464  1B27  344B               	retlw	75
  4465  1B28  344B               	retlw	75
  4466  1B29  34D7               	retlw	215
  4467  1B2A  34D2               	retlw	210
  4468  1B2B  3412               	retlw	18
  4469  1B2C  34E0               	retlw	224
  4470  1B2D  3419               	retlw	25
  4471  1B2E  3479               	retlw	121
  4472  1B2F  34DC               	retlw	220
  4473  1B30  3483               	retlw	131
  4474  1B31  34FB               	retlw	251
  4475  1B32  341A               	retlw	26
  4476  1B33  343E               	retlw	62
  4477  1B34  3428               	retlw	40
  4478  1B35  3435               	retlw	53
  4479  1B36  34B1               	retlw	177
  4480  1B37  34F0               	retlw	240
  4481  1B38  344C               	retlw	76
  4482  1B39  3423               	retlw	35
  4483  1B3A  34D5               	retlw	213
  4484  1B3B  34E6               	retlw	230
  4485  1B3C  34E7               	retlw	231
  4486  1B3D  34ED               	retlw	237
  4487  1B3E  347E               	retlw	126
  4488  1B3F  3428               	retlw	40
  4489  1B40  343D               	retlw	61
  4490  1B41  34F9               	retlw	249
  4491  1B42  34A4               	retlw	164
  4492  1B43  343C               	retlw	60
  4493  1B44  3496               	retlw	150
  4494  1B45  3437               	retlw	55
  4495  1B46  340F               	retlw	15
  4496  1B47  34F2               	retlw	242
  4497  1B48  34F2               	retlw	242
  4498  1B49  3421               	retlw	33
  4499  1B4A  346B               	retlw	107
  4500  1B4B  34E4               	retlw	228
  4501  1B4C  3459               	retlw	89
  4502  1B4D  34EF               	retlw	239
  4503  1B4E  34C0               	retlw	192
  4504  1B4F  342A               	retlw	42
  4505  1B50  343A               	retlw	58
  4506  1B51  340D               	retlw	13
  4507  1B52  34A3               	retlw	163
  4508  1B53  34C8               	retlw	200
  4509  1B54  3491               	retlw	145
  4510  1B55  34C3               	retlw	195
  4511  1B56  3408               	retlw	8
  4512  1B57  3406               	retlw	6
  4513  1B58  34F5               	retlw	245
  4514  1B59  34D5               	retlw	213
  4515  1B5A  346C               	retlw	108
  4516  1B5B  3410               	retlw	16
  4517  1B5C  345E               	retlw	94
  4518  1B5D  341B               	retlw	27
  4519  1B5E  34C7               	retlw	199
  4520  1B5F  34DE               	retlw	222
  4521  1B60  34AA               	retlw	170
  4522  1B61  3454               	retlw	84
  4523  1B62  3433               	retlw	51
  4524  1B63  3491               	retlw	145
  4525  1B64  3401               	retlw	1
  4526  1B65  349A               	retlw	154
  4527  1B66  3498               	retlw	152
  4528  1B67  345F               	retlw	95
  4529  1B68  3465               	retlw	101
  4530  1B69  348C               	retlw	140
  4531  1B6A  34FC               	retlw	252
  4532  1B6B  3449               	retlw	73
  4533  1B6C  34CE               	retlw	206
  4534  1B6D  3442               	retlw	66
  4535  1B6E  3457               	retlw	87
  4536  1B6F  3487               	retlw	135
  4537  1B70  34AD               	retlw	173
  4538  1B71  34A0               	retlw	160
  4539  1B72  3434               	retlw	52
  4540  1B73  3465               	retlw	101
  4541  1B74  3406               	retlw	6
  4542  1B75  346E               	retlw	110
  4543  1B76  349F               	retlw	159
  4544  1B77  34AB               	retlw	171
  4545  1B78  3462               	retlw	98
  4546  1B79  3478               	retlw	120
  4547  1B7A  34FB               	retlw	251
  4548  1B7B  34BD               	retlw	189
  4549  1B7C  34C9               	retlw	201
  4550  1B7D  34B6               	retlw	182
  4551  1B7E  3450               	retlw	80
  4552  1B7F  3473               	retlw	115
  4553  1B80  34D6               	retlw	214
  4554  1B81  3451               	retlw	81
  4555  1B82  344F               	retlw	79
  4556  1B83  3494               	retlw	148
  4557  1B84  347D               	retlw	125
  4558  1B85  349F               	retlw	159
  4559  1B86  34E4               	retlw	228
  4560  1B87  345A               	retlw	90
  4561  1B88  3419               	retlw	25
  4562  1B89  3489               	retlw	137
  4563  1B8A  3480               	retlw	128
  4564  1B8B  344C               	retlw	76
  4565  1B8C  34B2               	retlw	178
  4566  1B8D  3447               	retlw	71
  4567  1B8E  342B               	retlw	43
  4568  1B8F  3482               	retlw	130
  4569  1B90  34D1               	retlw	209
  4570  1B91  34A5               	retlw	165
  4571  1B92  3448               	retlw	72
  4572  1B93  3460               	retlw	96
  4573  1B94  347A               	retlw	122
  4574  1B95  346B               	retlw	107
  4575  1B96  34E3               	retlw	227
  4576  1B97  34AE               	retlw	174
  4577  1B98  341E               	retlw	30
  4578  1B99  347D               	retlw	125
  4579  1B9A  3487               	retlw	135
  4580  1B9B  34B8               	retlw	184
  4581  1B9C  34B5               	retlw	181
  4582  1B9D  34B3               	retlw	179
  4583  1B9E  342C               	retlw	44
  4584  1B9F  3476               	retlw	118
  4585  1BA0  3441               	retlw	65
  4586  1BA1  34FC               	retlw	252
  4587  1BA2  34D8               	retlw	216
  4588  1BA3  3439               	retlw	57
  4589  1BA4  34EA               	retlw	234
  4590  1BA5  3432               	retlw	50
  4591  1BA6  3473               	retlw	115
  4592  1BA7  34F7               	retlw	247
  4593  1BA8  348E               	retlw	142
  4594  1BA9  3424               	retlw	36
  4595  1BAA  3417               	retlw	23
  4596  1BAB  34E1               	retlw	225
  4597  1BAC  3425               	retlw	37
  4598  1BAD  34EA               	retlw	234
  4599  1BAE  34BC               	retlw	188
  4600  1BAF  342F               	retlw	47
  4601  1BB0  3446               	retlw	70
  4602  1BB1  3408               	retlw	8
  4603  1BB2  34DF               	retlw	223
  4604  1BB3  34CD               	retlw	205
  4605  1BB4  34ED               	retlw	237
  4606  1BB5  34C6               	retlw	198
  4607  1BB6  3474               	retlw	116
  4608  1BB7  3403               	retlw	3
  4609  1BB8  3489               	retlw	137
  4610  1BB9  34D0               	retlw	208
  4611  1BBA  3410               	retlw	16
  4612  1BBB  3415               	retlw	21
  4613  1BBC  3422               	retlw	34
  4614  1BBD  341E               	retlw	30
  4615  1BBE  34BB               	retlw	187
  4616  1BBF  34DB               	retlw	219
  4617  1BC0  34F8               	retlw	248
  4618  1BC1  340A               	retlw	10
  4619  1BC2  3461               	retlw	97
  4620  1BC3  34CF               	retlw	207
  4621  1BC4  3453               	retlw	83
  4622  1BC5  34C4               	retlw	196
  4623  1BC6  34CA               	retlw	202
  4624  1BC7  3401               	retlw	1
  4625  1BC8  3437               	retlw	55
  4626  1BC9  34D2               	retlw	210
  4627  1BCA  34AE               	retlw	174
  4628  1BCB  3417               	retlw	23
  4629  1BCC  349C               	retlw	156
  4630  1BCD  341C               	retlw	28
  4631  1BCE  3405               	retlw	5
  4632  1BCF  34D9               	retlw	217
  4633  1BD0  34FF               	retlw	255
  4634  1BD1  34FE               	retlw	254
  4635  1BD2  3466               	retlw	102
  4636  1BD3  343B               	retlw	59
  4637  1BD4  3454               	retlw	84
  4638  1BD5  3430               	retlw	48
  4639  1BD6  34CD               	retlw	205
  4640  1BD7  34F5               	retlw	245
  4641  1BD8  3430               	retlw	48
  4642  1BD9  3426               	retlw	38
  4643  1BDA  34A9               	retlw	169
  4644  1BDB  34E3               	retlw	227
  4645  1BDC  349B               	retlw	155
  4646  1BDD  34E8               	retlw	232
  4647  1BDE  3402               	retlw	2
  4648  1BDF  342D               	retlw	45
  4649  1BE0  346F               	retlw	111
  4650  1BE1  34A7               	retlw	167
  4651  1BE2  34F6               	retlw	246
  4652  1BE3  3462               	retlw	98
  4653  1BE4  34C4               	retlw	196
  4654  1BE5  3469               	retlw	105
  4655  1BE6  345D               	retlw	93
  4656  1BE7  34AC               	retlw	172
  4657  1BE8  34A0               	retlw	160
  4658  1BE9  347F               	retlw	127
  4659  1BEA  3439               	retlw	57
  4660  1BEB  34BA               	retlw	186
  4661  1BEC  340B               	retlw	11
  4662  1BED  34B1               	retlw	177
  4663  1BEE  3492               	retlw	146
  4664  1BEF  3474               	retlw	116
  4665  1BF0  3468               	retlw	104
  4666  1BF1  3453               	retlw	83
  4667  1BF2  34F1               	retlw	241
  4668  1BF3  3496               	retlw	150
  4669  1BF4  34C3               	retlw	195
  4670  1BF5  349D               	retlw	157
  4671  1BF6  345A               	retlw	90
  4672  1BF7  3458               	retlw	88
  4673  1BF8  34A7               	retlw	167
  4674  1BF9  348B               	retlw	139
  4675  1BFA  343E               	retlw	62
  4676  1BFB  344E               	retlw	78
  4677  1BFC  340C               	retlw	12
  4678  1BFD  3445               	retlw	69
  4679  1BFE  3495               	retlw	149
  4680  1BFF  3480               	retlw	128
  4681  1C00                     __end_of_crc15Table:	
  4682                           
  4683                           	psect	stringtext4
  4684  3000                     __pstringtext4:	
  4685  3000                     __powers_:	
  4686  3000  3400               	retlw	0
  4687  3001  3400               	retlw	0
  4688  3002  3480               	retlw	128
  4689  3003  343F               	retlw	63
  4690  3004  3400               	retlw	0
  4691  3005  3400               	retlw	0
  4692  3006  3420               	retlw	32
  4693  3007  3441               	retlw	65
  4694  3008  3400               	retlw	0
  4695  3009  3400               	retlw	0
  4696  300A  34C8               	retlw	200
  4697  300B  3442               	retlw	66
  4698  300C  3400               	retlw	0
  4699  300D  3400               	retlw	0
  4700  300E  347A               	retlw	122
  4701  300F  3444               	retlw	68
  4702  3010  3400               	retlw	0
  4703  3011  3440               	retlw	64
  4704  3012  341C               	retlw	28
  4705  3013  3446               	retlw	70
  4706  3014  3400               	retlw	0
  4707  3015  3450               	retlw	80
  4708  3016  34C3               	retlw	195
  4709  3017  3447               	retlw	71
  4710  3018  3400               	retlw	0
  4711  3019  3424               	retlw	36
  4712  301A  3474               	retlw	116
  4713  301B  3449               	retlw	73
  4714  301C  3480               	retlw	128
  4715  301D  3496               	retlw	150
  4716  301E  3418               	retlw	24
  4717  301F  344B               	retlw	75
  4718  3020  3420               	retlw	32
  4719  3021  34BC               	retlw	188
  4720  3022  34BE               	retlw	190
  4721  3023  344C               	retlw	76
  4722  3024  3428               	retlw	40
  4723  3025  346B               	retlw	107
  4724  3026  346E               	retlw	110
  4725  3027  344E               	retlw	78
  4726  3028  34F9               	retlw	249
  4727  3029  3402               	retlw	2
  4728  302A  3415               	retlw	21
  4729  302B  3450               	retlw	80
  4730  302C  34EC               	retlw	236
  4731  302D  3478               	retlw	120
  4732  302E  34AD               	retlw	173
  4733  302F  3460               	retlw	96
  4734  3030  34CA               	retlw	202
  4735  3031  34F2               	retlw	242
  4736  3032  3449               	retlw	73
  4737  3033  3471               	retlw	113
  4738  3034                     __end_of__powers_:	
  4739                           
  4740                           	psect	stringtext5
  4741  3034                     __pstringtext5:	
  4742  3034                     __npowers_:	
  4743  3034  3400               	retlw	0
  4744  3035  3400               	retlw	0
  4745  3036  3480               	retlw	128
  4746  3037  343F               	retlw	63
  4747  3038  34CD               	retlw	205
  4748  3039  34CC               	retlw	204
  4749  303A  34CC               	retlw	204
  4750  303B  343D               	retlw	61
  4751  303C  340A               	retlw	10
  4752  303D  34D7               	retlw	215
  4753  303E  3423               	retlw	35
  4754  303F  343C               	retlw	60
  4755  3040  346F               	retlw	111
  4756  3041  3412               	retlw	18
  4757  3042  3483               	retlw	131
  4758  3043  343A               	retlw	58
  4759  3044  3417               	retlw	23
  4760  3045  34B7               	retlw	183
  4761  3046  34D1               	retlw	209
  4762  3047  3438               	retlw	56
  4763  3048  34AC               	retlw	172
  4764  3049  34C5               	retlw	197
  4765  304A  3427               	retlw	39
  4766  304B  3437               	retlw	55
  4767  304C  34BD               	retlw	189
  4768  304D  3437               	retlw	55
  4769  304E  3486               	retlw	134
  4770  304F  3435               	retlw	53
  4771  3050  3495               	retlw	149
  4772  3051  34BF               	retlw	191
  4773  3052  34D6               	retlw	214
  4774  3053  3433               	retlw	51
  4775  3054  3477               	retlw	119
  4776  3055  34CC               	retlw	204
  4777  3056  342B               	retlw	43
  4778  3057  3432               	retlw	50
  4779  3058  345F               	retlw	95
  4780  3059  3470               	retlw	112
  4781  305A  3489               	retlw	137
  4782  305B  3430               	retlw	48
  4783  305C  34FF               	retlw	255
  4784  305D  34E6               	retlw	230
  4785  305E  34DB               	retlw	219
  4786  305F  342E               	retlw	46
  4787  3060  3408               	retlw	8
  4788  3061  34E5               	retlw	229
  4789  3062  343C               	retlw	60
  4790  3063  341E               	retlw	30
  4791  3064  3460               	retlw	96
  4792  3065  3442               	retlw	66
  4793  3066  34A2               	retlw	162
  4794  3067  340D               	retlw	13
  4795  3068                     __end_of__npowers_:	
  4796                           
  4797                           	psect	stringtext6
  4798  3068                     __pstringtext6:	
  4799  3068                     _temperatures:	
  4800  3068  3494               	retlw	148
  4801  3069  3476               	retlw	118
  4802  306A  3467               	retlw	103
  4803  306B  345C               	retlw	92
  4804  306C  3454               	retlw	84
  4805  306D  344E               	retlw	78
  4806  306E  3448               	retlw	72
  4807  306F  3443               	retlw	67
  4808  3070  343F               	retlw	63
  4809  3071  343C               	retlw	60
  4810  3072  3438               	retlw	56
  4811  3073  3435               	retlw	53
  4812  3074  3433               	retlw	51
  4813  3075  3430               	retlw	48
  4814  3076  342D               	retlw	45
  4815  3077  342B               	retlw	43
  4816  3078  3429               	retlw	41
  4817  3079  3427               	retlw	39
  4818  307A  3425               	retlw	37
  4819  307B  3422               	retlw	34
  4820  307C  3421               	retlw	33
  4821  307D  341F               	retlw	31
  4822  307E  341D               	retlw	29
  4823  307F  341B               	retlw	27
  4824  3080  3419               	retlw	25
  4825  3081  3417               	retlw	23
  4826  3082  3416               	retlw	22
  4827  3083  3414               	retlw	20
  4828  3084  3412               	retlw	18
  4829  3085  3410               	retlw	16
  4830  3086  340F               	retlw	15
  4831  3087  340D               	retlw	13
  4832  3088  340B               	retlw	11
  4833  3089  3409               	retlw	9
  4834  308A  3407               	retlw	7
  4835  308B  3405               	retlw	5
  4836  308C  3403               	retlw	3
  4837  308D  3401               	retlw	1
  4838  308E  34FF               	retlw	255
  4839  308F  34FD               	retlw	253
  4840  3090  34FB               	retlw	251
  4841  3091  34F8               	retlw	248
  4842  3092  34F5               	retlw	245
  4843  3093  34F2               	retlw	242
  4844  3094  34EF               	retlw	239
  4845  3095  34EB               	retlw	235
  4846  3096  34E6               	retlw	230
  4847  3097  34E0               	retlw	224
  4848  3098  34D6               	retlw	214
  4849  3099  34EF               	retlw	239
  4850  309A                     __end_of_temperatures:	
  4851                           
  4852                           	psect	stringtext7
  4853  309A                     __pstringtext7:	
  4854  309A                     _dpowers:	
  4855  309A  3401               	retlw	1
  4856  309B  3400               	retlw	0
  4857  309C  3400               	retlw	0
  4858  309D  3400               	retlw	0
  4859  309E  340A               	retlw	10
  4860  309F  3400               	retlw	0
  4861  30A0  3400               	retlw	0
  4862  30A1  3400               	retlw	0
  4863  30A2  3464               	retlw	100
  4864  30A3  3400               	retlw	0
  4865  30A4  3400               	retlw	0
  4866  30A5  3400               	retlw	0
  4867  30A6  34E8               	retlw	232
  4868  30A7  3403               	retlw	3
  4869  30A8  3400               	retlw	0
  4870  30A9  3400               	retlw	0
  4871  30AA  3410               	retlw	16
  4872  30AB  3427               	retlw	39
  4873  30AC  3400               	retlw	0
  4874  30AD  3400               	retlw	0
  4875  30AE  34A0               	retlw	160
  4876  30AF  3486               	retlw	134
  4877  30B0  3401               	retlw	1
  4878  30B1  3400               	retlw	0
  4879  30B2  3440               	retlw	64
  4880  30B3  3442               	retlw	66
  4881  30B4  340F               	retlw	15
  4882  30B5  3400               	retlw	0
  4883  30B6  3480               	retlw	128
  4884  30B7  3496               	retlw	150
  4885  30B8  3498               	retlw	152
  4886  30B9  3400               	retlw	0
  4887  30BA  3400               	retlw	0
  4888  30BB  34E1               	retlw	225
  4889  30BC  34F5               	retlw	245
  4890  30BD  3405               	retlw	5
  4891  30BE  3400               	retlw	0
  4892  30BF  34CA               	retlw	202
  4893  30C0  349A               	retlw	154
  4894  30C1  343B               	retlw	59
  4895  30C2                     __end_of_dpowers:	
  4896                           
  4897                           	psect	stringtext8
  4898  3800                     __pstringtext8:	
  4899  3800                     _t0:	
  4900  3800  3433               	retlw	51
  4901  3801  3413               	retlw	19
  4902  3802  3495               	retlw	149
  4903  3803  3443               	retlw	67
  4904  3804                     __end_of_t0:	
  4905                           
  4906                           	psect	stringtext9
  4907  3804                     __pstringtext9:	
  4908  3804                     main@total_capacity:	
  4909  3804  34C0               	retlw	192
  4910  3805  34A8               	retlw	168
  4911  3806                     __end_ofmain@total_capacity:	
  4912                           
  4913                           	psect	stringtext10
  4914  3806                     __pstringtext10:	
  4915  3806                     _Beta:	
  4916  3806  3489               	retlw	137
  4917  3807  340F               	retlw	15
  4918  3808                     __end_of_Beta:	
  4919                           
  4920                           	psect	stringtext11
  4921  3808                     __pstringtext11:	
  4922  3808                     LTC6804_rdcfg@BYTES_IN_REG:	
  4923  3808  3408               	retlw	8
  4924  3809                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4925                           
  4926                           	psect	stringtext12
  4927  3809                     __pstringtext12:	
  4928  3809                     LTC6804_wrcfg@BYTES_IN_REG:	
  4929  3809  3406               	retlw	6
  4930  380A                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4931                           
  4932                           	psect	stringtext13
  4933  380A                     __pstringtext13:	
  4934  380A                     LTC6804_rdaux_reg@REG_LEN:	
  4935  380A  3408               	retlw	8
  4936  380B                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4937                           
  4938                           	psect	stringtext14
  4939  380B                     __pstringtext14:	
  4940  380B                     LTC6804_rdaux@GPIO_IN_REG:	
  4941  380B  3403               	retlw	3
  4942  380C                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4943                           
  4944                           	psect	stringtext15
  4945  380C                     __pstringtext15:	
  4946  380C                     LTC6804_rdaux@BYT_IN_REG:	
  4947  380C  3406               	retlw	6
  4948  380D                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4949                           
  4950                           	psect	stringtext16
  4951  380D                     __pstringtext16:	
  4952  380D                     LTC6804_rdaux@NUM_RX_BYT:	
  4953  380D  3408               	retlw	8
  4954  380E                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4955                           
  4956                           	psect	stringtext17
  4957  380E                     __pstringtext17:	
  4958  380E                     LTC6804_rdcv_reg@REG_LEN:	
  4959  380E  3408               	retlw	8
  4960  380F                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4961                           
  4962                           	psect	stringtext18
  4963  380F                     __pstringtext18:	
  4964  380F                     LTC6804_rdcv@CELL_IN_REG:	
  4965  380F  3403               	retlw	3
  4966  3810                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4967                           
  4968                           	psect	stringtext19
  4969  3810                     __pstringtext19:	
  4970  3810                     LTC6804_rdcv@BYT_IN_REG:	
  4971  3810  3406               	retlw	6
  4972  3811                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4973                           
  4974                           	psect	stringtext20
  4975  3811                     __pstringtext20:	
  4976  3811                     LTC6804_rdcv@NUM_RX_BYT:	
  4977  3811  3408               	retlw	8
  4978  3812                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4979                           
  4980                           	psect	stringtext21
  4981  30C2                     __pstringtext21:	
  4982  30C2                     LTC6804_rdstat_reg@REG_LEN:	
  4983  30C2  3408               	retlw	8
  4984  30C3                     __end_ofLTC6804_rdstat_reg@REG_LEN:	
  4985  0012                     _PIR2bits	set	18
  4986  001C                     _T2CON	set	28
  4987  001B                     _PR2	set	27
  4988  0011                     _PIR1bits	set	17
  4989  000B                     _INTCONbits	set	11
  4990  0092                     _PIE2bits	set	146
  4991  0095                     _OPTION_REG	set	149
  4992  009F                     _ADCON2	set	159
  4993  009E                     _ADCON1	set	158
  4994  009D                     _ADCON0	set	157
  4995  009B                     _ADRESL	set	155
  4996  009C                     _ADRESH	set	156
  4997  009D                     _ADCON0bits	set	157
  4998  008E                     _TRISCbits	set	142
  4999  008D                     _TRISBbits	set	141
  5000  008C                     _TRISAbits	set	140
  5001  008F                     _TRISDbits	set	143
  5002  0091                     _PIE1bits	set	145
  5003  011D                     _APFCON1bits	set	285
  5004  010D                     _LATBbits	set	269
  5005  010C                     _LATAbits	set	268
  5006  010F                     _LATDbits	set	271
  5007  019B                     _SPBRGL	set	411
  5008  019C                     _SPBRGH	set	412
  5009  019D                     _RCSTAbits	set	413
  5010  019E                     _TXSTAbits	set	414
  5011  018F                     _ANSELD	set	399
  5012  018D                     _ANSELB	set	397
  5013  018C                     _ANSELA	set	396
  5014  019A                     _TXREG	set	410
  5015  0211                     _SSP1BUF	set	529
  5016  0215                     _SSP1CON1bits	set	533
  5017  0215                     _SSP1CON1	set	533
  5018  0214                     _SSP1STATbits	set	532
  5019  0217                     _SSP1CON3bits	set	535
  5020  0214                     _SSPSTAT	set	532
  5021  0212                     _SSPADD	set	530
  5022  0215                     _SSPCON1	set	533
  5023  0214                     _SSPSTATbits	set	532
  5024  0216                     _SSPCON2bits	set	534
  5025  0211                     _SSPBUF	set	529
  5026  020F                     _WPUD	set	527
  5027  029A                     _CCP2CON	set	666
  5028  30C3                     STR_4:	
  5029  30C3  344D               	retlw	77	;'M'
  5030  30C4  3461               	retlw	97	;'a'
  5031  30C5  3478               	retlw	120	;'x'
  5032  30C6  3420               	retlw	32	;' '
  5033  30C7  3444               	retlw	68	;'D'
  5034  30C8  3469               	retlw	105	;'i'
  5035  30C9  3466               	retlw	102	;'f'
  5036  30CA  3466               	retlw	102	;'f'
  5037  30CB  3465               	retlw	101	;'e'
  5038  30CC  3472               	retlw	114	;'r'
  5039  30CD  3465               	retlw	101	;'e'
  5040  30CE  346E               	retlw	110	;'n'
  5041  30CF  3463               	retlw	99	;'c'
  5042  30D0  3465               	retlw	101	;'e'
  5043  30D1  3420               	retlw	32	;' '
  5044  30D2  343D               	retlw	61	;'='
  5045  30D3  3420               	retlw	32	;' '
  5046  30D4  3456               	retlw	86	;'V'
  5047  30D5  3425               	retlw	37	;'%'
  5048  30D6  3469               	retlw	105	;'i'
  5049  30D7  3420               	retlw	32	;' '
  5050  30D8  3426               	retlw	38	;'&'
  5051  30D9  3420               	retlw	32	;' '
  5052  30DA  3456               	retlw	86	;'V'
  5053  30DB  3425               	retlw	37	;'%'
  5054  30DC  3469               	retlw	105	;'i'
  5055  30DD  3420               	retlw	32	;' '
  5056  30DE  3440               	retlw	64	;'@'
  5057  30DF  3420               	retlw	32	;' '
  5058  30E0  3425               	retlw	37	;'%'
  5059  30E1  3430               	retlw	48	;'0'
  5060  30E2  342E               	retlw	46	;'.'
  5061  30E3  3434               	retlw	52	;'4'
  5062  30E4  3466               	retlw	102	;'f'
  5063  30E5  3456               	retlw	86	;'V'
  5064  30E6  340A               	retlw	10
  5065  30E7  340D               	retlw	13
  5066  30E8  3400               	retlw	0
  5067                           
  5068                           	psect	stringtext22
  5069  30E9                     __pstringtext22:	
  5070  30E9                     STR_1:	
  5071  30E9  3453               	retlw	83	;'S'
  5072  30EA  344F               	retlw	79	;'O'
  5073  30EB  3443               	retlw	67	;'C'
  5074  30EC  3420               	retlw	32	;' '
  5075  30ED  343D               	retlw	61	;'='
  5076  30EE  3420               	retlw	32	;' '
  5077  30EF  3425               	retlw	37	;'%'
  5078  30F0  3430               	retlw	48	;'0'
  5079  30F1  342E               	retlw	46	;'.'
  5080  30F2  3434               	retlw	52	;'4'
  5081  30F3  3466               	retlw	102	;'f'
  5082  30F4  3420               	retlw	32	;' '
  5083  30F5  3470               	retlw	112	;'p'
  5084  30F6  3465               	retlw	101	;'e'
  5085  30F7  3472               	retlw	114	;'r'
  5086  30F8  3463               	retlw	99	;'c'
  5087  30F9  3465               	retlw	101	;'e'
  5088  30FA  346E               	retlw	110	;'n'
  5089  30FB  3474               	retlw	116	;'t'
  5090  30FC  3420               	retlw	32	;' '
  5091  30FD  340A               	retlw	10
  5092  30FE  340D               	retlw	13
  5093  30FF  3400               	retlw	0
  5094                           
  5095                           	psect	stringtext23
  5096  3100                     __pstringtext23:	
  5097  3100                     STR_3:	
  5098  3100  3450               	retlw	80	;'P'
  5099  3101  3461               	retlw	97	;'a'
  5100  3102  3463               	retlw	99	;'c'
  5101  3103  346B               	retlw	107	;'k'
  5102  3104  3420               	retlw	32	;' '
  5103  3105  3456               	retlw	86	;'V'
  5104  3106  346F               	retlw	111	;'o'
  5105  3107  346C               	retlw	108	;'l'
  5106  3108  3474               	retlw	116	;'t'
  5107  3109  3461               	retlw	97	;'a'
  5108  310A  3467               	retlw	103	;'g'
  5109  310B  3465               	retlw	101	;'e'
  5110  310C  343A               	retlw	58	;':'
  5111  310D  3420               	retlw	32	;' '
  5112  310E  3425               	retlw	37	;'%'
  5113  310F  3430               	retlw	48	;'0'
  5114  3110  342E               	retlw	46	;'.'
  5115  3111  3434               	retlw	52	;'4'
  5116  3112  3466               	retlw	102	;'f'
  5117  3113  3456               	retlw	86	;'V'
  5118  3114  340A               	retlw	10
  5119  3115  340D               	retlw	13
  5120  3116  3400               	retlw	0
  5121                           
  5122                           	psect	stringtext24
  5123  3117                     __pstringtext24:	
  5124  3117                     STR_7:	
  5125  3117  3448               	retlw	72	;'H'
  5126  3118  3469               	retlw	105	;'i'
  5127  3119  3467               	retlw	103	;'g'
  5128  311A  3468               	retlw	104	;'h'
  5129  311B  3465               	retlw	101	;'e'
  5130  311C  3473               	retlw	115	;'s'
  5131  311D  3474               	retlw	116	;'t'
  5132  311E  3420               	retlw	32	;' '
  5133  311F  3454               	retlw	84	;'T'
  5134  3120  3465               	retlw	101	;'e'
  5135  3121  346D               	retlw	109	;'m'
  5136  3122  3470               	retlw	112	;'p'
  5137  3123  343A               	retlw	58	;':'
  5138  3124  3420               	retlw	32	;' '
  5139  3125  3425               	retlw	37	;'%'
  5140  3126  3469               	retlw	105	;'i'
  5141  3127  3443               	retlw	67	;'C'
  5142  3128  340A               	retlw	10
  5143  3129  340D               	retlw	13
  5144  312A  3400               	retlw	0
  5145                           
  5146                           	psect	stringtext25
  5147  312B                     __pstringtext25:	
  5148  312B                     STR_5:	
  5149  312B  3463               	retlw	99	;'c'
  5150  312C  3475               	retlw	117	;'u'
  5151  312D  3472               	retlw	114	;'r'
  5152  312E  3472               	retlw	114	;'r'
  5153  312F  3465               	retlw	101	;'e'
  5154  3130  346E               	retlw	110	;'n'
  5155  3131  3474               	retlw	116	;'t'
  5156  3132  3420               	retlw	32	;' '
  5157  3133  343D               	retlw	61	;'='
  5158  3134  3420               	retlw	32	;' '
  5159  3135  3425               	retlw	37	;'%'
  5160  3136  3430               	retlw	48	;'0'
  5161  3137  342E               	retlw	46	;'.'
  5162  3138  3434               	retlw	52	;'4'
  5163  3139  3466               	retlw	102	;'f'
  5164  313A  3441               	retlw	65	;'A'
  5165  313B  340A               	retlw	10
  5166  313C  340D               	retlw	13
  5167  313D  3400               	retlw	0
  5168                           
  5169                           	psect	stringtext26
  5170  313E                     __pstringtext26:	
  5171  313E                     STR_6:	
  5172  313E  3454               	retlw	84	;'T'
  5173  313F  3465               	retlw	101	;'e'
  5174  3140  346D               	retlw	109	;'m'
  5175  3141  3470               	retlw	112	;'p'
  5176  3142  3425               	retlw	37	;'%'
  5177  3143  3469               	retlw	105	;'i'
  5178  3144  3420               	retlw	32	;' '
  5179  3145  343D               	retlw	61	;'='
  5180  3146  3420               	retlw	32	;' '
  5181  3147  3425               	retlw	37	;'%'
  5182  3148  3469               	retlw	105	;'i'
  5183  3149  3443               	retlw	67	;'C'
  5184  314A  340A               	retlw	10
  5185  314B  340D               	retlw	13
  5186  314C  3400               	retlw	0
  5187                           
  5188                           	psect	stringtext27
  5189  314D                     __pstringtext27:	
  5190  314D                     STR_2:	
  5191  314D  3456               	retlw	86	;'V'
  5192  314E  3425               	retlw	37	;'%'
  5193  314F  3469               	retlw	105	;'i'
  5194  3150  3420               	retlw	32	;' '
  5195  3151  343D               	retlw	61	;'='
  5196  3152  3420               	retlw	32	;' '
  5197  3153  3425               	retlw	37	;'%'
  5198  3154  3430               	retlw	48	;'0'
  5199  3155  342E               	retlw	46	;'.'
  5200  3156  3434               	retlw	52	;'4'
  5201  3157  3466               	retlw	102	;'f'
  5202  3158  3456               	retlw	86	;'V'
  5203  3159  340A               	retlw	10
  5204  315A  340D               	retlw	13
  5205  315B  3400               	retlw	0
  5206                           
  5207                           	psect	stringtext28
  5208  315C                     __pstringtext28:	
  5209  315C                     STR_9:	
  5210  315C  341B               	retlw	27
  5211  315D  345B               	retlw	91	;'['
  5212  315E  3432               	retlw	50	;'2'
  5213  315F  344B               	retlw	75	;'K'
  5214  3160  3420               	retlw	32	;' '
  5215  3161  341B               	retlw	27
  5216  3162  345B               	retlw	91	;'['
  5217  3163  3441               	retlw	65	;'A'
  5218  3164  3420               	retlw	32	;' '
  5219  3165  340D               	retlw	13
  5220  3166  3400               	retlw	0
  5221                           
  5222                           	psect	stringtext29
  5223  3167                     __pstringtext29:	
  5224  3167                     STR_8:	
  5225  3167  341B               	retlw	27
  5226  3168  345B               	retlw	91	;'['
  5227  3169  3432               	retlw	50	;'2'
  5228  316A  344B               	retlw	75	;'K'
  5229  316B  3420               	retlw	32	;' '
  5230  316C  341B               	retlw	27
  5231  316D  345B               	retlw	91	;'['
  5232  316E  3441               	retlw	65	;'A'
  5233  316F  3400               	retlw	0
  5234                           
  5235                           	psect	stringtext30
  5236  0000                     __pstringtext30:	
  5237                           
  5238                           ; #config settings
  5239  0000                     
  5240                           	psect	cinit
  5241  0078                     start_initialization:	
  5242  0078                     __initialization:	
  5243                           
  5244                           ; Initialize objects allocated to BANK2
  5245  0078  302C               	movlw	low __pidataBANK2
  5246  0079  0084               	movwf	4
  5247  007A  30A8               	movlw	(high __pidataBANK2)| (0+128)
  5248  007B  0085               	movwf	5
  5249  007C  306A               	movlw	low __pdataBANK2
  5250  007D  0086               	movwf	6
  5251  007E  3001               	movlw	high __pdataBANK2
  5252  007F  0087               	movwf	7
  5253  0080  3006               	movlw	6
  5254  0081  31A8  2026  3180   	fcall	init_ram
  5255                           
  5256                           ; Initialize objects allocated to BANK5
  5257  0084  3032               	movlw	low __pidataBANK5
  5258  0085  0084               	movwf	4
  5259  0086  30A8               	movlw	(high __pidataBANK5)| (0+128)
  5260  0087  0085               	movwf	5
  5261  0088  30D2               	movlw	low __pdataBANK5
  5262  0089  0086               	movwf	6
  5263  008A  3002               	movlw	high __pdataBANK5
  5264  008B  0087               	movwf	7
  5265  008C  3007               	movlw	7
  5266  008D  31A8  2026  3180   	fcall	init_ram
  5267                           
  5268                           ; Clear objects allocated to COMMON
  5269  0090  01FA               	clrf	__pbssCOMMON& (0+127)
  5270  0091  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5271                           
  5272                           ; Clear objects allocated to BANK1
  5273  0092  0021               	movlb	1	; select bank1
  5274  0093  01EC               	clrf	__pbssBANK1& (0+127)
  5275  0094  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  5276                           
  5277                           ; Clear objects allocated to BANK2
  5278  0095  305B               	movlw	low __pbssBANK2
  5279  0096  0084               	movwf	4
  5280  0097  3001               	movlw	high __pbssBANK2
  5281  0098  0085               	movwf	5
  5282  0099  300F               	movlw	15
  5283  009A  31A8  2020  3180   	fcall	clear_ram0
  5284                           
  5285                           ; Clear objects allocated to BANK4
  5286  009D  0024               	movlb	4	; select bank4
  5287  009E  01EE               	clrf	__pbssBANK4& (0+127)
  5288  009F  01EF               	clrf	(__pbssBANK4+1)& (0+127)
  5289                           
  5290                           ; Clear objects allocated to BANK5
  5291  00A0  30A0               	movlw	low __pbssBANK5
  5292  00A1  0084               	movwf	4
  5293  00A2  3002               	movlw	high __pbssBANK5
  5294  00A3  0085               	movwf	5
  5295  00A4  3032               	movlw	50
  5296  00A5  31A8  2020  3180   	fcall	clear_ram0
  5297                           
  5298                           ; Clear objects allocated to BANK6
  5299  00A8  3020               	movlw	low __pbssBANK6
  5300  00A9  0084               	movwf	4
  5301  00AA  3003               	movlw	high __pbssBANK6
  5302  00AB  0085               	movwf	5
  5303  00AC  3018               	movlw	24
  5304  00AD  31A8  2020         	fcall	clear_ram0
  5305  00AF                     end_of_initialization:	
  5306                           ;End of C runtime variable initialization code
  5307                           
  5308  00AF                     __end_of__initialization:	
  5309  00AF  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5310  00B0  0020               	movlb	0
  5311  00B1  318A  2AE5         	ljmp	_main	;jump to C main() function
  5312                           
  5313                           	psect	bssCOMMON
  5314  007A                     __pbssCOMMON:	
  5315  007A                     _z:	
  5316  007A                     	ds	2
  5317                           
  5318                           	psect	bssBANK1
  5319  00EC                     __pbssBANK1:	
  5320  00EC                     _ADCV:	
  5321  00EC                     	ds	2
  5322                           
  5323                           	psect	bssBANK2
  5324  015B                     __pbssBANK2:	
  5325  015B                     _currentBool:	
  5326  015B                     	ds	2
  5327  015D                     _k:	
  5328  015D                     	ds	2
  5329  015F                     _j:	
  5330  015F                     	ds	2
  5331  0161                     _n:	
  5332  0161                     	ds	2
  5333  0163                     _cmd:	
  5334  0163                     	ds	3
  5335  0166                     _ADSTAT:	
  5336  0166                     	ds	2
  5337  0168                     _ADAX:	
  5338  0168                     	ds	2
  5339                           
  5340                           	psect	dataBANK2
  5341  016A                     __pdataBANK2:	
  5342  016A                     _configReg:	
  5343  016A                     	ds	6
  5344                           
  5345                           	psect	bssBANK4
  5346  026E                     __pbssBANK4:	
  5347  026E                     _uartBool:	
  5348  026E                     	ds	2
  5349                           
  5350                           	psect	bssBANK5
  5351  02A0                     __pbssBANK5:	
  5352  02A0                     _str:	
  5353  02A0                     	ds	50
  5354                           
  5355                           	psect	dataBANK5
  5356  02D2                     __pdataBANK5:	
  5357  02D2                     _tempChannels:	
  5358  02D2                     	ds	5
  5359  02D7                     SSD1306_Test@F7528:	
  5360  02D7                     	ds	2
  5361                           
  5362                           	psect	bssBANK6
  5363  0320                     __pbssBANK6:	
  5364  0320                     measureVoltages@F7579:	
  5365  0320                     	ds	24
  5366                           
  5367                           	psect	inittext
  5368  2826                     init_ram:	
  5369  2826  00FE               	movwf	126
  5370  2827                     initloop:	
  5371  2827  0012               	moviw fsr0++
  5372  2828  001E               	movwi fsr1++
  5373  2829  0BFE               	decfsz	126,f
  5374  282A  2827               	goto	initloop
  5375  282B  3400               	retlw	0
  5376                           
  5377                           	psect	clrtext
  5378  2820                     clear_ram0:	
  5379                           ;	Called with FSR0 containing the base address, and
  5380                           ;	WREG with the size to clear
  5381                           
  5382  2820  0064               	clrwdt	;clear the watchdog before getting into this loop
  5383  2821                     clrloop0:	
  5384  2821  0180               	clrf	0	;clear RAM location pointed to by FSR
  5385  2822  3101               	addfsr 0,1
  5386  2823  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5387  2824  2821               	goto	clrloop0	;have we reached the end yet?
  5388  2825  3400               	retlw	0	;all done for this memory range, return
  5389                           
  5390                           	psect	cstackBANK7
  5391  03A0                     __pcstackBANK7:	
  5392  03A0                     main@currentBuff:	
  5393                           
  5394                           ; 80 bytes @ 0x0
  5395  03A0                     	ds	80
  5396                           
  5397                           	psect	cstackBANK4
  5398  0220                     __pcstackBANK4:	
  5399  0220                     main@voltages:	
  5400                           
  5401                           ; 48 bytes @ 0x0
  5402  0220                     	ds	48
  5403  0250                     main@temps:	
  5404                           
  5405                           ; 10 bytes @ 0x30
  5406  0250                     	ds	10
  5407  025A                     main@numFaults:	
  5408                           
  5409                           ; 2 bytes @ 0x3A
  5410  025A                     	ds	2
  5411  025C                     main@highestTemp:	
  5412                           
  5413                           ; 2 bytes @ 0x3C
  5414  025C                     	ds	2
  5415  025E                     main@currentIndex:	
  5416                           
  5417                           ; 2 bytes @ 0x3E
  5418  025E                     	ds	2
  5419  0260                     main@soc:	
  5420                           
  5421                           ; 4 bytes @ 0x40
  5422  0260                     	ds	4
  5423  0264                     main@totalVoltage:	
  5424                           
  5425                           ; 4 bytes @ 0x44
  5426  0264                     	ds	4
  5427  0268                     main@i:	
  5428                           
  5429                           ; 2 bytes @ 0x48
  5430  0268                     	ds	2
  5431  026A                     main@current:	
  5432                           
  5433                           ; 4 bytes @ 0x4A
  5434  026A                     	ds	4
  5435                           
  5436                           	psect	cstackBANK3
  5437  01A0                     __pcstackBANK3:	
  5438  01A0                     ??_main:	
  5439                           
  5440                           ; 1 bytes @ 0x0
  5441  01A0                     	ds	6
  5442  01A6                     _main$2183:	
  5443                           
  5444                           ; 4 bytes @ 0x6
  5445  01A6                     	ds	4
  5446                           
  5447                           	psect	cstackBANK2
  5448  0120                     __pcstackBANK2:	
  5449  0120                     _sprintf$2190:	
  5450  0120                     measureVoltages@ltcData:	
  5451                           ; 4 bytes @ 0x0
  5452                           
  5453                           
  5454                           ; 24 bytes @ 0x0
  5455  0120                     	ds	4
  5456  0124                     sprintf@ap:	
  5457                           
  5458                           ; 1 bytes @ 0x4
  5459  0124                     	ds	1
  5460  0125                     sprintf@tmpval:	
  5461                           
  5462                           ; 4 bytes @ 0x5
  5463  0125                     	ds	4
  5464  0129                     sprintf@val:	
  5465                           
  5466                           ; 4 bytes @ 0x9
  5467  0129                     	ds	4
  5468  012D                     sprintf@exp:	
  5469                           
  5470                           ; 2 bytes @ 0xD
  5471  012D                     	ds	2
  5472  012F                     sprintf@flag:	
  5473                           
  5474                           ; 2 bytes @ 0xF
  5475  012F                     	ds	2
  5476  0131                     sprintf@width:	
  5477                           
  5478                           ; 2 bytes @ 0x11
  5479  0131                     	ds	2
  5480  0133                     sprintf@fval:	
  5481                           
  5482                           ; 4 bytes @ 0x13
  5483  0133                     	ds	4
  5484  0137                     sprintf@prec:	
  5485                           
  5486                           ; 2 bytes @ 0x17
  5487  0137                     	ds	1
  5488  0138                     measureVoltages@pecError:	
  5489                           
  5490                           ; 1 bytes @ 0x18
  5491  0138                     	ds	1
  5492  0139                     sprintf@sp:	
  5493  0139                     measureVoltages@errorCount:	
  5494                           ; 1 bytes @ 0x19
  5495                           
  5496                           
  5497                           ; 2 bytes @ 0x19
  5498  0139                     	ds	1
  5499  013A                     sprintf@c:	
  5500                           
  5501                           ; 1 bytes @ 0x1A
  5502  013A                     	ds	1
  5503  013B                     measureVoltages@voltages:	
  5504  013B                     _writeVoltages$2186:	
  5505                           ; 1 bytes @ 0x1B
  5506                           
  5507                           
  5508                           ; 4 bytes @ 0x1B
  5509  013B                     	ds	1
  5510  013C                     measureVoltages@i:	
  5511                           
  5512                           ; 2 bytes @ 0x1C
  5513  013C                     	ds	2
  5514  013E                     ??_startUp:	
  5515                           
  5516                           ; 1 bytes @ 0x1E
  5517  013E                     	ds	1
  5518  013F                     writeVoltages@maxCell:	
  5519                           
  5520                           ; 2 bytes @ 0x1F
  5521  013F                     	ds	2
  5522  0141                     writeVoltages@minCell:	
  5523                           
  5524                           ; 2 bytes @ 0x21
  5525  0141                     	ds	1
  5526  0142                     startUp@highestTemp:	
  5527                           
  5528                           ; 1 bytes @ 0x22
  5529  0142                     	ds	1
  5530  0143                     writeVoltages@volts:	
  5531  0143                     startUp@i:	
  5532                           ; 1 bytes @ 0x23
  5533                           
  5534                           
  5535                           ; 2 bytes @ 0x23
  5536  0143                     	ds	1
  5537  0144                     writeVoltages@k:	
  5538                           
  5539                           ; 2 bytes @ 0x24
  5540  0144                     	ds	1
  5541  0145                     startUp@i_400:	
  5542                           
  5543                           ; 2 bytes @ 0x25
  5544  0145                     	ds	1
  5545  0146                     ?_writeValuesToUart:	
  5546  0146                     writeValuesToUart@voltageArrLength:	
  5547                           ; 1 bytes @ 0x26
  5548                           
  5549                           
  5550                           ; 2 bytes @ 0x26
  5551  0146                     	ds	2
  5552  0148                     writeValuesToUart@totalVoltage:	
  5553                           
  5554                           ; 4 bytes @ 0x28
  5555  0148                     	ds	4
  5556  014C                     writeValuesToUart@temperatureArr:	
  5557                           
  5558                           ; 1 bytes @ 0x2C
  5559  014C                     	ds	1
  5560  014D                     writeValuesToUart@temperatureArrLength:	
  5561                           
  5562                           ; 2 bytes @ 0x2D
  5563  014D                     	ds	2
  5564  014F                     writeValuesToUart@temperatureHigh:	
  5565                           
  5566                           ; 2 bytes @ 0x2F
  5567  014F                     	ds	2
  5568  0151                     writeValuesToUart@current:	
  5569                           
  5570                           ; 4 bytes @ 0x31
  5571  0151                     	ds	4
  5572  0155                     writeValuesToUart@soc:	
  5573                           
  5574                           ; 4 bytes @ 0x35
  5575  0155                     	ds	4
  5576  0159                     writeValuesToUart@uartLines:	
  5577                           
  5578                           ; 2 bytes @ 0x39
  5579  0159                     	ds	2
  5580                           
  5581                           	psect	cstackBANK1
  5582  00A0                     __pcstackBANK1:	
  5583  00A0                     ??___fltol:	
  5584  00A0                     _fround$2188:	
  5585                           ; 1 bytes @ 0x0
  5586                           
  5587                           
  5588                           ; 4 bytes @ 0x0
  5589  00A0                     	ds	4
  5590  00A4                     _fround$2187:	
  5591                           
  5592                           ; 4 bytes @ 0x4
  5593  00A4                     	ds	1
  5594  00A5                     ___fltol@sign1:	
  5595                           
  5596                           ; 1 bytes @ 0x5
  5597  00A5                     	ds	1
  5598  00A6                     ___fltol@exp1:	
  5599                           
  5600                           ; 1 bytes @ 0x6
  5601  00A6                     	ds	1
  5602  00A7                     ?_calculateTemp:	
  5603  00A7                     calculateTemp@adcValue:	
  5604                           ; 2 bytes @ 0x7
  5605                           
  5606                           
  5607                           ; 2 bytes @ 0x7
  5608  00A7                     	ds	1
  5609  00A8                     fround@prec:	
  5610                           
  5611                           ; 1 bytes @ 0x8
  5612  00A8                     	ds	1
  5613  00A9                     ??_calculateTemp:	
  5614  00A9                     ?___fladd:	
  5615                           ; 1 bytes @ 0x9
  5616                           
  5617  00A9                     ___fladd@b:	
  5618                           ; 4 bytes @ 0x9
  5619                           
  5620                           
  5621                           ; 4 bytes @ 0x9
  5622  00A9                     	ds	2
  5623  00AB                     calculateTemp@voltage:	
  5624                           
  5625                           ; 4 bytes @ 0xB
  5626  00AB                     	ds	2
  5627  00AD                     ___fladd@a:	
  5628                           
  5629                           ; 4 bytes @ 0xD
  5630  00AD                     	ds	2
  5631  00AF                     ?_getTemps:	
  5632  00AF                     getTemps@numTemps:	
  5633                           ; 2 bytes @ 0xF
  5634                           
  5635                           
  5636                           ; 2 bytes @ 0xF
  5637  00AF                     	ds	2
  5638  00B1                     ??_getTemps:	
  5639  00B1                     ??___fladd:	
  5640                           ; 1 bytes @ 0x11
  5641                           
  5642                           
  5643                           ; 1 bytes @ 0x11
  5644  00B1                     	ds	4
  5645  00B5                     getTemps@highestTemp:	
  5646                           
  5647                           ; 2 bytes @ 0x15
  5648  00B5                     	ds	2
  5649  00B7                     getTemps@temperatures:	
  5650                           
  5651                           ; 1 bytes @ 0x17
  5652  00B7                     	ds	1
  5653  00B8                     getTemps@inc:	
  5654                           
  5655                           ; 2 bytes @ 0x18
  5656  00B8                     	ds	5
  5657  00BD                     ___fladd@signs:	
  5658                           
  5659                           ; 1 bytes @ 0x1D
  5660  00BD                     	ds	1
  5661  00BE                     ___fladd@aexp:	
  5662                           
  5663                           ; 1 bytes @ 0x1E
  5664  00BE                     	ds	1
  5665  00BF                     ___fladd@bexp:	
  5666                           
  5667                           ; 1 bytes @ 0x1F
  5668  00BF                     	ds	1
  5669  00C0                     ___fladd@grs:	
  5670                           
  5671                           ; 1 bytes @ 0x20
  5672  00C0                     	ds	1
  5673  00C1                     ?___flge:	
  5674  00C1                     ?_avgBuff:	
  5675                           ; 1 bit 
  5676                           
  5677  00C1                     ?_sumVoltages:	
  5678                           ; 4 bytes @ 0x21
  5679                           
  5680  00C1                     ?_calculateCurrent:	
  5681                           ; 4 bytes @ 0x21
  5682                           
  5683  00C1                     ?___flsub:	
  5684                           ; 4 bytes @ 0x21
  5685                           
  5686  00C1                     avgBuff@size:	
  5687                           ; 4 bytes @ 0x21
  5688                           
  5689  00C1                     sumVoltages@numVoltages:	
  5690                           ; 2 bytes @ 0x21
  5691                           
  5692  00C1                     calculateCurrent@adcValue:	
  5693                           ; 2 bytes @ 0x21
  5694                           
  5695  00C1                     ___flge@ff1:	
  5696                           ; 4 bytes @ 0x21
  5697                           
  5698  00C1                     ___flsub@a:	
  5699                           ; 4 bytes @ 0x21
  5700                           
  5701                           
  5702                           ; 4 bytes @ 0x21
  5703  00C1                     	ds	4
  5704  00C5                     ??_avgBuff:	
  5705  00C5                     ??_sumVoltages:	
  5706                           ; 1 bytes @ 0x25
  5707                           
  5708  00C5                     calculateCurrent@curr:	
  5709                           ; 1 bytes @ 0x25
  5710                           
  5711  00C5                     ___flge@ff2:	
  5712                           ; 4 bytes @ 0x25
  5713                           
  5714  00C5                     ___flsub@b:	
  5715                           ; 4 bytes @ 0x25
  5716                           
  5717                           
  5718                           ; 4 bytes @ 0x25
  5719  00C5                     	ds	2
  5720  00C7                     avgBuff@buff:	
  5721  00C7                     sumVoltages@voltages:	
  5722                           ; 1 bytes @ 0x27
  5723                           
  5724                           
  5725                           ; 1 bytes @ 0x27
  5726  00C7                     	ds	1
  5727  00C8                     avgBuff@total:	
  5728  00C8                     sumVoltages@totalVoltage:	
  5729                           ; 4 bytes @ 0x28
  5730                           
  5731                           
  5732                           ; 4 bytes @ 0x28
  5733  00C8                     	ds	1
  5734  00C9                     ??___flge:	
  5735  00C9                     _calculateCurrent$2184:	
  5736                           ; 1 bytes @ 0x29
  5737                           
  5738                           
  5739                           ; 4 bytes @ 0x29
  5740  00C9                     	ds	3
  5741  00CC                     avgBuff@inc:	
  5742  00CC                     sumVoltages@i:	
  5743                           ; 2 bytes @ 0x2C
  5744                           
  5745                           
  5746                           ; 2 bytes @ 0x2C
  5747  00CC                     	ds	1
  5748  00CD                     ?_getCurrent:	
  5749                           
  5750                           ; 4 bytes @ 0x2D
  5751  00CD                     	ds	4
  5752  00D1                     ?_cellBalancing:	
  5753  00D1                     ?_sprintf:	
  5754                           ; 1 bytes @ 0x31
  5755                           
  5756  00D1                     cellBalancing@numVoltages:	
  5757                           ; 2 bytes @ 0x31
  5758                           
  5759  00D1                     sprintf@f:	
  5760                           ; 2 bytes @ 0x31
  5761                           
  5762  00D1                     getCurrent@currentValue:	
  5763                           ; 2 bytes @ 0x31
  5764                           
  5765                           
  5766                           ; 4 bytes @ 0x31
  5767  00D1                     	ds	2
  5768  00D3                     ??_cellBalancing:	
  5769                           
  5770                           ; 1 bytes @ 0x33
  5771  00D3                     	ds	2
  5772  00D5                     cellBalancing@boolean:	
  5773                           
  5774                           ; 1 bytes @ 0x35
  5775  00D5                     	ds	1
  5776  00D6                     cellBalancing@minVoltage:	
  5777                           
  5778                           ; 4 bytes @ 0x36
  5779  00D6                     	ds	4
  5780  00DA                     cellBalancing@i:	
  5781                           
  5782                           ; 2 bytes @ 0x3A
  5783  00DA                     	ds	1
  5784  00DB                     ??_sprintf:	
  5785                           
  5786                           ; 1 bytes @ 0x3B
  5787  00DB                     	ds	1
  5788  00DC                     cellBalancing@i_1316:	
  5789                           
  5790                           ; 2 bytes @ 0x3C
  5791  00DC                     	ds	2
  5792  00DE                     cellBalancing@voltages:	
  5793                           
  5794                           ; 1 bytes @ 0x3E
  5795  00DE                     	ds	1
  5796  00DF                     ?_measureVoltages:	
  5797  00DF                     measureVoltages@totalVoltage:	
  5798                           ; 1 bytes @ 0x3F
  5799                           
  5800                           
  5801                           ; 1 bytes @ 0x3F
  5802  00DF                     	ds	1
  5803  00E0                     measureVoltages@numVoltages:	
  5804                           
  5805                           ; 2 bytes @ 0x40
  5806  00E0                     	ds	1
  5807  00E1                     ?_clearScreen:	
  5808  00E1                     ?_writeVoltages:	
  5809                           ; 1 bytes @ 0x41
  5810                           
  5811  00E1                     ?_writeTemps:	
  5812                           ; 1 bytes @ 0x41
  5813                           
  5814  00E1                     ?_writeCurrent:	
  5815                           ; 1 bytes @ 0x41
  5816                           
  5817  00E1                     ?_writeSOC:	
  5818                           ; 1 bytes @ 0x41
  5819                           
  5820  00E1                     writeVoltages@length:	
  5821                           ; 1 bytes @ 0x41
  5822                           
  5823  00E1                     writeTemps@highestTemp:	
  5824                           ; 2 bytes @ 0x41
  5825                           
  5826  00E1                     clearScreen@numLines:	
  5827                           ; 2 bytes @ 0x41
  5828                           
  5829  00E1                     writeSOC@soc:	
  5830                           ; 2 bytes @ 0x41
  5831                           
  5832  00E1                     writeCurrent@current:	
  5833                           ; 4 bytes @ 0x41
  5834                           
  5835                           
  5836                           ; 4 bytes @ 0x41
  5837  00E1                     	ds	1
  5838  00E2                     ??_measureVoltages:	
  5839                           
  5840                           ; 1 bytes @ 0x42
  5841  00E2                     	ds	1
  5842  00E3                     ??_clearScreen:	
  5843  00E3                     writeTemps@numTemps:	
  5844                           ; 1 bytes @ 0x43
  5845                           
  5846  00E3                     writeVoltages@totalVoltage:	
  5847                           ; 2 bytes @ 0x43
  5848                           
  5849                           
  5850                           ; 4 bytes @ 0x43
  5851  00E3                     	ds	2
  5852  00E5                     ??_writeTemps:	
  5853  00E5                     _writeSOC$2185:	
  5854                           ; 1 bytes @ 0x45
  5855                           
  5856                           
  5857                           ; 4 bytes @ 0x45
  5858  00E5                     	ds	1
  5859  00E6                     ?_startUp:	
  5860  00E6                     startUp@temps:	
  5861                           ; 2 bytes @ 0x46
  5862                           
  5863  00E6                     writeTemps@temps:	
  5864                           ; 1 bytes @ 0x46
  5865                           
  5866  00E6                     clearScreen@j:	
  5867                           ; 1 bytes @ 0x46
  5868                           
  5869                           
  5870                           ; 2 bytes @ 0x46
  5871  00E6                     	ds	1
  5872  00E7                     ??_writeVoltages:	
  5873  00E7                     startUp@voltages:	
  5874                           ; 1 bytes @ 0x47
  5875                           
  5876  00E7                     writeTemps@k:	
  5877                           ; 1 bytes @ 0x47
  5878                           
  5879                           
  5880                           ; 2 bytes @ 0x47
  5881  00E7                     	ds	1
  5882  00E8                     startUp@totalVoltage:	
  5883                           
  5884                           ; 1 bytes @ 0x48
  5885  00E8                     	ds	1
  5886  00E9                     startUp@current:	
  5887                           
  5888                           ; 1 bytes @ 0x49
  5889  00E9                     	ds	1
  5890  00EA                     startUp@soc:	
  5891                           
  5892                           ; 1 bytes @ 0x4A
  5893  00EA                     	ds	1
  5894  00EB                     writeValuesToUart@voltageArr:	
  5895                           
  5896                           ; 1 bytes @ 0x4B
  5897  00EB                     	ds	1
  5898                           
  5899                           	psect	cstackCOMMON
  5900  0070                     __pcstackCOMMON:	
  5901  0070                     ?_isdigit:	
  5902  0070                     ?_setup:	
  5903                           ; 1 bit 
  5904                           
  5905  0070                     ?_uartDisable:	
  5906                           ; 1 bytes @ 0x0
  5907                           
  5908  0070                     ??_uartDisable:	
  5909                           ; 1 bytes @ 0x0
  5910                           
  5911  0070                     ?_timerSetup:	
  5912                           ; 1 bytes @ 0x0
  5913                           
  5914  0070                     ?_adcSetup:	
  5915                           ; 1 bytes @ 0x0
  5916                           
  5917  0070                     ?_uartSetup:	
  5918                           ; 1 bytes @ 0x0
  5919                           
  5920  0070                     ?_i2cSetup:	
  5921                           ; 1 bytes @ 0x0
  5922                           
  5923  0070                     ?_spiSetup:	
  5924                           ; 1 bytes @ 0x0
  5925                           
  5926  0070                     ?_LTC6804_initialize:	
  5927                           ; 1 bytes @ 0x0
  5928                           
  5929  0070                     ?_uartEnable:	
  5930                           ; 1 bytes @ 0x0
  5931                           
  5932  0070                     ?_timer0Setup:	
  5933                           ; 1 bytes @ 0x0
  5934                           
  5935  0070                     ?_timer2Setup:	
  5936                           ; 1 bytes @ 0x0
  5937                           
  5938  0070                     ?_LTC6804_adcv:	
  5939                           ; 1 bytes @ 0x0
  5940                           
  5941  0070                     ?_wakeup_idle:	
  5942                           ; 1 bytes @ 0x0
  5943                           
  5944  0070                     ?_spi_write:	
  5945                           ; 1 bytes @ 0x0
  5946                           
  5947  0070                     ?_spi_read:	
  5948                           ; 1 bytes @ 0x0
  5949                           
  5950  0070                     ?_main:	
  5951                           ; 1 bytes @ 0x0
  5952                           
  5953  0070                     ?_ISR:	
  5954                           ; 1 bytes @ 0x0
  5955                           
  5956  0070                     ??_ISR:	
  5957                           ; 1 bytes @ 0x0
  5958                           
  5959                           
  5960                           ; 1 bytes @ 0x0
  5961  0070                     	ds	2
  5962  0072                     ??_timerSetup:	
  5963  0072                     ??_adcSetup:	
  5964                           ; 1 bytes @ 0x2
  5965                           
  5966  0072                     ??_uartSetup:	
  5967                           ; 1 bytes @ 0x2
  5968                           
  5969  0072                     ??_i2cSetup:	
  5970                           ; 1 bytes @ 0x2
  5971                           
  5972  0072                     ??_spiSetup:	
  5973                           ; 1 bytes @ 0x2
  5974                           
  5975  0072                     ??_uartEnable:	
  5976                           ; 1 bytes @ 0x2
  5977                           
  5978  0072                     ??_timer0Setup:	
  5979                           ; 1 bytes @ 0x2
  5980                           
  5981  0072                     ??_timer2Setup:	
  5982                           ; 1 bytes @ 0x2
  5983                           
  5984  0072                     ?_setDischarge:	
  5985                           ; 1 bytes @ 0x2
  5986                           
  5987  0072                     ??_wakeup_idle:	
  5988                           ; 1 bytes @ 0x2
  5989                           
  5990  0072                     ?_set_adc:	
  5991                           ; 1 bytes @ 0x2
  5992                           
  5993  0072                     ??_spi_write:	
  5994                           ; 1 bytes @ 0x2
  5995                           
  5996  0072                     ??_spi_read:	
  5997                           ; 1 bytes @ 0x2
  5998                           
  5999  0072                     ??_isdigit:	
  6000                           ; 1 bytes @ 0x2
  6001                           
  6002  0072                     ?___bmul:	
  6003                           ; 1 bytes @ 0x2
  6004                           
  6005  0072                     ?_adcRead:	
  6006                           ; 1 bytes @ 0x2
  6007                           
  6008  0072                     ?__Umul8_16:	
  6009                           ; 2 bytes @ 0x2
  6010                           
  6011  0072                     ?___wmul:	
  6012                           ; 2 bytes @ 0x2
  6013                           
  6014  0072                     ?___awmod:	
  6015                           ; 2 bytes @ 0x2
  6016                           
  6017  0072                     ?__tdiv_to_l_:	
  6018                           ; 2 bytes @ 0x2
  6019                           
  6020  0072                     ?__div_to_l_:	
  6021                           ; 4 bytes @ 0x2
  6022                           
  6023  0072                     ?___lldiv:	
  6024                           ; 4 bytes @ 0x2
  6025                           
  6026  0072                     set_adc@DCP:	
  6027                           ; 4 bytes @ 0x2
  6028                           
  6029  0072                     ___bmul@multiplicand:	
  6030                           ; 1 bytes @ 0x2
  6031                           
  6032  0072                     _isdigit$1788:	
  6033                           ; 1 bytes @ 0x2
  6034                           
  6035  0072                     __Umul8_16@multiplicand:	
  6036                           ; 1 bytes @ 0x2
  6037                           
  6038  0072                     setDischarge@index:	
  6039                           ; 1 bytes @ 0x2
  6040                           
  6041  0072                     ___wmul@multiplier:	
  6042                           ; 2 bytes @ 0x2
  6043                           
  6044  0072                     ___awmod@divisor:	
  6045                           ; 2 bytes @ 0x2
  6046                           
  6047  0072                     __div_to_l_@f1:	
  6048                           ; 2 bytes @ 0x2
  6049                           
  6050  0072                     __tdiv_to_l_@f1:	
  6051                           ; 4 bytes @ 0x2
  6052                           
  6053  0072                     ___lldiv@divisor:	
  6054                           ; 4 bytes @ 0x2
  6055                           
  6056                           
  6057                           ; 4 bytes @ 0x2
  6058  0072                     	ds	1
  6059  0073                     ??___bmul:	
  6060  0073                     set_adc@CH:	
  6061                           ; 1 bytes @ 0x3
  6062                           
  6063  0073                     spi_write@readData:	
  6064                           ; 1 bytes @ 0x3
  6065                           
  6066  0073                     spi_read@data:	
  6067                           ; 1 bytes @ 0x3
  6068                           
  6069  0073                     isdigit@c:	
  6070                           ; 1 bytes @ 0x3
  6071                           
  6072                           
  6073                           ; 1 bytes @ 0x3
  6074  0073                     	ds	1
  6075  0074                     ??__Umul8_16:	
  6076  0074                     ??___xxtofl:	
  6077                           ; 1 bytes @ 0x4
  6078                           
  6079  0074                     setDischarge@boolean:	
  6080                           ; 1 bytes @ 0x4
  6081                           
  6082  0074                     set_adc@CHG:	
  6083                           ; 1 bytes @ 0x4
  6084                           
  6085  0074                     spi_write@data:	
  6086                           ; 1 bytes @ 0x4
  6087                           
  6088  0074                     spi_read@readData:	
  6089                           ; 1 bytes @ 0x4
  6090                           
  6091  0074                     ___bmul@product:	
  6092                           ; 1 bytes @ 0x4
  6093                           
  6094  0074                     ___wmul@multiplicand:	
  6095                           ; 1 bytes @ 0x4
  6096                           
  6097  0074                     ___awmod@dividend:	
  6098                           ; 2 bytes @ 0x4
  6099                           
  6100                           
  6101                           ; 2 bytes @ 0x4
  6102  0074                     	ds	1
  6103  0075                     ??_setDischarge:	
  6104  0075                     ?_spi_write_array:	
  6105                           ; 1 bytes @ 0x5
  6106                           
  6107  0075                     ??_set_adc:	
  6108                           ; 1 bytes @ 0x5
  6109                           
  6110  0075                     spi_write_array@data:	
  6111                           ; 1 bytes @ 0x5
  6112                           
  6113  0075                     ___bmul@multiplier:	
  6114                           ; 1 bytes @ 0x5
  6115                           
  6116                           
  6117                           ; 1 bytes @ 0x5
  6118  0075                     	ds	1
  6119  0076                     ?_spi_write_read:	
  6120  0076                     ??_spi_write_array:	
  6121                           ; 1 bytes @ 0x6
  6122                           
  6123  0076                     ??___wmul:	
  6124                           ; 1 bytes @ 0x6
  6125                           
  6126  0076                     ??___awmod:	
  6127                           ; 1 bytes @ 0x6
  6128                           
  6129  0076                     ?_pec15_calc:	
  6130                           ; 1 bytes @ 0x6
  6131                           
  6132  0076                     spi_write_read@tx_len:	
  6133                           ; 2 bytes @ 0x6
  6134                           
  6135  0076                     pec15_calc@data:	
  6136                           ; 1 bytes @ 0x6
  6137                           
  6138  0076                     ___wmul@product:	
  6139                           ; 2 bytes @ 0x6
  6140                           
  6141  0076                     __div_to_l_@f2:	
  6142                           ; 2 bytes @ 0x6
  6143                           
  6144  0076                     __tdiv_to_l_@f2:	
  6145                           ; 4 bytes @ 0x6
  6146                           
  6147  0076                     ___lldiv@dividend:	
  6148                           ; 4 bytes @ 0x6
  6149                           
  6150                           
  6151                           ; 4 bytes @ 0x6
  6152  0076                     	ds	1
  6153  0077                     set_adc@MD:	
  6154  0077                     spi_write_array@len:	
  6155                           ; 1 bytes @ 0x7
  6156                           
  6157  0077                     spi_write_read@rx_data:	
  6158                           ; 1 bytes @ 0x7
  6159                           
  6160  0077                     ___awmod@counter:	
  6161                           ; 1 bytes @ 0x7
  6162                           
  6163                           
  6164                           ; 1 bytes @ 0x7
  6165  0077                     	ds	1
  6166  0078                     set_adc@md_bits:	
  6167  0078                     spi_write_array@i:	
  6168                           ; 1 bytes @ 0x8
  6169                           
  6170  0078                     spi_write_read@rx_len:	
  6171                           ; 1 bytes @ 0x8
  6172                           
  6173  0078                     ___awmod@sign:	
  6174                           ; 1 bytes @ 0x8
  6175                           
  6176                           
  6177                           ; 1 bytes @ 0x8
  6178  0078                     	ds	1
  6179  0079                     ??_LTC6804_adcv:	
  6180  0079                     ?_LTC6804_wrcfg:	
  6181                           ; 1 bytes @ 0x9
  6182                           
  6183  0079                     ??___awdiv:	
  6184                           ; 1 bytes @ 0x9
  6185                           
  6186  0079                     LTC6804_wrcfg@config:	
  6187                           ; 1 bytes @ 0x9
  6188                           
  6189                           
  6190                           ; 1 bytes @ 0x9
  6191  0079                     	ds	1
  6192  007A                     ??_setup:	
  6193  007A                     ??_getCurrent:	
  6194                           ; 1 bytes @ 0xA
  6195                           
  6196  007A                     ??_writeValuesToUart:	
  6197                           ; 1 bytes @ 0xA
  6198                           
  6199  007A                     ??_writeCurrent:	
  6200                           ; 1 bytes @ 0xA
  6201                           
  6202  007A                     ??_writeSOC:	
  6203                           ; 1 bytes @ 0xA
  6204                           
  6205  007A                     ??_calculateCurrent:	
  6206                           ; 1 bytes @ 0xA
  6207                           
  6208  007A                     ??___flneg:	
  6209                           ; 1 bytes @ 0xA
  6210                           
  6211  007A                     ??___flsub:	
  6212                           ; 1 bytes @ 0xA
  6213                           
  6214                           
  6215                           	psect	cstackBANK0
  6216  0020                     __pcstackBANK0:	
  6217                           ; 1 bytes @ 0xA
  6218                           
  6219  0020                     ??_adcRead:	
  6220  0020                     ??_pec15_calc:	
  6221                           ; 1 bytes @ 0x0
  6222                           
  6223  0020                     ??_spi_write_read:	
  6224                           ; 1 bytes @ 0x0
  6225                           
  6226  0020                     ??__tdiv_to_l_:	
  6227                           ; 1 bytes @ 0x0
  6228                           
  6229  0020                     ??__div_to_l_:	
  6230                           ; 1 bytes @ 0x0
  6231                           
  6232  0020                     ??___lldiv:	
  6233                           ; 1 bytes @ 0x0
  6234                           
  6235  0020                     ?___awdiv:	
  6236                           ; 1 bytes @ 0x0
  6237                           
  6238  0020                     ___awdiv@divisor:	
  6239                           ; 2 bytes @ 0x0
  6240                           
  6241  0020                     __Umul8_16@product:	
  6242                           ; 2 bytes @ 0x0
  6243                           
  6244                           
  6245                           ; 2 bytes @ 0x0
  6246  0020                     	ds	1
  6247  0021                     ___lldiv@quotient:	
  6248                           
  6249                           ; 4 bytes @ 0x1
  6250  0021                     	ds	1
  6251  0022                     spi_write_read@i:	
  6252  0022                     ___awdiv@dividend:	
  6253                           ; 1 bytes @ 0x2
  6254                           
  6255  0022                     __Umul8_16@word_mpld:	
  6256                           ; 2 bytes @ 0x2
  6257                           
  6258                           
  6259                           ; 2 bytes @ 0x2
  6260  0022                     	ds	1
  6261  0023                     spi_write_read@i_1442:	
  6262                           
  6263                           ; 1 bytes @ 0x3
  6264  0023                     	ds	1
  6265  0024                     spi_write_read@tx_Data:	
  6266  0024                     ___awdiv@counter:	
  6267                           ; 1 bytes @ 0x4
  6268                           
  6269  0024                     __Umul8_16@multiplier:	
  6270                           ; 1 bytes @ 0x4
  6271                           
  6272  0024                     __tdiv_to_l_@quot:	
  6273                           ; 1 bytes @ 0x4
  6274                           
  6275                           
  6276                           ; 4 bytes @ 0x4
  6277  0024                     	ds	1
  6278  0025                     ___awdiv@sign:	
  6279  0025                     ___lldiv@counter:	
  6280                           ; 1 bytes @ 0x5
  6281                           
  6282  0025                     __div_to_l_@quot:	
  6283                           ; 1 bytes @ 0x5
  6284                           
  6285                           
  6286                           ; 4 bytes @ 0x5
  6287  0025                     	ds	1
  6288  0026                     ?___llmod:	
  6289  0026                     ___awdiv@quotient:	
  6290                           ; 4 bytes @ 0x6
  6291                           
  6292  0026                     ___llmod@divisor:	
  6293                           ; 2 bytes @ 0x6
  6294                           
  6295                           
  6296                           ; 4 bytes @ 0x6
  6297  0026                     	ds	1
  6298  0027                     adcRead@ch:	
  6299                           
  6300                           ; 1 bytes @ 0x7
  6301  0027                     	ds	1
  6302  0028                     __tdiv_to_l_@cntr:	
  6303  0028                     adcRead@ansHigh:	
  6304                           ; 1 bytes @ 0x8
  6305                           
  6306                           
  6307                           ; 2 bytes @ 0x8
  6308  0028                     	ds	1
  6309  0029                     pec15_calc@len:	
  6310  0029                     __div_to_l_@cntr:	
  6311                           ; 1 bytes @ 0x9
  6312                           
  6313  0029                     __tdiv_to_l_@exp1:	
  6314                           ; 1 bytes @ 0x9
  6315                           
  6316                           
  6317                           ; 1 bytes @ 0x9
  6318  0029                     	ds	1
  6319  002A                     __div_to_l_@exp1:	
  6320  002A                     adcRead@ansLow:	
  6321                           ; 1 bytes @ 0xA
  6322                           
  6323  002A                     pec15_calc@addr:	
  6324                           ; 2 bytes @ 0xA
  6325                           
  6326  002A                     ___llmod@dividend:	
  6327                           ; 2 bytes @ 0xA
  6328                           
  6329                           
  6330                           ; 4 bytes @ 0xA
  6331  002A                     	ds	2
  6332  002C                     pec15_calc@i:	
  6333  002C                     adcRead@total:	
  6334                           ; 1 bytes @ 0xC
  6335                           
  6336                           
  6337                           ; 2 bytes @ 0xC
  6338  002C                     	ds	1
  6339  002D                     pec15_calc@remainder:	
  6340                           
  6341                           ; 2 bytes @ 0xD
  6342  002D                     	ds	1
  6343  002E                     ??___llmod:	
  6344  002E                     ?___xxtofl:	
  6345                           ; 1 bytes @ 0xE
  6346                           
  6347  002E                     ___xxtofl@val:	
  6348                           ; 4 bytes @ 0xE
  6349                           
  6350                           
  6351                           ; 4 bytes @ 0xE
  6352  002E                     	ds	1
  6353  002F                     ??_LTC6804_wrcfg:	
  6354  002F                     ?_LTC6804_rdcv_reg:	
  6355                           ; 1 bytes @ 0xF
  6356                           
  6357  002F                     LTC6804_rdcv_reg@total_ic:	
  6358                           ; 1 bytes @ 0xF
  6359                           
  6360  002F                     ___llmod@counter:	
  6361                           ; 1 bytes @ 0xF
  6362                           
  6363  002F                     LTC6804_adcv@cmd:	
  6364                           ; 1 bytes @ 0xF
  6365                           
  6366                           
  6367                           ; 4 bytes @ 0xF
  6368  002F                     	ds	1
  6369  0030                     LTC6804_rdcv_reg@data:	
  6370                           
  6371                           ; 1 bytes @ 0x10
  6372  0030                     	ds	1
  6373  0031                     ??_LTC6804_rdcv_reg:	
  6374                           
  6375                           ; 1 bytes @ 0x11
  6376  0031                     	ds	1
  6377  0032                     ___xxtofl@sign:	
  6378                           
  6379                           ; 1 bytes @ 0x12
  6380  0032                     	ds	1
  6381  0033                     ___xxtofl@exp:	
  6382  0033                     LTC6804_adcv@cmd_pec:	
  6383                           ; 1 bytes @ 0x13
  6384                           
  6385  0033                     LTC6804_wrcfg@cmd:	
  6386                           ; 2 bytes @ 0x13
  6387                           
  6388                           
  6389                           ; 12 bytes @ 0x13
  6390  0033                     	ds	1
  6391  0034                     ___xxtofl@arg:	
  6392                           
  6393                           ; 4 bytes @ 0x14
  6394  0034                     	ds	1
  6395  0035                     LTC6804_rdcv_reg@cmd_pec:	
  6396                           
  6397                           ; 2 bytes @ 0x15
  6398  0035                     	ds	2
  6399  0037                     LTC6804_rdcv_reg@cmd:	
  6400                           
  6401                           ; 4 bytes @ 0x17
  6402  0037                     	ds	1
  6403  0038                     ?___flmul:	
  6404  0038                     ___flmul@b:	
  6405                           ; 4 bytes @ 0x18
  6406                           
  6407                           
  6408                           ; 4 bytes @ 0x18
  6409  0038                     	ds	3
  6410  003B                     LTC6804_rdcv_reg@reg:	
  6411                           
  6412                           ; 1 bytes @ 0x1B
  6413  003B                     	ds	1
  6414  003C                     ?_LTC6804_rdcv:	
  6415  003C                     LTC6804_rdcv@total_ic:	
  6416                           ; 1 bytes @ 0x1C
  6417                           
  6418  003C                     ___flmul@a:	
  6419                           ; 1 bytes @ 0x1C
  6420                           
  6421                           
  6422                           ; 4 bytes @ 0x1C
  6423  003C                     	ds	1
  6424  003D                     LTC6804_rdcv@cell_codes:	
  6425                           
  6426                           ; 1 bytes @ 0x1D
  6427  003D                     	ds	1
  6428  003E                     ??_LTC6804_rdcv:	
  6429                           
  6430                           ; 1 bytes @ 0x1E
  6431  003E                     	ds	1
  6432  003F                     LTC6804_wrcfg@CMD_LEN:	
  6433                           
  6434                           ; 1 bytes @ 0x1F
  6435  003F                     	ds	1
  6436  0040                     ??___flmul:	
  6437  0040                     LTC6804_wrcfg@total_ic:	
  6438                           ; 1 bytes @ 0x20
  6439                           
  6440                           
  6441                           ; 1 bytes @ 0x20
  6442  0040                     	ds	1
  6443  0041                     LTC6804_wrcfg@cfg_pec:	
  6444                           
  6445                           ; 2 bytes @ 0x21
  6446  0041                     	ds	2
  6447  0043                     LTC6804_wrcfg@current_byte:	
  6448  0043                     LTC6804_rdcv@cell_data:	
  6449                           ; 1 bytes @ 0x23
  6450                           
  6451                           
  6452                           ; 8 bytes @ 0x23
  6453  0043                     	ds	1
  6454  0044                     LTC6804_wrcfg@current_ic:	
  6455                           
  6456                           ; 1 bytes @ 0x24
  6457  0044                     	ds	1
  6458  0045                     LTC6804_wrcfg@cmd_index:	
  6459  0045                     ___flmul@sign:	
  6460                           ; 1 bytes @ 0x25
  6461                           
  6462                           
  6463                           ; 1 bytes @ 0x25
  6464  0045                     	ds	1
  6465  0046                     ??_LTC6804_initialize:	
  6466  0046                     ___flmul@aexp:	
  6467                           ; 1 bytes @ 0x26
  6468                           
  6469                           
  6470                           ; 1 bytes @ 0x26
  6471  0046                     	ds	1
  6472  0047                     ___flmul@grs:	
  6473                           
  6474                           ; 4 bytes @ 0x27
  6475  0047                     	ds	4
  6476  004B                     LTC6804_rdcv@pec_error:	
  6477  004B                     ___flmul@bexp:	
  6478                           ; 1 bytes @ 0x2B
  6479                           
  6480                           
  6481                           ; 1 bytes @ 0x2B
  6482  004B                     	ds	1
  6483  004C                     LTC6804_rdcv@parsed_cell:	
  6484  004C                     ___flmul@prod:	
  6485                           ; 2 bytes @ 0x2C
  6486                           
  6487                           
  6488                           ; 4 bytes @ 0x2C
  6489  004C                     	ds	2
  6490  004E                     LTC6804_rdcv@received_pec:	
  6491                           
  6492                           ; 2 bytes @ 0x2E
  6493  004E                     	ds	2
  6494  0050                     LTC6804_rdcv@data_pec:	
  6495  0050                     ___flmul@temp:	
  6496                           ; 2 bytes @ 0x30
  6497                           
  6498                           
  6499                           ; 2 bytes @ 0x30
  6500  0050                     	ds	2
  6501  0052                     ?_fround:	
  6502  0052                     ?_scale:	
  6503                           ; 4 bytes @ 0x32
  6504                           
  6505  0052                     ?___fldiv:	
  6506                           ; 4 bytes @ 0x32
  6507                           
  6508  0052                     LTC6804_rdcv@reg:	
  6509                           ; 4 bytes @ 0x32
  6510                           
  6511  0052                     ___fldiv@a:	
  6512                           ; 1 bytes @ 0x32
  6513                           
  6514                           
  6515                           ; 4 bytes @ 0x32
  6516  0052                     	ds	1
  6517  0053                     LTC6804_rdcv@current_ic:	
  6518                           
  6519                           ; 1 bytes @ 0x33
  6520  0053                     	ds	1
  6521  0054                     LTC6804_rdcv@current_cell:	
  6522                           
  6523                           ; 1 bytes @ 0x34
  6524  0054                     	ds	1
  6525  0055                     LTC6804_rdcv@current_ic_1360:	
  6526                           
  6527                           ; 1 bytes @ 0x35
  6528  0055                     	ds	1
  6529  0056                     ??_fround:	
  6530  0056                     ??_scale:	
  6531                           ; 1 bytes @ 0x36
  6532                           
  6533  0056                     LTC6804_rdcv@current_cell_1361:	
  6534                           ; 1 bytes @ 0x36
  6535                           
  6536  0056                     ___fldiv@b:	
  6537                           ; 1 bytes @ 0x36
  6538                           
  6539                           
  6540                           ; 4 bytes @ 0x36
  6541  0056                     	ds	1
  6542  0057                     LTC6804_rdcv@cell_reg:	
  6543                           
  6544                           ; 1 bytes @ 0x37
  6545  0057                     	ds	1
  6546  0058                     LTC6804_rdcv@data_counter:	
  6547                           
  6548                           ; 1 bytes @ 0x38
  6549  0058                     	ds	2
  6550  005A                     ??___fldiv:	
  6551                           
  6552                           ; 1 bytes @ 0x3A
  6553  005A                     	ds	5
  6554  005F                     ___fldiv@sign:	
  6555                           
  6556                           ; 1 bytes @ 0x3F
  6557  005F                     	ds	1
  6558  0060                     ___fldiv@rem:	
  6559                           
  6560                           ; 4 bytes @ 0x40
  6561  0060                     	ds	4
  6562  0064                     ___fldiv@new_exp:	
  6563                           
  6564                           ; 2 bytes @ 0x44
  6565  0064                     	ds	2
  6566  0066                     ___fldiv@grs:	
  6567  0066                     _scale$2189:	
  6568                           ; 4 bytes @ 0x46
  6569                           
  6570                           
  6571                           ; 4 bytes @ 0x46
  6572  0066                     	ds	4
  6573  006A                     scale@scl:	
  6574  006A                     ___fldiv@bexp:	
  6575                           ; 1 bytes @ 0x4A
  6576                           
  6577                           
  6578                           ; 1 bytes @ 0x4A
  6579  006A                     	ds	1
  6580  006B                     ?___fltol:	
  6581  006B                     ___fldiv@aexp:	
  6582                           ; 4 bytes @ 0x4B
  6583                           
  6584  006B                     ___fltol@f1:	
  6585                           ; 1 bytes @ 0x4B
  6586                           
  6587                           
  6588                           ; 4 bytes @ 0x4B
  6589  006B                     	ds	1
  6590  006C                     ?___flneg:	
  6591  006C                     ___flneg@f1:	
  6592                           ; 4 bytes @ 0x4C
  6593                           
  6594                           
  6595                           ; 4 bytes @ 0x4C
  6596  006C                     	ds	4
  6597                           
  6598                           	psect	maintext
  6599  0AE5                     __pmaintext:	
  6600 ;;
  6601 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  6602 ;;
  6603 ;; *************** function _main *****************
  6604 ;; Defined at:
  6605 ;;		line 48 in file "main.c"
  6606 ;; Parameters:    Size  Location     Type
  6607 ;;		None
  6608 ;; Auto vars:     Size  Location     Type
  6609 ;;  i               2   72[BANK4 ] int 
  6610 ;;  currentBuff    80    0[BANK7 ] float [20]
  6611 ;;  voltages       48    0[BANK4 ] float [12]
  6612 ;;  temps          10   48[BANK4 ] int [5]
  6613 ;;  current         4   74[BANK4 ] float 
  6614 ;;  totalVoltage    4   68[BANK4 ] float 
  6615 ;;  soc             4   64[BANK4 ] float 
  6616 ;;  currentIndex    2   62[BANK4 ] int 
  6617 ;;  highestTemp     2   60[BANK4 ] int 
  6618 ;;  numFaults       2   58[BANK4 ] int 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  1    wreg      void 
  6621 ;; Registers used:
  6622 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6623 ;; Tracked objects:
  6624 ;;		On entry : B1F/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6629 ;;      Locals:         0       0       0       0       4      78       0       0      80       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6630 ;;      Temps:          0       0       0       0       6       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6631 ;;      Totals:         0       0       0       0      10      78       0       0      80       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6632 ;;Total ram usage:      168 bytes
  6633 ;; Hardware stack levels required when called:    8
  6634 ;; This function calls:
  6635 ;;		___fladd
  6636 ;;		___fldiv
  6637 ;;		___flge
  6638 ;;		___flmul
  6639 ;;		___flneg
  6640 ;;		___xxtofl
  6641 ;;		_avgBuff
  6642 ;;		_cellBalancing
  6643 ;;		_getCurrent
  6644 ;;		_getTemps
  6645 ;;		_measureVoltages
  6646 ;;		_setup
  6647 ;;		_startUp
  6648 ;;		_writeValuesToUart
  6649 ;; This function is called by:
  6650 ;;		Startup code after reset
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654                           
  6655                           ;psect for function _main
  6656  0AE5                     _main:	
  6657                           
  6658                           ;main.c: 49: float voltages[12];
  6659                           ;main.c: 50: float totalVoltage;
  6660                           ;main.c: 52: int currentIndex = 0;
  6661                           
  6662                           ;incstack = 0
  6663                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6664  0AE5  0024               	movlb	4	; select bank4
  6665  0AE6  01DE               	clrf	main@currentIndex^(0+512)
  6666  0AE7  01DF               	clrf	(main@currentIndex+1)^(0+512)
  6667                           
  6668                           ;main.c: 53: float currentBuff[20];
  6669                           ;main.c: 54: float current = 0;
  6670  0AE8  3000               	movlw	0
  6671  0AE9  00ED               	movwf	(main@current+3)^(0+512)
  6672  0AEA  3000               	movlw	0
  6673  0AEB  00EC               	movwf	(main@current+2)^(0+512)
  6674  0AEC  3000               	movlw	0
  6675  0AED  00EB               	movwf	(main@current+1)^(0+512)
  6676  0AEE  3000               	movlw	0
  6677  0AEF  00EA               	movwf	main@current^(0+512)
  6678                           
  6679                           ;main.c: 56: int temps[5];
  6680                           ;main.c: 57: int highestTemp;
  6681                           ;main.c: 59: int numFaults = 0;
  6682  0AF0  01DA               	clrf	main@numFaults^(0+512)
  6683  0AF1  01DB               	clrf	(main@numFaults+1)^(0+512)
  6684                           
  6685                           ;main.c: 60: float soc = 0;
  6686  0AF2  3000               	movlw	0
  6687  0AF3  00E3               	movwf	(main@soc+3)^(0+512)
  6688  0AF4  3000               	movlw	0
  6689  0AF5  00E2               	movwf	(main@soc+2)^(0+512)
  6690  0AF6  3000               	movlw	0
  6691  0AF7  00E1               	movwf	(main@soc+1)^(0+512)
  6692  0AF8  3000               	movlw	0
  6693  0AF9  00E0               	movwf	main@soc^(0+512)
  6694                           
  6695                           ;main.c: 62: const unsigned int total_capacity = 12*3600;
  6696                           ;main.c: 63: setup();
  6697  0AFA  31A9  2143  318A   	fcall	_setup
  6698                           
  6699                           ;main.c: 65: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6700  0AFD  3029               	movlw	41
  6701  0AFE  0023               	movlb	3	; select bank3
  6702  0AFF  00A1               	movwf	(??_main^(0+384)+1)
  6703  0B00  3096               	movlw	150
  6704  0B01  00A0               	movwf	??_main^(0+384)
  6705  0B02  307F               	movlw	127
  6706  0B03                     u12367:	
  6707  0B03  0B89               	decfsz	9,f
  6708  0B04  2B03               	goto	u12367
  6709  0B05  0BA0               	decfsz	??_main^(0+384),f
  6710  0B06  2B03               	goto	u12367
  6711  0B07  0BA1               	decfsz	(??_main^(0+384)+1),f
  6712  0B08  2B03               	goto	u12367
  6713                           
  6714                           ;main.c: 69: LATDbits.LATD5 = startUp(&highestTemp, temps, voltages, &totalVoltage, &cur
      +                          rent, &soc);
  6715  0B09  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  6716  0B0A  0023               	movlb	3	; select bank3
  6717  0B0B  00A0               	movwf	??_main^(0+384)
  6718  0B0C  0820               	movf	??_main^(0+384),w
  6719  0B0D  0021               	movlb	1	; select bank1
  6720  0B0E  00E6               	movwf	startUp@temps^(0+128)
  6721  0B0F  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6722  0B10  0023               	movlb	3	; select bank3
  6723  0B11  00A1               	movwf	(??_main+1)^(0+384)
  6724  0B12  0821               	movf	(??_main+1)^(0+384),w
  6725  0B13  0021               	movlb	1	; select bank1
  6726  0B14  00E7               	movwf	startUp@voltages^(0+128)
  6727  0B15  3064               	movlw	(low (main@totalVoltage| (0+512)))& (0+255)
  6728  0B16  0023               	movlb	3	; select bank3
  6729  0B17  00A2               	movwf	(??_main+2)^(0+384)
  6730  0B18  0822               	movf	(??_main+2)^(0+384),w
  6731  0B19  0021               	movlb	1	; select bank1
  6732  0B1A  00E8               	movwf	startUp@totalVoltage^(0+128)
  6733  0B1B  306A               	movlw	(low (main@current| (0+512)))& (0+255)
  6734  0B1C  0023               	movlb	3	; select bank3
  6735  0B1D  00A3               	movwf	(??_main+3)^(0+384)
  6736  0B1E  0823               	movf	(??_main+3)^(0+384),w
  6737  0B1F  0021               	movlb	1	; select bank1
  6738  0B20  00E9               	movwf	startUp@current^(0+128)
  6739  0B21  3060               	movlw	(low (main@soc| (0+512)))& (0+255)
  6740  0B22  0023               	movlb	3	; select bank3
  6741  0B23  00A4               	movwf	(??_main+4)^(0+384)
  6742  0B24  0824               	movf	(??_main+4)^(0+384),w
  6743  0B25  0021               	movlb	1	; select bank1
  6744  0B26  00EA               	movwf	startUp@soc^(0+128)
  6745  0B27  305C               	movlw	(low (main@highestTemp| (0+512)))& (0+255)
  6746  0B28  319E  2672  318A   	fcall	_startUp
  6747  0B2B  0021               	movlb	1	; select bank1
  6748  0B2C  0866               	movf	?_startUp^(0+128),w
  6749  0B2D  0023               	movlb	3	; select bank3
  6750  0B2E  00A5               	movwf	(??_main+5)^(0+384)
  6751  0B2F  0EA5               	swapf	(??_main+5)^(0+384),f
  6752  0B30  0DA5               	rlf	(??_main+5)^(0+384),f
  6753  0B31  0022               	movlb	2	; select bank2
  6754  0B32  080F               	movf	15,w	;volatile
  6755  0B33  0023               	movlb	3	; select bank3
  6756  0B34  0625               	xorwf	(??_main+5)^(0+384),w
  6757  0B35  39DF               	andlw	-33
  6758  0B36  0625               	xorwf	(??_main+5)^(0+384),w
  6759  0B37  0022               	movlb	2	; select bank2
  6760  0B38  008F               	movwf	15	;volatile
  6761                           
  6762                           ;main.c: 70: LATDbits.LATD5 = 1;
  6763  0B39  168F               	bsf	15,5	;volatile
  6764  0B3A                     l8598:	
  6765                           ;main.c: 80: while(1){
  6766                           
  6767                           
  6768                           ;main.c: 84: LATAbits.LATA5 ^= 1;
  6769  0B3A  0022               	movlb	2	; select bank2
  6770  0B3B  0E0C               	swapf	12,w	;volatile
  6771  0B3C  0023               	movlb	3	; select bank3
  6772  0B3D  00A0               	movwf	??_main^(0+384)
  6773  0B3E  0C20               	rrf	??_main^(0+384),w
  6774  0B3F  3901               	andlw	1
  6775  0B40  00A0               	movwf	??_main^(0+384)
  6776  0B41  3001               	movlw	1
  6777  0B42  06A0               	xorwf	??_main^(0+384),f
  6778  0B43  0EA0               	swapf	??_main^(0+384),f
  6779  0B44  0DA0               	rlf	??_main^(0+384),f
  6780  0B45  0022               	movlb	2	; select bank2
  6781  0B46  080C               	movf	12,w	;volatile
  6782  0B47  0023               	movlb	3	; select bank3
  6783  0B48  0620               	xorwf	??_main^(0+384),w
  6784  0B49  39DF               	andlw	-33
  6785  0B4A  0620               	xorwf	??_main^(0+384),w
  6786  0B4B  0022               	movlb	2	; select bank2
  6787  0B4C  008C               	movwf	12	;volatile
  6788                           
  6789                           ;main.c: 88: measureVoltages(voltages, &totalVoltage, 12);
  6790  0B4D  3064               	movlw	(low (main@totalVoltage| (0+512)))& (0+255)
  6791  0B4E  0023               	movlb	3	; select bank3
  6792  0B4F  00A0               	movwf	??_main^(0+384)
  6793  0B50  0820               	movf	??_main^(0+384),w
  6794  0B51  0021               	movlb	1	; select bank1
  6795  0B52  00DF               	movwf	measureVoltages@totalVoltage^(0+128)
  6796  0B53  300C               	movlw	12
  6797  0B54  00E0               	movwf	measureVoltages@numVoltages^(0+128)
  6798  0B55  3000               	movlw	0
  6799  0B56  00E1               	movwf	(measureVoltages@numVoltages^(0+128)+1)
  6800  0B57  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6801  0B58  31A4  2426  318A   	fcall	_measureVoltages
  6802                           
  6803                           ;main.c: 90: highestTemp = getTemps(temps, 5);
  6804  0B5B  3005               	movlw	5
  6805  0B5C  0021               	movlb	1	; select bank1
  6806  0B5D  00AF               	movwf	getTemps@numTemps^(0+128)
  6807  0B5E  3000               	movlw	0
  6808  0B5F  00B0               	movwf	(getTemps@numTemps^(0+128)+1)
  6809  0B60  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  6810  0B61  31AD  255A  318A   	fcall	_getTemps
  6811  0B64  0021               	movlb	1	; select bank1
  6812  0B65  0830               	movf	(?_getTemps+1)^(0+128),w
  6813  0B66  0024               	movlb	4	; select bank4
  6814  0B67  00DD               	movwf	(main@highestTemp+1)^(0+512)
  6815  0B68  0021               	movlb	1	; select bank1
  6816  0B69  082F               	movf	?_getTemps^(0+128),w
  6817  0B6A  0024               	movlb	4	; select bank4
  6818  0B6B  00DC               	movwf	main@highestTemp^(0+512)
  6819                           
  6820                           ;main.c: 92: if(currentBool == 1){
  6821  0B6C  0022               	movlb	2	; select bank2
  6822  0B6D  035B               	decf	_currentBool^(0+256),w
  6823  0B6E  045C               	iorwf	(_currentBool+1)^(0+256),w
  6824  0B6F  1D03               	btfss	3,2
  6825  0B70  2C93               	goto	l8624
  6826                           
  6827                           ;main.c: 93: currentBuff[currentIndex] = getCurrent();
  6828  0B71  31AA  2203  318A   	fcall	_getCurrent
  6829  0B74  0024               	movlb	4	; select bank4
  6830  0B75  085E               	movf	main@currentIndex^(0+512),w
  6831  0B76  0023               	movlb	3	; select bank3
  6832  0B77  00A0               	movwf	??_main^(0+384)
  6833  0B78  3001               	movlw	1
  6834  0B79                     u12045:	
  6835  0B79  35A0               	lslf	??_main^(0+384),f
  6836  0B7A  3EFF               	addlw	-1
  6837  0B7B  1D03               	skipz
  6838  0B7C  2B79               	goto	u12045
  6839  0B7D  3520               	lslf	??_main^(0+384),w
  6840  0B7E  3EA0               	addlw	(low (main@currentBuff| (0+768)))& (0+255)
  6841  0B7F  0086               	movwf	6
  6842  0B80  3003               	movlw	3	; select bank7/8
  6843  0B81  0087               	movwf	7
  6844  0B82  0021               	movlb	1	; select bank1
  6845  0B83  084D               	movf	?_getCurrent^(0+128),w
  6846  0B84  3FC0               	movwi [0]fsr1
  6847  0B85  084E               	movf	(?_getCurrent+1)^(0+128),w
  6848  0B86  3FC1               	movwi [1]fsr1
  6849  0B87  084F               	movf	(?_getCurrent+2)^(0+128),w
  6850  0B88  3FC2               	movwi [2]fsr1
  6851  0B89  0850               	movf	(?_getCurrent+3)^(0+128),w
  6852  0B8A  3FC3               	movwi [3]fsr1
  6853                           
  6854                           ;main.c: 94: currentIndex ++;
  6855  0B8B  3001               	movlw	1
  6856  0B8C  0024               	movlb	4	; select bank4
  6857  0B8D  07DE               	addwf	main@currentIndex^(0+512),f
  6858  0B8E  3000               	movlw	0
  6859  0B8F  3DDF               	addwfc	(main@currentIndex+1)^(0+512),f
  6860                           
  6861                           ;main.c: 95: if(currentIndex >= 20){
  6862  0B90  085F               	movf	(main@currentIndex+1)^(0+512),w
  6863  0B91  3A80               	xorlw	128
  6864  0B92  0023               	movlb	3	; select bank3
  6865  0B93  00A0               	movwf	??_main^(0+384)
  6866  0B94  3080               	movlw	128
  6867  0B95  0220               	subwf	??_main^(0+384),w
  6868  0B96  1D03               	skipz
  6869  0B97  2B9B               	goto	u12055
  6870  0B98  3014               	movlw	20
  6871  0B99  0024               	movlb	4	; select bank4
  6872  0B9A  025E               	subwf	main@currentIndex^(0+512),w
  6873  0B9B                     u12055:	
  6874  0B9B  1C03               	skipc
  6875  0B9C  2C90               	goto	l8622
  6876                           
  6877                           ;main.c: 96: cellBalancing(voltages, 12);
  6878  0B9D  300C               	movlw	12
  6879  0B9E  0021               	movlb	1	; select bank1
  6880  0B9F  00D1               	movwf	cellBalancing@numVoltages^(0+128)
  6881  0BA0  3000               	movlw	0
  6882  0BA1  00D2               	movwf	(cellBalancing@numVoltages^(0+128)+1)
  6883  0BA2  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6884  0BA3  31A2  22A0  318A   	fcall	_cellBalancing
  6885                           
  6886                           ;main.c: 97: current = avgBuff(currentBuff, currentIndex);
  6887  0BA6  0024               	movlb	4	; select bank4
  6888  0BA7  085F               	movf	(main@currentIndex+1)^(0+512),w
  6889  0BA8  0021               	movlb	1	; select bank1
  6890  0BA9  00C2               	movwf	(avgBuff@size+1)^(0+128)
  6891  0BAA  0024               	movlb	4	; select bank4
  6892  0BAB  085E               	movf	main@currentIndex^(0+512),w
  6893  0BAC  0021               	movlb	1	; select bank1
  6894  0BAD  00C1               	movwf	avgBuff@size^(0+128)
  6895  0BAE  30A0               	movlw	(low (main@currentBuff| (0+768)))& (0+255)
  6896  0BAF  31AE  265A  318A   	fcall	_avgBuff
  6897  0BB2  0021               	movlb	1	; select bank1
  6898  0BB3  0844               	movf	(?_avgBuff+3)^(0+128),w
  6899  0BB4  0024               	movlb	4	; select bank4
  6900  0BB5  00ED               	movwf	(main@current+3)^(0+512)
  6901  0BB6  0021               	movlb	1	; select bank1
  6902  0BB7  0843               	movf	(?_avgBuff+2)^(0+128),w
  6903  0BB8  0024               	movlb	4	; select bank4
  6904  0BB9  00EC               	movwf	(main@current+2)^(0+512)
  6905  0BBA  0021               	movlb	1	; select bank1
  6906  0BBB  0842               	movf	(?_avgBuff+1)^(0+128),w
  6907  0BBC  0024               	movlb	4	; select bank4
  6908  0BBD  00EB               	movwf	(main@current+1)^(0+512)
  6909  0BBE  0021               	movlb	1	; select bank1
  6910  0BBF  0841               	movf	?_avgBuff^(0+128),w
  6911  0BC0  0024               	movlb	4	; select bank4
  6912  0BC1  00EA               	movwf	main@current^(0+512)
  6913                           
  6914                           ;main.c: 99: soc = ((((soc)*(float)total_capacity) - (current/500.0))/((float)(total_cap
      +                          acity)));
  6915  0BC2  086D               	movf	(main@current+3)^(0+512),w
  6916  0BC3  0020               	movlb	0	; select bank0
  6917  0BC4  00D9               	movwf	___fldiv@b+3
  6918  0BC5  0024               	movlb	4	; select bank4
  6919  0BC6  086C               	movf	(main@current+2)^(0+512),w
  6920  0BC7  0020               	movlb	0	; select bank0
  6921  0BC8  00D8               	movwf	___fldiv@b+2
  6922  0BC9  0024               	movlb	4	; select bank4
  6923  0BCA  086B               	movf	(main@current+1)^(0+512),w
  6924  0BCB  0020               	movlb	0	; select bank0
  6925  0BCC  00D7               	movwf	___fldiv@b+1
  6926  0BCD  0024               	movlb	4	; select bank4
  6927  0BCE  086A               	movf	main@current^(0+512),w
  6928  0BCF  0020               	movlb	0	; select bank0
  6929  0BD0  00D6               	movwf	___fldiv@b
  6930  0BD1  3043               	movlw	67
  6931  0BD2  00D5               	movwf	___fldiv@a+3
  6932  0BD3  30FA               	movlw	250
  6933  0BD4  00D4               	movwf	___fldiv@a+2
  6934  0BD5  3000               	movlw	0
  6935  0BD6  00D3               	movwf	___fldiv@a+1
  6936  0BD7  3000               	movlw	0
  6937  0BD8  00D2               	movwf	___fldiv@a
  6938  0BD9  3190  2073  318A   	fcall	___fldiv
  6939  0BDC  0020               	movlb	0	; select bank0
  6940  0BDD  0855               	movf	?___fldiv+3,w
  6941  0BDE  00EF               	movwf	___flneg@f1+3
  6942  0BDF  0854               	movf	?___fldiv+2,w
  6943  0BE0  00EE               	movwf	___flneg@f1+2
  6944  0BE1  0853               	movf	?___fldiv+1,w
  6945  0BE2  00ED               	movwf	___flneg@f1+1
  6946  0BE3  0852               	movf	?___fldiv,w
  6947  0BE4  00EC               	movwf	___flneg@f1
  6948  0BE5  319C  2400  318A   	fcall	___flneg
  6949  0BE8  0020               	movlb	0	; select bank0
  6950  0BE9  086F               	movf	?___flneg+3,w
  6951  0BEA  0021               	movlb	1	; select bank1
  6952  0BEB  00AC               	movwf	(___fladd@b+3)^(0+128)
  6953  0BEC  0020               	movlb	0	; select bank0
  6954  0BED  086E               	movf	?___flneg+2,w
  6955  0BEE  0021               	movlb	1	; select bank1
  6956  0BEF  00AB               	movwf	(___fladd@b+2)^(0+128)
  6957  0BF0  0020               	movlb	0	; select bank0
  6958  0BF1  086D               	movf	?___flneg+1,w
  6959  0BF2  0021               	movlb	1	; select bank1
  6960  0BF3  00AA               	movwf	(___fladd@b+1)^(0+128)
  6961  0BF4  0020               	movlb	0	; select bank0
  6962  0BF5  086C               	movf	?___flneg,w
  6963  0BF6  0021               	movlb	1	; select bank1
  6964  0BF7  00A9               	movwf	___fladd@b^(0+128)
  6965  0BF8  0024               	movlb	4	; select bank4
  6966  0BF9  0863               	movf	(main@soc+3)^(0+512),w
  6967  0BFA  0020               	movlb	0	; select bank0
  6968  0BFB  00BB               	movwf	___flmul@b+3
  6969  0BFC  0024               	movlb	4	; select bank4
  6970  0BFD  0862               	movf	(main@soc+2)^(0+512),w
  6971  0BFE  0020               	movlb	0	; select bank0
  6972  0BFF  00BA               	movwf	___flmul@b+2
  6973  0C00  0024               	movlb	4	; select bank4
  6974  0C01  0861               	movf	(main@soc+1)^(0+512),w
  6975  0C02  0020               	movlb	0	; select bank0
  6976  0C03  00B9               	movwf	___flmul@b+1
  6977  0C04  0024               	movlb	4	; select bank4
  6978  0C05  0860               	movf	main@soc^(0+512),w
  6979  0C06  0020               	movlb	0	; select bank0
  6980  0C07  00B8               	movwf	___flmul@b
  6981  0C08  3004               	movlw	low (main@total_capacity| (0+32768))
  6982  0C09  0084               	movwf	4
  6983  0C0A  30B8               	movlw	high (main@total_capacity| (0+32768))
  6984  0C0B  0085               	movwf	5
  6985  0C0C  3F00               	moviw [0]fsr0
  6986  0C0D  0023               	movlb	3	; select bank3
  6987  0C0E  00A0               	movwf	??_main^(0+384)
  6988  0C0F  3F01               	moviw [1]fsr0
  6989  0C10  00A1               	movwf	(??_main^(0+384)+1)
  6990  0C11  0820               	movf	??_main^(0+384),w
  6991  0C12  0020               	movlb	0	; select bank0
  6992  0C13  00AE               	movwf	___xxtofl@val
  6993  0C14  0023               	movlb	3	; select bank3
  6994  0C15  0821               	movf	(??_main+1)^(0+384),w
  6995  0C16  0020               	movlb	0	; select bank0
  6996  0C17  00AF               	movwf	___xxtofl@val+1
  6997  0C18  01B0               	clrf	___xxtofl@val+2
  6998  0C19  01B1               	clrf	___xxtofl@val+3
  6999  0C1A  3000               	movlw	0
  7000  0C1B  31AF  276A  318A   	fcall	___xxtofl
  7001  0C1E  0020               	movlb	0	; select bank0
  7002  0C1F  0831               	movf	?___xxtofl+3,w
  7003  0C20  00BF               	movwf	___flmul@a+3
  7004  0C21  0830               	movf	?___xxtofl+2,w
  7005  0C22  00BE               	movwf	___flmul@a+2
  7006  0C23  082F               	movf	?___xxtofl+1,w
  7007  0C24  00BD               	movwf	___flmul@a+1
  7008  0C25  082E               	movf	?___xxtofl,w
  7009  0C26  00BC               	movwf	___flmul@a
  7010  0C27  3195  25D4  318A   	fcall	___flmul
  7011  0C2A  0020               	movlb	0	; select bank0
  7012  0C2B  083B               	movf	?___flmul+3,w
  7013  0C2C  0021               	movlb	1	; select bank1
  7014  0C2D  00B0               	movwf	(___fladd@a+3)^(0+128)
  7015  0C2E  0020               	movlb	0	; select bank0
  7016  0C2F  083A               	movf	?___flmul+2,w
  7017  0C30  0021               	movlb	1	; select bank1
  7018  0C31  00AF               	movwf	(___fladd@a+2)^(0+128)
  7019  0C32  0020               	movlb	0	; select bank0
  7020  0C33  0839               	movf	?___flmul+1,w
  7021  0C34  0021               	movlb	1	; select bank1
  7022  0C35  00AE               	movwf	(___fladd@a+1)^(0+128)
  7023  0C36  0020               	movlb	0	; select bank0
  7024  0C37  0838               	movf	?___flmul,w
  7025  0C38  0021               	movlb	1	; select bank1
  7026  0C39  00AD               	movwf	___fladd@a^(0+128)
  7027  0C3A  3193  23D8  318A   	fcall	___fladd
  7028  0C3D  0021               	movlb	1	; select bank1
  7029  0C3E  082C               	movf	(?___fladd+3)^(0+128),w
  7030  0C3F  0023               	movlb	3	; select bank3
  7031  0C40  00A9               	movwf	(_main$2183+3)^(0+384)
  7032  0C41  0021               	movlb	1	; select bank1
  7033  0C42  082B               	movf	(?___fladd+2)^(0+128),w
  7034  0C43  0023               	movlb	3	; select bank3
  7035  0C44  00A8               	movwf	(_main$2183+2)^(0+384)
  7036  0C45  0021               	movlb	1	; select bank1
  7037  0C46  082A               	movf	(?___fladd+1)^(0+128),w
  7038  0C47  0023               	movlb	3	; select bank3
  7039  0C48  00A7               	movwf	(_main$2183+1)^(0+384)
  7040  0C49  0021               	movlb	1	; select bank1
  7041  0C4A  0829               	movf	?___fladd^(0+128),w
  7042  0C4B  0023               	movlb	3	; select bank3
  7043  0C4C  00A6               	movwf	_main$2183^(0+384)
  7044                           
  7045                           ;main.c: 99: soc = ((((soc)*(float)total_capacity) - (current/500.0))/((float)(total_cap
      +                          acity)));
  7046  0C4D  3004               	movlw	low (main@total_capacity| (0+32768))
  7047  0C4E  0084               	movwf	4
  7048  0C4F  30B8               	movlw	high (main@total_capacity| (0+32768))
  7049  0C50  0085               	movwf	5
  7050  0C51  3F00               	moviw [0]fsr0
  7051  0C52  00A0               	movwf	??_main^(0+384)
  7052  0C53  3F01               	moviw [1]fsr0
  7053  0C54  00A1               	movwf	(??_main^(0+384)+1)
  7054  0C55  0820               	movf	??_main^(0+384),w
  7055  0C56  0020               	movlb	0	; select bank0
  7056  0C57  00AE               	movwf	___xxtofl@val
  7057  0C58  0023               	movlb	3	; select bank3
  7058  0C59  0821               	movf	(??_main+1)^(0+384),w
  7059  0C5A  0020               	movlb	0	; select bank0
  7060  0C5B  00AF               	movwf	___xxtofl@val+1
  7061  0C5C  01B0               	clrf	___xxtofl@val+2
  7062  0C5D  01B1               	clrf	___xxtofl@val+3
  7063  0C5E  3000               	movlw	0
  7064  0C5F  31AF  276A  318A   	fcall	___xxtofl
  7065  0C62  0020               	movlb	0	; select bank0
  7066  0C63  0831               	movf	?___xxtofl+3,w
  7067  0C64  00D5               	movwf	___fldiv@a+3
  7068  0C65  0830               	movf	?___xxtofl+2,w
  7069  0C66  00D4               	movwf	___fldiv@a+2
  7070  0C67  082F               	movf	?___xxtofl+1,w
  7071  0C68  00D3               	movwf	___fldiv@a+1
  7072  0C69  082E               	movf	?___xxtofl,w
  7073  0C6A  00D2               	movwf	___fldiv@a
  7074  0C6B  0023               	movlb	3	; select bank3
  7075  0C6C  0829               	movf	(_main$2183+3)^(0+384),w
  7076  0C6D  0020               	movlb	0	; select bank0
  7077  0C6E  00D9               	movwf	___fldiv@b+3
  7078  0C6F  0023               	movlb	3	; select bank3
  7079  0C70  0828               	movf	(_main$2183+2)^(0+384),w
  7080  0C71  0020               	movlb	0	; select bank0
  7081  0C72  00D8               	movwf	___fldiv@b+2
  7082  0C73  0023               	movlb	3	; select bank3
  7083  0C74  0827               	movf	(_main$2183+1)^(0+384),w
  7084  0C75  0020               	movlb	0	; select bank0
  7085  0C76  00D7               	movwf	___fldiv@b+1
  7086  0C77  0023               	movlb	3	; select bank3
  7087  0C78  0826               	movf	_main$2183^(0+384),w
  7088  0C79  0020               	movlb	0	; select bank0
  7089  0C7A  00D6               	movwf	___fldiv@b
  7090  0C7B  3190  2073  318A   	fcall	___fldiv
  7091  0C7E  0020               	movlb	0	; select bank0
  7092  0C7F  0855               	movf	?___fldiv+3,w
  7093  0C80  0024               	movlb	4	; select bank4
  7094  0C81  00E3               	movwf	(main@soc+3)^(0+512)
  7095  0C82  0020               	movlb	0	; select bank0
  7096  0C83  0854               	movf	?___fldiv+2,w
  7097  0C84  0024               	movlb	4	; select bank4
  7098  0C85  00E2               	movwf	(main@soc+2)^(0+512)
  7099  0C86  0020               	movlb	0	; select bank0
  7100  0C87  0853               	movf	?___fldiv+1,w
  7101  0C88  0024               	movlb	4	; select bank4
  7102  0C89  00E1               	movwf	(main@soc+1)^(0+512)
  7103  0C8A  0020               	movlb	0	; select bank0
  7104  0C8B  0852               	movf	?___fldiv,w
  7105  0C8C  0024               	movlb	4	; select bank4
  7106  0C8D  00E0               	movwf	main@soc^(0+512)
  7107                           
  7108                           ;main.c: 101: currentIndex = 0;
  7109  0C8E  01DE               	clrf	main@currentIndex^(0+512)
  7110  0C8F  01DF               	clrf	(main@currentIndex+1)^(0+512)
  7111  0C90                     l8622:	
  7112                           
  7113                           ;main.c: 102: }
  7114                           ;main.c: 103: currentBool = 0;
  7115  0C90  0022               	movlb	2	; select bank2
  7116  0C91  01DB               	clrf	_currentBool^(0+256)
  7117  0C92  01DC               	clrf	(_currentBool+1)^(0+256)
  7118  0C93                     l8624:	
  7119                           
  7120                           ;main.c: 104: }
  7121                           ;main.c: 109: for(int i = 0; i <5; i++){
  7122  0C93  0024               	movlb	4	; select bank4
  7123  0C94  01E8               	clrf	main@i^(0+512)
  7124  0C95  01E9               	clrf	(main@i+1)^(0+512)
  7125  0C96  0869               	movf	(main@i+1)^(0+512),w
  7126  0C97  3A80               	xorlw	128
  7127  0C98  0023               	movlb	3	; select bank3
  7128  0C99  00A0               	movwf	??_main^(0+384)
  7129  0C9A  3080               	movlw	128
  7130  0C9B  0220               	subwf	??_main^(0+384),w
  7131  0C9C  1D03               	skipz
  7132  0C9D  2CA1               	goto	u12065
  7133  0C9E  3005               	movlw	5
  7134  0C9F  0024               	movlb	4	; select bank4
  7135  0CA0  0268               	subwf	main@i^(0+512),w
  7136  0CA1                     u12065:	
  7137  0CA1  1803               	btfsc	3,0
  7138  0CA2  2CE6               	goto	l8636
  7139  0CA3                     l8630:	
  7140                           
  7141                           ;main.c: 110: if(temps[i] >= 40 || temps[i] <= 10){
  7142  0CA3  0024               	movlb	4	; select bank4
  7143  0CA4  3568               	lslf	main@i^(0+512),w
  7144  0CA5  3E50               	addlw	(low (main@temps| (0+512)))& (0+255)
  7145  0CA6  0086               	movwf	6
  7146  0CA7  3002               	movlw	2	; select bank4/5
  7147  0CA8  0087               	movwf	7
  7148  0CA9  3F40               	moviw [0]fsr1
  7149  0CAA  0023               	movlb	3	; select bank3
  7150  0CAB  00A0               	movwf	??_main^(0+384)
  7151  0CAC  3F41               	moviw [1]fsr1
  7152  0CAD  00A1               	movwf	(??_main^(0+384)+1)
  7153  0CAE  0821               	movf	(??_main+1)^(0+384),w
  7154  0CAF  3A80               	xorlw	128
  7155  0CB0  00A2               	movwf	(??_main+2)^(0+384)
  7156  0CB1  3080               	movlw	128
  7157  0CB2  0222               	subwf	(??_main+2)^(0+384),w
  7158  0CB3  1D03               	skipz
  7159  0CB4  2CB7               	goto	u12075
  7160  0CB5  3028               	movlw	40
  7161  0CB6  0220               	subwf	??_main^(0+384),w
  7162  0CB7                     u12075:	
  7163  0CB7  1803               	skipnc
  7164  0CB8  2CCF               	goto	l8634
  7165  0CB9  0024               	movlb	4	; select bank4
  7166  0CBA  3568               	lslf	main@i^(0+512),w
  7167  0CBB  3E50               	addlw	(low (main@temps| (0+512)))& (0+255)
  7168  0CBC  0086               	movwf	6
  7169  0CBD  3002               	movlw	2	; select bank4/5
  7170  0CBE  0087               	movwf	7
  7171  0CBF  3F40               	moviw [0]fsr1
  7172  0CC0  0023               	movlb	3	; select bank3
  7173  0CC1  00A0               	movwf	??_main^(0+384)
  7174  0CC2  3F41               	moviw [1]fsr1
  7175  0CC3  00A1               	movwf	(??_main^(0+384)+1)
  7176  0CC4  0821               	movf	(??_main+1)^(0+384),w
  7177  0CC5  3A80               	xorlw	128
  7178  0CC6  00A2               	movwf	(??_main+2)^(0+384)
  7179  0CC7  3080               	movlw	128
  7180  0CC8  0222               	subwf	(??_main+2)^(0+384),w
  7181  0CC9  1D03               	skipz
  7182  0CCA  2CCD               	goto	u12085
  7183  0CCB  300B               	movlw	11
  7184  0CCC  0220               	subwf	??_main^(0+384),w
  7185  0CCD                     u12085:	
  7186  0CCD  1803               	skipnc
  7187  0CCE  2CD4               	goto	l92
  7188  0CCF                     l8634:	
  7189                           
  7190                           ;main.c: 111: numFaults++;
  7191  0CCF  3001               	movlw	1
  7192  0CD0  0024               	movlb	4	; select bank4
  7193  0CD1  07DA               	addwf	main@numFaults^(0+512),f
  7194  0CD2  3000               	movlw	0
  7195  0CD3  3DDB               	addwfc	(main@numFaults+1)^(0+512),f
  7196  0CD4                     l92:	
  7197  0CD4  3001               	movlw	1
  7198  0CD5  0024               	movlb	4	; select bank4
  7199  0CD6  07E8               	addwf	main@i^(0+512),f
  7200  0CD7  3000               	movlw	0
  7201  0CD8  3DE9               	addwfc	(main@i+1)^(0+512),f
  7202  0CD9  0869               	movf	(main@i+1)^(0+512),w
  7203  0CDA  3A80               	xorlw	128
  7204  0CDB  0023               	movlb	3	; select bank3
  7205  0CDC  00A0               	movwf	??_main^(0+384)
  7206  0CDD  3080               	movlw	128
  7207  0CDE  0220               	subwf	??_main^(0+384),w
  7208  0CDF  1D03               	skipz
  7209  0CE0  2CE4               	goto	u12095
  7210  0CE1  3005               	movlw	5
  7211  0CE2  0024               	movlb	4	; select bank4
  7212  0CE3  0268               	subwf	main@i^(0+512),w
  7213  0CE4                     u12095:	
  7214  0CE4  1C03               	skipc
  7215  0CE5  2CA3               	goto	l8630
  7216  0CE6                     l8636:	
  7217                           
  7218                           ;main.c: 112: }
  7219                           ;main.c: 113: }
  7220                           ;main.c: 115: if(current >= 10){
  7221  0CE6  0024               	movlb	4	; select bank4
  7222  0CE7  086D               	movf	(main@current+3)^(0+512),w
  7223  0CE8  0021               	movlb	1	; select bank1
  7224  0CE9  00C4               	movwf	(___flge@ff1+3)^(0+128)
  7225  0CEA  0024               	movlb	4	; select bank4
  7226  0CEB  086C               	movf	(main@current+2)^(0+512),w
  7227  0CEC  0021               	movlb	1	; select bank1
  7228  0CED  00C3               	movwf	(___flge@ff1+2)^(0+128)
  7229  0CEE  0024               	movlb	4	; select bank4
  7230  0CEF  086B               	movf	(main@current+1)^(0+512),w
  7231  0CF0  0021               	movlb	1	; select bank1
  7232  0CF1  00C2               	movwf	(___flge@ff1+1)^(0+128)
  7233  0CF2  0024               	movlb	4	; select bank4
  7234  0CF3  086A               	movf	main@current^(0+512),w
  7235  0CF4  0021               	movlb	1	; select bank1
  7236  0CF5  00C1               	movwf	___flge@ff1^(0+128)
  7237  0CF6  3041               	movlw	65
  7238  0CF7  00C8               	movwf	(___flge@ff2+3)^(0+128)
  7239  0CF8  3020               	movlw	32
  7240  0CF9  00C7               	movwf	(___flge@ff2+2)^(0+128)
  7241  0CFA  3000               	movlw	0
  7242  0CFB  00C6               	movwf	(___flge@ff2+1)^(0+128)
  7243  0CFC  3000               	movlw	0
  7244  0CFD  00C5               	movwf	___flge@ff2^(0+128)
  7245  0CFE  31A0  20B2  318A   	fcall	___flge
  7246  0D01  1C03               	btfss	3,0
  7247  0D02  2D08               	goto	l95
  7248                           
  7249                           ;main.c: 116: numFaults++;
  7250  0D03  3001               	movlw	1
  7251  0D04  0024               	movlb	4	; select bank4
  7252  0D05  07DA               	addwf	main@numFaults^(0+512),f
  7253  0D06  3000               	movlw	0
  7254  0D07  3DDB               	addwfc	(main@numFaults+1)^(0+512),f
  7255  0D08                     l95:	
  7256                           
  7257                           ;main.c: 117: }
  7258                           ;main.c: 121: if(numFaults >= 10){
  7259  0D08  0024               	movlb	4	; select bank4
  7260  0D09  085B               	movf	(main@numFaults+1)^(0+512),w
  7261  0D0A  3A80               	xorlw	128
  7262  0D0B  0023               	movlb	3	; select bank3
  7263  0D0C  00A0               	movwf	??_main^(0+384)
  7264  0D0D  3080               	movlw	128
  7265  0D0E  0220               	subwf	??_main^(0+384),w
  7266  0D0F  1D03               	skipz
  7267  0D10  2D14               	goto	u12115
  7268  0D11  300A               	movlw	10
  7269  0D12  0024               	movlb	4	; select bank4
  7270  0D13  025A               	subwf	main@numFaults^(0+512),w
  7271  0D14                     u12115:	
  7272  0D14  1C03               	skipc
  7273  0D15  2D18               	goto	l8642
  7274                           
  7275                           ;main.c: 122: LATDbits.LATD5 = 0;
  7276  0D16  0022               	movlb	2	; select bank2
  7277  0D17  128F               	bcf	15,5	;volatile
  7278  0D18                     l8642:	
  7279                           
  7280                           ;main.c: 123: }
  7281                           ;main.c: 128: if(uartBool == 1){
  7282  0D18  0024               	movlb	4	; select bank4
  7283  0D19  036E               	decf	_uartBool^(0+512),w
  7284  0D1A  046F               	iorwf	(_uartBool+1)^(0+512),w
  7285  0D1B  1D03               	btfss	3,2
  7286  0D1C  2B3A               	goto	l8598
  7287                           
  7288                           ;main.c: 129: writeValuesToUart(voltages, 12, totalVoltage, temps, 5, highestTemp, curre
      +                          nt, soc, 22);
  7289  0D1D  300C               	movlw	12
  7290  0D1E  0022               	movlb	2	; select bank2
  7291  0D1F  00C6               	movwf	writeValuesToUart@voltageArrLength^(0+256)
  7292  0D20  3000               	movlw	0
  7293  0D21  00C7               	movwf	(writeValuesToUart@voltageArrLength^(0+256)+1)
  7294  0D22  0024               	movlb	4	; select bank4
  7295  0D23  0867               	movf	(main@totalVoltage+3)^(0+512),w
  7296  0D24  0022               	movlb	2	; select bank2
  7297  0D25  00CB               	movwf	(writeValuesToUart@totalVoltage+3)^(0+256)
  7298  0D26  0024               	movlb	4	; select bank4
  7299  0D27  0866               	movf	(main@totalVoltage+2)^(0+512),w
  7300  0D28  0022               	movlb	2	; select bank2
  7301  0D29  00CA               	movwf	(writeValuesToUart@totalVoltage+2)^(0+256)
  7302  0D2A  0024               	movlb	4	; select bank4
  7303  0D2B  0865               	movf	(main@totalVoltage+1)^(0+512),w
  7304  0D2C  0022               	movlb	2	; select bank2
  7305  0D2D  00C9               	movwf	(writeValuesToUart@totalVoltage+1)^(0+256)
  7306  0D2E  0024               	movlb	4	; select bank4
  7307  0D2F  0864               	movf	main@totalVoltage^(0+512),w
  7308  0D30  0022               	movlb	2	; select bank2
  7309  0D31  00C8               	movwf	writeValuesToUart@totalVoltage^(0+256)
  7310  0D32  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  7311  0D33  0023               	movlb	3	; select bank3
  7312  0D34  00A0               	movwf	??_main^(0+384)
  7313  0D35  0820               	movf	??_main^(0+384),w
  7314  0D36  0022               	movlb	2	; select bank2
  7315  0D37  00CC               	movwf	writeValuesToUart@temperatureArr^(0+256)
  7316  0D38  3005               	movlw	5
  7317  0D39  00CD               	movwf	writeValuesToUart@temperatureArrLength^(0+256)
  7318  0D3A  3000               	movlw	0
  7319  0D3B  00CE               	movwf	(writeValuesToUart@temperatureArrLength^(0+256)+1)
  7320  0D3C  0024               	movlb	4	; select bank4
  7321  0D3D  085D               	movf	(main@highestTemp+1)^(0+512),w
  7322  0D3E  0022               	movlb	2	; select bank2
  7323  0D3F  00D0               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+256)
  7324  0D40  0024               	movlb	4	; select bank4
  7325  0D41  085C               	movf	main@highestTemp^(0+512),w
  7326  0D42  0022               	movlb	2	; select bank2
  7327  0D43  00CF               	movwf	writeValuesToUart@temperatureHigh^(0+256)
  7328  0D44  0024               	movlb	4	; select bank4
  7329  0D45  086D               	movf	(main@current+3)^(0+512),w
  7330  0D46  0022               	movlb	2	; select bank2
  7331  0D47  00D4               	movwf	(writeValuesToUart@current+3)^(0+256)
  7332  0D48  0024               	movlb	4	; select bank4
  7333  0D49  086C               	movf	(main@current+2)^(0+512),w
  7334  0D4A  0022               	movlb	2	; select bank2
  7335  0D4B  00D3               	movwf	(writeValuesToUart@current+2)^(0+256)
  7336  0D4C  0024               	movlb	4	; select bank4
  7337  0D4D  086B               	movf	(main@current+1)^(0+512),w
  7338  0D4E  0022               	movlb	2	; select bank2
  7339  0D4F  00D2               	movwf	(writeValuesToUart@current+1)^(0+256)
  7340  0D50  0024               	movlb	4	; select bank4
  7341  0D51  086A               	movf	main@current^(0+512),w
  7342  0D52  0022               	movlb	2	; select bank2
  7343  0D53  00D1               	movwf	writeValuesToUart@current^(0+256)
  7344  0D54  0024               	movlb	4	; select bank4
  7345  0D55  0863               	movf	(main@soc+3)^(0+512),w
  7346  0D56  0022               	movlb	2	; select bank2
  7347  0D57  00D8               	movwf	(writeValuesToUart@soc+3)^(0+256)
  7348  0D58  0024               	movlb	4	; select bank4
  7349  0D59  0862               	movf	(main@soc+2)^(0+512),w
  7350  0D5A  0022               	movlb	2	; select bank2
  7351  0D5B  00D7               	movwf	(writeValuesToUart@soc+2)^(0+256)
  7352  0D5C  0024               	movlb	4	; select bank4
  7353  0D5D  0861               	movf	(main@soc+1)^(0+512),w
  7354  0D5E  0022               	movlb	2	; select bank2
  7355  0D5F  00D6               	movwf	(writeValuesToUart@soc+1)^(0+256)
  7356  0D60  0024               	movlb	4	; select bank4
  7357  0D61  0860               	movf	main@soc^(0+512),w
  7358  0D62  0022               	movlb	2	; select bank2
  7359  0D63  00D5               	movwf	writeValuesToUart@soc^(0+256)
  7360  0D64  3016               	movlw	22
  7361  0D65  00D9               	movwf	writeValuesToUart@uartLines^(0+256)
  7362  0D66  3000               	movlw	0
  7363  0D67  00DA               	movwf	(writeValuesToUart@uartLines^(0+256)+1)
  7364  0D68  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  7365  0D69  3190  200F  318A   	fcall	_writeValuesToUart
  7366                           
  7367                           ;main.c: 130: uartBool = 0;
  7368  0D6C  0024               	movlb	4	; select bank4
  7369  0D6D  01EE               	clrf	_uartBool^(0+512)
  7370  0D6E  01EF               	clrf	(_uartBool+1)^(0+512)
  7371  0D6F  2B3A               	goto	l8598
  7372  0D70                     __end_of_main:	
  7373                           
  7374                           	psect	text1
  7375  100F                     __ptext1:	
  7376 ;; *************** function _writeValuesToUart *****************
  7377 ;; Defined at:
  7378 ;;		line 11 in file "uart.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  voltageArr      1    wreg     PTR float 
  7381 ;;		 -> main@voltages(48), 
  7382 ;;  voltageArrLe    2   38[BANK2 ] int 
  7383 ;;  totalVoltage    4   40[BANK2 ] float 
  7384 ;;  temperatureA    1   44[BANK2 ] PTR int 
  7385 ;;		 -> main@temps(10), 
  7386 ;;  temperatureA    2   45[BANK2 ] int 
  7387 ;;  temperatureH    2   47[BANK2 ] int 
  7388 ;;  current         4   49[BANK2 ] float 
  7389 ;;  soc             4   53[BANK2 ] float 
  7390 ;;  uartLines       2   57[BANK2 ] int 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  voltageArr      1   75[BANK1 ] PTR float 
  7393 ;;		 -> main@voltages(48), 
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7403 ;;      Params:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7404 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7406 ;;      Totals:         0       0       1      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7407 ;;Total ram usage:       22 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; Hardware stack levels required when called:    7
  7410 ;; This function calls:
  7411 ;;		_clearScreen
  7412 ;;		_writeCurrent
  7413 ;;		_writeSOC
  7414 ;;		_writeTemps
  7415 ;;		_writeVoltages
  7416 ;; This function is called by:
  7417 ;;		_main
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           
  7421                           
  7422                           ;psect for function _writeValuesToUart
  7423  100F                     _writeValuesToUart:	
  7424                           
  7425                           ;incstack = 0
  7426                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7427                           ;writeValuesToUart@voltageArr stored from wreg
  7428  100F  0021               	movlb	1	; select bank1
  7429  1010  00EB               	movwf	writeValuesToUart@voltageArr^(0+128)
  7430                           
  7431                           ;uart.c: 12: clearScreen(uartLines);
  7432  1011  0022               	movlb	2	; select bank2
  7433  1012  085A               	movf	(writeValuesToUart@uartLines+1)^(0+256),w
  7434  1013  0021               	movlb	1	; select bank1
  7435  1014  00E2               	movwf	(clearScreen@numLines+1)^(0+128)
  7436  1015  0022               	movlb	2	; select bank2
  7437  1016  0859               	movf	writeValuesToUart@uartLines^(0+256),w
  7438  1017  0021               	movlb	1	; select bank1
  7439  1018  00E1               	movwf	clearScreen@numLines^(0+128)
  7440  1019  31A9  21C8  3190   	fcall	_clearScreen
  7441                           
  7442                           ;uart.c: 13: writeVoltages(voltageArr, voltageArrLength, totalVoltage);
  7443  101C  0022               	movlb	2	; select bank2
  7444  101D  0847               	movf	(writeValuesToUart@voltageArrLength+1)^(0+256),w
  7445  101E  0021               	movlb	1	; select bank1
  7446  101F  00E2               	movwf	(writeVoltages@length+1)^(0+128)
  7447  1020  0022               	movlb	2	; select bank2
  7448  1021  0846               	movf	writeValuesToUart@voltageArrLength^(0+256),w
  7449  1022  0021               	movlb	1	; select bank1
  7450  1023  00E1               	movwf	writeVoltages@length^(0+128)
  7451  1024  0022               	movlb	2	; select bank2
  7452  1025  084B               	movf	(writeValuesToUart@totalVoltage+3)^(0+256),w
  7453  1026  0021               	movlb	1	; select bank1
  7454  1027  00E6               	movwf	(writeVoltages@totalVoltage+3)^(0+128)
  7455  1028  0022               	movlb	2	; select bank2
  7456  1029  084A               	movf	(writeValuesToUart@totalVoltage+2)^(0+256),w
  7457  102A  0021               	movlb	1	; select bank1
  7458  102B  00E5               	movwf	(writeVoltages@totalVoltage+2)^(0+128)
  7459  102C  0022               	movlb	2	; select bank2
  7460  102D  0849               	movf	(writeValuesToUart@totalVoltage+1)^(0+256),w
  7461  102E  0021               	movlb	1	; select bank1
  7462  102F  00E4               	movwf	(writeVoltages@totalVoltage+1)^(0+128)
  7463  1030  0022               	movlb	2	; select bank2
  7464  1031  0848               	movf	writeValuesToUart@totalVoltage^(0+256),w
  7465  1032  0021               	movlb	1	; select bank1
  7466  1033  00E3               	movwf	writeVoltages@totalVoltage^(0+128)
  7467  1034  086B               	movf	writeValuesToUart@voltageArr^(0+128),w
  7468  1035  31A6  268E  3190   	fcall	_writeVoltages
  7469                           
  7470                           ;uart.c: 14: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength);
  7471  1038  0022               	movlb	2	; select bank2
  7472  1039  0850               	movf	(writeValuesToUart@temperatureHigh+1)^(0+256),w
  7473  103A  0021               	movlb	1	; select bank1
  7474  103B  00E2               	movwf	(writeTemps@highestTemp+1)^(0+128)
  7475  103C  0022               	movlb	2	; select bank2
  7476  103D  084F               	movf	writeValuesToUart@temperatureHigh^(0+256),w
  7477  103E  0021               	movlb	1	; select bank1
  7478  103F  00E1               	movwf	writeTemps@highestTemp^(0+128)
  7479  1040  0022               	movlb	2	; select bank2
  7480  1041  084E               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+256),w
  7481  1042  0021               	movlb	1	; select bank1
  7482  1043  00E4               	movwf	(writeTemps@numTemps+1)^(0+128)
  7483  1044  0022               	movlb	2	; select bank2
  7484  1045  084D               	movf	writeValuesToUart@temperatureArrLength^(0+256),w
  7485  1046  0021               	movlb	1	; select bank1
  7486  1047  00E3               	movwf	writeTemps@numTemps^(0+128)
  7487  1048  0022               	movlb	2	; select bank2
  7488  1049  084C               	movf	writeValuesToUart@temperatureArr^(0+256),w
  7489  104A  318A  229A  3190   	fcall	_writeTemps
  7490                           
  7491                           ;uart.c: 15: writeCurrent(current);
  7492  104D  0022               	movlb	2	; select bank2
  7493  104E  0854               	movf	(writeValuesToUart@current+3)^(0+256),w
  7494  104F  0021               	movlb	1	; select bank1
  7495  1050  00E4               	movwf	(writeCurrent@current+3)^(0+128)
  7496  1051  0022               	movlb	2	; select bank2
  7497  1052  0853               	movf	(writeValuesToUart@current+2)^(0+256),w
  7498  1053  0021               	movlb	1	; select bank1
  7499  1054  00E3               	movwf	(writeCurrent@current+2)^(0+128)
  7500  1055  0022               	movlb	2	; select bank2
  7501  1056  0852               	movf	(writeValuesToUart@current+1)^(0+256),w
  7502  1057  0021               	movlb	1	; select bank1
  7503  1058  00E2               	movwf	(writeCurrent@current+1)^(0+128)
  7504  1059  0022               	movlb	2	; select bank2
  7505  105A  0851               	movf	writeValuesToUart@current^(0+256),w
  7506  105B  0021               	movlb	1	; select bank1
  7507  105C  00E1               	movwf	writeCurrent@current^(0+128)
  7508  105D  31A0  2001  3190   	fcall	_writeCurrent
  7509                           
  7510                           ;uart.c: 16: writeSOC(soc);
  7511  1060  0022               	movlb	2	; select bank2
  7512  1061  0858               	movf	(writeValuesToUart@soc+3)^(0+256),w
  7513  1062  0021               	movlb	1	; select bank1
  7514  1063  00E4               	movwf	(writeSOC@soc+3)^(0+128)
  7515  1064  0022               	movlb	2	; select bank2
  7516  1065  0857               	movf	(writeValuesToUart@soc+2)^(0+256),w
  7517  1066  0021               	movlb	1	; select bank1
  7518  1067  00E3               	movwf	(writeSOC@soc+2)^(0+128)
  7519  1068  0022               	movlb	2	; select bank2
  7520  1069  0856               	movf	(writeValuesToUart@soc+1)^(0+256),w
  7521  106A  0021               	movlb	1	; select bank1
  7522  106B  00E2               	movwf	(writeSOC@soc+1)^(0+128)
  7523  106C  0022               	movlb	2	; select bank2
  7524  106D  0855               	movf	writeValuesToUart@soc^(0+256),w
  7525  106E  0021               	movlb	1	; select bank1
  7526  106F  00E1               	movwf	writeSOC@soc^(0+128)
  7527  1070  31AA  2284         	fcall	_writeSOC
  7528  1072  0008               	return
  7529  1073                     __end_of_writeValuesToUart:	
  7530                           
  7531                           	psect	text2
  7532  268E                     __ptext2:	
  7533 ;; *************** function _writeVoltages *****************
  7534 ;; Defined at:
  7535 ;;		line 25 in file "uart.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;  volts           1    wreg     PTR float 
  7538 ;;		 -> main@voltages(48), 
  7539 ;;  length          2   65[BANK1 ] int 
  7540 ;;  totalVoltage    4   67[BANK1 ] float 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  volts           1   35[BANK2 ] PTR float 
  7543 ;;		 -> main@voltages(48), 
  7544 ;;  k               2   36[BANK2 ] int 
  7545 ;;  minCell         2   33[BANK2 ] int 
  7546 ;;  maxCell         2   31[BANK2 ] int 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  1    wreg      void 
  7549 ;; Registers used:
  7550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7556 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7557 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7558 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7559 ;;      Totals:         0       0      10      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7560 ;;Total ram usage:       21 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; Hardware stack levels required when called:    6
  7563 ;; This function calls:
  7564 ;;		___fladd
  7565 ;;		___flge
  7566 ;;		___flneg
  7567 ;;		_sprintf
  7568 ;;		_uartEnable
  7569 ;; This function is called by:
  7570 ;;		_writeValuesToUart
  7571 ;; This function uses a non-reentrant model
  7572 ;;
  7573                           
  7574                           
  7575                           ;psect for function _writeVoltages
  7576  268E                     _writeVoltages:	
  7577                           
  7578                           ;incstack = 0
  7579                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7580                           ;writeVoltages@volts stored from wreg
  7581  268E  0022               	movlb	2	; select bank2
  7582  268F  00C3               	movwf	writeVoltages@volts^(0+256)
  7583                           
  7584                           ;uart.c: 26: int maxCell = 0;
  7585  2690  01BF               	clrf	writeVoltages@maxCell^(0+256)
  7586  2691  01C0               	clrf	(writeVoltages@maxCell+1)^(0+256)
  7587                           
  7588                           ;uart.c: 27: int minCell = 0;
  7589  2692  01C1               	clrf	writeVoltages@minCell^(0+256)
  7590  2693  01C2               	clrf	(writeVoltages@minCell+1)^(0+256)
  7591                           
  7592                           ;uart.c: 28: for(int k = 0; k < length; k++){
  7593  2694  01C4               	clrf	writeVoltages@k^(0+256)
  7594  2695  01C5               	clrf	(writeVoltages@k+1)^(0+256)
  7595  2696                     l248:	
  7596  2696  0845               	movf	(writeVoltages@k+1)^(0+256),w
  7597  2697  3A80               	xorlw	128
  7598  2698  0021               	movlb	1	; select bank1
  7599  2699  00E7               	movwf	??_writeVoltages^(0+128)
  7600  269A  0862               	movf	(writeVoltages@length+1)^(0+128),w
  7601  269B  3A80               	xorlw	128
  7602  269C  0267               	subwf	??_writeVoltages^(0+128),w
  7603  269D  1D03               	skipz
  7604  269E  2EA2               	goto	u11795
  7605  269F  0861               	movf	writeVoltages@length^(0+128),w
  7606  26A0  0022               	movlb	2	; select bank2
  7607  26A1  0244               	subwf	writeVoltages@k^(0+256),w
  7608  26A2                     u11795:	
  7609  26A2  1803               	btfsc	3,0
  7610  26A3  2F5A               	goto	l8462
  7611                           
  7612                           ;uart.c: 29: if(volts[k]<volts[minCell]){
  7613  26A4  0022               	movlb	2	; select bank2
  7614  26A5  0844               	movf	writeVoltages@k^(0+256),w
  7615  26A6  0021               	movlb	1	; select bank1
  7616  26A7  00E7               	movwf	??_writeVoltages^(0+128)
  7617  26A8  3001               	movlw	1
  7618  26A9                     u11715:	
  7619  26A9  35E7               	lslf	??_writeVoltages^(0+128),f
  7620  26AA  3EFF               	addlw	-1
  7621  26AB  1D03               	skipz
  7622  26AC  2EA9               	goto	u11715
  7623  26AD  3567               	lslf	??_writeVoltages^(0+128),w
  7624  26AE  0022               	movlb	2	; select bank2
  7625  26AF  0743               	addwf	writeVoltages@volts^(0+256),w
  7626  26B0  0021               	movlb	1	; select bank1
  7627  26B1  00E8               	movwf	(??_writeVoltages+1)^(0+128)
  7628  26B2  0868               	movf	(??_writeVoltages+1)^(0+128),w
  7629  26B3  0086               	movwf	6
  7630  26B4  3002               	movlw	2	; select bank4/5
  7631  26B5  0087               	movwf	7
  7632  26B6  3F40               	moviw [0]fsr1
  7633  26B7  00C1               	movwf	___flge@ff1^(0+128)
  7634  26B8  3F41               	moviw [1]fsr1
  7635  26B9  00C2               	movwf	(___flge@ff1+1)^(0+128)
  7636  26BA  3F42               	moviw [2]fsr1
  7637  26BB  00C3               	movwf	(___flge@ff1+2)^(0+128)
  7638  26BC  3F43               	moviw [3]fsr1
  7639  26BD  00C4               	movwf	(___flge@ff1+3)^(0+128)
  7640  26BE  0022               	movlb	2	; select bank2
  7641  26BF  0841               	movf	writeVoltages@minCell^(0+256),w
  7642  26C0  0021               	movlb	1	; select bank1
  7643  26C1  00E9               	movwf	(??_writeVoltages+2)^(0+128)
  7644  26C2  3001               	movlw	1
  7645  26C3                     u11725:	
  7646  26C3  35E9               	lslf	(??_writeVoltages+2)^(0+128),f
  7647  26C4  3EFF               	addlw	-1
  7648  26C5  1D03               	skipz
  7649  26C6  2EC3               	goto	u11725
  7650  26C7  3569               	lslf	(??_writeVoltages+2)^(0+128),w
  7651  26C8  0022               	movlb	2	; select bank2
  7652  26C9  0743               	addwf	writeVoltages@volts^(0+256),w
  7653  26CA  0021               	movlb	1	; select bank1
  7654  26CB  00EA               	movwf	(??_writeVoltages+3)^(0+128)
  7655  26CC  086A               	movf	(??_writeVoltages+3)^(0+128),w
  7656  26CD  0086               	movwf	6
  7657  26CE  3002               	movlw	2	; select bank4/5
  7658  26CF  0087               	movwf	7
  7659  26D0  3F40               	moviw [0]fsr1
  7660  26D1  00C5               	movwf	___flge@ff2^(0+128)
  7661  26D2  3F41               	moviw [1]fsr1
  7662  26D3  00C6               	movwf	(___flge@ff2+1)^(0+128)
  7663  26D4  3F42               	moviw [2]fsr1
  7664  26D5  00C7               	movwf	(___flge@ff2+2)^(0+128)
  7665  26D6  3F43               	moviw [3]fsr1
  7666  26D7  00C8               	movwf	(___flge@ff2+3)^(0+128)
  7667  26D8  31A0  20B2  31A6   	fcall	___flge
  7668  26DB  1803               	btfsc	3,0
  7669  26DC  2EE3               	goto	l8452
  7670                           
  7671                           ;uart.c: 30: minCell = k;
  7672  26DD  0022               	movlb	2	; select bank2
  7673  26DE  0845               	movf	(writeVoltages@k+1)^(0+256),w
  7674  26DF  00C2               	movwf	(writeVoltages@minCell+1)^(0+256)
  7675  26E0  0844               	movf	writeVoltages@k^(0+256),w
  7676  26E1  00C1               	movwf	writeVoltages@minCell^(0+256)
  7677                           
  7678                           ;uart.c: 31: }else if(volts[k] > volts[maxCell]){
  7679  26E2  2F21               	goto	l8456
  7680  26E3                     l8452:	
  7681  26E3  0022               	movlb	2	; select bank2
  7682  26E4  083F               	movf	writeVoltages@maxCell^(0+256),w
  7683  26E5  0021               	movlb	1	; select bank1
  7684  26E6  00E7               	movwf	??_writeVoltages^(0+128)
  7685  26E7  3001               	movlw	1
  7686  26E8                     u11745:	
  7687  26E8  35E7               	lslf	??_writeVoltages^(0+128),f
  7688  26E9  3EFF               	addlw	-1
  7689  26EA  1D03               	skipz
  7690  26EB  2EE8               	goto	u11745
  7691  26EC  3567               	lslf	??_writeVoltages^(0+128),w
  7692  26ED  0022               	movlb	2	; select bank2
  7693  26EE  0743               	addwf	writeVoltages@volts^(0+256),w
  7694  26EF  0021               	movlb	1	; select bank1
  7695  26F0  00E8               	movwf	(??_writeVoltages+1)^(0+128)
  7696  26F1  0868               	movf	(??_writeVoltages+1)^(0+128),w
  7697  26F2  0086               	movwf	6
  7698  26F3  3002               	movlw	2	; select bank4/5
  7699  26F4  0087               	movwf	7
  7700  26F5  3F40               	moviw [0]fsr1
  7701  26F6  00C1               	movwf	___flge@ff1^(0+128)
  7702  26F7  3F41               	moviw [1]fsr1
  7703  26F8  00C2               	movwf	(___flge@ff1+1)^(0+128)
  7704  26F9  3F42               	moviw [2]fsr1
  7705  26FA  00C3               	movwf	(___flge@ff1+2)^(0+128)
  7706  26FB  3F43               	moviw [3]fsr1
  7707  26FC  00C4               	movwf	(___flge@ff1+3)^(0+128)
  7708  26FD  0022               	movlb	2	; select bank2
  7709  26FE  0844               	movf	writeVoltages@k^(0+256),w
  7710  26FF  0021               	movlb	1	; select bank1
  7711  2700  00E9               	movwf	(??_writeVoltages+2)^(0+128)
  7712  2701  3001               	movlw	1
  7713  2702                     u11755:	
  7714  2702  35E9               	lslf	(??_writeVoltages+2)^(0+128),f
  7715  2703  3EFF               	addlw	-1
  7716  2704  1D03               	skipz
  7717  2705  2F02               	goto	u11755
  7718  2706  3569               	lslf	(??_writeVoltages+2)^(0+128),w
  7719  2707  0022               	movlb	2	; select bank2
  7720  2708  0743               	addwf	writeVoltages@volts^(0+256),w
  7721  2709  0021               	movlb	1	; select bank1
  7722  270A  00EA               	movwf	(??_writeVoltages+3)^(0+128)
  7723  270B  086A               	movf	(??_writeVoltages+3)^(0+128),w
  7724  270C  0086               	movwf	6
  7725  270D  3002               	movlw	2	; select bank4/5
  7726  270E  0087               	movwf	7
  7727  270F  3F40               	moviw [0]fsr1
  7728  2710  00C5               	movwf	___flge@ff2^(0+128)
  7729  2711  3F41               	moviw [1]fsr1
  7730  2712  00C6               	movwf	(___flge@ff2+1)^(0+128)
  7731  2713  3F42               	moviw [2]fsr1
  7732  2714  00C7               	movwf	(___flge@ff2+2)^(0+128)
  7733  2715  3F43               	moviw [3]fsr1
  7734  2716  00C8               	movwf	(___flge@ff2+3)^(0+128)
  7735  2717  31A0  20B2  31A6   	fcall	___flge
  7736  271A  1803               	btfsc	3,0
  7737  271B  2F21               	goto	l8456
  7738                           
  7739                           ;uart.c: 32: maxCell = k;
  7740  271C  0022               	movlb	2	; select bank2
  7741  271D  0845               	movf	(writeVoltages@k+1)^(0+256),w
  7742  271E  00C0               	movwf	(writeVoltages@maxCell+1)^(0+256)
  7743  271F  0844               	movf	writeVoltages@k^(0+256),w
  7744  2720  00BF               	movwf	writeVoltages@maxCell^(0+256)
  7745  2721                     l8456:	
  7746                           
  7747                           ;uart.c: 33: }
  7748                           ;uart.c: 35: sprintf(&str[0], "V%i = %0.4fV\n\r", k+1, volts[k]);
  7749  2721  304D               	movlw	low (STR_2| (0+32768))
  7750  2722  0021               	movlb	1	; select bank1
  7751  2723  00D1               	movwf	sprintf@f^(0+128)
  7752  2724  30B1               	movlw	high (STR_2| (0+32768))
  7753  2725  00D2               	movwf	(sprintf@f^(0+128)+1)
  7754  2726  0022               	movlb	2	; select bank2
  7755  2727  0844               	movf	writeVoltages@k^(0+256),w
  7756  2728  3E01               	addlw	1
  7757  2729  0021               	movlb	1	; select bank1
  7758  272A  00D3               	movwf	(?_sprintf^(0+128)+2)
  7759  272B  3000               	movlw	0
  7760  272C  0022               	movlb	2	; select bank2
  7761  272D  3D45               	addwfc	(writeVoltages@k+1)^(0+256),w
  7762  272E  0021               	movlb	1	; select bank1
  7763  272F  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  7764  2730  0022               	movlb	2	; select bank2
  7765  2731  0844               	movf	writeVoltages@k^(0+256),w
  7766  2732  0021               	movlb	1	; select bank1
  7767  2733  00E7               	movwf	??_writeVoltages^(0+128)
  7768  2734  3001               	movlw	1
  7769  2735                     u11775:	
  7770  2735  35E7               	lslf	??_writeVoltages^(0+128),f
  7771  2736  3EFF               	addlw	-1
  7772  2737  1D03               	skipz
  7773  2738  2F35               	goto	u11775
  7774  2739  3567               	lslf	??_writeVoltages^(0+128),w
  7775  273A  0022               	movlb	2	; select bank2
  7776  273B  0743               	addwf	writeVoltages@volts^(0+256),w
  7777  273C  0021               	movlb	1	; select bank1
  7778  273D  00E8               	movwf	(??_writeVoltages+1)^(0+128)
  7779  273E  0868               	movf	(??_writeVoltages+1)^(0+128),w
  7780  273F  0086               	movwf	6
  7781  2740  3002               	movlw	2	; select bank4/5
  7782  2741  0087               	movwf	7
  7783  2742  3F40               	moviw [0]fsr1
  7784  2743  00D5               	movwf	(?_sprintf^(0+128)+4)
  7785  2744  3F41               	moviw [1]fsr1
  7786  2745  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  7787  2746  3F42               	moviw [2]fsr1
  7788  2747  00D7               	movwf	((?_sprintf+2)^(0+128)+4)
  7789  2748  3F43               	moviw [3]fsr1
  7790  2749  00D8               	movwf	((?_sprintf+3)^(0+128)+4)
  7791  274A  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7792  274B  3180  20B3  31A6   	fcall	_sprintf
  7793                           
  7794                           ;uart.c: 36: uartEnable();
  7795  274E  31B7  27F8  31A6   	fcall	_uartEnable
  7796  2751                     l253:	
  7797                           ;uart.c: 37: while(PIE1bits.TXIE);
  7798                           
  7799  2751  0021               	movlb	1	; select bank1
  7800  2752  1A11               	btfsc	17,4	;volatile
  7801  2753  2F51               	goto	l253
  7802  2754  3001               	movlw	1
  7803  2755  0022               	movlb	2	; select bank2
  7804  2756  07C4               	addwf	writeVoltages@k^(0+256),f
  7805  2757  3000               	movlw	0
  7806  2758  3DC5               	addwfc	(writeVoltages@k+1)^(0+256),f
  7807  2759  2E96               	goto	l248
  7808  275A                     l8462:	
  7809                           
  7810                           ;uart.c: 38: }
  7811                           ;uart.c: 40: sprintf(&str[0], "Pack Voltage: %0.4fV\n\r", totalVoltage);
  7812  275A  3000               	movlw	low (STR_3| (0+32768))
  7813  275B  0021               	movlb	1	; select bank1
  7814  275C  00D1               	movwf	sprintf@f^(0+128)
  7815  275D  30B1               	movlw	high (STR_3| (0+32768))
  7816  275E  00D2               	movwf	(sprintf@f^(0+128)+1)
  7817  275F  0866               	movf	(writeVoltages@totalVoltage+3)^(0+128),w
  7818  2760  00D6               	movwf	((?_sprintf+3)^(0+128)+2)
  7819  2761  0865               	movf	(writeVoltages@totalVoltage+2)^(0+128),w
  7820  2762  00D5               	movwf	((?_sprintf+2)^(0+128)+2)
  7821  2763  0864               	movf	(writeVoltages@totalVoltage+1)^(0+128),w
  7822  2764  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  7823  2765  0863               	movf	writeVoltages@totalVoltage^(0+128),w
  7824  2766  00D3               	movwf	(?_sprintf^(0+128)+2)
  7825  2767  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7826  2768  3180  20B3  31A6   	fcall	_sprintf
  7827                           
  7828                           ;uart.c: 41: uartEnable();
  7829  276B  31B7  27F8  31A6   	fcall	_uartEnable
  7830  276E                     l257:	
  7831                           ;uart.c: 42: while(PIE1bits.TXIE);
  7832                           
  7833  276E  0021               	movlb	1	; select bank1
  7834  276F  1A11               	btfsc	17,4	;volatile
  7835  2770  2F6E               	goto	l257
  7836                           
  7837                           ;uart.c: 44: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7838  2771  0022               	movlb	2	; select bank2
  7839  2772  083F               	movf	writeVoltages@maxCell^(0+256),w
  7840  2773  0021               	movlb	1	; select bank1
  7841  2774  00E7               	movwf	??_writeVoltages^(0+128)
  7842  2775  3001               	movlw	1
  7843  2776                     u11815:	
  7844  2776  35E7               	lslf	??_writeVoltages^(0+128),f
  7845  2777  3EFF               	addlw	-1
  7846  2778  1D03               	skipz
  7847  2779  2F76               	goto	u11815
  7848  277A  3567               	lslf	??_writeVoltages^(0+128),w
  7849  277B  0022               	movlb	2	; select bank2
  7850  277C  0743               	addwf	writeVoltages@volts^(0+256),w
  7851  277D  0021               	movlb	1	; select bank1
  7852  277E  00E8               	movwf	(??_writeVoltages+1)^(0+128)
  7853  277F  0868               	movf	(??_writeVoltages+1)^(0+128),w
  7854  2780  0086               	movwf	6
  7855  2781  3002               	movlw	2	; select bank4/5
  7856  2782  0087               	movwf	7
  7857  2783  3F40               	moviw [0]fsr1
  7858  2784  00A9               	movwf	___fladd@b^(0+128)
  7859  2785  3F41               	moviw [1]fsr1
  7860  2786  00AA               	movwf	(___fladd@b+1)^(0+128)
  7861  2787  3F42               	moviw [2]fsr1
  7862  2788  00AB               	movwf	(___fladd@b+2)^(0+128)
  7863  2789  3F43               	moviw [3]fsr1
  7864  278A  00AC               	movwf	(___fladd@b+3)^(0+128)
  7865  278B  0022               	movlb	2	; select bank2
  7866  278C  0841               	movf	writeVoltages@minCell^(0+256),w
  7867  278D  0021               	movlb	1	; select bank1
  7868  278E  00E9               	movwf	(??_writeVoltages+2)^(0+128)
  7869  278F  3001               	movlw	1
  7870  2790                     u11825:	
  7871  2790  35E9               	lslf	(??_writeVoltages+2)^(0+128),f
  7872  2791  3EFF               	addlw	-1
  7873  2792  1D03               	skipz
  7874  2793  2F90               	goto	u11825
  7875  2794  3569               	lslf	(??_writeVoltages+2)^(0+128),w
  7876  2795  0022               	movlb	2	; select bank2
  7877  2796  0743               	addwf	writeVoltages@volts^(0+256),w
  7878  2797  0021               	movlb	1	; select bank1
  7879  2798  00EA               	movwf	(??_writeVoltages+3)^(0+128)
  7880  2799  086A               	movf	(??_writeVoltages+3)^(0+128),w
  7881  279A  0086               	movwf	6
  7882  279B  3002               	movlw	2	; select bank4/5
  7883  279C  0087               	movwf	7
  7884  279D  3F40               	moviw [0]fsr1
  7885  279E  0020               	movlb	0	; select bank0
  7886  279F  00EC               	movwf	___flneg@f1
  7887  27A0  3F41               	moviw [1]fsr1
  7888  27A1  00ED               	movwf	___flneg@f1+1
  7889  27A2  3F42               	moviw [2]fsr1
  7890  27A3  00EE               	movwf	___flneg@f1+2
  7891  27A4  3F43               	moviw [3]fsr1
  7892  27A5  00EF               	movwf	___flneg@f1+3
  7893  27A6  319C  2400  31A6   	fcall	___flneg
  7894  27A9  0020               	movlb	0	; select bank0
  7895  27AA  086F               	movf	?___flneg+3,w
  7896  27AB  0021               	movlb	1	; select bank1
  7897  27AC  00B0               	movwf	(___fladd@a+3)^(0+128)
  7898  27AD  0020               	movlb	0	; select bank0
  7899  27AE  086E               	movf	?___flneg+2,w
  7900  27AF  0021               	movlb	1	; select bank1
  7901  27B0  00AF               	movwf	(___fladd@a+2)^(0+128)
  7902  27B1  0020               	movlb	0	; select bank0
  7903  27B2  086D               	movf	?___flneg+1,w
  7904  27B3  0021               	movlb	1	; select bank1
  7905  27B4  00AE               	movwf	(___fladd@a+1)^(0+128)
  7906  27B5  0020               	movlb	0	; select bank0
  7907  27B6  086C               	movf	?___flneg,w
  7908  27B7  0021               	movlb	1	; select bank1
  7909  27B8  00AD               	movwf	___fladd@a^(0+128)
  7910  27B9  3193  23D8  31A6   	fcall	___fladd
  7911  27BC  0021               	movlb	1	; select bank1
  7912  27BD  082C               	movf	(?___fladd+3)^(0+128),w
  7913  27BE  0022               	movlb	2	; select bank2
  7914  27BF  00BE               	movwf	(_writeVoltages$2186+3)^(0+256)
  7915  27C0  0021               	movlb	1	; select bank1
  7916  27C1  082B               	movf	(?___fladd+2)^(0+128),w
  7917  27C2  0022               	movlb	2	; select bank2
  7918  27C3  00BD               	movwf	(_writeVoltages$2186+2)^(0+256)
  7919  27C4  0021               	movlb	1	; select bank1
  7920  27C5  082A               	movf	(?___fladd+1)^(0+128),w
  7921  27C6  0022               	movlb	2	; select bank2
  7922  27C7  00BC               	movwf	(_writeVoltages$2186+1)^(0+256)
  7923  27C8  0021               	movlb	1	; select bank1
  7924  27C9  0829               	movf	?___fladd^(0+128),w
  7925  27CA  0022               	movlb	2	; select bank2
  7926  27CB  00BB               	movwf	_writeVoltages$2186^(0+256)
  7927                           
  7928                           ;uart.c: 44: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7929  27CC  30C3               	movlw	low (STR_4| (0+32768))
  7930  27CD  0021               	movlb	1	; select bank1
  7931  27CE  00D1               	movwf	sprintf@f^(0+128)
  7932  27CF  30B0               	movlw	high (STR_4| (0+32768))
  7933  27D0  00D2               	movwf	(sprintf@f^(0+128)+1)
  7934  27D1  0022               	movlb	2	; select bank2
  7935  27D2  0841               	movf	writeVoltages@minCell^(0+256),w
  7936  27D3  3E01               	addlw	1
  7937  27D4  0021               	movlb	1	; select bank1
  7938  27D5  00D3               	movwf	(?_sprintf^(0+128)+2)
  7939  27D6  3000               	movlw	0
  7940  27D7  0022               	movlb	2	; select bank2
  7941  27D8  3D42               	addwfc	(writeVoltages@minCell+1)^(0+256),w
  7942  27D9  0021               	movlb	1	; select bank1
  7943  27DA  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  7944  27DB  0022               	movlb	2	; select bank2
  7945  27DC  083F               	movf	writeVoltages@maxCell^(0+256),w
  7946  27DD  3E01               	addlw	1
  7947  27DE  0021               	movlb	1	; select bank1
  7948  27DF  00D5               	movwf	(?_sprintf^(0+128)+4)
  7949  27E0  3000               	movlw	0
  7950  27E1  0022               	movlb	2	; select bank2
  7951  27E2  3D40               	addwfc	(writeVoltages@maxCell+1)^(0+256),w
  7952  27E3  0021               	movlb	1	; select bank1
  7953  27E4  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  7954  27E5  0022               	movlb	2	; select bank2
  7955  27E6  083E               	movf	(_writeVoltages$2186+3)^(0+256),w
  7956  27E7  0021               	movlb	1	; select bank1
  7957  27E8  00DA               	movwf	((?_sprintf+3)^(0+128)+6)
  7958  27E9  0022               	movlb	2	; select bank2
  7959  27EA  083D               	movf	(_writeVoltages$2186+2)^(0+256),w
  7960  27EB  0021               	movlb	1	; select bank1
  7961  27EC  00D9               	movwf	((?_sprintf+2)^(0+128)+6)
  7962  27ED  0022               	movlb	2	; select bank2
  7963  27EE  083C               	movf	(_writeVoltages$2186+1)^(0+256),w
  7964  27EF  0021               	movlb	1	; select bank1
  7965  27F0  00D8               	movwf	((?_sprintf+1)^(0+128)+6)
  7966  27F1  0022               	movlb	2	; select bank2
  7967  27F2  083B               	movf	_writeVoltages$2186^(0+256),w
  7968  27F3  0021               	movlb	1	; select bank1
  7969  27F4  00D7               	movwf	(?_sprintf^(0+128)+6)
  7970  27F5  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7971  27F6  3180  20B3  31A6   	fcall	_sprintf
  7972                           
  7973                           ;uart.c: 45: uartEnable();
  7974  27F9  31B7  27F8  31A6   	fcall	_uartEnable
  7975  27FC                     l260:	
  7976                           ;uart.c: 46: while(PIE1bits.TXIE);
  7977                           
  7978  27FC  0021               	movlb	1	; select bank1
  7979  27FD  1E11               	btfss	17,4	;volatile
  7980  27FE  0008               	return
  7981  27FF  2FFC               	goto	l260
  7982  2800                     __end_of_writeVoltages:	
  7983                           
  7984                           	psect	text3
  7985  0A9A                     __ptext3:	
  7986 ;; *************** function _writeTemps *****************
  7987 ;; Defined at:
  7988 ;;		line 55 in file "uart.c"
  7989 ;; Parameters:    Size  Location     Type
  7990 ;;  temps           1    wreg     PTR int 
  7991 ;;		 -> main@temps(10), 
  7992 ;;  highestTemp     2   65[BANK1 ] int 
  7993 ;;  numTemps        2   67[BANK1 ] int 
  7994 ;; Auto vars:     Size  Location     Type
  7995 ;;  temps           1   70[BANK1 ] PTR int 
  7996 ;;		 -> main@temps(10), 
  7997 ;;  k               2   71[BANK1 ] int 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8007 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8008 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8009 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8010 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8011 ;;Total ram usage:        8 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    6
  8014 ;; This function calls:
  8015 ;;		_sprintf
  8016 ;;		_uartEnable
  8017 ;; This function is called by:
  8018 ;;		_writeValuesToUart
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           
  8023                           ;psect for function _writeTemps
  8024  0A9A                     _writeTemps:	
  8025                           
  8026                           ;incstack = 0
  8027                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8028                           ;writeTemps@temps stored from wreg
  8029  0A9A  0021               	movlb	1	; select bank1
  8030  0A9B  00E6               	movwf	writeTemps@temps^(0+128)
  8031                           
  8032                           ;uart.c: 56: for(int k = 0; k<numTemps; k++){
  8033  0A9C  01E7               	clrf	writeTemps@k^(0+128)
  8034  0A9D  01E8               	clrf	(writeTemps@k+1)^(0+128)
  8035  0A9E                     l272:	
  8036  0A9E  0868               	movf	(writeTemps@k+1)^(0+128),w
  8037  0A9F  3A80               	xorlw	128
  8038  0AA0  00E5               	movwf	??_writeTemps^(0+128)
  8039  0AA1  0864               	movf	(writeTemps@numTemps+1)^(0+128),w
  8040  0AA2  3A80               	xorlw	128
  8041  0AA3  0265               	subwf	??_writeTemps^(0+128),w
  8042  0AA4  1D03               	skipz
  8043  0AA5  2AA8               	goto	u11855
  8044  0AA6  0863               	movf	writeTemps@numTemps^(0+128),w
  8045  0AA7  0267               	subwf	writeTemps@k^(0+128),w
  8046  0AA8                     u11855:	
  8047  0AA8  1803               	btfsc	3,0
  8048  0AA9  2AD1               	goto	l8480
  8049                           
  8050                           ;uart.c: 57: sprintf(&str[n], "Temp%i = %iC\n\r", k+1, temps[k]);
  8051  0AAA  303E               	movlw	low (STR_6| (0+32768))
  8052  0AAB  0021               	movlb	1	; select bank1
  8053  0AAC  00D1               	movwf	sprintf@f^(0+128)
  8054  0AAD  30B1               	movlw	high (STR_6| (0+32768))
  8055  0AAE  00D2               	movwf	(sprintf@f^(0+128)+1)
  8056  0AAF  0867               	movf	writeTemps@k^(0+128),w
  8057  0AB0  3E01               	addlw	1
  8058  0AB1  00D3               	movwf	(?_sprintf^(0+128)+2)
  8059  0AB2  3000               	movlw	0
  8060  0AB3  3D68               	addwfc	(writeTemps@k+1)^(0+128),w
  8061  0AB4  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  8062  0AB5  3567               	lslf	writeTemps@k^(0+128),w
  8063  0AB6  0766               	addwf	writeTemps@temps^(0+128),w
  8064  0AB7  00E5               	movwf	??_writeTemps^(0+128)
  8065  0AB8  0865               	movf	??_writeTemps^(0+128),w
  8066  0AB9  0086               	movwf	6
  8067  0ABA  3002               	movlw	2	; select bank4/5
  8068  0ABB  0087               	movwf	7
  8069  0ABC  3F40               	moviw [0]fsr1
  8070  0ABD  00D5               	movwf	(?_sprintf^(0+128)+4)
  8071  0ABE  3F41               	moviw [1]fsr1
  8072  0ABF  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8073  0AC0  0022               	movlb	2	; select bank2
  8074  0AC1  0861               	movf	_n^(0+256),w
  8075  0AC2  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
  8076  0AC3  3180  20B3  318A   	fcall	_sprintf
  8077                           
  8078                           ;uart.c: 58: uartEnable();
  8079  0AC6  31B7  27F8  318A   	fcall	_uartEnable
  8080  0AC9                     l274:	
  8081                           ;uart.c: 59: while(PIE1bits.TXIE);
  8082                           
  8083  0AC9  0021               	movlb	1	; select bank1
  8084  0ACA  1A11               	btfsc	17,4	;volatile
  8085  0ACB  2AC9               	goto	l274
  8086  0ACC  3001               	movlw	1
  8087  0ACD  07E7               	addwf	writeTemps@k^(0+128),f
  8088  0ACE  3000               	movlw	0
  8089  0ACF  3DE8               	addwfc	(writeTemps@k+1)^(0+128),f
  8090  0AD0  2A9E               	goto	l272
  8091  0AD1                     l8480:	
  8092                           
  8093                           ;uart.c: 60: }
  8094                           ;uart.c: 63: sprintf(&str[0], "Highest Temp: %iC\n\r", highestTemp);
  8095  0AD1  3017               	movlw	low (STR_7| (0+32768))
  8096  0AD2  0021               	movlb	1	; select bank1
  8097  0AD3  00D1               	movwf	sprintf@f^(0+128)
  8098  0AD4  30B1               	movlw	high (STR_7| (0+32768))
  8099  0AD5  00D2               	movwf	(sprintf@f^(0+128)+1)
  8100  0AD6  0862               	movf	(writeTemps@highestTemp+1)^(0+128),w
  8101  0AD7  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  8102  0AD8  0861               	movf	writeTemps@highestTemp^(0+128),w
  8103  0AD9  00D3               	movwf	(?_sprintf^(0+128)+2)
  8104  0ADA  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  8105  0ADB  3180  20B3  318A   	fcall	_sprintf
  8106                           
  8107                           ;uart.c: 64: uartEnable();
  8108  0ADE  31B7  27F8  318A   	fcall	_uartEnable
  8109  0AE1                     l278:	
  8110                           ;uart.c: 65: while(PIE1bits.TXIE);
  8111                           
  8112  0AE1  0021               	movlb	1	; select bank1
  8113  0AE2  1E11               	btfss	17,4	;volatile
  8114  0AE3  0008               	return
  8115  0AE4  2AE1               	goto	l278
  8116  0AE5                     __end_of_writeTemps:	
  8117                           
  8118                           	psect	text4
  8119  2A84                     __ptext4:	
  8120 ;; *************** function _writeSOC *****************
  8121 ;; Defined at:
  8122 ;;		line 19 in file "uart.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  soc             4   65[BANK1 ] float 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      void 
  8129 ;; Registers used:
  8130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8136 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8137 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8139 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8140 ;;Total ram usage:        8 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    6
  8143 ;; This function calls:
  8144 ;;		___flmul
  8145 ;;		_sprintf
  8146 ;;		_uartEnable
  8147 ;; This function is called by:
  8148 ;;		_writeValuesToUart
  8149 ;; This function uses a non-reentrant model
  8150 ;;
  8151                           
  8152                           
  8153                           ;psect for function _writeSOC
  8154  2A84                     _writeSOC:	
  8155                           
  8156                           ;uart.c: 20: sprintf(&str[0], "SOC = %0.4f percent \n\r", (soc*100));
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in _writeSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8160  2A84  3042               	movlw	66
  8161  2A85  0020               	movlb	0	; select bank0
  8162  2A86  00BB               	movwf	___flmul@b+3
  8163  2A87  30C8               	movlw	200
  8164  2A88  00BA               	movwf	___flmul@b+2
  8165  2A89  3000               	movlw	0
  8166  2A8A  00B9               	movwf	___flmul@b+1
  8167  2A8B  3000               	movlw	0
  8168  2A8C  00B8               	movwf	___flmul@b
  8169  2A8D  0021               	movlb	1	; select bank1
  8170  2A8E  0864               	movf	(writeSOC@soc+3)^(0+128),w
  8171  2A8F  0020               	movlb	0	; select bank0
  8172  2A90  00BF               	movwf	___flmul@a+3
  8173  2A91  0021               	movlb	1	; select bank1
  8174  2A92  0863               	movf	(writeSOC@soc+2)^(0+128),w
  8175  2A93  0020               	movlb	0	; select bank0
  8176  2A94  00BE               	movwf	___flmul@a+2
  8177  2A95  0021               	movlb	1	; select bank1
  8178  2A96  0862               	movf	(writeSOC@soc+1)^(0+128),w
  8179  2A97  0020               	movlb	0	; select bank0
  8180  2A98  00BD               	movwf	___flmul@a+1
  8181  2A99  0021               	movlb	1	; select bank1
  8182  2A9A  0861               	movf	writeSOC@soc^(0+128),w
  8183  2A9B  0020               	movlb	0	; select bank0
  8184  2A9C  00BC               	movwf	___flmul@a
  8185  2A9D  3195  25D4  31AA   	fcall	___flmul
  8186  2AA0  0020               	movlb	0	; select bank0
  8187  2AA1  083B               	movf	?___flmul+3,w
  8188  2AA2  0021               	movlb	1	; select bank1
  8189  2AA3  00E8               	movwf	(_writeSOC$2185+3)^(0+128)
  8190  2AA4  0020               	movlb	0	; select bank0
  8191  2AA5  083A               	movf	?___flmul+2,w
  8192  2AA6  0021               	movlb	1	; select bank1
  8193  2AA7  00E7               	movwf	(_writeSOC$2185+2)^(0+128)
  8194  2AA8  0020               	movlb	0	; select bank0
  8195  2AA9  0839               	movf	?___flmul+1,w
  8196  2AAA  0021               	movlb	1	; select bank1
  8197  2AAB  00E6               	movwf	(_writeSOC$2185+1)^(0+128)
  8198  2AAC  0020               	movlb	0	; select bank0
  8199  2AAD  0838               	movf	?___flmul,w
  8200  2AAE  0021               	movlb	1	; select bank1
  8201  2AAF  00E5               	movwf	_writeSOC$2185^(0+128)
  8202                           
  8203                           ;uart.c: 20: sprintf(&str[0], "SOC = %0.4f percent \n\r", (soc*100));
  8204  2AB0  30E9               	movlw	low (STR_1| (0+32768))
  8205  2AB1  00D1               	movwf	sprintf@f^(0+128)
  8206  2AB2  30B0               	movlw	high (STR_1| (0+32768))
  8207  2AB3  00D2               	movwf	(sprintf@f^(0+128)+1)
  8208  2AB4  0868               	movf	(_writeSOC$2185+3)^(0+128),w
  8209  2AB5  00D6               	movwf	((?_sprintf+3)^(0+128)+2)
  8210  2AB6  0867               	movf	(_writeSOC$2185+2)^(0+128),w
  8211  2AB7  00D5               	movwf	((?_sprintf+2)^(0+128)+2)
  8212  2AB8  0866               	movf	(_writeSOC$2185+1)^(0+128),w
  8213  2AB9  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  8214  2ABA  0865               	movf	_writeSOC$2185^(0+128),w
  8215  2ABB  00D3               	movwf	(?_sprintf^(0+128)+2)
  8216  2ABC  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  8217  2ABD  3180  20B3  31AA   	fcall	_sprintf
  8218                           
  8219                           ;uart.c: 21: uartEnable();
  8220  2AC0  31B7  27F8  31AA   	fcall	_uartEnable
  8221  2AC3                     l242:	
  8222                           ;uart.c: 22: while(PIE1bits.TXIE);
  8223                           
  8224  2AC3  0021               	movlb	1	; select bank1
  8225  2AC4  1E11               	btfss	17,4	;volatile
  8226  2AC5  0008               	return
  8227  2AC6  2AC3               	goto	l242
  8228  2AC7                     __end_of_writeSOC:	
  8229                           
  8230                           	psect	text5
  8231  2001                     __ptext5:	
  8232 ;; *************** function _writeCurrent *****************
  8233 ;; Defined at:
  8234 ;;		line 50 in file "uart.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  current         4   65[BANK1 ] float 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  1    wreg      void 
  8241 ;; Registers used:
  8242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8248 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8251 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8252 ;;Total ram usage:        4 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    6
  8255 ;; This function calls:
  8256 ;;		_sprintf
  8257 ;;		_uartEnable
  8258 ;; This function is called by:
  8259 ;;		_writeValuesToUart
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function _writeCurrent
  8265  2001                     _writeCurrent:	
  8266                           
  8267                           ;uart.c: 51: sprintf(&str[0], "current = %0.4fA\n\r", current);
  8268                           
  8269                           ;incstack = 0
  8270                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8271  2001  302B               	movlw	low (STR_5| (0+32768))
  8272  2002  0021               	movlb	1	; select bank1
  8273  2003  00D1               	movwf	sprintf@f^(0+128)
  8274  2004  30B1               	movlw	high (STR_5| (0+32768))
  8275  2005  00D2               	movwf	(sprintf@f^(0+128)+1)
  8276  2006  0864               	movf	(writeCurrent@current+3)^(0+128),w
  8277  2007  00D6               	movwf	((?_sprintf+3)^(0+128)+2)
  8278  2008  0863               	movf	(writeCurrent@current+2)^(0+128),w
  8279  2009  00D5               	movwf	((?_sprintf+2)^(0+128)+2)
  8280  200A  0862               	movf	(writeCurrent@current+1)^(0+128),w
  8281  200B  00D4               	movwf	((?_sprintf+1)^(0+128)+2)
  8282  200C  0861               	movf	writeCurrent@current^(0+128),w
  8283  200D  00D3               	movwf	(?_sprintf^(0+128)+2)
  8284  200E  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  8285  200F  3180  20B3  31A0   	fcall	_sprintf
  8286                           
  8287                           ;uart.c: 52: uartEnable();
  8288  2012  31B7  27F8  31A0   	fcall	_uartEnable
  8289  2015                     l266:	
  8290                           ;uart.c: 53: while(PIE1bits.TXIE);
  8291                           
  8292  2015  0021               	movlb	1	; select bank1
  8293  2016  1E11               	btfss	17,4	;volatile
  8294  2017  0008               	return
  8295  2018  2815               	goto	l266
  8296  2019                     __end_of_writeCurrent:	
  8297                           
  8298                           	psect	text6
  8299  29C8                     __ptext6:	
  8300 ;; *************** function _clearScreen *****************
  8301 ;; Defined at:
  8302 ;;		line 68 in file "uart.c"
  8303 ;; Parameters:    Size  Location     Type
  8304 ;;  numLines        2   65[BANK1 ] int 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;  j               2   70[BANK1 ] int 
  8307 ;; Return value:  Size  Location     Type
  8308 ;;                  1    wreg      void 
  8309 ;; Registers used:
  8310 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8311 ;; Tracked objects:
  8312 ;;		On entry : 0/0
  8313 ;;		On exit  : 0/0
  8314 ;;		Unchanged: 0/0
  8315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8316 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8317 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8318 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8319 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8320 ;;Total ram usage:        7 bytes
  8321 ;; Hardware stack levels used:    1
  8322 ;; Hardware stack levels required when called:    6
  8323 ;; This function calls:
  8324 ;;		_sprintf
  8325 ;;		_uartEnable
  8326 ;; This function is called by:
  8327 ;;		_writeValuesToUart
  8328 ;; This function uses a non-reentrant model
  8329 ;;
  8330                           
  8331                           
  8332                           ;psect for function _clearScreen
  8333  29C8                     _clearScreen:	
  8334                           
  8335                           ;uart.c: 69: int j = 0;
  8336                           
  8337                           ;incstack = 0
  8338                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8339  29C8  0021               	movlb	1	; select bank1
  8340  29C9  01E6               	clrf	clearScreen@j^(0+128)
  8341  29CA  01E7               	clrf	(clearScreen@j+1)^(0+128)
  8342                           
  8343                           ;uart.c: 71: for(j = 0; j < numLines-1; j++){
  8344  29CB  01E6               	clrf	clearScreen@j^(0+128)
  8345  29CC  01E7               	clrf	(clearScreen@j+1)^(0+128)
  8346  29CD                     l8440:	
  8347  29CD  0861               	movf	clearScreen@numLines^(0+128),w
  8348  29CE  3EFF               	addlw	255
  8349  29CF  00E3               	movwf	??_clearScreen^(0+128)
  8350  29D0  30FF               	movlw	255
  8351  29D1  3D62               	addwfc	(clearScreen@numLines+1)^(0+128),w
  8352  29D2  00E4               	movwf	(??_clearScreen+1)^(0+128)
  8353  29D3  0867               	movf	(clearScreen@j+1)^(0+128),w
  8354  29D4  3A80               	xorlw	128
  8355  29D5  00E5               	movwf	(??_clearScreen+2)^(0+128)
  8356  29D6  0864               	movf	(??_clearScreen+1)^(0+128),w
  8357  29D7  3A80               	xorlw	128
  8358  29D8  0265               	subwf	(??_clearScreen+2)^(0+128),w
  8359  29D9  1D03               	skipz
  8360  29DA  29DD               	goto	u11695
  8361  29DB  0863               	movf	??_clearScreen^(0+128),w
  8362  29DC  0266               	subwf	clearScreen@j^(0+128),w
  8363  29DD                     u11695:	
  8364  29DD  1803               	btfsc	3,0
  8365  29DE  29F3               	goto	l8442
  8366                           
  8367                           ;uart.c: 72: sprintf(&str[0], "\33[2K \033[A");
  8368  29DF  3067               	movlw	low (STR_8| (0+32768))
  8369  29E0  0021               	movlb	1	; select bank1
  8370  29E1  00D1               	movwf	sprintf@f^(0+128)
  8371  29E2  30B1               	movlw	high (STR_8| (0+32768))
  8372  29E3  00D2               	movwf	(sprintf@f^(0+128)+1)
  8373  29E4  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  8374  29E5  3180  20B3  31A9   	fcall	_sprintf
  8375                           
  8376                           ;uart.c: 73: uartEnable();
  8377  29E8  31B7  27F8  31A9   	fcall	_uartEnable
  8378  29EB                     l286:	
  8379                           ;uart.c: 74: while(PIE1bits.TXIE);
  8380                           
  8381  29EB  0021               	movlb	1	; select bank1
  8382  29EC  1A11               	btfsc	17,4	;volatile
  8383  29ED  29EB               	goto	l286
  8384  29EE  3001               	movlw	1
  8385  29EF  07E6               	addwf	clearScreen@j^(0+128),f
  8386  29F0  3000               	movlw	0
  8387  29F1  3DE7               	addwfc	(clearScreen@j+1)^(0+128),f
  8388  29F2  29CD               	goto	l8440
  8389  29F3                     l8442:	
  8390                           
  8391                           ;uart.c: 75: }
  8392                           ;uart.c: 77: sprintf(&str[0], "\33[2K \033[A \r");
  8393  29F3  305C               	movlw	low (STR_9| (0+32768))
  8394  29F4  0021               	movlb	1	; select bank1
  8395  29F5  00D1               	movwf	sprintf@f^(0+128)
  8396  29F6  30B1               	movlw	high (STR_9| (0+32768))
  8397  29F7  00D2               	movwf	(sprintf@f^(0+128)+1)
  8398  29F8  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  8399  29F9  3180  20B3  31A9   	fcall	_sprintf
  8400                           
  8401                           ;uart.c: 78: uartEnable();
  8402  29FC  31B7  27F8  31A9   	fcall	_uartEnable
  8403  29FF                     l290:	
  8404                           ;uart.c: 79: while(PIE1bits.TXIE);
  8405                           
  8406  29FF  0021               	movlb	1	; select bank1
  8407  2A00  1E11               	btfss	17,4	;volatile
  8408  2A01  0008               	return
  8409  2A02  29FF               	goto	l290
  8410  2A03                     __end_of_clearScreen:	
  8411                           
  8412                           	psect	text7
  8413  37F8                     __ptext7:	
  8414 ;; *************** function _uartEnable *****************
  8415 ;; Defined at:
  8416 ;;		line 82 in file "uart.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;		None
  8419 ;; Auto vars:     Size  Location     Type
  8420 ;;		None
  8421 ;; Return value:  Size  Location     Type
  8422 ;;                  1    wreg      void 
  8423 ;; Registers used:
  8424 ;;		None
  8425 ;; Tracked objects:
  8426 ;;		On entry : 0/0
  8427 ;;		On exit  : 0/0
  8428 ;;		Unchanged: 0/0
  8429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8434 ;;Total ram usage:        0 bytes
  8435 ;; Hardware stack levels used:    1
  8436 ;; Hardware stack levels required when called:    2
  8437 ;; This function calls:
  8438 ;;		Nothing
  8439 ;; This function is called by:
  8440 ;;		_writeSOC
  8441 ;;		_writeVoltages
  8442 ;;		_writeCurrent
  8443 ;;		_writeTemps
  8444 ;;		_clearScreen
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           
  8449                           ;psect for function _uartEnable
  8450  37F8                     _uartEnable:	
  8451                           
  8452                           ;uart.c: 83: PIE1bits.TXIE = 1;
  8453                           
  8454                           ;incstack = 0
  8455                           ; Regs used in _uartEnable: []
  8456  37F8  0021               	movlb	1	; select bank1
  8457  37F9  1611               	bsf	17,4	;volatile
  8458  37FA  0008               	return
  8459  37FB                     __end_of_uartEnable:	
  8460                           
  8461                           	psect	text8
  8462  00B3                     __ptext8:	
  8463 ;; *************** function _sprintf *****************
  8464 ;; Defined at:
  8465 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8466 ;; Parameters:    Size  Location     Type
  8467 ;;  sp              1    wreg     PTR unsigned char 
  8468 ;;		 -> str(50), 
  8469 ;;  f               2   49[BANK1 ] PTR const unsigned char 
  8470 ;;		 -> STR_9(11), STR_8(9), STR_7(20), STR_6(15), 
  8471 ;;		 -> STR_5(19), STR_4(38), STR_3(23), STR_2(15), 
  8472 ;;		 -> STR_1(23), 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  sp              1   25[BANK2 ] PTR unsigned char 
  8475 ;;		 -> str(50), 
  8476 ;;  fval            4   19[BANK2 ] PTR unsigned char 
  8477 ;;  val             4    9[BANK2 ] unsigned long 
  8478 ;;  tmpval          4    5[BANK2 ] struct .
  8479 ;;  prec            2   23[BANK2 ] int 
  8480 ;;  width           2   17[BANK2 ] int 
  8481 ;;  flag            2   15[BANK2 ] unsigned short 
  8482 ;;  exp             2   13[BANK2 ] int 
  8483 ;;  cp              2    0        PTR const unsigned char 
  8484 ;;  len             2    0        unsigned int 
  8485 ;;  c               1   26[BANK2 ] char 
  8486 ;;  ap              1    4[BANK2 ] PTR void [1]
  8487 ;;		 -> ?_sprintf(2), 
  8488 ;;  d               1    0        unsigned char 
  8489 ;; Return value:  Size  Location     Type
  8490 ;;                  2   49[BANK1 ] int 
  8491 ;; Registers used:
  8492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8493 ;; Tracked objects:
  8494 ;;		On entry : 0/0
  8495 ;;		On exit  : 0/0
  8496 ;;		Unchanged: 0/0
  8497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8498 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8499 ;;      Locals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8500 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8501 ;;      Totals:         0       0      16      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8502 ;;Total ram usage:       43 bytes
  8503 ;; Hardware stack levels used:    1
  8504 ;; Hardware stack levels required when called:    5
  8505 ;; This function calls:
  8506 ;;		___awdiv
  8507 ;;		___fladd
  8508 ;;		___flge
  8509 ;;		___flmul
  8510 ;;		___flneg
  8511 ;;		___flsub
  8512 ;;		___fltol
  8513 ;;		___lldiv
  8514 ;;		___llmod
  8515 ;;		___wmul
  8516 ;;		___xxtofl
  8517 ;;		__div_to_l_
  8518 ;;		__tdiv_to_l_
  8519 ;;		_fround
  8520 ;;		_isdigit
  8521 ;;		_scale
  8522 ;; This function is called by:
  8523 ;;		_writeSOC
  8524 ;;		_writeVoltages
  8525 ;;		_writeCurrent
  8526 ;;		_writeTemps
  8527 ;;		_clearScreen
  8528 ;; This function uses a non-reentrant model
  8529 ;;
  8530                           
  8531                           
  8532                           ;psect for function _sprintf
  8533  00B3                     _sprintf:	
  8534                           
  8535                           ;incstack = 0
  8536                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8537                           ;sprintf@sp stored from wreg
  8538  00B3  0022               	movlb	2	; select bank2
  8539  00B4  00B9               	movwf	sprintf@sp^(0+256)
  8540                           
  8541                           ;doprnt.c: 494: va_list ap;
  8542                           ;doprnt.c: 499: signed char c;
  8543                           ;doprnt.c: 501: int width;
  8544                           ;doprnt.c: 504: int prec;
  8545                           ;doprnt.c: 508: unsigned short flag;
  8546                           ;doprnt.c: 515: char d;
  8547                           ;doprnt.c: 516: double fval;
  8548                           ;doprnt.c: 517: int exp;
  8549                           ;doprnt.c: 523: union {
  8550                           ;doprnt.c: 524: unsigned long vd;
  8551                           ;doprnt.c: 525: double integ;
  8552                           ;doprnt.c: 526: } tmpval;
  8553                           ;doprnt.c: 528: unsigned long val;
  8554                           ;doprnt.c: 529: unsigned len;
  8555                           ;doprnt.c: 530: const char * cp;
  8556                           ;doprnt.c: 533: *ap = __va_start();
  8557  00B5  30D3               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8558  00B6  0021               	movlb	1	; select bank1
  8559  00B7  00DB               	movwf	??_sprintf^(0+128)
  8560  00B8  085B               	movf	??_sprintf^(0+128),w
  8561  00B9  0022               	movlb	2	; select bank2
  8562  00BA  00A4               	movwf	sprintf@ap^(0+256)
  8563  00BB                     l8210:	
  8564                           ;doprnt.c: 536: while(c = *f++) {
  8565                           
  8566  00BB  0021               	movlb	1	; select bank1
  8567  00BC  0852               	movf	(sprintf@f+1)^(0+128),w
  8568  00BD  00DC               	movwf	(??_sprintf^(0+128)+1)
  8569  00BE  0851               	movf	sprintf@f^(0+128),w
  8570  00BF  00DB               	movwf	??_sprintf^(0+128)
  8571  00C0  0AD1               	incf	sprintf@f^(0+128),f
  8572  00C1  1903               	skipnz
  8573  00C2  0AD2               	incf	(sprintf@f+1)^(0+128),f
  8574  00C3  085B               	movf	??_sprintf^(0+128),w
  8575  00C4  0084               	movwf	4
  8576  00C5  085C               	movf	(??_sprintf+1)^(0+128),w
  8577  00C6  0085               	movwf	5
  8578  00C7  0800               	movf	0,w	;code access
  8579  00C8  00DD               	movwf	(??_sprintf+2)^(0+128)
  8580  00C9  085D               	movf	(??_sprintf+2)^(0+128),w
  8581  00CA  0022               	movlb	2	; select bank2
  8582  00CB  00BA               	movwf	sprintf@c^(0+256)
  8583  00CC  083A               	movf	sprintf@c^(0+256),w
  8584  00CD  1903               	btfsc	3,2
  8585  00CE  2F96               	goto	L15
  8586                           
  8587                           ;doprnt.c: 538: if(c != '%')
  8588  00CF  3025               	movlw	37
  8589  00D0  063A               	xorwf	sprintf@c^(0+256),w
  8590  00D1  1903               	btfsc	3,2
  8591  00D2  28E4               	goto	l7900
  8592                           
  8593                           ;doprnt.c: 540: {
  8594                           ;doprnt.c: 541: ((*sp++ = (c)));
  8595  00D3  083A               	movf	sprintf@c^(0+256),w
  8596  00D4  0021               	movlb	1	; select bank1
  8597  00D5  00DB               	movwf	??_sprintf^(0+128)
  8598  00D6  0022               	movlb	2	; select bank2
  8599  00D7  0839               	movf	sprintf@sp^(0+256),w
  8600  00D8  0086               	movwf	6
  8601  00D9  3002               	movlw	2	; select bank4/5
  8602  00DA  0087               	movwf	7
  8603  00DB  0021               	movlb	1	; select bank1
  8604  00DC  085B               	movf	??_sprintf^(0+128),w
  8605  00DD  0081               	movwf	1
  8606  00DE  3001               	movlw	1
  8607  00DF  00DB               	movwf	??_sprintf^(0+128)
  8608  00E0  085B               	movf	??_sprintf^(0+128),w
  8609  00E1  0022               	movlb	2	; select bank2
  8610  00E2  07B9               	addwf	sprintf@sp^(0+256),f
  8611                           
  8612                           ;doprnt.c: 542: continue;
  8613  00E3  28BB               	goto	l8210
  8614  00E4                     l7900:	
  8615                           
  8616                           ;doprnt.c: 543: }
  8617                           ;doprnt.c: 546: width = 0;
  8618  00E4  01B1               	clrf	sprintf@width^(0+256)
  8619  00E5  01B2               	clrf	(sprintf@width+1)^(0+256)
  8620                           
  8621                           ;doprnt.c: 548: flag = 0;
  8622  00E6  01AF               	clrf	sprintf@flag^(0+256)
  8623  00E7  01B0               	clrf	(sprintf@flag+1)^(0+256)
  8624                           
  8625                           ;doprnt.c: 551: switch(*f) {
  8626                           
  8627                           ;doprnt.c: 550: for(;;) {
  8628  00E8  28F0               	goto	l7906
  8629  00E9                     l850:	
  8630                           ;doprnt.c: 579: case '0':
  8631                           
  8632                           
  8633                           ;doprnt.c: 580: flag |= 0x04;
  8634  00E9  0022               	movlb	2	; select bank2
  8635  00EA  152F               	bsf	sprintf@flag^(0+256),2
  8636                           
  8637                           ;doprnt.c: 581: f++;
  8638  00EB  3001               	movlw	1
  8639  00EC  0021               	movlb	1	; select bank1
  8640  00ED  07D1               	addwf	sprintf@f^(0+128),f
  8641  00EE  3000               	movlw	0
  8642  00EF  3DD2               	addwfc	(sprintf@f+1)^(0+128),f
  8643  00F0                     l7906:	
  8644                           ;doprnt.c: 584: }
  8645                           
  8646                           ;doprnt.c: 582: continue;
  8647                           
  8648  00F0  0021               	movlb	1	; select bank1
  8649  00F1  0851               	movf	sprintf@f^(0+128),w
  8650  00F2  0084               	movwf	4
  8651  00F3  0852               	movf	(sprintf@f+1)^(0+128),w
  8652  00F4  0085               	movwf	5
  8653  00F5  0800               	movf	0,w	;code access
  8654                           
  8655                           ; Switch size 1, requested type "space"
  8656                           ; Number of cases is 1, Range of values is 48 to 48
  8657                           ; switch strategies available:
  8658                           ; Name         Instructions Cycles
  8659                           ; simple_byte            4     3 (average)
  8660                           ; direct_byte           11     9 (fixed)
  8661                           ; jumptable            263     9 (fixed)
  8662                           ;	Chosen strategy is simple_byte
  8663  00F6  3A30               	xorlw	48	; case 48
  8664  00F7  1903               	skipnz
  8665  00F8  28E9               	goto	l850
  8666  00F9  28FA               	goto	l7908
  8667  00FA                     l7908:	
  8668                           ;doprnt.c: 586: }
  8669                           
  8670                           ;doprnt.c: 585: break;
  8671                           
  8672                           
  8673                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8674  00FA  0851               	movf	sprintf@f^(0+128),w
  8675  00FB  0084               	movwf	4
  8676  00FC  0852               	movf	(sprintf@f+1)^(0+128),w
  8677  00FD  0085               	movwf	5
  8678  00FE  0800               	movf	0,w	;code access
  8679  00FF  3190  2001  3180   	fcall	_isdigit
  8680  0102  1C03               	btfss	3,0
  8681  0103  293A               	goto	l7920
  8682                           
  8683                           ;doprnt.c: 598: width = 0;
  8684  0104  0022               	movlb	2	; select bank2
  8685  0105  01B1               	clrf	sprintf@width^(0+256)
  8686  0106  01B2               	clrf	(sprintf@width+1)^(0+256)
  8687  0107                     l7912:	
  8688                           ;doprnt.c: 599: do {
  8689                           
  8690                           
  8691                           ;doprnt.c: 600: width *= 10;
  8692  0107  300A               	movlw	10
  8693  0108  00F2               	movwf	___wmul@multiplier
  8694  0109  3000               	movlw	0
  8695  010A  00F3               	movwf	___wmul@multiplier+1
  8696  010B  0022               	movlb	2	; select bank2
  8697  010C  0832               	movf	(sprintf@width+1)^(0+256),w
  8698  010D  00F5               	movwf	___wmul@multiplicand+1
  8699  010E  0831               	movf	sprintf@width^(0+256),w
  8700  010F  00F4               	movwf	___wmul@multiplicand
  8701  0110  31A8  20CB  3180   	fcall	___wmul
  8702  0113  0873               	movf	?___wmul+1,w
  8703  0114  0022               	movlb	2	; select bank2
  8704  0115  00B2               	movwf	(sprintf@width+1)^(0+256)
  8705  0116  0872               	movf	?___wmul,w
  8706  0117  00B1               	movwf	sprintf@width^(0+256)
  8707                           
  8708                           ;doprnt.c: 601: width += *f++ - '0';
  8709  0118  0021               	movlb	1	; select bank1
  8710  0119  0851               	movf	sprintf@f^(0+128),w
  8711  011A  0084               	movwf	4
  8712  011B  0852               	movf	(sprintf@f+1)^(0+128),w
  8713  011C  0085               	movwf	5
  8714  011D  0800               	movf	0,w	;code access
  8715  011E  3ED0               	addlw	208
  8716  011F  00DB               	movwf	??_sprintf^(0+128)
  8717  0120  30FF               	movlw	255
  8718  0121  1803               	skipnc
  8719  0122  3000               	movlw	0
  8720  0123  00DC               	movwf	(??_sprintf^(0+128)+1)
  8721  0124  085B               	movf	??_sprintf^(0+128),w
  8722  0125  0022               	movlb	2	; select bank2
  8723  0126  07B1               	addwf	sprintf@width^(0+256),f
  8724  0127  0021               	movlb	1	; select bank1
  8725  0128  085C               	movf	(??_sprintf+1)^(0+128),w
  8726  0129  0022               	movlb	2	; select bank2
  8727  012A  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  8728  012B  3001               	movlw	1
  8729  012C  0021               	movlb	1	; select bank1
  8730  012D  07D1               	addwf	sprintf@f^(0+128),f
  8731  012E  3000               	movlw	0
  8732  012F  3DD2               	addwfc	(sprintf@f+1)^(0+128),f
  8733                           
  8734                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8735  0130  0851               	movf	sprintf@f^(0+128),w
  8736  0131  0084               	movwf	4
  8737  0132  0852               	movf	(sprintf@f+1)^(0+128),w
  8738  0133  0085               	movwf	5
  8739  0134  0800               	movf	0,w	;code access
  8740  0135  3190  2001  3180   	fcall	_isdigit
  8741  0138  1803               	btfsc	3,0
  8742  0139  2907               	goto	l7912
  8743  013A                     l7920:	
  8744                           
  8745                           ;doprnt.c: 608: }
  8746                           ;doprnt.c: 611: if(*f == '.') {
  8747  013A  0021               	movlb	1	; select bank1
  8748  013B  0851               	movf	sprintf@f^(0+128),w
  8749  013C  0084               	movwf	4
  8750  013D  0852               	movf	(sprintf@f+1)^(0+128),w
  8751  013E  0085               	movwf	5
  8752  013F  0012               	moviw fsr0++
  8753  0140  3A2E               	xorlw	46
  8754  0141  1D03               	btfss	3,2
  8755  0142  2982               	goto	l7934
  8756                           
  8757                           ;doprnt.c: 612: flag |= 0x4000;
  8758  0143  0022               	movlb	2	; select bank2
  8759  0144  1730               	bsf	(sprintf@flag^(0+256)+1),6
  8760                           
  8761                           ;doprnt.c: 613: f++;
  8762  0145  3001               	movlw	1
  8763  0146  0021               	movlb	1	; select bank1
  8764  0147  07D1               	addwf	sprintf@f^(0+128),f
  8765  0148  3000               	movlw	0
  8766  0149  3DD2               	addwfc	(sprintf@f+1)^(0+128),f
  8767                           
  8768                           ;doprnt.c: 620: {
  8769                           ;doprnt.c: 621: prec = 0;
  8770  014A  0022               	movlb	2	; select bank2
  8771  014B  01B7               	clrf	sprintf@prec^(0+256)
  8772  014C  01B8               	clrf	(sprintf@prec+1)^(0+256)
  8773  014D                     l7932:	
  8774                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8775                           
  8776  014D  0021               	movlb	1	; select bank1
  8777  014E  0851               	movf	sprintf@f^(0+128),w
  8778  014F  0084               	movwf	4
  8779  0150  0852               	movf	(sprintf@f+1)^(0+128),w
  8780  0151  0085               	movwf	5
  8781  0152  0800               	movf	0,w	;code access
  8782  0153  3190  2001  3180   	fcall	_isdigit
  8783  0156  1C03               	btfss	3,0
  8784  0157  2989               	goto	l7940
  8785                           
  8786                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8787  0158  0021               	movlb	1	; select bank1
  8788  0159  0851               	movf	sprintf@f^(0+128),w
  8789  015A  0084               	movwf	4
  8790  015B  0852               	movf	(sprintf@f+1)^(0+128),w
  8791  015C  0085               	movwf	5
  8792  015D  0800               	movf	0,w	;code access
  8793  015E  00DB               	movwf	??_sprintf^(0+128)
  8794  015F  01DC               	clrf	(??_sprintf^(0+128)+1)
  8795  0160  0022               	movlb	2	; select bank2
  8796  0161  0838               	movf	(sprintf@prec+1)^(0+256),w
  8797  0162  00F3               	movwf	___wmul@multiplier+1
  8798  0163  0837               	movf	sprintf@prec^(0+256),w
  8799  0164  00F2               	movwf	___wmul@multiplier
  8800  0165  300A               	movlw	10
  8801  0166  00F4               	movwf	___wmul@multiplicand
  8802  0167  3000               	movlw	0
  8803  0168  00F5               	movwf	___wmul@multiplicand+1
  8804  0169  31A8  20CB  3180   	fcall	___wmul
  8805  016C  0021               	movlb	1	; select bank1
  8806  016D  085B               	movf	??_sprintf^(0+128),w
  8807  016E  0772               	addwf	?___wmul,w
  8808  016F  00DD               	movwf	(??_sprintf+2)^(0+128)
  8809  0170  085C               	movf	(??_sprintf+1)^(0+128),w
  8810  0171  3D73               	addwfc	?___wmul+1,w
  8811  0172  00DE               	movwf	(??_sprintf+3)^(0+128)
  8812  0173  085D               	movf	(??_sprintf+2)^(0+128),w
  8813  0174  3ED0               	addlw	208
  8814  0175  0022               	movlb	2	; select bank2
  8815  0176  00B7               	movwf	sprintf@prec^(0+256)
  8816  0177  30FF               	movlw	255
  8817  0178  0021               	movlb	1	; select bank1
  8818  0179  3D5E               	addwfc	(??_sprintf+3)^(0+128),w
  8819  017A  0022               	movlb	2	; select bank2
  8820  017B  00B8               	movwf	(sprintf@prec+1)^(0+256)
  8821  017C  3001               	movlw	1
  8822  017D  0021               	movlb	1	; select bank1
  8823  017E  07D1               	addwf	sprintf@f^(0+128),f
  8824  017F  3000               	movlw	0
  8825  0180  3DD2               	addwfc	(sprintf@f+1)^(0+128),f
  8826  0181  294D               	goto	l7932
  8827  0182                     l7934:	
  8828                           ;doprnt.c: 624: }
  8829                           ;doprnt.c: 625: } else {
  8830                           
  8831                           
  8832                           ;doprnt.c: 626: prec = 0;
  8833  0182  0022               	movlb	2	; select bank2
  8834  0183  01B7               	clrf	sprintf@prec^(0+256)
  8835  0184  01B8               	clrf	(sprintf@prec+1)^(0+256)
  8836                           
  8837                           ;doprnt.c: 628: flag |= 0x1000;
  8838  0185  1630               	bsf	(sprintf@flag^(0+256)+1),4
  8839                           
  8840                           ;doprnt.c: 630: }
  8841                           ;doprnt.c: 635: switch(c = *f++) {
  8842  0186  2989               	goto	l7940
  8843  0187                     l865:	
  8844                           ;doprnt.c: 662: case 'f':
  8845                           
  8846                           ;doprnt.c: 638: goto alldone;
  8847                           
  8848                           ;doprnt.c: 637: case 0:
  8849                           
  8850                           
  8851                           ;doprnt.c: 663: flag |= 0x400;
  8852  0187  1530               	bsf	(sprintf@flag^(0+256)+1),2
  8853                           
  8854                           ;doprnt.c: 698: case 'i':
  8855                           ;doprnt.c: 699: break;
  8856                           
  8857                           ;doprnt.c: 697: case 'd':
  8858                           
  8859                           ;doprnt.c: 664: break;
  8860  0188  29A5               	goto	l7942
  8861  0189                     l7940:	
  8862                           ;doprnt.c: 822: }
  8863                           
  8864                           ;doprnt.c: 813: continue;
  8865                           
  8866                           ;doprnt.c: 802: default:
  8867                           
  8868  0189  0021               	movlb	1	; select bank1
  8869  018A  0852               	movf	(sprintf@f+1)^(0+128),w
  8870  018B  00DC               	movwf	(??_sprintf^(0+128)+1)
  8871  018C  0851               	movf	sprintf@f^(0+128),w
  8872  018D  00DB               	movwf	??_sprintf^(0+128)
  8873  018E  0AD1               	incf	sprintf@f^(0+128),f
  8874  018F  1903               	skipnz
  8875  0190  0AD2               	incf	(sprintf@f+1)^(0+128),f
  8876  0191  085B               	movf	??_sprintf^(0+128),w
  8877  0192  0084               	movwf	4
  8878  0193  085C               	movf	(??_sprintf+1)^(0+128),w
  8879  0194  0085               	movwf	5
  8880  0195  0800               	movf	0,w	;code access
  8881  0196  0022               	movlb	2	; select bank2
  8882  0197  00BA               	movwf	sprintf@c^(0+256)
  8883                           
  8884                           ; Switch size 1, requested type "space"
  8885                           ; Number of cases is 4, Range of values is 0 to 105
  8886                           ; switch strategies available:
  8887                           ; Name         Instructions Cycles
  8888                           ; simple_byte           13     7 (average)
  8889                           ; direct_byte          218     6 (fixed)
  8890                           ; jumptable            260     6 (fixed)
  8891                           ;	Chosen strategy is simple_byte
  8892  0198  3A00               	xorlw	0	; case 0
  8893  0199  1903               	skipnz
  8894  019A  2F96               	goto	L15
  8895  019B  3A64               	xorlw	100	; case 100
  8896  019C  1903               	skipnz
  8897  019D  29A5               	goto	l7942
  8898  019E  3A02               	xorlw	2	; case 102
  8899  019F  1903               	skipnz
  8900  01A0  2987               	goto	l865
  8901  01A1  3A0F               	xorlw	15	; case 105
  8902  01A2  1903               	skipnz
  8903  01A3  29A5               	goto	l7942
  8904  01A4  28BB               	goto	l8210
  8905  01A5                     l7942:	
  8906                           
  8907                           ;doprnt.c: 825: if(flag & (0x700)) {
  8908  01A5  3000               	movlw	0
  8909  01A6  052F               	andwf	sprintf@flag^(0+256),w
  8910  01A7  0021               	movlb	1	; select bank1
  8911  01A8  00DB               	movwf	??_sprintf^(0+128)
  8912  01A9  3007               	movlw	7
  8913  01AA  0022               	movlb	2	; select bank2
  8914  01AB  0530               	andwf	(sprintf@flag+1)^(0+256),w
  8915  01AC  0021               	movlb	1	; select bank1
  8916  01AD  00DC               	movwf	(??_sprintf+1)^(0+128)
  8917  01AE  085B               	movf	??_sprintf^(0+128),w
  8918  01AF  045C               	iorwf	(??_sprintf^(0+128)+1),w
  8919  01B0  1903               	btfsc	3,2
  8920  01B1  2EFF               	goto	l8118
  8921                           
  8922                           ;doprnt.c: 827: if(flag & 0x1000)
  8923  01B2  0022               	movlb	2	; select bank2
  8924  01B3  1E30               	btfss	(sprintf@flag+1)^(0+256),4
  8925  01B4  29B9               	goto	l7948
  8926                           
  8927                           ;doprnt.c: 829: prec = 6;
  8928  01B5  3006               	movlw	6
  8929  01B6  00B7               	movwf	sprintf@prec^(0+256)
  8930  01B7  3000               	movlw	0
  8931  01B8  00B8               	movwf	(sprintf@prec^(0+256)+1)
  8932  01B9                     l7948:	
  8933                           
  8934                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8935  01B9  0824               	movf	sprintf@ap^(0+256),w
  8936  01BA  0086               	movwf	6
  8937  01BB  0187               	clrf	7
  8938  01BC  3F40               	moviw [0]fsr1
  8939  01BD  00B3               	movwf	sprintf@fval^(0+256)
  8940  01BE  3F41               	moviw [1]fsr1
  8941  01BF  00B4               	movwf	(sprintf@fval+1)^(0+256)
  8942  01C0  3F42               	moviw [2]fsr1
  8943  01C1  00B5               	movwf	(sprintf@fval+2)^(0+256)
  8944  01C2  3F43               	moviw [3]fsr1
  8945  01C3  00B6               	movwf	(sprintf@fval+3)^(0+256)
  8946  01C4  3004               	movlw	4
  8947  01C5  0021               	movlb	1	; select bank1
  8948  01C6  00DB               	movwf	??_sprintf^(0+128)
  8949  01C7  085B               	movf	??_sprintf^(0+128),w
  8950  01C8  0022               	movlb	2	; select bank2
  8951  01C9  07A4               	addwf	sprintf@ap^(0+256),f
  8952                           
  8953                           ;doprnt.c: 831: if(fval < 0.0) {
  8954  01CA  0836               	movf	(sprintf@fval+3)^(0+256),w
  8955  01CB  0021               	movlb	1	; select bank1
  8956  01CC  00C4               	movwf	(___flge@ff1+3)^(0+128)
  8957  01CD  0022               	movlb	2	; select bank2
  8958  01CE  0835               	movf	(sprintf@fval+2)^(0+256),w
  8959  01CF  0021               	movlb	1	; select bank1
  8960  01D0  00C3               	movwf	(___flge@ff1+2)^(0+128)
  8961  01D1  0022               	movlb	2	; select bank2
  8962  01D2  0834               	movf	(sprintf@fval+1)^(0+256),w
  8963  01D3  0021               	movlb	1	; select bank1
  8964  01D4  00C2               	movwf	(___flge@ff1+1)^(0+128)
  8965  01D5  0022               	movlb	2	; select bank2
  8966  01D6  0833               	movf	sprintf@fval^(0+256),w
  8967  01D7  0021               	movlb	1	; select bank1
  8968  01D8  00C1               	movwf	___flge@ff1^(0+128)
  8969  01D9  3000               	movlw	0
  8970  01DA  00C8               	movwf	(___flge@ff2+3)^(0+128)
  8971  01DB  3000               	movlw	0
  8972  01DC  00C7               	movwf	(___flge@ff2+2)^(0+128)
  8973  01DD  3000               	movlw	0
  8974  01DE  00C6               	movwf	(___flge@ff2+1)^(0+128)
  8975  01DF  3000               	movlw	0
  8976  01E0  00C5               	movwf	___flge@ff2^(0+128)
  8977  01E1  31A0  20B2  3180   	fcall	___flge
  8978  01E4  1803               	btfsc	3,0
  8979  01E5  2A0D               	goto	l7958
  8980                           
  8981                           ;doprnt.c: 832: fval = -fval;
  8982  01E6  0022               	movlb	2	; select bank2
  8983  01E7  0836               	movf	(sprintf@fval+3)^(0+256),w
  8984  01E8  0020               	movlb	0	; select bank0
  8985  01E9  00EF               	movwf	___flneg@f1+3
  8986  01EA  0022               	movlb	2	; select bank2
  8987  01EB  0835               	movf	(sprintf@fval+2)^(0+256),w
  8988  01EC  0020               	movlb	0	; select bank0
  8989  01ED  00EE               	movwf	___flneg@f1+2
  8990  01EE  0022               	movlb	2	; select bank2
  8991  01EF  0834               	movf	(sprintf@fval+1)^(0+256),w
  8992  01F0  0020               	movlb	0	; select bank0
  8993  01F1  00ED               	movwf	___flneg@f1+1
  8994  01F2  0022               	movlb	2	; select bank2
  8995  01F3  0833               	movf	sprintf@fval^(0+256),w
  8996  01F4  0020               	movlb	0	; select bank0
  8997  01F5  00EC               	movwf	___flneg@f1
  8998  01F6  319C  2400  3180   	fcall	___flneg
  8999  01F9  0020               	movlb	0	; select bank0
  9000  01FA  086F               	movf	?___flneg+3,w
  9001  01FB  0022               	movlb	2	; select bank2
  9002  01FC  00B6               	movwf	(sprintf@fval+3)^(0+256)
  9003  01FD  0020               	movlb	0	; select bank0
  9004  01FE  086E               	movf	?___flneg+2,w
  9005  01FF  0022               	movlb	2	; select bank2
  9006  0200  00B5               	movwf	(sprintf@fval+2)^(0+256)
  9007  0201  0020               	movlb	0	; select bank0
  9008  0202  086D               	movf	?___flneg+1,w
  9009  0203  0022               	movlb	2	; select bank2
  9010  0204  00B4               	movwf	(sprintf@fval+1)^(0+256)
  9011  0205  0020               	movlb	0	; select bank0
  9012  0206  086C               	movf	?___flneg,w
  9013  0207  0022               	movlb	2	; select bank2
  9014  0208  00B3               	movwf	sprintf@fval^(0+256)
  9015                           
  9016                           ;doprnt.c: 833: flag |= 0x03;
  9017  0209  3003               	movlw	3
  9018  020A  04AF               	iorwf	sprintf@flag^(0+256),f
  9019  020B  3000               	movlw	0
  9020  020C  04B0               	iorwf	(sprintf@flag+1)^(0+256),f
  9021  020D                     l7958:	
  9022                           
  9023                           ;doprnt.c: 834: }
  9024                           ;doprnt.c: 835: exp = 0;
  9025  020D  0022               	movlb	2	; select bank2
  9026  020E  01AD               	clrf	sprintf@exp^(0+256)
  9027  020F  01AE               	clrf	(sprintf@exp+1)^(0+256)
  9028                           
  9029                           ;doprnt.c: 836: if( fval!=0) {
  9030  0210  0836               	movf	(sprintf@fval+3)^(0+256),w
  9031  0211  0435               	iorwf	(sprintf@fval+2)^(0+256),w
  9032  0212  0434               	iorwf	(sprintf@fval+1)^(0+256),w
  9033  0213  0433               	iorwf	sprintf@fval^(0+256),w
  9034  0214  1903               	skipnz
  9035  0215  2AEB               	goto	l873
  9036                           
  9037                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  9038  0216  0833               	movf	sprintf@fval^(0+256),w
  9039  0217  0021               	movlb	1	; select bank1
  9040  0218  00DB               	movwf	??_sprintf^(0+128)
  9041  0219  0022               	movlb	2	; select bank2
  9042  021A  0834               	movf	(sprintf@fval+1)^(0+256),w
  9043  021B  0021               	movlb	1	; select bank1
  9044  021C  00DC               	movwf	(??_sprintf^(0+128)+1)
  9045  021D  0022               	movlb	2	; select bank2
  9046  021E  0835               	movf	(sprintf@fval+2)^(0+256),w
  9047  021F  0021               	movlb	1	; select bank1
  9048  0220  00DD               	movwf	(??_sprintf^(0+128)+2)
  9049  0221  0022               	movlb	2	; select bank2
  9050  0222  0836               	movf	(sprintf@fval+3)^(0+256),w
  9051  0223  0021               	movlb	1	; select bank1
  9052  0224  00DE               	movwf	(??_sprintf^(0+128)+3)
  9053  0225  1003               	clrc
  9054  0226  0D5D               	rlf	(??_sprintf^(0+128)+2),w
  9055  0227  0D5E               	rlf	(??_sprintf^(0+128)+3),w
  9056  0228  3E82               	addlw	130
  9057  0229  0022               	movlb	2	; select bank2
  9058  022A  00AD               	movwf	sprintf@exp^(0+256)
  9059  022B  30FF               	movlw	255
  9060  022C  1803               	skipnc
  9061  022D  3000               	movlw	0
  9062  022E  00AE               	movwf	(sprintf@exp^(0+256)+1)
  9063                           
  9064                           ;doprnt.c: 838: exp--;
  9065  022F  30FF               	movlw	255
  9066  0230  07AD               	addwf	sprintf@exp^(0+256),f
  9067  0231  30FF               	movlw	255
  9068  0232  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  9069                           
  9070                           ;doprnt.c: 839: exp *= 3;
  9071  0233  3003               	movlw	3
  9072  0234  00F2               	movwf	___wmul@multiplier
  9073  0235  3000               	movlw	0
  9074  0236  00F3               	movwf	___wmul@multiplier+1
  9075  0237  082E               	movf	(sprintf@exp+1)^(0+256),w
  9076  0238  00F5               	movwf	___wmul@multiplicand+1
  9077  0239  082D               	movf	sprintf@exp^(0+256),w
  9078  023A  00F4               	movwf	___wmul@multiplicand
  9079  023B  31A8  20CB  3180   	fcall	___wmul
  9080  023E  0873               	movf	?___wmul+1,w
  9081  023F  0022               	movlb	2	; select bank2
  9082  0240  00AE               	movwf	(sprintf@exp+1)^(0+256)
  9083  0241  0872               	movf	?___wmul,w
  9084  0242  00AD               	movwf	sprintf@exp^(0+256)
  9085                           
  9086                           ;doprnt.c: 840: exp /= 10;
  9087  0243  300A               	movlw	10
  9088  0244  0020               	movlb	0	; select bank0
  9089  0245  00A0               	movwf	___awdiv@divisor
  9090  0246  3000               	movlw	0
  9091  0247  00A1               	movwf	___awdiv@divisor+1
  9092  0248  0022               	movlb	2	; select bank2
  9093  0249  082E               	movf	(sprintf@exp+1)^(0+256),w
  9094  024A  0020               	movlb	0	; select bank0
  9095  024B  00A3               	movwf	___awdiv@dividend+1
  9096  024C  0022               	movlb	2	; select bank2
  9097  024D  082D               	movf	sprintf@exp^(0+256),w
  9098  024E  0020               	movlb	0	; select bank0
  9099  024F  00A2               	movwf	___awdiv@dividend
  9100  0250  31AB  23AD  3180   	fcall	___awdiv
  9101  0253  0020               	movlb	0	; select bank0
  9102  0254  0821               	movf	?___awdiv+1,w
  9103  0255  0022               	movlb	2	; select bank2
  9104  0256  00AE               	movwf	(sprintf@exp+1)^(0+256)
  9105  0257  0020               	movlb	0	; select bank0
  9106  0258  0820               	movf	?___awdiv,w
  9107  0259  0022               	movlb	2	; select bank2
  9108  025A  00AD               	movwf	sprintf@exp^(0+256)
  9109                           
  9110                           ;doprnt.c: 841: if(exp < 0)
  9111  025B  1FAE               	btfss	(sprintf@exp+1)^(0+256),7
  9112  025C  2A61               	goto	l7974
  9113                           
  9114                           ;doprnt.c: 842: exp--;
  9115  025D  30FF               	movlw	255
  9116  025E  07AD               	addwf	sprintf@exp^(0+256),f
  9117  025F  30FF               	movlw	255
  9118  0260  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  9119  0261                     l7974:	
  9120                           
  9121                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9122  0261  032D               	decf	sprintf@exp^(0+256),w
  9123  0262  3AFF               	xorlw	255
  9124  0263  318D  2570  3180   	fcall	_scale
  9125  0266  0020               	movlb	0	; select bank0
  9126  0267  0855               	movf	?_scale+3,w
  9127  0268  0022               	movlb	2	; select bank2
  9128  0269  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9129  026A  0020               	movlb	0	; select bank0
  9130  026B  0854               	movf	?_scale+2,w
  9131  026C  0022               	movlb	2	; select bank2
  9132  026D  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9133  026E  0020               	movlb	0	; select bank0
  9134  026F  0853               	movf	?_scale+1,w
  9135  0270  0022               	movlb	2	; select bank2
  9136  0271  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9137  0272  0020               	movlb	0	; select bank0
  9138  0273  0852               	movf	?_scale,w
  9139  0274  0022               	movlb	2	; select bank2
  9140  0275  00A5               	movwf	sprintf@tmpval^(0+256)
  9141                           
  9142                           ;doprnt.c: 847: tmpval.integ *= fval;
  9143  0276  0836               	movf	(sprintf@fval+3)^(0+256),w
  9144  0277  0020               	movlb	0	; select bank0
  9145  0278  00BB               	movwf	___flmul@b+3
  9146  0279  0022               	movlb	2	; select bank2
  9147  027A  0835               	movf	(sprintf@fval+2)^(0+256),w
  9148  027B  0020               	movlb	0	; select bank0
  9149  027C  00BA               	movwf	___flmul@b+2
  9150  027D  0022               	movlb	2	; select bank2
  9151  027E  0834               	movf	(sprintf@fval+1)^(0+256),w
  9152  027F  0020               	movlb	0	; select bank0
  9153  0280  00B9               	movwf	___flmul@b+1
  9154  0281  0022               	movlb	2	; select bank2
  9155  0282  0833               	movf	sprintf@fval^(0+256),w
  9156  0283  0020               	movlb	0	; select bank0
  9157  0284  00B8               	movwf	___flmul@b
  9158  0285  0022               	movlb	2	; select bank2
  9159  0286  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9160  0287  0020               	movlb	0	; select bank0
  9161  0288  00BF               	movwf	___flmul@a+3
  9162  0289  0022               	movlb	2	; select bank2
  9163  028A  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9164  028B  0020               	movlb	0	; select bank0
  9165  028C  00BE               	movwf	___flmul@a+2
  9166  028D  0022               	movlb	2	; select bank2
  9167  028E  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9168  028F  0020               	movlb	0	; select bank0
  9169  0290  00BD               	movwf	___flmul@a+1
  9170  0291  0022               	movlb	2	; select bank2
  9171  0292  0825               	movf	sprintf@tmpval^(0+256),w
  9172  0293  0020               	movlb	0	; select bank0
  9173  0294  00BC               	movwf	___flmul@a
  9174  0295  3195  25D4  3180   	fcall	___flmul
  9175  0298  0020               	movlb	0	; select bank0
  9176  0299  083B               	movf	?___flmul+3,w
  9177  029A  0022               	movlb	2	; select bank2
  9178  029B  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9179  029C  0020               	movlb	0	; select bank0
  9180  029D  083A               	movf	?___flmul+2,w
  9181  029E  0022               	movlb	2	; select bank2
  9182  029F  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9183  02A0  0020               	movlb	0	; select bank0
  9184  02A1  0839               	movf	?___flmul+1,w
  9185  02A2  0022               	movlb	2	; select bank2
  9186  02A3  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9187  02A4  0020               	movlb	0	; select bank0
  9188  02A5  0838               	movf	?___flmul,w
  9189  02A6  0022               	movlb	2	; select bank2
  9190  02A7  00A5               	movwf	sprintf@tmpval^(0+256)
  9191                           
  9192                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9193  02A8  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9194  02A9  0021               	movlb	1	; select bank1
  9195  02AA  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9196  02AB  0022               	movlb	2	; select bank2
  9197  02AC  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9198  02AD  0021               	movlb	1	; select bank1
  9199  02AE  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9200  02AF  0022               	movlb	2	; select bank2
  9201  02B0  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9202  02B1  0021               	movlb	1	; select bank1
  9203  02B2  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9204  02B3  0022               	movlb	2	; select bank2
  9205  02B4  0825               	movf	sprintf@tmpval^(0+256),w
  9206  02B5  0021               	movlb	1	; select bank1
  9207  02B6  00C1               	movwf	___flge@ff1^(0+128)
  9208  02B7  303F               	movlw	63
  9209  02B8  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9210  02B9  3080               	movlw	128
  9211  02BA  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9212  02BB  3000               	movlw	0
  9213  02BC  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9214  02BD  3000               	movlw	0
  9215  02BE  00C5               	movwf	___flge@ff2^(0+128)
  9216  02BF  31A0  20B2  3180   	fcall	___flge
  9217  02C2  1803               	btfsc	3,0
  9218  02C3  2AC9               	goto	l7982
  9219                           
  9220                           ;doprnt.c: 849: exp--;
  9221  02C4  30FF               	movlw	255
  9222  02C5  0022               	movlb	2	; select bank2
  9223  02C6  07AD               	addwf	sprintf@exp^(0+256),f
  9224  02C7  30FF               	movlw	255
  9225  02C8  2AEA               	goto	L2
  9226  02C9                     l7982:	
  9227                           
  9228                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9229  02C9  0022               	movlb	2	; select bank2
  9230  02CA  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9231  02CB  0021               	movlb	1	; select bank1
  9232  02CC  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9233  02CD  0022               	movlb	2	; select bank2
  9234  02CE  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9235  02CF  0021               	movlb	1	; select bank1
  9236  02D0  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9237  02D1  0022               	movlb	2	; select bank2
  9238  02D2  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9239  02D3  0021               	movlb	1	; select bank1
  9240  02D4  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9241  02D5  0022               	movlb	2	; select bank2
  9242  02D6  0825               	movf	sprintf@tmpval^(0+256),w
  9243  02D7  0021               	movlb	1	; select bank1
  9244  02D8  00C1               	movwf	___flge@ff1^(0+128)
  9245  02D9  3041               	movlw	65
  9246  02DA  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9247  02DB  3020               	movlw	32
  9248  02DC  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9249  02DD  3000               	movlw	0
  9250  02DE  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9251  02DF  3000               	movlw	0
  9252  02E0  00C5               	movwf	___flge@ff2^(0+128)
  9253  02E1  31A0  20B2  3180   	fcall	___flge
  9254  02E4  1C03               	btfss	3,0
  9255  02E5  2AEB               	goto	l873
  9256                           
  9257                           ;doprnt.c: 851: exp++;
  9258  02E6  3001               	movlw	1
  9259  02E7  0022               	movlb	2	; select bank2
  9260  02E8  07AD               	addwf	sprintf@exp^(0+256),f
  9261  02E9  3000               	movlw	0
  9262  02EA                     L2:	
  9263  02EA  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  9264  02EB                     l873:	
  9265                           
  9266                           ;doprnt.c: 852: }
  9267                           ;doprnt.c: 1112: if(prec <= 12)
  9268  02EB  0022               	movlb	2	; select bank2
  9269  02EC  0838               	movf	(sprintf@prec+1)^(0+256),w
  9270  02ED  3A80               	xorlw	128
  9271  02EE  0021               	movlb	1	; select bank1
  9272  02EF  00DB               	movwf	??_sprintf^(0+128)
  9273  02F0  3080               	movlw	128
  9274  02F1  025B               	subwf	??_sprintf^(0+128),w
  9275  02F2  1D03               	skipz
  9276  02F3  2AF7               	goto	u10975
  9277  02F4  300D               	movlw	13
  9278  02F5  0022               	movlb	2	; select bank2
  9279  02F6  0237               	subwf	sprintf@prec^(0+256),w
  9280  02F7                     u10975:	
  9281  02F7  1803               	skipnc
  9282  02F8  2B31               	goto	l7988
  9283                           
  9284                           ;doprnt.c: 1113: fval += fround(prec);
  9285  02F9  0022               	movlb	2	; select bank2
  9286  02FA  0837               	movf	sprintf@prec^(0+256),w
  9287  02FB  3192  2202  3180   	fcall	_fround
  9288  02FE  0020               	movlb	0	; select bank0
  9289  02FF  0855               	movf	?_fround+3,w
  9290  0300  0021               	movlb	1	; select bank1
  9291  0301  00AC               	movwf	(___fladd@b+3)^(0+128)
  9292  0302  0020               	movlb	0	; select bank0
  9293  0303  0854               	movf	?_fround+2,w
  9294  0304  0021               	movlb	1	; select bank1
  9295  0305  00AB               	movwf	(___fladd@b+2)^(0+128)
  9296  0306  0020               	movlb	0	; select bank0
  9297  0307  0853               	movf	?_fround+1,w
  9298  0308  0021               	movlb	1	; select bank1
  9299  0309  00AA               	movwf	(___fladd@b+1)^(0+128)
  9300  030A  0020               	movlb	0	; select bank0
  9301  030B  0852               	movf	?_fround,w
  9302  030C  0021               	movlb	1	; select bank1
  9303  030D  00A9               	movwf	___fladd@b^(0+128)
  9304  030E  0022               	movlb	2	; select bank2
  9305  030F  0836               	movf	(sprintf@fval+3)^(0+256),w
  9306  0310  0021               	movlb	1	; select bank1
  9307  0311  00B0               	movwf	(___fladd@a+3)^(0+128)
  9308  0312  0022               	movlb	2	; select bank2
  9309  0313  0835               	movf	(sprintf@fval+2)^(0+256),w
  9310  0314  0021               	movlb	1	; select bank1
  9311  0315  00AF               	movwf	(___fladd@a+2)^(0+128)
  9312  0316  0022               	movlb	2	; select bank2
  9313  0317  0834               	movf	(sprintf@fval+1)^(0+256),w
  9314  0318  0021               	movlb	1	; select bank1
  9315  0319  00AE               	movwf	(___fladd@a+1)^(0+128)
  9316  031A  0022               	movlb	2	; select bank2
  9317  031B  0833               	movf	sprintf@fval^(0+256),w
  9318  031C  0021               	movlb	1	; select bank1
  9319  031D  00AD               	movwf	___fladd@a^(0+128)
  9320  031E  3193  23D8  3180   	fcall	___fladd
  9321  0321  0021               	movlb	1	; select bank1
  9322  0322  082C               	movf	(?___fladd+3)^(0+128),w
  9323  0323  0022               	movlb	2	; select bank2
  9324  0324  00B6               	movwf	(sprintf@fval+3)^(0+256)
  9325  0325  0021               	movlb	1	; select bank1
  9326  0326  082B               	movf	(?___fladd+2)^(0+128),w
  9327  0327  0022               	movlb	2	; select bank2
  9328  0328  00B5               	movwf	(sprintf@fval+2)^(0+256)
  9329  0329  0021               	movlb	1	; select bank1
  9330  032A  082A               	movf	(?___fladd+1)^(0+128),w
  9331  032B  0022               	movlb	2	; select bank2
  9332  032C  00B4               	movwf	(sprintf@fval+1)^(0+256)
  9333  032D  0021               	movlb	1	; select bank1
  9334  032E  0829               	movf	?___fladd^(0+128),w
  9335  032F  0022               	movlb	2	; select bank2
  9336  0330  00B3               	movwf	sprintf@fval^(0+256)
  9337  0331                     l7988:	
  9338                           
  9339                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9340  0331  0022               	movlb	2	; select bank2
  9341  0332  082E               	movf	(sprintf@exp+1)^(0+256),w
  9342  0333  3A80               	xorlw	128
  9343  0334  0021               	movlb	1	; select bank1
  9344  0335  00DB               	movwf	??_sprintf^(0+128)
  9345  0336  3080               	movlw	128
  9346  0337  025B               	subwf	??_sprintf^(0+128),w
  9347  0338  1D03               	skipz
  9348  0339  2B3D               	goto	u10985
  9349  033A  300A               	movlw	10
  9350  033B  0022               	movlb	2	; select bank2
  9351  033C  022D               	subwf	sprintf@exp^(0+256),w
  9352  033D                     u10985:	
  9353  033D  1803               	skipnc
  9354  033E  2B6D               	goto	l7996
  9355  033F  0022               	movlb	2	; select bank2
  9356  0340  0836               	movf	(sprintf@fval+3)^(0+256),w
  9357  0341  0435               	iorwf	(sprintf@fval+2)^(0+256),w
  9358  0342  0434               	iorwf	(sprintf@fval+1)^(0+256),w
  9359  0343  0433               	iorwf	sprintf@fval^(0+256),w
  9360  0344  1903               	skipnz
  9361  0345  2BCA               	goto	l8010
  9362  0346  0836               	movf	(sprintf@fval+3)^(0+256),w
  9363  0347  0020               	movlb	0	; select bank0
  9364  0348  00EE               	movwf	___fltol@f1+3
  9365  0349  0022               	movlb	2	; select bank2
  9366  034A  0835               	movf	(sprintf@fval+2)^(0+256),w
  9367  034B  0020               	movlb	0	; select bank0
  9368  034C  00ED               	movwf	___fltol@f1+2
  9369  034D  0022               	movlb	2	; select bank2
  9370  034E  0834               	movf	(sprintf@fval+1)^(0+256),w
  9371  034F  0020               	movlb	0	; select bank0
  9372  0350  00EC               	movwf	___fltol@f1+1
  9373  0351  0022               	movlb	2	; select bank2
  9374  0352  0833               	movf	sprintf@fval^(0+256),w
  9375  0353  0020               	movlb	0	; select bank0
  9376  0354  00EB               	movwf	___fltol@f1
  9377  0355  31A0  2019  3180   	fcall	___fltol
  9378  0358  0020               	movlb	0	; select bank0
  9379  0359  086E               	movf	?___fltol+3,w
  9380  035A  046D               	iorwf	?___fltol+2,w
  9381  035B  046C               	iorwf	?___fltol+1,w
  9382  035C  046B               	iorwf	?___fltol,w
  9383  035D  1D03               	skipz
  9384  035E  2BCA               	goto	l8010
  9385  035F  0022               	movlb	2	; select bank2
  9386  0360  082E               	movf	(sprintf@exp+1)^(0+256),w
  9387  0361  3A80               	xorlw	128
  9388  0362  0021               	movlb	1	; select bank1
  9389  0363  00DB               	movwf	??_sprintf^(0+128)
  9390  0364  3080               	movlw	128
  9391  0365  025B               	subwf	??_sprintf^(0+128),w
  9392  0366  1D03               	skipz
  9393  0367  2B6B               	goto	u11015
  9394  0368  3002               	movlw	2
  9395  0369  0022               	movlb	2	; select bank2
  9396  036A  022D               	subwf	sprintf@exp^(0+256),w
  9397  036B                     u11015:	
  9398  036B  1C03               	skipc
  9399  036C  2BCA               	goto	l8010
  9400  036D                     l7996:	
  9401                           
  9402                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9403  036D  0022               	movlb	2	; select bank2
  9404  036E  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9405  036F  0021               	movlb	1	; select bank1
  9406  0370  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9407  0371  0022               	movlb	2	; select bank2
  9408  0372  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9409  0373  0021               	movlb	1	; select bank1
  9410  0374  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9411  0375  0022               	movlb	2	; select bank2
  9412  0376  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9413  0377  0021               	movlb	1	; select bank1
  9414  0378  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9415  0379  0022               	movlb	2	; select bank2
  9416  037A  0825               	movf	sprintf@tmpval^(0+256),w
  9417  037B  0021               	movlb	1	; select bank1
  9418  037C  00C1               	movwf	___flge@ff1^(0+128)
  9419  037D  3040               	movlw	64
  9420  037E  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9421  037F  3089               	movlw	137
  9422  0380  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9423  0381  3070               	movlw	112
  9424  0382  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9425  0383  305F               	movlw	95
  9426  0384  00C5               	movwf	___flge@ff2^(0+128)
  9427  0385  31A0  20B2  3180   	fcall	___flge
  9428  0388  1803               	btfsc	3,0
  9429  0389  2B8C               	goto	l8000
  9430                           
  9431                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9432  038A  30F7               	movlw	247
  9433  038B  2B8D               	goto	L3
  9434  038C                     l8000:	
  9435                           ;doprnt.c: 1122: }else{
  9436                           
  9437                           
  9438                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9439  038C  30F8               	movlw	248
  9440  038D                     L3:	
  9441  038D  0022               	movlb	2	; select bank2
  9442  038E  07AD               	addwf	sprintf@exp^(0+256),f
  9443  038F  30FF               	movlw	255
  9444  0390  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  9445                           
  9446                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9447  0391  082D               	movf	sprintf@exp^(0+256),w
  9448  0392  318D  2570  3180   	fcall	_scale
  9449  0395  0020               	movlb	0	; select bank0
  9450  0396  0855               	movf	?_scale+3,w
  9451  0397  0022               	movlb	2	; select bank2
  9452  0398  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9453  0399  0020               	movlb	0	; select bank0
  9454  039A  0854               	movf	?_scale+2,w
  9455  039B  0022               	movlb	2	; select bank2
  9456  039C  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9457  039D  0020               	movlb	0	; select bank0
  9458  039E  0853               	movf	?_scale+1,w
  9459  039F  0022               	movlb	2	; select bank2
  9460  03A0  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9461  03A1  0020               	movlb	0	; select bank0
  9462  03A2  0852               	movf	?_scale,w
  9463  03A3  0022               	movlb	2	; select bank2
  9464  03A4  00A5               	movwf	sprintf@tmpval^(0+256)
  9465  03A5  0836               	movf	(sprintf@fval+3)^(0+256),w
  9466  03A6  00F5               	movwf	__div_to_l_@f1+3
  9467  03A7  0835               	movf	(sprintf@fval+2)^(0+256),w
  9468  03A8  00F4               	movwf	__div_to_l_@f1+2
  9469  03A9  0834               	movf	(sprintf@fval+1)^(0+256),w
  9470  03AA  00F3               	movwf	__div_to_l_@f1+1
  9471  03AB  0833               	movf	sprintf@fval^(0+256),w
  9472  03AC  00F2               	movwf	__div_to_l_@f1
  9473  03AD  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9474  03AE  00F9               	movwf	__div_to_l_@f2+3
  9475  03AF  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9476  03B0  00F8               	movwf	__div_to_l_@f2+2
  9477  03B1  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9478  03B2  00F7               	movwf	__div_to_l_@f2+1
  9479  03B3  0825               	movf	sprintf@tmpval^(0+256),w
  9480  03B4  00F6               	movwf	__div_to_l_@f2
  9481  03B5  31A3  2361  3180   	fcall	__div_to_l_
  9482  03B8  0875               	movf	?__div_to_l_+3,w
  9483  03B9  0022               	movlb	2	; select bank2
  9484  03BA  00AC               	movwf	(sprintf@val+3)^(0+256)
  9485  03BB  0874               	movf	?__div_to_l_+2,w
  9486  03BC  00AB               	movwf	(sprintf@val+2)^(0+256)
  9487  03BD  0873               	movf	?__div_to_l_+1,w
  9488  03BE  00AA               	movwf	(sprintf@val+1)^(0+256)
  9489  03BF  0872               	movf	?__div_to_l_,w
  9490  03C0  00A9               	movwf	sprintf@val^(0+256)
  9491                           
  9492                           ;doprnt.c: 1129: fval = 0.0;
  9493  03C1  3000               	movlw	0
  9494  03C2  00B6               	movwf	(sprintf@fval+3)^(0+256)
  9495  03C3  3000               	movlw	0
  9496  03C4  00B5               	movwf	(sprintf@fval+2)^(0+256)
  9497  03C5  3000               	movlw	0
  9498  03C6  00B4               	movwf	(sprintf@fval+1)^(0+256)
  9499  03C7  3000               	movlw	0
  9500  03C8  00B3               	movwf	sprintf@fval^(0+256)
  9501                           
  9502                           ;doprnt.c: 1130: } else {
  9503  03C9  2C35               	goto	l8014
  9504  03CA                     l8010:	
  9505                           
  9506                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9507  03CA  0022               	movlb	2	; select bank2
  9508  03CB  0836               	movf	(sprintf@fval+3)^(0+256),w
  9509  03CC  0020               	movlb	0	; select bank0
  9510  03CD  00EE               	movwf	___fltol@f1+3
  9511  03CE  0022               	movlb	2	; select bank2
  9512  03CF  0835               	movf	(sprintf@fval+2)^(0+256),w
  9513  03D0  0020               	movlb	0	; select bank0
  9514  03D1  00ED               	movwf	___fltol@f1+2
  9515  03D2  0022               	movlb	2	; select bank2
  9516  03D3  0834               	movf	(sprintf@fval+1)^(0+256),w
  9517  03D4  0020               	movlb	0	; select bank0
  9518  03D5  00EC               	movwf	___fltol@f1+1
  9519  03D6  0022               	movlb	2	; select bank2
  9520  03D7  0833               	movf	sprintf@fval^(0+256),w
  9521  03D8  0020               	movlb	0	; select bank0
  9522  03D9  00EB               	movwf	___fltol@f1
  9523  03DA  31A0  2019  3180   	fcall	___fltol
  9524  03DD  0020               	movlb	0	; select bank0
  9525  03DE  086E               	movf	?___fltol+3,w
  9526  03DF  0022               	movlb	2	; select bank2
  9527  03E0  00AC               	movwf	(sprintf@val+3)^(0+256)
  9528  03E1  0020               	movlb	0	; select bank0
  9529  03E2  086D               	movf	?___fltol+2,w
  9530  03E3  0022               	movlb	2	; select bank2
  9531  03E4  00AB               	movwf	(sprintf@val+2)^(0+256)
  9532  03E5  0020               	movlb	0	; select bank0
  9533  03E6  086C               	movf	?___fltol+1,w
  9534  03E7  0022               	movlb	2	; select bank2
  9535  03E8  00AA               	movwf	(sprintf@val+1)^(0+256)
  9536  03E9  0020               	movlb	0	; select bank0
  9537  03EA  086B               	movf	?___fltol,w
  9538  03EB  0022               	movlb	2	; select bank2
  9539  03EC  00A9               	movwf	sprintf@val^(0+256)
  9540                           
  9541                           ;doprnt.c: 1132: fval -= (double)val;
  9542  03ED  082C               	movf	(sprintf@val+3)^(0+256),w
  9543  03EE  0020               	movlb	0	; select bank0
  9544  03EF  00B1               	movwf	___xxtofl@val+3
  9545  03F0  0022               	movlb	2	; select bank2
  9546  03F1  082B               	movf	(sprintf@val+2)^(0+256),w
  9547  03F2  0020               	movlb	0	; select bank0
  9548  03F3  00B0               	movwf	___xxtofl@val+2
  9549  03F4  0022               	movlb	2	; select bank2
  9550  03F5  082A               	movf	(sprintf@val+1)^(0+256),w
  9551  03F6  0020               	movlb	0	; select bank0
  9552  03F7  00AF               	movwf	___xxtofl@val+1
  9553  03F8  0022               	movlb	2	; select bank2
  9554  03F9  0829               	movf	sprintf@val^(0+256),w
  9555  03FA  0020               	movlb	0	; select bank0
  9556  03FB  00AE               	movwf	___xxtofl@val
  9557  03FC  3000               	movlw	0
  9558  03FD  31AF  276A  3180   	fcall	___xxtofl
  9559  0400  0020               	movlb	0	; select bank0
  9560  0401  0831               	movf	?___xxtofl+3,w
  9561  0402  0021               	movlb	1	; select bank1
  9562  0403  00C4               	movwf	(___flsub@a+3)^(0+128)
  9563  0404  0020               	movlb	0	; select bank0
  9564  0405  0830               	movf	?___xxtofl+2,w
  9565  0406  0021               	movlb	1	; select bank1
  9566  0407  00C3               	movwf	(___flsub@a+2)^(0+128)
  9567  0408  0020               	movlb	0	; select bank0
  9568  0409  082F               	movf	?___xxtofl+1,w
  9569  040A  0021               	movlb	1	; select bank1
  9570  040B  00C2               	movwf	(___flsub@a+1)^(0+128)
  9571  040C  0020               	movlb	0	; select bank0
  9572  040D  082E               	movf	?___xxtofl,w
  9573  040E  0021               	movlb	1	; select bank1
  9574  040F  00C1               	movwf	___flsub@a^(0+128)
  9575  0410  0022               	movlb	2	; select bank2
  9576  0411  0836               	movf	(sprintf@fval+3)^(0+256),w
  9577  0412  0021               	movlb	1	; select bank1
  9578  0413  00C8               	movwf	(___flsub@b+3)^(0+128)
  9579  0414  0022               	movlb	2	; select bank2
  9580  0415  0835               	movf	(sprintf@fval+2)^(0+256),w
  9581  0416  0021               	movlb	1	; select bank1
  9582  0417  00C7               	movwf	(___flsub@b+2)^(0+128)
  9583  0418  0022               	movlb	2	; select bank2
  9584  0419  0834               	movf	(sprintf@fval+1)^(0+256),w
  9585  041A  0021               	movlb	1	; select bank1
  9586  041B  00C6               	movwf	(___flsub@b+1)^(0+128)
  9587  041C  0022               	movlb	2	; select bank2
  9588  041D  0833               	movf	sprintf@fval^(0+256),w
  9589  041E  0021               	movlb	1	; select bank1
  9590  041F  00C5               	movwf	___flsub@b^(0+128)
  9591  0420  31A9  2104  3180   	fcall	___flsub
  9592  0423  0021               	movlb	1	; select bank1
  9593  0424  0844               	movf	(?___flsub+3)^(0+128),w
  9594  0425  0022               	movlb	2	; select bank2
  9595  0426  00B6               	movwf	(sprintf@fval+3)^(0+256)
  9596  0427  0021               	movlb	1	; select bank1
  9597  0428  0843               	movf	(?___flsub+2)^(0+128),w
  9598  0429  0022               	movlb	2	; select bank2
  9599  042A  00B5               	movwf	(sprintf@fval+2)^(0+256)
  9600  042B  0021               	movlb	1	; select bank1
  9601  042C  0842               	movf	(?___flsub+1)^(0+128),w
  9602  042D  0022               	movlb	2	; select bank2
  9603  042E  00B4               	movwf	(sprintf@fval+1)^(0+256)
  9604  042F  0021               	movlb	1	; select bank1
  9605  0430  0841               	movf	?___flsub^(0+128),w
  9606  0431  0022               	movlb	2	; select bank2
  9607  0432  00B3               	movwf	sprintf@fval^(0+256)
  9608                           
  9609                           ;doprnt.c: 1133: exp = 0;
  9610  0433  01AD               	clrf	sprintf@exp^(0+256)
  9611  0434  01AE               	clrf	(sprintf@exp+1)^(0+256)
  9612  0435                     l8014:	
  9613                           
  9614                           ;doprnt.c: 1134: }
  9615                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9616  0435  01BA               	clrf	sprintf@c^(0+256)
  9617  0436  0ABA               	incf	sprintf@c^(0+256),f
  9618  0437  300A               	movlw	10
  9619  0438  063A               	xorwf	sprintf@c^(0+256),w
  9620  0439  1903               	btfsc	3,2
  9621  043A  2C72               	goto	l8026
  9622  043B                     l8020:	
  9623                           
  9624                           ;doprnt.c: 1137: if(val < dpowers[c])
  9625  043B  083A               	movf	sprintf@c^(0+256),w
  9626  043C  0021               	movlb	1	; select bank1
  9627  043D  00DB               	movwf	??_sprintf^(0+128)
  9628  043E  01DC               	clrf	(??_sprintf^(0+128)+1)
  9629  043F  35DB               	lslf	??_sprintf^(0+128),f
  9630  0440  0DDC               	rlf	(??_sprintf^(0+128)+1),f
  9631  0441  35DB               	lslf	??_sprintf^(0+128),f
  9632  0442  0DDC               	rlf	(??_sprintf^(0+128)+1),f
  9633  0443  309A               	movlw	low (_dpowers| (0+32768))
  9634  0444  075B               	addwf	??_sprintf^(0+128),w
  9635  0445  0084               	movwf	4
  9636  0446  30B0               	movlw	high (_dpowers| (0+32768))
  9637  0447  3D5C               	addwfc	(??_sprintf+1)^(0+128),w
  9638  0448  0085               	movwf	5
  9639  0449  3F00               	moviw [0]fsr0
  9640  044A  00DD               	movwf	(??_sprintf+2)^(0+128)
  9641  044B  3F01               	moviw [1]fsr0
  9642  044C  00DE               	movwf	((??_sprintf+2)^(0+128)+1)
  9643  044D  3F02               	moviw [2]fsr0
  9644  044E  00DF               	movwf	((??_sprintf+2)^(0+128)+2)
  9645  044F  3F03               	moviw [3]fsr0
  9646  0450  00E0               	movwf	((??_sprintf+2)^(0+128)+3)
  9647  0451  0860               	movf	(??_sprintf+5)^(0+128),w
  9648  0452  0022               	movlb	2	; select bank2
  9649  0453  022C               	subwf	(sprintf@val+3)^(0+256),w
  9650  0454  1D03               	skipz
  9651  0455  2C66               	goto	u11045
  9652  0456  0021               	movlb	1	; select bank1
  9653  0457  085F               	movf	(??_sprintf+4)^(0+128),w
  9654  0458  0022               	movlb	2	; select bank2
  9655  0459  022B               	subwf	(sprintf@val+2)^(0+256),w
  9656  045A  1D03               	skipz
  9657  045B  2C66               	goto	u11045
  9658  045C  0021               	movlb	1	; select bank1
  9659  045D  085E               	movf	(??_sprintf+3)^(0+128),w
  9660  045E  0022               	movlb	2	; select bank2
  9661  045F  022A               	subwf	(sprintf@val+1)^(0+256),w
  9662  0460  1D03               	skipz
  9663  0461  2C66               	goto	u11045
  9664  0462  0021               	movlb	1	; select bank1
  9665  0463  085D               	movf	(??_sprintf+2)^(0+128),w
  9666  0464  0022               	movlb	2	; select bank2
  9667  0465  0229               	subwf	sprintf@val^(0+256),w
  9668  0466                     u11045:	
  9669  0466  1C03               	btfss	3,0
  9670  0467  2C72               	goto	l8026
  9671                           
  9672                           ;doprnt.c: 1138: break;
  9673  0468  3001               	movlw	1
  9674  0469  0021               	movlb	1	; select bank1
  9675  046A  00DB               	movwf	??_sprintf^(0+128)
  9676  046B  085B               	movf	??_sprintf^(0+128),w
  9677  046C  0022               	movlb	2	; select bank2
  9678  046D  07BA               	addwf	sprintf@c^(0+256),f
  9679  046E  300A               	movlw	10
  9680  046F  063A               	xorwf	sprintf@c^(0+256),w
  9681  0470  1D03               	btfss	3,2
  9682  0471  2C3B               	goto	l8020
  9683  0472                     l8026:	
  9684                           
  9685                           ;doprnt.c: 1142: width -= prec + c + exp;
  9686  0472  083A               	movf	sprintf@c^(0+256),w
  9687  0473  0021               	movlb	1	; select bank1
  9688  0474  00DB               	movwf	??_sprintf^(0+128)
  9689  0475  01DC               	clrf	(??_sprintf^(0+128)+1)
  9690  0476  1BDB               	btfsc	??_sprintf^(0+128),7
  9691  0477  03DC               	decf	(??_sprintf^(0+128)+1),f
  9692  0478  0022               	movlb	2	; select bank2
  9693  0479  0837               	movf	sprintf@prec^(0+256),w
  9694  047A  0021               	movlb	1	; select bank1
  9695  047B  075B               	addwf	??_sprintf^(0+128),w
  9696  047C  00DD               	movwf	(??_sprintf+2)^(0+128)
  9697  047D  0022               	movlb	2	; select bank2
  9698  047E  0838               	movf	(sprintf@prec+1)^(0+256),w
  9699  047F  0021               	movlb	1	; select bank1
  9700  0480  3D5C               	addwfc	(??_sprintf+1)^(0+128),w
  9701  0481  00DE               	movwf	(??_sprintf+3)^(0+128)
  9702  0482  0022               	movlb	2	; select bank2
  9703  0483  082D               	movf	sprintf@exp^(0+256),w
  9704  0484  0021               	movlb	1	; select bank1
  9705  0485  075D               	addwf	(??_sprintf+2)^(0+128),w
  9706  0486  00DF               	movwf	(??_sprintf+4)^(0+128)
  9707  0487  0022               	movlb	2	; select bank2
  9708  0488  082E               	movf	(sprintf@exp+1)^(0+256),w
  9709  0489  0021               	movlb	1	; select bank1
  9710  048A  3D5E               	addwfc	(??_sprintf+3)^(0+128),w
  9711  048B  00E0               	movwf	(??_sprintf+5)^(0+128)
  9712  048C  085F               	movf	(??_sprintf+4)^(0+128),w
  9713  048D  0022               	movlb	2	; select bank2
  9714  048E  02B1               	subwf	sprintf@width^(0+256),f
  9715  048F  0021               	movlb	1	; select bank1
  9716  0490  0860               	movf	(??_sprintf+5)^(0+128),w
  9717  0491  0022               	movlb	2	; select bank2
  9718  0492  3BB2               	subwfb	(sprintf@width+1)^(0+256),f
  9719                           
  9720                           ;doprnt.c: 1143: if(
  9721                           ;doprnt.c: 1147: prec)
  9722  0493  0837               	movf	sprintf@prec^(0+256),w
  9723  0494  0438               	iorwf	(sprintf@prec+1)^(0+256),w
  9724  0495  1903               	btfsc	3,2
  9725  0496  2C9B               	goto	l8030
  9726                           
  9727                           ;doprnt.c: 1148: width--;
  9728  0497  30FF               	movlw	255
  9729  0498  07B1               	addwf	sprintf@width^(0+256),f
  9730  0499  30FF               	movlw	255
  9731  049A  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9732  049B                     l8030:	
  9733                           
  9734                           ;doprnt.c: 1149: if(flag & 0x03)
  9735  049B  3003               	movlw	3
  9736  049C  052F               	andwf	sprintf@flag^(0+256),w
  9737  049D  0021               	movlb	1	; select bank1
  9738  049E  00DB               	movwf	??_sprintf^(0+128)
  9739  049F  3000               	movlw	0
  9740  04A0  0022               	movlb	2	; select bank2
  9741  04A1  0530               	andwf	(sprintf@flag+1)^(0+256),w
  9742  04A2  0021               	movlb	1	; select bank1
  9743  04A3  00DC               	movwf	(??_sprintf+1)^(0+128)
  9744  04A4  085B               	movf	??_sprintf^(0+128),w
  9745  04A5  045C               	iorwf	(??_sprintf^(0+128)+1),w
  9746  04A6  1903               	btfsc	3,2
  9747  04A7  2CAD               	goto	l8034
  9748                           
  9749                           ;doprnt.c: 1150: width--;
  9750  04A8  30FF               	movlw	255
  9751  04A9  0022               	movlb	2	; select bank2
  9752  04AA  07B1               	addwf	sprintf@width^(0+256),f
  9753  04AB  30FF               	movlw	255
  9754  04AC  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9755  04AD                     l8034:	
  9756                           
  9757                           ;doprnt.c: 1153: if(flag & 0x04) {
  9758  04AD  0022               	movlb	2	; select bank2
  9759  04AE  1D2F               	btfss	sprintf@flag^(0+256),2
  9760  04AF  2D03               	goto	l8056
  9761                           
  9762                           ;doprnt.c: 1157: if(flag & 0x03)
  9763  04B0  3003               	movlw	3
  9764  04B1  052F               	andwf	sprintf@flag^(0+256),w
  9765  04B2  0021               	movlb	1	; select bank1
  9766  04B3  00DB               	movwf	??_sprintf^(0+128)
  9767  04B4  3000               	movlw	0
  9768  04B5  0022               	movlb	2	; select bank2
  9769  04B6  0530               	andwf	(sprintf@flag+1)^(0+256),w
  9770  04B7  0021               	movlb	1	; select bank1
  9771  04B8  00DC               	movwf	(??_sprintf+1)^(0+128)
  9772  04B9  085B               	movf	??_sprintf^(0+128),w
  9773  04BA  045C               	iorwf	(??_sprintf^(0+128)+1),w
  9774  04BB  1903               	btfsc	3,2
  9775  04BC  2CCC               	goto	l8048
  9776                           
  9777                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  9778  04BD  302D               	movlw	45
  9779  04BE  00DB               	movwf	??_sprintf^(0+128)
  9780  04BF  0022               	movlb	2	; select bank2
  9781  04C0  0839               	movf	sprintf@sp^(0+256),w
  9782  04C1  0086               	movwf	6
  9783  04C2  3002               	movlw	2	; select bank4/5
  9784  04C3  0087               	movwf	7
  9785  04C4  0021               	movlb	1	; select bank1
  9786  04C5  085B               	movf	??_sprintf^(0+128),w
  9787  04C6  0081               	movwf	1
  9788  04C7  3001               	movlw	1
  9789  04C8  00DB               	movwf	??_sprintf^(0+128)
  9790  04C9  085B               	movf	??_sprintf^(0+128),w
  9791  04CA  0022               	movlb	2	; select bank2
  9792  04CB  07B9               	addwf	sprintf@sp^(0+256),f
  9793  04CC                     l8048:	
  9794                           ;doprnt.c: 1168: while(width > 0) {
  9795                           
  9796  04CC  0022               	movlb	2	; select bank2
  9797  04CD  0832               	movf	(sprintf@width+1)^(0+256),w
  9798  04CE  3A80               	xorlw	128
  9799  04CF  0021               	movlb	1	; select bank1
  9800  04D0  00DB               	movwf	??_sprintf^(0+128)
  9801  04D1  3080               	movlw	128
  9802  04D2  025B               	subwf	??_sprintf^(0+128),w
  9803  04D3  1D03               	skipz
  9804  04D4  2CD8               	goto	u11105
  9805  04D5  3001               	movlw	1
  9806  04D6  0022               	movlb	2	; select bank2
  9807  04D7  0231               	subwf	sprintf@width^(0+256),w
  9808  04D8                     u11105:	
  9809  04D8  1C03               	btfss	3,0
  9810  04D9  2D2E               	goto	l8072
  9811                           
  9812                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  9813  04DA  3030               	movlw	48
  9814  04DB  0021               	movlb	1	; select bank1
  9815  04DC  00DB               	movwf	??_sprintf^(0+128)
  9816  04DD  0022               	movlb	2	; select bank2
  9817  04DE  0839               	movf	sprintf@sp^(0+256),w
  9818  04DF  0086               	movwf	6
  9819  04E0  3002               	movlw	2	; select bank4/5
  9820  04E1  0087               	movwf	7
  9821  04E2  0021               	movlb	1	; select bank1
  9822  04E3  085B               	movf	??_sprintf^(0+128),w
  9823  04E4  0081               	movwf	1
  9824  04E5  3001               	movlw	1
  9825  04E6  00DB               	movwf	??_sprintf^(0+128)
  9826  04E7  085B               	movf	??_sprintf^(0+128),w
  9827  04E8  0022               	movlb	2	; select bank2
  9828  04E9  07B9               	addwf	sprintf@sp^(0+256),f
  9829                           
  9830                           ;doprnt.c: 1170: width--;
  9831  04EA  30FF               	movlw	255
  9832  04EB  07B1               	addwf	sprintf@width^(0+256),f
  9833  04EC  30FF               	movlw	255
  9834  04ED  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9835  04EE  2CCC               	goto	l8048
  9836  04EF                     l8050:	
  9837                           ;doprnt.c: 1175: {
  9838                           ;doprnt.c: 1180: while(width > 0) {
  9839                           
  9840                           ;doprnt.c: 1171: }
  9841                           ;doprnt.c: 1173: } else
  9842                           
  9843                           
  9844                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9845  04EF  3020               	movlw	32
  9846  04F0  0021               	movlb	1	; select bank1
  9847  04F1  00DB               	movwf	??_sprintf^(0+128)
  9848  04F2  0022               	movlb	2	; select bank2
  9849  04F3  0839               	movf	sprintf@sp^(0+256),w
  9850  04F4  0086               	movwf	6
  9851  04F5  3002               	movlw	2	; select bank4/5
  9852  04F6  0087               	movwf	7
  9853  04F7  0021               	movlb	1	; select bank1
  9854  04F8  085B               	movf	??_sprintf^(0+128),w
  9855  04F9  0081               	movwf	1
  9856  04FA  3001               	movlw	1
  9857  04FB  00DB               	movwf	??_sprintf^(0+128)
  9858  04FC  085B               	movf	??_sprintf^(0+128),w
  9859  04FD  0022               	movlb	2	; select bank2
  9860  04FE  07B9               	addwf	sprintf@sp^(0+256),f
  9861                           
  9862                           ;doprnt.c: 1182: width--;
  9863  04FF  30FF               	movlw	255
  9864  0500  07B1               	addwf	sprintf@width^(0+256),f
  9865  0501  30FF               	movlw	255
  9866  0502  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9867  0503                     l8056:	
  9868  0503  0022               	movlb	2	; select bank2
  9869  0504  0832               	movf	(sprintf@width+1)^(0+256),w
  9870  0505  3A80               	xorlw	128
  9871  0506  0021               	movlb	1	; select bank1
  9872  0507  00DB               	movwf	??_sprintf^(0+128)
  9873  0508  3080               	movlw	128
  9874  0509  025B               	subwf	??_sprintf^(0+128),w
  9875  050A  1D03               	skipz
  9876  050B  2D0F               	goto	u11115
  9877  050C  3001               	movlw	1
  9878  050D  0022               	movlb	2	; select bank2
  9879  050E  0231               	subwf	sprintf@width^(0+256),w
  9880  050F                     u11115:	
  9881  050F  1803               	skipnc
  9882  0510  2CEF               	goto	l8050
  9883                           
  9884                           ;doprnt.c: 1183: }
  9885                           ;doprnt.c: 1188: if(flag & 0x03)
  9886  0511  3003               	movlw	3
  9887  0512  0022               	movlb	2	; select bank2
  9888  0513  052F               	andwf	sprintf@flag^(0+256),w
  9889  0514  0021               	movlb	1	; select bank1
  9890  0515  00DB               	movwf	??_sprintf^(0+128)
  9891  0516  3000               	movlw	0
  9892  0517  0022               	movlb	2	; select bank2
  9893  0518  0530               	andwf	(sprintf@flag+1)^(0+256),w
  9894  0519  0021               	movlb	1	; select bank1
  9895  051A  00DC               	movwf	(??_sprintf+1)^(0+128)
  9896  051B  085B               	movf	??_sprintf^(0+128),w
  9897  051C  045C               	iorwf	(??_sprintf^(0+128)+1),w
  9898  051D  1903               	btfsc	3,2
  9899  051E  2D2E               	goto	l8072
  9900                           
  9901                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9902  051F  302D               	movlw	45
  9903  0520                     L8:	
  9904  0520  00DB               	movwf	??_sprintf^(0+128)
  9905  0521  0022               	movlb	2	; select bank2
  9906  0522  0839               	movf	sprintf@sp^(0+256),w
  9907  0523  0086               	movwf	6
  9908  0524  3002               	movlw	2	; select bank4/5
  9909  0525  0087               	movwf	7
  9910  0526  0021               	movlb	1	; select bank1
  9911  0527  085B               	movf	??_sprintf^(0+128),w
  9912  0528  0081               	movwf	1
  9913  0529  3001               	movlw	1
  9914  052A  00DB               	movwf	??_sprintf^(0+128)
  9915  052B  085B               	movf	??_sprintf^(0+128),w
  9916  052C  0022               	movlb	2	; select bank2
  9917  052D  07B9               	addwf	sprintf@sp^(0+256),f
  9918  052E                     l8072:	
  9919  052E  30FF               	movlw	255
  9920  052F  0021               	movlb	1	; select bank1
  9921  0530  00DB               	movwf	??_sprintf^(0+128)
  9922  0531  085B               	movf	??_sprintf^(0+128),w
  9923  0532  0022               	movlb	2	; select bank2
  9924  0533  07BA               	addwf	sprintf@c^(0+256),f
  9925  0534  0A3A               	incf	sprintf@c^(0+256),w
  9926  0535  1903               	btfsc	3,2
  9927  0536  2DA6               	goto	l8080
  9928                           
  9929                           ;doprnt.c: 1200: {
  9930                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9931                           
  9932                           ;doprnt.c: 1195: }
  9933                           ;doprnt.c: 1196: while(c--) {
  9934  0537  083A               	movf	sprintf@c^(0+256),w
  9935  0538  0021               	movlb	1	; select bank1
  9936  0539  00DB               	movwf	??_sprintf^(0+128)
  9937  053A  01DC               	clrf	(??_sprintf^(0+128)+1)
  9938  053B  35DB               	lslf	??_sprintf^(0+128),f
  9939  053C  0DDC               	rlf	(??_sprintf^(0+128)+1),f
  9940  053D  35DB               	lslf	??_sprintf^(0+128),f
  9941  053E  0DDC               	rlf	(??_sprintf^(0+128)+1),f
  9942  053F  309A               	movlw	low (_dpowers| (0+32768))
  9943  0540  075B               	addwf	??_sprintf^(0+128),w
  9944  0541  0084               	movwf	4
  9945  0542  30B0               	movlw	high (_dpowers| (0+32768))
  9946  0543  3D5C               	addwfc	(??_sprintf+1)^(0+128),w
  9947  0544  0085               	movwf	5
  9948  0545  3F00               	moviw [0]fsr0
  9949  0546  00F2               	movwf	___lldiv@divisor
  9950  0547  3F01               	moviw [1]fsr0
  9951  0548  00F3               	movwf	___lldiv@divisor+1
  9952  0549  3F02               	moviw [2]fsr0
  9953  054A  00F4               	movwf	___lldiv@divisor+2
  9954  054B  3F03               	moviw [3]fsr0
  9955  054C  00F5               	movwf	___lldiv@divisor+3
  9956  054D  0022               	movlb	2	; select bank2
  9957  054E  082C               	movf	(sprintf@val+3)^(0+256),w
  9958  054F  00F9               	movwf	___lldiv@dividend+3
  9959  0550  082B               	movf	(sprintf@val+2)^(0+256),w
  9960  0551  00F8               	movwf	___lldiv@dividend+2
  9961  0552  082A               	movf	(sprintf@val+1)^(0+256),w
  9962  0553  00F7               	movwf	___lldiv@dividend+1
  9963  0554  0829               	movf	sprintf@val^(0+256),w
  9964  0555  00F6               	movwf	___lldiv@dividend
  9965  0556  31AB  23FF  3180   	fcall	___lldiv
  9966  0559  0875               	movf	?___lldiv+3,w
  9967  055A  0022               	movlb	2	; select bank2
  9968  055B  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9969  055C  0874               	movf	?___lldiv+2,w
  9970  055D  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9971  055E  0873               	movf	?___lldiv+1,w
  9972  055F  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9973  0560  0872               	movf	?___lldiv,w
  9974  0561  00A5               	movwf	sprintf@tmpval^(0+256)
  9975                           
  9976                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9977  0562  3000               	movlw	0
  9978  0563  0020               	movlb	0	; select bank0
  9979  0564  00A9               	movwf	___llmod@divisor+3
  9980  0565  3000               	movlw	0
  9981  0566  00A8               	movwf	___llmod@divisor+2
  9982  0567  3000               	movlw	0
  9983  0568  00A7               	movwf	___llmod@divisor+1
  9984  0569  300A               	movlw	10
  9985  056A  00A6               	movwf	___llmod@divisor
  9986  056B  0022               	movlb	2	; select bank2
  9987  056C  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9988  056D  0020               	movlb	0	; select bank0
  9989  056E  00AD               	movwf	___llmod@dividend+3
  9990  056F  0022               	movlb	2	; select bank2
  9991  0570  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9992  0571  0020               	movlb	0	; select bank0
  9993  0572  00AC               	movwf	___llmod@dividend+2
  9994  0573  0022               	movlb	2	; select bank2
  9995  0574  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9996  0575  0020               	movlb	0	; select bank0
  9997  0576  00AB               	movwf	___llmod@dividend+1
  9998  0577  0022               	movlb	2	; select bank2
  9999  0578  0825               	movf	sprintf@tmpval^(0+256),w
 10000  0579  0020               	movlb	0	; select bank0
 10001  057A  00AA               	movwf	___llmod@dividend
 10002  057B  31AA  2241  3180   	fcall	___llmod
 10003  057E  0020               	movlb	0	; select bank0
 10004  057F  0829               	movf	?___llmod+3,w
 10005  0580  0022               	movlb	2	; select bank2
 10006  0581  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
 10007  0582  0020               	movlb	0	; select bank0
 10008  0583  0828               	movf	?___llmod+2,w
 10009  0584  0022               	movlb	2	; select bank2
 10010  0585  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
 10011  0586  0020               	movlb	0	; select bank0
 10012  0587  0827               	movf	?___llmod+1,w
 10013  0588  0022               	movlb	2	; select bank2
 10014  0589  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
 10015  058A  0020               	movlb	0	; select bank0
 10016  058B  0826               	movf	?___llmod,w
 10017  058C  0022               	movlb	2	; select bank2
 10018  058D  00A5               	movwf	sprintf@tmpval^(0+256)
 10019                           
 10020                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
 10021  058E  0825               	movf	sprintf@tmpval^(0+256),w
 10022  058F  3E30               	addlw	48
 10023  0590  0021               	movlb	1	; select bank1
 10024  0591  2D20               	goto	L8
 10025  0592                     l8074:	
 10026                           ;doprnt.c: 1204: }
 10027                           ;doprnt.c: 1206: }
 10028                           ;doprnt.c: 1207: while(exp > 0) {
 10029                           
 10030                           
 10031                           ;doprnt.c: 1208: ((*sp++ = ('0')));
 10032  0592  3030               	movlw	48
 10033  0593  0021               	movlb	1	; select bank1
 10034  0594  00DB               	movwf	??_sprintf^(0+128)
 10035  0595  0022               	movlb	2	; select bank2
 10036  0596  0839               	movf	sprintf@sp^(0+256),w
 10037  0597  0086               	movwf	6
 10038  0598  3002               	movlw	2	; select bank4/5
 10039  0599  0087               	movwf	7
 10040  059A  0021               	movlb	1	; select bank1
 10041  059B  085B               	movf	??_sprintf^(0+128),w
 10042  059C  0081               	movwf	1
 10043  059D  3001               	movlw	1
 10044  059E  00DB               	movwf	??_sprintf^(0+128)
 10045  059F  085B               	movf	??_sprintf^(0+128),w
 10046  05A0  0022               	movlb	2	; select bank2
 10047  05A1  07B9               	addwf	sprintf@sp^(0+256),f
 10048                           
 10049                           ;doprnt.c: 1209: exp--;
 10050  05A2  30FF               	movlw	255
 10051  05A3  07AD               	addwf	sprintf@exp^(0+256),f
 10052  05A4  30FF               	movlw	255
 10053  05A5  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
 10054  05A6                     l8080:	
 10055  05A6  082E               	movf	(sprintf@exp+1)^(0+256),w
 10056  05A7  3A80               	xorlw	128
 10057  05A8  0021               	movlb	1	; select bank1
 10058  05A9  00DB               	movwf	??_sprintf^(0+128)
 10059  05AA  3080               	movlw	128
 10060  05AB  025B               	subwf	??_sprintf^(0+128),w
 10061  05AC  1D03               	skipz
 10062  05AD  2DB1               	goto	u11145
 10063  05AE  3001               	movlw	1
 10064  05AF  0022               	movlb	2	; select bank2
 10065  05B0  022D               	subwf	sprintf@exp^(0+256),w
 10066  05B1                     u11145:	
 10067  05B1  1803               	skipnc
 10068  05B2  2D92               	goto	l8074
 10069                           
 10070                           ;doprnt.c: 1210: }
 10071                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10072  05B3  0022               	movlb	2	; select bank2
 10073  05B4  0838               	movf	(sprintf@prec+1)^(0+256),w
 10074  05B5  3A80               	xorlw	128
 10075  05B6  0021               	movlb	1	; select bank1
 10076  05B7  00DB               	movwf	??_sprintf^(0+128)
 10077  05B8  3080               	movlw	128
 10078  05B9  025B               	subwf	??_sprintf^(0+128),w
 10079  05BA  1D03               	skipz
 10080  05BB  2DBF               	goto	u11155
 10081  05BC  3009               	movlw	9
 10082  05BD  0022               	movlb	2	; select bank2
 10083  05BE  0237               	subwf	sprintf@prec^(0+256),w
 10084  05BF                     u11155:	
 10085  05BF  1C03               	skipc
 10086  05C0  2DC3               	goto	l8086
 10087                           
 10088                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 10089  05C1  3008               	movlw	8
 10090  05C2  2DC5               	goto	L5
 10091  05C3                     l8086:	
 10092                           
 10093                           ;doprnt.c: 1213: else
 10094                           ;doprnt.c: 1214: c = prec;
 10095  05C3  0022               	movlb	2	; select bank2
 10096  05C4  0837               	movf	sprintf@prec^(0+256),w
 10097  05C5                     L5:	
 10098  05C5  0021               	movlb	1	; select bank1
 10099  05C6  00DB               	movwf	??_sprintf^(0+128)
 10100  05C7  085B               	movf	??_sprintf^(0+128),w
 10101  05C8  0022               	movlb	2	; select bank2
 10102  05C9  00BA               	movwf	sprintf@c^(0+256)
 10103                           
 10104                           ;doprnt.c: 1215: prec -= c;
 10105  05CA  083A               	movf	sprintf@c^(0+256),w
 10106  05CB  0021               	movlb	1	; select bank1
 10107  05CC  00DB               	movwf	??_sprintf^(0+128)
 10108  05CD  01DC               	clrf	(??_sprintf^(0+128)+1)
 10109  05CE  1BDB               	btfsc	??_sprintf^(0+128),7
 10110  05CF  03DC               	decf	(??_sprintf^(0+128)+1),f
 10111  05D0  085B               	movf	??_sprintf^(0+128),w
 10112  05D1  0022               	movlb	2	; select bank2
 10113  05D2  02B7               	subwf	sprintf@prec^(0+256),f
 10114  05D3  0021               	movlb	1	; select bank1
 10115  05D4  085C               	movf	(??_sprintf+1)^(0+128),w
 10116  05D5  0022               	movlb	2	; select bank2
 10117  05D6  3BB8               	subwfb	(sprintf@prec+1)^(0+256),f
 10118                           
 10119                           ;doprnt.c: 1219: if(c)
 10120  05D7  083A               	movf	sprintf@c^(0+256),w
 10121  05D8  1903               	btfsc	3,2
 10122  05D9  2DEA               	goto	l8094
 10123                           
 10124                           ;doprnt.c: 1221: ((*sp++ = ('.')));
 10125  05DA  302E               	movlw	46
 10126  05DB  0021               	movlb	1	; select bank1
 10127  05DC  00DB               	movwf	??_sprintf^(0+128)
 10128  05DD  0022               	movlb	2	; select bank2
 10129  05DE  0839               	movf	sprintf@sp^(0+256),w
 10130  05DF  0086               	movwf	6
 10131  05E0  3002               	movlw	2	; select bank4/5
 10132  05E1  0087               	movwf	7
 10133  05E2  0021               	movlb	1	; select bank1
 10134  05E3  085B               	movf	??_sprintf^(0+128),w
 10135  05E4  0081               	movwf	1
 10136  05E5  3001               	movlw	1
 10137  05E6  00DB               	movwf	??_sprintf^(0+128)
 10138  05E7  085B               	movf	??_sprintf^(0+128),w
 10139  05E8  0022               	movlb	2	; select bank2
 10140  05E9  07B9               	addwf	sprintf@sp^(0+256),f
 10141  05EA                     l8094:	
 10142                           
 10143                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10144  05EA  083A               	movf	sprintf@c^(0+256),w
 10145  05EB  318D  2570  3180   	fcall	_scale
 10146  05EE  0020               	movlb	0	; select bank0
 10147  05EF  0855               	movf	?_scale+3,w
 10148  05F0  0022               	movlb	2	; select bank2
 10149  05F1  00A3               	movwf	(_sprintf$2190+3)^(0+256)
 10150  05F2  0020               	movlb	0	; select bank0
 10151  05F3  0854               	movf	?_scale+2,w
 10152  05F4  0022               	movlb	2	; select bank2
 10153  05F5  00A2               	movwf	(_sprintf$2190+2)^(0+256)
 10154  05F6  0020               	movlb	0	; select bank0
 10155  05F7  0853               	movf	?_scale+1,w
 10156  05F8  0022               	movlb	2	; select bank2
 10157  05F9  00A1               	movwf	(_sprintf$2190+1)^(0+256)
 10158  05FA  0020               	movlb	0	; select bank0
 10159  05FB  0852               	movf	?_scale,w
 10160  05FC  0022               	movlb	2	; select bank2
 10161  05FD  00A0               	movwf	_sprintf$2190^(0+256)
 10162                           
 10163                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10164  05FE  0823               	movf	(_sprintf$2190+3)^(0+256),w
 10165  05FF  0020               	movlb	0	; select bank0
 10166  0600  00BF               	movwf	___flmul@a+3
 10167  0601  0022               	movlb	2	; select bank2
 10168  0602  0822               	movf	(_sprintf$2190+2)^(0+256),w
 10169  0603  0020               	movlb	0	; select bank0
 10170  0604  00BE               	movwf	___flmul@a+2
 10171  0605  0022               	movlb	2	; select bank2
 10172  0606  0821               	movf	(_sprintf$2190+1)^(0+256),w
 10173  0607  0020               	movlb	0	; select bank0
 10174  0608  00BD               	movwf	___flmul@a+1
 10175  0609  0022               	movlb	2	; select bank2
 10176  060A  0820               	movf	_sprintf$2190^(0+256),w
 10177  060B  0020               	movlb	0	; select bank0
 10178  060C  00BC               	movwf	___flmul@a
 10179  060D  0022               	movlb	2	; select bank2
 10180  060E  0836               	movf	(sprintf@fval+3)^(0+256),w
 10181  060F  0020               	movlb	0	; select bank0
 10182  0610  00BB               	movwf	___flmul@b+3
 10183  0611  0022               	movlb	2	; select bank2
 10184  0612  0835               	movf	(sprintf@fval+2)^(0+256),w
 10185  0613  0020               	movlb	0	; select bank0
 10186  0614  00BA               	movwf	___flmul@b+2
 10187  0615  0022               	movlb	2	; select bank2
 10188  0616  0834               	movf	(sprintf@fval+1)^(0+256),w
 10189  0617  0020               	movlb	0	; select bank0
 10190  0618  00B9               	movwf	___flmul@b+1
 10191  0619  0022               	movlb	2	; select bank2
 10192  061A  0833               	movf	sprintf@fval^(0+256),w
 10193  061B  0020               	movlb	0	; select bank0
 10194  061C  00B8               	movwf	___flmul@b
 10195  061D  3195  25D4  3180   	fcall	___flmul
 10196  0620  0020               	movlb	0	; select bank0
 10197  0621  083B               	movf	?___flmul+3,w
 10198  0622  00EE               	movwf	___fltol@f1+3
 10199  0623  083A               	movf	?___flmul+2,w
 10200  0624  00ED               	movwf	___fltol@f1+2
 10201  0625  0839               	movf	?___flmul+1,w
 10202  0626  00EC               	movwf	___fltol@f1+1
 10203  0627  0838               	movf	?___flmul,w
 10204  0628  00EB               	movwf	___fltol@f1
 10205  0629  31A0  2019  3180   	fcall	___fltol
 10206  062C  0020               	movlb	0	; select bank0
 10207  062D  086E               	movf	?___fltol+3,w
 10208  062E  0022               	movlb	2	; select bank2
 10209  062F  00AC               	movwf	(sprintf@val+3)^(0+256)
 10210  0630  0020               	movlb	0	; select bank0
 10211  0631  086D               	movf	?___fltol+2,w
 10212  0632  0022               	movlb	2	; select bank2
 10213  0633  00AB               	movwf	(sprintf@val+2)^(0+256)
 10214  0634  0020               	movlb	0	; select bank0
 10215  0635  086C               	movf	?___fltol+1,w
 10216  0636  0022               	movlb	2	; select bank2
 10217  0637  00AA               	movwf	(sprintf@val+1)^(0+256)
 10218  0638  0020               	movlb	0	; select bank0
 10219  0639  086B               	movf	?___fltol,w
 10220  063A                     L6:	
 10221  063A  0022               	movlb	2	; select bank2
 10222  063B  00A9               	movwf	sprintf@val^(0+256)
 10223  063C  30FF               	movlw	255
 10224  063D  0021               	movlb	1	; select bank1
 10225  063E  00DB               	movwf	??_sprintf^(0+128)
 10226  063F  085B               	movf	??_sprintf^(0+128),w
 10227  0640  0022               	movlb	2	; select bank2
 10228  0641  07BA               	addwf	sprintf@c^(0+256),f
 10229  0642  0A3A               	incf	sprintf@c^(0+256),w
 10230  0643  1903               	btfsc	3,2
 10231  0644  2EFA               	goto	l8116
 10232                           
 10233                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10234                           
 10235                           ;doprnt.c: 1228: while(c--) {
 10236  0645  083A               	movf	sprintf@c^(0+256),w
 10237  0646  0021               	movlb	1	; select bank1
 10238  0647  00DB               	movwf	??_sprintf^(0+128)
 10239  0648  01DC               	clrf	(??_sprintf^(0+128)+1)
 10240  0649  35DB               	lslf	??_sprintf^(0+128),f
 10241  064A  0DDC               	rlf	(??_sprintf^(0+128)+1),f
 10242  064B  35DB               	lslf	??_sprintf^(0+128),f
 10243  064C  0DDC               	rlf	(??_sprintf^(0+128)+1),f
 10244  064D  309A               	movlw	low (_dpowers| (0+32768))
 10245  064E  075B               	addwf	??_sprintf^(0+128),w
 10246  064F  0084               	movwf	4
 10247  0650  30B0               	movlw	high (_dpowers| (0+32768))
 10248  0651  3D5C               	addwfc	(??_sprintf+1)^(0+128),w
 10249  0652  0085               	movwf	5
 10250  0653  3F00               	moviw [0]fsr0
 10251  0654  00F2               	movwf	___lldiv@divisor
 10252  0655  3F01               	moviw [1]fsr0
 10253  0656  00F3               	movwf	___lldiv@divisor+1
 10254  0657  3F02               	moviw [2]fsr0
 10255  0658  00F4               	movwf	___lldiv@divisor+2
 10256  0659  3F03               	moviw [3]fsr0
 10257  065A  00F5               	movwf	___lldiv@divisor+3
 10258  065B  0022               	movlb	2	; select bank2
 10259  065C  082C               	movf	(sprintf@val+3)^(0+256),w
 10260  065D  00F9               	movwf	___lldiv@dividend+3
 10261  065E  082B               	movf	(sprintf@val+2)^(0+256),w
 10262  065F  00F8               	movwf	___lldiv@dividend+2
 10263  0660  082A               	movf	(sprintf@val+1)^(0+256),w
 10264  0661  00F7               	movwf	___lldiv@dividend+1
 10265  0662  0829               	movf	sprintf@val^(0+256),w
 10266  0663  00F6               	movwf	___lldiv@dividend
 10267  0664  31AB  23FF  3180   	fcall	___lldiv
 10268  0667  0875               	movf	?___lldiv+3,w
 10269  0668  0022               	movlb	2	; select bank2
 10270  0669  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
 10271  066A  0874               	movf	?___lldiv+2,w
 10272  066B  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
 10273  066C  0873               	movf	?___lldiv+1,w
 10274  066D  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
 10275  066E  0872               	movf	?___lldiv,w
 10276  066F  00A5               	movwf	sprintf@tmpval^(0+256)
 10277                           
 10278                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10279  0670  3000               	movlw	0
 10280  0671  0020               	movlb	0	; select bank0
 10281  0672  00A9               	movwf	___llmod@divisor+3
 10282  0673  3000               	movlw	0
 10283  0674  00A8               	movwf	___llmod@divisor+2
 10284  0675  3000               	movlw	0
 10285  0676  00A7               	movwf	___llmod@divisor+1
 10286  0677  300A               	movlw	10
 10287  0678  00A6               	movwf	___llmod@divisor
 10288  0679  0022               	movlb	2	; select bank2
 10289  067A  0828               	movf	(sprintf@tmpval+3)^(0+256),w
 10290  067B  0020               	movlb	0	; select bank0
 10291  067C  00AD               	movwf	___llmod@dividend+3
 10292  067D  0022               	movlb	2	; select bank2
 10293  067E  0827               	movf	(sprintf@tmpval+2)^(0+256),w
 10294  067F  0020               	movlb	0	; select bank0
 10295  0680  00AC               	movwf	___llmod@dividend+2
 10296  0681  0022               	movlb	2	; select bank2
 10297  0682  0826               	movf	(sprintf@tmpval+1)^(0+256),w
 10298  0683  0020               	movlb	0	; select bank0
 10299  0684  00AB               	movwf	___llmod@dividend+1
 10300  0685  0022               	movlb	2	; select bank2
 10301  0686  0825               	movf	sprintf@tmpval^(0+256),w
 10302  0687  0020               	movlb	0	; select bank0
 10303  0688  00AA               	movwf	___llmod@dividend
 10304  0689  31AA  2241  3180   	fcall	___llmod
 10305  068C  0020               	movlb	0	; select bank0
 10306  068D  0829               	movf	?___llmod+3,w
 10307  068E  0022               	movlb	2	; select bank2
 10308  068F  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
 10309  0690  0020               	movlb	0	; select bank0
 10310  0691  0828               	movf	?___llmod+2,w
 10311  0692  0022               	movlb	2	; select bank2
 10312  0693  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
 10313  0694  0020               	movlb	0	; select bank0
 10314  0695  0827               	movf	?___llmod+1,w
 10315  0696  0022               	movlb	2	; select bank2
 10316  0697  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
 10317  0698  0020               	movlb	0	; select bank0
 10318  0699  0826               	movf	?___llmod,w
 10319  069A  0022               	movlb	2	; select bank2
 10320  069B  00A5               	movwf	sprintf@tmpval^(0+256)
 10321                           
 10322                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
 10323  069C  0825               	movf	sprintf@tmpval^(0+256),w
 10324  069D  3E30               	addlw	48
 10325  069E  0021               	movlb	1	; select bank1
 10326  069F  00DB               	movwf	??_sprintf^(0+128)
 10327  06A0  0022               	movlb	2	; select bank2
 10328  06A1  0839               	movf	sprintf@sp^(0+256),w
 10329  06A2  0086               	movwf	6
 10330  06A3  3002               	movlw	2	; select bank4/5
 10331  06A4  0087               	movwf	7
 10332  06A5  0021               	movlb	1	; select bank1
 10333  06A6  085B               	movf	??_sprintf^(0+128),w
 10334  06A7  0081               	movwf	1
 10335  06A8  3001               	movlw	1
 10336  06A9  00DB               	movwf	??_sprintf^(0+128)
 10337  06AA  085B               	movf	??_sprintf^(0+128),w
 10338  06AB  0022               	movlb	2	; select bank2
 10339  06AC  07B9               	addwf	sprintf@sp^(0+256),f
 10340                           
 10341                           ;doprnt.c: 1232: val %= dpowers[c];
 10342  06AD  083A               	movf	sprintf@c^(0+256),w
 10343  06AE  0021               	movlb	1	; select bank1
 10344  06AF  00DB               	movwf	??_sprintf^(0+128)
 10345  06B0  01DC               	clrf	(??_sprintf^(0+128)+1)
 10346  06B1  35DB               	lslf	??_sprintf^(0+128),f
 10347  06B2  0DDC               	rlf	(??_sprintf^(0+128)+1),f
 10348  06B3  35DB               	lslf	??_sprintf^(0+128),f
 10349  06B4  0DDC               	rlf	(??_sprintf^(0+128)+1),f
 10350  06B5  309A               	movlw	low (_dpowers| (0+32768))
 10351  06B6  075B               	addwf	??_sprintf^(0+128),w
 10352  06B7  0084               	movwf	4
 10353  06B8  30B0               	movlw	high (_dpowers| (0+32768))
 10354  06B9  3D5C               	addwfc	(??_sprintf+1)^(0+128),w
 10355  06BA  0085               	movwf	5
 10356  06BB  3F00               	moviw [0]fsr0
 10357  06BC  0020               	movlb	0	; select bank0
 10358  06BD  00A6               	movwf	___llmod@divisor
 10359  06BE  3F01               	moviw [1]fsr0
 10360  06BF  00A7               	movwf	___llmod@divisor+1
 10361  06C0  3F02               	moviw [2]fsr0
 10362  06C1  00A8               	movwf	___llmod@divisor+2
 10363  06C2  3F03               	moviw [3]fsr0
 10364  06C3  00A9               	movwf	___llmod@divisor+3
 10365  06C4  0022               	movlb	2	; select bank2
 10366  06C5  082C               	movf	(sprintf@val+3)^(0+256),w
 10367  06C6  0020               	movlb	0	; select bank0
 10368  06C7  00AD               	movwf	___llmod@dividend+3
 10369  06C8  0022               	movlb	2	; select bank2
 10370  06C9  082B               	movf	(sprintf@val+2)^(0+256),w
 10371  06CA  0020               	movlb	0	; select bank0
 10372  06CB  00AC               	movwf	___llmod@dividend+2
 10373  06CC  0022               	movlb	2	; select bank2
 10374  06CD  082A               	movf	(sprintf@val+1)^(0+256),w
 10375  06CE  0020               	movlb	0	; select bank0
 10376  06CF  00AB               	movwf	___llmod@dividend+1
 10377  06D0  0022               	movlb	2	; select bank2
 10378  06D1  0829               	movf	sprintf@val^(0+256),w
 10379  06D2  0020               	movlb	0	; select bank0
 10380  06D3  00AA               	movwf	___llmod@dividend
 10381  06D4  31AA  2241  3180   	fcall	___llmod
 10382  06D7  0020               	movlb	0	; select bank0
 10383  06D8  0829               	movf	?___llmod+3,w
 10384  06D9  0022               	movlb	2	; select bank2
 10385  06DA  00AC               	movwf	(sprintf@val+3)^(0+256)
 10386  06DB  0020               	movlb	0	; select bank0
 10387  06DC  0828               	movf	?___llmod+2,w
 10388  06DD  0022               	movlb	2	; select bank2
 10389  06DE  00AB               	movwf	(sprintf@val+2)^(0+256)
 10390  06DF  0020               	movlb	0	; select bank0
 10391  06E0  0827               	movf	?___llmod+1,w
 10392  06E1  0022               	movlb	2	; select bank2
 10393  06E2  00AA               	movwf	(sprintf@val+1)^(0+256)
 10394  06E3  0020               	movlb	0	; select bank0
 10395  06E4  0826               	movf	?___llmod,w
 10396  06E5  2E3A               	goto	L6
 10397  06E6                     l8110:	
 10398                           ;doprnt.c: 1233: }
 10399                           ;doprnt.c: 1235: while(prec) {
 10400                           
 10401                           
 10402                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 10403  06E6  3030               	movlw	48
 10404  06E7  0021               	movlb	1	; select bank1
 10405  06E8  00DB               	movwf	??_sprintf^(0+128)
 10406  06E9  0022               	movlb	2	; select bank2
 10407  06EA  0839               	movf	sprintf@sp^(0+256),w
 10408  06EB  0086               	movwf	6
 10409  06EC  3002               	movlw	2	; select bank4/5
 10410  06ED  0087               	movwf	7
 10411  06EE  0021               	movlb	1	; select bank1
 10412  06EF  085B               	movf	??_sprintf^(0+128),w
 10413  06F0  0081               	movwf	1
 10414  06F1  3001               	movlw	1
 10415  06F2  00DB               	movwf	??_sprintf^(0+128)
 10416  06F3  085B               	movf	??_sprintf^(0+128),w
 10417  06F4  0022               	movlb	2	; select bank2
 10418  06F5  07B9               	addwf	sprintf@sp^(0+256),f
 10419                           
 10420                           ;doprnt.c: 1237: prec--;
 10421  06F6  30FF               	movlw	255
 10422  06F7  07B7               	addwf	sprintf@prec^(0+256),f
 10423  06F8  30FF               	movlw	255
 10424  06F9  3DB8               	addwfc	(sprintf@prec+1)^(0+256),f
 10425  06FA                     l8116:	
 10426  06FA  0837               	movf	sprintf@prec^(0+256),w
 10427  06FB  0438               	iorwf	(sprintf@prec+1)^(0+256),w
 10428  06FC  1903               	btfsc	3,2
 10429  06FD  28BB               	goto	l8210
 10430  06FE  2EE6               	goto	l8110
 10431  06FF                     l8118:	
 10432                           ;doprnt.c: 1238: }
 10433                           ;doprnt.c: 1245: continue;
 10434                           
 10435                           
 10436                           ;doprnt.c: 1246: }
 10437                           ;doprnt.c: 1253: {
 10438                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10439  06FF  0022               	movlb	2	; select bank2
 10440  0700  0824               	movf	sprintf@ap^(0+256),w
 10441  0701  0086               	movwf	6
 10442  0702  0187               	clrf	7
 10443  0703  3F40               	moviw [0]fsr1
 10444  0704  0021               	movlb	1	; select bank1
 10445  0705  00DB               	movwf	??_sprintf^(0+128)
 10446  0706  3F41               	moviw [1]fsr1
 10447  0707  00DC               	movwf	(??_sprintf^(0+128)+1)
 10448  0708  085B               	movf	??_sprintf^(0+128),w
 10449  0709  0022               	movlb	2	; select bank2
 10450  070A  00A9               	movwf	sprintf@val^(0+256)
 10451  070B  0021               	movlb	1	; select bank1
 10452  070C  085C               	movf	(??_sprintf+1)^(0+128),w
 10453  070D  0022               	movlb	2	; select bank2
 10454  070E  00AA               	movwf	(sprintf@val+1)^(0+256)
 10455  070F  0D89               	rlf	9,f
 10456  0710  3B89               	subwfb	9,f
 10457  0711  0989               	comf	9,f
 10458  0712  00AB               	movwf	(sprintf@val+2)^(0+256)
 10459  0713  00AC               	movwf	(sprintf@val+3)^(0+256)
 10460  0714  3002               	movlw	2
 10461  0715  0021               	movlb	1	; select bank1
 10462  0716  00DB               	movwf	??_sprintf^(0+128)
 10463  0717  085B               	movf	??_sprintf^(0+128),w
 10464  0718  0022               	movlb	2	; select bank2
 10465  0719  07A4               	addwf	sprintf@ap^(0+256),f
 10466                           
 10467                           ;doprnt.c: 1261: if((long)val < 0) {
 10468  071A  1FAC               	btfss	(sprintf@val+3)^(0+256),7
 10469  071B  2F2B               	goto	l8128
 10470                           
 10471                           ;doprnt.c: 1262: flag |= 0x03;
 10472  071C  3003               	movlw	3
 10473  071D  04AF               	iorwf	sprintf@flag^(0+256),f
 10474  071E  3000               	movlw	0
 10475  071F  04B0               	iorwf	(sprintf@flag+1)^(0+256),f
 10476                           
 10477                           ;doprnt.c: 1263: val = -val;
 10478  0720  09A9               	comf	sprintf@val^(0+256),f
 10479  0721  09AA               	comf	(sprintf@val+1)^(0+256),f
 10480  0722  09AB               	comf	(sprintf@val+2)^(0+256),f
 10481  0723  09AC               	comf	(sprintf@val+3)^(0+256),f
 10482  0724  0AA9               	incf	sprintf@val^(0+256),f
 10483  0725  1903               	skipnz
 10484  0726  0AAA               	incf	(sprintf@val+1)^(0+256),f
 10485  0727  1903               	skipnz
 10486  0728  0AAB               	incf	(sprintf@val+2)^(0+256),f
 10487  0729  1903               	skipnz
 10488  072A  0AAC               	incf	(sprintf@val+3)^(0+256),f
 10489  072B                     l8128:	
 10490                           
 10491                           ;doprnt.c: 1264: }
 10492                           ;doprnt.c: 1266: }
 10493                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10494  072B  0837               	movf	sprintf@prec^(0+256),w
 10495  072C  0438               	iorwf	(sprintf@prec+1)^(0+256),w
 10496  072D  1D03               	btfss	3,2
 10497  072E  2F39               	goto	l8134
 10498  072F  082C               	movf	(sprintf@val+3)^(0+256),w
 10499  0730  042B               	iorwf	(sprintf@val+2)^(0+256),w
 10500  0731  042A               	iorwf	(sprintf@val+1)^(0+256),w
 10501  0732  0429               	iorwf	sprintf@val^(0+256),w
 10502  0733  1D03               	skipz
 10503  0734  2F39               	goto	l8134
 10504                           
 10505                           ;doprnt.c: 1291: prec++;
 10506  0735  3001               	movlw	1
 10507  0736  07B7               	addwf	sprintf@prec^(0+256),f
 10508  0737  3000               	movlw	0
 10509  0738  3DB8               	addwfc	(sprintf@prec+1)^(0+256),f
 10510  0739                     l8134:	
 10511                           
 10512                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10513  0739  01BA               	clrf	sprintf@c^(0+256)
 10514  073A  0ABA               	incf	sprintf@c^(0+256),f
 10515  073B  300A               	movlw	10
 10516  073C  063A               	xorwf	sprintf@c^(0+256),w
 10517  073D  1903               	btfsc	3,2
 10518  073E  2F76               	goto	l8146
 10519  073F                     l8140:	
 10520                           
 10521                           ;doprnt.c: 1306: if(val < dpowers[c])
 10522  073F  083A               	movf	sprintf@c^(0+256),w
 10523  0740  0021               	movlb	1	; select bank1
 10524  0741  00DB               	movwf	??_sprintf^(0+128)
 10525  0742  01DC               	clrf	(??_sprintf^(0+128)+1)
 10526  0743  35DB               	lslf	??_sprintf^(0+128),f
 10527  0744  0DDC               	rlf	(??_sprintf^(0+128)+1),f
 10528  0745  35DB               	lslf	??_sprintf^(0+128),f
 10529  0746  0DDC               	rlf	(??_sprintf^(0+128)+1),f
 10530  0747  309A               	movlw	low (_dpowers| (0+32768))
 10531  0748  075B               	addwf	??_sprintf^(0+128),w
 10532  0749  0084               	movwf	4
 10533  074A  30B0               	movlw	high (_dpowers| (0+32768))
 10534  074B  3D5C               	addwfc	(??_sprintf+1)^(0+128),w
 10535  074C  0085               	movwf	5
 10536  074D  3F00               	moviw [0]fsr0
 10537  074E  00DD               	movwf	(??_sprintf+2)^(0+128)
 10538  074F  3F01               	moviw [1]fsr0
 10539  0750  00DE               	movwf	((??_sprintf+2)^(0+128)+1)
 10540  0751  3F02               	moviw [2]fsr0
 10541  0752  00DF               	movwf	((??_sprintf+2)^(0+128)+2)
 10542  0753  3F03               	moviw [3]fsr0
 10543  0754  00E0               	movwf	((??_sprintf+2)^(0+128)+3)
 10544  0755  0860               	movf	(??_sprintf+5)^(0+128),w
 10545  0756  0022               	movlb	2	; select bank2
 10546  0757  022C               	subwf	(sprintf@val+3)^(0+256),w
 10547  0758  1D03               	skipz
 10548  0759  2F6A               	goto	u11235
 10549  075A  0021               	movlb	1	; select bank1
 10550  075B  085F               	movf	(??_sprintf+4)^(0+128),w
 10551  075C  0022               	movlb	2	; select bank2
 10552  075D  022B               	subwf	(sprintf@val+2)^(0+256),w
 10553  075E  1D03               	skipz
 10554  075F  2F6A               	goto	u11235
 10555  0760  0021               	movlb	1	; select bank1
 10556  0761  085E               	movf	(??_sprintf+3)^(0+128),w
 10557  0762  0022               	movlb	2	; select bank2
 10558  0763  022A               	subwf	(sprintf@val+1)^(0+256),w
 10559  0764  1D03               	skipz
 10560  0765  2F6A               	goto	u11235
 10561  0766  0021               	movlb	1	; select bank1
 10562  0767  085D               	movf	(??_sprintf+2)^(0+128),w
 10563  0768  0022               	movlb	2	; select bank2
 10564  0769  0229               	subwf	sprintf@val^(0+256),w
 10565  076A                     u11235:	
 10566  076A  1C03               	btfss	3,0
 10567  076B  2F76               	goto	l8146
 10568                           
 10569                           ;doprnt.c: 1307: break;
 10570  076C  3001               	movlw	1
 10571  076D  0021               	movlb	1	; select bank1
 10572  076E  00DB               	movwf	??_sprintf^(0+128)
 10573  076F  085B               	movf	??_sprintf^(0+128),w
 10574  0770  0022               	movlb	2	; select bank2
 10575  0771  07BA               	addwf	sprintf@c^(0+256),f
 10576  0772  300A               	movlw	10
 10577  0773  063A               	xorwf	sprintf@c^(0+256),w
 10578  0774  1D03               	btfss	3,2
 10579  0775  2F3F               	goto	l8140
 10580  0776                     l8146:	
 10581                           
 10582                           ;doprnt.c: 1339: if(c < prec)
 10583  0776  083A               	movf	sprintf@c^(0+256),w
 10584  0777  0021               	movlb	1	; select bank1
 10585  0778  00DB               	movwf	??_sprintf^(0+128)
 10586  0779  01DC               	clrf	(??_sprintf^(0+128)+1)
 10587  077A  1BDB               	btfsc	??_sprintf^(0+128),7
 10588  077B  03DC               	decf	(??_sprintf^(0+128)+1),f
 10589  077C  085C               	movf	(??_sprintf+1)^(0+128),w
 10590  077D  3A80               	xorlw	128
 10591  077E  00DD               	movwf	(??_sprintf+2)^(0+128)
 10592  077F  0022               	movlb	2	; select bank2
 10593  0780  0838               	movf	(sprintf@prec+1)^(0+256),w
 10594  0781  3A80               	xorlw	128
 10595  0782  0021               	movlb	1	; select bank1
 10596  0783  025D               	subwf	(??_sprintf+2)^(0+128),w
 10597  0784  1D03               	skipz
 10598  0785  2F8A               	goto	u11255
 10599  0786  0022               	movlb	2	; select bank2
 10600  0787  0837               	movf	sprintf@prec^(0+256),w
 10601  0788  0021               	movlb	1	; select bank1
 10602  0789  025B               	subwf	??_sprintf^(0+128),w
 10603  078A                     u11255:	
 10604  078A  31A5  1803         	skipnc
 10605  078C  2D56               	goto	l8150
 10606                           
 10607                           ;doprnt.c: 1340: c = prec;
 10608  078D  0022               	movlb	2	; select bank2
 10609  078E  0837               	movf	sprintf@prec^(0+256),w
 10610  078F  0021               	movlb	1	; select bank1
 10611  0790  00DB               	movwf	??_sprintf^(0+128)
 10612  0791  085B               	movf	??_sprintf^(0+128),w
 10613  0792  0022               	movlb	2	; select bank2
 10614  0793  00BA               	movwf	sprintf@c^(0+256)
 10615  0794  31A5  2D72         	goto	l925
 10616  0796                     L15:	
 10617  0796                     L14:	
 10618  0796  31A6  2E88         	ljmp	l8212
 10619                           
 10620                           	psect	text9
 10621  0D70                     __ptext9:	
 10622 ;; *************** function _scale *****************
 10623 ;; Defined at:
 10624 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;  scl             1    wreg     char 
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;  scl             1   74[BANK0 ] char 
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  4   50[BANK0 ] char 
 10631 ;; Registers used:
 10632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10638 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10639 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10640 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10641 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10642 ;;Total ram usage:       25 bytes
 10643 ;; Hardware stack levels used:    1
 10644 ;; Hardware stack levels required when called:    4
 10645 ;; This function calls:
 10646 ;;		___awdiv
 10647 ;;		___awmod
 10648 ;;		___flmul
 10649 ;; This function is called by:
 10650 ;;		_sprintf
 10651 ;; This function uses a non-reentrant model
 10652 ;;
 10653                           
 10654                           
 10655                           ;psect for function _scale
 10656  0D70                     _scale:	
 10657                           
 10658                           ;incstack = 0
 10659                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10660                           ;scale@scl stored from wreg
 10661  0D70  0020               	movlb	0	; select bank0
 10662  0D71  00EA               	movwf	scale@scl
 10663                           
 10664                           ;doprnt.c: 428: if(scl < 0) {
 10665  0D72  1FEA               	btfss	scale@scl,7
 10666  0D73  2EBB               	goto	l7376
 10667                           
 10668                           ;doprnt.c: 429: scl = -scl;
 10669  0D74  09EA               	comf	scale@scl,f
 10670  0D75  0AEA               	incf	scale@scl,f
 10671                           
 10672                           ;doprnt.c: 430: if(scl>=110)
 10673  0D76  086A               	movf	scale@scl,w
 10674  0D77  3A80               	xorlw	128
 10675  0D78  3E12               	addlw	-238
 10676  0D79  1C03               	skipc
 10677  0D7A  2E32               	goto	l7366
 10678                           
 10679                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10680  0D7B  300A               	movlw	10
 10681  0D7C  00A0               	movwf	___awdiv@divisor
 10682  0D7D  3000               	movlw	0
 10683  0D7E  00A1               	movwf	___awdiv@divisor+1
 10684  0D7F  086A               	movf	scale@scl,w
 10685  0D80  00F4               	movwf	___awmod@dividend
 10686  0D81  01F5               	clrf	___awmod@dividend+1
 10687  0D82  1BF4               	btfsc	___awmod@dividend,7
 10688  0D83  03F5               	decf	___awmod@dividend+1,f
 10689  0D84  3064               	movlw	100
 10690  0D85  00F2               	movwf	___awmod@divisor
 10691  0D86  3000               	movlw	0
 10692  0D87  00F3               	movwf	___awmod@divisor+1
 10693  0D88  31AA  22C7  318D   	fcall	___awmod
 10694  0D8B  0873               	movf	?___awmod+1,w
 10695  0D8C  0020               	movlb	0	; select bank0
 10696  0D8D  00A3               	movwf	___awdiv@dividend+1
 10697  0D8E  0872               	movf	?___awmod,w
 10698  0D8F  00A2               	movwf	___awdiv@dividend
 10699  0D90  31AB  23AD  318D   	fcall	___awdiv
 10700  0D93  0020               	movlb	0	; select bank0
 10701  0D94  0820               	movf	?___awdiv,w
 10702  0D95  00D6               	movwf	??_scale
 10703  0D96  0821               	movf	?___awdiv+1,w
 10704  0D97  00D7               	movwf	??_scale+1
 10705  0D98  35D6               	lslf	??_scale,f
 10706  0D99  0DD7               	rlf	??_scale+1,f
 10707  0D9A  35D6               	lslf	??_scale,f
 10708  0D9B  0DD7               	rlf	??_scale+1,f
 10709  0D9C  0856               	movf	??_scale,w
 10710  0D9D  3E24               	addlw	36
 10711  0D9E  00D8               	movwf	??_scale+2
 10712  0D9F  3000               	movlw	0
 10713  0DA0  3D57               	addwfc	??_scale+1,w
 10714  0DA1  00D9               	movwf	??_scale+3
 10715  0DA2  3034               	movlw	low (__npowers_| (0+32768))
 10716  0DA3  0758               	addwf	??_scale+2,w
 10717  0DA4  0084               	movwf	4
 10718  0DA5  30B0               	movlw	high (__npowers_| (0+32768))
 10719  0DA6  3D59               	addwfc	??_scale+3,w
 10720  0DA7  0085               	movwf	5
 10721  0DA8  3F00               	moviw [0]fsr0
 10722  0DA9  00DA               	movwf	??_scale+4
 10723  0DAA  3F01               	moviw [1]fsr0
 10724  0DAB  00DB               	movwf	??_scale+5
 10725  0DAC  3F02               	moviw [2]fsr0
 10726  0DAD  00DC               	movwf	??_scale+6
 10727  0DAE  3F03               	moviw [3]fsr0
 10728  0DAF  00DD               	movwf	??_scale+7
 10729  0DB0  085D               	movf	??_scale+7,w
 10730  0DB1  00BB               	movwf	___flmul@b+3
 10731  0DB2  085C               	movf	??_scale+6,w
 10732  0DB3  00BA               	movwf	___flmul@b+2
 10733  0DB4  085B               	movf	??_scale+5,w
 10734  0DB5  00B9               	movwf	___flmul@b+1
 10735  0DB6  085A               	movf	??_scale+4,w
 10736  0DB7  00B8               	movwf	___flmul@b
 10737  0DB8  3064               	movlw	100
 10738  0DB9  00A0               	movwf	___awdiv@divisor
 10739  0DBA  3000               	movlw	0
 10740  0DBB  00A1               	movwf	___awdiv@divisor+1
 10741  0DBC  086A               	movf	scale@scl,w
 10742  0DBD  00A2               	movwf	___awdiv@dividend
 10743  0DBE  01A3               	clrf	___awdiv@dividend+1
 10744  0DBF  1BA2               	btfsc	___awdiv@dividend,7
 10745  0DC0  03A3               	decf	___awdiv@dividend+1,f
 10746  0DC1  31AB  23AD  318D   	fcall	___awdiv
 10747  0DC4  0020               	movlb	0	; select bank0
 10748  0DC5  0820               	movf	?___awdiv,w
 10749  0DC6  00DE               	movwf	??_scale+8
 10750  0DC7  0821               	movf	?___awdiv+1,w
 10751  0DC8  00DF               	movwf	??_scale+9
 10752  0DC9  35DE               	lslf	??_scale+8,f
 10753  0DCA  0DDF               	rlf	??_scale+9,f
 10754  0DCB  35DE               	lslf	??_scale+8,f
 10755  0DCC  0DDF               	rlf	??_scale+9,f
 10756  0DCD  085E               	movf	??_scale+8,w
 10757  0DCE  3E48               	addlw	72
 10758  0DCF  00E0               	movwf	??_scale+10
 10759  0DD0  3000               	movlw	0
 10760  0DD1  3D5F               	addwfc	??_scale+9,w
 10761  0DD2  00E1               	movwf	??_scale+11
 10762  0DD3  3034               	movlw	low (__npowers_| (0+32768))
 10763  0DD4  0760               	addwf	??_scale+10,w
 10764  0DD5  0084               	movwf	4
 10765  0DD6  30B0               	movlw	high (__npowers_| (0+32768))
 10766  0DD7  3D61               	addwfc	??_scale+11,w
 10767  0DD8  0085               	movwf	5
 10768  0DD9  3F00               	moviw [0]fsr0
 10769  0DDA  00E2               	movwf	??_scale+12
 10770  0DDB  3F01               	moviw [1]fsr0
 10771  0DDC  00E3               	movwf	??_scale+13
 10772  0DDD  3F02               	moviw [2]fsr0
 10773  0DDE  00E4               	movwf	??_scale+14
 10774  0DDF  3F03               	moviw [3]fsr0
 10775  0DE0  00E5               	movwf	??_scale+15
 10776  0DE1  0865               	movf	??_scale+15,w
 10777  0DE2  00BF               	movwf	___flmul@a+3
 10778  0DE3  0864               	movf	??_scale+14,w
 10779  0DE4  00BE               	movwf	___flmul@a+2
 10780  0DE5  0863               	movf	??_scale+13,w
 10781  0DE6  00BD               	movwf	___flmul@a+1
 10782  0DE7  0862               	movf	??_scale+12,w
 10783  0DE8  00BC               	movwf	___flmul@a
 10784  0DE9  3195  25D4  318D   	fcall	___flmul
 10785  0DEC  0020               	movlb	0	; select bank0
 10786  0DED  083B               	movf	?___flmul+3,w
 10787  0DEE  00E9               	movwf	_scale$2189+3
 10788  0DEF  083A               	movf	?___flmul+2,w
 10789  0DF0  00E8               	movwf	_scale$2189+2
 10790  0DF1  0839               	movf	?___flmul+1,w
 10791  0DF2  00E7               	movwf	_scale$2189+1
 10792  0DF3  0838               	movf	?___flmul,w
 10793  0DF4  00E6               	movwf	_scale$2189
 10794                           
 10795                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10796  0DF5  300A               	movlw	10
 10797  0DF6  00F2               	movwf	___awmod@divisor
 10798  0DF7  3000               	movlw	0
 10799  0DF8  00F3               	movwf	___awmod@divisor+1
 10800  0DF9  086A               	movf	scale@scl,w
 10801  0DFA  00F4               	movwf	___awmod@dividend
 10802  0DFB  01F5               	clrf	___awmod@dividend+1
 10803  0DFC  1BF4               	btfsc	___awmod@dividend,7
 10804  0DFD  03F5               	decf	___awmod@dividend+1,f
 10805  0DFE  31AA  22C7  318D   	fcall	___awmod
 10806  0E01  0873               	movf	?___awmod+1,w
 10807  0E02  0085               	movwf	5
 10808  0E03  0872               	movf	?___awmod,w
 10809  0E04  0084               	movwf	4
 10810  0E05  3584               	lslf	4,f
 10811  0E06  0D85               	rlf	5,f
 10812  0E07  3584               	lslf	4,f
 10813  0E08  0D85               	rlf	5,f
 10814  0E09  3034               	movlw	low (__npowers_| (0+32768))
 10815  0E0A  0784               	addwf	4,f
 10816  0E0B  30B0               	movlw	high (__npowers_| (0+32768))
 10817  0E0C  3D85               	addwfc	5,f
 10818  0E0D  3F00               	moviw [0]fsr0
 10819  0E0E  0020               	movlb	0	; select bank0
 10820  0E0F  00D6               	movwf	??_scale
 10821  0E10  3F01               	moviw [1]fsr0
 10822  0E11  00D7               	movwf	??_scale+1
 10823  0E12  3F02               	moviw [2]fsr0
 10824  0E13  00D8               	movwf	??_scale+2
 10825  0E14  3F03               	moviw [3]fsr0
 10826  0E15  00D9               	movwf	??_scale+3
 10827  0E16  0859               	movf	??_scale+3,w
 10828  0E17  00BB               	movwf	___flmul@b+3
 10829  0E18  0858               	movf	??_scale+2,w
 10830  0E19  00BA               	movwf	___flmul@b+2
 10831  0E1A  0857               	movf	??_scale+1,w
 10832  0E1B  00B9               	movwf	___flmul@b+1
 10833  0E1C  0856               	movf	??_scale,w
 10834  0E1D  00B8               	movwf	___flmul@b
 10835  0E1E  0869               	movf	_scale$2189+3,w
 10836  0E1F  00BF               	movwf	___flmul@a+3
 10837  0E20  0868               	movf	_scale$2189+2,w
 10838  0E21  00BE               	movwf	___flmul@a+2
 10839  0E22  0867               	movf	_scale$2189+1,w
 10840  0E23  00BD               	movwf	___flmul@a+1
 10841  0E24  0866               	movf	_scale$2189,w
 10842  0E25  00BC               	movwf	___flmul@a
 10843  0E26  3195  25D4         	fcall	___flmul
 10844  0E28  0020               	movlb	0	; select bank0
 10845  0E29  083B               	movf	?___flmul+3,w
 10846  0E2A  00D5               	movwf	?_scale+3
 10847  0E2B  083A               	movf	?___flmul+2,w
 10848  0E2C  00D4               	movwf	?_scale+2
 10849  0E2D  0839               	movf	?___flmul+1,w
 10850  0E2E  00D3               	movwf	?_scale+1
 10851  0E2F  0838               	movf	?___flmul,w
 10852  0E30  00D2               	movwf	?_scale
 10853  0E31  0008               	return
 10854  0E32                     l7366:	
 10855                           
 10856                           ;doprnt.c: 432: else if(scl > 10)
 10857  0E32  086A               	movf	scale@scl,w
 10858  0E33  3A80               	xorlw	128
 10859  0E34  3E75               	addlw	-139
 10860  0E35  1C03               	skipc
 10861  0E36  2E9D               	goto	l7372
 10862                           
 10863                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10864  0E37  300A               	movlw	10
 10865  0E38  00F2               	movwf	___awmod@divisor
 10866  0E39  3000               	movlw	0
 10867  0E3A  00F3               	movwf	___awmod@divisor+1
 10868  0E3B  086A               	movf	scale@scl,w
 10869  0E3C  00F4               	movwf	___awmod@dividend
 10870  0E3D  01F5               	clrf	___awmod@dividend+1
 10871  0E3E  1BF4               	btfsc	___awmod@dividend,7
 10872  0E3F  03F5               	decf	___awmod@dividend+1,f
 10873  0E40  31AA  22C7  318D   	fcall	___awmod
 10874  0E43  0873               	movf	?___awmod+1,w
 10875  0E44  0085               	movwf	5
 10876  0E45  0872               	movf	?___awmod,w
 10877  0E46  0084               	movwf	4
 10878  0E47  3584               	lslf	4,f
 10879  0E48  0D85               	rlf	5,f
 10880  0E49  3584               	lslf	4,f
 10881  0E4A  0D85               	rlf	5,f
 10882  0E4B  3034               	movlw	low (__npowers_| (0+32768))
 10883  0E4C  0784               	addwf	4,f
 10884  0E4D  30B0               	movlw	high (__npowers_| (0+32768))
 10885  0E4E  3D85               	addwfc	5,f
 10886  0E4F  3F00               	moviw [0]fsr0
 10887  0E50  0020               	movlb	0	; select bank0
 10888  0E51  00D6               	movwf	??_scale
 10889  0E52  3F01               	moviw [1]fsr0
 10890  0E53  00D7               	movwf	??_scale+1
 10891  0E54  3F02               	moviw [2]fsr0
 10892  0E55  00D8               	movwf	??_scale+2
 10893  0E56  3F03               	moviw [3]fsr0
 10894  0E57  00D9               	movwf	??_scale+3
 10895  0E58  0859               	movf	??_scale+3,w
 10896  0E59  00BB               	movwf	___flmul@b+3
 10897  0E5A  0858               	movf	??_scale+2,w
 10898  0E5B  00BA               	movwf	___flmul@b+2
 10899  0E5C  0857               	movf	??_scale+1,w
 10900  0E5D  00B9               	movwf	___flmul@b+1
 10901  0E5E  0856               	movf	??_scale,w
 10902  0E5F  00B8               	movwf	___flmul@b
 10903  0E60  300A               	movlw	10
 10904  0E61  00A0               	movwf	___awdiv@divisor
 10905  0E62  3000               	movlw	0
 10906  0E63  00A1               	movwf	___awdiv@divisor+1
 10907  0E64  086A               	movf	scale@scl,w
 10908  0E65  00A2               	movwf	___awdiv@dividend
 10909  0E66  01A3               	clrf	___awdiv@dividend+1
 10910  0E67  1BA2               	btfsc	___awdiv@dividend,7
 10911  0E68  03A3               	decf	___awdiv@dividend+1,f
 10912  0E69  31AB  23AD  318D   	fcall	___awdiv
 10913  0E6C  0020               	movlb	0	; select bank0
 10914  0E6D  0820               	movf	?___awdiv,w
 10915  0E6E  00DA               	movwf	??_scale+4
 10916  0E6F  0821               	movf	?___awdiv+1,w
 10917  0E70  00DB               	movwf	??_scale+5
 10918  0E71  35DA               	lslf	??_scale+4,f
 10919  0E72  0DDB               	rlf	??_scale+5,f
 10920  0E73  35DA               	lslf	??_scale+4,f
 10921  0E74  0DDB               	rlf	??_scale+5,f
 10922  0E75  085A               	movf	??_scale+4,w
 10923  0E76  3E24               	addlw	36
 10924  0E77  00DC               	movwf	??_scale+6
 10925  0E78  3000               	movlw	0
 10926  0E79  3D5B               	addwfc	??_scale+5,w
 10927  0E7A  00DD               	movwf	??_scale+7
 10928  0E7B  3034               	movlw	low (__npowers_| (0+32768))
 10929  0E7C  075C               	addwf	??_scale+6,w
 10930  0E7D  0084               	movwf	4
 10931  0E7E  30B0               	movlw	high (__npowers_| (0+32768))
 10932  0E7F  3D5D               	addwfc	??_scale+7,w
 10933  0E80  0085               	movwf	5
 10934  0E81  3F00               	moviw [0]fsr0
 10935  0E82  00DE               	movwf	??_scale+8
 10936  0E83  3F01               	moviw [1]fsr0
 10937  0E84  00DF               	movwf	??_scale+9
 10938  0E85  3F02               	moviw [2]fsr0
 10939  0E86  00E0               	movwf	??_scale+10
 10940  0E87  3F03               	moviw [3]fsr0
 10941  0E88  00E1               	movwf	??_scale+11
 10942  0E89  0861               	movf	??_scale+11,w
 10943  0E8A  00BF               	movwf	___flmul@a+3
 10944  0E8B  0860               	movf	??_scale+10,w
 10945  0E8C  00BE               	movwf	___flmul@a+2
 10946  0E8D  085F               	movf	??_scale+9,w
 10947  0E8E  00BD               	movwf	___flmul@a+1
 10948  0E8F  085E               	movf	??_scale+8,w
 10949  0E90  00BC               	movwf	___flmul@a
 10950  0E91  3195  25D4         	fcall	___flmul
 10951  0E93  0020               	movlb	0	; select bank0
 10952  0E94  083B               	movf	?___flmul+3,w
 10953  0E95  00D5               	movwf	?_scale+3
 10954  0E96  083A               	movf	?___flmul+2,w
 10955  0E97  00D4               	movwf	?_scale+2
 10956  0E98  0839               	movf	?___flmul+1,w
 10957  0E99  00D3               	movwf	?_scale+1
 10958  0E9A  0838               	movf	?___flmul,w
 10959  0E9B  00D2               	movwf	?_scale
 10960  0E9C  0008               	return
 10961  0E9D                     l7372:	
 10962                           
 10963                           ;doprnt.c: 434: return _npowers_[scl];
 10964  0E9D  086A               	movf	scale@scl,w
 10965  0E9E  00D6               	movwf	??_scale
 10966  0E9F  01D7               	clrf	??_scale+1
 10967  0EA0  35D6               	lslf	??_scale,f
 10968  0EA1  0DD7               	rlf	??_scale+1,f
 10969  0EA2  35D6               	lslf	??_scale,f
 10970  0EA3  0DD7               	rlf	??_scale+1,f
 10971  0EA4  3034               	movlw	low (__npowers_| (0+32768))
 10972  0EA5  0756               	addwf	??_scale,w
 10973  0EA6  0084               	movwf	4
 10974  0EA7  30B0               	movlw	high (__npowers_| (0+32768))
 10975  0EA8  3D57               	addwfc	??_scale+1,w
 10976  0EA9  0085               	movwf	5
 10977  0EAA  3F00               	moviw [0]fsr0
 10978  0EAB  00D8               	movwf	??_scale+2
 10979  0EAC  3F01               	moviw [1]fsr0
 10980  0EAD  00D9               	movwf	??_scale+3
 10981  0EAE  3F02               	moviw [2]fsr0
 10982  0EAF  00DA               	movwf	??_scale+4
 10983  0EB0  3F03               	moviw [3]fsr0
 10984  0EB1  00DB               	movwf	??_scale+5
 10985  0EB2  085B               	movf	??_scale+5,w
 10986  0EB3  00D5               	movwf	?_scale+3
 10987  0EB4  085A               	movf	??_scale+4,w
 10988  0EB5  00D4               	movwf	?_scale+2
 10989  0EB6  0859               	movf	??_scale+3,w
 10990  0EB7  00D3               	movwf	?_scale+1
 10991  0EB8  0858               	movf	??_scale+2,w
 10992  0EB9  00D2               	movwf	?_scale
 10993  0EBA  0008               	return
 10994  0EBB                     l7376:	
 10995                           
 10996                           ;doprnt.c: 435: }
 10997                           ;doprnt.c: 436: if(scl>=110)
 10998  0EBB  086A               	movf	scale@scl,w
 10999  0EBC  3A80               	xorlw	128
 11000  0EBD  3E12               	addlw	-238
 11001  0EBE  1C03               	skipc
 11002  0EBF  2F77               	goto	l7384
 11003                           
 11004                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11005  0EC0  300A               	movlw	10
 11006  0EC1  00A0               	movwf	___awdiv@divisor
 11007  0EC2  3000               	movlw	0
 11008  0EC3  00A1               	movwf	___awdiv@divisor+1
 11009  0EC4  086A               	movf	scale@scl,w
 11010  0EC5  00F4               	movwf	___awmod@dividend
 11011  0EC6  01F5               	clrf	___awmod@dividend+1
 11012  0EC7  1BF4               	btfsc	___awmod@dividend,7
 11013  0EC8  03F5               	decf	___awmod@dividend+1,f
 11014  0EC9  3064               	movlw	100
 11015  0ECA  00F2               	movwf	___awmod@divisor
 11016  0ECB  3000               	movlw	0
 11017  0ECC  00F3               	movwf	___awmod@divisor+1
 11018  0ECD  31AA  22C7  318D   	fcall	___awmod
 11019  0ED0  0873               	movf	?___awmod+1,w
 11020  0ED1  0020               	movlb	0	; select bank0
 11021  0ED2  00A3               	movwf	___awdiv@dividend+1
 11022  0ED3  0872               	movf	?___awmod,w
 11023  0ED4  00A2               	movwf	___awdiv@dividend
 11024  0ED5  31AB  23AD  318D   	fcall	___awdiv
 11025  0ED8  0020               	movlb	0	; select bank0
 11026  0ED9  0820               	movf	?___awdiv,w
 11027  0EDA  00D6               	movwf	??_scale
 11028  0EDB  0821               	movf	?___awdiv+1,w
 11029  0EDC  00D7               	movwf	??_scale+1
 11030  0EDD  35D6               	lslf	??_scale,f
 11031  0EDE  0DD7               	rlf	??_scale+1,f
 11032  0EDF  35D6               	lslf	??_scale,f
 11033  0EE0  0DD7               	rlf	??_scale+1,f
 11034  0EE1  0856               	movf	??_scale,w
 11035  0EE2  3E24               	addlw	36
 11036  0EE3  00D8               	movwf	??_scale+2
 11037  0EE4  3000               	movlw	0
 11038  0EE5  3D57               	addwfc	??_scale+1,w
 11039  0EE6  00D9               	movwf	??_scale+3
 11040  0EE7  3000               	movlw	low (__powers_| (0+32768))
 11041  0EE8  0758               	addwf	??_scale+2,w
 11042  0EE9  0084               	movwf	4
 11043  0EEA  30B0               	movlw	high (__powers_| (0+32768))
 11044  0EEB  3D59               	addwfc	??_scale+3,w
 11045  0EEC  0085               	movwf	5
 11046  0EED  3F00               	moviw [0]fsr0
 11047  0EEE  00DA               	movwf	??_scale+4
 11048  0EEF  3F01               	moviw [1]fsr0
 11049  0EF0  00DB               	movwf	??_scale+5
 11050  0EF1  3F02               	moviw [2]fsr0
 11051  0EF2  00DC               	movwf	??_scale+6
 11052  0EF3  3F03               	moviw [3]fsr0
 11053  0EF4  00DD               	movwf	??_scale+7
 11054  0EF5  085D               	movf	??_scale+7,w
 11055  0EF6  00BB               	movwf	___flmul@b+3
 11056  0EF7  085C               	movf	??_scale+6,w
 11057  0EF8  00BA               	movwf	___flmul@b+2
 11058  0EF9  085B               	movf	??_scale+5,w
 11059  0EFA  00B9               	movwf	___flmul@b+1
 11060  0EFB  085A               	movf	??_scale+4,w
 11061  0EFC  00B8               	movwf	___flmul@b
 11062  0EFD  3064               	movlw	100
 11063  0EFE  00A0               	movwf	___awdiv@divisor
 11064  0EFF  3000               	movlw	0
 11065  0F00  00A1               	movwf	___awdiv@divisor+1
 11066  0F01  086A               	movf	scale@scl,w
 11067  0F02  00A2               	movwf	___awdiv@dividend
 11068  0F03  01A3               	clrf	___awdiv@dividend+1
 11069  0F04  1BA2               	btfsc	___awdiv@dividend,7
 11070  0F05  03A3               	decf	___awdiv@dividend+1,f
 11071  0F06  31AB  23AD  318D   	fcall	___awdiv
 11072  0F09  0020               	movlb	0	; select bank0
 11073  0F0A  0820               	movf	?___awdiv,w
 11074  0F0B  00DE               	movwf	??_scale+8
 11075  0F0C  0821               	movf	?___awdiv+1,w
 11076  0F0D  00DF               	movwf	??_scale+9
 11077  0F0E  35DE               	lslf	??_scale+8,f
 11078  0F0F  0DDF               	rlf	??_scale+9,f
 11079  0F10  35DE               	lslf	??_scale+8,f
 11080  0F11  0DDF               	rlf	??_scale+9,f
 11081  0F12  085E               	movf	??_scale+8,w
 11082  0F13  3E48               	addlw	72
 11083  0F14  00E0               	movwf	??_scale+10
 11084  0F15  3000               	movlw	0
 11085  0F16  3D5F               	addwfc	??_scale+9,w
 11086  0F17  00E1               	movwf	??_scale+11
 11087  0F18  3000               	movlw	low (__powers_| (0+32768))
 11088  0F19  0760               	addwf	??_scale+10,w
 11089  0F1A  0084               	movwf	4
 11090  0F1B  30B0               	movlw	high (__powers_| (0+32768))
 11091  0F1C  3D61               	addwfc	??_scale+11,w
 11092  0F1D  0085               	movwf	5
 11093  0F1E  3F00               	moviw [0]fsr0
 11094  0F1F  00E2               	movwf	??_scale+12
 11095  0F20  3F01               	moviw [1]fsr0
 11096  0F21  00E3               	movwf	??_scale+13
 11097  0F22  3F02               	moviw [2]fsr0
 11098  0F23  00E4               	movwf	??_scale+14
 11099  0F24  3F03               	moviw [3]fsr0
 11100  0F25  00E5               	movwf	??_scale+15
 11101  0F26  0865               	movf	??_scale+15,w
 11102  0F27  00BF               	movwf	___flmul@a+3
 11103  0F28  0864               	movf	??_scale+14,w
 11104  0F29  00BE               	movwf	___flmul@a+2
 11105  0F2A  0863               	movf	??_scale+13,w
 11106  0F2B  00BD               	movwf	___flmul@a+1
 11107  0F2C  0862               	movf	??_scale+12,w
 11108  0F2D  00BC               	movwf	___flmul@a
 11109  0F2E  3195  25D4  318D   	fcall	___flmul
 11110  0F31  0020               	movlb	0	; select bank0
 11111  0F32  083B               	movf	?___flmul+3,w
 11112  0F33  00E9               	movwf	_scale$2189+3
 11113  0F34  083A               	movf	?___flmul+2,w
 11114  0F35  00E8               	movwf	_scale$2189+2
 11115  0F36  0839               	movf	?___flmul+1,w
 11116  0F37  00E7               	movwf	_scale$2189+1
 11117  0F38  0838               	movf	?___flmul,w
 11118  0F39  00E6               	movwf	_scale$2189
 11119                           
 11120                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11121  0F3A  300A               	movlw	10
 11122  0F3B  00F2               	movwf	___awmod@divisor
 11123  0F3C  3000               	movlw	0
 11124  0F3D  00F3               	movwf	___awmod@divisor+1
 11125  0F3E  086A               	movf	scale@scl,w
 11126  0F3F  00F4               	movwf	___awmod@dividend
 11127  0F40  01F5               	clrf	___awmod@dividend+1
 11128  0F41  1BF4               	btfsc	___awmod@dividend,7
 11129  0F42  03F5               	decf	___awmod@dividend+1,f
 11130  0F43  31AA  22C7  318D   	fcall	___awmod
 11131  0F46  0873               	movf	?___awmod+1,w
 11132  0F47  0085               	movwf	5
 11133  0F48  0872               	movf	?___awmod,w
 11134  0F49  0084               	movwf	4
 11135  0F4A  3584               	lslf	4,f
 11136  0F4B  0D85               	rlf	5,f
 11137  0F4C  3584               	lslf	4,f
 11138  0F4D  0D85               	rlf	5,f
 11139  0F4E  3000               	movlw	low (__powers_| (0+32768))
 11140  0F4F  0784               	addwf	4,f
 11141  0F50  30B0               	movlw	high (__powers_| (0+32768))
 11142  0F51  3D85               	addwfc	5,f
 11143  0F52  3F00               	moviw [0]fsr0
 11144  0F53  0020               	movlb	0	; select bank0
 11145  0F54  00D6               	movwf	??_scale
 11146  0F55  3F01               	moviw [1]fsr0
 11147  0F56  00D7               	movwf	??_scale+1
 11148  0F57  3F02               	moviw [2]fsr0
 11149  0F58  00D8               	movwf	??_scale+2
 11150  0F59  3F03               	moviw [3]fsr0
 11151  0F5A  00D9               	movwf	??_scale+3
 11152  0F5B  0859               	movf	??_scale+3,w
 11153  0F5C  00BB               	movwf	___flmul@b+3
 11154  0F5D  0858               	movf	??_scale+2,w
 11155  0F5E  00BA               	movwf	___flmul@b+2
 11156  0F5F  0857               	movf	??_scale+1,w
 11157  0F60  00B9               	movwf	___flmul@b+1
 11158  0F61  0856               	movf	??_scale,w
 11159  0F62  00B8               	movwf	___flmul@b
 11160  0F63  0869               	movf	_scale$2189+3,w
 11161  0F64  00BF               	movwf	___flmul@a+3
 11162  0F65  0868               	movf	_scale$2189+2,w
 11163  0F66  00BE               	movwf	___flmul@a+2
 11164  0F67  0867               	movf	_scale$2189+1,w
 11165  0F68  00BD               	movwf	___flmul@a+1
 11166  0F69  0866               	movf	_scale$2189,w
 11167  0F6A  00BC               	movwf	___flmul@a
 11168  0F6B  3195  25D4         	fcall	___flmul
 11169  0F6D  0020               	movlb	0	; select bank0
 11170  0F6E  083B               	movf	?___flmul+3,w
 11171  0F6F  00D5               	movwf	?_scale+3
 11172  0F70  083A               	movf	?___flmul+2,w
 11173  0F71  00D4               	movwf	?_scale+2
 11174  0F72  0839               	movf	?___flmul+1,w
 11175  0F73  00D3               	movwf	?_scale+1
 11176  0F74  0838               	movf	?___flmul,w
 11177  0F75  00D2               	movwf	?_scale
 11178  0F76  0008               	return
 11179  0F77                     l7384:	
 11180                           
 11181                           ;doprnt.c: 438: else if(scl > 10)
 11182  0F77  086A               	movf	scale@scl,w
 11183  0F78  3A80               	xorlw	128
 11184  0F79  3E75               	addlw	-139
 11185  0F7A  1C03               	skipc
 11186  0F7B  2FE2               	goto	l7390
 11187                           
 11188                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11189  0F7C  300A               	movlw	10
 11190  0F7D  00F2               	movwf	___awmod@divisor
 11191  0F7E  3000               	movlw	0
 11192  0F7F  00F3               	movwf	___awmod@divisor+1
 11193  0F80  086A               	movf	scale@scl,w
 11194  0F81  00F4               	movwf	___awmod@dividend
 11195  0F82  01F5               	clrf	___awmod@dividend+1
 11196  0F83  1BF4               	btfsc	___awmod@dividend,7
 11197  0F84  03F5               	decf	___awmod@dividend+1,f
 11198  0F85  31AA  22C7  318D   	fcall	___awmod
 11199  0F88  0873               	movf	?___awmod+1,w
 11200  0F89  0085               	movwf	5
 11201  0F8A  0872               	movf	?___awmod,w
 11202  0F8B  0084               	movwf	4
 11203  0F8C  3584               	lslf	4,f
 11204  0F8D  0D85               	rlf	5,f
 11205  0F8E  3584               	lslf	4,f
 11206  0F8F  0D85               	rlf	5,f
 11207  0F90  3000               	movlw	low (__powers_| (0+32768))
 11208  0F91  0784               	addwf	4,f
 11209  0F92  30B0               	movlw	high (__powers_| (0+32768))
 11210  0F93  3D85               	addwfc	5,f
 11211  0F94  3F00               	moviw [0]fsr0
 11212  0F95  0020               	movlb	0	; select bank0
 11213  0F96  00D6               	movwf	??_scale
 11214  0F97  3F01               	moviw [1]fsr0
 11215  0F98  00D7               	movwf	??_scale+1
 11216  0F99  3F02               	moviw [2]fsr0
 11217  0F9A  00D8               	movwf	??_scale+2
 11218  0F9B  3F03               	moviw [3]fsr0
 11219  0F9C  00D9               	movwf	??_scale+3
 11220  0F9D  0859               	movf	??_scale+3,w
 11221  0F9E  00BB               	movwf	___flmul@b+3
 11222  0F9F  0858               	movf	??_scale+2,w
 11223  0FA0  00BA               	movwf	___flmul@b+2
 11224  0FA1  0857               	movf	??_scale+1,w
 11225  0FA2  00B9               	movwf	___flmul@b+1
 11226  0FA3  0856               	movf	??_scale,w
 11227  0FA4  00B8               	movwf	___flmul@b
 11228  0FA5  300A               	movlw	10
 11229  0FA6  00A0               	movwf	___awdiv@divisor
 11230  0FA7  3000               	movlw	0
 11231  0FA8  00A1               	movwf	___awdiv@divisor+1
 11232  0FA9  086A               	movf	scale@scl,w
 11233  0FAA  00A2               	movwf	___awdiv@dividend
 11234  0FAB  01A3               	clrf	___awdiv@dividend+1
 11235  0FAC  1BA2               	btfsc	___awdiv@dividend,7
 11236  0FAD  03A3               	decf	___awdiv@dividend+1,f
 11237  0FAE  31AB  23AD  318D   	fcall	___awdiv
 11238  0FB1  0020               	movlb	0	; select bank0
 11239  0FB2  0820               	movf	?___awdiv,w
 11240  0FB3  00DA               	movwf	??_scale+4
 11241  0FB4  0821               	movf	?___awdiv+1,w
 11242  0FB5  00DB               	movwf	??_scale+5
 11243  0FB6  35DA               	lslf	??_scale+4,f
 11244  0FB7  0DDB               	rlf	??_scale+5,f
 11245  0FB8  35DA               	lslf	??_scale+4,f
 11246  0FB9  0DDB               	rlf	??_scale+5,f
 11247  0FBA  085A               	movf	??_scale+4,w
 11248  0FBB  3E24               	addlw	36
 11249  0FBC  00DC               	movwf	??_scale+6
 11250  0FBD  3000               	movlw	0
 11251  0FBE  3D5B               	addwfc	??_scale+5,w
 11252  0FBF  00DD               	movwf	??_scale+7
 11253  0FC0  3000               	movlw	low (__powers_| (0+32768))
 11254  0FC1  075C               	addwf	??_scale+6,w
 11255  0FC2  0084               	movwf	4
 11256  0FC3  30B0               	movlw	high (__powers_| (0+32768))
 11257  0FC4  3D5D               	addwfc	??_scale+7,w
 11258  0FC5  0085               	movwf	5
 11259  0FC6  3F00               	moviw [0]fsr0
 11260  0FC7  00DE               	movwf	??_scale+8
 11261  0FC8  3F01               	moviw [1]fsr0
 11262  0FC9  00DF               	movwf	??_scale+9
 11263  0FCA  3F02               	moviw [2]fsr0
 11264  0FCB  00E0               	movwf	??_scale+10
 11265  0FCC  3F03               	moviw [3]fsr0
 11266  0FCD  00E1               	movwf	??_scale+11
 11267  0FCE  0861               	movf	??_scale+11,w
 11268  0FCF  00BF               	movwf	___flmul@a+3
 11269  0FD0  0860               	movf	??_scale+10,w
 11270  0FD1  00BE               	movwf	___flmul@a+2
 11271  0FD2  085F               	movf	??_scale+9,w
 11272  0FD3  00BD               	movwf	___flmul@a+1
 11273  0FD4  085E               	movf	??_scale+8,w
 11274  0FD5  00BC               	movwf	___flmul@a
 11275  0FD6  3195  25D4         	fcall	___flmul
 11276  0FD8  0020               	movlb	0	; select bank0
 11277  0FD9  083B               	movf	?___flmul+3,w
 11278  0FDA  00D5               	movwf	?_scale+3
 11279  0FDB  083A               	movf	?___flmul+2,w
 11280  0FDC  00D4               	movwf	?_scale+2
 11281  0FDD  0839               	movf	?___flmul+1,w
 11282  0FDE  00D3               	movwf	?_scale+1
 11283  0FDF  0838               	movf	?___flmul,w
 11284  0FE0  00D2               	movwf	?_scale
 11285  0FE1  0008               	return
 11286  0FE2                     l7390:	
 11287                           
 11288                           ;doprnt.c: 440: return _powers_[scl];
 11289  0FE2  086A               	movf	scale@scl,w
 11290  0FE3  00D6               	movwf	??_scale
 11291  0FE4  01D7               	clrf	??_scale+1
 11292  0FE5  35D6               	lslf	??_scale,f
 11293  0FE6  0DD7               	rlf	??_scale+1,f
 11294  0FE7  35D6               	lslf	??_scale,f
 11295  0FE8  0DD7               	rlf	??_scale+1,f
 11296  0FE9  3000               	movlw	low (__powers_| (0+32768))
 11297  0FEA  0756               	addwf	??_scale,w
 11298  0FEB  0084               	movwf	4
 11299  0FEC  30B0               	movlw	high (__powers_| (0+32768))
 11300  0FED  3D57               	addwfc	??_scale+1,w
 11301  0FEE  0085               	movwf	5
 11302  0FEF  3F00               	moviw [0]fsr0
 11303  0FF0  00D8               	movwf	??_scale+2
 11304  0FF1  3F01               	moviw [1]fsr0
 11305  0FF2  00D9               	movwf	??_scale+3
 11306  0FF3  3F02               	moviw [2]fsr0
 11307  0FF4  00DA               	movwf	??_scale+4
 11308  0FF5  3F03               	moviw [3]fsr0
 11309  0FF6  00DB               	movwf	??_scale+5
 11310  0FF7  085B               	movf	??_scale+5,w
 11311  0FF8  00D5               	movwf	?_scale+3
 11312  0FF9  085A               	movf	??_scale+4,w
 11313  0FFA  00D4               	movwf	?_scale+2
 11314  0FFB  0859               	movf	??_scale+3,w
 11315  0FFC  00D3               	movwf	?_scale+1
 11316  0FFD  0858               	movf	??_scale+2,w
 11317  0FFE  00D2               	movwf	?_scale
 11318  0FFF  0008               	return
 11319  1000                     __end_of_scale:	
 11320                           
 11321                           	psect	text10
 11322  1001                     __ptext10:	
 11323 ;; *************** function _isdigit *****************
 11324 ;; Defined at:
 11325 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  c               1    wreg     unsigned char 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;  c               1    3[COMMON] unsigned char 
 11330 ;; Return value:  Size  Location     Type
 11331 ;;		None               void
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11340 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11342 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11343 ;;Total ram usage:        2 bytes
 11344 ;; Hardware stack levels used:    1
 11345 ;; Hardware stack levels required when called:    2
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_sprintf
 11350 ;; This function uses a non-reentrant model
 11351 ;;
 11352                           
 11353                           
 11354                           ;psect for function _isdigit
 11355  1001                     _isdigit:	
 11356                           
 11357                           ;incstack = 0
 11358                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11359                           ;isdigit@c stored from wreg
 11360  1001  00F3               	movwf	isdigit@c
 11361  1002  01F2               	clrf	_isdigit$1788
 11362  1003  303A               	movlw	58
 11363  1004  0273               	subwf	isdigit@c,w
 11364  1005  1803               	skipnc
 11365  1006  280D               	goto	l7402
 11366  1007  3030               	movlw	48
 11367  1008  0273               	subwf	isdigit@c,w
 11368  1009  1C03               	skipc
 11369  100A  280D               	goto	l7402
 11370  100B  01F2               	clrf	_isdigit$1788
 11371  100C  0AF2               	incf	_isdigit$1788,f
 11372  100D                     l7402:	
 11373  100D  0C72               	rrf	_isdigit$1788,w
 11374  100E  0008               	return
 11375  100F                     __end_of_isdigit:	
 11376                           
 11377                           	psect	text11
 11378  1202                     __ptext11:	
 11379 ;; *************** function _fround *****************
 11380 ;; Defined at:
 11381 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;  prec            1    wreg     unsigned char 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;  prec            1    8[BANK1 ] unsigned char 
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  4   50[BANK0 ] unsigned char 
 11388 ;; Registers used:
 11389 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11395 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11396 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11397 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11398 ;;      Totals:         0      24       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11399 ;;Total ram usage:       33 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; Hardware stack levels required when called:    4
 11402 ;; This function calls:
 11403 ;;		___awdiv
 11404 ;;		___awmod
 11405 ;;		___flmul
 11406 ;; This function is called by:
 11407 ;;		_sprintf
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           
 11412                           ;psect for function _fround
 11413  1202                     _fround:	
 11414                           
 11415                           ;incstack = 0
 11416                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11417                           ;fround@prec stored from wreg
 11418  1202  0021               	movlb	1	; select bank1
 11419  1203  00A8               	movwf	fround@prec^(0+128)
 11420                           
 11421                           ;doprnt.c: 413: if(prec>=110)
 11422  1204  306E               	movlw	110
 11423  1205  0228               	subwf	fround@prec^(0+128),w
 11424  1206  1C03               	skipc
 11425  1207  2B06               	goto	l7342
 11426                           
 11427                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11428  1208  300A               	movlw	10
 11429  1209  0020               	movlb	0	; select bank0
 11430  120A  00A0               	movwf	___awdiv@divisor
 11431  120B  3000               	movlw	0
 11432  120C  00A1               	movwf	___awdiv@divisor+1
 11433  120D  0021               	movlb	1	; select bank1
 11434  120E  0828               	movf	fround@prec^(0+128),w
 11435  120F  0020               	movlb	0	; select bank0
 11436  1210  00D6               	movwf	??_fround
 11437  1211  01D7               	clrf	??_fround+1
 11438  1212  0856               	movf	??_fround,w
 11439  1213  00F4               	movwf	___awmod@dividend
 11440  1214  0857               	movf	??_fround+1,w
 11441  1215  00F5               	movwf	___awmod@dividend+1
 11442  1216  3064               	movlw	100
 11443  1217  00F2               	movwf	___awmod@divisor
 11444  1218  3000               	movlw	0
 11445  1219  00F3               	movwf	___awmod@divisor+1
 11446  121A  31AA  22C7  3192   	fcall	___awmod
 11447  121D  0873               	movf	?___awmod+1,w
 11448  121E  0020               	movlb	0	; select bank0
 11449  121F  00A3               	movwf	___awdiv@dividend+1
 11450  1220  0872               	movf	?___awmod,w
 11451  1221  00A2               	movwf	___awdiv@dividend
 11452  1222  31AB  23AD  3192   	fcall	___awdiv
 11453  1225  0020               	movlb	0	; select bank0
 11454  1226  0820               	movf	?___awdiv,w
 11455  1227  00D8               	movwf	??_fround+2
 11456  1228  0821               	movf	?___awdiv+1,w
 11457  1229  00D9               	movwf	??_fround+3
 11458  122A  35D8               	lslf	??_fround+2,f
 11459  122B  0DD9               	rlf	??_fround+3,f
 11460  122C  35D8               	lslf	??_fround+2,f
 11461  122D  0DD9               	rlf	??_fround+3,f
 11462  122E  0858               	movf	??_fround+2,w
 11463  122F  3E24               	addlw	36
 11464  1230  00DA               	movwf	??_fround+4
 11465  1231  3000               	movlw	0
 11466  1232  3D59               	addwfc	??_fround+3,w
 11467  1233  00DB               	movwf	??_fround+5
 11468  1234  3034               	movlw	low (__npowers_| (0+32768))
 11469  1235  075A               	addwf	??_fround+4,w
 11470  1236  0084               	movwf	4
 11471  1237  30B0               	movlw	high (__npowers_| (0+32768))
 11472  1238  3D5B               	addwfc	??_fround+5,w
 11473  1239  0085               	movwf	5
 11474  123A  3F00               	moviw [0]fsr0
 11475  123B  00DC               	movwf	??_fround+6
 11476  123C  3F01               	moviw [1]fsr0
 11477  123D  00DD               	movwf	??_fround+7
 11478  123E  3F02               	moviw [2]fsr0
 11479  123F  00DE               	movwf	??_fround+8
 11480  1240  3F03               	moviw [3]fsr0
 11481  1241  00DF               	movwf	??_fround+9
 11482  1242  085F               	movf	??_fround+9,w
 11483  1243  00BB               	movwf	___flmul@b+3
 11484  1244  085E               	movf	??_fround+8,w
 11485  1245  00BA               	movwf	___flmul@b+2
 11486  1246  085D               	movf	??_fround+7,w
 11487  1247  00B9               	movwf	___flmul@b+1
 11488  1248  085C               	movf	??_fround+6,w
 11489  1249  00B8               	movwf	___flmul@b
 11490  124A  3064               	movlw	100
 11491  124B  00A0               	movwf	___awdiv@divisor
 11492  124C  3000               	movlw	0
 11493  124D  00A1               	movwf	___awdiv@divisor+1
 11494  124E  0021               	movlb	1	; select bank1
 11495  124F  0828               	movf	fround@prec^(0+128),w
 11496  1250  0020               	movlb	0	; select bank0
 11497  1251  00E0               	movwf	??_fround+10
 11498  1252  01E1               	clrf	??_fround+11
 11499  1253  0860               	movf	??_fround+10,w
 11500  1254  00A2               	movwf	___awdiv@dividend
 11501  1255  0861               	movf	??_fround+11,w
 11502  1256  00A3               	movwf	___awdiv@dividend+1
 11503  1257  31AB  23AD  3192   	fcall	___awdiv
 11504  125A  0020               	movlb	0	; select bank0
 11505  125B  0820               	movf	?___awdiv,w
 11506  125C  00E2               	movwf	??_fround+12
 11507  125D  0821               	movf	?___awdiv+1,w
 11508  125E  00E3               	movwf	??_fround+13
 11509  125F  35E2               	lslf	??_fround+12,f
 11510  1260  0DE3               	rlf	??_fround+13,f
 11511  1261  35E2               	lslf	??_fround+12,f
 11512  1262  0DE3               	rlf	??_fround+13,f
 11513  1263  0862               	movf	??_fround+12,w
 11514  1264  3E48               	addlw	72
 11515  1265  00E4               	movwf	??_fround+14
 11516  1266  3000               	movlw	0
 11517  1267  3D63               	addwfc	??_fround+13,w
 11518  1268  00E5               	movwf	??_fround+15
 11519  1269  3034               	movlw	low (__npowers_| (0+32768))
 11520  126A  0764               	addwf	??_fround+14,w
 11521  126B  0084               	movwf	4
 11522  126C  30B0               	movlw	high (__npowers_| (0+32768))
 11523  126D  3D65               	addwfc	??_fround+15,w
 11524  126E  0085               	movwf	5
 11525  126F  3F00               	moviw [0]fsr0
 11526  1270  00E6               	movwf	??_fround+16
 11527  1271  3F01               	moviw [1]fsr0
 11528  1272  00E7               	movwf	??_fround+17
 11529  1273  3F02               	moviw [2]fsr0
 11530  1274  00E8               	movwf	??_fround+18
 11531  1275  3F03               	moviw [3]fsr0
 11532  1276  00E9               	movwf	??_fround+19
 11533  1277  0869               	movf	??_fround+19,w
 11534  1278  00BF               	movwf	___flmul@a+3
 11535  1279  0868               	movf	??_fround+18,w
 11536  127A  00BE               	movwf	___flmul@a+2
 11537  127B  0867               	movf	??_fround+17,w
 11538  127C  00BD               	movwf	___flmul@a+1
 11539  127D  0866               	movf	??_fround+16,w
 11540  127E  00BC               	movwf	___flmul@a
 11541  127F  3195  25D4  3192   	fcall	___flmul
 11542  1282  0020               	movlb	0	; select bank0
 11543  1283  083B               	movf	?___flmul+3,w
 11544  1284  0021               	movlb	1	; select bank1
 11545  1285  00A7               	movwf	(_fround$2187+3)^(0+128)
 11546  1286  0020               	movlb	0	; select bank0
 11547  1287  083A               	movf	?___flmul+2,w
 11548  1288  0021               	movlb	1	; select bank1
 11549  1289  00A6               	movwf	(_fround$2187+2)^(0+128)
 11550  128A  0020               	movlb	0	; select bank0
 11551  128B  0839               	movf	?___flmul+1,w
 11552  128C  0021               	movlb	1	; select bank1
 11553  128D  00A5               	movwf	(_fround$2187+1)^(0+128)
 11554  128E  0020               	movlb	0	; select bank0
 11555  128F  0838               	movf	?___flmul,w
 11556  1290  0021               	movlb	1	; select bank1
 11557  1291  00A4               	movwf	_fround$2187^(0+128)
 11558                           
 11559                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11560  1292  300A               	movlw	10
 11561  1293  00F2               	movwf	___awmod@divisor
 11562  1294  3000               	movlw	0
 11563  1295  00F3               	movwf	___awmod@divisor+1
 11564  1296  0828               	movf	fround@prec^(0+128),w
 11565  1297  0020               	movlb	0	; select bank0
 11566  1298  00D6               	movwf	??_fround
 11567  1299  01D7               	clrf	??_fround+1
 11568  129A  0856               	movf	??_fround,w
 11569  129B  00F4               	movwf	___awmod@dividend
 11570  129C  0857               	movf	??_fround+1,w
 11571  129D  00F5               	movwf	___awmod@dividend+1
 11572  129E  31AA  22C7  3192   	fcall	___awmod
 11573  12A1  0873               	movf	?___awmod+1,w
 11574  12A2  0085               	movwf	5
 11575  12A3  0872               	movf	?___awmod,w
 11576  12A4  0084               	movwf	4
 11577  12A5  3584               	lslf	4,f
 11578  12A6  0D85               	rlf	5,f
 11579  12A7  3584               	lslf	4,f
 11580  12A8  0D85               	rlf	5,f
 11581  12A9  3034               	movlw	low (__npowers_| (0+32768))
 11582  12AA  0784               	addwf	4,f
 11583  12AB  30B0               	movlw	high (__npowers_| (0+32768))
 11584  12AC  3D85               	addwfc	5,f
 11585  12AD  3F00               	moviw [0]fsr0
 11586  12AE  0020               	movlb	0	; select bank0
 11587  12AF  00D8               	movwf	??_fround+2
 11588  12B0  3F01               	moviw [1]fsr0
 11589  12B1  00D9               	movwf	??_fround+3
 11590  12B2  3F02               	moviw [2]fsr0
 11591  12B3  00DA               	movwf	??_fround+4
 11592  12B4  3F03               	moviw [3]fsr0
 11593  12B5  00DB               	movwf	??_fround+5
 11594  12B6  085B               	movf	??_fround+5,w
 11595  12B7  00BB               	movwf	___flmul@b+3
 11596  12B8  085A               	movf	??_fround+4,w
 11597  12B9  00BA               	movwf	___flmul@b+2
 11598  12BA  0859               	movf	??_fround+3,w
 11599  12BB  00B9               	movwf	___flmul@b+1
 11600  12BC  0858               	movf	??_fround+2,w
 11601  12BD  00B8               	movwf	___flmul@b
 11602  12BE  0021               	movlb	1	; select bank1
 11603  12BF  0827               	movf	(_fround$2187+3)^(0+128),w
 11604  12C0  0020               	movlb	0	; select bank0
 11605  12C1  00BF               	movwf	___flmul@a+3
 11606  12C2  0021               	movlb	1	; select bank1
 11607  12C3  0826               	movf	(_fround$2187+2)^(0+128),w
 11608  12C4  0020               	movlb	0	; select bank0
 11609  12C5  00BE               	movwf	___flmul@a+2
 11610  12C6  0021               	movlb	1	; select bank1
 11611  12C7  0825               	movf	(_fround$2187+1)^(0+128),w
 11612  12C8  0020               	movlb	0	; select bank0
 11613  12C9  00BD               	movwf	___flmul@a+1
 11614  12CA  0021               	movlb	1	; select bank1
 11615  12CB  0824               	movf	_fround$2187^(0+128),w
 11616  12CC  0020               	movlb	0	; select bank0
 11617  12CD  00BC               	movwf	___flmul@a
 11618  12CE  3195  25D4  3192   	fcall	___flmul
 11619  12D1  0020               	movlb	0	; select bank0
 11620  12D2  083B               	movf	?___flmul+3,w
 11621  12D3  0021               	movlb	1	; select bank1
 11622  12D4  00A3               	movwf	(_fround$2188+3)^(0+128)
 11623  12D5  0020               	movlb	0	; select bank0
 11624  12D6  083A               	movf	?___flmul+2,w
 11625  12D7  0021               	movlb	1	; select bank1
 11626  12D8  00A2               	movwf	(_fround$2188+2)^(0+128)
 11627  12D9  0020               	movlb	0	; select bank0
 11628  12DA  0839               	movf	?___flmul+1,w
 11629  12DB  0021               	movlb	1	; select bank1
 11630  12DC  00A1               	movwf	(_fround$2188+1)^(0+128)
 11631  12DD  0020               	movlb	0	; select bank0
 11632  12DE  0838               	movf	?___flmul,w
 11633  12DF  0021               	movlb	1	; select bank1
 11634  12E0  00A0               	movwf	_fround$2188^(0+128)
 11635                           
 11636                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11637  12E1  303F               	movlw	63
 11638  12E2  0020               	movlb	0	; select bank0
 11639  12E3  00BB               	movwf	___flmul@b+3
 11640  12E4  3000               	movlw	0
 11641  12E5  00BA               	movwf	___flmul@b+2
 11642  12E6  3000               	movlw	0
 11643  12E7  00B9               	movwf	___flmul@b+1
 11644  12E8  3000               	movlw	0
 11645  12E9  00B8               	movwf	___flmul@b
 11646  12EA  0021               	movlb	1	; select bank1
 11647  12EB  0823               	movf	(_fround$2188+3)^(0+128),w
 11648  12EC  0020               	movlb	0	; select bank0
 11649  12ED  00BF               	movwf	___flmul@a+3
 11650  12EE  0021               	movlb	1	; select bank1
 11651  12EF  0822               	movf	(_fround$2188+2)^(0+128),w
 11652  12F0  0020               	movlb	0	; select bank0
 11653  12F1  00BE               	movwf	___flmul@a+2
 11654  12F2  0021               	movlb	1	; select bank1
 11655  12F3  0821               	movf	(_fround$2188+1)^(0+128),w
 11656  12F4  0020               	movlb	0	; select bank0
 11657  12F5  00BD               	movwf	___flmul@a+1
 11658  12F6  0021               	movlb	1	; select bank1
 11659  12F7  0820               	movf	_fround$2188^(0+128),w
 11660  12F8  0020               	movlb	0	; select bank0
 11661  12F9  00BC               	movwf	___flmul@a
 11662  12FA  3195  25D4         	fcall	___flmul
 11663  12FC  0020               	movlb	0	; select bank0
 11664  12FD  083B               	movf	?___flmul+3,w
 11665  12FE  00D5               	movwf	?_fround+3
 11666  12FF  083A               	movf	?___flmul+2,w
 11667  1300  00D4               	movwf	?_fround+2
 11668  1301  0839               	movf	?___flmul+1,w
 11669  1302  00D3               	movwf	?_fround+1
 11670  1303  0838               	movf	?___flmul,w
 11671  1304  00D2               	movwf	?_fround
 11672  1305  0008               	return
 11673  1306                     l7342:	
 11674                           
 11675                           ;doprnt.c: 415: else if(prec > 10)
 11676  1306  300B               	movlw	11
 11677  1307  0021               	movlb	1	; select bank1
 11678  1308  0228               	subwf	fround@prec^(0+128),w
 11679  1309  1C03               	skipc
 11680  130A  2BA4               	goto	l7350
 11681                           
 11682                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11683  130B  300A               	movlw	10
 11684  130C  00F2               	movwf	___awmod@divisor
 11685  130D  3000               	movlw	0
 11686  130E  00F3               	movwf	___awmod@divisor+1
 11687  130F  0828               	movf	fround@prec^(0+128),w
 11688  1310  0020               	movlb	0	; select bank0
 11689  1311  00D6               	movwf	??_fround
 11690  1312  01D7               	clrf	??_fround+1
 11691  1313  0856               	movf	??_fround,w
 11692  1314  00F4               	movwf	___awmod@dividend
 11693  1315  0857               	movf	??_fround+1,w
 11694  1316  00F5               	movwf	___awmod@dividend+1
 11695  1317  31AA  22C7  3192   	fcall	___awmod
 11696  131A  0873               	movf	?___awmod+1,w
 11697  131B  0085               	movwf	5
 11698  131C  0872               	movf	?___awmod,w
 11699  131D  0084               	movwf	4
 11700  131E  3584               	lslf	4,f
 11701  131F  0D85               	rlf	5,f
 11702  1320  3584               	lslf	4,f
 11703  1321  0D85               	rlf	5,f
 11704  1322  3034               	movlw	low (__npowers_| (0+32768))
 11705  1323  0784               	addwf	4,f
 11706  1324  30B0               	movlw	high (__npowers_| (0+32768))
 11707  1325  3D85               	addwfc	5,f
 11708  1326  3F00               	moviw [0]fsr0
 11709  1327  0020               	movlb	0	; select bank0
 11710  1328  00D8               	movwf	??_fround+2
 11711  1329  3F01               	moviw [1]fsr0
 11712  132A  00D9               	movwf	??_fround+3
 11713  132B  3F02               	moviw [2]fsr0
 11714  132C  00DA               	movwf	??_fround+4
 11715  132D  3F03               	moviw [3]fsr0
 11716  132E  00DB               	movwf	??_fround+5
 11717  132F  085B               	movf	??_fround+5,w
 11718  1330  00BB               	movwf	___flmul@b+3
 11719  1331  085A               	movf	??_fround+4,w
 11720  1332  00BA               	movwf	___flmul@b+2
 11721  1333  0859               	movf	??_fround+3,w
 11722  1334  00B9               	movwf	___flmul@b+1
 11723  1335  0858               	movf	??_fround+2,w
 11724  1336  00B8               	movwf	___flmul@b
 11725  1337  300A               	movlw	10
 11726  1338  00A0               	movwf	___awdiv@divisor
 11727  1339  3000               	movlw	0
 11728  133A  00A1               	movwf	___awdiv@divisor+1
 11729  133B  0021               	movlb	1	; select bank1
 11730  133C  0828               	movf	fround@prec^(0+128),w
 11731  133D  0020               	movlb	0	; select bank0
 11732  133E  00DC               	movwf	??_fround+6
 11733  133F  01DD               	clrf	??_fround+7
 11734  1340  085C               	movf	??_fround+6,w
 11735  1341  00A2               	movwf	___awdiv@dividend
 11736  1342  085D               	movf	??_fround+7,w
 11737  1343  00A3               	movwf	___awdiv@dividend+1
 11738  1344  31AB  23AD  3192   	fcall	___awdiv
 11739  1347  0020               	movlb	0	; select bank0
 11740  1348  0820               	movf	?___awdiv,w
 11741  1349  00DE               	movwf	??_fround+8
 11742  134A  0821               	movf	?___awdiv+1,w
 11743  134B  00DF               	movwf	??_fround+9
 11744  134C  35DE               	lslf	??_fround+8,f
 11745  134D  0DDF               	rlf	??_fround+9,f
 11746  134E  35DE               	lslf	??_fround+8,f
 11747  134F  0DDF               	rlf	??_fround+9,f
 11748  1350  085E               	movf	??_fround+8,w
 11749  1351  3E24               	addlw	36
 11750  1352  00E0               	movwf	??_fround+10
 11751  1353  3000               	movlw	0
 11752  1354  3D5F               	addwfc	??_fround+9,w
 11753  1355  00E1               	movwf	??_fround+11
 11754  1356  3034               	movlw	low (__npowers_| (0+32768))
 11755  1357  0760               	addwf	??_fround+10,w
 11756  1358  0084               	movwf	4
 11757  1359  30B0               	movlw	high (__npowers_| (0+32768))
 11758  135A  3D61               	addwfc	??_fround+11,w
 11759  135B  0085               	movwf	5
 11760  135C  3F00               	moviw [0]fsr0
 11761  135D  00E2               	movwf	??_fround+12
 11762  135E  3F01               	moviw [1]fsr0
 11763  135F  00E3               	movwf	??_fround+13
 11764  1360  3F02               	moviw [2]fsr0
 11765  1361  00E4               	movwf	??_fround+14
 11766  1362  3F03               	moviw [3]fsr0
 11767  1363  00E5               	movwf	??_fround+15
 11768  1364  0865               	movf	??_fround+15,w
 11769  1365  00BF               	movwf	___flmul@a+3
 11770  1366  0864               	movf	??_fround+14,w
 11771  1367  00BE               	movwf	___flmul@a+2
 11772  1368  0863               	movf	??_fround+13,w
 11773  1369  00BD               	movwf	___flmul@a+1
 11774  136A  0862               	movf	??_fround+12,w
 11775  136B  00BC               	movwf	___flmul@a
 11776  136C  3195  25D4  3192   	fcall	___flmul
 11777  136F  0020               	movlb	0	; select bank0
 11778  1370  083B               	movf	?___flmul+3,w
 11779  1371  0021               	movlb	1	; select bank1
 11780  1372  00A7               	movwf	(_fround$2187+3)^(0+128)
 11781  1373  0020               	movlb	0	; select bank0
 11782  1374  083A               	movf	?___flmul+2,w
 11783  1375  0021               	movlb	1	; select bank1
 11784  1376  00A6               	movwf	(_fround$2187+2)^(0+128)
 11785  1377  0020               	movlb	0	; select bank0
 11786  1378  0839               	movf	?___flmul+1,w
 11787  1379  0021               	movlb	1	; select bank1
 11788  137A  00A5               	movwf	(_fround$2187+1)^(0+128)
 11789  137B  0020               	movlb	0	; select bank0
 11790  137C  0838               	movf	?___flmul,w
 11791  137D  0021               	movlb	1	; select bank1
 11792  137E  00A4               	movwf	_fround$2187^(0+128)
 11793                           
 11794                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11795  137F  303F               	movlw	63
 11796  1380  0020               	movlb	0	; select bank0
 11797  1381  00BB               	movwf	___flmul@b+3
 11798  1382  3000               	movlw	0
 11799  1383  00BA               	movwf	___flmul@b+2
 11800  1384  3000               	movlw	0
 11801  1385  00B9               	movwf	___flmul@b+1
 11802  1386  3000               	movlw	0
 11803  1387  00B8               	movwf	___flmul@b
 11804  1388  0021               	movlb	1	; select bank1
 11805  1389  0827               	movf	(_fround$2187+3)^(0+128),w
 11806  138A  0020               	movlb	0	; select bank0
 11807  138B  00BF               	movwf	___flmul@a+3
 11808  138C  0021               	movlb	1	; select bank1
 11809  138D  0826               	movf	(_fround$2187+2)^(0+128),w
 11810  138E  0020               	movlb	0	; select bank0
 11811  138F  00BE               	movwf	___flmul@a+2
 11812  1390  0021               	movlb	1	; select bank1
 11813  1391  0825               	movf	(_fround$2187+1)^(0+128),w
 11814  1392  0020               	movlb	0	; select bank0
 11815  1393  00BD               	movwf	___flmul@a+1
 11816  1394  0021               	movlb	1	; select bank1
 11817  1395  0824               	movf	_fround$2187^(0+128),w
 11818  1396  0020               	movlb	0	; select bank0
 11819  1397  00BC               	movwf	___flmul@a
 11820  1398  3195  25D4         	fcall	___flmul
 11821  139A  0020               	movlb	0	; select bank0
 11822  139B  083B               	movf	?___flmul+3,w
 11823  139C  00D5               	movwf	?_fround+3
 11824  139D  083A               	movf	?___flmul+2,w
 11825  139E  00D4               	movwf	?_fround+2
 11826  139F  0839               	movf	?___flmul+1,w
 11827  13A0  00D3               	movwf	?_fround+1
 11828  13A1  0838               	movf	?___flmul,w
 11829  13A2  00D2               	movwf	?_fround
 11830  13A3  0008               	return
 11831  13A4                     l7350:	
 11832                           
 11833                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11834  13A4  303F               	movlw	63
 11835  13A5  0020               	movlb	0	; select bank0
 11836  13A6  00BB               	movwf	___flmul@b+3
 11837  13A7  3000               	movlw	0
 11838  13A8  00BA               	movwf	___flmul@b+2
 11839  13A9  3000               	movlw	0
 11840  13AA  00B9               	movwf	___flmul@b+1
 11841  13AB  3000               	movlw	0
 11842  13AC  00B8               	movwf	___flmul@b
 11843  13AD  0021               	movlb	1	; select bank1
 11844  13AE  0828               	movf	fround@prec^(0+128),w
 11845  13AF  0020               	movlb	0	; select bank0
 11846  13B0  00D6               	movwf	??_fround
 11847  13B1  01D7               	clrf	??_fround+1
 11848  13B2  35D6               	lslf	??_fround,f
 11849  13B3  0DD7               	rlf	??_fround+1,f
 11850  13B4  35D6               	lslf	??_fround,f
 11851  13B5  0DD7               	rlf	??_fround+1,f
 11852  13B6  3034               	movlw	low (__npowers_| (0+32768))
 11853  13B7  0756               	addwf	??_fround,w
 11854  13B8  0084               	movwf	4
 11855  13B9  30B0               	movlw	high (__npowers_| (0+32768))
 11856  13BA  3D57               	addwfc	??_fround+1,w
 11857  13BB  0085               	movwf	5
 11858  13BC  3F00               	moviw [0]fsr0
 11859  13BD  00D8               	movwf	??_fround+2
 11860  13BE  3F01               	moviw [1]fsr0
 11861  13BF  00D9               	movwf	??_fround+3
 11862  13C0  3F02               	moviw [2]fsr0
 11863  13C1  00DA               	movwf	??_fround+4
 11864  13C2  3F03               	moviw [3]fsr0
 11865  13C3  00DB               	movwf	??_fround+5
 11866  13C4  085B               	movf	??_fround+5,w
 11867  13C5  00BF               	movwf	___flmul@a+3
 11868  13C6  085A               	movf	??_fround+4,w
 11869  13C7  00BE               	movwf	___flmul@a+2
 11870  13C8  0859               	movf	??_fround+3,w
 11871  13C9  00BD               	movwf	___flmul@a+1
 11872  13CA  0858               	movf	??_fround+2,w
 11873  13CB  00BC               	movwf	___flmul@a
 11874  13CC  3195  25D4         	fcall	___flmul
 11875  13CE  0020               	movlb	0	; select bank0
 11876  13CF  083B               	movf	?___flmul+3,w
 11877  13D0  00D5               	movwf	?_fround+3
 11878  13D1  083A               	movf	?___flmul+2,w
 11879  13D2  00D4               	movwf	?_fround+2
 11880  13D3  0839               	movf	?___flmul+1,w
 11881  13D4  00D3               	movwf	?_fround+1
 11882  13D5  0838               	movf	?___flmul,w
 11883  13D6  00D2               	movwf	?_fround
 11884  13D7  0008               	return
 11885  13D8                     __end_of_fround:	
 11886                           
 11887                           	psect	text12
 11888  2AC7                     __ptext12:	
 11889 ;; *************** function ___awmod *****************
 11890 ;; Defined at:
 11891 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11892 ;; Parameters:    Size  Location     Type
 11893 ;;  divisor         2    2[COMMON] int 
 11894 ;;  dividend        2    4[COMMON] int 
 11895 ;; Auto vars:     Size  Location     Type
 11896 ;;  sign            1    8[COMMON] unsigned char 
 11897 ;;  counter         1    7[COMMON] unsigned char 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  2    2[COMMON] int 
 11900 ;; Registers used:
 11901 ;;		wreg, status,2, status,0
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11910 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11911 ;;Total ram usage:        7 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; Hardware stack levels required when called:    2
 11914 ;; This function calls:
 11915 ;;		Nothing
 11916 ;; This function is called by:
 11917 ;;		_fround
 11918 ;;		_scale
 11919 ;; This function uses a non-reentrant model
 11920 ;;
 11921                           
 11922                           
 11923                           ;psect for function ___awmod
 11924  2AC7                     ___awmod:	
 11925                           
 11926                           ;incstack = 0
 11927                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11928  2AC7  01F8               	clrf	___awmod@sign
 11929  2AC8  1FF5               	btfss	___awmod@dividend+1,7
 11930  2AC9  2AD1               	goto	l6792
 11931  2ACA  09F4               	comf	___awmod@dividend,f
 11932  2ACB  09F5               	comf	___awmod@dividend+1,f
 11933  2ACC  0AF4               	incf	___awmod@dividend,f
 11934  2ACD  1903               	skipnz
 11935  2ACE  0AF5               	incf	___awmod@dividend+1,f
 11936  2ACF  01F8               	clrf	___awmod@sign
 11937  2AD0  0AF8               	incf	___awmod@sign,f
 11938  2AD1                     l6792:	
 11939  2AD1  1FF3               	btfss	___awmod@divisor+1,7
 11940  2AD2  2AD8               	goto	l6796
 11941  2AD3  09F2               	comf	___awmod@divisor,f
 11942  2AD4  09F3               	comf	___awmod@divisor+1,f
 11943  2AD5  0AF2               	incf	___awmod@divisor,f
 11944  2AD6  1903               	skipnz
 11945  2AD7  0AF3               	incf	___awmod@divisor+1,f
 11946  2AD8                     l6796:	
 11947  2AD8  0872               	movf	___awmod@divisor,w
 11948  2AD9  0473               	iorwf	___awmod@divisor+1,w
 11949  2ADA  1903               	btfsc	3,2
 11950  2ADB  2AFF               	goto	l6814
 11951  2ADC  01F7               	clrf	___awmod@counter
 11952  2ADD  0AF7               	incf	___awmod@counter,f
 11953  2ADE                     l6804:	
 11954  2ADE  1BF3               	btfsc	___awmod@divisor+1,7
 11955  2ADF  2AEA               	goto	l6806
 11956  2AE0  3001               	movlw	1
 11957  2AE1                     u8685:	
 11958  2AE1  35F2               	lslf	___awmod@divisor,f
 11959  2AE2  0DF3               	rlf	___awmod@divisor+1,f
 11960  2AE3  0B89               	decfsz	9,f
 11961  2AE4  2AE1               	goto	u8685
 11962  2AE5  3001               	movlw	1
 11963  2AE6  00F6               	movwf	??___awmod
 11964  2AE7  0876               	movf	??___awmod,w
 11965  2AE8  07F7               	addwf	___awmod@counter,f
 11966  2AE9  2ADE               	goto	l6804
 11967  2AEA                     l6806:	
 11968  2AEA  0873               	movf	___awmod@divisor+1,w
 11969  2AEB  0275               	subwf	___awmod@dividend+1,w
 11970  2AEC  1D03               	skipz
 11971  2AED  2AF0               	goto	u8705
 11972  2AEE  0872               	movf	___awmod@divisor,w
 11973  2AEF  0274               	subwf	___awmod@dividend,w
 11974  2AF0                     u8705:	
 11975  2AF0  1C03               	skipc
 11976  2AF1  2AF6               	goto	l6810
 11977  2AF2  0872               	movf	___awmod@divisor,w
 11978  2AF3  02F4               	subwf	___awmod@dividend,f
 11979  2AF4  0873               	movf	___awmod@divisor+1,w
 11980  2AF5  3BF5               	subwfb	___awmod@dividend+1,f
 11981  2AF6                     l6810:	
 11982  2AF6  3001               	movlw	1
 11983  2AF7                     u8715:	
 11984  2AF7  36F3               	lsrf	___awmod@divisor+1,f
 11985  2AF8  0CF2               	rrf	___awmod@divisor,f
 11986  2AF9  0B89               	decfsz	9,f
 11987  2AFA  2AF7               	goto	u8715
 11988  2AFB  3001               	movlw	1
 11989  2AFC  02F7               	subwf	___awmod@counter,f
 11990  2AFD  1D03               	btfss	3,2
 11991  2AFE  2AEA               	goto	l6806
 11992  2AFF                     l6814:	
 11993  2AFF  0878               	movf	___awmod@sign,w
 11994  2B00  1903               	btfsc	3,2
 11995  2B01  2B07               	goto	l6818
 11996  2B02  09F4               	comf	___awmod@dividend,f
 11997  2B03  09F5               	comf	___awmod@dividend+1,f
 11998  2B04  0AF4               	incf	___awmod@dividend,f
 11999  2B05  1903               	skipnz
 12000  2B06  0AF5               	incf	___awmod@dividend+1,f
 12001  2B07                     l6818:	
 12002  2B07  0875               	movf	___awmod@dividend+1,w
 12003  2B08  00F3               	movwf	?___awmod+1
 12004  2B09  0874               	movf	___awmod@dividend,w
 12005  2B0A  00F2               	movwf	?___awmod
 12006  2B0B  0008               	return
 12007  2B0C                     __end_of___awmod:	
 12008                           
 12009                           	psect	text13
 12010  2BAD                     __ptext13:	
 12011 ;; *************** function ___awdiv *****************
 12012 ;; Defined at:
 12013 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;  divisor         2    0[BANK0 ] int 
 12016 ;;  dividend        2    2[BANK0 ] int 
 12017 ;; Auto vars:     Size  Location     Type
 12018 ;;  quotient        2    6[BANK0 ] int 
 12019 ;;  sign            1    5[BANK0 ] unsigned char 
 12020 ;;  counter         1    4[BANK0 ] unsigned char 
 12021 ;; Return value:  Size  Location     Type
 12022 ;;                  2    0[BANK0 ] int 
 12023 ;; Registers used:
 12024 ;;		wreg, status,2, status,0
 12025 ;; Tracked objects:
 12026 ;;		On entry : 0/0
 12027 ;;		On exit  : 0/0
 12028 ;;		Unchanged: 0/0
 12029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12030 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12031 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12033 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12034 ;;Total ram usage:        9 bytes
 12035 ;; Hardware stack levels used:    1
 12036 ;; Hardware stack levels required when called:    2
 12037 ;; This function calls:
 12038 ;;		Nothing
 12039 ;; This function is called by:
 12040 ;;		_fround
 12041 ;;		_scale
 12042 ;;		_sprintf
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           
 12047                           ;psect for function ___awdiv
 12048  2BAD                     ___awdiv:	
 12049                           
 12050                           ;incstack = 0
 12051                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12052  2BAD  0020               	movlb	0	; select bank0
 12053  2BAE  01A5               	clrf	___awdiv@sign
 12054  2BAF  1FA1               	btfss	___awdiv@divisor+1,7
 12055  2BB0  2BB8               	goto	l6748
 12056  2BB1  09A0               	comf	___awdiv@divisor,f
 12057  2BB2  09A1               	comf	___awdiv@divisor+1,f
 12058  2BB3  0AA0               	incf	___awdiv@divisor,f
 12059  2BB4  1903               	skipnz
 12060  2BB5  0AA1               	incf	___awdiv@divisor+1,f
 12061  2BB6  01A5               	clrf	___awdiv@sign
 12062  2BB7  0AA5               	incf	___awdiv@sign,f
 12063  2BB8                     l6748:	
 12064  2BB8  1FA3               	btfss	___awdiv@dividend+1,7
 12065  2BB9  2BC3               	goto	l6754
 12066  2BBA  09A2               	comf	___awdiv@dividend,f
 12067  2BBB  09A3               	comf	___awdiv@dividend+1,f
 12068  2BBC  0AA2               	incf	___awdiv@dividend,f
 12069  2BBD  1903               	skipnz
 12070  2BBE  0AA3               	incf	___awdiv@dividend+1,f
 12071  2BBF  3001               	movlw	1
 12072  2BC0  00F9               	movwf	??___awdiv
 12073  2BC1  0879               	movf	??___awdiv,w
 12074  2BC2  06A5               	xorwf	___awdiv@sign,f
 12075  2BC3                     l6754:	
 12076  2BC3  01A6               	clrf	___awdiv@quotient
 12077  2BC4  01A7               	clrf	___awdiv@quotient+1
 12078  2BC5  0820               	movf	___awdiv@divisor,w
 12079  2BC6  0421               	iorwf	___awdiv@divisor+1,w
 12080  2BC7  1903               	btfsc	3,2
 12081  2BC8  2BF2               	goto	l6776
 12082  2BC9  01A4               	clrf	___awdiv@counter
 12083  2BCA  0AA4               	incf	___awdiv@counter,f
 12084  2BCB                     l6764:	
 12085  2BCB  1BA1               	btfsc	___awdiv@divisor+1,7
 12086  2BCC  2BD7               	goto	l6766
 12087  2BCD  3001               	movlw	1
 12088  2BCE                     u8585:	
 12089  2BCE  35A0               	lslf	___awdiv@divisor,f
 12090  2BCF  0DA1               	rlf	___awdiv@divisor+1,f
 12091  2BD0  0B89               	decfsz	9,f
 12092  2BD1  2BCE               	goto	u8585
 12093  2BD2  3001               	movlw	1
 12094  2BD3  00F9               	movwf	??___awdiv
 12095  2BD4  0879               	movf	??___awdiv,w
 12096  2BD5  07A4               	addwf	___awdiv@counter,f
 12097  2BD6  2BCB               	goto	l6764
 12098  2BD7                     l6766:	
 12099  2BD7  3001               	movlw	1
 12100  2BD8                     u8605:	
 12101  2BD8  35A6               	lslf	___awdiv@quotient,f
 12102  2BD9  0DA7               	rlf	___awdiv@quotient+1,f
 12103  2BDA  0B89               	decfsz	9,f
 12104  2BDB  2BD8               	goto	u8605
 12105  2BDC  0821               	movf	___awdiv@divisor+1,w
 12106  2BDD  0223               	subwf	___awdiv@dividend+1,w
 12107  2BDE  1D03               	skipz
 12108  2BDF  2BE2               	goto	u8615
 12109  2BE0  0820               	movf	___awdiv@divisor,w
 12110  2BE1  0222               	subwf	___awdiv@dividend,w
 12111  2BE2                     u8615:	
 12112  2BE2  1C03               	skipc
 12113  2BE3  2BE9               	goto	l6772
 12114  2BE4  0820               	movf	___awdiv@divisor,w
 12115  2BE5  02A2               	subwf	___awdiv@dividend,f
 12116  2BE6  0821               	movf	___awdiv@divisor+1,w
 12117  2BE7  3BA3               	subwfb	___awdiv@dividend+1,f
 12118  2BE8  1426               	bsf	___awdiv@quotient,0
 12119  2BE9                     l6772:	
 12120  2BE9  3001               	movlw	1
 12121  2BEA                     u8625:	
 12122  2BEA  36A1               	lsrf	___awdiv@divisor+1,f
 12123  2BEB  0CA0               	rrf	___awdiv@divisor,f
 12124  2BEC  0B89               	decfsz	9,f
 12125  2BED  2BEA               	goto	u8625
 12126  2BEE  3001               	movlw	1
 12127  2BEF  02A4               	subwf	___awdiv@counter,f
 12128  2BF0  1D03               	btfss	3,2
 12129  2BF1  2BD7               	goto	l6766
 12130  2BF2                     l6776:	
 12131  2BF2  0825               	movf	___awdiv@sign,w
 12132  2BF3  1903               	btfsc	3,2
 12133  2BF4  2BFA               	goto	l6780
 12134  2BF5  09A6               	comf	___awdiv@quotient,f
 12135  2BF6  09A7               	comf	___awdiv@quotient+1,f
 12136  2BF7  0AA6               	incf	___awdiv@quotient,f
 12137  2BF8  1903               	skipnz
 12138  2BF9  0AA7               	incf	___awdiv@quotient+1,f
 12139  2BFA                     l6780:	
 12140  2BFA  0827               	movf	___awdiv@quotient+1,w
 12141  2BFB  00A1               	movwf	?___awdiv+1
 12142  2BFC  0826               	movf	___awdiv@quotient,w
 12143  2BFD  00A0               	movwf	?___awdiv
 12144  2BFE  0008               	return
 12145  2BFF                     __end_of___awdiv:	
 12146                           
 12147                           	psect	text14
 12148  21EA                     __ptext14:	
 12149 ;; *************** function __tdiv_to_l_ *****************
 12150 ;; Defined at:
 12151 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12152 ;; Parameters:    Size  Location     Type
 12153 ;;  f1              4    2[COMMON] float 
 12154 ;;  f2              4    6[COMMON] float 
 12155 ;; Auto vars:     Size  Location     Type
 12156 ;;  quot            4    4[BANK0 ] unsigned long 
 12157 ;;  exp1            1    9[BANK0 ] unsigned char 
 12158 ;;  cntr            1    8[BANK0 ] unsigned char 
 12159 ;; Return value:  Size  Location     Type
 12160 ;;                  4    2[COMMON] unsigned long 
 12161 ;; Registers used:
 12162 ;;		wreg, status,2, status,0
 12163 ;; Tracked objects:
 12164 ;;		On entry : 0/0
 12165 ;;		On exit  : 0/0
 12166 ;;		Unchanged: 0/0
 12167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12168 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12169 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12170 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12171 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12172 ;;Total ram usage:       18 bytes
 12173 ;; Hardware stack levels used:    1
 12174 ;; Hardware stack levels required when called:    2
 12175 ;; This function calls:
 12176 ;;		Nothing
 12177 ;; This function is called by:
 12178 ;;		_sprintf
 12179 ;; This function uses a non-reentrant model
 12180 ;;
 12181                           
 12182                           
 12183                           ;psect for function __tdiv_to_l_
 12184  21EA                     __tdiv_to_l_:	
 12185                           
 12186                           ;incstack = 0
 12187                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 12188  21EA  0872               	movf	__tdiv_to_l_@f1,w
 12189  21EB  0020               	movlb	0	; select bank0
 12190  21EC  00A0               	movwf	??__tdiv_to_l_
 12191  21ED  0873               	movf	__tdiv_to_l_@f1+1,w
 12192  21EE  00A1               	movwf	??__tdiv_to_l_+1
 12193  21EF  0874               	movf	__tdiv_to_l_@f1+2,w
 12194  21F0  00A2               	movwf	??__tdiv_to_l_+2
 12195  21F1  1003               	clrc
 12196  21F2  0D21               	rlf	??__tdiv_to_l_+1,w
 12197  21F3  0D22               	rlf	??__tdiv_to_l_+2,w
 12198  21F4  00A3               	movwf	??__tdiv_to_l_+3
 12199  21F5  0823               	movf	??__tdiv_to_l_+3,w
 12200  21F6  00A9               	movwf	__tdiv_to_l_@exp1
 12201  21F7  0829               	movf	__tdiv_to_l_@exp1,w
 12202  21F8  1D03               	btfss	3,2
 12203  21F9  2A03               	goto	l7412
 12204  21FA  3000               	movlw	0
 12205  21FB  00F5               	movwf	?__tdiv_to_l_+3
 12206  21FC  3000               	movlw	0
 12207  21FD  00F4               	movwf	?__tdiv_to_l_+2
 12208  21FE  3000               	movlw	0
 12209  21FF  00F3               	movwf	?__tdiv_to_l_+1
 12210  2200  3000               	movlw	0
 12211  2201  00F2               	movwf	?__tdiv_to_l_
 12212  2202  0008               	return
 12213  2203                     l7412:	
 12214  2203  0876               	movf	__tdiv_to_l_@f2,w
 12215  2204  00A0               	movwf	??__tdiv_to_l_
 12216  2205  0877               	movf	__tdiv_to_l_@f2+1,w
 12217  2206  00A1               	movwf	??__tdiv_to_l_+1
 12218  2207  0878               	movf	__tdiv_to_l_@f2+2,w
 12219  2208  00A2               	movwf	??__tdiv_to_l_+2
 12220  2209  1003               	clrc
 12221  220A  0D21               	rlf	??__tdiv_to_l_+1,w
 12222  220B  0D22               	rlf	??__tdiv_to_l_+2,w
 12223  220C  00A3               	movwf	??__tdiv_to_l_+3
 12224  220D  0823               	movf	??__tdiv_to_l_+3,w
 12225  220E  00A8               	movwf	__tdiv_to_l_@cntr
 12226  220F  0828               	movf	__tdiv_to_l_@cntr,w
 12227  2210  1D03               	btfss	3,2
 12228  2211  2A1B               	goto	l1202
 12229  2212  3000               	movlw	0
 12230  2213  00F5               	movwf	?__tdiv_to_l_+3
 12231  2214  3000               	movlw	0
 12232  2215  00F4               	movwf	?__tdiv_to_l_+2
 12233  2216  3000               	movlw	0
 12234  2217  00F3               	movwf	?__tdiv_to_l_+1
 12235  2218  3000               	movlw	0
 12236  2219  00F2               	movwf	?__tdiv_to_l_
 12237  221A  0008               	return
 12238  221B                     l1202:	
 12239  221B  17F3               	bsf	__tdiv_to_l_@f1+1,7
 12240  221C  30FF               	movlw	255
 12241  221D  05F2               	andwf	__tdiv_to_l_@f1,f
 12242  221E  30FF               	movlw	255
 12243  221F  05F3               	andwf	__tdiv_to_l_@f1+1,f
 12244  2220  3000               	movlw	0
 12245  2221  05F4               	andwf	__tdiv_to_l_@f1+2,f
 12246  2222  17F7               	bsf	__tdiv_to_l_@f2+1,7
 12247  2223  30FF               	movlw	255
 12248  2224  05F6               	andwf	__tdiv_to_l_@f2,f
 12249  2225  30FF               	movlw	255
 12250  2226  05F7               	andwf	__tdiv_to_l_@f2+1,f
 12251  2227  3000               	movlw	0
 12252  2228  05F8               	andwf	__tdiv_to_l_@f2+2,f
 12253  2229  3000               	movlw	0
 12254  222A  00A7               	movwf	__tdiv_to_l_@quot+3
 12255  222B  3000               	movlw	0
 12256  222C  00A6               	movwf	__tdiv_to_l_@quot+2
 12257  222D  3000               	movlw	0
 12258  222E  00A5               	movwf	__tdiv_to_l_@quot+1
 12259  222F  3000               	movlw	0
 12260  2230  00A4               	movwf	__tdiv_to_l_@quot
 12261  2231  307F               	movlw	127
 12262  2232  02A9               	subwf	__tdiv_to_l_@exp1,f
 12263  2233  3098               	movlw	152
 12264  2234  0728               	addwf	__tdiv_to_l_@cntr,w
 12265  2235  00A0               	movwf	??__tdiv_to_l_
 12266  2236  0820               	movf	??__tdiv_to_l_,w
 12267  2237  02A9               	subwf	__tdiv_to_l_@exp1,f
 12268  2238  3018               	movlw	24
 12269  2239  00A0               	movwf	??__tdiv_to_l_
 12270  223A  0820               	movf	??__tdiv_to_l_,w
 12271  223B  00A8               	movwf	__tdiv_to_l_@cntr
 12272  223C                     l7426:	
 12273  223C  3001               	movlw	1
 12274  223D                     u9755:	
 12275  223D  35A4               	lslf	__tdiv_to_l_@quot,f
 12276  223E  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12277  223F  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12278  2240  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12279  2241  0B89               	decfsz	9,f
 12280  2242  2A3D               	goto	u9755
 12281  2243  0878               	movf	__tdiv_to_l_@f2+2,w
 12282  2244  0274               	subwf	__tdiv_to_l_@f1+2,w
 12283  2245  1D03               	skipz
 12284  2246  2A4D               	goto	u9765
 12285  2247  0877               	movf	__tdiv_to_l_@f2+1,w
 12286  2248  0273               	subwf	__tdiv_to_l_@f1+1,w
 12287  2249  1D03               	skipz
 12288  224A  2A4D               	goto	u9765
 12289  224B  0876               	movf	__tdiv_to_l_@f2,w
 12290  224C  0272               	subwf	__tdiv_to_l_@f1,w
 12291  224D                     u9765:	
 12292  224D  1C03               	skipc
 12293  224E  2A56               	goto	l7434
 12294  224F  0876               	movf	__tdiv_to_l_@f2,w
 12295  2250  02F2               	subwf	__tdiv_to_l_@f1,f
 12296  2251  0877               	movf	__tdiv_to_l_@f2+1,w
 12297  2252  3BF3               	subwfb	__tdiv_to_l_@f1+1,f
 12298  2253  0878               	movf	__tdiv_to_l_@f2+2,w
 12299  2254  3BF4               	subwfb	__tdiv_to_l_@f1+2,f
 12300  2255  1424               	bsf	__tdiv_to_l_@quot,0
 12301  2256                     l7434:	
 12302  2256  3001               	movlw	1
 12303  2257                     u9775:	
 12304  2257  35F2               	lslf	__tdiv_to_l_@f1,f
 12305  2258  0DF3               	rlf	__tdiv_to_l_@f1+1,f
 12306  2259  0DF4               	rlf	__tdiv_to_l_@f1+2,f
 12307  225A  0B89               	decfsz	9,f
 12308  225B  2A57               	goto	u9775
 12309  225C  3001               	movlw	1
 12310  225D  02A8               	subwf	__tdiv_to_l_@cntr,f
 12311  225E  1D03               	btfss	3,2
 12312  225F  2A3C               	goto	l7426
 12313  2260  1FA9               	btfss	__tdiv_to_l_@exp1,7
 12314  2261  2A7E               	goto	l7446
 12315  2262  0829               	movf	__tdiv_to_l_@exp1,w
 12316  2263  3A80               	xorlw	128
 12317  2264  3E97               	addlw	151
 12318  2265  1803               	skipnc
 12319  2266  2A70               	goto	l7444
 12320  2267  3000               	movlw	0
 12321  2268  00F5               	movwf	?__tdiv_to_l_+3
 12322  2269  3000               	movlw	0
 12323  226A  00F4               	movwf	?__tdiv_to_l_+2
 12324  226B  3000               	movlw	0
 12325  226C  00F3               	movwf	?__tdiv_to_l_+1
 12326  226D  3000               	movlw	0
 12327  226E  00F2               	movwf	?__tdiv_to_l_
 12328  226F  0008               	return
 12329  2270                     l7444:	
 12330  2270  3001               	movlw	1
 12331  2271                     u9815:	
 12332  2271  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 12333  2272  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 12334  2273  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 12335  2274  0CA4               	rrf	__tdiv_to_l_@quot,f
 12336  2275  0B89               	decfsz	9,f
 12337  2276  2A71               	goto	u9815
 12338  2277  3001               	movlw	1
 12339  2278  00A0               	movwf	??__tdiv_to_l_
 12340  2279  0820               	movf	??__tdiv_to_l_,w
 12341  227A  07A9               	addwf	__tdiv_to_l_@exp1,f
 12342  227B  1903               	btfsc	3,2
 12343  227C  2A97               	goto	l7454
 12344  227D  2A70               	goto	l7444
 12345  227E                     l7446:	
 12346  227E  3018               	movlw	24
 12347  227F  0229               	subwf	__tdiv_to_l_@exp1,w
 12348  2280  1C03               	skipc
 12349  2281  2A94               	goto	l1212
 12350  2282  3000               	movlw	0
 12351  2283  00F5               	movwf	?__tdiv_to_l_+3
 12352  2284  3000               	movlw	0
 12353  2285  00F4               	movwf	?__tdiv_to_l_+2
 12354  2286  3000               	movlw	0
 12355  2287  00F3               	movwf	?__tdiv_to_l_+1
 12356  2288  3000               	movlw	0
 12357  2289  00F2               	movwf	?__tdiv_to_l_
 12358  228A  0008               	return
 12359  228B                     l7452:	
 12360  228B  3001               	movlw	1
 12361  228C                     u9845:	
 12362  228C  35A4               	lslf	__tdiv_to_l_@quot,f
 12363  228D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12364  228E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12365  228F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12366  2290  0B89               	decfsz	9,f
 12367  2291  2A8C               	goto	u9845
 12368  2292  3001               	movlw	1
 12369  2293  02A9               	subwf	__tdiv_to_l_@exp1,f
 12370  2294                     l1212:	
 12371  2294  0829               	movf	__tdiv_to_l_@exp1,w
 12372  2295  1D03               	btfss	3,2
 12373  2296  2A8B               	goto	l7452
 12374  2297                     l7454:	
 12375  2297  0827               	movf	__tdiv_to_l_@quot+3,w
 12376  2298  00F5               	movwf	?__tdiv_to_l_+3
 12377  2299  0826               	movf	__tdiv_to_l_@quot+2,w
 12378  229A  00F4               	movwf	?__tdiv_to_l_+2
 12379  229B  0825               	movf	__tdiv_to_l_@quot+1,w
 12380  229C  00F3               	movwf	?__tdiv_to_l_+1
 12381  229D  0824               	movf	__tdiv_to_l_@quot,w
 12382  229E  00F2               	movwf	?__tdiv_to_l_
 12383  229F  0008               	return
 12384  22A0                     __end_of__tdiv_to_l_:	
 12385                           
 12386                           	psect	text15
 12387  2361                     __ptext15:	
 12388 ;; *************** function __div_to_l_ *****************
 12389 ;; Defined at:
 12390 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12391 ;; Parameters:    Size  Location     Type
 12392 ;;  f1              4    2[COMMON] unsigned long 
 12393 ;;  f2              4    6[COMMON] unsigned long 
 12394 ;; Auto vars:     Size  Location     Type
 12395 ;;  quot            4    5[BANK0 ] unsigned long 
 12396 ;;  exp1            1   10[BANK0 ] unsigned char 
 12397 ;;  cntr            1    9[BANK0 ] unsigned char 
 12398 ;; Return value:  Size  Location     Type
 12399 ;;                  4    2[COMMON] unsigned long 
 12400 ;; Registers used:
 12401 ;;		wreg, status,2, status,0
 12402 ;; Tracked objects:
 12403 ;;		On entry : 0/0
 12404 ;;		On exit  : 0/0
 12405 ;;		Unchanged: 0/0
 12406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12407 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12408 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12410 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12411 ;;Total ram usage:       19 bytes
 12412 ;; Hardware stack levels used:    1
 12413 ;; Hardware stack levels required when called:    2
 12414 ;; This function calls:
 12415 ;;		Nothing
 12416 ;; This function is called by:
 12417 ;;		_sprintf
 12418 ;; This function uses a non-reentrant model
 12419 ;;
 12420                           
 12421                           
 12422                           ;psect for function __div_to_l_
 12423  2361                     __div_to_l_:	
 12424                           
 12425                           ;incstack = 0
 12426                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 12427  2361  0872               	movf	__div_to_l_@f1,w
 12428  2362  0020               	movlb	0	; select bank0
 12429  2363  00A0               	movwf	??__div_to_l_
 12430  2364  0873               	movf	__div_to_l_@f1+1,w
 12431  2365  00A1               	movwf	??__div_to_l_+1
 12432  2366  0874               	movf	__div_to_l_@f1+2,w
 12433  2367  00A2               	movwf	??__div_to_l_+2
 12434  2368  0875               	movf	__div_to_l_@f1+3,w
 12435  2369  00A3               	movwf	??__div_to_l_+3
 12436  236A  1003               	clrc
 12437  236B  0D22               	rlf	??__div_to_l_+2,w
 12438  236C  0D23               	rlf	??__div_to_l_+3,w
 12439  236D  00A4               	movwf	??__div_to_l_+4
 12440  236E  0824               	movf	??__div_to_l_+4,w
 12441  236F  00AA               	movwf	__div_to_l_@exp1
 12442  2370  082A               	movf	__div_to_l_@exp1,w
 12443  2371  1D03               	btfss	3,2
 12444  2372  2B7C               	goto	l7464
 12445  2373  3000               	movlw	0
 12446  2374  00F5               	movwf	?__div_to_l_+3
 12447  2375  3000               	movlw	0
 12448  2376  00F4               	movwf	?__div_to_l_+2
 12449  2377  3000               	movlw	0
 12450  2378  00F3               	movwf	?__div_to_l_+1
 12451  2379  3000               	movlw	0
 12452  237A  00F2               	movwf	?__div_to_l_
 12453  237B  0008               	return
 12454  237C                     l7464:	
 12455  237C  0876               	movf	__div_to_l_@f2,w
 12456  237D  00A0               	movwf	??__div_to_l_
 12457  237E  0877               	movf	__div_to_l_@f2+1,w
 12458  237F  00A1               	movwf	??__div_to_l_+1
 12459  2380  0878               	movf	__div_to_l_@f2+2,w
 12460  2381  00A2               	movwf	??__div_to_l_+2
 12461  2382  0879               	movf	__div_to_l_@f2+3,w
 12462  2383  00A3               	movwf	??__div_to_l_+3
 12463  2384  1003               	clrc
 12464  2385  0D22               	rlf	??__div_to_l_+2,w
 12465  2386  0D23               	rlf	??__div_to_l_+3,w
 12466  2387  00A4               	movwf	??__div_to_l_+4
 12467  2388  0824               	movf	??__div_to_l_+4,w
 12468  2389  00A9               	movwf	__div_to_l_@cntr
 12469  238A  0829               	movf	__div_to_l_@cntr,w
 12470  238B  1D03               	btfss	3,2
 12471  238C  2B96               	goto	l1160
 12472  238D  3000               	movlw	0
 12473  238E  00F5               	movwf	?__div_to_l_+3
 12474  238F  3000               	movlw	0
 12475  2390  00F4               	movwf	?__div_to_l_+2
 12476  2391  3000               	movlw	0
 12477  2392  00F3               	movwf	?__div_to_l_+1
 12478  2393  3000               	movlw	0
 12479  2394  00F2               	movwf	?__div_to_l_
 12480  2395  0008               	return
 12481  2396                     l1160:	
 12482  2396  17F4               	bsf	__div_to_l_@f1+2,7
 12483  2397  30FF               	movlw	255
 12484  2398  05F2               	andwf	__div_to_l_@f1,f
 12485  2399  30FF               	movlw	255
 12486  239A  05F3               	andwf	__div_to_l_@f1+1,f
 12487  239B  30FF               	movlw	255
 12488  239C  05F4               	andwf	__div_to_l_@f1+2,f
 12489  239D  3000               	movlw	0
 12490  239E  05F5               	andwf	__div_to_l_@f1+3,f
 12491  239F  17F8               	bsf	__div_to_l_@f2+2,7
 12492  23A0  30FF               	movlw	255
 12493  23A1  05F6               	andwf	__div_to_l_@f2,f
 12494  23A2  30FF               	movlw	255
 12495  23A3  05F7               	andwf	__div_to_l_@f2+1,f
 12496  23A4  30FF               	movlw	255
 12497  23A5  05F8               	andwf	__div_to_l_@f2+2,f
 12498  23A6  3000               	movlw	0
 12499  23A7  05F9               	andwf	__div_to_l_@f2+3,f
 12500  23A8  3000               	movlw	0
 12501  23A9  00A8               	movwf	__div_to_l_@quot+3
 12502  23AA  3000               	movlw	0
 12503  23AB  00A7               	movwf	__div_to_l_@quot+2
 12504  23AC  3000               	movlw	0
 12505  23AD  00A6               	movwf	__div_to_l_@quot+1
 12506  23AE  3000               	movlw	0
 12507  23AF  00A5               	movwf	__div_to_l_@quot
 12508  23B0  307F               	movlw	127
 12509  23B1  02AA               	subwf	__div_to_l_@exp1,f
 12510  23B2  30A0               	movlw	160
 12511  23B3  0729               	addwf	__div_to_l_@cntr,w
 12512  23B4  00A0               	movwf	??__div_to_l_
 12513  23B5  0820               	movf	??__div_to_l_,w
 12514  23B6  02AA               	subwf	__div_to_l_@exp1,f
 12515  23B7  3020               	movlw	32
 12516  23B8  00A0               	movwf	??__div_to_l_
 12517  23B9  0820               	movf	??__div_to_l_,w
 12518  23BA  00A9               	movwf	__div_to_l_@cntr
 12519  23BB                     l7478:	
 12520  23BB  3001               	movlw	1
 12521  23BC                     u9885:	
 12522  23BC  35A5               	lslf	__div_to_l_@quot,f
 12523  23BD  0DA6               	rlf	__div_to_l_@quot+1,f
 12524  23BE  0DA7               	rlf	__div_to_l_@quot+2,f
 12525  23BF  0DA8               	rlf	__div_to_l_@quot+3,f
 12526  23C0  0B89               	decfsz	9,f
 12527  23C1  2BBC               	goto	u9885
 12528  23C2  0879               	movf	__div_to_l_@f2+3,w
 12529  23C3  0275               	subwf	__div_to_l_@f1+3,w
 12530  23C4  1D03               	skipz
 12531  23C5  2BD0               	goto	u9895
 12532  23C6  0878               	movf	__div_to_l_@f2+2,w
 12533  23C7  0274               	subwf	__div_to_l_@f1+2,w
 12534  23C8  1D03               	skipz
 12535  23C9  2BD0               	goto	u9895
 12536  23CA  0877               	movf	__div_to_l_@f2+1,w
 12537  23CB  0273               	subwf	__div_to_l_@f1+1,w
 12538  23CC  1D03               	skipz
 12539  23CD  2BD0               	goto	u9895
 12540  23CE  0876               	movf	__div_to_l_@f2,w
 12541  23CF  0272               	subwf	__div_to_l_@f1,w
 12542  23D0                     u9895:	
 12543  23D0  1C03               	skipc
 12544  23D1  2BDB               	goto	l7486
 12545  23D2  0876               	movf	__div_to_l_@f2,w
 12546  23D3  02F2               	subwf	__div_to_l_@f1,f
 12547  23D4  0877               	movf	__div_to_l_@f2+1,w
 12548  23D5  3BF3               	subwfb	__div_to_l_@f1+1,f
 12549  23D6  0878               	movf	__div_to_l_@f2+2,w
 12550  23D7  3BF4               	subwfb	__div_to_l_@f1+2,f
 12551  23D8  0879               	movf	__div_to_l_@f2+3,w
 12552  23D9  3BF5               	subwfb	__div_to_l_@f1+3,f
 12553  23DA  1425               	bsf	__div_to_l_@quot,0
 12554  23DB                     l7486:	
 12555  23DB  3001               	movlw	1
 12556  23DC                     u9905:	
 12557  23DC  35F2               	lslf	__div_to_l_@f1,f
 12558  23DD  0DF3               	rlf	__div_to_l_@f1+1,f
 12559  23DE  0DF4               	rlf	__div_to_l_@f1+2,f
 12560  23DF  0DF5               	rlf	__div_to_l_@f1+3,f
 12561  23E0  0B89               	decfsz	9,f
 12562  23E1  2BDC               	goto	u9905
 12563  23E2  3001               	movlw	1
 12564  23E3  02A9               	subwf	__div_to_l_@cntr,f
 12565  23E4  1D03               	btfss	3,2
 12566  23E5  2BBB               	goto	l7478
 12567  23E6  1FAA               	btfss	__div_to_l_@exp1,7
 12568  23E7  2C04               	goto	l7498
 12569  23E8  082A               	movf	__div_to_l_@exp1,w
 12570  23E9  3A80               	xorlw	128
 12571  23EA  3E9F               	addlw	159
 12572  23EB  1803               	skipnc
 12573  23EC  2BF6               	goto	l7496
 12574  23ED  3000               	movlw	0
 12575  23EE  00F5               	movwf	?__div_to_l_+3
 12576  23EF  3000               	movlw	0
 12577  23F0  00F4               	movwf	?__div_to_l_+2
 12578  23F1  3000               	movlw	0
 12579  23F2  00F3               	movwf	?__div_to_l_+1
 12580  23F3  3000               	movlw	0
 12581  23F4  00F2               	movwf	?__div_to_l_
 12582  23F5  0008               	return
 12583  23F6                     l7496:	
 12584  23F6  3001               	movlw	1
 12585  23F7                     u9945:	
 12586  23F7  36A8               	lsrf	__div_to_l_@quot+3,f
 12587  23F8  0CA7               	rrf	__div_to_l_@quot+2,f
 12588  23F9  0CA6               	rrf	__div_to_l_@quot+1,f
 12589  23FA  0CA5               	rrf	__div_to_l_@quot,f
 12590  23FB  0B89               	decfsz	9,f
 12591  23FC  2BF7               	goto	u9945
 12592  23FD  3001               	movlw	1
 12593  23FE  00A0               	movwf	??__div_to_l_
 12594  23FF  0820               	movf	??__div_to_l_,w
 12595  2400  07AA               	addwf	__div_to_l_@exp1,f
 12596  2401  1903               	btfsc	3,2
 12597  2402  2C1D               	goto	l7506
 12598  2403  2BF6               	goto	l7496
 12599  2404                     l7498:	
 12600  2404  3020               	movlw	32
 12601  2405  022A               	subwf	__div_to_l_@exp1,w
 12602  2406  1C03               	skipc
 12603  2407  2C1A               	goto	l1170
 12604  2408  3000               	movlw	0
 12605  2409  00F5               	movwf	?__div_to_l_+3
 12606  240A  3000               	movlw	0
 12607  240B  00F4               	movwf	?__div_to_l_+2
 12608  240C  3000               	movlw	0
 12609  240D  00F3               	movwf	?__div_to_l_+1
 12610  240E  3000               	movlw	0
 12611  240F  00F2               	movwf	?__div_to_l_
 12612  2410  0008               	return
 12613  2411                     l7504:	
 12614  2411  3001               	movlw	1
 12615  2412                     u9975:	
 12616  2412  35A5               	lslf	__div_to_l_@quot,f
 12617  2413  0DA6               	rlf	__div_to_l_@quot+1,f
 12618  2414  0DA7               	rlf	__div_to_l_@quot+2,f
 12619  2415  0DA8               	rlf	__div_to_l_@quot+3,f
 12620  2416  0B89               	decfsz	9,f
 12621  2417  2C12               	goto	u9975
 12622  2418  3001               	movlw	1
 12623  2419  02AA               	subwf	__div_to_l_@exp1,f
 12624  241A                     l1170:	
 12625  241A  082A               	movf	__div_to_l_@exp1,w
 12626  241B  1D03               	btfss	3,2
 12627  241C  2C11               	goto	l7504
 12628  241D                     l7506:	
 12629  241D  0828               	movf	__div_to_l_@quot+3,w
 12630  241E  00F5               	movwf	?__div_to_l_+3
 12631  241F  0827               	movf	__div_to_l_@quot+2,w
 12632  2420  00F4               	movwf	?__div_to_l_+2
 12633  2421  0826               	movf	__div_to_l_@quot+1,w
 12634  2422  00F3               	movwf	?__div_to_l_+1
 12635  2423  0825               	movf	__div_to_l_@quot,w
 12636  2424  00F2               	movwf	?__div_to_l_
 12637  2425  0008               	return
 12638  2426                     __end_of__div_to_l_:	
 12639                           
 12640                           	psect	text16
 12641  2A41                     __ptext16:	
 12642 ;; *************** function ___llmod *****************
 12643 ;; Defined at:
 12644 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12645 ;; Parameters:    Size  Location     Type
 12646 ;;  divisor         4    6[BANK0 ] unsigned long 
 12647 ;;  dividend        4   10[BANK0 ] unsigned long 
 12648 ;; Auto vars:     Size  Location     Type
 12649 ;;  counter         1   15[BANK0 ] unsigned char 
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  4    6[BANK0 ] unsigned long 
 12652 ;; Registers used:
 12653 ;;		wreg, status,2, status,0
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12659 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12660 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12662 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12663 ;;Total ram usage:       10 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:    2
 12666 ;; This function calls:
 12667 ;;		Nothing
 12668 ;; This function is called by:
 12669 ;;		_sprintf
 12670 ;; This function uses a non-reentrant model
 12671 ;;
 12672                           
 12673                           
 12674                           ;psect for function ___llmod
 12675  2A41                     ___llmod:	
 12676                           
 12677                           ;incstack = 0
 12678                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12679  2A41  0020               	movlb	0	; select bank0
 12680  2A42  0829               	movf	___llmod@divisor+3,w
 12681  2A43  0428               	iorwf	___llmod@divisor+2,w
 12682  2A44  0427               	iorwf	___llmod@divisor+1,w
 12683  2A45  0426               	iorwf	___llmod@divisor,w
 12684  2A46  1903               	skipnz
 12685  2A47  2A7B               	goto	l7634
 12686  2A48  01AF               	clrf	___llmod@counter
 12687  2A49  0AAF               	incf	___llmod@counter,f
 12688  2A4A                     l7624:	
 12689  2A4A  1BA9               	btfsc	___llmod@divisor+3,7
 12690  2A4B  2A58               	goto	l7626
 12691  2A4C  3001               	movlw	1
 12692  2A4D                     u10275:	
 12693  2A4D  35A6               	lslf	___llmod@divisor,f
 12694  2A4E  0DA7               	rlf	___llmod@divisor+1,f
 12695  2A4F  0DA8               	rlf	___llmod@divisor+2,f
 12696  2A50  0DA9               	rlf	___llmod@divisor+3,f
 12697  2A51  0B89               	decfsz	9,f
 12698  2A52  2A4D               	goto	u10275
 12699  2A53  3001               	movlw	1
 12700  2A54  00AE               	movwf	??___llmod
 12701  2A55  082E               	movf	??___llmod,w
 12702  2A56  07AF               	addwf	___llmod@counter,f
 12703  2A57  2A4A               	goto	l7624
 12704  2A58                     l7626:	
 12705  2A58  0829               	movf	___llmod@divisor+3,w
 12706  2A59  022D               	subwf	___llmod@dividend+3,w
 12707  2A5A  1D03               	skipz
 12708  2A5B  2A66               	goto	u10295
 12709  2A5C  0828               	movf	___llmod@divisor+2,w
 12710  2A5D  022C               	subwf	___llmod@dividend+2,w
 12711  2A5E  1D03               	skipz
 12712  2A5F  2A66               	goto	u10295
 12713  2A60  0827               	movf	___llmod@divisor+1,w
 12714  2A61  022B               	subwf	___llmod@dividend+1,w
 12715  2A62  1D03               	skipz
 12716  2A63  2A66               	goto	u10295
 12717  2A64  0826               	movf	___llmod@divisor,w
 12718  2A65  022A               	subwf	___llmod@dividend,w
 12719  2A66                     u10295:	
 12720  2A66  1C03               	skipc
 12721  2A67  2A70               	goto	l7630
 12722  2A68  0826               	movf	___llmod@divisor,w
 12723  2A69  02AA               	subwf	___llmod@dividend,f
 12724  2A6A  0827               	movf	___llmod@divisor+1,w
 12725  2A6B  3BAB               	subwfb	___llmod@dividend+1,f
 12726  2A6C  0828               	movf	___llmod@divisor+2,w
 12727  2A6D  3BAC               	subwfb	___llmod@dividend+2,f
 12728  2A6E  0829               	movf	___llmod@divisor+3,w
 12729  2A6F  3BAD               	subwfb	___llmod@dividend+3,f
 12730  2A70                     l7630:	
 12731  2A70  3001               	movlw	1
 12732  2A71                     u10305:	
 12733  2A71  36A9               	lsrf	___llmod@divisor+3,f
 12734  2A72  0CA8               	rrf	___llmod@divisor+2,f
 12735  2A73  0CA7               	rrf	___llmod@divisor+1,f
 12736  2A74  0CA6               	rrf	___llmod@divisor,f
 12737  2A75  0B89               	decfsz	9,f
 12738  2A76  2A71               	goto	u10305
 12739  2A77  3001               	movlw	1
 12740  2A78  02AF               	subwf	___llmod@counter,f
 12741  2A79  1D03               	btfss	3,2
 12742  2A7A  2A58               	goto	l7626
 12743  2A7B                     l7634:	
 12744  2A7B  082D               	movf	___llmod@dividend+3,w
 12745  2A7C  00A9               	movwf	?___llmod+3
 12746  2A7D  082C               	movf	___llmod@dividend+2,w
 12747  2A7E  00A8               	movwf	?___llmod+2
 12748  2A7F  082B               	movf	___llmod@dividend+1,w
 12749  2A80  00A7               	movwf	?___llmod+1
 12750  2A81  082A               	movf	___llmod@dividend,w
 12751  2A82  00A6               	movwf	?___llmod
 12752  2A83  0008               	return
 12753  2A84                     __end_of___llmod:	
 12754                           
 12755                           	psect	text17
 12756  2BFF                     __ptext17:	
 12757 ;; *************** function ___lldiv *****************
 12758 ;; Defined at:
 12759 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12760 ;; Parameters:    Size  Location     Type
 12761 ;;  divisor         4    2[COMMON] unsigned long 
 12762 ;;  dividend        4    6[COMMON] unsigned long 
 12763 ;; Auto vars:     Size  Location     Type
 12764 ;;  quotient        4    1[BANK0 ] unsigned long 
 12765 ;;  counter         1    5[BANK0 ] unsigned char 
 12766 ;; Return value:  Size  Location     Type
 12767 ;;                  4    2[COMMON] unsigned long 
 12768 ;; Registers used:
 12769 ;;		wreg, status,2, status,0
 12770 ;; Tracked objects:
 12771 ;;		On entry : 0/0
 12772 ;;		On exit  : 0/0
 12773 ;;		Unchanged: 0/0
 12774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12775 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12776 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12777 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12778 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12779 ;;Total ram usage:       14 bytes
 12780 ;; Hardware stack levels used:    1
 12781 ;; Hardware stack levels required when called:    2
 12782 ;; This function calls:
 12783 ;;		Nothing
 12784 ;; This function is called by:
 12785 ;;		_sprintf
 12786 ;; This function uses a non-reentrant model
 12787 ;;
 12788                           
 12789                           
 12790                           ;psect for function ___lldiv
 12791  2BFF                     ___lldiv:	
 12792                           
 12793                           ;incstack = 0
 12794                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12795  2BFF  3000               	movlw	0
 12796  2C00  0020               	movlb	0	; select bank0
 12797  2C01  00A4               	movwf	___lldiv@quotient+3
 12798  2C02  3000               	movlw	0
 12799  2C03  00A3               	movwf	___lldiv@quotient+2
 12800  2C04  3000               	movlw	0
 12801  2C05  00A2               	movwf	___lldiv@quotient+1
 12802  2C06  3000               	movlw	0
 12803  2C07  00A1               	movwf	___lldiv@quotient
 12804  2C08  0875               	movf	___lldiv@divisor+3,w
 12805  2C09  0474               	iorwf	___lldiv@divisor+2,w
 12806  2C0A  0473               	iorwf	___lldiv@divisor+1,w
 12807  2C0B  0472               	iorwf	___lldiv@divisor,w
 12808  2C0C  1903               	skipnz
 12809  2C0D  2C49               	goto	l7614
 12810  2C0E  01A5               	clrf	___lldiv@counter
 12811  2C0F  0AA5               	incf	___lldiv@counter,f
 12812  2C10                     l7600:	
 12813  2C10  1BF5               	btfsc	___lldiv@divisor+3,7
 12814  2C11  2C1E               	goto	l7602
 12815  2C12  3001               	movlw	1
 12816  2C13                     u10205:	
 12817  2C13  35F2               	lslf	___lldiv@divisor,f
 12818  2C14  0DF3               	rlf	___lldiv@divisor+1,f
 12819  2C15  0DF4               	rlf	___lldiv@divisor+2,f
 12820  2C16  0DF5               	rlf	___lldiv@divisor+3,f
 12821  2C17  0B89               	decfsz	9,f
 12822  2C18  2C13               	goto	u10205
 12823  2C19  3001               	movlw	1
 12824  2C1A  00A0               	movwf	??___lldiv
 12825  2C1B  0820               	movf	??___lldiv,w
 12826  2C1C  07A5               	addwf	___lldiv@counter,f
 12827  2C1D  2C10               	goto	l7600
 12828  2C1E                     l7602:	
 12829  2C1E  3001               	movlw	1
 12830  2C1F                     u10225:	
 12831  2C1F  35A1               	lslf	___lldiv@quotient,f
 12832  2C20  0DA2               	rlf	___lldiv@quotient+1,f
 12833  2C21  0DA3               	rlf	___lldiv@quotient+2,f
 12834  2C22  0DA4               	rlf	___lldiv@quotient+3,f
 12835  2C23  0B89               	decfsz	9,f
 12836  2C24  2C1F               	goto	u10225
 12837  2C25  0875               	movf	___lldiv@divisor+3,w
 12838  2C26  0279               	subwf	___lldiv@dividend+3,w
 12839  2C27  1D03               	skipz
 12840  2C28  2C33               	goto	u10235
 12841  2C29  0874               	movf	___lldiv@divisor+2,w
 12842  2C2A  0278               	subwf	___lldiv@dividend+2,w
 12843  2C2B  1D03               	skipz
 12844  2C2C  2C33               	goto	u10235
 12845  2C2D  0873               	movf	___lldiv@divisor+1,w
 12846  2C2E  0277               	subwf	___lldiv@dividend+1,w
 12847  2C2F  1D03               	skipz
 12848  2C30  2C33               	goto	u10235
 12849  2C31  0872               	movf	___lldiv@divisor,w
 12850  2C32  0276               	subwf	___lldiv@dividend,w
 12851  2C33                     u10235:	
 12852  2C33  1C03               	skipc
 12853  2C34  2C3E               	goto	l7610
 12854  2C35  0872               	movf	___lldiv@divisor,w
 12855  2C36  02F6               	subwf	___lldiv@dividend,f
 12856  2C37  0873               	movf	___lldiv@divisor+1,w
 12857  2C38  3BF7               	subwfb	___lldiv@dividend+1,f
 12858  2C39  0874               	movf	___lldiv@divisor+2,w
 12859  2C3A  3BF8               	subwfb	___lldiv@dividend+2,f
 12860  2C3B  0875               	movf	___lldiv@divisor+3,w
 12861  2C3C  3BF9               	subwfb	___lldiv@dividend+3,f
 12862  2C3D  1421               	bsf	___lldiv@quotient,0
 12863  2C3E                     l7610:	
 12864  2C3E  3001               	movlw	1
 12865  2C3F                     u10245:	
 12866  2C3F  36F5               	lsrf	___lldiv@divisor+3,f
 12867  2C40  0CF4               	rrf	___lldiv@divisor+2,f
 12868  2C41  0CF3               	rrf	___lldiv@divisor+1,f
 12869  2C42  0CF2               	rrf	___lldiv@divisor,f
 12870  2C43  0B89               	decfsz	9,f
 12871  2C44  2C3F               	goto	u10245
 12872  2C45  3001               	movlw	1
 12873  2C46  02A5               	subwf	___lldiv@counter,f
 12874  2C47  1D03               	btfss	3,2
 12875  2C48  2C1E               	goto	l7602
 12876  2C49                     l7614:	
 12877  2C49  0824               	movf	___lldiv@quotient+3,w
 12878  2C4A  00F5               	movwf	?___lldiv+3
 12879  2C4B  0823               	movf	___lldiv@quotient+2,w
 12880  2C4C  00F4               	movwf	?___lldiv+2
 12881  2C4D  0822               	movf	___lldiv@quotient+1,w
 12882  2C4E  00F3               	movwf	?___lldiv+1
 12883  2C4F  0821               	movf	___lldiv@quotient,w
 12884  2C50  00F2               	movwf	?___lldiv
 12885  2C51  0008               	return
 12886  2C52                     __end_of___lldiv:	
 12887                           
 12888                           	psect	text18
 12889  2904                     __ptext18:	
 12890 ;; *************** function ___flsub *****************
 12891 ;; Defined at:
 12892 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12893 ;; Parameters:    Size  Location     Type
 12894 ;;  a               4   33[BANK1 ] unsigned long 
 12895 ;;  b               4   37[BANK1 ] unsigned long 
 12896 ;; Auto vars:     Size  Location     Type
 12897 ;;		None
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  4   33[BANK1 ] unsigned long 
 12900 ;; Registers used:
 12901 ;;		wreg, status,2, status,0, pclath, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12907 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12910 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12911 ;;Total ram usage:        8 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:    3
 12914 ;; This function calls:
 12915 ;;		___fladd
 12916 ;; This function is called by:
 12917 ;;		_sprintf
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           
 12922                           ;psect for function ___flsub
 12923  2904                     ___flsub:	
 12924                           
 12925                           ;incstack = 0
 12926                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12927  2904  3080               	movlw	128
 12928  2905  0021               	movlb	1	; select bank1
 12929  2906  06C4               	xorwf	(___flsub@a+3)^(0+128),f
 12930  2907  0848               	movf	(___flsub@b+3)^(0+128),w
 12931  2908  00AC               	movwf	(___fladd@b+3)^(0+128)
 12932  2909  0847               	movf	(___flsub@b+2)^(0+128),w
 12933  290A  00AB               	movwf	(___fladd@b+2)^(0+128)
 12934  290B  0846               	movf	(___flsub@b+1)^(0+128),w
 12935  290C  00AA               	movwf	(___fladd@b+1)^(0+128)
 12936  290D  0845               	movf	___flsub@b^(0+128),w
 12937  290E  00A9               	movwf	___fladd@b^(0+128)
 12938  290F  0844               	movf	(___flsub@a+3)^(0+128),w
 12939  2910  00B0               	movwf	(___fladd@a+3)^(0+128)
 12940  2911  0843               	movf	(___flsub@a+2)^(0+128),w
 12941  2912  00AF               	movwf	(___fladd@a+2)^(0+128)
 12942  2913  0842               	movf	(___flsub@a+1)^(0+128),w
 12943  2914  00AE               	movwf	(___fladd@a+1)^(0+128)
 12944  2915  0841               	movf	___flsub@a^(0+128),w
 12945  2916  00AD               	movwf	___fladd@a^(0+128)
 12946  2917  3193  23D8         	fcall	___fladd
 12947  2919  0021               	movlb	1	; select bank1
 12948  291A  082C               	movf	(?___fladd+3)^(0+128),w
 12949  291B  00C4               	movwf	(?___flsub+3)^(0+128)
 12950  291C  082B               	movf	(?___fladd+2)^(0+128),w
 12951  291D  00C3               	movwf	(?___flsub+2)^(0+128)
 12952  291E  082A               	movf	(?___fladd+1)^(0+128),w
 12953  291F  00C2               	movwf	(?___flsub+1)^(0+128)
 12954  2920  0829               	movf	?___fladd^(0+128),w
 12955  2921  00C1               	movwf	?___flsub^(0+128)
 12956  2922  0008               	return
 12957  2923                     __end_of___flsub:	
 12958                           
 12959                           	psect	text19
 12960  1C00                     __ptext19:	
 12961 ;; *************** function ___flneg *****************
 12962 ;; Defined at:
 12963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 12964 ;; Parameters:    Size  Location     Type
 12965 ;;  f1              4   76[BANK0 ] unsigned long 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  4   76[BANK0 ] unsigned long 
 12970 ;; Registers used:
 12971 ;;		wreg
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12977 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12980 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12981 ;;Total ram usage:        4 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:    2
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_main
 12988 ;;		_writeVoltages
 12989 ;;		_sprintf
 12990 ;; This function uses a non-reentrant model
 12991 ;;
 12992                           
 12993                           
 12994                           ;psect for function ___flneg
 12995  1C00                     ___flneg:	
 12996                           
 12997                           ;incstack = 0
 12998                           ; Regs used in ___flneg: [wreg]
 12999  1C00  0020               	movlb	0	; select bank0
 13000  1C01  086F               	movf	___flneg@f1+3,w
 13001  1C02  046E               	iorwf	___flneg@f1+2,w
 13002  1C03  046D               	iorwf	___flneg@f1+1,w
 13003  1C04  046C               	iorwf	___flneg@f1,w
 13004  1C05  1903               	skipnz
 13005  1C06  0008               	return
 13006  1C07  3080               	movlw	128
 13007  1C08  06EF               	xorwf	___flneg@f1+3,f
 13008  1C09  0008               	return
 13009  1C0A                     __end_of___flneg:	
 13010                           
 13011                           	psect	text20
 13012  1E72                     __ptext20:	
 13013 ;; *************** function _startUp *****************
 13014 ;; Defined at:
 13015 ;;		line 144 in file "main.c"
 13016 ;; Parameters:    Size  Location     Type
 13017 ;;  highestTemp     1    wreg     PTR int 
 13018 ;;		 -> main@highestTemp(2), 
 13019 ;;  temps           1   70[BANK1 ] PTR int 
 13020 ;;		 -> main@temps(10), 
 13021 ;;  voltages        1   71[BANK1 ] PTR float 
 13022 ;;		 -> main@voltages(48), 
 13023 ;;  totalVoltage    1   72[BANK1 ] PTR float 
 13024 ;;		 -> main@totalVoltage(4), 
 13025 ;;  current         1   73[BANK1 ] PTR float 
 13026 ;;		 -> main@current(4), 
 13027 ;;  soc             1   74[BANK1 ] PTR float 
 13028 ;;		 -> main@soc(4), 
 13029 ;; Auto vars:     Size  Location     Type
 13030 ;;  highestTemp     1   34[BANK2 ] PTR int 
 13031 ;;		 -> main@highestTemp(2), 
 13032 ;;  i               2   37[BANK2 ] int 
 13033 ;;  i               2   35[BANK2 ] int 
 13034 ;; Return value:  Size  Location     Type
 13035 ;;                  2   70[BANK1 ] int 
 13036 ;; Registers used:
 13037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13038 ;; Tracked objects:
 13039 ;;		On entry : 0/0
 13040 ;;		On exit  : 0/0
 13041 ;;		Unchanged: 0/0
 13042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13043 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13045 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13046 ;;      Totals:         0       0       5       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13047 ;;Total ram usage:       14 bytes
 13048 ;; Hardware stack levels used:    1
 13049 ;; Hardware stack levels required when called:    7
 13050 ;; This function calls:
 13051 ;;		___fladd
 13052 ;;		___fldiv
 13053 ;;		___flge
 13054 ;;		_getCurrent
 13055 ;;		_getTemps
 13056 ;;		_measureVoltages
 13057 ;;		_sumVoltages
 13058 ;; This function is called by:
 13059 ;;		_main
 13060 ;; This function uses a non-reentrant model
 13061 ;;
 13062                           
 13063                           
 13064                           ;psect for function _startUp
 13065  1E72                     _startUp:	
 13066                           
 13067                           ;incstack = 0
 13068                           ; Regs used in _startUp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13069                           ;startUp@highestTemp stored from wreg
 13070  1E72  0022               	movlb	2	; select bank2
 13071  1E73  00C2               	movwf	startUp@highestTemp^(0+256)
 13072                           
 13073                           ;main.c: 145: measureVoltages(voltages, totalVoltage, 12);
 13074  1E74  0021               	movlb	1	; select bank1
 13075  1E75  0868               	movf	startUp@totalVoltage^(0+128),w
 13076  1E76  0022               	movlb	2	; select bank2
 13077  1E77  00BE               	movwf	??_startUp^(0+256)
 13078  1E78  083E               	movf	??_startUp^(0+256),w
 13079  1E79  0021               	movlb	1	; select bank1
 13080  1E7A  00DF               	movwf	measureVoltages@totalVoltage^(0+128)
 13081  1E7B  300C               	movlw	12
 13082  1E7C  00E0               	movwf	measureVoltages@numVoltages^(0+128)
 13083  1E7D  3000               	movlw	0
 13084  1E7E  00E1               	movwf	(measureVoltages@numVoltages^(0+128)+1)
 13085  1E7F  0867               	movf	startUp@voltages^(0+128),w
 13086  1E80  31A4  2426  319E   	fcall	_measureVoltages
 13087                           
 13088                           ;main.c: 146: for(int i = 0; i < 12; i++){
 13089  1E83  0022               	movlb	2	; select bank2
 13090  1E84  01C3               	clrf	startUp@i^(0+256)
 13091  1E85  01C4               	clrf	(startUp@i+1)^(0+256)
 13092  1E86  0844               	movf	(startUp@i+1)^(0+256),w
 13093  1E87  3A80               	xorlw	128
 13094  1E88  00BE               	movwf	??_startUp^(0+256)
 13095  1E89  3080               	movlw	128
 13096  1E8A  023E               	subwf	??_startUp^(0+256),w
 13097  1E8B  1D03               	skipz
 13098  1E8C  2E8F               	goto	u11895
 13099  1E8D  300C               	movlw	12
 13100  1E8E  0243               	subwf	startUp@i^(0+256),w
 13101  1E8F                     u11895:	
 13102  1E8F  1803               	btfsc	3,0
 13103  1E90  2EF4               	goto	l8536
 13104  1E91                     l8526:	
 13105                           
 13106                           ;main.c: 147: if(voltages[i] > 4.2 || voltages[i] < 3.1){
 13107  1E91  3040               	movlw	64
 13108  1E92  0021               	movlb	1	; select bank1
 13109  1E93  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13110  1E94  3086               	movlw	134
 13111  1E95  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13112  1E96  3066               	movlw	102
 13113  1E97  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13114  1E98  3066               	movlw	102
 13115  1E99  00C1               	movwf	___flge@ff1^(0+128)
 13116  1E9A  0022               	movlb	2	; select bank2
 13117  1E9B  0843               	movf	startUp@i^(0+256),w
 13118  1E9C  00BE               	movwf	??_startUp^(0+256)
 13119  1E9D  3001               	movlw	1
 13120  1E9E                     u11905:	
 13121  1E9E  35BE               	lslf	??_startUp^(0+256),f
 13122  1E9F  3EFF               	addlw	-1
 13123  1EA0  1D03               	skipz
 13124  1EA1  2E9E               	goto	u11905
 13125  1EA2  353E               	lslf	??_startUp^(0+256),w
 13126  1EA3  0021               	movlb	1	; select bank1
 13127  1EA4  0767               	addwf	startUp@voltages^(0+128),w
 13128  1EA5  0022               	movlb	2	; select bank2
 13129  1EA6  00BF               	movwf	(??_startUp+1)^(0+256)
 13130  1EA7  083F               	movf	(??_startUp+1)^(0+256),w
 13131  1EA8  0086               	movwf	6
 13132  1EA9  3002               	movlw	2	; select bank4/5
 13133  1EAA  0087               	movwf	7
 13134  1EAB  3F40               	moviw [0]fsr1
 13135  1EAC  0021               	movlb	1	; select bank1
 13136  1EAD  00C5               	movwf	___flge@ff2^(0+128)
 13137  1EAE  3F41               	moviw [1]fsr1
 13138  1EAF  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13139  1EB0  3F42               	moviw [2]fsr1
 13140  1EB1  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13141  1EB2  3F43               	moviw [3]fsr1
 13142  1EB3  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13143  1EB4  31A0  20B2  319E   	fcall	___flge
 13144  1EB7  1C03               	btfss	3,0
 13145  1EB8  2EE0               	goto	l8530
 13146  1EB9  0022               	movlb	2	; select bank2
 13147  1EBA  0843               	movf	startUp@i^(0+256),w
 13148  1EBB  00BE               	movwf	??_startUp^(0+256)
 13149  1EBC  3001               	movlw	1
 13150  1EBD                     u11925:	
 13151  1EBD  35BE               	lslf	??_startUp^(0+256),f
 13152  1EBE  3EFF               	addlw	-1
 13153  1EBF  1D03               	skipz
 13154  1EC0  2EBD               	goto	u11925
 13155  1EC1  353E               	lslf	??_startUp^(0+256),w
 13156  1EC2  0021               	movlb	1	; select bank1
 13157  1EC3  0767               	addwf	startUp@voltages^(0+128),w
 13158  1EC4  0022               	movlb	2	; select bank2
 13159  1EC5  00BF               	movwf	(??_startUp+1)^(0+256)
 13160  1EC6  083F               	movf	(??_startUp+1)^(0+256),w
 13161  1EC7  0086               	movwf	6
 13162  1EC8  3002               	movlw	2	; select bank4/5
 13163  1EC9  0087               	movwf	7
 13164  1ECA  3F40               	moviw [0]fsr1
 13165  1ECB  0021               	movlb	1	; select bank1
 13166  1ECC  00C1               	movwf	___flge@ff1^(0+128)
 13167  1ECD  3F41               	moviw [1]fsr1
 13168  1ECE  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13169  1ECF  3F42               	moviw [2]fsr1
 13170  1ED0  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13171  1ED1  3F43               	moviw [3]fsr1
 13172  1ED2  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13173  1ED3  3040               	movlw	64
 13174  1ED4  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13175  1ED5  3046               	movlw	70
 13176  1ED6  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13177  1ED7  3066               	movlw	102
 13178  1ED8  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13179  1ED9  3066               	movlw	102
 13180  1EDA  00C5               	movwf	___flge@ff2^(0+128)
 13181  1EDB  31A0  20B2  319E   	fcall	___flge
 13182  1EDE  1803               	btfsc	3,0
 13183  1EDF  2EE4               	goto	l8534
 13184  1EE0                     l8530:	
 13185                           
 13186                           ;main.c: 149: return 0;
 13187  1EE0  0021               	movlb	1	; select bank1
 13188  1EE1  01E6               	clrf	?_startUp^(0+128)
 13189  1EE2  01E7               	clrf	(?_startUp+1)^(0+128)
 13190  1EE3  0008               	return
 13191  1EE4                     l8534:	
 13192  1EE4  3001               	movlw	1
 13193  1EE5  0022               	movlb	2	; select bank2
 13194  1EE6  07C3               	addwf	startUp@i^(0+256),f
 13195  1EE7  3000               	movlw	0
 13196  1EE8  3DC4               	addwfc	(startUp@i+1)^(0+256),f
 13197  1EE9  0844               	movf	(startUp@i+1)^(0+256),w
 13198  1EEA  3A80               	xorlw	128
 13199  1EEB  00BE               	movwf	??_startUp^(0+256)
 13200  1EEC  3080               	movlw	128
 13201  1EED  023E               	subwf	??_startUp^(0+256),w
 13202  1EEE  1D03               	skipz
 13203  1EEF  2EF2               	goto	u11945
 13204  1EF0  300C               	movlw	12
 13205  1EF1  0243               	subwf	startUp@i^(0+256),w
 13206  1EF2                     u11945:	
 13207  1EF2  1C03               	skipc
 13208  1EF3  2E91               	goto	l8526
 13209  1EF4                     l8536:	
 13210                           
 13211                           ;main.c: 150: }
 13212                           ;main.c: 151: }
 13213                           ;main.c: 152: *totalVoltage = sumVoltages(voltages, 12);
 13214  1EF4  300C               	movlw	12
 13215  1EF5  0021               	movlb	1	; select bank1
 13216  1EF6  00C1               	movwf	sumVoltages@numVoltages^(0+128)
 13217  1EF7  3000               	movlw	0
 13218  1EF8  00C2               	movwf	(sumVoltages@numVoltages^(0+128)+1)
 13219  1EF9  0867               	movf	startUp@voltages^(0+128),w
 13220  1EFA  31AB  235B  319E   	fcall	_sumVoltages
 13221  1EFD  0021               	movlb	1	; select bank1
 13222  1EFE  0868               	movf	startUp@totalVoltage^(0+128),w
 13223  1EFF  0086               	movwf	6
 13224  1F00  3002               	movlw	2	; select bank4/5
 13225  1F01  0087               	movwf	7
 13226  1F02  0841               	movf	?_sumVoltages^(0+128),w
 13227  1F03  3FC0               	movwi [0]fsr1
 13228  1F04  0842               	movf	(?_sumVoltages+1)^(0+128),w
 13229  1F05  3FC1               	movwi [1]fsr1
 13230  1F06  0843               	movf	(?_sumVoltages+2)^(0+128),w
 13231  1F07  3FC2               	movwi [2]fsr1
 13232  1F08  0844               	movf	(?_sumVoltages+3)^(0+128),w
 13233  1F09  3FC3               	movwi [3]fsr1
 13234                           
 13235                           ;main.c: 153: *soc = ((float)(*totalVoltage) - (float)38.4) / ((float)50.4 - (float)38.4
      +                          );
 13236  1F0A  3041               	movlw	65
 13237  1F0B  0020               	movlb	0	; select bank0
 13238  1F0C  00D5               	movwf	___fldiv@a+3
 13239  1F0D  3040               	movlw	64
 13240  1F0E  00D4               	movwf	___fldiv@a+2
 13241  1F0F  3000               	movlw	0
 13242  1F10  00D3               	movwf	___fldiv@a+1
 13243  1F11  3000               	movlw	0
 13244  1F12  00D2               	movwf	___fldiv@a
 13245  1F13  30C2               	movlw	194
 13246  1F14  0021               	movlb	1	; select bank1
 13247  1F15  00AC               	movwf	(___fladd@b+3)^(0+128)
 13248  1F16  3019               	movlw	25
 13249  1F17  00AB               	movwf	(___fladd@b+2)^(0+128)
 13250  1F18  3099               	movlw	153
 13251  1F19  00AA               	movwf	(___fladd@b+1)^(0+128)
 13252  1F1A  309A               	movlw	154
 13253  1F1B  00A9               	movwf	___fladd@b^(0+128)
 13254  1F1C  0868               	movf	startUp@totalVoltage^(0+128),w
 13255  1F1D  0086               	movwf	6
 13256  1F1E  3002               	movlw	2	; select bank4/5
 13257  1F1F  0087               	movwf	7
 13258  1F20  3F40               	moviw [0]fsr1
 13259  1F21  00AD               	movwf	___fladd@a^(0+128)
 13260  1F22  3F41               	moviw [1]fsr1
 13261  1F23  00AE               	movwf	(___fladd@a+1)^(0+128)
 13262  1F24  3F42               	moviw [2]fsr1
 13263  1F25  00AF               	movwf	(___fladd@a+2)^(0+128)
 13264  1F26  3F43               	moviw [3]fsr1
 13265  1F27  00B0               	movwf	(___fladd@a+3)^(0+128)
 13266  1F28  3193  23D8  319E   	fcall	___fladd
 13267  1F2B  0021               	movlb	1	; select bank1
 13268  1F2C  082C               	movf	(?___fladd+3)^(0+128),w
 13269  1F2D  0020               	movlb	0	; select bank0
 13270  1F2E  00D9               	movwf	___fldiv@b+3
 13271  1F2F  0021               	movlb	1	; select bank1
 13272  1F30  082B               	movf	(?___fladd+2)^(0+128),w
 13273  1F31  0020               	movlb	0	; select bank0
 13274  1F32  00D8               	movwf	___fldiv@b+2
 13275  1F33  0021               	movlb	1	; select bank1
 13276  1F34  082A               	movf	(?___fladd+1)^(0+128),w
 13277  1F35  0020               	movlb	0	; select bank0
 13278  1F36  00D7               	movwf	___fldiv@b+1
 13279  1F37  0021               	movlb	1	; select bank1
 13280  1F38  0829               	movf	?___fladd^(0+128),w
 13281  1F39  0020               	movlb	0	; select bank0
 13282  1F3A  00D6               	movwf	___fldiv@b
 13283  1F3B  3190  2073  319E   	fcall	___fldiv
 13284  1F3E  0021               	movlb	1	; select bank1
 13285  1F3F  086A               	movf	startUp@soc^(0+128),w
 13286  1F40  0086               	movwf	6
 13287  1F41  3002               	movlw	2	; select bank4/5
 13288  1F42  0087               	movwf	7
 13289  1F43  0020               	movlb	0	; select bank0
 13290  1F44  0852               	movf	?___fldiv,w
 13291  1F45  3FC0               	movwi [0]fsr1
 13292  1F46  0853               	movf	?___fldiv+1,w
 13293  1F47  3FC1               	movwi [1]fsr1
 13294  1F48  0854               	movf	?___fldiv+2,w
 13295  1F49  3FC2               	movwi [2]fsr1
 13296  1F4A  0855               	movf	?___fldiv+3,w
 13297  1F4B  3FC3               	movwi [3]fsr1
 13298                           
 13299                           ;main.c: 155: *highestTemp = getTemps(temps, 5);
 13300  1F4C  3005               	movlw	5
 13301  1F4D  0021               	movlb	1	; select bank1
 13302  1F4E  00AF               	movwf	getTemps@numTemps^(0+128)
 13303  1F4F  3000               	movlw	0
 13304  1F50  00B0               	movwf	(getTemps@numTemps^(0+128)+1)
 13305  1F51  0866               	movf	startUp@temps^(0+128),w
 13306  1F52  31AD  255A  319E   	fcall	_getTemps
 13307  1F55  0022               	movlb	2	; select bank2
 13308  1F56  0842               	movf	startUp@highestTemp^(0+256),w
 13309  1F57  0086               	movwf	6
 13310  1F58  3002               	movlw	2	; select bank4/5
 13311  1F59  0087               	movwf	7
 13312  1F5A  0021               	movlb	1	; select bank1
 13313  1F5B  082F               	movf	?_getTemps^(0+128),w
 13314  1F5C  3FC0               	movwi [0]fsr1
 13315  1F5D  0830               	movf	(?_getTemps+1)^(0+128),w
 13316  1F5E  3FC1               	movwi [1]fsr1
 13317                           
 13318                           ;main.c: 156: for(int i = 0; i < 5; i++){
 13319  1F5F  0022               	movlb	2	; select bank2
 13320  1F60  01C5               	clrf	startUp@i_400^(0+256)
 13321  1F61  01C6               	clrf	(startUp@i_400+1)^(0+256)
 13322  1F62  0846               	movf	(startUp@i_400+1)^(0+256),w
 13323  1F63  3A80               	xorlw	128
 13324  1F64  00BE               	movwf	??_startUp^(0+256)
 13325  1F65  3080               	movlw	128
 13326  1F66  023E               	subwf	??_startUp^(0+256),w
 13327  1F67  1D03               	skipz
 13328  1F68  2F6B               	goto	u11955
 13329  1F69  3005               	movlw	5
 13330  1F6A  0245               	subwf	startUp@i_400^(0+256),w
 13331  1F6B                     u11955:	
 13332  1F6B  1803               	btfsc	3,0
 13333  1F6C  2FB3               	goto	l8556
 13334  1F6D                     l8546:	
 13335                           
 13336                           ;main.c: 157: if(temps[i] < 5 || temps[i] > 40){
 13337  1F6D  0022               	movlb	2	; select bank2
 13338  1F6E  3545               	lslf	startUp@i_400^(0+256),w
 13339  1F6F  0021               	movlb	1	; select bank1
 13340  1F70  0766               	addwf	startUp@temps^(0+128),w
 13341  1F71  0022               	movlb	2	; select bank2
 13342  1F72  00BE               	movwf	??_startUp^(0+256)
 13343  1F73  083E               	movf	??_startUp^(0+256),w
 13344  1F74  0086               	movwf	6
 13345  1F75  3002               	movlw	2	; select bank4/5
 13346  1F76  0087               	movwf	7
 13347  1F77  3F40               	moviw [0]fsr1
 13348  1F78  00BF               	movwf	(??_startUp+1)^(0+256)
 13349  1F79  3F41               	moviw [1]fsr1
 13350  1F7A  00C0               	movwf	((??_startUp+1)^(0+256)+1)
 13351  1F7B  0840               	movf	(??_startUp+2)^(0+256),w
 13352  1F7C  3A80               	xorlw	128
 13353  1F7D  00C1               	movwf	(??_startUp+3)^(0+256)
 13354  1F7E  3080               	movlw	128
 13355  1F7F  0241               	subwf	(??_startUp+3)^(0+256),w
 13356  1F80  1D03               	skipz
 13357  1F81  2F84               	goto	u11965
 13358  1F82  3005               	movlw	5
 13359  1F83  023F               	subwf	(??_startUp+1)^(0+256),w
 13360  1F84                     u11965:	
 13361  1F84  1C03               	skipc
 13362  1F85  2F9F               	goto	l8550
 13363  1F86  0022               	movlb	2	; select bank2
 13364  1F87  3545               	lslf	startUp@i_400^(0+256),w
 13365  1F88  0021               	movlb	1	; select bank1
 13366  1F89  0766               	addwf	startUp@temps^(0+128),w
 13367  1F8A  0022               	movlb	2	; select bank2
 13368  1F8B  00BE               	movwf	??_startUp^(0+256)
 13369  1F8C  083E               	movf	??_startUp^(0+256),w
 13370  1F8D  0086               	movwf	6
 13371  1F8E  3002               	movlw	2	; select bank4/5
 13372  1F8F  0087               	movwf	7
 13373  1F90  3F40               	moviw [0]fsr1
 13374  1F91  00BF               	movwf	(??_startUp+1)^(0+256)
 13375  1F92  3F41               	moviw [1]fsr1
 13376  1F93  00C0               	movwf	((??_startUp+1)^(0+256)+1)
 13377  1F94  0840               	movf	(??_startUp+2)^(0+256),w
 13378  1F95  3A80               	xorlw	128
 13379  1F96  00C1               	movwf	(??_startUp+3)^(0+256)
 13380  1F97  3080               	movlw	128
 13381  1F98  0241               	subwf	(??_startUp+3)^(0+256),w
 13382  1F99  1D03               	skipz
 13383  1F9A  2F9D               	goto	u11975
 13384  1F9B  3029               	movlw	41
 13385  1F9C  023F               	subwf	(??_startUp+1)^(0+256),w
 13386  1F9D                     u11975:	
 13387  1F9D  1C03               	skipc
 13388  1F9E  2FA3               	goto	l8554
 13389  1F9F                     l8550:	
 13390                           
 13391                           ;main.c: 161: return 0;
 13392  1F9F  0021               	movlb	1	; select bank1
 13393  1FA0  01E6               	clrf	?_startUp^(0+128)
 13394  1FA1  01E7               	clrf	(?_startUp+1)^(0+128)
 13395  1FA2  0008               	return
 13396  1FA3                     l8554:	
 13397  1FA3  3001               	movlw	1
 13398  1FA4  0022               	movlb	2	; select bank2
 13399  1FA5  07C5               	addwf	startUp@i_400^(0+256),f
 13400  1FA6  3000               	movlw	0
 13401  1FA7  3DC6               	addwfc	(startUp@i_400+1)^(0+256),f
 13402  1FA8  0846               	movf	(startUp@i_400+1)^(0+256),w
 13403  1FA9  3A80               	xorlw	128
 13404  1FAA  00BE               	movwf	??_startUp^(0+256)
 13405  1FAB  3080               	movlw	128
 13406  1FAC  023E               	subwf	??_startUp^(0+256),w
 13407  1FAD  1D03               	skipz
 13408  1FAE  2FB1               	goto	u11985
 13409  1FAF  3005               	movlw	5
 13410  1FB0  0245               	subwf	startUp@i_400^(0+256),w
 13411  1FB1                     u11985:	
 13412  1FB1  1C03               	skipc
 13413  1FB2  2F6D               	goto	l8546
 13414  1FB3                     l8556:	
 13415                           
 13416                           ;main.c: 162: }
 13417                           ;main.c: 163: }
 13418                           ;main.c: 165: *current = getCurrent();
 13419  1FB3  31AA  2203  319E   	fcall	_getCurrent
 13420  1FB6  0021               	movlb	1	; select bank1
 13421  1FB7  0869               	movf	startUp@current^(0+128),w
 13422  1FB8  0086               	movwf	6
 13423  1FB9  3002               	movlw	2	; select bank4/5
 13424  1FBA  0087               	movwf	7
 13425  1FBB  084D               	movf	?_getCurrent^(0+128),w
 13426  1FBC  3FC0               	movwi [0]fsr1
 13427  1FBD  084E               	movf	(?_getCurrent+1)^(0+128),w
 13428  1FBE  3FC1               	movwi [1]fsr1
 13429  1FBF  084F               	movf	(?_getCurrent+2)^(0+128),w
 13430  1FC0  3FC2               	movwi [2]fsr1
 13431  1FC1  0850               	movf	(?_getCurrent+3)^(0+128),w
 13432  1FC2  3FC3               	movwi [3]fsr1
 13433                           
 13434                           ;main.c: 166: if(*current < -2 || *current > 2){
 13435  1FC3  0869               	movf	startUp@current^(0+128),w
 13436  1FC4  0086               	movwf	6
 13437  1FC5  3002               	movlw	2	; select bank4/5
 13438  1FC6  0087               	movwf	7
 13439  1FC7  3F40               	moviw [0]fsr1
 13440  1FC8  00C1               	movwf	___flge@ff1^(0+128)
 13441  1FC9  3F41               	moviw [1]fsr1
 13442  1FCA  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13443  1FCB  3F42               	moviw [2]fsr1
 13444  1FCC  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13445  1FCD  3F43               	moviw [3]fsr1
 13446  1FCE  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13447  1FCF  30C0               	movlw	192
 13448  1FD0  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13449  1FD1  3000               	movlw	0
 13450  1FD2  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13451  1FD3  3000               	movlw	0
 13452  1FD4  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13453  1FD5  3000               	movlw	0
 13454  1FD6  00C5               	movwf	___flge@ff2^(0+128)
 13455  1FD7  31A0  20B2  319E   	fcall	___flge
 13456  1FDA  1C03               	btfss	3,0
 13457  1FDB  2FF6               	goto	l8560
 13458  1FDC  3040               	movlw	64
 13459  1FDD  0021               	movlb	1	; select bank1
 13460  1FDE  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13461  1FDF  3000               	movlw	0
 13462  1FE0  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13463  1FE1  3000               	movlw	0
 13464  1FE2  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13465  1FE3  3000               	movlw	0
 13466  1FE4  00C1               	movwf	___flge@ff1^(0+128)
 13467  1FE5  0869               	movf	startUp@current^(0+128),w
 13468  1FE6  0086               	movwf	6
 13469  1FE7  3002               	movlw	2	; select bank4/5
 13470  1FE8  0087               	movwf	7
 13471  1FE9  3F40               	moviw [0]fsr1
 13472  1FEA  00C5               	movwf	___flge@ff2^(0+128)
 13473  1FEB  3F41               	moviw [1]fsr1
 13474  1FEC  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13475  1FED  3F42               	moviw [2]fsr1
 13476  1FEE  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13477  1FEF  3F43               	moviw [3]fsr1
 13478  1FF0  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13479  1FF1  31A0  20B2  319E   	fcall	___flge
 13480  1FF4  1803               	btfsc	3,0
 13481  1FF5  2FFA               	goto	l8564
 13482  1FF6                     l8560:	
 13483                           
 13484                           ;main.c: 168: return 0;
 13485  1FF6  0021               	movlb	1	; select bank1
 13486  1FF7  01E6               	clrf	?_startUp^(0+128)
 13487  1FF8  01E7               	clrf	(?_startUp+1)^(0+128)
 13488  1FF9  0008               	return
 13489  1FFA                     l8564:	
 13490                           
 13491                           ;main.c: 169: }
 13492                           ;main.c: 171: return 1;
 13493  1FFA  3001               	movlw	1
 13494  1FFB  0021               	movlb	1	; select bank1
 13495  1FFC  00E6               	movwf	?_startUp^(0+128)
 13496  1FFD  3000               	movlw	0
 13497  1FFE  00E7               	movwf	(?_startUp^(0+128)+1)
 13498  1FFF  0008               	return
 13499  2000                     __end_of_startUp:	
 13500                           
 13501                           	psect	text21
 13502  2426                     __ptext21:	
 13503 ;; *************** function _measureVoltages *****************
 13504 ;; Defined at:
 13505 ;;		line 95 in file "ltc6804.c"
 13506 ;; Parameters:    Size  Location     Type
 13507 ;;  voltages        1    wreg     PTR float 
 13508 ;;		 -> main@voltages(48), 
 13509 ;;  totalVoltage    1   63[BANK1 ] PTR float 
 13510 ;;		 -> main@totalVoltage(4), 
 13511 ;;  numVoltages     2   64[BANK1 ] int 
 13512 ;; Auto vars:     Size  Location     Type
 13513 ;;  voltages        1   27[BANK2 ] PTR float 
 13514 ;;		 -> main@voltages(48), 
 13515 ;;  i               2   28[BANK2 ] int 
 13516 ;;  ltcData        24    0[BANK2 ] unsigned int [12][1]
 13517 ;;  errorCount      2   25[BANK2 ] int 
 13518 ;;  pecError        1   24[BANK2 ] unsigned char 
 13519 ;; Return value:  Size  Location     Type
 13520 ;;                  1    wreg      void 
 13521 ;; Registers used:
 13522 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13523 ;; Tracked objects:
 13524 ;;		On entry : 0/0
 13525 ;;		On exit  : 0/0
 13526 ;;		Unchanged: 0/0
 13527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13528 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13529 ;;      Locals:         0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13530 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13531 ;;      Totals:         0       0       7      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13532 ;;Total ram usage:       37 bytes
 13533 ;; Hardware stack levels used:    1
 13534 ;; Hardware stack levels required when called:    6
 13535 ;; This function calls:
 13536 ;;		_LTC6804_adcv
 13537 ;;		_LTC6804_rdcv
 13538 ;;		___fldiv
 13539 ;;		___flge
 13540 ;;		___flmul
 13541 ;;		___xxtofl
 13542 ;;		_cellBalancing
 13543 ;;		_sumVoltages
 13544 ;; This function is called by:
 13545 ;;		_main
 13546 ;;		_startUp
 13547 ;; This function uses a non-reentrant model
 13548 ;;
 13549                           
 13550                           
 13551                           ;psect for function _measureVoltages
 13552  2426                     _measureVoltages:	
 13553                           
 13554                           ;incstack = 0
 13555                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13556                           ;measureVoltages@voltages stored from wreg
 13557  2426  0022               	movlb	2	; select bank2
 13558  2427  00BB               	movwf	measureVoltages@voltages^(0+256)
 13559                           
 13560                           ;ltc6804.c: 96: int errorCount = 0;
 13561  2428  01B9               	clrf	measureVoltages@errorCount^(0+256)
 13562  2429  01BA               	clrf	(measureVoltages@errorCount+1)^(0+256)
 13563                           
 13564                           ;ltc6804.c: 97: char pecError = -1;
 13565  242A  30FF               	movlw	255
 13566  242B  0021               	movlb	1	; select bank1
 13567  242C  00E2               	movwf	??_measureVoltages^(0+128)
 13568  242D  0862               	movf	??_measureVoltages^(0+128),w
 13569  242E  0022               	movlb	2	; select bank2
 13570  242F  00B8               	movwf	measureVoltages@pecError^(0+256)
 13571                           
 13572                           ;ltc6804.c: 98: unsigned int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 13573  2430  3020               	movlw	low measureVoltages@F7579
 13574  2431  0086               	movwf	6
 13575  2432  3003               	movlw	high measureVoltages@F7579
 13576  2433  0087               	movwf	7
 13577  2434  3020               	movlw	low measureVoltages@ltcData
 13578  2435  0084               	movwf	4
 13579  2436  3001               	movlw	high measureVoltages@ltcData
 13580  2437  0085               	movwf	5
 13581  2438  3018               	movlw	24
 13582  2439  0021               	movlb	1	; select bank1
 13583  243A  00E2               	movwf	??_measureVoltages^(0+128)
 13584  243B                     u11560:	
 13585  243B  0016               	moviw fsr1++
 13586  243C  001A               	movwi fsr0++
 13587  243D  0BE2               	decfsz	??_measureVoltages^(0+128),f
 13588  243E  2C3B               	goto	u11560
 13589                           
 13590                           ;ltc6804.c: 100: LTC6804_adcv();
 13591  243F  31A9  2198  31A4   	fcall	_LTC6804_adcv
 13592                           
 13593                           ;ltc6804.c: 101: *totalVoltage = sumVoltages(voltages, numVoltages);
 13594  2442  0021               	movlb	1	; select bank1
 13595  2443  0861               	movf	(measureVoltages@numVoltages+1)^(0+128),w
 13596  2444  00C2               	movwf	(sumVoltages@numVoltages+1)^(0+128)
 13597  2445  0860               	movf	measureVoltages@numVoltages^(0+128),w
 13598  2446  00C1               	movwf	sumVoltages@numVoltages^(0+128)
 13599  2447  0022               	movlb	2	; select bank2
 13600  2448  083B               	movf	measureVoltages@voltages^(0+256),w
 13601  2449  31AB  235B  31A4   	fcall	_sumVoltages
 13602  244C  0021               	movlb	1	; select bank1
 13603  244D  085F               	movf	measureVoltages@totalVoltage^(0+128),w
 13604  244E  0086               	movwf	6
 13605  244F  3002               	movlw	2	; select bank4/5
 13606  2450  0087               	movwf	7
 13607  2451  0841               	movf	?_sumVoltages^(0+128),w
 13608  2452  3FC0               	movwi [0]fsr1
 13609  2453  0842               	movf	(?_sumVoltages+1)^(0+128),w
 13610  2454  3FC1               	movwi [1]fsr1
 13611  2455  0843               	movf	(?_sumVoltages+2)^(0+128),w
 13612  2456  3FC2               	movwi [2]fsr1
 13613  2457  0844               	movf	(?_sumVoltages+3)^(0+128),w
 13614  2458  3FC3               	movwi [3]fsr1
 13615  2459                     l8338:	
 13616                           ;ltc6804.c: 103: do{
 13617                           
 13618                           
 13619                           ;ltc6804.c: 104: pecError = LTC6804_rdcv(0, 1, ltcData);
 13620  2459  0020               	movlb	0	; select bank0
 13621  245A  01BC               	clrf	LTC6804_rdcv@total_ic
 13622  245B  0ABC               	incf	LTC6804_rdcv@total_ic,f
 13623  245C  3020               	movlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13624  245D  0021               	movlb	1	; select bank1
 13625  245E  00E2               	movwf	??_measureVoltages^(0+128)
 13626  245F  0862               	movf	??_measureVoltages^(0+128),w
 13627  2460  0020               	movlb	0	; select bank0
 13628  2461  00BD               	movwf	LTC6804_rdcv@cell_codes
 13629  2462  3000               	movlw	0
 13630  2463  319C  24E7  31A4   	fcall	_LTC6804_rdcv
 13631  2466  0021               	movlb	1	; select bank1
 13632  2467  00E3               	movwf	(??_measureVoltages+1)^(0+128)
 13633  2468  0863               	movf	(??_measureVoltages+1)^(0+128),w
 13634  2469  0022               	movlb	2	; select bank2
 13635  246A  00B8               	movwf	measureVoltages@pecError^(0+256)
 13636                           
 13637                           ;ltc6804.c: 105: errorCount ++;
 13638  246B  3001               	movlw	1
 13639  246C  07B9               	addwf	measureVoltages@errorCount^(0+256),f
 13640  246D  3000               	movlw	0
 13641  246E  3DBA               	addwfc	(measureVoltages@errorCount+1)^(0+256),f
 13642                           
 13643                           ;ltc6804.c: 106: }while(pecError != 0 && errorCount <= 10);
 13644  246F  0838               	movf	measureVoltages@pecError^(0+256),w
 13645  2470  1903               	btfsc	3,2
 13646  2471  2C7F               	goto	l8346
 13647  2472  083A               	movf	(measureVoltages@errorCount+1)^(0+256),w
 13648  2473  3A80               	xorlw	128
 13649  2474  0021               	movlb	1	; select bank1
 13650  2475  00E2               	movwf	??_measureVoltages^(0+128)
 13651  2476  3080               	movlw	128
 13652  2477  0262               	subwf	??_measureVoltages^(0+128),w
 13653  2478  1D03               	skipz
 13654  2479  2C7D               	goto	u11585
 13655  247A  300B               	movlw	11
 13656  247B  0022               	movlb	2	; select bank2
 13657  247C  0239               	subwf	measureVoltages@errorCount^(0+256),w
 13658  247D                     u11585:	
 13659  247D  1C03               	skipc
 13660  247E  2C59               	goto	l8338
 13661  247F                     l8346:	
 13662                           
 13663                           ;ltc6804.c: 108: for(int i = 0; i< 12; i ++){
 13664  247F  0022               	movlb	2	; select bank2
 13665  2480  01BC               	clrf	measureVoltages@i^(0+256)
 13666  2481  01BD               	clrf	(measureVoltages@i+1)^(0+256)
 13667  2482  083D               	movf	(measureVoltages@i+1)^(0+256),w
 13668  2483  3A80               	xorlw	128
 13669  2484  0021               	movlb	1	; select bank1
 13670  2485  00E2               	movwf	??_measureVoltages^(0+128)
 13671  2486  3080               	movlw	128
 13672  2487  0262               	subwf	??_measureVoltages^(0+128),w
 13673  2488  1D03               	skipz
 13674  2489  2C8D               	goto	u11595
 13675  248A  300C               	movlw	12
 13676  248B  0022               	movlb	2	; select bank2
 13677  248C  023C               	subwf	measureVoltages@i^(0+256),w
 13678  248D                     u11595:	
 13679  248D  1803               	btfsc	3,0
 13680  248E  2D3E               	goto	l8360
 13681  248F                     l8352:	
 13682                           
 13683                           ;ltc6804.c: 109: voltages[i] = 1.0*((float)ltcData[0][i]/10000.0);
 13684  248F  303F               	movlw	63
 13685  2490  0020               	movlb	0	; select bank0
 13686  2491  00BB               	movwf	___flmul@b+3
 13687  2492  3080               	movlw	128
 13688  2493  00BA               	movwf	___flmul@b+2
 13689  2494  3000               	movlw	0
 13690  2495  00B9               	movwf	___flmul@b+1
 13691  2496  3000               	movlw	0
 13692  2497  00B8               	movwf	___flmul@b
 13693  2498  3046               	movlw	70
 13694  2499  00D5               	movwf	___fldiv@a+3
 13695  249A  301C               	movlw	28
 13696  249B  00D4               	movwf	___fldiv@a+2
 13697  249C  3040               	movlw	64
 13698  249D  00D3               	movwf	___fldiv@a+1
 13699  249E  3000               	movlw	0
 13700  249F  00D2               	movwf	___fldiv@a
 13701  24A0  0022               	movlb	2	; select bank2
 13702  24A1  353C               	lslf	measureVoltages@i^(0+256),w
 13703  24A2  3E20               	addlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13704  24A3  0086               	movwf	6
 13705  24A4  3001               	movlw	1	; select bank2/3
 13706  24A5  0087               	movwf	7
 13707  24A6  3F40               	moviw [0]fsr1
 13708  24A7  0021               	movlb	1	; select bank1
 13709  24A8  00E2               	movwf	??_measureVoltages^(0+128)
 13710  24A9  3F41               	moviw [1]fsr1
 13711  24AA  00E3               	movwf	(??_measureVoltages^(0+128)+1)
 13712  24AB  0862               	movf	??_measureVoltages^(0+128),w
 13713  24AC  0020               	movlb	0	; select bank0
 13714  24AD  00AE               	movwf	___xxtofl@val
 13715  24AE  0021               	movlb	1	; select bank1
 13716  24AF  0863               	movf	(??_measureVoltages+1)^(0+128),w
 13717  24B0  0020               	movlb	0	; select bank0
 13718  24B1  00AF               	movwf	___xxtofl@val+1
 13719  24B2  01B0               	clrf	___xxtofl@val+2
 13720  24B3  01B1               	clrf	___xxtofl@val+3
 13721  24B4  3000               	movlw	0
 13722  24B5  31AF  276A  31A4   	fcall	___xxtofl
 13723  24B8  0020               	movlb	0	; select bank0
 13724  24B9  0831               	movf	?___xxtofl+3,w
 13725  24BA  00D9               	movwf	___fldiv@b+3
 13726  24BB  0830               	movf	?___xxtofl+2,w
 13727  24BC  00D8               	movwf	___fldiv@b+2
 13728  24BD  082F               	movf	?___xxtofl+1,w
 13729  24BE  00D7               	movwf	___fldiv@b+1
 13730  24BF  082E               	movf	?___xxtofl,w
 13731  24C0  00D6               	movwf	___fldiv@b
 13732  24C1  3190  2073  31A4   	fcall	___fldiv
 13733  24C4  0020               	movlb	0	; select bank0
 13734  24C5  0855               	movf	?___fldiv+3,w
 13735  24C6  00BF               	movwf	___flmul@a+3
 13736  24C7  0854               	movf	?___fldiv+2,w
 13737  24C8  00BE               	movwf	___flmul@a+2
 13738  24C9  0853               	movf	?___fldiv+1,w
 13739  24CA  00BD               	movwf	___flmul@a+1
 13740  24CB  0852               	movf	?___fldiv,w
 13741  24CC  00BC               	movwf	___flmul@a
 13742  24CD  3195  25D4  31A4   	fcall	___flmul
 13743  24D0  0022               	movlb	2	; select bank2
 13744  24D1  083C               	movf	measureVoltages@i^(0+256),w
 13745  24D2  0021               	movlb	1	; select bank1
 13746  24D3  00E4               	movwf	(??_measureVoltages+2)^(0+128)
 13747  24D4  3001               	movlw	1
 13748  24D5                     u11605:	
 13749  24D5  35E4               	lslf	(??_measureVoltages+2)^(0+128),f
 13750  24D6  3EFF               	addlw	-1
 13751  24D7  1D03               	skipz
 13752  24D8  2CD5               	goto	u11605
 13753  24D9  3564               	lslf	(??_measureVoltages+2)^(0+128),w
 13754  24DA  0022               	movlb	2	; select bank2
 13755  24DB  073B               	addwf	measureVoltages@voltages^(0+256),w
 13756  24DC  0021               	movlb	1	; select bank1
 13757  24DD  00E5               	movwf	(??_measureVoltages+3)^(0+128)
 13758  24DE  0865               	movf	(??_measureVoltages+3)^(0+128),w
 13759  24DF  0086               	movwf	6
 13760  24E0  3002               	movlw	2	; select bank4/5
 13761  24E1  0087               	movwf	7
 13762  24E2  0020               	movlb	0	; select bank0
 13763  24E3  0838               	movf	?___flmul,w
 13764  24E4  3FC0               	movwi [0]fsr1
 13765  24E5  0839               	movf	?___flmul+1,w
 13766  24E6  3FC1               	movwi [1]fsr1
 13767  24E7  083A               	movf	?___flmul+2,w
 13768  24E8  3FC2               	movwi [2]fsr1
 13769  24E9  083B               	movf	?___flmul+3,w
 13770  24EA  3FC3               	movwi [3]fsr1
 13771                           
 13772                           ;ltc6804.c: 110: if(voltages[i] < 0.1){
 13773  24EB  0022               	movlb	2	; select bank2
 13774  24EC  083C               	movf	measureVoltages@i^(0+256),w
 13775  24ED  0021               	movlb	1	; select bank1
 13776  24EE  00E2               	movwf	??_measureVoltages^(0+128)
 13777  24EF  3001               	movlw	1
 13778  24F0                     u11615:	
 13779  24F0  35E2               	lslf	??_measureVoltages^(0+128),f
 13780  24F1  3EFF               	addlw	-1
 13781  24F2  1D03               	skipz
 13782  24F3  2CF0               	goto	u11615
 13783  24F4  3562               	lslf	??_measureVoltages^(0+128),w
 13784  24F5  0022               	movlb	2	; select bank2
 13785  24F6  073B               	addwf	measureVoltages@voltages^(0+256),w
 13786  24F7  0021               	movlb	1	; select bank1
 13787  24F8  00E3               	movwf	(??_measureVoltages+1)^(0+128)
 13788  24F9  0863               	movf	(??_measureVoltages+1)^(0+128),w
 13789  24FA  0086               	movwf	6
 13790  24FB  3002               	movlw	2	; select bank4/5
 13791  24FC  0087               	movwf	7
 13792  24FD  3F40               	moviw [0]fsr1
 13793  24FE  00C1               	movwf	___flge@ff1^(0+128)
 13794  24FF  3F41               	moviw [1]fsr1
 13795  2500  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13796  2501  3F42               	moviw [2]fsr1
 13797  2502  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13798  2503  3F43               	moviw [3]fsr1
 13799  2504  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13800  2505  303D               	movlw	61
 13801  2506  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13802  2507  30CC               	movlw	204
 13803  2508  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13804  2509  30CC               	movlw	204
 13805  250A  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13806  250B  30CD               	movlw	205
 13807  250C  00C5               	movwf	___flge@ff2^(0+128)
 13808  250D  31A0  20B2  31A4   	fcall	___flge
 13809  2510  1803               	btfsc	3,0
 13810  2511  2D2C               	goto	l8356
 13811                           
 13812                           ;ltc6804.c: 111: voltages[i] = 0.0;
 13813  2512  0022               	movlb	2	; select bank2
 13814  2513  083C               	movf	measureVoltages@i^(0+256),w
 13815  2514  0021               	movlb	1	; select bank1
 13816  2515  00E2               	movwf	??_measureVoltages^(0+128)
 13817  2516  3001               	movlw	1
 13818  2517                     u11635:	
 13819  2517  35E2               	lslf	??_measureVoltages^(0+128),f
 13820  2518  3EFF               	addlw	-1
 13821  2519  1D03               	skipz
 13822  251A  2D17               	goto	u11635
 13823  251B  3562               	lslf	??_measureVoltages^(0+128),w
 13824  251C  0022               	movlb	2	; select bank2
 13825  251D  073B               	addwf	measureVoltages@voltages^(0+256),w
 13826  251E  0021               	movlb	1	; select bank1
 13827  251F  00E3               	movwf	(??_measureVoltages+1)^(0+128)
 13828  2520  0863               	movf	(??_measureVoltages+1)^(0+128),w
 13829  2521  0086               	movwf	6
 13830  2522  3002               	movlw	2	; select bank4/5
 13831  2523  0087               	movwf	7
 13832  2524  3000               	movlw	0
 13833  2525  3FC0               	movwi [0]fsr1
 13834  2526  3000               	movlw	0
 13835  2527  3FC1               	movwi [1]fsr1
 13836  2528  3000               	movlw	0
 13837  2529  3FC2               	movwi [2]fsr1
 13838  252A  3000               	movlw	0
 13839  252B  3FC3               	movwi [3]fsr1
 13840  252C                     l8356:	
 13841  252C  3001               	movlw	1
 13842  252D  0022               	movlb	2	; select bank2
 13843  252E  07BC               	addwf	measureVoltages@i^(0+256),f
 13844  252F  3000               	movlw	0
 13845  2530  3DBD               	addwfc	(measureVoltages@i+1)^(0+256),f
 13846  2531  083D               	movf	(measureVoltages@i+1)^(0+256),w
 13847  2532  3A80               	xorlw	128
 13848  2533  0021               	movlb	1	; select bank1
 13849  2534  00E2               	movwf	??_measureVoltages^(0+128)
 13850  2535  3080               	movlw	128
 13851  2536  0262               	subwf	??_measureVoltages^(0+128),w
 13852  2537  1D03               	skipz
 13853  2538  2D3C               	goto	u11645
 13854  2539  300C               	movlw	12
 13855  253A  0022               	movlb	2	; select bank2
 13856  253B  023C               	subwf	measureVoltages@i^(0+256),w
 13857  253C                     u11645:	
 13858  253C  1C03               	skipc
 13859  253D  2C8F               	goto	l8352
 13860  253E                     l8360:	
 13861                           
 13862                           ;ltc6804.c: 112: }
 13863                           ;ltc6804.c: 113: }
 13864                           ;ltc6804.c: 115: if(errorCount <= 10){
 13865  253E  0022               	movlb	2	; select bank2
 13866  253F  083A               	movf	(measureVoltages@errorCount+1)^(0+256),w
 13867  2540  3A80               	xorlw	128
 13868  2541  0021               	movlb	1	; select bank1
 13869  2542  00E2               	movwf	??_measureVoltages^(0+128)
 13870  2543  3080               	movlw	128
 13871  2544  0262               	subwf	??_measureVoltages^(0+128),w
 13872  2545  1D03               	skipz
 13873  2546  2D4A               	goto	u11655
 13874  2547  300B               	movlw	11
 13875  2548  0022               	movlb	2	; select bank2
 13876  2549  0239               	subwf	measureVoltages@errorCount^(0+256),w
 13877  254A                     u11655:	
 13878  254A  1803               	skipnc
 13879  254B  0008               	return
 13880                           
 13881                           ;ltc6804.c: 116: cellBalancing(voltages, numVoltages);
 13882  254C  0021               	movlb	1	; select bank1
 13883  254D  0861               	movf	(measureVoltages@numVoltages+1)^(0+128),w
 13884  254E  00D2               	movwf	(cellBalancing@numVoltages+1)^(0+128)
 13885  254F  0860               	movf	measureVoltages@numVoltages^(0+128),w
 13886  2550  00D1               	movwf	cellBalancing@numVoltages^(0+128)
 13887  2551  0022               	movlb	2	; select bank2
 13888  2552  083B               	movf	measureVoltages@voltages^(0+256),w
 13889  2553  31A2  22A0         	fcall	_cellBalancing
 13890  2555  0008               	return
 13891  2556                     __end_of_measureVoltages:	
 13892                           
 13893                           	psect	text22
 13894  2B5B                     __ptext22:	
 13895 ;; *************** function _sumVoltages *****************
 13896 ;; Defined at:
 13897 ;;		line 76 in file "ltc6804.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;  voltages        1    wreg     PTR float 
 13900 ;;		 -> main@voltages(48), 
 13901 ;;  numVoltages     2   33[BANK1 ] int 
 13902 ;; Auto vars:     Size  Location     Type
 13903 ;;  voltages        1   39[BANK1 ] PTR float 
 13904 ;;		 -> main@voltages(48), 
 13905 ;;  i               2   44[BANK1 ] int 
 13906 ;;  totalVoltage    4   40[BANK1 ] float 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  4   33[BANK1 ] float 
 13909 ;; Registers used:
 13910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/0
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13916 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13917 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13918 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13919 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13920 ;;Total ram usage:       13 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    3
 13923 ;; This function calls:
 13924 ;;		___fladd
 13925 ;; This function is called by:
 13926 ;;		_startUp
 13927 ;;		_measureVoltages
 13928 ;; This function uses a non-reentrant model
 13929 ;;
 13930                           
 13931                           
 13932                           ;psect for function _sumVoltages
 13933  2B5B                     _sumVoltages:	
 13934                           
 13935                           ;incstack = 0
 13936                           ; Regs used in _sumVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13937                           ;sumVoltages@voltages stored from wreg
 13938  2B5B  0021               	movlb	1	; select bank1
 13939  2B5C  00C7               	movwf	sumVoltages@voltages^(0+128)
 13940                           
 13941                           ;ltc6804.c: 84: float totalVoltage = 0;
 13942  2B5D  3000               	movlw	0
 13943  2B5E  00CB               	movwf	(sumVoltages@totalVoltage+3)^(0+128)
 13944  2B5F  3000               	movlw	0
 13945  2B60  00CA               	movwf	(sumVoltages@totalVoltage+2)^(0+128)
 13946  2B61  3000               	movlw	0
 13947  2B62  00C9               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 13948  2B63  3000               	movlw	0
 13949  2B64  00C8               	movwf	sumVoltages@totalVoltage^(0+128)
 13950                           
 13951                           ;ltc6804.c: 86: for(int i = 0; i < numVoltages; i++){
 13952  2B65  01CC               	clrf	sumVoltages@i^(0+128)
 13953  2B66  01CD               	clrf	(sumVoltages@i+1)^(0+128)
 13954  2B67                     l7856:	
 13955  2B67  084D               	movf	(sumVoltages@i+1)^(0+128),w
 13956  2B68  3A80               	xorlw	128
 13957  2B69  00C5               	movwf	??_sumVoltages^(0+128)
 13958  2B6A  0842               	movf	(sumVoltages@numVoltages+1)^(0+128),w
 13959  2B6B  3A80               	xorlw	128
 13960  2B6C  0245               	subwf	??_sumVoltages^(0+128),w
 13961  2B6D  1D03               	skipz
 13962  2B6E  2B71               	goto	u10825
 13963  2B6F  0841               	movf	sumVoltages@numVoltages^(0+128),w
 13964  2B70  024C               	subwf	sumVoltages@i^(0+128),w
 13965  2B71                     u10825:	
 13966  2B71  1803               	btfsc	3,0
 13967  2B72  2BA3               	goto	l7858
 13968                           
 13969                           ;ltc6804.c: 87: totalVoltage += voltages[i];
 13970  2B73  0021               	movlb	1	; select bank1
 13971  2B74  084C               	movf	sumVoltages@i^(0+128),w
 13972  2B75  00C5               	movwf	??_sumVoltages^(0+128)
 13973  2B76  3001               	movlw	1
 13974  2B77                     u10815:	
 13975  2B77  35C5               	lslf	??_sumVoltages^(0+128),f
 13976  2B78  3EFF               	addlw	-1
 13977  2B79  1D03               	skipz
 13978  2B7A  2B77               	goto	u10815
 13979  2B7B  3545               	lslf	??_sumVoltages^(0+128),w
 13980  2B7C  0747               	addwf	sumVoltages@voltages^(0+128),w
 13981  2B7D  00C6               	movwf	(??_sumVoltages+1)^(0+128)
 13982  2B7E  0846               	movf	(??_sumVoltages+1)^(0+128),w
 13983  2B7F  0086               	movwf	6
 13984  2B80  3002               	movlw	2	; select bank4/5
 13985  2B81  0087               	movwf	7
 13986  2B82  3F40               	moviw [0]fsr1
 13987  2B83  00A9               	movwf	___fladd@b^(0+128)
 13988  2B84  3F41               	moviw [1]fsr1
 13989  2B85  00AA               	movwf	(___fladd@b+1)^(0+128)
 13990  2B86  3F42               	moviw [2]fsr1
 13991  2B87  00AB               	movwf	(___fladd@b+2)^(0+128)
 13992  2B88  3F43               	moviw [3]fsr1
 13993  2B89  00AC               	movwf	(___fladd@b+3)^(0+128)
 13994  2B8A  084B               	movf	(sumVoltages@totalVoltage+3)^(0+128),w
 13995  2B8B  00B0               	movwf	(___fladd@a+3)^(0+128)
 13996  2B8C  084A               	movf	(sumVoltages@totalVoltage+2)^(0+128),w
 13997  2B8D  00AF               	movwf	(___fladd@a+2)^(0+128)
 13998  2B8E  0849               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 13999  2B8F  00AE               	movwf	(___fladd@a+1)^(0+128)
 14000  2B90  0848               	movf	sumVoltages@totalVoltage^(0+128),w
 14001  2B91  00AD               	movwf	___fladd@a^(0+128)
 14002  2B92  3193  23D8  31AB   	fcall	___fladd
 14003  2B95  0021               	movlb	1	; select bank1
 14004  2B96  082C               	movf	(?___fladd+3)^(0+128),w
 14005  2B97  00CB               	movwf	(sumVoltages@totalVoltage+3)^(0+128)
 14006  2B98  082B               	movf	(?___fladd+2)^(0+128),w
 14007  2B99  00CA               	movwf	(sumVoltages@totalVoltage+2)^(0+128)
 14008  2B9A  082A               	movf	(?___fladd+1)^(0+128),w
 14009  2B9B  00C9               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 14010  2B9C  0829               	movf	?___fladd^(0+128),w
 14011  2B9D  00C8               	movwf	sumVoltages@totalVoltage^(0+128)
 14012  2B9E  3001               	movlw	1
 14013  2B9F  07CC               	addwf	sumVoltages@i^(0+128),f
 14014  2BA0  3000               	movlw	0
 14015  2BA1  3DCD               	addwfc	(sumVoltages@i+1)^(0+128),f
 14016  2BA2  2B67               	goto	l7856
 14017  2BA3                     l7858:	
 14018                           
 14019                           ;ltc6804.c: 88: }
 14020                           ;ltc6804.c: 91: return (totalVoltage);
 14021  2BA3  0021               	movlb	1	; select bank1
 14022  2BA4  084B               	movf	(sumVoltages@totalVoltage+3)^(0+128),w
 14023  2BA5  00C4               	movwf	(?_sumVoltages+3)^(0+128)
 14024  2BA6  084A               	movf	(sumVoltages@totalVoltage+2)^(0+128),w
 14025  2BA7  00C3               	movwf	(?_sumVoltages+2)^(0+128)
 14026  2BA8  0849               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 14027  2BA9  00C2               	movwf	(?_sumVoltages+1)^(0+128)
 14028  2BAA  0848               	movf	sumVoltages@totalVoltage^(0+128),w
 14029  2BAB  00C1               	movwf	?_sumVoltages^(0+128)
 14030  2BAC  0008               	return
 14031  2BAD                     __end_of_sumVoltages:	
 14032                           
 14033                           	psect	text23
 14034  22A0                     __ptext23:	
 14035 ;; *************** function _cellBalancing *****************
 14036 ;; Defined at:
 14037 ;;		line 120 in file "ltc6804.c"
 14038 ;; Parameters:    Size  Location     Type
 14039 ;;  voltages        1    wreg     PTR float 
 14040 ;;		 -> main@voltages(48), 
 14041 ;;  numVoltages     2   49[BANK1 ] int 
 14042 ;; Auto vars:     Size  Location     Type
 14043 ;;  voltages        1   62[BANK1 ] PTR float 
 14044 ;;		 -> main@voltages(48), 
 14045 ;;  i               2   60[BANK1 ] int 
 14046 ;;  i               2   58[BANK1 ] int 
 14047 ;;  minVoltage      4   54[BANK1 ] float 
 14048 ;;  boolean         1   53[BANK1 ] unsigned char 
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14058 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14059 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14060 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14061 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14062 ;;Total ram usage:       14 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; Hardware stack levels required when called:    5
 14065 ;; This function calls:
 14066 ;;		_LTC6804_wrcfg
 14067 ;;		___fladd
 14068 ;;		___flge
 14069 ;;		_setDischarge
 14070 ;; This function is called by:
 14071 ;;		_main
 14072 ;;		_measureVoltages
 14073 ;; This function uses a non-reentrant model
 14074 ;;
 14075                           
 14076                           
 14077                           ;psect for function _cellBalancing
 14078  22A0                     _cellBalancing:	
 14079                           
 14080                           ;incstack = 0
 14081                           ; Regs used in _cellBalancing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14082                           ;cellBalancing@voltages stored from wreg
 14083  22A0  0021               	movlb	1	; select bank1
 14084  22A1  00DE               	movwf	cellBalancing@voltages^(0+128)
 14085                           
 14086                           ;ltc6804.c: 121: float minVoltage = voltages[0];
 14087  22A2  085E               	movf	cellBalancing@voltages^(0+128),w
 14088  22A3  0086               	movwf	6
 14089  22A4  3002               	movlw	2	; select bank4/5
 14090  22A5  0087               	movwf	7
 14091  22A6  3F40               	moviw [0]fsr1
 14092  22A7  00D6               	movwf	cellBalancing@minVoltage^(0+128)
 14093  22A8  3F41               	moviw [1]fsr1
 14094  22A9  00D7               	movwf	(cellBalancing@minVoltage+1)^(0+128)
 14095  22AA  3F42               	moviw [2]fsr1
 14096  22AB  00D8               	movwf	(cellBalancing@minVoltage+2)^(0+128)
 14097  22AC  3F43               	moviw [3]fsr1
 14098  22AD  00D9               	movwf	(cellBalancing@minVoltage+3)^(0+128)
 14099                           
 14100                           ;ltc6804.c: 123: for(int i = 0; i < numVoltages; i++){
 14101  22AE  01DA               	clrf	cellBalancing@i^(0+128)
 14102  22AF  01DB               	clrf	(cellBalancing@i+1)^(0+128)
 14103  22B0                     l7834:	
 14104  22B0  085B               	movf	(cellBalancing@i+1)^(0+128),w
 14105  22B1  3A80               	xorlw	128
 14106  22B2  00D3               	movwf	??_cellBalancing^(0+128)
 14107  22B3  0852               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 14108  22B4  3A80               	xorlw	128
 14109  22B5  0253               	subwf	??_cellBalancing^(0+128),w
 14110  22B6  1D03               	skipz
 14111  22B7  2ABA               	goto	u10785
 14112  22B8  0851               	movf	cellBalancing@numVoltages^(0+128),w
 14113  22B9  025A               	subwf	cellBalancing@i^(0+128),w
 14114  22BA                     u10785:	
 14115  22BA  1803               	btfsc	3,0
 14116  22BB  2AFD               	goto	l7836
 14117                           
 14118                           ;ltc6804.c: 124: if(voltages[i] < minVoltage){
 14119  22BC  0021               	movlb	1	; select bank1
 14120  22BD  085A               	movf	cellBalancing@i^(0+128),w
 14121  22BE  00D3               	movwf	??_cellBalancing^(0+128)
 14122  22BF  3001               	movlw	1
 14123  22C0                     u10755:	
 14124  22C0  35D3               	lslf	??_cellBalancing^(0+128),f
 14125  22C1  3EFF               	addlw	-1
 14126  22C2  1D03               	skipz
 14127  22C3  2AC0               	goto	u10755
 14128  22C4  3553               	lslf	??_cellBalancing^(0+128),w
 14129  22C5  075E               	addwf	cellBalancing@voltages^(0+128),w
 14130  22C6  00D4               	movwf	(??_cellBalancing+1)^(0+128)
 14131  22C7  0854               	movf	(??_cellBalancing+1)^(0+128),w
 14132  22C8  0086               	movwf	6
 14133  22C9  3002               	movlw	2	; select bank4/5
 14134  22CA  0087               	movwf	7
 14135  22CB  3F40               	moviw [0]fsr1
 14136  22CC  00C1               	movwf	___flge@ff1^(0+128)
 14137  22CD  3F41               	moviw [1]fsr1
 14138  22CE  00C2               	movwf	(___flge@ff1+1)^(0+128)
 14139  22CF  3F42               	moviw [2]fsr1
 14140  22D0  00C3               	movwf	(___flge@ff1+2)^(0+128)
 14141  22D1  3F43               	moviw [3]fsr1
 14142  22D2  00C4               	movwf	(___flge@ff1+3)^(0+128)
 14143  22D3  0859               	movf	(cellBalancing@minVoltage+3)^(0+128),w
 14144  22D4  00C8               	movwf	(___flge@ff2+3)^(0+128)
 14145  22D5  0858               	movf	(cellBalancing@minVoltage+2)^(0+128),w
 14146  22D6  00C7               	movwf	(___flge@ff2+2)^(0+128)
 14147  22D7  0857               	movf	(cellBalancing@minVoltage+1)^(0+128),w
 14148  22D8  00C6               	movwf	(___flge@ff2+1)^(0+128)
 14149  22D9  0856               	movf	cellBalancing@minVoltage^(0+128),w
 14150  22DA  00C5               	movwf	___flge@ff2^(0+128)
 14151  22DB  31A0  20B2  31A2   	fcall	___flge
 14152  22DE  1803               	btfsc	3,0
 14153  22DF  2AF7               	goto	l7832
 14154                           
 14155                           ;ltc6804.c: 125: minVoltage = voltages[i];
 14156  22E0  0021               	movlb	1	; select bank1
 14157  22E1  085A               	movf	cellBalancing@i^(0+128),w
 14158  22E2  00D3               	movwf	??_cellBalancing^(0+128)
 14159  22E3  3001               	movlw	1
 14160  22E4                     u10775:	
 14161  22E4  35D3               	lslf	??_cellBalancing^(0+128),f
 14162  22E5  3EFF               	addlw	-1
 14163  22E6  1D03               	skipz
 14164  22E7  2AE4               	goto	u10775
 14165  22E8  3553               	lslf	??_cellBalancing^(0+128),w
 14166  22E9  075E               	addwf	cellBalancing@voltages^(0+128),w
 14167  22EA  00D4               	movwf	(??_cellBalancing+1)^(0+128)
 14168  22EB  0854               	movf	(??_cellBalancing+1)^(0+128),w
 14169  22EC  0086               	movwf	6
 14170  22ED  3002               	movlw	2	; select bank4/5
 14171  22EE  0087               	movwf	7
 14172  22EF  3F40               	moviw [0]fsr1
 14173  22F0  00D6               	movwf	cellBalancing@minVoltage^(0+128)
 14174  22F1  3F41               	moviw [1]fsr1
 14175  22F2  00D7               	movwf	(cellBalancing@minVoltage+1)^(0+128)
 14176  22F3  3F42               	moviw [2]fsr1
 14177  22F4  00D8               	movwf	(cellBalancing@minVoltage+2)^(0+128)
 14178  22F5  3F43               	moviw [3]fsr1
 14179  22F6  00D9               	movwf	(cellBalancing@minVoltage+3)^(0+128)
 14180  22F7                     l7832:	
 14181  22F7  3001               	movlw	1
 14182  22F8  0021               	movlb	1	; select bank1
 14183  22F9  07DA               	addwf	cellBalancing@i^(0+128),f
 14184  22FA  3000               	movlw	0
 14185  22FB  3DDB               	addwfc	(cellBalancing@i+1)^(0+128),f
 14186  22FC  2AB0               	goto	l7834
 14187  22FD                     l7836:	
 14188                           
 14189                           ;ltc6804.c: 126: }
 14190                           ;ltc6804.c: 127: }
 14191                           ;ltc6804.c: 128: char boolean;
 14192                           ;ltc6804.c: 129: for(int i = 0; i < numVoltages; i++){
 14193  22FD  0021               	movlb	1	; select bank1
 14194  22FE  01DC               	clrf	cellBalancing@i_1316^(0+128)
 14195  22FF  01DD               	clrf	(cellBalancing@i_1316+1)^(0+128)
 14196  2300                     l7844:	
 14197  2300  085D               	movf	(cellBalancing@i_1316+1)^(0+128),w
 14198  2301  3A80               	xorlw	128
 14199  2302  00D3               	movwf	??_cellBalancing^(0+128)
 14200  2303  0852               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 14201  2304  3A80               	xorlw	128
 14202  2305  0253               	subwf	??_cellBalancing^(0+128),w
 14203  2306  1D03               	skipz
 14204  2307  2B0A               	goto	u10805
 14205  2308  0851               	movf	cellBalancing@numVoltages^(0+128),w
 14206  2309  025C               	subwf	cellBalancing@i_1316^(0+128),w
 14207  230A                     u10805:	
 14208  230A  1803               	btfsc	3,0
 14209  230B  2B58               	goto	l7846
 14210                           
 14211                           ;ltc6804.c: 130: boolean = (voltages[i] >= (minVoltage + 0.05));
 14212  230C  0021               	movlb	1	; select bank1
 14213  230D  085C               	movf	cellBalancing@i_1316^(0+128),w
 14214  230E  00D3               	movwf	??_cellBalancing^(0+128)
 14215  230F  3001               	movlw	1
 14216  2310                     u10795:	
 14217  2310  35D3               	lslf	??_cellBalancing^(0+128),f
 14218  2311  3EFF               	addlw	-1
 14219  2312  1D03               	skipz
 14220  2313  2B10               	goto	u10795
 14221  2314  3553               	lslf	??_cellBalancing^(0+128),w
 14222  2315  075E               	addwf	cellBalancing@voltages^(0+128),w
 14223  2316  00D4               	movwf	(??_cellBalancing+1)^(0+128)
 14224  2317  0854               	movf	(??_cellBalancing+1)^(0+128),w
 14225  2318  0086               	movwf	6
 14226  2319  3002               	movlw	2	; select bank4/5
 14227  231A  0087               	movwf	7
 14228  231B  3F40               	moviw [0]fsr1
 14229  231C  00C1               	movwf	___flge@ff1^(0+128)
 14230  231D  3F41               	moviw [1]fsr1
 14231  231E  00C2               	movwf	(___flge@ff1+1)^(0+128)
 14232  231F  3F42               	moviw [2]fsr1
 14233  2320  00C3               	movwf	(___flge@ff1+2)^(0+128)
 14234  2321  3F43               	moviw [3]fsr1
 14235  2322  00C4               	movwf	(___flge@ff1+3)^(0+128)
 14236  2323  303D               	movlw	61
 14237  2324  00AC               	movwf	(___fladd@b+3)^(0+128)
 14238  2325  304C               	movlw	76
 14239  2326  00AB               	movwf	(___fladd@b+2)^(0+128)
 14240  2327  30CC               	movlw	204
 14241  2328  00AA               	movwf	(___fladd@b+1)^(0+128)
 14242  2329  30CD               	movlw	205
 14243  232A  00A9               	movwf	___fladd@b^(0+128)
 14244  232B  0859               	movf	(cellBalancing@minVoltage+3)^(0+128),w
 14245  232C  00B0               	movwf	(___fladd@a+3)^(0+128)
 14246  232D  0858               	movf	(cellBalancing@minVoltage+2)^(0+128),w
 14247  232E  00AF               	movwf	(___fladd@a+2)^(0+128)
 14248  232F  0857               	movf	(cellBalancing@minVoltage+1)^(0+128),w
 14249  2330  00AE               	movwf	(___fladd@a+1)^(0+128)
 14250  2331  0856               	movf	cellBalancing@minVoltage^(0+128),w
 14251  2332  00AD               	movwf	___fladd@a^(0+128)
 14252  2333  3193  23D8  31A2   	fcall	___fladd
 14253  2336  0021               	movlb	1	; select bank1
 14254  2337  082C               	movf	(?___fladd+3)^(0+128),w
 14255  2338  00C8               	movwf	(___flge@ff2+3)^(0+128)
 14256  2339  082B               	movf	(?___fladd+2)^(0+128),w
 14257  233A  00C7               	movwf	(___flge@ff2+2)^(0+128)
 14258  233B  082A               	movf	(?___fladd+1)^(0+128),w
 14259  233C  00C6               	movwf	(___flge@ff2+1)^(0+128)
 14260  233D  0829               	movf	?___fladd^(0+128),w
 14261  233E  00C5               	movwf	___flge@ff2^(0+128)
 14262  233F  31A0  20B2  31A2   	fcall	___flge
 14263  2342  3000               	movlw	0
 14264  2343  1803               	btfsc	3,0
 14265  2344  3001               	movlw	1
 14266  2345  0021               	movlb	1	; select bank1
 14267  2346  00D5               	movwf	cellBalancing@boolean^(0+128)
 14268                           
 14269                           ;ltc6804.c: 131: setDischarge(i, boolean);
 14270  2347  085D               	movf	(cellBalancing@i_1316+1)^(0+128),w
 14271  2348  00F3               	movwf	setDischarge@index+1
 14272  2349  085C               	movf	cellBalancing@i_1316^(0+128),w
 14273  234A  00F2               	movwf	setDischarge@index
 14274  234B  0855               	movf	cellBalancing@boolean^(0+128),w
 14275  234C  00D3               	movwf	??_cellBalancing^(0+128)
 14276  234D  0853               	movf	??_cellBalancing^(0+128),w
 14277  234E  00F4               	movwf	setDischarge@boolean
 14278  234F  319C  240A  31A2   	fcall	_setDischarge
 14279  2352  3001               	movlw	1
 14280  2353  0021               	movlb	1	; select bank1
 14281  2354  07DC               	addwf	cellBalancing@i_1316^(0+128),f
 14282  2355  3000               	movlw	0
 14283  2356  3DDD               	addwfc	(cellBalancing@i_1316+1)^(0+128),f
 14284  2357  2B00               	goto	l7844
 14285  2358                     l7846:	
 14286                           
 14287                           ;ltc6804.c: 132: }
 14288                           ;ltc6804.c: 133: LTC6804_wrcfg(1, configReg);
 14289  2358  306A               	movlw	(low (_configReg| (0+256)))& (0+255)
 14290  2359  0021               	movlb	1	; select bank1
 14291  235A  00D3               	movwf	??_cellBalancing^(0+128)
 14292  235B  0853               	movf	??_cellBalancing^(0+128),w
 14293  235C  00F9               	movwf	LTC6804_wrcfg@config
 14294  235D  3001               	movlw	1
 14295  235E  31A1  214C         	fcall	_LTC6804_wrcfg
 14296  2360  0008               	return
 14297  2361                     __end_of_cellBalancing:	
 14298                           
 14299                           	psect	text24
 14300  1C0A                     __ptext24:	
 14301 ;; *************** function _setDischarge *****************
 14302 ;; Defined at:
 14303 ;;		line 136 in file "ltc6804.c"
 14304 ;; Parameters:    Size  Location     Type
 14305 ;;  index           2    2[COMMON] int 
 14306 ;;  boolean         1    4[COMMON] unsigned char 
 14307 ;; Auto vars:     Size  Location     Type
 14308 ;;		None
 14309 ;; Return value:  Size  Location     Type
 14310 ;;                  1    wreg      void 
 14311 ;; Registers used:
 14312 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14313 ;; Tracked objects:
 14314 ;;		On entry : 0/0
 14315 ;;		On exit  : 0/0
 14316 ;;		Unchanged: 0/0
 14317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14318 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14320 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14321 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14322 ;;Total ram usage:        4 bytes
 14323 ;; Hardware stack levels used:    1
 14324 ;; Hardware stack levels required when called:    2
 14325 ;; This function calls:
 14326 ;;		Nothing
 14327 ;; This function is called by:
 14328 ;;		_cellBalancing
 14329 ;; This function uses a non-reentrant model
 14330 ;;
 14331                           
 14332                           
 14333                           ;psect for function _setDischarge
 14334  1C0A                     _setDischarge:	
 14335                           
 14336                           ;ltc6804.c: 137: switch(index){
 14337                           
 14338                           ;incstack = 0
 14339                           ; Regs used in _setDischarge: [wreg-fsr0h+status,2+status,0]
 14340  1C0A  2CD7               	goto	l7232
 14341  1C0B                     l7158:	
 14342                           ;ltc6804.c: 138: case 0:
 14343                           
 14344                           
 14345                           ;ltc6804.c: 139: if(boolean){
 14346  1C0B  0874               	movf	setDischarge@boolean,w
 14347  1C0C  1903               	btfsc	3,2
 14348  1C0D  2C15               	goto	l7162
 14349                           
 14350                           ;ltc6804.c: 140: configReg[0][4]= configReg[0][4] | 0x01;
 14351  1C0E  0022               	movlb	2	; select bank2
 14352  1C0F  086E               	movf	(_configReg^(0+256)+4),w
 14353  1C10  3801               	iorlw	1
 14354  1C11  00F5               	movwf	??_setDischarge
 14355  1C12  0875               	movf	??_setDischarge,w
 14356  1C13  00EE               	movwf	(_configReg^(0+256)+4)
 14357                           
 14358                           ;ltc6804.c: 141: }else{
 14359  1C14  0008               	return
 14360  1C15                     l7162:	
 14361                           
 14362                           ;ltc6804.c: 142: configReg[0][4]= configReg[0][4] & (~0x01);
 14363  1C15  0022               	movlb	2	; select bank2
 14364  1C16  086E               	movf	(_configReg^(0+256)+4),w
 14365  1C17  39FE               	andlw	254
 14366  1C18  00F5               	movwf	??_setDischarge
 14367  1C19  0875               	movf	??_setDischarge,w
 14368  1C1A  00EE               	movwf	(_configReg^(0+256)+4)
 14369                           
 14370                           ;ltc6804.c: 143: }
 14371                           ;ltc6804.c: 144: break;
 14372  1C1B  0008               	return
 14373  1C1C                     l7164:	
 14374                           ;ltc6804.c: 145: case 1:
 14375                           
 14376                           
 14377                           ;ltc6804.c: 146: if(boolean){
 14378  1C1C  0874               	movf	setDischarge@boolean,w
 14379  1C1D  1903               	btfsc	3,2
 14380  1C1E  2C26               	goto	l7168
 14381                           
 14382                           ;ltc6804.c: 147: configReg[0][4]= configReg[0][4] | 0x02;
 14383  1C1F  0022               	movlb	2	; select bank2
 14384  1C20  086E               	movf	(_configReg^(0+256)+4),w
 14385  1C21  3802               	iorlw	2
 14386  1C22  00F5               	movwf	??_setDischarge
 14387  1C23  0875               	movf	??_setDischarge,w
 14388  1C24  00EE               	movwf	(_configReg^(0+256)+4)
 14389                           
 14390                           ;ltc6804.c: 148: }else{
 14391  1C25  0008               	return
 14392  1C26                     l7168:	
 14393                           
 14394                           ;ltc6804.c: 149: configReg[0][4]= configReg[0][4] & (~0x02);
 14395  1C26  0022               	movlb	2	; select bank2
 14396  1C27  086E               	movf	(_configReg^(0+256)+4),w
 14397  1C28  39FD               	andlw	253
 14398  1C29  00F5               	movwf	??_setDischarge
 14399  1C2A  0875               	movf	??_setDischarge,w
 14400  1C2B  00EE               	movwf	(_configReg^(0+256)+4)
 14401                           
 14402                           ;ltc6804.c: 150: }
 14403                           ;ltc6804.c: 151: break;
 14404  1C2C  0008               	return
 14405  1C2D                     l7170:	
 14406                           ;ltc6804.c: 152: case 2:
 14407                           
 14408                           
 14409                           ;ltc6804.c: 153: if(boolean){
 14410  1C2D  0874               	movf	setDischarge@boolean,w
 14411  1C2E  1903               	btfsc	3,2
 14412  1C2F  2C37               	goto	l7174
 14413                           
 14414                           ;ltc6804.c: 154: configReg[0][4]= configReg[0][4] | 0x04;
 14415  1C30  0022               	movlb	2	; select bank2
 14416  1C31  086E               	movf	(_configReg^(0+256)+4),w
 14417  1C32  3804               	iorlw	4
 14418  1C33  00F5               	movwf	??_setDischarge
 14419  1C34  0875               	movf	??_setDischarge,w
 14420  1C35  00EE               	movwf	(_configReg^(0+256)+4)
 14421                           
 14422                           ;ltc6804.c: 155: }else{
 14423  1C36  0008               	return
 14424  1C37                     l7174:	
 14425                           
 14426                           ;ltc6804.c: 156: configReg[0][4]= configReg[0][4] & (~0x04);
 14427  1C37  0022               	movlb	2	; select bank2
 14428  1C38  086E               	movf	(_configReg^(0+256)+4),w
 14429  1C39  39FB               	andlw	251
 14430  1C3A  00F5               	movwf	??_setDischarge
 14431  1C3B  0875               	movf	??_setDischarge,w
 14432  1C3C  00EE               	movwf	(_configReg^(0+256)+4)
 14433                           
 14434                           ;ltc6804.c: 157: }
 14435                           ;ltc6804.c: 158: break;
 14436  1C3D  0008               	return
 14437  1C3E                     l7176:	
 14438                           ;ltc6804.c: 159: case 3:
 14439                           
 14440                           
 14441                           ;ltc6804.c: 160: if(boolean){
 14442  1C3E  0874               	movf	setDischarge@boolean,w
 14443  1C3F  1903               	btfsc	3,2
 14444  1C40  2C48               	goto	l7180
 14445                           
 14446                           ;ltc6804.c: 161: configReg[0][4]= configReg[0][4] | 0x08;
 14447  1C41  0022               	movlb	2	; select bank2
 14448  1C42  086E               	movf	(_configReg^(0+256)+4),w
 14449  1C43  3808               	iorlw	8
 14450  1C44  00F5               	movwf	??_setDischarge
 14451  1C45  0875               	movf	??_setDischarge,w
 14452  1C46  00EE               	movwf	(_configReg^(0+256)+4)
 14453                           
 14454                           ;ltc6804.c: 162: }else{
 14455  1C47  0008               	return
 14456  1C48                     l7180:	
 14457                           
 14458                           ;ltc6804.c: 163: configReg[0][4]= configReg[0][4] & (~0x08);
 14459  1C48  0022               	movlb	2	; select bank2
 14460  1C49  086E               	movf	(_configReg^(0+256)+4),w
 14461  1C4A  39F7               	andlw	247
 14462  1C4B  00F5               	movwf	??_setDischarge
 14463  1C4C  0875               	movf	??_setDischarge,w
 14464  1C4D  00EE               	movwf	(_configReg^(0+256)+4)
 14465                           
 14466                           ;ltc6804.c: 164: }
 14467                           ;ltc6804.c: 165: break;
 14468  1C4E  0008               	return
 14469  1C4F                     l7182:	
 14470                           ;ltc6804.c: 166: case 4:
 14471                           
 14472                           
 14473                           ;ltc6804.c: 167: if(boolean){
 14474  1C4F  0874               	movf	setDischarge@boolean,w
 14475  1C50  1903               	btfsc	3,2
 14476  1C51  2C59               	goto	l7186
 14477                           
 14478                           ;ltc6804.c: 168: configReg[0][4]= configReg[0][4] | 0x10;
 14479  1C52  0022               	movlb	2	; select bank2
 14480  1C53  086E               	movf	(_configReg^(0+256)+4),w
 14481  1C54  3810               	iorlw	16
 14482  1C55  00F5               	movwf	??_setDischarge
 14483  1C56  0875               	movf	??_setDischarge,w
 14484  1C57  00EE               	movwf	(_configReg^(0+256)+4)
 14485                           
 14486                           ;ltc6804.c: 169: }else{
 14487  1C58  0008               	return
 14488  1C59                     l7186:	
 14489                           
 14490                           ;ltc6804.c: 170: configReg[0][4]= configReg[0][4] & (~0x10);
 14491  1C59  0022               	movlb	2	; select bank2
 14492  1C5A  086E               	movf	(_configReg^(0+256)+4),w
 14493  1C5B  39EF               	andlw	239
 14494  1C5C  00F5               	movwf	??_setDischarge
 14495  1C5D  0875               	movf	??_setDischarge,w
 14496  1C5E  00EE               	movwf	(_configReg^(0+256)+4)
 14497                           
 14498                           ;ltc6804.c: 171: }
 14499                           ;ltc6804.c: 172: break;
 14500  1C5F  0008               	return
 14501  1C60                     l7188:	
 14502                           ;ltc6804.c: 173: case 5:
 14503                           
 14504                           
 14505                           ;ltc6804.c: 174: if(boolean){
 14506  1C60  0874               	movf	setDischarge@boolean,w
 14507  1C61  1903               	btfsc	3,2
 14508  1C62  2C6A               	goto	l7192
 14509                           
 14510                           ;ltc6804.c: 175: configReg[0][4]= configReg[0][4] | 0x20;
 14511  1C63  0022               	movlb	2	; select bank2
 14512  1C64  086E               	movf	(_configReg^(0+256)+4),w
 14513  1C65  3820               	iorlw	32
 14514  1C66  00F5               	movwf	??_setDischarge
 14515  1C67  0875               	movf	??_setDischarge,w
 14516  1C68  00EE               	movwf	(_configReg^(0+256)+4)
 14517                           
 14518                           ;ltc6804.c: 176: }else{
 14519  1C69  0008               	return
 14520  1C6A                     l7192:	
 14521                           
 14522                           ;ltc6804.c: 177: configReg[0][4]= configReg[0][4] & (~0x20);
 14523  1C6A  0022               	movlb	2	; select bank2
 14524  1C6B  086E               	movf	(_configReg^(0+256)+4),w
 14525  1C6C  39DF               	andlw	223
 14526  1C6D  00F5               	movwf	??_setDischarge
 14527  1C6E  0875               	movf	??_setDischarge,w
 14528  1C6F  00EE               	movwf	(_configReg^(0+256)+4)
 14529                           
 14530                           ;ltc6804.c: 178: }
 14531                           ;ltc6804.c: 179: break;
 14532  1C70  0008               	return
 14533  1C71                     l7194:	
 14534                           ;ltc6804.c: 180: case 6:
 14535                           
 14536                           
 14537                           ;ltc6804.c: 181: if(boolean){
 14538  1C71  0874               	movf	setDischarge@boolean,w
 14539  1C72  1903               	btfsc	3,2
 14540  1C73  2C7B               	goto	l7198
 14541                           
 14542                           ;ltc6804.c: 182: configReg[0][4]= configReg[0][4] | 0x40;
 14543  1C74  0022               	movlb	2	; select bank2
 14544  1C75  086E               	movf	(_configReg^(0+256)+4),w
 14545  1C76  3840               	iorlw	64
 14546  1C77  00F5               	movwf	??_setDischarge
 14547  1C78  0875               	movf	??_setDischarge,w
 14548  1C79  00EE               	movwf	(_configReg^(0+256)+4)
 14549                           
 14550                           ;ltc6804.c: 183: }else{
 14551  1C7A  0008               	return
 14552  1C7B                     l7198:	
 14553                           
 14554                           ;ltc6804.c: 184: configReg[0][4]= configReg[0][4] & (~0x40);
 14555  1C7B  0022               	movlb	2	; select bank2
 14556  1C7C  086E               	movf	(_configReg^(0+256)+4),w
 14557  1C7D  39BF               	andlw	191
 14558  1C7E  00F5               	movwf	??_setDischarge
 14559  1C7F  0875               	movf	??_setDischarge,w
 14560  1C80  00EE               	movwf	(_configReg^(0+256)+4)
 14561                           
 14562                           ;ltc6804.c: 185: }
 14563                           ;ltc6804.c: 186: break;
 14564  1C81  0008               	return
 14565  1C82                     l7200:	
 14566                           ;ltc6804.c: 187: case 7:
 14567                           
 14568                           
 14569                           ;ltc6804.c: 188: if(boolean){
 14570  1C82  0874               	movf	setDischarge@boolean,w
 14571  1C83  1903               	btfsc	3,2
 14572  1C84  2C8C               	goto	l7204
 14573                           
 14574                           ;ltc6804.c: 189: configReg[0][4]= configReg[0][4] | 0x80;
 14575  1C85  0022               	movlb	2	; select bank2
 14576  1C86  086E               	movf	(_configReg^(0+256)+4),w
 14577  1C87  3880               	iorlw	128
 14578  1C88  00F5               	movwf	??_setDischarge
 14579  1C89  0875               	movf	??_setDischarge,w
 14580  1C8A  00EE               	movwf	(_configReg^(0+256)+4)
 14581                           
 14582                           ;ltc6804.c: 190: }else{
 14583  1C8B  0008               	return
 14584  1C8C                     l7204:	
 14585                           
 14586                           ;ltc6804.c: 191: configReg[0][4]= configReg[0][4] & (~0x80);
 14587  1C8C  0022               	movlb	2	; select bank2
 14588  1C8D  086E               	movf	(_configReg^(0+256)+4),w
 14589  1C8E  397F               	andlw	127
 14590  1C8F  00F5               	movwf	??_setDischarge
 14591  1C90  0875               	movf	??_setDischarge,w
 14592  1C91  00EE               	movwf	(_configReg^(0+256)+4)
 14593                           
 14594                           ;ltc6804.c: 192: }
 14595                           ;ltc6804.c: 193: break;
 14596  1C92  0008               	return
 14597  1C93                     l7206:	
 14598                           ;ltc6804.c: 194: case 8:
 14599                           
 14600                           
 14601                           ;ltc6804.c: 195: if(boolean){
 14602  1C93  0874               	movf	setDischarge@boolean,w
 14603  1C94  1903               	btfsc	3,2
 14604  1C95  2C9D               	goto	l7210
 14605                           
 14606                           ;ltc6804.c: 196: configReg[0][5]= configReg[0][5] | 0x01;
 14607  1C96  0022               	movlb	2	; select bank2
 14608  1C97  086F               	movf	(_configReg^(0+256)+5),w
 14609  1C98  3801               	iorlw	1
 14610  1C99  00F5               	movwf	??_setDischarge
 14611  1C9A  0875               	movf	??_setDischarge,w
 14612  1C9B  00EF               	movwf	(_configReg^(0+256)+5)
 14613                           
 14614                           ;ltc6804.c: 197: }else{
 14615  1C9C  0008               	return
 14616  1C9D                     l7210:	
 14617                           
 14618                           ;ltc6804.c: 198: configReg[0][5]= configReg[0][5] & (~0x01);
 14619  1C9D  0022               	movlb	2	; select bank2
 14620  1C9E  086F               	movf	(_configReg^(0+256)+5),w
 14621  1C9F  39FE               	andlw	254
 14622  1CA0  00F5               	movwf	??_setDischarge
 14623  1CA1  0875               	movf	??_setDischarge,w
 14624  1CA2  00EF               	movwf	(_configReg^(0+256)+5)
 14625                           
 14626                           ;ltc6804.c: 199: }
 14627                           ;ltc6804.c: 200: break;
 14628  1CA3  0008               	return
 14629  1CA4                     l7212:	
 14630                           ;ltc6804.c: 201: case 9:
 14631                           
 14632                           
 14633                           ;ltc6804.c: 202: if(boolean){
 14634  1CA4  0874               	movf	setDischarge@boolean,w
 14635  1CA5  1903               	btfsc	3,2
 14636  1CA6  2CAE               	goto	l7216
 14637                           
 14638                           ;ltc6804.c: 203: configReg[0][5]= configReg[0][5] | 0x02;
 14639  1CA7  0022               	movlb	2	; select bank2
 14640  1CA8  086F               	movf	(_configReg^(0+256)+5),w
 14641  1CA9  3802               	iorlw	2
 14642  1CAA  00F5               	movwf	??_setDischarge
 14643  1CAB  0875               	movf	??_setDischarge,w
 14644  1CAC  00EF               	movwf	(_configReg^(0+256)+5)
 14645                           
 14646                           ;ltc6804.c: 204: }else{
 14647  1CAD  0008               	return
 14648  1CAE                     l7216:	
 14649                           
 14650                           ;ltc6804.c: 205: configReg[0][5]= configReg[0][5] & (~0x02);
 14651  1CAE  0022               	movlb	2	; select bank2
 14652  1CAF  086F               	movf	(_configReg^(0+256)+5),w
 14653  1CB0  39FD               	andlw	253
 14654  1CB1  00F5               	movwf	??_setDischarge
 14655  1CB2  0875               	movf	??_setDischarge,w
 14656  1CB3  00EF               	movwf	(_configReg^(0+256)+5)
 14657                           
 14658                           ;ltc6804.c: 206: }
 14659                           ;ltc6804.c: 207: break;
 14660  1CB4  0008               	return
 14661  1CB5                     l7218:	
 14662                           ;ltc6804.c: 208: case 10:
 14663                           
 14664                           
 14665                           ;ltc6804.c: 209: if(boolean){
 14666  1CB5  0874               	movf	setDischarge@boolean,w
 14667  1CB6  1903               	btfsc	3,2
 14668  1CB7  2CBF               	goto	l7222
 14669                           
 14670                           ;ltc6804.c: 210: configReg[0][5]= configReg[0][5] | 0x04;
 14671  1CB8  0022               	movlb	2	; select bank2
 14672  1CB9  086F               	movf	(_configReg^(0+256)+5),w
 14673  1CBA  3804               	iorlw	4
 14674  1CBB  00F5               	movwf	??_setDischarge
 14675  1CBC  0875               	movf	??_setDischarge,w
 14676  1CBD  00EF               	movwf	(_configReg^(0+256)+5)
 14677                           
 14678                           ;ltc6804.c: 211: }else{
 14679  1CBE  0008               	return
 14680  1CBF                     l7222:	
 14681                           
 14682                           ;ltc6804.c: 212: configReg[0][5]= configReg[0][5] & (~0x04);
 14683  1CBF  0022               	movlb	2	; select bank2
 14684  1CC0  086F               	movf	(_configReg^(0+256)+5),w
 14685  1CC1  39FB               	andlw	251
 14686  1CC2  00F5               	movwf	??_setDischarge
 14687  1CC3  0875               	movf	??_setDischarge,w
 14688  1CC4  00EF               	movwf	(_configReg^(0+256)+5)
 14689                           
 14690                           ;ltc6804.c: 213: }
 14691                           ;ltc6804.c: 214: break;
 14692  1CC5  0008               	return
 14693  1CC6                     l7224:	
 14694                           ;ltc6804.c: 215: case 11:
 14695                           
 14696                           
 14697                           ;ltc6804.c: 216: if(boolean){
 14698  1CC6  0874               	movf	setDischarge@boolean,w
 14699  1CC7  1903               	btfsc	3,2
 14700  1CC8  2CD0               	goto	l7228
 14701                           
 14702                           ;ltc6804.c: 217: configReg[0][5]= configReg[0][5] | 0x08;
 14703  1CC9  0022               	movlb	2	; select bank2
 14704  1CCA  086F               	movf	(_configReg^(0+256)+5),w
 14705  1CCB  3808               	iorlw	8
 14706  1CCC  00F5               	movwf	??_setDischarge
 14707  1CCD  0875               	movf	??_setDischarge,w
 14708  1CCE  00EF               	movwf	(_configReg^(0+256)+5)
 14709                           
 14710                           ;ltc6804.c: 218: }else{
 14711  1CCF  0008               	return
 14712  1CD0                     l7228:	
 14713                           
 14714                           ;ltc6804.c: 219: configReg[0][5]= configReg[0][5] & (~0x08);
 14715  1CD0  0022               	movlb	2	; select bank2
 14716  1CD1  086F               	movf	(_configReg^(0+256)+5),w
 14717  1CD2  39F7               	andlw	247
 14718  1CD3  00F5               	movwf	??_setDischarge
 14719  1CD4  0875               	movf	??_setDischarge,w
 14720  1CD5  00EF               	movwf	(_configReg^(0+256)+5)
 14721                           
 14722                           ;ltc6804.c: 224: }
 14723                           
 14724                           ;ltc6804.c: 223: break;
 14725                           
 14726                           ;ltc6804.c: 222: default:
 14727                           
 14728                           ;ltc6804.c: 220: }
 14729                           ;ltc6804.c: 221: break;
 14730  1CD6  0008               	return
 14731  1CD7                     l7232:	
 14732                           
 14733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14734                           ; Switch size 1, requested type "space"
 14735                           ; Number of cases is 1, Range of values is 0 to 0
 14736                           ; switch strategies available:
 14737                           ; Name         Instructions Cycles
 14738                           ; simple_byte            4     3 (average)
 14739                           ; direct_byte            8     6 (fixed)
 14740                           ; jumptable            260     6 (fixed)
 14741                           ;	Chosen strategy is simple_byte
 14742  1CD7  0873               	movf	setDischarge@index+1,w
 14743  1CD8  3A00               	xorlw	0	; case 0
 14744  1CD9  1903               	skipnz
 14745  1CDA  2CDC               	goto	l8930
 14746  1CDB  2CE6               	goto	l626
 14747  1CDC                     l8930:	
 14748                           
 14749                           ; Switch size 1, requested type "space"
 14750                           ; Number of cases is 12, Range of values is 0 to 11
 14751                           ; switch strategies available:
 14752                           ; Name         Instructions Cycles
 14753                           ; direct_byte           30     6 (fixed)
 14754                           ; simple_byte           37    19 (average)
 14755                           ; jumptable            260     6 (fixed)
 14756                           ;	Chosen strategy is direct_byte
 14757  1CDC  0872               	movf	setDischarge@index,w
 14758  1CDD  0084               	movwf	4
 14759  1CDE  300C               	movlw	12
 14760  1CDF  0204               	subwf	4,w
 14761  1CE0  1803               	skipnc
 14762  1CE1  0008               	return
 14763  1CE2  31A8               	movlp	high S8932
 14764  1CE3  3504               	lslf	4,w
 14765  1CE4  3E00               	addlw	low S8932
 14766  1CE5  0082               	movwf	2
 14767  1CE6                     l626:	
 14768  1CE6  0008               	return
 14769  1CE7                     __end_of_setDischarge:	
 14770                           
 14771                           	psect	swtext1
 14772  2800                     __pswtext1:	
 14773  2800                     S8932:	
 14774  2800  319C  2C0B         	ljmp	l7158
 14775  2802  319C  2C1C         	ljmp	l7164
 14776  2804  319C  2C2D         	ljmp	l7170
 14777  2806  319C  2C3E         	ljmp	l7176
 14778  2808  319C  2C4F         	ljmp	l7182
 14779  280A  319C  2C60         	ljmp	l7188
 14780  280C  319C  2C71         	ljmp	l7194
 14781  280E  319C  2C82         	ljmp	l7200
 14782  2810  319C  2C93         	ljmp	l7206
 14783  2812  319C  2CA4         	ljmp	l7212
 14784  2814  319C  2CB5         	ljmp	l7218
 14785  2816  319C  2CC6         	ljmp	l7224
 14786                           
 14787                           	psect	text25
 14788  20B2                     __ptext25:	
 14789 ;; *************** function ___flge *****************
 14790 ;; Defined at:
 14791 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;  ff1             4   33[BANK1 ] void 
 14794 ;;  ff2             4   37[BANK1 ] void 
 14795 ;; Auto vars:     Size  Location     Type
 14796 ;;		None
 14797 ;; Return value:  Size  Location     Type
 14798 ;;		None               void
 14799 ;; Registers used:
 14800 ;;		wreg, status,2, status,0
 14801 ;; Tracked objects:
 14802 ;;		On entry : 0/0
 14803 ;;		On exit  : 0/0
 14804 ;;		Unchanged: 0/0
 14805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14806 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14808 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14809 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14810 ;;Total ram usage:       16 bytes
 14811 ;; Hardware stack levels used:    1
 14812 ;; Hardware stack levels required when called:    2
 14813 ;; This function calls:
 14814 ;;		Nothing
 14815 ;; This function is called by:
 14816 ;;		_main
 14817 ;;		_startUp
 14818 ;;		_writeVoltages
 14819 ;;		_measureVoltages
 14820 ;;		_cellBalancing
 14821 ;;		_sprintf
 14822 ;; This function uses a non-reentrant model
 14823 ;;
 14824                           
 14825                           
 14826                           ;psect for function ___flge
 14827  20B2                     ___flge:	
 14828                           
 14829                           ;incstack = 0
 14830                           ; Regs used in ___flge: [wreg+status,2+status,0]
 14831  20B2  3000               	movlw	0
 14832  20B3  0021               	movlb	1	; select bank1
 14833  20B4  0541               	andwf	___flge@ff1^(0+128),w
 14834  20B5  00C9               	movwf	??___flge^(0+128)
 14835  20B6  3000               	movlw	0
 14836  20B7  0542               	andwf	(___flge@ff1+1)^(0+128),w
 14837  20B8  00CA               	movwf	(??___flge^(0+128)+1)
 14838  20B9  3080               	movlw	128
 14839  20BA  0543               	andwf	(___flge@ff1+2)^(0+128),w
 14840  20BB  00CB               	movwf	(??___flge^(0+128)+2)
 14841  20BC  307F               	movlw	127
 14842  20BD  0544               	andwf	(___flge@ff1+3)^(0+128),w
 14843  20BE  00CC               	movwf	(??___flge^(0+128)+3)
 14844  20BF  084C               	movf	(??___flge+3)^(0+128),w
 14845  20C0  044B               	iorwf	(??___flge+2)^(0+128),w
 14846  20C1  044A               	iorwf	(??___flge+1)^(0+128),w
 14847  20C2  0449               	iorwf	??___flge^(0+128),w
 14848  20C3  1D03               	skipz
 14849  20C4  28CD               	goto	l1175
 14850  20C5  3000               	movlw	0
 14851  20C6  00C4               	movwf	(___flge@ff1+3)^(0+128)
 14852  20C7  3000               	movlw	0
 14853  20C8  00C3               	movwf	(___flge@ff1+2)^(0+128)
 14854  20C9  3000               	movlw	0
 14855  20CA  00C2               	movwf	(___flge@ff1+1)^(0+128)
 14856  20CB  3000               	movlw	0
 14857  20CC  00C1               	movwf	___flge@ff1^(0+128)
 14858  20CD                     l1175:	
 14859  20CD  3000               	movlw	0
 14860  20CE  0545               	andwf	___flge@ff2^(0+128),w
 14861  20CF  00C9               	movwf	??___flge^(0+128)
 14862  20D0  3000               	movlw	0
 14863  20D1  0546               	andwf	(___flge@ff2+1)^(0+128),w
 14864  20D2  00CA               	movwf	(??___flge^(0+128)+1)
 14865  20D3  3080               	movlw	128
 14866  20D4  0547               	andwf	(___flge@ff2+2)^(0+128),w
 14867  20D5  00CB               	movwf	(??___flge^(0+128)+2)
 14868  20D6  307F               	movlw	127
 14869  20D7  0548               	andwf	(___flge@ff2+3)^(0+128),w
 14870  20D8  00CC               	movwf	(??___flge^(0+128)+3)
 14871  20D9  084C               	movf	(??___flge+3)^(0+128),w
 14872  20DA  044B               	iorwf	(??___flge+2)^(0+128),w
 14873  20DB  044A               	iorwf	(??___flge+1)^(0+128),w
 14874  20DC  0449               	iorwf	??___flge^(0+128),w
 14875  20DD  1D03               	skipz
 14876  20DE  28E7               	goto	l7530
 14877  20DF  3000               	movlw	0
 14878  20E0  00C8               	movwf	(___flge@ff2+3)^(0+128)
 14879  20E1  3000               	movlw	0
 14880  20E2  00C7               	movwf	(___flge@ff2+2)^(0+128)
 14881  20E3  3000               	movlw	0
 14882  20E4  00C6               	movwf	(___flge@ff2+1)^(0+128)
 14883  20E5  3000               	movlw	0
 14884  20E6  00C5               	movwf	___flge@ff2^(0+128)
 14885  20E7                     l7530:	
 14886  20E7  1FC4               	btfss	(___flge@ff1+3)^(0+128),7
 14887  20E8  2910               	goto	l7534
 14888  20E9  3000               	movlw	0
 14889  20EA  00C9               	movwf	??___flge^(0+128)
 14890  20EB  3000               	movlw	0
 14891  20EC  00CA               	movwf	(??___flge^(0+128)+1)
 14892  20ED  3000               	movlw	0
 14893  20EE  00CB               	movwf	(??___flge^(0+128)+2)
 14894  20EF  3080               	movlw	128
 14895  20F0  00CC               	movwf	(??___flge^(0+128)+3)
 14896  20F1  0941               	comf	___flge@ff1^(0+128),w
 14897  20F2  00CD               	movwf	(??___flge+4)^(0+128)
 14898  20F3  0942               	comf	(___flge@ff1+1)^(0+128),w
 14899  20F4  00CE               	movwf	((??___flge+4)^(0+128)+1)
 14900  20F5  0943               	comf	(___flge@ff1+2)^(0+128),w
 14901  20F6  00CF               	movwf	((??___flge+4)^(0+128)+2)
 14902  20F7  0944               	comf	(___flge@ff1+3)^(0+128),w
 14903  20F8  00D0               	movwf	((??___flge+4)^(0+128)+3)
 14904  20F9  0ACD               	incf	(??___flge+4)^(0+128),f
 14905  20FA  1903               	skipnz
 14906  20FB  0ACE               	incf	((??___flge+4)^(0+128)+1),f
 14907  20FC  1903               	skipnz
 14908  20FD  0ACF               	incf	((??___flge+4)^(0+128)+2),f
 14909  20FE  1903               	skipnz
 14910  20FF  0AD0               	incf	((??___flge+4)^(0+128)+3),f
 14911  2100  084D               	movf	(??___flge+4)^(0+128),w
 14912  2101  07C9               	addwf	??___flge^(0+128),f
 14913  2102  084E               	movf	(??___flge+5)^(0+128),w
 14914  2103  3DCA               	addwfc	(??___flge^(0+128)+1),f
 14915  2104  084F               	movf	(??___flge+6)^(0+128),w
 14916  2105  3DCB               	addwfc	(??___flge^(0+128)+2),f
 14917  2106  0850               	movf	(??___flge+7)^(0+128),w
 14918  2107  3DCC               	addwfc	(??___flge^(0+128)+3),f
 14919  2108  084C               	movf	(??___flge+3)^(0+128),w
 14920  2109  00C4               	movwf	(___flge@ff1+3)^(0+128)
 14921  210A  084B               	movf	(??___flge+2)^(0+128),w
 14922  210B  00C3               	movwf	(___flge@ff1+2)^(0+128)
 14923  210C  084A               	movf	(??___flge+1)^(0+128),w
 14924  210D  00C2               	movwf	(___flge@ff1+1)^(0+128)
 14925  210E  0849               	movf	??___flge^(0+128),w
 14926  210F  00C1               	movwf	___flge@ff1^(0+128)
 14927  2110                     l7534:	
 14928  2110  1FC8               	btfss	(___flge@ff2+3)^(0+128),7
 14929  2111  2939               	goto	l7538
 14930  2112  3000               	movlw	0
 14931  2113  00C9               	movwf	??___flge^(0+128)
 14932  2114  3000               	movlw	0
 14933  2115  00CA               	movwf	(??___flge^(0+128)+1)
 14934  2116  3000               	movlw	0
 14935  2117  00CB               	movwf	(??___flge^(0+128)+2)
 14936  2118  3080               	movlw	128
 14937  2119  00CC               	movwf	(??___flge^(0+128)+3)
 14938  211A  0945               	comf	___flge@ff2^(0+128),w
 14939  211B  00CD               	movwf	(??___flge+4)^(0+128)
 14940  211C  0946               	comf	(___flge@ff2+1)^(0+128),w
 14941  211D  00CE               	movwf	((??___flge+4)^(0+128)+1)
 14942  211E  0947               	comf	(___flge@ff2+2)^(0+128),w
 14943  211F  00CF               	movwf	((??___flge+4)^(0+128)+2)
 14944  2120  0948               	comf	(___flge@ff2+3)^(0+128),w
 14945  2121  00D0               	movwf	((??___flge+4)^(0+128)+3)
 14946  2122  0ACD               	incf	(??___flge+4)^(0+128),f
 14947  2123  1903               	skipnz
 14948  2124  0ACE               	incf	((??___flge+4)^(0+128)+1),f
 14949  2125  1903               	skipnz
 14950  2126  0ACF               	incf	((??___flge+4)^(0+128)+2),f
 14951  2127  1903               	skipnz
 14952  2128  0AD0               	incf	((??___flge+4)^(0+128)+3),f
 14953  2129  084D               	movf	(??___flge+4)^(0+128),w
 14954  212A  07C9               	addwf	??___flge^(0+128),f
 14955  212B  084E               	movf	(??___flge+5)^(0+128),w
 14956  212C  3DCA               	addwfc	(??___flge^(0+128)+1),f
 14957  212D  084F               	movf	(??___flge+6)^(0+128),w
 14958  212E  3DCB               	addwfc	(??___flge^(0+128)+2),f
 14959  212F  0850               	movf	(??___flge+7)^(0+128),w
 14960  2130  3DCC               	addwfc	(??___flge^(0+128)+3),f
 14961  2131  084C               	movf	(??___flge+3)^(0+128),w
 14962  2132  00C8               	movwf	(___flge@ff2+3)^(0+128)
 14963  2133  084B               	movf	(??___flge+2)^(0+128),w
 14964  2134  00C7               	movwf	(___flge@ff2+2)^(0+128)
 14965  2135  084A               	movf	(??___flge+1)^(0+128),w
 14966  2136  00C6               	movwf	(___flge@ff2+1)^(0+128)
 14967  2137  0849               	movf	??___flge^(0+128),w
 14968  2138  00C5               	movwf	___flge@ff2^(0+128)
 14969  2139                     l7538:	
 14970  2139  3080               	movlw	128
 14971  213A  06C4               	xorwf	(___flge@ff1+3)^(0+128),f
 14972  213B  3080               	movlw	128
 14973  213C  06C8               	xorwf	(___flge@ff2+3)^(0+128),f
 14974  213D  0848               	movf	(___flge@ff2+3)^(0+128),w
 14975  213E  0244               	subwf	(___flge@ff1+3)^(0+128),w
 14976  213F  1D03               	skipz
 14977  2140  0008               	return
 14978  2141  0847               	movf	(___flge@ff2+2)^(0+128),w
 14979  2142  0243               	subwf	(___flge@ff1+2)^(0+128),w
 14980  2143  1D03               	skipz
 14981  2144  0008               	return
 14982  2145  0846               	movf	(___flge@ff2+1)^(0+128),w
 14983  2146  0242               	subwf	(___flge@ff1+1)^(0+128),w
 14984  2147  1D03               	skipz
 14985  2148  0008               	return
 14986  2149  0845               	movf	___flge@ff2^(0+128),w
 14987  214A  0241               	subwf	___flge@ff1^(0+128),w
 14988  214B  0008               	return
 14989  214C                     __end_of___flge:	
 14990                           
 14991                           	psect	text26
 14992  1CE7                     __ptext26:	
 14993 ;; *************** function _LTC6804_rdcv *****************
 14994 ;; Defined at:
 14995 ;;		line 483 in file "ltc6804.c"
 14996 ;; Parameters:    Size  Location     Type
 14997 ;;  reg             1    wreg     unsigned char 
 14998 ;;  total_ic        1   28[BANK0 ] unsigned char 
 14999 ;;  cell_codes      1   29[BANK0 ] PTR unsigned int [12]
 15000 ;;		 -> measureVoltages@ltcData(24), 
 15001 ;; Auto vars:     Size  Location     Type
 15002 ;;  reg             1   50[BANK0 ] unsigned char 
 15003 ;;  current_cell    1   52[BANK0 ] unsigned char 
 15004 ;;  current_cell    1   54[BANK0 ] unsigned char 
 15005 ;;  current_ic      1   51[BANK0 ] unsigned char 
 15006 ;;  current_ic      1   53[BANK0 ] unsigned char 
 15007 ;;  cell_reg        1   55[BANK0 ] unsigned char 
 15008 ;;  cell_data       8   35[BANK0 ] unsigned char [8]
 15009 ;;  data_pec        2   48[BANK0 ] int 
 15010 ;;  received_pec    2   46[BANK0 ] int 
 15011 ;;  parsed_cell     2   44[BANK0 ] int 
 15012 ;;  data_counter    1   56[BANK0 ] unsigned char 
 15013 ;;  pec_error       1   43[BANK0 ] unsigned char 
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      unsigned char 
 15016 ;; Registers used:
 15017 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15023 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15024 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15025 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15026 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15027 ;;Total ram usage:       29 bytes
 15028 ;; Hardware stack levels used:    1
 15029 ;; Hardware stack levels required when called:    5
 15030 ;; This function calls:
 15031 ;;		_LTC6804_rdcv_reg
 15032 ;;		___bmul
 15033 ;;		___wmul
 15034 ;;		_pec15_calc
 15035 ;; This function is called by:
 15036 ;;		_measureVoltages
 15037 ;; This function uses a non-reentrant model
 15038 ;;
 15039                           
 15040                           
 15041                           ;psect for function _LTC6804_rdcv
 15042  1CE7                     _LTC6804_rdcv:	
 15043                           
 15044                           ;incstack = 0
 15045                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15046                           ;LTC6804_rdcv@reg stored from wreg
 15047  1CE7  0020               	movlb	0	; select bank0
 15048  1CE8  00D2               	movwf	LTC6804_rdcv@reg
 15049                           
 15050                           ;ltc6804.c: 489: const char NUM_RX_BYT = 8;
 15051                           ;ltc6804.c: 490: const char BYT_IN_REG = 6;
 15052                           ;ltc6804.c: 491: const char CELL_IN_REG = 3;
 15053                           ;ltc6804.c: 493: char cell_data[8];
 15054                           ;ltc6804.c: 494: char pec_error = 0;
 15055  1CE9  01CB               	clrf	LTC6804_rdcv@pec_error
 15056                           
 15057                           ;ltc6804.c: 495: int parsed_cell;
 15058                           ;ltc6804.c: 496: int received_pec;
 15059                           ;ltc6804.c: 497: int data_pec;
 15060                           ;ltc6804.c: 498: char data_counter=0;
 15061  1CEA  01D8               	clrf	LTC6804_rdcv@data_counter
 15062                           
 15063                           ;ltc6804.c: 501: if (reg == 0)
 15064  1CEB  0852               	movf	LTC6804_rdcv@reg,w
 15065  1CEC  1D03               	btfss	3,2
 15066  1CED  2DB5               	goto	l8290
 15067                           
 15068                           ;ltc6804.c: 502: {
 15069                           ;ltc6804.c: 504: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 15070  1CEE  01D7               	clrf	LTC6804_rdcv@cell_reg
 15071  1CEF  0AD7               	incf	LTC6804_rdcv@cell_reg,f
 15072  1CF0                     L11:	
 15073  1CF0  3005               	movlw	5
 15074  1CF1  0257               	subwf	LTC6804_rdcv@cell_reg,w
 15075  1CF2  1803               	btfsc	3,0
 15076  1CF3  2E70               	goto	l8322
 15077                           
 15078                           ;ltc6804.c: 505: {
 15079                           ;ltc6804.c: 506: data_counter = 0;
 15080  1CF4  01D8               	clrf	LTC6804_rdcv@data_counter
 15081                           
 15082                           ;ltc6804.c: 507: LTC6804_rdcv_reg(cell_reg, total_ic, cell_data);
 15083  1CF5  083C               	movf	LTC6804_rdcv@total_ic,w
 15084  1CF6  00BE               	movwf	??_LTC6804_rdcv
 15085  1CF7  083E               	movf	??_LTC6804_rdcv,w
 15086  1CF8  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 15087  1CF9  3043               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15088  1CFA  00BF               	movwf	??_LTC6804_rdcv+1
 15089  1CFB  083F               	movf	??_LTC6804_rdcv+1,w
 15090  1CFC  00B0               	movwf	LTC6804_rdcv_reg@data
 15091  1CFD  0857               	movf	LTC6804_rdcv@cell_reg,w
 15092  1CFE  31AC  24A6  319C   	fcall	_LTC6804_rdcv_reg
 15093                           
 15094                           ;ltc6804.c: 509: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 15095  1D01  0020               	movlb	0	; select bank0
 15096  1D02  01D3               	clrf	LTC6804_rdcv@current_ic
 15097  1D03                     l662:	
 15098  1D03  083C               	movf	LTC6804_rdcv@total_ic,w
 15099  1D04  0253               	subwf	LTC6804_rdcv@current_ic,w
 15100  1D05  1803               	btfsc	3,0
 15101  1D06  2DB0               	goto	l8286
 15102                           
 15103                           ;ltc6804.c: 510: {
 15104                           ;ltc6804.c: 513: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 15105  1D07  01D4               	clrf	LTC6804_rdcv@current_cell
 15106  1D08  300F               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15107  1D09  0084               	movwf	4
 15108  1D0A  30B8               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15109  1D0B  0085               	movwf	5
 15110  1D0C  0800               	movf	0,w	;code access
 15111  1D0D  0254               	subwf	LTC6804_rdcv@current_cell,w
 15112  1D0E  1803               	btfsc	3,0
 15113  1D0F  2D65               	goto	l8274
 15114  1D10                     l8264:	
 15115                           
 15116                           ;ltc6804.c: 514: {
 15117                           ;ltc6804.c: 516: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 15118  1D10  0858               	movf	LTC6804_rdcv@data_counter,w
 15119  1D11  3E01               	addlw	1
 15120  1D12  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15121  1D13  0086               	movwf	6
 15122  1D14  0187               	clrf	7
 15123  1D15  0801               	movf	1,w
 15124  1D16  00BE               	movwf	??_LTC6804_rdcv
 15125  1D17  01BF               	clrf	??_LTC6804_rdcv+1
 15126  1D18  083E               	movf	??_LTC6804_rdcv,w
 15127  1D19  00BF               	movwf	??_LTC6804_rdcv+1
 15128  1D1A  01BE               	clrf	??_LTC6804_rdcv
 15129  1D1B  0858               	movf	LTC6804_rdcv@data_counter,w
 15130  1D1C  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15131  1D1D  0086               	movwf	6
 15132  1D1E  0187               	clrf	7
 15133  1D1F  0801               	movf	1,w
 15134  1D20  073E               	addwf	??_LTC6804_rdcv,w
 15135  1D21  00CC               	movwf	LTC6804_rdcv@parsed_cell
 15136  1D22  083F               	movf	??_LTC6804_rdcv+1,w
 15137  1D23  1803               	skipnc
 15138  1D24  0A3F               	incf	??_LTC6804_rdcv+1,w
 15139  1D25  00CD               	movwf	LTC6804_rdcv@parsed_cell+1
 15140                           
 15141                           ;ltc6804.c: 519: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 15142  1D26  3018               	movlw	24
 15143  1D27  00BE               	movwf	??_LTC6804_rdcv
 15144  1D28  083E               	movf	??_LTC6804_rdcv,w
 15145  1D29  00F2               	movwf	___bmul@multiplicand
 15146  1D2A  0853               	movf	LTC6804_rdcv@current_ic,w
 15147  1D2B  31A8  2071  319C   	fcall	___bmul
 15148  1D2E  0020               	movlb	0	; select bank0
 15149  1D2F  073D               	addwf	LTC6804_rdcv@cell_codes,w
 15150  1D30  00BF               	movwf	??_LTC6804_rdcv+1
 15151  1D31  0857               	movf	LTC6804_rdcv@cell_reg,w
 15152  1D32  3EFF               	addlw	255
 15153  1D33  00F2               	movwf	___wmul@multiplier
 15154  1D34  30FF               	movlw	255
 15155  1D35  1803               	skipnc
 15156  1D36  3000               	movlw	0
 15157  1D37  00F3               	movwf	___wmul@multiplier+1
 15158  1D38  300F               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15159  1D39  0084               	movwf	4
 15160  1D3A  30B8               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15161  1D3B  0085               	movwf	5
 15162  1D3C  0800               	movf	0,w	;code access
 15163  1D3D  00C0               	movwf	??_LTC6804_rdcv+2
 15164  1D3E  01C1               	clrf	??_LTC6804_rdcv+3
 15165  1D3F  0840               	movf	??_LTC6804_rdcv+2,w
 15166  1D40  00F4               	movwf	___wmul@multiplicand
 15167  1D41  0841               	movf	??_LTC6804_rdcv+3,w
 15168  1D42  00F5               	movwf	___wmul@multiplicand+1
 15169  1D43  31A8  20CB  319C   	fcall	___wmul
 15170  1D46  0872               	movf	?___wmul,w
 15171  1D47  0020               	movlb	0	; select bank0
 15172  1D48  0754               	addwf	LTC6804_rdcv@current_cell,w
 15173  1D49  0709               	addwf	9,w
 15174  1D4A  073F               	addwf	??_LTC6804_rdcv+1,w
 15175  1D4B  00C2               	movwf	??_LTC6804_rdcv+4
 15176  1D4C  0842               	movf	??_LTC6804_rdcv+4,w
 15177  1D4D  0086               	movwf	6
 15178  1D4E  3001               	movlw	1	; select bank2/3
 15179  1D4F  0087               	movwf	7
 15180  1D50  084C               	movf	LTC6804_rdcv@parsed_cell,w
 15181  1D51  3FC0               	movwi [0]fsr1
 15182  1D52  084D               	movf	LTC6804_rdcv@parsed_cell+1,w
 15183  1D53  3FC1               	movwi [1]fsr1
 15184                           
 15185                           ;ltc6804.c: 520: data_counter = data_counter + 2;
 15186  1D54  0858               	movf	LTC6804_rdcv@data_counter,w
 15187  1D55  3E02               	addlw	2
 15188  1D56  00BE               	movwf	??_LTC6804_rdcv
 15189  1D57  083E               	movf	??_LTC6804_rdcv,w
 15190  1D58  00D8               	movwf	LTC6804_rdcv@data_counter
 15191  1D59  3001               	movlw	1
 15192  1D5A  00BE               	movwf	??_LTC6804_rdcv
 15193  1D5B  083E               	movf	??_LTC6804_rdcv,w
 15194  1D5C  07D4               	addwf	LTC6804_rdcv@current_cell,f
 15195  1D5D  300F               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15196  1D5E  0084               	movwf	4
 15197  1D5F  30B8               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15198  1D60  0085               	movwf	5
 15199  1D61  0800               	movf	0,w	;code access
 15200  1D62  0254               	subwf	LTC6804_rdcv@current_cell,w
 15201  1D63  1C03               	skipc
 15202  1D64  2D10               	goto	l8264
 15203  1D65                     l8274:	
 15204                           
 15205                           ;ltc6804.c: 522: }
 15206                           ;ltc6804.c: 524: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 15207  1D65  0858               	movf	LTC6804_rdcv@data_counter,w
 15208  1D66  3E01               	addlw	1
 15209  1D67  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15210  1D68  0086               	movwf	6
 15211  1D69  0187               	clrf	7
 15212  1D6A  0801               	movf	1,w
 15213  1D6B  00BE               	movwf	??_LTC6804_rdcv
 15214  1D6C  01BF               	clrf	??_LTC6804_rdcv+1
 15215  1D6D  0858               	movf	LTC6804_rdcv@data_counter,w
 15216  1D6E  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15217  1D6F  0086               	movwf	6
 15218  1D70  0187               	clrf	7
 15219  1D71  0801               	movf	1,w
 15220  1D72  00C0               	movwf	??_LTC6804_rdcv+2
 15221  1D73  01C1               	clrf	??_LTC6804_rdcv+3
 15222  1D74  0840               	movf	??_LTC6804_rdcv+2,w
 15223  1D75  00C1               	movwf	??_LTC6804_rdcv+3
 15224  1D76  01C0               	clrf	??_LTC6804_rdcv+2
 15225  1D77  083E               	movf	??_LTC6804_rdcv,w
 15226  1D78  0740               	addwf	??_LTC6804_rdcv+2,w
 15227  1D79  00CE               	movwf	LTC6804_rdcv@received_pec
 15228  1D7A  083F               	movf	??_LTC6804_rdcv+1,w
 15229  1D7B  3D41               	addwfc	??_LTC6804_rdcv+3,w
 15230  1D7C  00CF               	movwf	LTC6804_rdcv@received_pec+1
 15231                           
 15232                           ;ltc6804.c: 526: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 15233  1D7D  3011               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15234  1D7E  0084               	movwf	4
 15235  1D7F  30B8               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15236  1D80  0085               	movwf	5
 15237  1D81  0800               	movf	0,w	;code access
 15238  1D82  00BE               	movwf	??_LTC6804_rdcv
 15239  1D83  083E               	movf	??_LTC6804_rdcv,w
 15240  1D84  00F2               	movwf	___bmul@multiplicand
 15241  1D85  0853               	movf	LTC6804_rdcv@current_ic,w
 15242  1D86  31A8  2071  319C   	fcall	___bmul
 15243  1D89  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15244  1D8A  00F6               	movwf	pec15_calc@data
 15245  1D8B  3000               	movlw	0
 15246  1D8C  00F7               	movwf	pec15_calc@data+1
 15247  1D8D  3010               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15248  1D8E  0084               	movwf	4
 15249  1D8F  30B8               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15250  1D90  0085               	movwf	5
 15251  1D91  0800               	movf	0,w	;code access
 15252  1D92  31AB  230C  319C   	fcall	_pec15_calc
 15253  1D95  0877               	movf	?_pec15_calc+1,w
 15254  1D96  0020               	movlb	0	; select bank0
 15255  1D97  00D1               	movwf	LTC6804_rdcv@data_pec+1
 15256  1D98  0876               	movf	?_pec15_calc,w
 15257  1D99  00D0               	movwf	LTC6804_rdcv@data_pec
 15258                           
 15259                           ;ltc6804.c: 527: if(received_pec != data_pec)
 15260  1D9A  0851               	movf	LTC6804_rdcv@data_pec+1,w
 15261  1D9B  064F               	xorwf	LTC6804_rdcv@received_pec+1,w
 15262  1D9C  1D03               	skipz
 15263  1D9D  2DA0               	goto	u11455
 15264  1D9E  0850               	movf	LTC6804_rdcv@data_pec,w
 15265  1D9F  064E               	xorwf	LTC6804_rdcv@received_pec,w
 15266  1DA0                     u11455:	
 15267  1DA0  1903               	skipnz
 15268  1DA1  2DA6               	goto	l8282
 15269                           
 15270                           ;ltc6804.c: 528: {
 15271                           ;ltc6804.c: 529: pec_error = -1;
 15272  1DA2  30FF               	movlw	255
 15273  1DA3  00BE               	movwf	??_LTC6804_rdcv
 15274  1DA4  083E               	movf	??_LTC6804_rdcv,w
 15275  1DA5  00CB               	movwf	LTC6804_rdcv@pec_error
 15276  1DA6                     l8282:	
 15277                           
 15278                           ;ltc6804.c: 531: }
 15279                           ;ltc6804.c: 532: data_counter=data_counter+2;
 15280  1DA6  0858               	movf	LTC6804_rdcv@data_counter,w
 15281  1DA7  3E02               	addlw	2
 15282  1DA8  00BE               	movwf	??_LTC6804_rdcv
 15283  1DA9  083E               	movf	??_LTC6804_rdcv,w
 15284  1DAA  00D8               	movwf	LTC6804_rdcv@data_counter
 15285  1DAB  3001               	movlw	1
 15286  1DAC  00BE               	movwf	??_LTC6804_rdcv
 15287  1DAD  083E               	movf	??_LTC6804_rdcv,w
 15288  1DAE  07D3               	addwf	LTC6804_rdcv@current_ic,f
 15289  1DAF  2D03               	goto	l662
 15290  1DB0                     l8286:	
 15291  1DB0  3001               	movlw	1
 15292  1DB1  00BE               	movwf	??_LTC6804_rdcv
 15293  1DB2  083E               	movf	??_LTC6804_rdcv,w
 15294  1DB3  07D7               	addwf	LTC6804_rdcv@cell_reg,f
 15295  1DB4  2CF0               	goto	L11
 15296  1DB5                     l8290:	
 15297                           ;ltc6804.c: 534: }
 15298                           ;ltc6804.c: 535: }
 15299                           ;ltc6804.c: 536: }
 15300                           
 15301                           
 15302                           ;ltc6804.c: 538: else
 15303                           ;ltc6804.c: 539: {
 15304                           ;ltc6804.c: 541: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 15305  1DB5  083C               	movf	LTC6804_rdcv@total_ic,w
 15306  1DB6  00BE               	movwf	??_LTC6804_rdcv
 15307  1DB7  083E               	movf	??_LTC6804_rdcv,w
 15308  1DB8  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 15309  1DB9  3043               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15310  1DBA  00BF               	movwf	??_LTC6804_rdcv+1
 15311  1DBB  083F               	movf	??_LTC6804_rdcv+1,w
 15312  1DBC  00B0               	movwf	LTC6804_rdcv_reg@data
 15313  1DBD  0852               	movf	LTC6804_rdcv@reg,w
 15314  1DBE  31AC  24A6  319C   	fcall	_LTC6804_rdcv_reg
 15315                           
 15316                           ;ltc6804.c: 542: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 15317  1DC1  0020               	movlb	0	; select bank0
 15318  1DC2  01D5               	clrf	LTC6804_rdcv@current_ic_1360
 15319  1DC3                     l669:	
 15320  1DC3  083C               	movf	LTC6804_rdcv@total_ic,w
 15321  1DC4  0255               	subwf	LTC6804_rdcv@current_ic_1360,w
 15322  1DC5  1803               	btfsc	3,0
 15323  1DC6  2E70               	goto	l8322
 15324                           
 15325                           ;ltc6804.c: 543: {
 15326                           ;ltc6804.c: 545: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 15327  1DC7  01D6               	clrf	LTC6804_rdcv@current_cell_1361
 15328  1DC8  300F               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15329  1DC9  0084               	movwf	4
 15330  1DCA  30B8               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15331  1DCB  0085               	movwf	5
 15332  1DCC  0800               	movf	0,w	;code access
 15333  1DCD  0256               	subwf	LTC6804_rdcv@current_cell_1361,w
 15334  1DCE  1803               	btfsc	3,0
 15335  1DCF  2E25               	goto	l8310
 15336  1DD0                     l8300:	
 15337                           
 15338                           ;ltc6804.c: 546: {
 15339                           ;ltc6804.c: 548: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 15340  1DD0  0858               	movf	LTC6804_rdcv@data_counter,w
 15341  1DD1  3E01               	addlw	1
 15342  1DD2  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15343  1DD3  0086               	movwf	6
 15344  1DD4  0187               	clrf	7
 15345  1DD5  0801               	movf	1,w
 15346  1DD6  00BE               	movwf	??_LTC6804_rdcv
 15347  1DD7  01BF               	clrf	??_LTC6804_rdcv+1
 15348  1DD8  083E               	movf	??_LTC6804_rdcv,w
 15349  1DD9  00BF               	movwf	??_LTC6804_rdcv+1
 15350  1DDA  01BE               	clrf	??_LTC6804_rdcv
 15351  1DDB  0858               	movf	LTC6804_rdcv@data_counter,w
 15352  1DDC  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15353  1DDD  0086               	movwf	6
 15354  1DDE  0187               	clrf	7
 15355  1DDF  0801               	movf	1,w
 15356  1DE0  073E               	addwf	??_LTC6804_rdcv,w
 15357  1DE1  00CC               	movwf	LTC6804_rdcv@parsed_cell
 15358  1DE2  083F               	movf	??_LTC6804_rdcv+1,w
 15359  1DE3  1803               	skipnc
 15360  1DE4  0A3F               	incf	??_LTC6804_rdcv+1,w
 15361  1DE5  00CD               	movwf	LTC6804_rdcv@parsed_cell+1
 15362                           
 15363                           ;ltc6804.c: 551: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 15364  1DE6  3018               	movlw	24
 15365  1DE7  00BE               	movwf	??_LTC6804_rdcv
 15366  1DE8  083E               	movf	??_LTC6804_rdcv,w
 15367  1DE9  00F2               	movwf	___bmul@multiplicand
 15368  1DEA  0855               	movf	LTC6804_rdcv@current_ic_1360,w
 15369  1DEB  31A8  2071  319C   	fcall	___bmul
 15370  1DEE  0020               	movlb	0	; select bank0
 15371  1DEF  073D               	addwf	LTC6804_rdcv@cell_codes,w
 15372  1DF0  00BF               	movwf	??_LTC6804_rdcv+1
 15373  1DF1  0852               	movf	LTC6804_rdcv@reg,w
 15374  1DF2  3EFF               	addlw	255
 15375  1DF3  00F2               	movwf	___wmul@multiplier
 15376  1DF4  30FF               	movlw	255
 15377  1DF5  1803               	skipnc
 15378  1DF6  3000               	movlw	0
 15379  1DF7  00F3               	movwf	___wmul@multiplier+1
 15380  1DF8  300F               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15381  1DF9  0084               	movwf	4
 15382  1DFA  30B8               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15383  1DFB  0085               	movwf	5
 15384  1DFC  0800               	movf	0,w	;code access
 15385  1DFD  00C0               	movwf	??_LTC6804_rdcv+2
 15386  1DFE  01C1               	clrf	??_LTC6804_rdcv+3
 15387  1DFF  0840               	movf	??_LTC6804_rdcv+2,w
 15388  1E00  00F4               	movwf	___wmul@multiplicand
 15389  1E01  0841               	movf	??_LTC6804_rdcv+3,w
 15390  1E02  00F5               	movwf	___wmul@multiplicand+1
 15391  1E03  31A8  20CB  319C   	fcall	___wmul
 15392  1E06  0872               	movf	?___wmul,w
 15393  1E07  0020               	movlb	0	; select bank0
 15394  1E08  0756               	addwf	LTC6804_rdcv@current_cell_1361,w
 15395  1E09  0709               	addwf	9,w
 15396  1E0A  073F               	addwf	??_LTC6804_rdcv+1,w
 15397  1E0B  00C2               	movwf	??_LTC6804_rdcv+4
 15398  1E0C  0842               	movf	??_LTC6804_rdcv+4,w
 15399  1E0D  0086               	movwf	6
 15400  1E0E  3001               	movlw	1	; select bank2/3
 15401  1E0F  0087               	movwf	7
 15402  1E10  084C               	movf	LTC6804_rdcv@parsed_cell,w
 15403  1E11  3FC0               	movwi [0]fsr1
 15404  1E12  084D               	movf	LTC6804_rdcv@parsed_cell+1,w
 15405  1E13  3FC1               	movwi [1]fsr1
 15406                           
 15407                           ;ltc6804.c: 552: data_counter= data_counter + 2;
 15408  1E14  0858               	movf	LTC6804_rdcv@data_counter,w
 15409  1E15  3E02               	addlw	2
 15410  1E16  00BE               	movwf	??_LTC6804_rdcv
 15411  1E17  083E               	movf	??_LTC6804_rdcv,w
 15412  1E18  00D8               	movwf	LTC6804_rdcv@data_counter
 15413  1E19  3001               	movlw	1
 15414  1E1A  00BE               	movwf	??_LTC6804_rdcv
 15415  1E1B  083E               	movf	??_LTC6804_rdcv,w
 15416  1E1C  07D6               	addwf	LTC6804_rdcv@current_cell_1361,f
 15417  1E1D  300F               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15418  1E1E  0084               	movwf	4
 15419  1E1F  30B8               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15420  1E20  0085               	movwf	5
 15421  1E21  0800               	movf	0,w	;code access
 15422  1E22  0256               	subwf	LTC6804_rdcv@current_cell_1361,w
 15423  1E23  1C03               	skipc
 15424  1E24  2DD0               	goto	l8300
 15425  1E25                     l8310:	
 15426                           
 15427                           ;ltc6804.c: 554: }
 15428                           ;ltc6804.c: 556: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 15429  1E25  0858               	movf	LTC6804_rdcv@data_counter,w
 15430  1E26  3E01               	addlw	1
 15431  1E27  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15432  1E28  0086               	movwf	6
 15433  1E29  0187               	clrf	7
 15434  1E2A  0801               	movf	1,w
 15435  1E2B  00BE               	movwf	??_LTC6804_rdcv
 15436  1E2C  01BF               	clrf	??_LTC6804_rdcv+1
 15437  1E2D  0858               	movf	LTC6804_rdcv@data_counter,w
 15438  1E2E  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15439  1E2F  0086               	movwf	6
 15440  1E30  0187               	clrf	7
 15441  1E31  0801               	movf	1,w
 15442  1E32  00C0               	movwf	??_LTC6804_rdcv+2
 15443  1E33  01C1               	clrf	??_LTC6804_rdcv+3
 15444  1E34  0840               	movf	??_LTC6804_rdcv+2,w
 15445  1E35  00C1               	movwf	??_LTC6804_rdcv+3
 15446  1E36  01C0               	clrf	??_LTC6804_rdcv+2
 15447  1E37  083E               	movf	??_LTC6804_rdcv,w
 15448  1E38  0740               	addwf	??_LTC6804_rdcv+2,w
 15449  1E39  00CE               	movwf	LTC6804_rdcv@received_pec
 15450  1E3A  083F               	movf	??_LTC6804_rdcv+1,w
 15451  1E3B  3D41               	addwfc	??_LTC6804_rdcv+3,w
 15452  1E3C  00CF               	movwf	LTC6804_rdcv@received_pec+1
 15453                           
 15454                           ;ltc6804.c: 558: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 15455  1E3D  3011               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15456  1E3E  0084               	movwf	4
 15457  1E3F  30B8               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15458  1E40  0085               	movwf	5
 15459  1E41  0800               	movf	0,w	;code access
 15460  1E42  00BE               	movwf	??_LTC6804_rdcv
 15461  1E43  083E               	movf	??_LTC6804_rdcv,w
 15462  1E44  00F2               	movwf	___bmul@multiplicand
 15463  1E45  0855               	movf	LTC6804_rdcv@current_ic_1360,w
 15464  1E46  31A8  2071  319C   	fcall	___bmul
 15465  1E49  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15466  1E4A  00F6               	movwf	pec15_calc@data
 15467  1E4B  3000               	movlw	0
 15468  1E4C  00F7               	movwf	pec15_calc@data+1
 15469  1E4D  3010               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15470  1E4E  0084               	movwf	4
 15471  1E4F  30B8               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15472  1E50  0085               	movwf	5
 15473  1E51  0800               	movf	0,w	;code access
 15474  1E52  31AB  230C  319C   	fcall	_pec15_calc
 15475  1E55  0877               	movf	?_pec15_calc+1,w
 15476  1E56  0020               	movlb	0	; select bank0
 15477  1E57  00D1               	movwf	LTC6804_rdcv@data_pec+1
 15478  1E58  0876               	movf	?_pec15_calc,w
 15479  1E59  00D0               	movwf	LTC6804_rdcv@data_pec
 15480                           
 15481                           ;ltc6804.c: 559: if(received_pec != data_pec)
 15482  1E5A  0851               	movf	LTC6804_rdcv@data_pec+1,w
 15483  1E5B  064F               	xorwf	LTC6804_rdcv@received_pec+1,w
 15484  1E5C  1D03               	skipz
 15485  1E5D  2E60               	goto	u11505
 15486  1E5E  0850               	movf	LTC6804_rdcv@data_pec,w
 15487  1E5F  064E               	xorwf	LTC6804_rdcv@received_pec,w
 15488  1E60                     u11505:	
 15489  1E60  1903               	skipnz
 15490  1E61  2E66               	goto	l8318
 15491                           
 15492                           ;ltc6804.c: 560: {
 15493                           ;ltc6804.c: 561: pec_error = -1;
 15494  1E62  30FF               	movlw	255
 15495  1E63  00BE               	movwf	??_LTC6804_rdcv
 15496  1E64  083E               	movf	??_LTC6804_rdcv,w
 15497  1E65  00CB               	movwf	LTC6804_rdcv@pec_error
 15498  1E66                     l8318:	
 15499                           
 15500                           ;ltc6804.c: 563: }
 15501                           ;ltc6804.c: 564: data_counter= data_counter + 2;
 15502  1E66  0858               	movf	LTC6804_rdcv@data_counter,w
 15503  1E67  3E02               	addlw	2
 15504  1E68  00BE               	movwf	??_LTC6804_rdcv
 15505  1E69  083E               	movf	??_LTC6804_rdcv,w
 15506  1E6A  00D8               	movwf	LTC6804_rdcv@data_counter
 15507  1E6B  3001               	movlw	1
 15508  1E6C  00BE               	movwf	??_LTC6804_rdcv
 15509  1E6D  083E               	movf	??_LTC6804_rdcv,w
 15510  1E6E  07D5               	addwf	LTC6804_rdcv@current_ic_1360,f
 15511  1E6F  2DC3               	goto	l669
 15512  1E70                     l8322:	
 15513                           
 15514                           ;ltc6804.c: 566: }
 15515                           ;ltc6804.c: 567: }
 15516                           ;ltc6804.c: 571: return(pec_error);
 15517  1E70  084B               	movf	LTC6804_rdcv@pec_error,w
 15518  1E71  0008               	return
 15519  1E72                     __end_of_LTC6804_rdcv:	
 15520                           
 15521                           	psect	text27
 15522  28CB                     __ptext27:	
 15523 ;; *************** function ___wmul *****************
 15524 ;; Defined at:
 15525 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 15526 ;; Parameters:    Size  Location     Type
 15527 ;;  multiplier      2    2[COMMON] unsigned int 
 15528 ;;  multiplicand    2    4[COMMON] unsigned int 
 15529 ;; Auto vars:     Size  Location     Type
 15530 ;;  product         2    6[COMMON] unsigned int 
 15531 ;; Return value:  Size  Location     Type
 15532 ;;                  2    2[COMMON] unsigned int 
 15533 ;; Registers used:
 15534 ;;		wreg, status,2, status,0
 15535 ;; Tracked objects:
 15536 ;;		On entry : 0/0
 15537 ;;		On exit  : 0/0
 15538 ;;		Unchanged: 0/0
 15539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15544 ;;Total ram usage:        6 bytes
 15545 ;; Hardware stack levels used:    1
 15546 ;; Hardware stack levels required when called:    2
 15547 ;; This function calls:
 15548 ;;		Nothing
 15549 ;; This function is called by:
 15550 ;;		_LTC6804_rdcv
 15551 ;;		_sprintf
 15552 ;;		_LTC6804_rdaux
 15553 ;; This function uses a non-reentrant model
 15554 ;;
 15555                           
 15556                           
 15557                           ;psect for function ___wmul
 15558  28CB                     ___wmul:	
 15559                           
 15560                           ;incstack = 0
 15561                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 15562  28CB  01F6               	clrf	___wmul@product
 15563  28CC  01F7               	clrf	___wmul@product+1
 15564  28CD                     l7512:	
 15565  28CD  1C72               	btfss	___wmul@multiplier,0
 15566  28CE  28D3               	goto	l1031
 15567  28CF  0874               	movf	___wmul@multiplicand,w
 15568  28D0  07F6               	addwf	___wmul@product,f
 15569  28D1  0875               	movf	___wmul@multiplicand+1,w
 15570  28D2  3DF7               	addwfc	___wmul@product+1,f
 15571  28D3                     l1031:	
 15572  28D3  3001               	movlw	1
 15573  28D4                     u10005:	
 15574  28D4  35F4               	lslf	___wmul@multiplicand,f
 15575  28D5  0DF5               	rlf	___wmul@multiplicand+1,f
 15576  28D6  0B89               	decfsz	9,f
 15577  28D7  28D4               	goto	u10005
 15578  28D8  3001               	movlw	1
 15579  28D9                     u10015:	
 15580  28D9  36F3               	lsrf	___wmul@multiplier+1,f
 15581  28DA  0CF2               	rrf	___wmul@multiplier,f
 15582  28DB  0B89               	decfsz	9,f
 15583  28DC  28D9               	goto	u10015
 15584  28DD  0872               	movf	___wmul@multiplier,w
 15585  28DE  0473               	iorwf	___wmul@multiplier+1,w
 15586  28DF  1D03               	btfss	3,2
 15587  28E0  28CD               	goto	l7512
 15588  28E1  0877               	movf	___wmul@product+1,w
 15589  28E2  00F3               	movwf	?___wmul+1
 15590  28E3  0876               	movf	___wmul@product,w
 15591  28E4  00F2               	movwf	?___wmul
 15592  28E5  0008               	return
 15593  28E6                     __end_of___wmul:	
 15594                           
 15595                           	psect	text28
 15596  2CA6                     __ptext28:	
 15597 ;; *************** function _LTC6804_rdcv_reg *****************
 15598 ;; Defined at:
 15599 ;;		line 621 in file "ltc6804.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;  reg             1    wreg     unsigned char 
 15602 ;;  total_ic        1   15[BANK0 ] unsigned char 
 15603 ;;  data            1   16[BANK0 ] PTR unsigned char 
 15604 ;;		 -> LTC6804_rdcv@cell_data(8), 
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;  reg             1   27[BANK0 ] unsigned char 
 15607 ;;  cmd             4   23[BANK0 ] unsigned char [4]
 15608 ;;  cmd_pec         2   21[BANK0 ] int 
 15609 ;; Return value:  Size  Location     Type
 15610 ;;                  1    wreg      void 
 15611 ;; Registers used:
 15612 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15613 ;; Tracked objects:
 15614 ;;		On entry : 0/0
 15615 ;;		On exit  : 0/0
 15616 ;;		Unchanged: 0/0
 15617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15618 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15619 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15620 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15621 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15622 ;;Total ram usage:       13 bytes
 15623 ;; Hardware stack levels used:    1
 15624 ;; Hardware stack levels required when called:    4
 15625 ;; This function calls:
 15626 ;;		___bmul
 15627 ;;		_pec15_calc
 15628 ;;		_spi_write_read
 15629 ;;		_wakeup_idle
 15630 ;; This function is called by:
 15631 ;;		_LTC6804_rdcv
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           
 15636                           ;psect for function _LTC6804_rdcv_reg
 15637  2CA6                     _LTC6804_rdcv_reg:	
 15638                           
 15639                           ;incstack = 0
 15640                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15641                           ;LTC6804_rdcv_reg@reg stored from wreg
 15642  2CA6  0020               	movlb	0	; select bank0
 15643  2CA7  00BB               	movwf	LTC6804_rdcv_reg@reg
 15644                           
 15645                           ;ltc6804.c: 626: const char REG_LEN = 8;
 15646                           ;ltc6804.c: 627: char cmd[4];
 15647                           ;ltc6804.c: 628: int cmd_pec;
 15648                           ;ltc6804.c: 631: if (reg == 1)
 15649  2CA8  033B               	decf	LTC6804_rdcv_reg@reg,w
 15650  2CA9  1D03               	btfss	3,2
 15651  2CAA  2CAD               	goto	l7300
 15652                           
 15653                           ;ltc6804.c: 632: {
 15654                           ;ltc6804.c: 633: cmd[1] = 0x04;
 15655  2CAB  3004               	movlw	4
 15656  2CAC  2CBE               	goto	L12
 15657  2CAD                     l7300:	
 15658                           ;ltc6804.c: 635: }
 15659                           
 15660                           ;ltc6804.c: 634: cmd[0] = 0x00;
 15661                           
 15662                           
 15663                           ;ltc6804.c: 636: else if(reg == 2)
 15664  2CAD  3002               	movlw	2
 15665  2CAE  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 15666  2CAF  1D03               	btfss	3,2
 15667  2CB0  2CB3               	goto	l7306
 15668                           
 15669                           ;ltc6804.c: 637: {
 15670                           ;ltc6804.c: 638: cmd[1] = 0x06;
 15671  2CB1  3006               	movlw	6
 15672  2CB2  2CBE               	goto	L12
 15673  2CB3                     l7306:	
 15674                           ;ltc6804.c: 640: }
 15675                           
 15676                           ;ltc6804.c: 639: cmd[0] = 0x00;
 15677                           
 15678                           
 15679                           ;ltc6804.c: 641: else if(reg == 3)
 15680  2CB3  3003               	movlw	3
 15681  2CB4  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 15682  2CB5  1D03               	btfss	3,2
 15683  2CB6  2CB9               	goto	l7312
 15684                           
 15685                           ;ltc6804.c: 642: {
 15686                           ;ltc6804.c: 643: cmd[1] = 0x08;
 15687  2CB7  3008               	movlw	8
 15688  2CB8  2CBE               	goto	L12
 15689  2CB9                     l7312:	
 15690                           ;ltc6804.c: 645: }
 15691                           
 15692                           ;ltc6804.c: 644: cmd[0] = 0x00;
 15693                           
 15694                           
 15695                           ;ltc6804.c: 646: else if(reg == 4)
 15696  2CB9  3004               	movlw	4
 15697  2CBA  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 15698  2CBB  1D03               	btfss	3,2
 15699  2CBC  2CC2               	goto	l7318
 15700                           
 15701                           ;ltc6804.c: 647: {
 15702                           ;ltc6804.c: 648: cmd[1] = 0x0A;
 15703  2CBD  300A               	movlw	10
 15704  2CBE                     L12:	
 15705  2CBE  00B1               	movwf	??_LTC6804_rdcv_reg
 15706  2CBF  0831               	movf	??_LTC6804_rdcv_reg,w
 15707  2CC0  00B8               	movwf	LTC6804_rdcv_reg@cmd+1
 15708                           
 15709                           ;ltc6804.c: 649: cmd[0] = 0x00;
 15710  2CC1  01B7               	clrf	LTC6804_rdcv_reg@cmd
 15711  2CC2                     l7318:	
 15712                           
 15713                           ;ltc6804.c: 650: }
 15714                           ;ltc6804.c: 653: cmd_pec = pec15_calc(2, cmd);
 15715  2CC2  3037               	movlw	low LTC6804_rdcv_reg@cmd
 15716  2CC3  00F6               	movwf	pec15_calc@data
 15717  2CC4  3000               	movlw	high LTC6804_rdcv_reg@cmd
 15718  2CC5  00F7               	movwf	pec15_calc@data+1
 15719  2CC6  3002               	movlw	2
 15720  2CC7  31AB  230C  31AC   	fcall	_pec15_calc
 15721  2CCA  0877               	movf	?_pec15_calc+1,w
 15722  2CCB  0020               	movlb	0	; select bank0
 15723  2CCC  00B6               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 15724  2CCD  0876               	movf	?_pec15_calc,w
 15725  2CCE  00B5               	movwf	LTC6804_rdcv_reg@cmd_pec
 15726                           
 15727                           ;ltc6804.c: 654: cmd[2] = (char)(cmd_pec >> 8);
 15728  2CCF  0836               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 15729  2CD0  00B1               	movwf	??_LTC6804_rdcv_reg
 15730  2CD1  0831               	movf	??_LTC6804_rdcv_reg,w
 15731  2CD2  00B9               	movwf	LTC6804_rdcv_reg@cmd+2
 15732                           
 15733                           ;ltc6804.c: 655: cmd[3] = (char)(cmd_pec);
 15734  2CD3  0835               	movf	LTC6804_rdcv_reg@cmd_pec,w
 15735  2CD4  00B1               	movwf	??_LTC6804_rdcv_reg
 15736  2CD5  0831               	movf	??_LTC6804_rdcv_reg,w
 15737  2CD6  00BA               	movwf	LTC6804_rdcv_reg@cmd+3
 15738                           
 15739                           ;ltc6804.c: 658: wakeup_idle ();
 15740  2CD7  31A8  2039  31AC   	fcall	_wakeup_idle
 15741                           
 15742                           ;ltc6804.c: 661: LATDbits.LATD3 = 0;
 15743  2CDA  0022               	movlb	2	; select bank2
 15744  2CDB  118F               	bcf	15,3	;volatile
 15745                           
 15746                           ;ltc6804.c: 662: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 15747  2CDC  3004               	movlw	4
 15748  2CDD  0020               	movlb	0	; select bank0
 15749  2CDE  00B1               	movwf	??_LTC6804_rdcv_reg
 15750  2CDF  0831               	movf	??_LTC6804_rdcv_reg,w
 15751  2CE0  00F6               	movwf	spi_write_read@tx_len
 15752  2CE1  0830               	movf	LTC6804_rdcv_reg@data,w
 15753  2CE2  00B2               	movwf	??_LTC6804_rdcv_reg+1
 15754  2CE3  0832               	movf	??_LTC6804_rdcv_reg+1,w
 15755  2CE4  00F7               	movwf	spi_write_read@rx_data
 15756  2CE5  082F               	movf	LTC6804_rdcv_reg@total_ic,w
 15757  2CE6  00B3               	movwf	??_LTC6804_rdcv_reg+2
 15758  2CE7  0833               	movf	??_LTC6804_rdcv_reg+2,w
 15759  2CE8  00F2               	movwf	___bmul@multiplicand
 15760  2CE9  300E               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 15761  2CEA  0084               	movwf	4
 15762  2CEB  30B8               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 15763  2CEC  0085               	movwf	5
 15764  2CED  0800               	movf	0,w	;code access
 15765  2CEE  31A8  2071  31AC   	fcall	___bmul
 15766  2CF1  0020               	movlb	0	; select bank0
 15767  2CF2  00B4               	movwf	??_LTC6804_rdcv_reg+3
 15768  2CF3  0834               	movf	??_LTC6804_rdcv_reg+3,w
 15769  2CF4  00F8               	movwf	spi_write_read@rx_len
 15770  2CF5  3037               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 15771  2CF6  31A9  2169         	fcall	_spi_write_read
 15772                           
 15773                           ;ltc6804.c: 663: LATDbits.LATD3 = 1;
 15774  2CF8  0022               	movlb	2	; select bank2
 15775  2CF9  158F               	bsf	15,3	;volatile
 15776  2CFA  0008               	return
 15777  2CFB                     __end_of_LTC6804_rdcv_reg:	
 15778                           
 15779                           	psect	text29
 15780  2969                     __ptext29:	
 15781 ;; *************** function _spi_write_read *****************
 15782 ;; Defined at:
 15783 ;;		line 1233 in file "ltc6804.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;  tx_Data         1    wreg     PTR unsigned char 
 15786 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 15787 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 15788 ;;  tx_len          1    6[COMMON] unsigned char 
 15789 ;;  rx_data         1    7[COMMON] PTR unsigned char 
 15790 ;;		 -> LTC6804_rdaux@data(8), LTC6804_rdcv@cell_data(8), NULL(0), 
 15791 ;;  rx_len          1    8[COMMON] unsigned char 
 15792 ;; Auto vars:     Size  Location     Type
 15793 ;;  tx_Data         1    4[BANK0 ] PTR unsigned char 
 15794 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 15795 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 15796 ;;  i               1    3[BANK0 ] unsigned char 
 15797 ;;  i               1    2[BANK0 ] unsigned char 
 15798 ;; Return value:  Size  Location     Type
 15799 ;;                  1    wreg      void 
 15800 ;; Registers used:
 15801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15802 ;; Tracked objects:
 15803 ;;		On entry : 0/0
 15804 ;;		On exit  : 0/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15808 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15810 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15811 ;;Total ram usage:        8 bytes
 15812 ;; Hardware stack levels used:    1
 15813 ;; Hardware stack levels required when called:    3
 15814 ;; This function calls:
 15815 ;;		_spi_read
 15816 ;;		_spi_write
 15817 ;; This function is called by:
 15818 ;;		_LTC6804_rdcv_reg
 15819 ;;		_LTC6804_rdstat_reg
 15820 ;;		_LTC6804_rdaux_reg
 15821 ;;		_LTC6804_clrcell
 15822 ;;		_LTC6804_clraux
 15823 ;;		_LTC6804_rdcfg
 15824 ;; This function uses a non-reentrant model
 15825 ;;
 15826                           
 15827                           
 15828                           ;psect for function _spi_write_read
 15829  2969                     _spi_write_read:	
 15830                           
 15831                           ;incstack = 0
 15832                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15833                           ;spi_write_read@tx_Data stored from wreg
 15834  2969  0020               	movlb	0	; select bank0
 15835  296A  00A4               	movwf	spi_write_read@tx_Data
 15836                           
 15837                           ;ltc6804.c: 1239: for(char i = 0; i < tx_len; i++)
 15838  296B  01A2               	clrf	spi_write_read@i
 15839  296C                     l6708:	
 15840  296C  0876               	movf	spi_write_read@tx_len,w
 15841  296D  0222               	subwf	spi_write_read@i,w
 15842  296E  1803               	btfsc	3,0
 15843  296F  2980               	goto	l6710
 15844                           
 15845                           ;ltc6804.c: 1240: {
 15846                           ;ltc6804.c: 1241: spi_write(tx_Data[i]);
 15847  2970  0822               	movf	spi_write_read@i,w
 15848  2971  0724               	addwf	spi_write_read@tx_Data,w
 15849  2972  00A0               	movwf	??_spi_write_read
 15850  2973  0820               	movf	??_spi_write_read,w
 15851  2974  0086               	movwf	6
 15852  2975  0187               	clrf	7
 15853  2976  0801               	movf	1,w
 15854  2977  31A8  2042  31A9   	fcall	_spi_write
 15855  297A  3001               	movlw	1
 15856  297B  0020               	movlb	0	; select bank0
 15857  297C  00A0               	movwf	??_spi_write_read
 15858  297D  0820               	movf	??_spi_write_read,w
 15859  297E  07A2               	addwf	spi_write_read@i,f
 15860  297F  296C               	goto	l6708
 15861  2980                     l6710:	
 15862                           
 15863                           ;ltc6804.c: 1243: }
 15864                           ;ltc6804.c: 1245: for(char i = 0; i < rx_len; i++)
 15865  2980  01A3               	clrf	spi_write_read@i_1442
 15866  2981                     l6716:	
 15867  2981  0878               	movf	spi_write_read@rx_len,w
 15868  2982  0223               	subwf	spi_write_read@i_1442,w
 15869  2983  1803               	btfsc	3,0
 15870  2984  0008               	return
 15871                           
 15872                           ;ltc6804.c: 1246: {
 15873                           ;ltc6804.c: 1247: rx_data[i] = (char)spi_read(0xFF);
 15874  2985  30FF               	movlw	255
 15875  2986  31A8  2058  31A9   	fcall	_spi_read
 15876  2989  0020               	movlb	0	; select bank0
 15877  298A  00A0               	movwf	??_spi_write_read
 15878  298B  0823               	movf	spi_write_read@i_1442,w
 15879  298C  0777               	addwf	spi_write_read@rx_data,w
 15880  298D  00A1               	movwf	??_spi_write_read+1
 15881  298E  0821               	movf	??_spi_write_read+1,w
 15882  298F  0086               	movwf	6
 15883  2990  0187               	clrf	7
 15884  2991  0820               	movf	??_spi_write_read,w
 15885  2992  0081               	movwf	1
 15886  2993  3001               	movlw	1
 15887  2994  00A0               	movwf	??_spi_write_read
 15888  2995  0820               	movf	??_spi_write_read,w
 15889  2996  07A3               	addwf	spi_write_read@i_1442,f
 15890  2997  2981               	goto	l6716
 15891  2998                     __end_of_spi_write_read:	
 15892                           
 15893                           	psect	text30
 15894  2858                     __ptext30:	
 15895 ;; *************** function _spi_read *****************
 15896 ;; Defined at:
 15897 ;;		line 42 in file "spi.c"
 15898 ;; Parameters:    Size  Location     Type
 15899 ;;  data            1    wreg     unsigned char 
 15900 ;; Auto vars:     Size  Location     Type
 15901 ;;  data            1    3[COMMON] unsigned char 
 15902 ;;  readData        1    4[COMMON] unsigned char 
 15903 ;; Return value:  Size  Location     Type
 15904 ;;                  1    wreg      unsigned char 
 15905 ;; Registers used:
 15906 ;;		wreg
 15907 ;; Tracked objects:
 15908 ;;		On entry : 0/0
 15909 ;;		On exit  : 0/0
 15910 ;;		Unchanged: 0/0
 15911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15916 ;;Total ram usage:        3 bytes
 15917 ;; Hardware stack levels used:    1
 15918 ;; Hardware stack levels required when called:    2
 15919 ;; This function calls:
 15920 ;;		Nothing
 15921 ;; This function is called by:
 15922 ;;		_spi_write_read
 15923 ;; This function uses a non-reentrant model
 15924 ;;
 15925                           
 15926                           
 15927                           ;psect for function _spi_read
 15928  2858                     _spi_read:	
 15929                           
 15930                           ;incstack = 0
 15931                           ; Regs used in _spi_read: [wreg]
 15932                           ;spi_read@data stored from wreg
 15933  2858  00F3               	movwf	spi_read@data
 15934                           
 15935                           ;spi.c: 43: SSP1BUF = data;
 15936  2859  0873               	movf	spi_read@data,w
 15937  285A  0024               	movlb	4	; select bank4
 15938  285B  0091               	movwf	17	;volatile
 15939  285C                     l804:	
 15940                           ;spi.c: 44: while(SSP1STATbits.BF == 0);
 15941                           
 15942  285C  1C14               	btfss	20,0	;volatile
 15943  285D  285C               	goto	l804
 15944                           
 15945                           ;spi.c: 45: char readData = SSP1BUF;
 15946  285E  0811               	movf	17,w	;volatile
 15947  285F  00F2               	movwf	??_spi_read
 15948  2860  0872               	movf	??_spi_read,w
 15949  2861  00F4               	movwf	spi_read@readData
 15950                           
 15951                           ;spi.c: 46: return readData;
 15952  2862  0874               	movf	spi_read@readData,w
 15953  2863  0008               	return
 15954  2864                     __end_of_spi_read:	
 15955                           
 15956                           	psect	text31
 15957  2998                     __ptext31:	
 15958 ;; *************** function _LTC6804_adcv *****************
 15959 ;; Defined at:
 15960 ;;		line 369 in file "ltc6804.c"
 15961 ;; Parameters:    Size  Location     Type
 15962 ;;		None
 15963 ;; Auto vars:     Size  Location     Type
 15964 ;;  cmd             4   15[BANK0 ] unsigned char [4]
 15965 ;;  cmd_pec         2   19[BANK0 ] int 
 15966 ;; Return value:  Size  Location     Type
 15967 ;;                  1    wreg      void 
 15968 ;; Registers used:
 15969 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15970 ;; Tracked objects:
 15971 ;;		On entry : 0/0
 15972 ;;		On exit  : 0/0
 15973 ;;		Unchanged: 0/0
 15974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15976 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15978 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15979 ;;Total ram usage:        7 bytes
 15980 ;; Hardware stack levels used:    1
 15981 ;; Hardware stack levels required when called:    4
 15982 ;; This function calls:
 15983 ;;		_pec15_calc
 15984 ;;		_spi_write_array
 15985 ;;		_wakeup_idle
 15986 ;; This function is called by:
 15987 ;;		_measureVoltages
 15988 ;; This function uses a non-reentrant model
 15989 ;;
 15990                           
 15991                           
 15992                           ;psect for function _LTC6804_adcv
 15993  2998                     _LTC6804_adcv:	
 15994                           
 15995                           ;ltc6804.c: 372: char cmd[4];
 15996                           ;ltc6804.c: 373: int cmd_pec;
 15997                           ;ltc6804.c: 376: cmd[0] = ADCV[0];
 15998                           
 15999                           ;incstack = 0
 16000                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16001  2998  0021               	movlb	1	; select bank1
 16002  2999  086C               	movf	_ADCV^(0+128),w
 16003  299A  00F9               	movwf	??_LTC6804_adcv
 16004  299B  0879               	movf	??_LTC6804_adcv,w
 16005  299C  0020               	movlb	0	; select bank0
 16006  299D  00AF               	movwf	LTC6804_adcv@cmd
 16007                           
 16008                           ;ltc6804.c: 377: cmd[1] = ADCV[1];
 16009  299E  0021               	movlb	1	; select bank1
 16010  299F  086D               	movf	(_ADCV^(0+128)+1),w
 16011  29A0  00F9               	movwf	??_LTC6804_adcv
 16012  29A1  0879               	movf	??_LTC6804_adcv,w
 16013  29A2  0020               	movlb	0	; select bank0
 16014  29A3  00B0               	movwf	LTC6804_adcv@cmd+1
 16015                           
 16016                           ;ltc6804.c: 380: cmd_pec = pec15_calc(2, ADCV);
 16017  29A4  30EC               	movlw	low _ADCV
 16018  29A5  00F6               	movwf	pec15_calc@data
 16019  29A6  3000               	movlw	high _ADCV
 16020  29A7  00F7               	movwf	pec15_calc@data+1
 16021  29A8  3002               	movlw	2
 16022  29A9  31AB  230C  31A9   	fcall	_pec15_calc
 16023  29AC  0877               	movf	?_pec15_calc+1,w
 16024  29AD  0020               	movlb	0	; select bank0
 16025  29AE  00B4               	movwf	LTC6804_adcv@cmd_pec+1
 16026  29AF  0876               	movf	?_pec15_calc,w
 16027  29B0  00B3               	movwf	LTC6804_adcv@cmd_pec
 16028                           
 16029                           ;ltc6804.c: 381: cmd[2] = (char)(cmd_pec >> 8);
 16030  29B1  0834               	movf	LTC6804_adcv@cmd_pec+1,w
 16031  29B2  00F9               	movwf	??_LTC6804_adcv
 16032  29B3  0879               	movf	??_LTC6804_adcv,w
 16033  29B4  00B1               	movwf	LTC6804_adcv@cmd+2
 16034                           
 16035                           ;ltc6804.c: 382: cmd[3] = (char)(cmd_pec);
 16036  29B5  0833               	movf	LTC6804_adcv@cmd_pec,w
 16037  29B6  00F9               	movwf	??_LTC6804_adcv
 16038  29B7  0879               	movf	??_LTC6804_adcv,w
 16039  29B8  00B2               	movwf	LTC6804_adcv@cmd+3
 16040                           
 16041                           ;ltc6804.c: 385: wakeup_idle ();
 16042  29B9  31A8  2039  31A9   	fcall	_wakeup_idle
 16043                           
 16044                           ;ltc6804.c: 388: LATDbits.LATD3 = 0;
 16045  29BC  0022               	movlb	2	; select bank2
 16046  29BD  118F               	bcf	15,3	;volatile
 16047                           
 16048                           ;ltc6804.c: 389: spi_write_array(4,cmd);
 16049  29BE  302F               	movlw	(low (LTC6804_adcv@cmd| 0))& (0+255)
 16050  29BF  00F9               	movwf	??_LTC6804_adcv
 16051  29C0  0879               	movf	??_LTC6804_adcv,w
 16052  29C1  00F5               	movwf	spi_write_array@data
 16053  29C2  3004               	movlw	4
 16054  29C3  31A8  20B6         	fcall	_spi_write_array
 16055                           
 16056                           ;ltc6804.c: 390: LATDbits.LATD3 = 1;
 16057  29C5  0022               	movlb	2	; select bank2
 16058  29C6  158F               	bsf	15,3	;volatile
 16059  29C7  0008               	return
 16060  29C8                     __end_of_LTC6804_adcv:	
 16061                           
 16062                           	psect	text32
 16063  2D5A                     __ptext32:	
 16064 ;; *************** function _getTemps *****************
 16065 ;; Defined at:
 16066 ;;		line 32 in file "adc.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;  temperatures    1    wreg     PTR int 
 16069 ;;		 -> main@temps(10), 
 16070 ;;  numTemps        2   15[BANK1 ] int 
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;  temperatures    1   23[BANK1 ] PTR int 
 16073 ;;		 -> main@temps(10), 
 16074 ;;  inc             2   24[BANK1 ] int 
 16075 ;;  highestTemp     2   21[BANK1 ] int 
 16076 ;; Return value:  Size  Location     Type
 16077 ;;                  2   15[BANK1 ] int 
 16078 ;; Registers used:
 16079 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16080 ;; Tracked objects:
 16081 ;;		On entry : 0/0
 16082 ;;		On exit  : 0/0
 16083 ;;		Unchanged: 0/0
 16084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16085 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16086 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16087 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16088 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16089 ;;Total ram usage:       11 bytes
 16090 ;; Hardware stack levels used:    1
 16091 ;; Hardware stack levels required when called:    5
 16092 ;; This function calls:
 16093 ;;		_adcRead
 16094 ;;		_calculateTemp
 16095 ;; This function is called by:
 16096 ;;		_main
 16097 ;;		_startUp
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101                           
 16102                           ;psect for function _getTemps
 16103  2D5A                     _getTemps:	
 16104                           
 16105                           ;incstack = 0
 16106                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16107                           ;getTemps@temperatures stored from wreg
 16108  2D5A  0021               	movlb	1	; select bank1
 16109  2D5B  00B7               	movwf	getTemps@temperatures^(0+128)
 16110                           
 16111                           ;adc.c: 33: int highestTemp = 0;
 16112  2D5C  01B5               	clrf	getTemps@highestTemp^(0+128)
 16113  2D5D  01B6               	clrf	(getTemps@highestTemp+1)^(0+128)
 16114                           
 16115                           ;adc.c: 35: LATBbits.LATB5 = 0;
 16116  2D5E  0022               	movlb	2	; select bank2
 16117  2D5F  128D               	bcf	13,5	;volatile
 16118                           
 16119                           ;adc.c: 36: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 16120  2D60  0025               	movlb	5	; select bank5
 16121  2D61  0852               	movf	_tempChannels^(0+640),w
 16122  2D62  31AC  2452  31AD   	fcall	_adcRead
 16123  2D65  0873               	movf	?_adcRead+1,w
 16124  2D66  0021               	movlb	1	; select bank1
 16125  2D67  00A8               	movwf	(calculateTemp@adcValue+1)^(0+128)
 16126  2D68  0872               	movf	?_adcRead,w
 16127  2D69  00A7               	movwf	calculateTemp@adcValue^(0+128)
 16128  2D6A  31AD  25D9  31AD   	fcall	_calculateTemp
 16129  2D6D  0021               	movlb	1	; select bank1
 16130  2D6E  0828               	movf	(?_calculateTemp+1)^(0+128),w
 16131  2D6F  00B6               	movwf	(getTemps@highestTemp+1)^(0+128)
 16132  2D70  0827               	movf	?_calculateTemp^(0+128),w
 16133  2D71  00B5               	movwf	getTemps@highestTemp^(0+128)
 16134                           
 16135                           ;adc.c: 37: temperatures[0] = highestTemp;
 16136  2D72  0837               	movf	getTemps@temperatures^(0+128),w
 16137  2D73  0086               	movwf	6
 16138  2D74  3002               	movlw	2	; select bank4/5
 16139  2D75  0087               	movwf	7
 16140  2D76  0835               	movf	getTemps@highestTemp^(0+128),w
 16141  2D77  3FC0               	movwi [0]fsr1
 16142  2D78  0836               	movf	(getTemps@highestTemp+1)^(0+128),w
 16143  2D79  3FC1               	movwi [1]fsr1
 16144                           
 16145                           ;adc.c: 38: for(int inc = 1; inc < numTemps; inc ++){
 16146  2D7A  3001               	movlw	1
 16147  2D7B  00B8               	movwf	getTemps@inc^(0+128)
 16148  2D7C  3000               	movlw	0
 16149  2D7D  00B9               	movwf	(getTemps@inc^(0+128)+1)
 16150  2D7E                     l8382:	
 16151  2D7E  0839               	movf	(getTemps@inc+1)^(0+128),w
 16152  2D7F  3A80               	xorlw	128
 16153  2D80  00B1               	movwf	??_getTemps^(0+128)
 16154  2D81  0830               	movf	(getTemps@numTemps+1)^(0+128),w
 16155  2D82  3A80               	xorlw	128
 16156  2D83  0231               	subwf	??_getTemps^(0+128),w
 16157  2D84  1D03               	skipz
 16158  2D85  2D88               	goto	u11675
 16159  2D86  082F               	movf	getTemps@numTemps^(0+128),w
 16160  2D87  0238               	subwf	getTemps@inc^(0+128),w
 16161  2D88                     u11675:	
 16162  2D88  1803               	btfsc	3,0
 16163  2D89  2DD1               	goto	l190
 16164                           
 16165                           ;adc.c: 39: temperatures[inc] = calculateTemp(adcRead(tempChannels[inc]));
 16166  2D8A  0021               	movlb	1	; select bank1
 16167  2D8B  0838               	movf	getTemps@inc^(0+128),w
 16168  2D8C  3ED2               	addlw	(low (_tempChannels| (0+512)))& (0+255)
 16169  2D8D  0086               	movwf	6
 16170  2D8E  3002               	movlw	2	; select bank5/6
 16171  2D8F  0087               	movwf	7
 16172  2D90  0801               	movf	1,w
 16173  2D91  31AC  2452  31AD   	fcall	_adcRead
 16174  2D94  0873               	movf	?_adcRead+1,w
 16175  2D95  0021               	movlb	1	; select bank1
 16176  2D96  00A8               	movwf	(calculateTemp@adcValue+1)^(0+128)
 16177  2D97  0872               	movf	?_adcRead,w
 16178  2D98  00A7               	movwf	calculateTemp@adcValue^(0+128)
 16179  2D99  31AD  25D9  31AD   	fcall	_calculateTemp
 16180  2D9C  0021               	movlb	1	; select bank1
 16181  2D9D  3538               	lslf	getTemps@inc^(0+128),w
 16182  2D9E  0737               	addwf	getTemps@temperatures^(0+128),w
 16183  2D9F  00B1               	movwf	??_getTemps^(0+128)
 16184  2DA0  0831               	movf	??_getTemps^(0+128),w
 16185  2DA1  0086               	movwf	6
 16186  2DA2  3002               	movlw	2	; select bank4/5
 16187  2DA3  0087               	movwf	7
 16188  2DA4  0827               	movf	?_calculateTemp^(0+128),w
 16189  2DA5  3FC0               	movwi [0]fsr1
 16190  2DA6  0828               	movf	(?_calculateTemp+1)^(0+128),w
 16191  2DA7  3FC1               	movwi [1]fsr1
 16192                           
 16193                           ;adc.c: 40: if(temperatures[inc] > highestTemp){
 16194  2DA8  3538               	lslf	getTemps@inc^(0+128),w
 16195  2DA9  0737               	addwf	getTemps@temperatures^(0+128),w
 16196  2DAA  00B1               	movwf	??_getTemps^(0+128)
 16197  2DAB  0831               	movf	??_getTemps^(0+128),w
 16198  2DAC  0086               	movwf	6
 16199  2DAD  3002               	movlw	2	; select bank4/5
 16200  2DAE  0087               	movwf	7
 16201  2DAF  3F40               	moviw [0]fsr1
 16202  2DB0  00B2               	movwf	(??_getTemps+1)^(0+128)
 16203  2DB1  3F41               	moviw [1]fsr1
 16204  2DB2  00B3               	movwf	((??_getTemps+1)^(0+128)+1)
 16205  2DB3  0836               	movf	(getTemps@highestTemp+1)^(0+128),w
 16206  2DB4  3A80               	xorlw	128
 16207  2DB5  00B4               	movwf	(??_getTemps+3)^(0+128)
 16208  2DB6  0833               	movf	(??_getTemps+2)^(0+128),w
 16209  2DB7  3A80               	xorlw	128
 16210  2DB8  0234               	subwf	(??_getTemps+3)^(0+128),w
 16211  2DB9  1D03               	skipz
 16212  2DBA  2DBD               	goto	u11665
 16213  2DBB  0832               	movf	(??_getTemps+1)^(0+128),w
 16214  2DBC  0235               	subwf	getTemps@highestTemp^(0+128),w
 16215  2DBD                     u11665:	
 16216  2DBD  1803               	skipnc
 16217  2DBE  2DCB               	goto	l8380
 16218                           
 16219                           ;adc.c: 41: highestTemp = temperatures[inc];
 16220  2DBF  0021               	movlb	1	; select bank1
 16221  2DC0  3538               	lslf	getTemps@inc^(0+128),w
 16222  2DC1  0737               	addwf	getTemps@temperatures^(0+128),w
 16223  2DC2  00B1               	movwf	??_getTemps^(0+128)
 16224  2DC3  0831               	movf	??_getTemps^(0+128),w
 16225  2DC4  0086               	movwf	6
 16226  2DC5  3002               	movlw	2	; select bank4/5
 16227  2DC6  0087               	movwf	7
 16228  2DC7  3F40               	moviw [0]fsr1
 16229  2DC8  00B5               	movwf	getTemps@highestTemp^(0+128)
 16230  2DC9  3F41               	moviw [1]fsr1
 16231  2DCA  00B6               	movwf	(getTemps@highestTemp+1)^(0+128)
 16232  2DCB                     l8380:	
 16233  2DCB  3001               	movlw	1
 16234  2DCC  0021               	movlb	1	; select bank1
 16235  2DCD  07B8               	addwf	getTemps@inc^(0+128),f
 16236  2DCE  3000               	movlw	0
 16237  2DCF  3DB9               	addwfc	(getTemps@inc+1)^(0+128),f
 16238  2DD0  2D7E               	goto	l8382
 16239  2DD1                     l190:	
 16240                           
 16241                           ;adc.c: 42: }
 16242                           ;adc.c: 43: }
 16243                           ;adc.c: 45: LATBbits.LATB5 = 1;
 16244  2DD1  0022               	movlb	2	; select bank2
 16245  2DD2  168D               	bsf	13,5	;volatile
 16246                           
 16247                           ;adc.c: 46: return highestTemp;
 16248  2DD3  0021               	movlb	1	; select bank1
 16249  2DD4  0836               	movf	(getTemps@highestTemp+1)^(0+128),w
 16250  2DD5  00B0               	movwf	(?_getTemps+1)^(0+128)
 16251  2DD6  0835               	movf	getTemps@highestTemp^(0+128),w
 16252  2DD7  00AF               	movwf	?_getTemps^(0+128)
 16253  2DD8  0008               	return
 16254  2DD9                     __end_of_getTemps:	
 16255                           
 16256                           	psect	text33
 16257  2DD9                     __ptext33:	
 16258 ;; *************** function _calculateTemp *****************
 16259 ;; Defined at:
 16260 ;;		line 12 in file "adc.c"
 16261 ;; Parameters:    Size  Location     Type
 16262 ;;  adcValue        2    7[BANK1 ] int 
 16263 ;; Auto vars:     Size  Location     Type
 16264 ;;  voltage         4   11[BANK1 ] float 
 16265 ;; Return value:  Size  Location     Type
 16266 ;;                  2    7[BANK1 ] int 
 16267 ;; Registers used:
 16268 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16269 ;; Tracked objects:
 16270 ;;		On entry : 0/0
 16271 ;;		On exit  : 0/0
 16272 ;;		Unchanged: 0/0
 16273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16274 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16275 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16276 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16277 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16278 ;;Total ram usage:        8 bytes
 16279 ;; Hardware stack levels used:    1
 16280 ;; Hardware stack levels required when called:    4
 16281 ;; This function calls:
 16282 ;;		___fldiv
 16283 ;;		___flmul
 16284 ;;		___fltol
 16285 ;;		___xxtofl
 16286 ;; This function is called by:
 16287 ;;		_getTemps
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           
 16292                           ;psect for function _calculateTemp
 16293  2DD9                     _calculateTemp:	
 16294                           
 16295                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 16296                           
 16297                           ;incstack = 0
 16298                           ; Regs used in _calculateTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16299  2DD9  3040               	movlw	64
 16300  2DDA  0020               	movlb	0	; select bank0
 16301  2DDB  00BB               	movwf	___flmul@b+3
 16302  2DDC  30A0               	movlw	160
 16303  2DDD  00BA               	movwf	___flmul@b+2
 16304  2DDE  3000               	movlw	0
 16305  2DDF  00B9               	movwf	___flmul@b+1
 16306  2DE0  3000               	movlw	0
 16307  2DE1  00B8               	movwf	___flmul@b
 16308  2DE2  3045               	movlw	69
 16309  2DE3  00D5               	movwf	___fldiv@a+3
 16310  2DE4  3080               	movlw	128
 16311  2DE5  00D4               	movwf	___fldiv@a+2
 16312  2DE6  3000               	movlw	0
 16313  2DE7  00D3               	movwf	___fldiv@a+1
 16314  2DE8  3000               	movlw	0
 16315  2DE9  00D2               	movwf	___fldiv@a
 16316  2DEA  0021               	movlb	1	; select bank1
 16317  2DEB  0827               	movf	calculateTemp@adcValue^(0+128),w
 16318  2DEC  0020               	movlb	0	; select bank0
 16319  2DED  00AE               	movwf	___xxtofl@val
 16320  2DEE  0021               	movlb	1	; select bank1
 16321  2DEF  0828               	movf	(calculateTemp@adcValue+1)^(0+128),w
 16322  2DF0  0020               	movlb	0	; select bank0
 16323  2DF1  00AF               	movwf	___xxtofl@val+1
 16324  2DF2  0D89               	rlf	9,f
 16325  2DF3  3B89               	subwfb	9,f
 16326  2DF4  0989               	comf	9,f
 16327  2DF5  00B0               	movwf	___xxtofl@val+2
 16328  2DF6  00B1               	movwf	___xxtofl@val+3
 16329  2DF7  3001               	movlw	1
 16330  2DF8  31AF  276A  31AD   	fcall	___xxtofl
 16331  2DFB  0020               	movlb	0	; select bank0
 16332  2DFC  0831               	movf	?___xxtofl+3,w
 16333  2DFD  00D9               	movwf	___fldiv@b+3
 16334  2DFE  0830               	movf	?___xxtofl+2,w
 16335  2DFF  00D8               	movwf	___fldiv@b+2
 16336  2E00  082F               	movf	?___xxtofl+1,w
 16337  2E01  00D7               	movwf	___fldiv@b+1
 16338  2E02  082E               	movf	?___xxtofl,w
 16339  2E03  00D6               	movwf	___fldiv@b
 16340  2E04  3190  2073  31AD   	fcall	___fldiv
 16341  2E07  0020               	movlb	0	; select bank0
 16342  2E08  0855               	movf	?___fldiv+3,w
 16343  2E09  00BF               	movwf	___flmul@a+3
 16344  2E0A  0854               	movf	?___fldiv+2,w
 16345  2E0B  00BE               	movwf	___flmul@a+2
 16346  2E0C  0853               	movf	?___fldiv+1,w
 16347  2E0D  00BD               	movwf	___flmul@a+1
 16348  2E0E  0852               	movf	?___fldiv,w
 16349  2E0F  00BC               	movwf	___flmul@a
 16350  2E10  3195  25D4  31AD   	fcall	___flmul
 16351  2E13  0020               	movlb	0	; select bank0
 16352  2E14  083B               	movf	?___flmul+3,w
 16353  2E15  0021               	movlb	1	; select bank1
 16354  2E16  00AE               	movwf	(calculateTemp@voltage+3)^(0+128)
 16355  2E17  0020               	movlb	0	; select bank0
 16356  2E18  083A               	movf	?___flmul+2,w
 16357  2E19  0021               	movlb	1	; select bank1
 16358  2E1A  00AD               	movwf	(calculateTemp@voltage+2)^(0+128)
 16359  2E1B  0020               	movlb	0	; select bank0
 16360  2E1C  0839               	movf	?___flmul+1,w
 16361  2E1D  0021               	movlb	1	; select bank1
 16362  2E1E  00AC               	movwf	(calculateTemp@voltage+1)^(0+128)
 16363  2E1F  0020               	movlb	0	; select bank0
 16364  2E20  0838               	movf	?___flmul,w
 16365  2E21  0021               	movlb	1	; select bank1
 16366  2E22  00AB               	movwf	calculateTemp@voltage^(0+128)
 16367                           
 16368                           ;adc.c: 14: return temperatures[(int)(voltage*10)];
 16369  2E23  082E               	movf	(calculateTemp@voltage+3)^(0+128),w
 16370  2E24  0020               	movlb	0	; select bank0
 16371  2E25  00BF               	movwf	___flmul@a+3
 16372  2E26  0021               	movlb	1	; select bank1
 16373  2E27  082D               	movf	(calculateTemp@voltage+2)^(0+128),w
 16374  2E28  0020               	movlb	0	; select bank0
 16375  2E29  00BE               	movwf	___flmul@a+2
 16376  2E2A  0021               	movlb	1	; select bank1
 16377  2E2B  082C               	movf	(calculateTemp@voltage+1)^(0+128),w
 16378  2E2C  0020               	movlb	0	; select bank0
 16379  2E2D  00BD               	movwf	___flmul@a+1
 16380  2E2E  0021               	movlb	1	; select bank1
 16381  2E2F  082B               	movf	calculateTemp@voltage^(0+128),w
 16382  2E30  0020               	movlb	0	; select bank0
 16383  2E31  00BC               	movwf	___flmul@a
 16384  2E32  3041               	movlw	65
 16385  2E33  00BB               	movwf	___flmul@b+3
 16386  2E34  3020               	movlw	32
 16387  2E35  00BA               	movwf	___flmul@b+2
 16388  2E36  3000               	movlw	0
 16389  2E37  00B9               	movwf	___flmul@b+1
 16390  2E38  3000               	movlw	0
 16391  2E39  00B8               	movwf	___flmul@b
 16392  2E3A  3195  25D4  31AD   	fcall	___flmul
 16393  2E3D  0020               	movlb	0	; select bank0
 16394  2E3E  083B               	movf	?___flmul+3,w
 16395  2E3F  00EE               	movwf	___fltol@f1+3
 16396  2E40  083A               	movf	?___flmul+2,w
 16397  2E41  00ED               	movwf	___fltol@f1+2
 16398  2E42  0839               	movf	?___flmul+1,w
 16399  2E43  00EC               	movwf	___fltol@f1+1
 16400  2E44  0838               	movf	?___flmul,w
 16401  2E45  00EB               	movwf	___fltol@f1
 16402  2E46  31A0  2019         	fcall	___fltol
 16403  2E48  0020               	movlb	0	; select bank0
 16404  2E49  086C               	movf	?___fltol+1,w
 16405  2E4A  0085               	movwf	5
 16406  2E4B  086B               	movf	?___fltol,w
 16407  2E4C  0084               	movwf	4
 16408  2E4D  3068               	movlw	low (_temperatures| (0+32768))
 16409  2E4E  0784               	addwf	4,f
 16410  2E4F  30B0               	movlw	high (_temperatures| (0+32768))
 16411  2E50  3D85               	addwfc	5,f
 16412  2E51  0800               	movf	0,w	;code access
 16413  2E52  0021               	movlb	1	; select bank1
 16414  2E53  00A9               	movwf	??_calculateTemp^(0+128)
 16415  2E54  01AA               	clrf	(??_calculateTemp^(0+128)+1)
 16416  2E55  0829               	movf	??_calculateTemp^(0+128),w
 16417  2E56  00A7               	movwf	?_calculateTemp^(0+128)
 16418  2E57  082A               	movf	(??_calculateTemp+1)^(0+128),w
 16419  2E58  00A8               	movwf	(?_calculateTemp+1)^(0+128)
 16420  2E59  0008               	return
 16421  2E5A                     __end_of_calculateTemp:	
 16422                           
 16423                           	psect	text34
 16424  2019                     __ptext34:	
 16425 ;; *************** function ___fltol *****************
 16426 ;; Defined at:
 16427 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 16428 ;; Parameters:    Size  Location     Type
 16429 ;;  f1              4   75[BANK0 ] int 
 16430 ;; Auto vars:     Size  Location     Type
 16431 ;;  exp1            1    6[BANK1 ] unsigned char 
 16432 ;;  sign1           1    5[BANK1 ] unsigned char 
 16433 ;; Return value:  Size  Location     Type
 16434 ;;                  4   75[BANK0 ] long 
 16435 ;; Registers used:
 16436 ;;		wreg, status,2, status,0
 16437 ;; Tracked objects:
 16438 ;;		On entry : 0/0
 16439 ;;		On exit  : 0/0
 16440 ;;		Unchanged: 0/0
 16441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16442 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16443 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16444 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16445 ;;      Totals:         0       4       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16446 ;;Total ram usage:       11 bytes
 16447 ;; Hardware stack levels used:    1
 16448 ;; Hardware stack levels required when called:    2
 16449 ;; This function calls:
 16450 ;;		Nothing
 16451 ;; This function is called by:
 16452 ;;		_calculateTemp
 16453 ;;		_sprintf
 16454 ;; This function uses a non-reentrant model
 16455 ;;
 16456                           
 16457                           
 16458                           ;psect for function ___fltol
 16459  2019                     ___fltol:	
 16460                           
 16461                           ;incstack = 0
 16462                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 16463  2019  0020               	movlb	0	; select bank0
 16464  201A  086B               	movf	___fltol@f1,w
 16465  201B  0021               	movlb	1	; select bank1
 16466  201C  00A0               	movwf	??___fltol^(0+128)
 16467  201D  0020               	movlb	0	; select bank0
 16468  201E  086C               	movf	___fltol@f1+1,w
 16469  201F  0021               	movlb	1	; select bank1
 16470  2020  00A1               	movwf	(??___fltol^(0+128)+1)
 16471  2021  0020               	movlb	0	; select bank0
 16472  2022  086D               	movf	___fltol@f1+2,w
 16473  2023  0021               	movlb	1	; select bank1
 16474  2024  00A2               	movwf	(??___fltol^(0+128)+2)
 16475  2025  0020               	movlb	0	; select bank0
 16476  2026  086E               	movf	___fltol@f1+3,w
 16477  2027  0021               	movlb	1	; select bank1
 16478  2028  00A3               	movwf	(??___fltol^(0+128)+3)
 16479  2029  1003               	clrc
 16480  202A  0D22               	rlf	(??___fltol^(0+128)+2),w
 16481  202B  0D23               	rlf	(??___fltol^(0+128)+3),w
 16482  202C  00A4               	movwf	(??___fltol+4)^(0+128)
 16483  202D  0824               	movf	(??___fltol+4)^(0+128),w
 16484  202E  00A6               	movwf	___fltol@exp1^(0+128)
 16485  202F  0826               	movf	___fltol@exp1^(0+128),w
 16486  2030  1D03               	btfss	3,2
 16487  2031  283C               	goto	l7564
 16488  2032  3000               	movlw	0
 16489  2033  0020               	movlb	0	; select bank0
 16490  2034  00EE               	movwf	?___fltol+3
 16491  2035  3000               	movlw	0
 16492  2036  00ED               	movwf	?___fltol+2
 16493  2037  3000               	movlw	0
 16494  2038  00EC               	movwf	?___fltol+1
 16495  2039  3000               	movlw	0
 16496  203A  00EB               	movwf	?___fltol
 16497  203B  0008               	return
 16498  203C                     l7564:	
 16499  203C  0020               	movlb	0	; select bank0
 16500  203D  086B               	movf	___fltol@f1,w
 16501  203E  0021               	movlb	1	; select bank1
 16502  203F  00A0               	movwf	??___fltol^(0+128)
 16503  2040  0020               	movlb	0	; select bank0
 16504  2041  086C               	movf	___fltol@f1+1,w
 16505  2042  0021               	movlb	1	; select bank1
 16506  2043  00A1               	movwf	(??___fltol^(0+128)+1)
 16507  2044  0020               	movlb	0	; select bank0
 16508  2045  086D               	movf	___fltol@f1+2,w
 16509  2046  0021               	movlb	1	; select bank1
 16510  2047  00A2               	movwf	(??___fltol^(0+128)+2)
 16511  2048  0020               	movlb	0	; select bank0
 16512  2049  086E               	movf	___fltol@f1+3,w
 16513  204A  0021               	movlb	1	; select bank1
 16514  204B  00A3               	movwf	(??___fltol^(0+128)+3)
 16515  204C  301F               	movlw	31
 16516  204D                     u10105:	
 16517  204D  36A3               	lsrf	(??___fltol^(0+128)+3),f
 16518  204E  0CA2               	rrf	(??___fltol^(0+128)+2),f
 16519  204F  0CA1               	rrf	(??___fltol^(0+128)+1),f
 16520  2050  0CA0               	rrf	??___fltol^(0+128),f
 16521  2051  0B89               	decfsz	9,f
 16522  2052  284D               	goto	u10105
 16523  2053  0820               	movf	??___fltol^(0+128),w
 16524  2054  00A4               	movwf	(??___fltol+4)^(0+128)
 16525  2055  0824               	movf	(??___fltol+4)^(0+128),w
 16526  2056  00A5               	movwf	___fltol@sign1^(0+128)
 16527  2057  0020               	movlb	0	; select bank0
 16528  2058  17ED               	bsf	___fltol@f1+2,7
 16529  2059  30FF               	movlw	255
 16530  205A  05EB               	andwf	___fltol@f1,f
 16531  205B  30FF               	movlw	255
 16532  205C  05EC               	andwf	___fltol@f1+1,f
 16533  205D  30FF               	movlw	255
 16534  205E  05ED               	andwf	___fltol@f1+2,f
 16535  205F  3000               	movlw	0
 16536  2060  05EE               	andwf	___fltol@f1+3,f
 16537  2061  3096               	movlw	150
 16538  2062  0021               	movlb	1	; select bank1
 16539  2063  02A6               	subwf	___fltol@exp1^(0+128),f
 16540  2064  1FA6               	btfss	___fltol@exp1^(0+128),7
 16541  2065  2885               	goto	l7582
 16542  2066  0826               	movf	___fltol@exp1^(0+128),w
 16543  2067  3A80               	xorlw	128
 16544  2068  3E97               	addlw	151
 16545  2069  1803               	skipnc
 16546  206A  2875               	goto	l7580
 16547  206B  3000               	movlw	0
 16548  206C  0020               	movlb	0	; select bank0
 16549  206D  00EE               	movwf	?___fltol+3
 16550  206E  3000               	movlw	0
 16551  206F  00ED               	movwf	?___fltol+2
 16552  2070  3000               	movlw	0
 16553  2071  00EC               	movwf	?___fltol+1
 16554  2072  3000               	movlw	0
 16555  2073  00EB               	movwf	?___fltol
 16556  2074  0008               	return
 16557  2075                     l7580:	
 16558  2075  3001               	movlw	1
 16559  2076                     u10135:	
 16560  2076  0020               	movlb	0	; select bank0
 16561  2077  36EE               	lsrf	___fltol@f1+3,f
 16562  2078  0CED               	rrf	___fltol@f1+2,f
 16563  2079  0CEC               	rrf	___fltol@f1+1,f
 16564  207A  0CEB               	rrf	___fltol@f1,f
 16565  207B  0B89               	decfsz	9,f
 16566  207C  2876               	goto	u10135
 16567  207D  3001               	movlw	1
 16568  207E  0021               	movlb	1	; select bank1
 16569  207F  00A0               	movwf	??___fltol^(0+128)
 16570  2080  0820               	movf	??___fltol^(0+128),w
 16571  2081  07A6               	addwf	___fltol@exp1^(0+128),f
 16572  2082  1903               	btfsc	3,2
 16573  2083  28A2               	goto	l7590
 16574  2084  2875               	goto	l7580
 16575  2085                     l7582:	
 16576  2085  3020               	movlw	32
 16577  2086  0226               	subwf	___fltol@exp1^(0+128),w
 16578  2087  1C03               	skipc
 16579  2088  289E               	goto	l1194
 16580  2089  3000               	movlw	0
 16581  208A  0020               	movlb	0	; select bank0
 16582  208B  00EE               	movwf	?___fltol+3
 16583  208C  3000               	movlw	0
 16584  208D  00ED               	movwf	?___fltol+2
 16585  208E  3000               	movlw	0
 16586  208F  00EC               	movwf	?___fltol+1
 16587  2090  3000               	movlw	0
 16588  2091  00EB               	movwf	?___fltol
 16589  2092  0008               	return
 16590  2093                     l7588:	
 16591  2093  3001               	movlw	1
 16592  2094                     u10165:	
 16593  2094  0020               	movlb	0	; select bank0
 16594  2095  35EB               	lslf	___fltol@f1,f
 16595  2096  0DEC               	rlf	___fltol@f1+1,f
 16596  2097  0DED               	rlf	___fltol@f1+2,f
 16597  2098  0DEE               	rlf	___fltol@f1+3,f
 16598  2099  0B89               	decfsz	9,f
 16599  209A  2894               	goto	u10165
 16600  209B  3001               	movlw	1
 16601  209C  0021               	movlb	1	; select bank1
 16602  209D  02A6               	subwf	___fltol@exp1^(0+128),f
 16603  209E                     l1194:	
 16604  209E  0021               	movlb	1	; select bank1
 16605  209F  0826               	movf	___fltol@exp1^(0+128),w
 16606  20A0  1D03               	btfss	3,2
 16607  20A1  2893               	goto	l7588
 16608  20A2                     l7590:	
 16609  20A2  0825               	movf	___fltol@sign1^(0+128),w
 16610  20A3  1903               	btfsc	3,2
 16611  20A4  0008               	return
 16612  20A5  0020               	movlb	0	; select bank0
 16613  20A6  09EB               	comf	___fltol@f1,f
 16614  20A7  09EC               	comf	___fltol@f1+1,f
 16615  20A8  09ED               	comf	___fltol@f1+2,f
 16616  20A9  09EE               	comf	___fltol@f1+3,f
 16617  20AA  0AEB               	incf	___fltol@f1,f
 16618  20AB  1903               	skipnz
 16619  20AC  0AEC               	incf	___fltol@f1+1,f
 16620  20AD  1903               	skipnz
 16621  20AE  0AED               	incf	___fltol@f1+2,f
 16622  20AF  1903               	skipnz
 16623  20B0  0AEE               	incf	___fltol@f1+3,f
 16624  20B1  0008               	return
 16625  20B2                     __end_of___fltol:	
 16626                           
 16627                           	psect	text35
 16628  2A03                     __ptext35:	
 16629 ;; *************** function _getCurrent *****************
 16630 ;; Defined at:
 16631 ;;		line 24 in file "adc.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;		None
 16634 ;; Auto vars:     Size  Location     Type
 16635 ;;  currentValue    4   49[BANK1 ] float 
 16636 ;; Return value:  Size  Location     Type
 16637 ;;                  4   45[BANK1 ] float 
 16638 ;; Registers used:
 16639 ;;		wreg, status,2, status,0, pclath, cstack
 16640 ;; Tracked objects:
 16641 ;;		On entry : 0/0
 16642 ;;		On exit  : 0/0
 16643 ;;		Unchanged: 0/0
 16644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16645 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16646 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16648 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16649 ;;Total ram usage:        8 bytes
 16650 ;; Hardware stack levels used:    1
 16651 ;; Hardware stack levels required when called:    5
 16652 ;; This function calls:
 16653 ;;		___xxtofl
 16654 ;;		_adcRead
 16655 ;;		_calculateCurrent
 16656 ;; This function is called by:
 16657 ;;		_main
 16658 ;;		_startUp
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           
 16663                           ;psect for function _getCurrent
 16664  2A03                     _getCurrent:	
 16665                           
 16666                           ;adc.c: 25: float currentValue = (float)adcRead((char)10101);
 16667                           
 16668                           ;incstack = 0
 16669                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 16670  2A03  3075               	movlw	117
 16671  2A04  31AC  2452  31AA   	fcall	_adcRead
 16672  2A07  0872               	movf	?_adcRead,w
 16673  2A08  0020               	movlb	0	; select bank0
 16674  2A09  00AE               	movwf	___xxtofl@val
 16675  2A0A  0873               	movf	?_adcRead+1,w
 16676  2A0B  00AF               	movwf	___xxtofl@val+1
 16677  2A0C  0D89               	rlf	9,f
 16678  2A0D  3B89               	subwfb	9,f
 16679  2A0E  0989               	comf	9,f
 16680  2A0F  00B0               	movwf	___xxtofl@val+2
 16681  2A10  00B1               	movwf	___xxtofl@val+3
 16682  2A11  3001               	movlw	1
 16683  2A12  31AF  276A  31AA   	fcall	___xxtofl
 16684  2A15  0020               	movlb	0	; select bank0
 16685  2A16  0831               	movf	?___xxtofl+3,w
 16686  2A17  0021               	movlb	1	; select bank1
 16687  2A18  00D4               	movwf	(getCurrent@currentValue+3)^(0+128)
 16688  2A19  0020               	movlb	0	; select bank0
 16689  2A1A  0830               	movf	?___xxtofl+2,w
 16690  2A1B  0021               	movlb	1	; select bank1
 16691  2A1C  00D3               	movwf	(getCurrent@currentValue+2)^(0+128)
 16692  2A1D  0020               	movlb	0	; select bank0
 16693  2A1E  082F               	movf	?___xxtofl+1,w
 16694  2A1F  0021               	movlb	1	; select bank1
 16695  2A20  00D2               	movwf	(getCurrent@currentValue+1)^(0+128)
 16696  2A21  0020               	movlb	0	; select bank0
 16697  2A22  082E               	movf	?___xxtofl,w
 16698  2A23  0021               	movlb	1	; select bank1
 16699  2A24  00D1               	movwf	getCurrent@currentValue^(0+128)
 16700                           
 16701                           ;adc.c: 26: currentValue = calculateCurrent(currentValue);
 16702  2A25  0854               	movf	(getCurrent@currentValue+3)^(0+128),w
 16703  2A26  00C4               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 16704  2A27  0853               	movf	(getCurrent@currentValue+2)^(0+128),w
 16705  2A28  00C3               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 16706  2A29  0852               	movf	(getCurrent@currentValue+1)^(0+128),w
 16707  2A2A  00C2               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 16708  2A2B  0851               	movf	getCurrent@currentValue^(0+128),w
 16709  2A2C  00C1               	movwf	calculateCurrent@adcValue^(0+128)
 16710  2A2D  31AE  26E1         	fcall	_calculateCurrent
 16711  2A2F  0021               	movlb	1	; select bank1
 16712  2A30  0844               	movf	(?_calculateCurrent+3)^(0+128),w
 16713  2A31  00D4               	movwf	(getCurrent@currentValue+3)^(0+128)
 16714  2A32  0843               	movf	(?_calculateCurrent+2)^(0+128),w
 16715  2A33  00D3               	movwf	(getCurrent@currentValue+2)^(0+128)
 16716  2A34  0842               	movf	(?_calculateCurrent+1)^(0+128),w
 16717  2A35  00D2               	movwf	(getCurrent@currentValue+1)^(0+128)
 16718  2A36  0841               	movf	?_calculateCurrent^(0+128),w
 16719  2A37  00D1               	movwf	getCurrent@currentValue^(0+128)
 16720                           
 16721                           ;adc.c: 28: return currentValue;
 16722  2A38  0854               	movf	(getCurrent@currentValue+3)^(0+128),w
 16723  2A39  00D0               	movwf	(?_getCurrent+3)^(0+128)
 16724  2A3A  0853               	movf	(getCurrent@currentValue+2)^(0+128),w
 16725  2A3B  00CF               	movwf	(?_getCurrent+2)^(0+128)
 16726  2A3C  0852               	movf	(getCurrent@currentValue+1)^(0+128),w
 16727  2A3D  00CE               	movwf	(?_getCurrent+1)^(0+128)
 16728  2A3E  0851               	movf	getCurrent@currentValue^(0+128),w
 16729  2A3F  00CD               	movwf	?_getCurrent^(0+128)
 16730  2A40  0008               	return
 16731  2A41                     __end_of_getCurrent:	
 16732                           
 16733                           	psect	text36
 16734  2EE1                     __ptext36:	
 16735 ;; *************** function _calculateCurrent *****************
 16736 ;; Defined at:
 16737 ;;		line 19 in file "adc.c"
 16738 ;; Parameters:    Size  Location     Type
 16739 ;;  adcValue        4   33[BANK1 ] float 
 16740 ;; Auto vars:     Size  Location     Type
 16741 ;;  curr            4   37[BANK1 ] float 
 16742 ;; Return value:  Size  Location     Type
 16743 ;;                  4   33[BANK1 ] float 
 16744 ;; Registers used:
 16745 ;;		wreg, status,2, status,0, pclath, cstack
 16746 ;; Tracked objects:
 16747 ;;		On entry : 0/0
 16748 ;;		On exit  : 0/0
 16749 ;;		Unchanged: 0/0
 16750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16751 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16754 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16755 ;;Total ram usage:       12 bytes
 16756 ;; Hardware stack levels used:    1
 16757 ;; Hardware stack levels required when called:    4
 16758 ;; This function calls:
 16759 ;;		___fladd
 16760 ;;		___fldiv
 16761 ;;		___flmul
 16762 ;; This function is called by:
 16763 ;;		_getCurrent
 16764 ;; This function uses a non-reentrant model
 16765 ;;
 16766                           
 16767                           
 16768                           ;psect for function _calculateCurrent
 16769  2EE1                     _calculateCurrent:	
 16770                           
 16771                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16772                           
 16773                           ;incstack = 0
 16774                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16775  2EE1  30C0               	movlw	192
 16776  2EE2  0021               	movlb	1	; select bank1
 16777  2EE3  00AC               	movwf	(___fladd@b+3)^(0+128)
 16778  2EE4  3020               	movlw	32
 16779  2EE5  00AB               	movwf	(___fladd@b+2)^(0+128)
 16780  2EE6  3000               	movlw	0
 16781  2EE7  00AA               	movwf	(___fladd@b+1)^(0+128)
 16782  2EE8  3000               	movlw	0
 16783  2EE9  00A9               	movwf	___fladd@b^(0+128)
 16784  2EEA  3040               	movlw	64
 16785  2EEB  0020               	movlb	0	; select bank0
 16786  2EEC  00BB               	movwf	___flmul@b+3
 16787  2EED  30A0               	movlw	160
 16788  2EEE  00BA               	movwf	___flmul@b+2
 16789  2EEF  3000               	movlw	0
 16790  2EF0  00B9               	movwf	___flmul@b+1
 16791  2EF1  3000               	movlw	0
 16792  2EF2  00B8               	movwf	___flmul@b
 16793  2EF3  3045               	movlw	69
 16794  2EF4  00D5               	movwf	___fldiv@a+3
 16795  2EF5  307F               	movlw	127
 16796  2EF6  00D4               	movwf	___fldiv@a+2
 16797  2EF7  30F0               	movlw	240
 16798  2EF8  00D3               	movwf	___fldiv@a+1
 16799  2EF9  3000               	movlw	0
 16800  2EFA  00D2               	movwf	___fldiv@a
 16801  2EFB  0021               	movlb	1	; select bank1
 16802  2EFC  0844               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 16803  2EFD  0020               	movlb	0	; select bank0
 16804  2EFE  00D9               	movwf	___fldiv@b+3
 16805  2EFF  0021               	movlb	1	; select bank1
 16806  2F00  0843               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 16807  2F01  0020               	movlb	0	; select bank0
 16808  2F02  00D8               	movwf	___fldiv@b+2
 16809  2F03  0021               	movlb	1	; select bank1
 16810  2F04  0842               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 16811  2F05  0020               	movlb	0	; select bank0
 16812  2F06  00D7               	movwf	___fldiv@b+1
 16813  2F07  0021               	movlb	1	; select bank1
 16814  2F08  0841               	movf	calculateCurrent@adcValue^(0+128),w
 16815  2F09  0020               	movlb	0	; select bank0
 16816  2F0A  00D6               	movwf	___fldiv@b
 16817  2F0B  3190  2073  31AE   	fcall	___fldiv
 16818  2F0E  0020               	movlb	0	; select bank0
 16819  2F0F  0855               	movf	?___fldiv+3,w
 16820  2F10  00BF               	movwf	___flmul@a+3
 16821  2F11  0854               	movf	?___fldiv+2,w
 16822  2F12  00BE               	movwf	___flmul@a+2
 16823  2F13  0853               	movf	?___fldiv+1,w
 16824  2F14  00BD               	movwf	___flmul@a+1
 16825  2F15  0852               	movf	?___fldiv,w
 16826  2F16  00BC               	movwf	___flmul@a
 16827  2F17  3195  25D4  31AE   	fcall	___flmul
 16828  2F1A  0020               	movlb	0	; select bank0
 16829  2F1B  083B               	movf	?___flmul+3,w
 16830  2F1C  0021               	movlb	1	; select bank1
 16831  2F1D  00B0               	movwf	(___fladd@a+3)^(0+128)
 16832  2F1E  0020               	movlb	0	; select bank0
 16833  2F1F  083A               	movf	?___flmul+2,w
 16834  2F20  0021               	movlb	1	; select bank1
 16835  2F21  00AF               	movwf	(___fladd@a+2)^(0+128)
 16836  2F22  0020               	movlb	0	; select bank0
 16837  2F23  0839               	movf	?___flmul+1,w
 16838  2F24  0021               	movlb	1	; select bank1
 16839  2F25  00AE               	movwf	(___fladd@a+1)^(0+128)
 16840  2F26  0020               	movlb	0	; select bank0
 16841  2F27  0838               	movf	?___flmul,w
 16842  2F28  0021               	movlb	1	; select bank1
 16843  2F29  00AD               	movwf	___fladd@a^(0+128)
 16844  2F2A  3193  23D8  31AE   	fcall	___fladd
 16845  2F2D  0021               	movlb	1	; select bank1
 16846  2F2E  082C               	movf	(?___fladd+3)^(0+128),w
 16847  2F2F  00CC               	movwf	(_calculateCurrent$2184+3)^(0+128)
 16848  2F30  082B               	movf	(?___fladd+2)^(0+128),w
 16849  2F31  00CB               	movwf	(_calculateCurrent$2184+2)^(0+128)
 16850  2F32  082A               	movf	(?___fladd+1)^(0+128),w
 16851  2F33  00CA               	movwf	(_calculateCurrent$2184+1)^(0+128)
 16852  2F34  0829               	movf	?___fladd^(0+128),w
 16853  2F35  00C9               	movwf	_calculateCurrent$2184^(0+128)
 16854                           
 16855                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16856  2F36  303D               	movlw	61
 16857  2F37  0020               	movlb	0	; select bank0
 16858  2F38  00D5               	movwf	___fldiv@a+3
 16859  2F39  3021               	movlw	33
 16860  2F3A  00D4               	movwf	___fldiv@a+2
 16861  2F3B  3061               	movlw	97
 16862  2F3C  00D3               	movwf	___fldiv@a+1
 16863  2F3D  30E5               	movlw	229
 16864  2F3E  00D2               	movwf	___fldiv@a
 16865  2F3F  0021               	movlb	1	; select bank1
 16866  2F40  084C               	movf	(_calculateCurrent$2184+3)^(0+128),w
 16867  2F41  0020               	movlb	0	; select bank0
 16868  2F42  00D9               	movwf	___fldiv@b+3
 16869  2F43  0021               	movlb	1	; select bank1
 16870  2F44  084B               	movf	(_calculateCurrent$2184+2)^(0+128),w
 16871  2F45  0020               	movlb	0	; select bank0
 16872  2F46  00D8               	movwf	___fldiv@b+2
 16873  2F47  0021               	movlb	1	; select bank1
 16874  2F48  084A               	movf	(_calculateCurrent$2184+1)^(0+128),w
 16875  2F49  0020               	movlb	0	; select bank0
 16876  2F4A  00D7               	movwf	___fldiv@b+1
 16877  2F4B  0021               	movlb	1	; select bank1
 16878  2F4C  0849               	movf	_calculateCurrent$2184^(0+128),w
 16879  2F4D  0020               	movlb	0	; select bank0
 16880  2F4E  00D6               	movwf	___fldiv@b
 16881  2F4F  3190  2073         	fcall	___fldiv
 16882  2F51  0020               	movlb	0	; select bank0
 16883  2F52  0855               	movf	?___fldiv+3,w
 16884  2F53  0021               	movlb	1	; select bank1
 16885  2F54  00C8               	movwf	(calculateCurrent@curr+3)^(0+128)
 16886  2F55  0020               	movlb	0	; select bank0
 16887  2F56  0854               	movf	?___fldiv+2,w
 16888  2F57  0021               	movlb	1	; select bank1
 16889  2F58  00C7               	movwf	(calculateCurrent@curr+2)^(0+128)
 16890  2F59  0020               	movlb	0	; select bank0
 16891  2F5A  0853               	movf	?___fldiv+1,w
 16892  2F5B  0021               	movlb	1	; select bank1
 16893  2F5C  00C6               	movwf	(calculateCurrent@curr+1)^(0+128)
 16894  2F5D  0020               	movlb	0	; select bank0
 16895  2F5E  0852               	movf	?___fldiv,w
 16896  2F5F  0021               	movlb	1	; select bank1
 16897  2F60  00C5               	movwf	calculateCurrent@curr^(0+128)
 16898                           
 16899                           ;adc.c: 21: return curr;
 16900  2F61  0848               	movf	(calculateCurrent@curr+3)^(0+128),w
 16901  2F62  00C4               	movwf	(?_calculateCurrent+3)^(0+128)
 16902  2F63  0847               	movf	(calculateCurrent@curr+2)^(0+128),w
 16903  2F64  00C3               	movwf	(?_calculateCurrent+2)^(0+128)
 16904  2F65  0846               	movf	(calculateCurrent@curr+1)^(0+128),w
 16905  2F66  00C2               	movwf	(?_calculateCurrent+1)^(0+128)
 16906  2F67  0845               	movf	calculateCurrent@curr^(0+128),w
 16907  2F68  00C1               	movwf	?_calculateCurrent^(0+128)
 16908  2F69  0008               	return
 16909  2F6A                     __end_of_calculateCurrent:	
 16910                           
 16911                           	psect	text37
 16912  15D4                     __ptext37:	
 16913 ;; *************** function ___flmul *****************
 16914 ;; Defined at:
 16915 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16916 ;; Parameters:    Size  Location     Type
 16917 ;;  b               4   24[BANK0 ] float 
 16918 ;;  a               4   28[BANK0 ] float 
 16919 ;; Auto vars:     Size  Location     Type
 16920 ;;  prod            4   44[BANK0 ] struct .
 16921 ;;  grs             4   39[BANK0 ] unsigned long 
 16922 ;;  temp            2   48[BANK0 ] struct .
 16923 ;;  bexp            1   43[BANK0 ] unsigned char 
 16924 ;;  aexp            1   38[BANK0 ] unsigned char 
 16925 ;;  sign            1   37[BANK0 ] unsigned char 
 16926 ;; Return value:  Size  Location     Type
 16927 ;;                  4   24[BANK0 ] unsigned char 
 16928 ;; Registers used:
 16929 ;;		wreg, status,2, status,0, pclath, cstack
 16930 ;; Tracked objects:
 16931 ;;		On entry : 0/0
 16932 ;;		On exit  : 0/0
 16933 ;;		Unchanged: 0/0
 16934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16935 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16936 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16937 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16938 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16939 ;;Total ram usage:       26 bytes
 16940 ;; Hardware stack levels used:    1
 16941 ;; Hardware stack levels required when called:    3
 16942 ;; This function calls:
 16943 ;;		__Umul8_16
 16944 ;; This function is called by:
 16945 ;;		_main
 16946 ;;		_calculateTemp
 16947 ;;		_calculateCurrent
 16948 ;;		_writeSOC
 16949 ;;		_measureVoltages
 16950 ;;		_fround
 16951 ;;		_scale
 16952 ;;		_sprintf
 16953 ;; This function uses a non-reentrant model
 16954 ;;
 16955                           
 16956                           
 16957                           ;psect for function ___flmul
 16958  15D4                     ___flmul:	
 16959                           
 16960                           ;incstack = 0
 16961                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16962  15D4  0020               	movlb	0	; select bank0
 16963  15D5  083B               	movf	___flmul@b+3,w
 16964  15D6  3980               	andlw	128
 16965  15D7  00C0               	movwf	??___flmul
 16966  15D8  0840               	movf	??___flmul,w
 16967  15D9  00C5               	movwf	___flmul@sign
 16968  15DA  353B               	lslf	___flmul@b+3,w
 16969  15DB  00C0               	movwf	??___flmul
 16970  15DC  0840               	movf	??___flmul,w
 16971  15DD  00CB               	movwf	___flmul@bexp
 16972  15DE  1BBA               	btfsc	___flmul@b+2,7
 16973  15DF  144B               	bsf	___flmul@bexp,0
 16974  15E0  084B               	movf	___flmul@bexp,w
 16975  15E1  1903               	btfsc	3,2
 16976  15E2  2DF0               	goto	l7032
 16977  15E3  0A4B               	incf	___flmul@bexp,w
 16978  15E4  1D03               	btfss	3,2
 16979  15E5  2DEE               	goto	l7030
 16980  15E6  3000               	movlw	0
 16981  15E7  00BB               	movwf	___flmul@b+3
 16982  15E8  3000               	movlw	0
 16983  15E9  00BA               	movwf	___flmul@b+2
 16984  15EA  3000               	movlw	0
 16985  15EB  00B9               	movwf	___flmul@b+1
 16986  15EC  3000               	movlw	0
 16987  15ED  00B8               	movwf	___flmul@b
 16988  15EE                     l7030:	
 16989  15EE  17BA               	bsf	___flmul@b+2,7
 16990  15EF  2DF8               	goto	l7034
 16991  15F0                     l7032:	
 16992  15F0  3000               	movlw	0
 16993  15F1  00BB               	movwf	___flmul@b+3
 16994  15F2  3000               	movlw	0
 16995  15F3  00BA               	movwf	___flmul@b+2
 16996  15F4  3000               	movlw	0
 16997  15F5  00B9               	movwf	___flmul@b+1
 16998  15F6  3000               	movlw	0
 16999  15F7  00B8               	movwf	___flmul@b
 17000  15F8                     l7034:	
 17001  15F8  083F               	movf	___flmul@a+3,w
 17002  15F9  3980               	andlw	128
 17003  15FA  00C0               	movwf	??___flmul
 17004  15FB  0840               	movf	??___flmul,w
 17005  15FC  06C5               	xorwf	___flmul@sign,f
 17006  15FD  353F               	lslf	___flmul@a+3,w
 17007  15FE  00C0               	movwf	??___flmul
 17008  15FF  0840               	movf	??___flmul,w
 17009  1600  00C6               	movwf	___flmul@aexp
 17010  1601  1BBE               	btfsc	___flmul@a+2,7
 17011  1602  1446               	bsf	___flmul@aexp,0
 17012  1603  0846               	movf	___flmul@aexp,w
 17013  1604  1903               	btfsc	3,2
 17014  1605  2E13               	goto	l7050
 17015  1606  0A46               	incf	___flmul@aexp,w
 17016  1607  1D03               	btfss	3,2
 17017  1608  2E11               	goto	l7048
 17018  1609  3000               	movlw	0
 17019  160A  00BF               	movwf	___flmul@a+3
 17020  160B  3000               	movlw	0
 17021  160C  00BE               	movwf	___flmul@a+2
 17022  160D  3000               	movlw	0
 17023  160E  00BD               	movwf	___flmul@a+1
 17024  160F  3000               	movlw	0
 17025  1610  00BC               	movwf	___flmul@a
 17026  1611                     l7048:	
 17027  1611  17BE               	bsf	___flmul@a+2,7
 17028  1612  2E1B               	goto	l7052
 17029  1613                     l7050:	
 17030  1613  3000               	movlw	0
 17031  1614  00BF               	movwf	___flmul@a+3
 17032  1615  3000               	movlw	0
 17033  1616  00BE               	movwf	___flmul@a+2
 17034  1617  3000               	movlw	0
 17035  1618  00BD               	movwf	___flmul@a+1
 17036  1619  3000               	movlw	0
 17037  161A  00BC               	movwf	___flmul@a
 17038  161B                     l7052:	
 17039  161B  0846               	movf	___flmul@aexp,w
 17040  161C  1D03               	btfss	3,2
 17041  161D  084B               	movf	___flmul@bexp,w
 17042  161E  1D03               	btfss	3,2
 17043  161F  2E29               	goto	l7060
 17044  1620  3000               	movlw	0
 17045  1621  00BB               	movwf	?___flmul+3
 17046  1622  3000               	movlw	0
 17047  1623  00BA               	movwf	?___flmul+2
 17048  1624  3000               	movlw	0
 17049  1625  00B9               	movwf	?___flmul+1
 17050  1626  3000               	movlw	0
 17051  1627  00B8               	movwf	?___flmul
 17052  1628  0008               	return
 17053  1629                     l7060:	
 17054  1629  0838               	movf	___flmul@b,w
 17055  162A  00C0               	movwf	??___flmul
 17056  162B  0840               	movf	??___flmul,w
 17057  162C  00F2               	movwf	__Umul8_16@multiplicand
 17058  162D  083E               	movf	___flmul@a+2,w
 17059  162E  31A9  2123  3195   	fcall	__Umul8_16
 17060  1631  0873               	movf	?__Umul8_16+1,w
 17061  1632  0020               	movlb	0	; select bank0
 17062  1633  00D1               	movwf	___flmul@temp+1
 17063  1634  0872               	movf	?__Umul8_16,w
 17064  1635  00D0               	movwf	___flmul@temp
 17065  1636  0850               	movf	___flmul@temp,w
 17066  1637  00C0               	movwf	??___flmul
 17067  1638  01C1               	clrf	??___flmul+1
 17068  1639  01C2               	clrf	??___flmul+2
 17069  163A  01C3               	clrf	??___flmul+3
 17070  163B  0843               	movf	??___flmul+3,w
 17071  163C  00CA               	movwf	___flmul@grs+3
 17072  163D  0842               	movf	??___flmul+2,w
 17073  163E  00C9               	movwf	___flmul@grs+2
 17074  163F  0841               	movf	??___flmul+1,w
 17075  1640  00C8               	movwf	___flmul@grs+1
 17076  1641  0840               	movf	??___flmul,w
 17077  1642  00C7               	movwf	___flmul@grs
 17078  1643  0851               	movf	___flmul@temp+1,w
 17079  1644  00C0               	movwf	??___flmul
 17080  1645  01C1               	clrf	??___flmul+1
 17081  1646  01C2               	clrf	??___flmul+2
 17082  1647  01C3               	clrf	??___flmul+3
 17083  1648  0843               	movf	??___flmul+3,w
 17084  1649  00CF               	movwf	___flmul@prod+3
 17085  164A  0842               	movf	??___flmul+2,w
 17086  164B  00CE               	movwf	___flmul@prod+2
 17087  164C  0841               	movf	??___flmul+1,w
 17088  164D  00CD               	movwf	___flmul@prod+1
 17089  164E  0840               	movf	??___flmul,w
 17090  164F  00CC               	movwf	___flmul@prod
 17091  1650  0839               	movf	___flmul@b+1,w
 17092  1651  00C0               	movwf	??___flmul
 17093  1652  0840               	movf	??___flmul,w
 17094  1653  00F2               	movwf	__Umul8_16@multiplicand
 17095  1654  083D               	movf	___flmul@a+1,w
 17096  1655  31A9  2123  3195   	fcall	__Umul8_16
 17097  1658  0873               	movf	?__Umul8_16+1,w
 17098  1659  0020               	movlb	0	; select bank0
 17099  165A  00D1               	movwf	___flmul@temp+1
 17100  165B  0872               	movf	?__Umul8_16,w
 17101  165C  00D0               	movwf	___flmul@temp
 17102  165D  0850               	movf	___flmul@temp,w
 17103  165E  00C0               	movwf	??___flmul
 17104  165F  01C1               	clrf	??___flmul+1
 17105  1660  01C2               	clrf	??___flmul+2
 17106  1661  01C3               	clrf	??___flmul+3
 17107  1662  0840               	movf	??___flmul,w
 17108  1663  07C7               	addwf	___flmul@grs,f
 17109  1664  0841               	movf	??___flmul+1,w
 17110  1665  3DC8               	addwfc	___flmul@grs+1,f
 17111  1666  0842               	movf	??___flmul+2,w
 17112  1667  3DC9               	addwfc	___flmul@grs+2,f
 17113  1668  0843               	movf	??___flmul+3,w
 17114  1669  3DCA               	addwfc	___flmul@grs+3,f
 17115  166A  0851               	movf	___flmul@temp+1,w
 17116  166B  00C0               	movwf	??___flmul
 17117  166C  01C1               	clrf	??___flmul+1
 17118  166D  01C2               	clrf	??___flmul+2
 17119  166E  01C3               	clrf	??___flmul+3
 17120  166F  0840               	movf	??___flmul,w
 17121  1670  07CC               	addwf	___flmul@prod,f
 17122  1671  0841               	movf	??___flmul+1,w
 17123  1672  3DCD               	addwfc	___flmul@prod+1,f
 17124  1673  0842               	movf	??___flmul+2,w
 17125  1674  3DCE               	addwfc	___flmul@prod+2,f
 17126  1675  0843               	movf	??___flmul+3,w
 17127  1676  3DCF               	addwfc	___flmul@prod+3,f
 17128  1677  083A               	movf	___flmul@b+2,w
 17129  1678  00C0               	movwf	??___flmul
 17130  1679  0840               	movf	??___flmul,w
 17131  167A  00F2               	movwf	__Umul8_16@multiplicand
 17132  167B  083C               	movf	___flmul@a,w
 17133  167C  31A9  2123  3195   	fcall	__Umul8_16
 17134  167F  0873               	movf	?__Umul8_16+1,w
 17135  1680  0020               	movlb	0	; select bank0
 17136  1681  00D1               	movwf	___flmul@temp+1
 17137  1682  0872               	movf	?__Umul8_16,w
 17138  1683  00D0               	movwf	___flmul@temp
 17139  1684  0850               	movf	___flmul@temp,w
 17140  1685  00C0               	movwf	??___flmul
 17141  1686  01C1               	clrf	??___flmul+1
 17142  1687  01C2               	clrf	??___flmul+2
 17143  1688  01C3               	clrf	??___flmul+3
 17144  1689  0840               	movf	??___flmul,w
 17145  168A  07C7               	addwf	___flmul@grs,f
 17146  168B  0841               	movf	??___flmul+1,w
 17147  168C  3DC8               	addwfc	___flmul@grs+1,f
 17148  168D  0842               	movf	??___flmul+2,w
 17149  168E  3DC9               	addwfc	___flmul@grs+2,f
 17150  168F  0843               	movf	??___flmul+3,w
 17151  1690  3DCA               	addwfc	___flmul@grs+3,f
 17152  1691  0851               	movf	___flmul@temp+1,w
 17153  1692  00C0               	movwf	??___flmul
 17154  1693  01C1               	clrf	??___flmul+1
 17155  1694  01C2               	clrf	??___flmul+2
 17156  1695  01C3               	clrf	??___flmul+3
 17157  1696  0840               	movf	??___flmul,w
 17158  1697  07CC               	addwf	___flmul@prod,f
 17159  1698  0841               	movf	??___flmul+1,w
 17160  1699  3DCD               	addwfc	___flmul@prod+1,f
 17161  169A  0842               	movf	??___flmul+2,w
 17162  169B  3DCE               	addwfc	___flmul@prod+2,f
 17163  169C  0843               	movf	??___flmul+3,w
 17164  169D  3DCF               	addwfc	___flmul@prod+3,f
 17165  169E  3008               	movlw	8
 17166  169F                     u9255:	
 17167  169F  35C7               	lslf	___flmul@grs,f
 17168  16A0  0DC8               	rlf	___flmul@grs+1,f
 17169  16A1  0DC9               	rlf	___flmul@grs+2,f
 17170  16A2  0DCA               	rlf	___flmul@grs+3,f
 17171  16A3  0B89               	decfsz	9,f
 17172  16A4  2E9F               	goto	u9255
 17173  16A5  0839               	movf	___flmul@b+1,w
 17174  16A6  00C0               	movwf	??___flmul
 17175  16A7  0840               	movf	??___flmul,w
 17176  16A8  00F2               	movwf	__Umul8_16@multiplicand
 17177  16A9  083C               	movf	___flmul@a,w
 17178  16AA  31A9  2123  3195   	fcall	__Umul8_16
 17179  16AD  0873               	movf	?__Umul8_16+1,w
 17180  16AE  0020               	movlb	0	; select bank0
 17181  16AF  00D1               	movwf	___flmul@temp+1
 17182  16B0  0872               	movf	?__Umul8_16,w
 17183  16B1  00D0               	movwf	___flmul@temp
 17184  16B2  0850               	movf	___flmul@temp,w
 17185  16B3  07C7               	addwf	___flmul@grs,f
 17186  16B4  0851               	movf	___flmul@temp+1,w
 17187  16B5  3DC8               	addwfc	___flmul@grs+1,f
 17188  16B6  3000               	movlw	0
 17189  16B7  3DC9               	addwfc	___flmul@grs+2,f
 17190  16B8  3DCA               	addwfc	___flmul@grs+3,f
 17191  16B9  0838               	movf	___flmul@b,w
 17192  16BA  00C0               	movwf	??___flmul
 17193  16BB  0840               	movf	??___flmul,w
 17194  16BC  00F2               	movwf	__Umul8_16@multiplicand
 17195  16BD  083D               	movf	___flmul@a+1,w
 17196  16BE  31A9  2123  3195   	fcall	__Umul8_16
 17197  16C1  0873               	movf	?__Umul8_16+1,w
 17198  16C2  0020               	movlb	0	; select bank0
 17199  16C3  00D1               	movwf	___flmul@temp+1
 17200  16C4  0872               	movf	?__Umul8_16,w
 17201  16C5  00D0               	movwf	___flmul@temp
 17202  16C6  0850               	movf	___flmul@temp,w
 17203  16C7  07C7               	addwf	___flmul@grs,f
 17204  16C8  0851               	movf	___flmul@temp+1,w
 17205  16C9  3DC8               	addwfc	___flmul@grs+1,f
 17206  16CA  3000               	movlw	0
 17207  16CB  3DC9               	addwfc	___flmul@grs+2,f
 17208  16CC  3DCA               	addwfc	___flmul@grs+3,f
 17209  16CD  3008               	movlw	8
 17210  16CE                     u9265:	
 17211  16CE  35C7               	lslf	___flmul@grs,f
 17212  16CF  0DC8               	rlf	___flmul@grs+1,f
 17213  16D0  0DC9               	rlf	___flmul@grs+2,f
 17214  16D1  0DCA               	rlf	___flmul@grs+3,f
 17215  16D2  0B89               	decfsz	9,f
 17216  16D3  2ECE               	goto	u9265
 17217  16D4  0838               	movf	___flmul@b,w
 17218  16D5  00C0               	movwf	??___flmul
 17219  16D6  0840               	movf	??___flmul,w
 17220  16D7  00F2               	movwf	__Umul8_16@multiplicand
 17221  16D8  083C               	movf	___flmul@a,w
 17222  16D9  31A9  2123  3195   	fcall	__Umul8_16
 17223  16DC  0873               	movf	?__Umul8_16+1,w
 17224  16DD  0020               	movlb	0	; select bank0
 17225  16DE  00D1               	movwf	___flmul@temp+1
 17226  16DF  0872               	movf	?__Umul8_16,w
 17227  16E0  00D0               	movwf	___flmul@temp
 17228  16E1  0850               	movf	___flmul@temp,w
 17229  16E2  07C7               	addwf	___flmul@grs,f
 17230  16E3  0851               	movf	___flmul@temp+1,w
 17231  16E4  3DC8               	addwfc	___flmul@grs+1,f
 17232  16E5  3000               	movlw	0
 17233  16E6  3DC9               	addwfc	___flmul@grs+2,f
 17234  16E7  3DCA               	addwfc	___flmul@grs+3,f
 17235  16E8  0839               	movf	___flmul@b+1,w
 17236  16E9  00C0               	movwf	??___flmul
 17237  16EA  0840               	movf	??___flmul,w
 17238  16EB  00F2               	movwf	__Umul8_16@multiplicand
 17239  16EC  083E               	movf	___flmul@a+2,w
 17240  16ED  31A9  2123  3195   	fcall	__Umul8_16
 17241  16F0  0873               	movf	?__Umul8_16+1,w
 17242  16F1  0020               	movlb	0	; select bank0
 17243  16F2  00D1               	movwf	___flmul@temp+1
 17244  16F3  0872               	movf	?__Umul8_16,w
 17245  16F4  00D0               	movwf	___flmul@temp
 17246  16F5  0850               	movf	___flmul@temp,w
 17247  16F6  07CC               	addwf	___flmul@prod,f
 17248  16F7  0851               	movf	___flmul@temp+1,w
 17249  16F8  3DCD               	addwfc	___flmul@prod+1,f
 17250  16F9  3000               	movlw	0
 17251  16FA  3DCE               	addwfc	___flmul@prod+2,f
 17252  16FB  3DCF               	addwfc	___flmul@prod+3,f
 17253  16FC  083A               	movf	___flmul@b+2,w
 17254  16FD  00C0               	movwf	??___flmul
 17255  16FE  0840               	movf	??___flmul,w
 17256  16FF  00F2               	movwf	__Umul8_16@multiplicand
 17257  1700  083D               	movf	___flmul@a+1,w
 17258  1701  31A9  2123  3195   	fcall	__Umul8_16
 17259  1704  0873               	movf	?__Umul8_16+1,w
 17260  1705  0020               	movlb	0	; select bank0
 17261  1706  00D1               	movwf	___flmul@temp+1
 17262  1707  0872               	movf	?__Umul8_16,w
 17263  1708  00D0               	movwf	___flmul@temp
 17264  1709  0850               	movf	___flmul@temp,w
 17265  170A  07CC               	addwf	___flmul@prod,f
 17266  170B  0851               	movf	___flmul@temp+1,w
 17267  170C  3DCD               	addwfc	___flmul@prod+1,f
 17268  170D  3000               	movlw	0
 17269  170E  3DCE               	addwfc	___flmul@prod+2,f
 17270  170F  3DCF               	addwfc	___flmul@prod+3,f
 17271  1710  083A               	movf	___flmul@b+2,w
 17272  1711  00C0               	movwf	??___flmul
 17273  1712  0840               	movf	??___flmul,w
 17274  1713  00F2               	movwf	__Umul8_16@multiplicand
 17275  1714  083E               	movf	___flmul@a+2,w
 17276  1715  31A9  2123  3195   	fcall	__Umul8_16
 17277  1718  0873               	movf	?__Umul8_16+1,w
 17278  1719  0020               	movlb	0	; select bank0
 17279  171A  00D1               	movwf	___flmul@temp+1
 17280  171B  0872               	movf	?__Umul8_16,w
 17281  171C  00D0               	movwf	___flmul@temp
 17282  171D  0850               	movf	___flmul@temp,w
 17283  171E  00C0               	movwf	??___flmul
 17284  171F  0851               	movf	___flmul@temp+1,w
 17285  1720  00C1               	movwf	??___flmul+1
 17286  1721  01C2               	clrf	??___flmul+2
 17287  1722  01C3               	clrf	??___flmul+3
 17288  1723  3008               	movlw	8
 17289  1724                     u9275:	
 17290  1724  35C0               	lslf	??___flmul,f
 17291  1725  0DC1               	rlf	??___flmul+1,f
 17292  1726  0DC2               	rlf	??___flmul+2,f
 17293  1727  0DC3               	rlf	??___flmul+3,f
 17294  1728  0B89               	decfsz	9,f
 17295  1729  2F24               	goto	u9275
 17296  172A  0840               	movf	??___flmul,w
 17297  172B  07CC               	addwf	___flmul@prod,f
 17298  172C  0841               	movf	??___flmul+1,w
 17299  172D  3DCD               	addwfc	___flmul@prod+1,f
 17300  172E  0842               	movf	??___flmul+2,w
 17301  172F  3DCE               	addwfc	___flmul@prod+2,f
 17302  1730  0843               	movf	??___flmul+3,w
 17303  1731  3DCF               	addwfc	___flmul@prod+3,f
 17304  1732  0847               	movf	___flmul@grs,w
 17305  1733  00C0               	movwf	??___flmul
 17306  1734  0848               	movf	___flmul@grs+1,w
 17307  1735  00C1               	movwf	??___flmul+1
 17308  1736  0849               	movf	___flmul@grs+2,w
 17309  1737  00C2               	movwf	??___flmul+2
 17310  1738  084A               	movf	___flmul@grs+3,w
 17311  1739  00C3               	movwf	??___flmul+3
 17312  173A  3018               	movlw	24
 17313  173B                     u9285:	
 17314  173B  36C3               	lsrf	??___flmul+3,f
 17315  173C  0CC2               	rrf	??___flmul+2,f
 17316  173D  0CC1               	rrf	??___flmul+1,f
 17317  173E  0CC0               	rrf	??___flmul,f
 17318  173F  0B89               	decfsz	9,f
 17319  1740  2F3B               	goto	u9285
 17320  1741  0840               	movf	??___flmul,w
 17321  1742  07CC               	addwf	___flmul@prod,f
 17322  1743  0841               	movf	??___flmul+1,w
 17323  1744  3DCD               	addwfc	___flmul@prod+1,f
 17324  1745  0842               	movf	??___flmul+2,w
 17325  1746  3DCE               	addwfc	___flmul@prod+2,f
 17326  1747  0843               	movf	??___flmul+3,w
 17327  1748  3DCF               	addwfc	___flmul@prod+3,f
 17328  1749  3008               	movlw	8
 17329  174A                     u9295:	
 17330  174A  35C7               	lslf	___flmul@grs,f
 17331  174B  0DC8               	rlf	___flmul@grs+1,f
 17332  174C  0DC9               	rlf	___flmul@grs+2,f
 17333  174D  0DCA               	rlf	___flmul@grs+3,f
 17334  174E  0B89               	decfsz	9,f
 17335  174F  2F4A               	goto	u9295
 17336  1750  084B               	movf	___flmul@bexp,w
 17337  1751  0746               	addwf	___flmul@aexp,w
 17338  1752  00C0               	movwf	??___flmul
 17339  1753  01C1               	clrf	??___flmul+1
 17340  1754  0DC1               	rlf	??___flmul+1,f
 17341  1755  0840               	movf	??___flmul,w
 17342  1756  3E82               	addlw	130
 17343  1757  00D0               	movwf	___flmul@temp
 17344  1758  30FF               	movlw	255
 17345  1759  3D41               	addwfc	??___flmul+1,w
 17346  175A  00D1               	movwf	___flmul@temp+1
 17347  175B                     l7112:	
 17348  175B  1BCE               	btfsc	___flmul@prod+2,7
 17349  175C  2F72               	goto	l7114
 17350  175D  3001               	movlw	1
 17351  175E                     u9305:	
 17352  175E  35CC               	lslf	___flmul@prod,f
 17353  175F  0DCD               	rlf	___flmul@prod+1,f
 17354  1760  0DCE               	rlf	___flmul@prod+2,f
 17355  1761  0DCF               	rlf	___flmul@prod+3,f
 17356  1762  0B89               	decfsz	9,f
 17357  1763  2F5E               	goto	u9305
 17358  1764  1BCA               	btfsc	___flmul@grs+3,7
 17359  1765  144C               	bsf	___flmul@prod,0
 17360  1766  3001               	movlw	1
 17361  1767                     u9325:	
 17362  1767  35C7               	lslf	___flmul@grs,f
 17363  1768  0DC8               	rlf	___flmul@grs+1,f
 17364  1769  0DC9               	rlf	___flmul@grs+2,f
 17365  176A  0DCA               	rlf	___flmul@grs+3,f
 17366  176B  0B89               	decfsz	9,f
 17367  176C  2F67               	goto	u9325
 17368  176D  30FF               	movlw	255
 17369  176E  07D0               	addwf	___flmul@temp,f
 17370  176F  30FF               	movlw	255
 17371  1770  3DD1               	addwfc	___flmul@temp+1,f
 17372  1771  2F5B               	goto	l7112
 17373  1772                     l7114:	
 17374  1772  01C6               	clrf	___flmul@aexp
 17375  1773  1FCA               	btfss	___flmul@grs+3,7
 17376  1774  2F8B               	goto	l7124
 17377  1775  30FF               	movlw	255
 17378  1776  0547               	andwf	___flmul@grs,w
 17379  1777  00C0               	movwf	??___flmul
 17380  1778  30FF               	movlw	255
 17381  1779  0548               	andwf	___flmul@grs+1,w
 17382  177A  00C1               	movwf	??___flmul+1
 17383  177B  30FF               	movlw	255
 17384  177C  0549               	andwf	___flmul@grs+2,w
 17385  177D  00C2               	movwf	??___flmul+2
 17386  177E  307F               	movlw	127
 17387  177F  054A               	andwf	___flmul@grs+3,w
 17388  1780  00C3               	movwf	??___flmul+3
 17389  1781  0843               	movf	??___flmul+3,w
 17390  1782  0442               	iorwf	??___flmul+2,w
 17391  1783  0441               	iorwf	??___flmul+1,w
 17392  1784  0440               	iorwf	??___flmul,w
 17393  1785  1D03               	btfss	3,2
 17394  1786  2F89               	goto	l7122
 17395  1787  1C4C               	btfss	___flmul@prod,0
 17396  1788  2F8B               	goto	l7124
 17397  1789                     l7122:	
 17398  1789  01C6               	clrf	___flmul@aexp
 17399  178A  0AC6               	incf	___flmul@aexp,f
 17400  178B                     l7124:	
 17401  178B  0846               	movf	___flmul@aexp,w
 17402  178C  1903               	btfsc	3,2
 17403  178D  2FB4               	goto	l7134
 17404  178E  3001               	movlw	1
 17405  178F  07CC               	addwf	___flmul@prod,f
 17406  1790  3000               	movlw	0
 17407  1791  3DCD               	addwfc	___flmul@prod+1,f
 17408  1792  3000               	movlw	0
 17409  1793  3DCE               	addwfc	___flmul@prod+2,f
 17410  1794  3000               	movlw	0
 17411  1795  3DCF               	addwfc	___flmul@prod+3,f
 17412  1796  1C4F               	btfss	___flmul@prod+3,0
 17413  1797  2FB4               	goto	l7134
 17414  1798  084C               	movf	___flmul@prod,w
 17415  1799  00C0               	movwf	??___flmul
 17416  179A  084D               	movf	___flmul@prod+1,w
 17417  179B  00C1               	movwf	??___flmul+1
 17418  179C  084E               	movf	___flmul@prod+2,w
 17419  179D  00C2               	movwf	??___flmul+2
 17420  179E  084F               	movf	___flmul@prod+3,w
 17421  179F  00C3               	movwf	??___flmul+3
 17422  17A0  3001               	movlw	1
 17423  17A1  00C4               	movwf	??___flmul+4
 17424  17A2                     u9395:	
 17425  17A2  37C3               	asrf	??___flmul+3,f
 17426  17A3  0CC2               	rrf	??___flmul+2,f
 17427  17A4  0CC1               	rrf	??___flmul+1,f
 17428  17A5  0CC0               	rrf	??___flmul,f
 17429  17A6  0BC4               	decfsz	??___flmul+4,f
 17430  17A7  2FA2               	goto	u9395
 17431  17A8  0843               	movf	??___flmul+3,w
 17432  17A9  00CF               	movwf	___flmul@prod+3
 17433  17AA  0842               	movf	??___flmul+2,w
 17434  17AB  00CE               	movwf	___flmul@prod+2
 17435  17AC  0841               	movf	??___flmul+1,w
 17436  17AD  00CD               	movwf	___flmul@prod+1
 17437  17AE  0840               	movf	??___flmul,w
 17438  17AF  00CC               	movwf	___flmul@prod
 17439  17B0  3001               	movlw	1
 17440  17B1  07D0               	addwf	___flmul@temp,f
 17441  17B2  3000               	movlw	0
 17442  17B3  3DD1               	addwfc	___flmul@temp+1,f
 17443  17B4                     l7134:	
 17444  17B4  0851               	movf	___flmul@temp+1,w
 17445  17B5  3A80               	xorlw	128
 17446  17B6  00C0               	movwf	??___flmul
 17447  17B7  3080               	movlw	128
 17448  17B8  0240               	subwf	??___flmul,w
 17449  17B9  1D03               	skipz
 17450  17BA  2FBD               	goto	u9405
 17451  17BB  30FF               	movlw	255
 17452  17BC  0250               	subwf	___flmul@temp,w
 17453  17BD                     u9405:	
 17454  17BD  1C03               	skipc
 17455  17BE  2FC9               	goto	l7138
 17456  17BF  307F               	movlw	127
 17457  17C0  0020               	movlb	0	; select bank0
 17458  17C1  00CF               	movwf	___flmul@prod+3
 17459  17C2  3080               	movlw	128
 17460  17C3  00CE               	movwf	___flmul@prod+2
 17461  17C4  3000               	movlw	0
 17462  17C5  00CD               	movwf	___flmul@prod+1
 17463  17C6  3000               	movlw	0
 17464  17C7  00CC               	movwf	___flmul@prod
 17465  17C8  2FF3               	goto	l1418
 17466  17C9                     l7138:	
 17467  17C9  0020               	movlb	0	; select bank0
 17468  17CA  0851               	movf	___flmul@temp+1,w
 17469  17CB  3A80               	xorlw	128
 17470  17CC  00C0               	movwf	??___flmul
 17471  17CD  3080               	movlw	128
 17472  17CE  0240               	subwf	??___flmul,w
 17473  17CF  1D03               	skipz
 17474  17D0  2FD3               	goto	u9415
 17475  17D1  3001               	movlw	1
 17476  17D2  0250               	subwf	___flmul@temp,w
 17477  17D3                     u9415:	
 17478  17D3  1803               	skipnc
 17479  17D4  2FE0               	goto	l7144
 17480  17D5  3000               	movlw	0
 17481  17D6  0020               	movlb	0	; select bank0
 17482  17D7  00CF               	movwf	___flmul@prod+3
 17483  17D8  3000               	movlw	0
 17484  17D9  00CE               	movwf	___flmul@prod+2
 17485  17DA  3000               	movlw	0
 17486  17DB  00CD               	movwf	___flmul@prod+1
 17487  17DC  3000               	movlw	0
 17488  17DD  00CC               	movwf	___flmul@prod
 17489  17DE  01C5               	clrf	___flmul@sign
 17490  17DF  2FF3               	goto	l1418
 17491  17E0                     l7144:	
 17492  17E0  0020               	movlb	0	; select bank0
 17493  17E1  0850               	movf	___flmul@temp,w
 17494  17E2  00C0               	movwf	??___flmul
 17495  17E3  0840               	movf	??___flmul,w
 17496  17E4  00CB               	movwf	___flmul@bexp
 17497  17E5  30FF               	movlw	255
 17498  17E6  05CC               	andwf	___flmul@prod,f
 17499  17E7  30FF               	movlw	255
 17500  17E8  05CD               	andwf	___flmul@prod+1,f
 17501  17E9  307F               	movlw	127
 17502  17EA  05CE               	andwf	___flmul@prod+2,f
 17503  17EB  3000               	movlw	0
 17504  17EC  05CF               	andwf	___flmul@prod+3,f
 17505  17ED  184B               	btfsc	___flmul@bexp,0
 17506  17EE  17CE               	bsf	___flmul@prod+2,7
 17507  17EF  364B               	lsrf	___flmul@bexp,w
 17508  17F0  00C0               	movwf	??___flmul
 17509  17F1  0840               	movf	??___flmul,w
 17510  17F2  00CF               	movwf	___flmul@prod+3
 17511  17F3                     l1418:	
 17512  17F3  0845               	movf	___flmul@sign,w
 17513  17F4  00C0               	movwf	??___flmul
 17514  17F5  0840               	movf	??___flmul,w
 17515  17F6  04CF               	iorwf	___flmul@prod+3,f
 17516  17F7  084F               	movf	___flmul@prod+3,w
 17517  17F8  00BB               	movwf	?___flmul+3
 17518  17F9  084E               	movf	___flmul@prod+2,w
 17519  17FA  00BA               	movwf	?___flmul+2
 17520  17FB  084D               	movf	___flmul@prod+1,w
 17521  17FC  00B9               	movwf	?___flmul+1
 17522  17FD  084C               	movf	___flmul@prod,w
 17523  17FE  00B8               	movwf	?___flmul
 17524  17FF  0008               	return
 17525  1800                     __end_of___flmul:	
 17526                           
 17527                           	psect	text38
 17528  2923                     __ptext38:	
 17529 ;; *************** function __Umul8_16 *****************
 17530 ;; Defined at:
 17531 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 17532 ;; Parameters:    Size  Location     Type
 17533 ;;  multiplier      1    wreg     unsigned char 
 17534 ;;  multiplicand    1    2[COMMON] unsigned char 
 17535 ;; Auto vars:     Size  Location     Type
 17536 ;;  multiplier      1    4[BANK0 ] unsigned char 
 17537 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 17538 ;;  product         2    0[BANK0 ] unsigned int 
 17539 ;; Return value:  Size  Location     Type
 17540 ;;                  2    2[COMMON] unsigned int 
 17541 ;; Registers used:
 17542 ;;		wreg, status,2, status,0
 17543 ;; Tracked objects:
 17544 ;;		On entry : 0/0
 17545 ;;		On exit  : 0/0
 17546 ;;		Unchanged: 0/0
 17547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17549 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17551 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17552 ;;Total ram usage:        9 bytes
 17553 ;; Hardware stack levels used:    1
 17554 ;; Hardware stack levels required when called:    2
 17555 ;; This function calls:
 17556 ;;		Nothing
 17557 ;; This function is called by:
 17558 ;;		___flmul
 17559 ;; This function uses a non-reentrant model
 17560 ;;
 17561                           
 17562                           
 17563                           ;psect for function __Umul8_16
 17564  2923                     __Umul8_16:	
 17565                           
 17566                           ;incstack = 0
 17567                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17568                           ;__Umul8_16@multiplier stored from wreg
 17569  2923  0020               	movlb	0	; select bank0
 17570  2924  00A4               	movwf	__Umul8_16@multiplier
 17571  2925  01A0               	clrf	__Umul8_16@product
 17572  2926  01A1               	clrf	__Umul8_16@product+1
 17573  2927  0872               	movf	__Umul8_16@multiplicand,w
 17574  2928  00F4               	movwf	??__Umul8_16
 17575  2929  01F5               	clrf	??__Umul8_16+1
 17576  292A  0874               	movf	??__Umul8_16,w
 17577  292B  00A2               	movwf	__Umul8_16@word_mpld
 17578  292C  0875               	movf	??__Umul8_16+1,w
 17579  292D  00A3               	movwf	__Umul8_16@word_mpld+1
 17580  292E                     l6670:	
 17581  292E  1C24               	btfss	__Umul8_16@multiplier,0
 17582  292F  2934               	goto	l1444
 17583  2930  0822               	movf	__Umul8_16@word_mpld,w
 17584  2931  07A0               	addwf	__Umul8_16@product,f
 17585  2932  0823               	movf	__Umul8_16@word_mpld+1,w
 17586  2933  3DA1               	addwfc	__Umul8_16@product+1,f
 17587  2934                     l1444:	
 17588  2934  3001               	movlw	1
 17589  2935                     u8465:	
 17590  2935  35A2               	lslf	__Umul8_16@word_mpld,f
 17591  2936  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 17592  2937  0B89               	decfsz	9,f
 17593  2938  2935               	goto	u8465
 17594  2939  1003               	clrc
 17595  293A  0CA4               	rrf	__Umul8_16@multiplier,f
 17596  293B  0824               	movf	__Umul8_16@multiplier,w
 17597  293C  1D03               	btfss	3,2
 17598  293D  292E               	goto	l6670
 17599  293E  0821               	movf	__Umul8_16@product+1,w
 17600  293F  00F3               	movwf	?__Umul8_16+1
 17601  2940  0820               	movf	__Umul8_16@product,w
 17602  2941  00F2               	movwf	?__Umul8_16
 17603  2942  0008               	return
 17604  2943                     __end_of__Umul8_16:	
 17605                           
 17606                           	psect	text39
 17607  2C52                     __ptext39:	
 17608 ;; *************** function _adcRead *****************
 17609 ;; Defined at:
 17610 ;;		line 50 in file "adc.c"
 17611 ;; Parameters:    Size  Location     Type
 17612 ;;  ch              1    wreg     unsigned char 
 17613 ;; Auto vars:     Size  Location     Type
 17614 ;;  ch              1    7[BANK0 ] unsigned char 
 17615 ;;  total           2   12[BANK0 ] int 
 17616 ;;  ansLow          2   10[BANK0 ] int 
 17617 ;;  ansHigh         2    8[BANK0 ] int 
 17618 ;; Return value:  Size  Location     Type
 17619 ;;                  2    2[COMMON] int 
 17620 ;; Registers used:
 17621 ;;		wreg, status,2, status,0
 17622 ;; Tracked objects:
 17623 ;;		On entry : 0/0
 17624 ;;		On exit  : 0/0
 17625 ;;		Unchanged: 0/0
 17626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17627 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17628 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17629 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17630 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17631 ;;Total ram usage:       16 bytes
 17632 ;; Hardware stack levels used:    1
 17633 ;; Hardware stack levels required when called:    2
 17634 ;; This function calls:
 17635 ;;		Nothing
 17636 ;; This function is called by:
 17637 ;;		_getCurrent
 17638 ;;		_getTemps
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           
 17643                           ;psect for function _adcRead
 17644  2C52                     _adcRead:	
 17645                           
 17646                           ;incstack = 0
 17647                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 17648                           ;adcRead@ch stored from wreg
 17649  2C52  0020               	movlb	0	; select bank0
 17650  2C53  00A7               	movwf	adcRead@ch
 17651                           
 17652                           ;adc.c: 51: ADCON0bits.CHS = ch;
 17653  2C54  0827               	movf	adcRead@ch,w
 17654  2C55  00A0               	movwf	??_adcRead
 17655  2C56  0DA0               	rlf	??_adcRead,f
 17656  2C57  0DA0               	rlf	??_adcRead,f
 17657  2C58  0021               	movlb	1	; select bank1
 17658  2C59  081D               	movf	29,w	;volatile
 17659  2C5A  0020               	movlb	0	; select bank0
 17660  2C5B  0620               	xorwf	??_adcRead,w
 17661  2C5C  3983               	andlw	-125
 17662  2C5D  0620               	xorwf	??_adcRead,w
 17663  2C5E  0021               	movlb	1	; select bank1
 17664  2C5F  009D               	movwf	29	;volatile
 17665                           
 17666                           ;adc.c: 52: ADCON0bits.ADON = 1;
 17667  2C60  141D               	bsf	29,0	;volatile
 17668                           
 17669                           ;adc.c: 54: _delay((unsigned long)((100)*(32000000/4000000.0)));
 17670  2C61  30A0               	movlw	160
 17671  2C62                     u12377:	
 17672  2C62  3200               	nop2
 17673  2C63  0B89               	decfsz	9,f
 17674  2C64  2C62               	goto	u12377
 17675                           
 17676                           ;adc.c: 55: ADCON0bits.GO = 1;
 17677  2C65  0021               	movlb	1	; select bank1
 17678  2C66  149D               	bsf	29,1	;volatile
 17679  2C67                     l194:	
 17680                           ;adc.c: 57: while(ADCON0bits.DONE == 1);
 17681                           
 17682  2C67  189D               	btfsc	29,1	;volatile
 17683  2C68  2C67               	goto	l194
 17684                           
 17685                           ;adc.c: 59: int ansHigh = ADRESH;
 17686  2C69  081C               	movf	28,w	;volatile
 17687  2C6A  0020               	movlb	0	; select bank0
 17688  2C6B  00A0               	movwf	??_adcRead
 17689  2C6C  01A1               	clrf	??_adcRead+1
 17690  2C6D  0820               	movf	??_adcRead,w
 17691  2C6E  00A8               	movwf	adcRead@ansHigh
 17692  2C6F  0821               	movf	??_adcRead+1,w
 17693  2C70  00A9               	movwf	adcRead@ansHigh+1
 17694                           
 17695                           ;adc.c: 60: int ansLow = ADRESL;
 17696  2C71  0021               	movlb	1	; select bank1
 17697  2C72  081B               	movf	27,w	;volatile
 17698  2C73  0020               	movlb	0	; select bank0
 17699  2C74  00A0               	movwf	??_adcRead
 17700  2C75  01A1               	clrf	??_adcRead+1
 17701  2C76  0820               	movf	??_adcRead,w
 17702  2C77  00AA               	movwf	adcRead@ansLow
 17703  2C78  0821               	movf	??_adcRead+1,w
 17704  2C79  00AB               	movwf	adcRead@ansLow+1
 17705                           
 17706                           ;adc.c: 62: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 17707  2C7A  082B               	movf	adcRead@ansLow+1,w
 17708  2C7B  00A1               	movwf	??_adcRead+1
 17709  2C7C  082A               	movf	adcRead@ansLow,w
 17710  2C7D  00A0               	movwf	??_adcRead
 17711  2C7E  3004               	movlw	4
 17712  2C7F  00A2               	movwf	??_adcRead+2
 17713  2C80                     u10845:	
 17714  2C80  0D21               	rlf	??_adcRead+1,w
 17715  2C81  0CA1               	rrf	??_adcRead+1,f
 17716  2C82  0CA0               	rrf	??_adcRead,f
 17717  2C83  0BA2               	decfsz	??_adcRead+2,f
 17718  2C84  2C80               	goto	u10845
 17719  2C85  30FF               	movlw	255
 17720  2C86  0520               	andwf	??_adcRead,w
 17721  2C87  00A3               	movwf	??_adcRead+3
 17722  2C88  300F               	movlw	15
 17723  2C89  0521               	andwf	??_adcRead+1,w
 17724  2C8A  00A4               	movwf	??_adcRead+4
 17725  2C8B  0829               	movf	adcRead@ansHigh+1,w
 17726  2C8C  00A6               	movwf	??_adcRead+6
 17727  2C8D  0828               	movf	adcRead@ansHigh,w
 17728  2C8E  00A5               	movwf	??_adcRead+5
 17729  2C8F  0EA5               	swapf	??_adcRead+5,f
 17730  2C90  0EA6               	swapf	??_adcRead+6,f
 17731  2C91  30F0               	movlw	240
 17732  2C92  05A6               	andwf	??_adcRead+6,f
 17733  2C93  0825               	movf	??_adcRead+5,w
 17734  2C94  390F               	andlw	15
 17735  2C95  04A6               	iorwf	??_adcRead+6,f
 17736  2C96  30F0               	movlw	240
 17737  2C97  05A5               	andwf	??_adcRead+5,f
 17738  2C98  0823               	movf	??_adcRead+3,w
 17739  2C99  0425               	iorwf	??_adcRead+5,w
 17740  2C9A  00AC               	movwf	adcRead@total
 17741  2C9B  0824               	movf	??_adcRead+4,w
 17742  2C9C  0426               	iorwf	??_adcRead+6,w
 17743  2C9D  00AD               	movwf	adcRead@total+1
 17744                           
 17745                           ;adc.c: 63: ADCON0bits.ADON = 0;
 17746  2C9E  0021               	movlb	1	; select bank1
 17747  2C9F  101D               	bcf	29,0	;volatile
 17748                           
 17749                           ;adc.c: 64: return total;
 17750  2CA0  0020               	movlb	0	; select bank0
 17751  2CA1  082D               	movf	adcRead@total+1,w
 17752  2CA2  00F3               	movwf	?_adcRead+1
 17753  2CA3  082C               	movf	adcRead@total,w
 17754  2CA4  00F2               	movwf	?_adcRead
 17755  2CA5  0008               	return
 17756  2CA6                     __end_of_adcRead:	
 17757                           
 17758                           	psect	text40
 17759  2943                     __ptext40:	
 17760 ;; *************** function _setup *****************
 17761 ;; Defined at:
 17762 ;;		line 225 in file "main.c"
 17763 ;; Parameters:    Size  Location     Type
 17764 ;;		None
 17765 ;; Auto vars:     Size  Location     Type
 17766 ;;		None
 17767 ;; Return value:  Size  Location     Type
 17768 ;;                  1    wreg      void 
 17769 ;; Registers used:
 17770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17771 ;; Tracked objects:
 17772 ;;		On entry : 0/0
 17773 ;;		On exit  : 0/0
 17774 ;;		Unchanged: 0/0
 17775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17780 ;;Total ram usage:        0 bytes
 17781 ;; Hardware stack levels used:    1
 17782 ;; Hardware stack levels required when called:    6
 17783 ;; This function calls:
 17784 ;;		_LTC6804_initialize
 17785 ;;		_adcSetup
 17786 ;;		_i2cSetup
 17787 ;;		_spiSetup
 17788 ;;		_timerSetup
 17789 ;;		_uartSetup
 17790 ;; This function is called by:
 17791 ;;		_main
 17792 ;; This function uses a non-reentrant model
 17793 ;;
 17794                           
 17795                           
 17796                           ;psect for function _setup
 17797  2943                     _setup:	
 17798                           
 17799                           ;main.c: 227: TRISDbits.TRISD4 = 0;
 17800                           
 17801                           ;incstack = 0
 17802                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17803  2943  0021               	movlb	1	; select bank1
 17804  2944  120F               	bcf	15,4	;volatile
 17805                           
 17806                           ;main.c: 228: TRISDbits.TRISD5 = 0;
 17807  2945  128F               	bcf	15,5	;volatile
 17808                           
 17809                           ;main.c: 229: TRISAbits.TRISA0 = 1;
 17810  2946  140C               	bsf	12,0	;volatile
 17811                           
 17812                           ;main.c: 232: INTCONbits.GIE = 1;
 17813  2947  178B               	bsf	11,7	;volatile
 17814                           
 17815                           ;main.c: 233: INTCONbits.PEIE = 1;
 17816  2948  170B               	bsf	11,6	;volatile
 17817                           
 17818                           ;main.c: 236: timerSetup();
 17819  2949  31A8  201A  31A9   	fcall	_timerSetup
 17820                           
 17821                           ;main.c: 239: TRISAbits.TRISA5 = 0;
 17822  294C  0021               	movlb	1	; select bank1
 17823  294D  128C               	bcf	12,5	;volatile
 17824                           
 17825                           ;main.c: 240: LATAbits.LATA5 = 1;
 17826  294E  0022               	movlb	2	; select bank2
 17827  294F  168C               	bsf	12,5	;volatile
 17828                           
 17829                           ;main.c: 243: TRISAbits.TRISA4 = 0;
 17830  2950  0021               	movlb	1	; select bank1
 17831  2951  120C               	bcf	12,4	;volatile
 17832                           
 17833                           ;main.c: 246: adcSetup();
 17834  2952  31A8  20E6  31A9   	fcall	_adcSetup
 17835                           
 17836                           ;main.c: 249: uartSetup();
 17837  2955  31A8  2064  31A9   	fcall	_uartSetup
 17838                           
 17839                           ;main.c: 252: TRISBbits.TRISB6 = 1;
 17840  2958  0021               	movlb	1	; select bank1
 17841  2959  170D               	bsf	13,6	;volatile
 17842                           
 17843                           ;main.c: 253: TRISBbits.TRISB7 = 1;
 17844  295A  178D               	bsf	13,7	;volatile
 17845                           
 17846                           ;main.c: 254: i2cSetup();
 17847  295B  31A8  2093  31A9   	fcall	_i2cSetup
 17848                           
 17849                           ;main.c: 257: TRISCbits.TRISC5 = 0;
 17850  295E  0021               	movlb	1	; select bank1
 17851  295F  128E               	bcf	14,5	;volatile
 17852                           
 17853                           ;main.c: 258: TRISCbits.TRISC4 = 1;
 17854  2960  160E               	bsf	14,4	;volatile
 17855                           
 17856                           ;main.c: 259: TRISCbits.TRISC3 = 0;
 17857  2961  118E               	bcf	14,3	;volatile
 17858                           
 17859                           ;main.c: 260: TRISDbits.TRISD3 = 0;
 17860  2962  118F               	bcf	15,3	;volatile
 17861                           
 17862                           ;main.c: 261: spiSetup();
 17863  2963  31A8  20A4  31A9   	fcall	_spiSetup
 17864                           
 17865                           ;main.c: 264: LTC6804_initialize();
 17866  2966  31A8  2082         	fcall	_LTC6804_initialize
 17867  2968  0008               	return
 17868  2969                     __end_of_setup:	
 17869                           
 17870                           	psect	text41
 17871  2864                     __ptext41:	
 17872 ;; *************** function _uartSetup *****************
 17873 ;; Defined at:
 17874 ;;		line 90 in file "uart.c"
 17875 ;; Parameters:    Size  Location     Type
 17876 ;;		None
 17877 ;; Auto vars:     Size  Location     Type
 17878 ;;		None
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      void 
 17881 ;; Registers used:
 17882 ;;		wreg, status,2
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17892 ;;Total ram usage:        0 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:    2
 17895 ;; This function calls:
 17896 ;;		Nothing
 17897 ;; This function is called by:
 17898 ;;		_setup
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           
 17903                           ;psect for function _uartSetup
 17904  2864                     _uartSetup:	
 17905                           
 17906                           ;uart.c: 91: TXSTAbits.TX9 = 0;
 17907                           
 17908                           ;incstack = 0
 17909                           ; Regs used in _uartSetup: [wreg+status,2]
 17910  2864  0023               	movlb	3	; select bank3
 17911  2865  131E               	bcf	30,6	;volatile
 17912                           
 17913                           ;uart.c: 92: TXSTAbits.TXEN = 1;
 17914  2866  169E               	bsf	30,5	;volatile
 17915                           
 17916                           ;uart.c: 93: TXSTAbits.SYNC = 0;
 17917  2867  121E               	bcf	30,4	;volatile
 17918                           
 17919                           ;uart.c: 94: TXSTAbits.BRGH = 0;
 17920  2868  111E               	bcf	30,2	;volatile
 17921                           
 17922                           ;uart.c: 95: RCSTAbits.RX9 = 0;
 17923  2869  131D               	bcf	29,6	;volatile
 17924                           
 17925                           ;uart.c: 96: RCSTAbits.SPEN = 1;
 17926  286A  179D               	bsf	29,7	;volatile
 17927                           
 17928                           ;uart.c: 97: SPBRGH = 0;
 17929  286B  019C               	clrf	28	;volatile
 17930                           
 17931                           ;uart.c: 98: SPBRGL = 2;
 17932  286C  3002               	movlw	2
 17933  286D  009B               	movwf	27	;volatile
 17934                           
 17935                           ;uart.c: 99: PIR1bits.TXIF = 0;
 17936  286E  0020               	movlb	0	; select bank0
 17937  286F  1211               	bcf	17,4	;volatile
 17938  2870  0008               	return
 17939  2871                     __end_of_uartSetup:	
 17940                           
 17941                           	psect	text42
 17942  281A                     __ptext42:	
 17943 ;; *************** function _timerSetup *****************
 17944 ;; Defined at:
 17945 ;;		line 10 in file "timer.c"
 17946 ;; Parameters:    Size  Location     Type
 17947 ;;		None
 17948 ;; Auto vars:     Size  Location     Type
 17949 ;;		None
 17950 ;; Return value:  Size  Location     Type
 17951 ;;                  1    wreg      void 
 17952 ;; Registers used:
 17953 ;;		wreg, status,2, status,0, pclath, cstack
 17954 ;; Tracked objects:
 17955 ;;		On entry : 0/0
 17956 ;;		On exit  : 0/0
 17957 ;;		Unchanged: 0/0
 17958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17963 ;;Total ram usage:        0 bytes
 17964 ;; Hardware stack levels used:    1
 17965 ;; Hardware stack levels required when called:    3
 17966 ;; This function calls:
 17967 ;;		_timer0Setup
 17968 ;;		_timer2Setup
 17969 ;; This function is called by:
 17970 ;;		_setup
 17971 ;; This function uses a non-reentrant model
 17972 ;;
 17973                           
 17974                           
 17975                           ;psect for function _timerSetup
 17976  281A                     _timerSetup:	
 17977                           
 17978                           ;timer.c: 11: timer0Setup();
 17979                           
 17980                           ;incstack = 0
 17981                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 17982  281A  31B7  27FB  31A8   	fcall	_timer0Setup
 17983                           
 17984                           ;timer.c: 12: timer2Setup();
 17985  281D  31A8  204D         	fcall	_timer2Setup
 17986  281F  0008               	return
 17987  2820                     __end_of_timerSetup:	
 17988                           
 17989                           	psect	text43
 17990  284D                     __ptext43:	
 17991 ;; *************** function _timer2Setup *****************
 17992 ;; Defined at:
 17993 ;;		line 15 in file "timer.c"
 17994 ;; Parameters:    Size  Location     Type
 17995 ;;		None
 17996 ;; Auto vars:     Size  Location     Type
 17997 ;;		None
 17998 ;; Return value:  Size  Location     Type
 17999 ;;                  1    wreg      void 
 18000 ;; Registers used:
 18001 ;;		wreg
 18002 ;; Tracked objects:
 18003 ;;		On entry : 0/0
 18004 ;;		On exit  : 0/0
 18005 ;;		Unchanged: 0/0
 18006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18011 ;;Total ram usage:        0 bytes
 18012 ;; Hardware stack levels used:    1
 18013 ;; Hardware stack levels required when called:    2
 18014 ;; This function calls:
 18015 ;;		Nothing
 18016 ;; This function is called by:
 18017 ;;		_timerSetup
 18018 ;; This function uses a non-reentrant model
 18019 ;;
 18020                           
 18021                           
 18022                           ;psect for function _timer2Setup
 18023  284D                     _timer2Setup:	
 18024                           
 18025                           ;timer.c: 16: CCP2CON = 0x06;
 18026                           
 18027                           ;incstack = 0
 18028                           ; Regs used in _timer2Setup: [wreg]
 18029  284D  3006               	movlw	6
 18030  284E  0025               	movlb	5	; select bank5
 18031  284F  009A               	movwf	26	;volatile
 18032                           
 18033                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 18034  2850  0021               	movlb	1	; select bank1
 18035  2851  1491               	bsf	17,1	;volatile
 18036                           
 18037                           ;timer.c: 18: PR2 = 254;
 18038  2852  30FE               	movlw	254
 18039  2853  0020               	movlb	0	; select bank0
 18040  2854  009B               	movwf	27	;volatile
 18041                           
 18042                           ;timer.c: 19: T2CON = 0x4F;
 18043  2855  304F               	movlw	79
 18044  2856  009C               	movwf	28	;volatile
 18045  2857  0008               	return
 18046  2858                     __end_of_timer2Setup:	
 18047                           
 18048                           	psect	text44
 18049  37FB                     __ptext44:	
 18050 ;; *************** function _timer0Setup *****************
 18051 ;; Defined at:
 18052 ;;		line 22 in file "timer.c"
 18053 ;; Parameters:    Size  Location     Type
 18054 ;;		None
 18055 ;; Auto vars:     Size  Location     Type
 18056 ;;		None
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  1    wreg      void 
 18059 ;; Registers used:
 18060 ;;		wreg
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18070 ;;Total ram usage:        0 bytes
 18071 ;; Hardware stack levels used:    1
 18072 ;; Hardware stack levels required when called:    2
 18073 ;; This function calls:
 18074 ;;		Nothing
 18075 ;; This function is called by:
 18076 ;;		_timerSetup
 18077 ;; This function uses a non-reentrant model
 18078 ;;
 18079                           
 18080                           
 18081                           ;psect for function _timer0Setup
 18082  37FB                     _timer0Setup:	
 18083                           
 18084                           ;timer.c: 23: OPTION_REG = 0b10001110;
 18085                           
 18086                           ;incstack = 0
 18087                           ; Regs used in _timer0Setup: [wreg]
 18088  37FB  308E               	movlw	142
 18089  37FC  0021               	movlb	1	; select bank1
 18090  37FD  0095               	movwf	21	;volatile
 18091                           
 18092                           ;timer.c: 24: INTCONbits.TMR0IE = 1;
 18093  37FE  168B               	bsf	11,5	;volatile
 18094  37FF  0008               	return
 18095  3800                     __end_of_timer0Setup:	
 18096                           
 18097                           	psect	text45
 18098  28A4                     __ptext45:	
 18099 ;; *************** function _spiSetup *****************
 18100 ;; Defined at:
 18101 ;;		line 12 in file "spi.c"
 18102 ;; Parameters:    Size  Location     Type
 18103 ;;		None
 18104 ;; Auto vars:     Size  Location     Type
 18105 ;;		None
 18106 ;; Return value:  Size  Location     Type
 18107 ;;                  1    wreg      void 
 18108 ;; Registers used:
 18109 ;;		wreg
 18110 ;; Tracked objects:
 18111 ;;		On entry : 0/0
 18112 ;;		On exit  : 0/0
 18113 ;;		Unchanged: 0/0
 18114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18119 ;;Total ram usage:        0 bytes
 18120 ;; Hardware stack levels used:    1
 18121 ;; Hardware stack levels required when called:    2
 18122 ;; This function calls:
 18123 ;;		Nothing
 18124 ;; This function is called by:
 18125 ;;		_setup
 18126 ;; This function uses a non-reentrant model
 18127 ;;
 18128                           
 18129                           
 18130                           ;psect for function _spiSetup
 18131  28A4                     _spiSetup:	
 18132                           
 18133                           ;spi.c: 15: LATDbits.LATD3 = 1;
 18134                           
 18135                           ;incstack = 0
 18136                           ; Regs used in _spiSetup: [wreg]
 18137  28A4  0022               	movlb	2	; select bank2
 18138  28A5  158F               	bsf	15,3	;volatile
 18139                           
 18140                           ;spi.c: 17: APFCON1bits.SDOSEL = 0;
 18141  28A6  129D               	bcf	29,5	;volatile
 18142                           
 18143                           ;spi.c: 18: APFCON1bits.SCKSEL = 0;
 18144  28A7  121D               	bcf	29,4	;volatile
 18145                           
 18146                           ;spi.c: 19: APFCON1bits.SDISEL = 0;
 18147  28A8  119D               	bcf	29,3	;volatile
 18148                           
 18149                           ;spi.c: 21: SSP1CON3bits.BOEN = 0;
 18150  28A9  0024               	movlb	4	; select bank4
 18151  28AA  1217               	bcf	23,4	;volatile
 18152                           
 18153                           ;spi.c: 25: SSP1STATbits.SMP = 1;
 18154  28AB  1794               	bsf	20,7	;volatile
 18155                           
 18156                           ;spi.c: 26: SSP1STATbits.CKE = 1;
 18157  28AC  1714               	bsf	20,6	;volatile
 18158                           
 18159                           ;spi.c: 28: SSP1CON1 = 0x12;
 18160  28AD  3012               	movlw	18
 18161  28AE  0095               	movwf	21	;volatile
 18162                           
 18163                           ;spi.c: 30: PIE1bits.SSP1IE = 1;
 18164  28AF  0021               	movlb	1	; select bank1
 18165  28B0  1591               	bsf	17,3	;volatile
 18166                           
 18167                           ;spi.c: 31: PIR1bits.SSP1IF = 0;
 18168  28B1  0020               	movlb	0	; select bank0
 18169  28B2  1191               	bcf	17,3	;volatile
 18170                           
 18171                           ;spi.c: 33: SSP1CON1bits.SSPEN = 1;
 18172  28B3  0024               	movlb	4	; select bank4
 18173  28B4  1695               	bsf	21,5	;volatile
 18174  28B5  0008               	return
 18175  28B6                     __end_of_spiSetup:	
 18176                           
 18177                           	psect	text46
 18178  2893                     __ptext46:	
 18179 ;; *************** function _i2cSetup *****************
 18180 ;; Defined at:
 18181 ;;		line 40 in file "i2c.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;		None
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;		None
 18186 ;; Return value:  Size  Location     Type
 18187 ;;                  1    wreg      void 
 18188 ;; Registers used:
 18189 ;;		wreg
 18190 ;; Tracked objects:
 18191 ;;		On entry : 0/0
 18192 ;;		On exit  : 0/0
 18193 ;;		Unchanged: 0/0
 18194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18199 ;;Total ram usage:        0 bytes
 18200 ;; Hardware stack levels used:    1
 18201 ;; Hardware stack levels required when called:    2
 18202 ;; This function calls:
 18203 ;;		Nothing
 18204 ;; This function is called by:
 18205 ;;		_setup
 18206 ;; This function uses a non-reentrant model
 18207 ;;
 18208                           
 18209                           
 18210                           ;psect for function _i2cSetup
 18211  2893                     _i2cSetup:	
 18212                           
 18213                           ;i2c.c: 41: APFCON1bits.SDISEL = 1;
 18214                           
 18215                           ;incstack = 0
 18216                           ; Regs used in _i2cSetup: [wreg]
 18217  2893  0022               	movlb	2	; select bank2
 18218  2894  159D               	bsf	29,3	;volatile
 18219                           
 18220                           ;i2c.c: 42: APFCON1bits.SCKSEL = 1;
 18221  2895  161D               	bsf	29,4	;volatile
 18222                           
 18223                           ;i2c.c: 43: PIE1bits.SSP1IE = 0;
 18224  2896  0021               	movlb	1	; select bank1
 18225  2897  1191               	bcf	17,3	;volatile
 18226                           
 18227                           ;i2c.c: 44: PIE2bits.BCL1IE = 0;
 18228  2898  1192               	bcf	18,3	;volatile
 18229                           
 18230                           ;i2c.c: 45: PIR1bits.SSP1IF = 0;
 18231  2899  0020               	movlb	0	; select bank0
 18232  289A  1191               	bcf	17,3	;volatile
 18233                           
 18234                           ;i2c.c: 46: PIR2bits.BCL1IF = 0;
 18235  289B  1192               	bcf	18,3	;volatile
 18236                           
 18237                           ;i2c.c: 47: SSPADD = 0x4F;
 18238  289C  304F               	movlw	79
 18239  289D  0024               	movlb	4	; select bank4
 18240  289E  0092               	movwf	18	;volatile
 18241                           
 18242                           ;i2c.c: 48: SSPCON1 = 0x28;
 18243  289F  3028               	movlw	40
 18244  28A0  0095               	movwf	21	;volatile
 18245                           
 18246                           ;i2c.c: 49: SSPSTAT = 0xC0;
 18247  28A1  30C0               	movlw	192
 18248  28A2  0094               	movwf	20	;volatile
 18249  28A3  0008               	return
 18250  28A4                     __end_of_i2cSetup:	
 18251                           
 18252                           	psect	text47
 18253  28E6                     __ptext47:	
 18254 ;; *************** function _adcSetup *****************
 18255 ;; Defined at:
 18256 ;;		line 78 in file "adc.c"
 18257 ;; Parameters:    Size  Location     Type
 18258 ;;		None
 18259 ;; Auto vars:     Size  Location     Type
 18260 ;;		None
 18261 ;; Return value:  Size  Location     Type
 18262 ;;                  1    wreg      void 
 18263 ;; Registers used:
 18264 ;;		wreg, status,2
 18265 ;; Tracked objects:
 18266 ;;		On entry : 0/0
 18267 ;;		On exit  : 0/0
 18268 ;;		Unchanged: 0/0
 18269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18274 ;;Total ram usage:        0 bytes
 18275 ;; Hardware stack levels used:    1
 18276 ;; Hardware stack levels required when called:    2
 18277 ;; This function calls:
 18278 ;;		Nothing
 18279 ;; This function is called by:
 18280 ;;		_setup
 18281 ;; This function uses a non-reentrant model
 18282 ;;
 18283                           
 18284                           
 18285                           ;psect for function _adcSetup
 18286  28E6                     _adcSetup:	
 18287                           
 18288                           ;adc.c: 80: TRISBbits.TRISB5 = 0;
 18289                           
 18290                           ;incstack = 0
 18291                           ; Regs used in _adcSetup: [wreg+status,2]
 18292  28E6  0021               	movlb	1	; select bank1
 18293  28E7  128D               	bcf	13,5	;volatile
 18294                           
 18295                           ;adc.c: 83: TRISAbits.TRISA0 = 1;
 18296  28E8  140C               	bsf	12,0	;volatile
 18297                           
 18298                           ;adc.c: 84: TRISAbits.TRISA1 = 1;
 18299  28E9  148C               	bsf	12,1	;volatile
 18300                           
 18301                           ;adc.c: 85: TRISAbits.TRISA2 = 1;
 18302  28EA  150C               	bsf	12,2	;volatile
 18303                           
 18304                           ;adc.c: 86: TRISAbits.TRISA3 = 1;
 18305  28EB  158C               	bsf	12,3	;volatile
 18306                           
 18307                           ;adc.c: 89: TRISBbits.TRISB0 = 1;
 18308  28EC  140D               	bsf	13,0	;volatile
 18309                           
 18310                           ;adc.c: 90: TRISBbits.TRISB1 = 1;
 18311  28ED  148D               	bsf	13,1	;volatile
 18312                           
 18313                           ;adc.c: 91: TRISBbits.TRISB2 = 1;
 18314  28EE  150D               	bsf	13,2	;volatile
 18315                           
 18316                           ;adc.c: 92: TRISBbits.TRISB3 = 1;
 18317  28EF  158D               	bsf	13,3	;volatile
 18318                           
 18319                           ;adc.c: 93: TRISBbits.TRISB4 = 1;
 18320  28F0  160D               	bsf	13,4	;volatile
 18321                           
 18322                           ;adc.c: 96: TRISDbits.TRISD1 = 1;
 18323  28F1  148F               	bsf	15,1	;volatile
 18324                           
 18325                           ;adc.c: 99: ANSELA = 0x0F;
 18326  28F2  300F               	movlw	15
 18327  28F3  0023               	movlb	3	; select bank3
 18328  28F4  008C               	movwf	12	;volatile
 18329                           
 18330                           ;adc.c: 100: ANSELB = 0x1F;
 18331  28F5  301F               	movlw	31
 18332  28F6  008D               	movwf	13	;volatile
 18333                           
 18334                           ;adc.c: 101: ANSELD = 0x01;
 18335  28F7  3001               	movlw	1
 18336  28F8  008F               	movwf	15	;volatile
 18337                           
 18338                           ;adc.c: 102: TRISDbits.TRISD1 = 1;
 18339  28F9  0021               	movlb	1	; select bank1
 18340  28FA  148F               	bsf	15,1	;volatile
 18341                           
 18342                           ;adc.c: 103: WPUD = 0x00;
 18343  28FB  0024               	movlb	4	; select bank4
 18344  28FC  018F               	clrf	15	;volatile
 18345                           
 18346                           ;adc.c: 106: ADCON0 = 0x00;
 18347  28FD  0021               	movlb	1	; select bank1
 18348  28FE  019D               	clrf	29	;volatile
 18349                           
 18350                           ;adc.c: 107: ADCON1 = 0x60;
 18351  28FF  3060               	movlw	96
 18352  2900  009E               	movwf	30	;volatile
 18353                           
 18354                           ;adc.c: 108: ADCON2 = 0x0F;
 18355  2901  300F               	movlw	15
 18356  2902  009F               	movwf	31	;volatile
 18357  2903  0008               	return
 18358  2904                     __end_of_adcSetup:	
 18359                           
 18360                           	psect	text48
 18361  2882                     __ptext48:	
 18362 ;; *************** function _LTC6804_initialize *****************
 18363 ;; Defined at:
 18364 ;;		line 302 in file "ltc6804.c"
 18365 ;; Parameters:    Size  Location     Type
 18366 ;;		None
 18367 ;; Auto vars:     Size  Location     Type
 18368 ;;		None
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  1    wreg      void 
 18371 ;; Registers used:
 18372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18380 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18381 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18382 ;;Total ram usage:        1 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:    5
 18385 ;; This function calls:
 18386 ;;		_LTC6804_wrcfg
 18387 ;;		_set_adc
 18388 ;; This function is called by:
 18389 ;;		_setup
 18390 ;; This function uses a non-reentrant model
 18391 ;;
 18392                           
 18393                           
 18394                           ;psect for function _LTC6804_initialize
 18395  2882                     _LTC6804_initialize:	
 18396                           
 18397                           ;ltc6804.c: 304: set_adc(2,1,0,0);
 18398                           
 18399                           ;incstack = 0
 18400                           ; Regs used in _LTC6804_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18401  2882  01F2               	clrf	set_adc@DCP
 18402  2883  0AF2               	incf	set_adc@DCP,f
 18403  2884  01F3               	clrf	set_adc@CH
 18404  2885  01F4               	clrf	set_adc@CHG
 18405  2886  3002               	movlw	2
 18406  2887  31AC  24FB  31A8   	fcall	_set_adc
 18407                           
 18408                           ;ltc6804.c: 305: LTC6804_wrcfg(1, configReg);
 18409  288A  306A               	movlw	(low (_configReg| (0+256)))& (0+255)
 18410  288B  0020               	movlb	0	; select bank0
 18411  288C  00C6               	movwf	??_LTC6804_initialize
 18412  288D  0846               	movf	??_LTC6804_initialize,w
 18413  288E  00F9               	movwf	LTC6804_wrcfg@config
 18414  288F  3001               	movlw	1
 18415  2890  31A1  214C         	fcall	_LTC6804_wrcfg
 18416  2892  0008               	return
 18417  2893                     __end_of_LTC6804_initialize:	
 18418                           
 18419                           	psect	text49
 18420  2CFB                     __ptext49:	
 18421 ;; *************** function _set_adc *****************
 18422 ;; Defined at:
 18423 ;;		line 325 in file "ltc6804.c"
 18424 ;; Parameters:    Size  Location     Type
 18425 ;;  MD              1    wreg     unsigned char 
 18426 ;;  DCP             1    2[COMMON] unsigned char 
 18427 ;;  CH              1    3[COMMON] unsigned char 
 18428 ;;  CHG             1    4[COMMON] unsigned char 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;  MD              1    7[COMMON] unsigned char 
 18431 ;;  md_bits         1    8[COMMON] unsigned char 
 18432 ;; Return value:  Size  Location     Type
 18433 ;;                  1    wreg      void 
 18434 ;; Registers used:
 18435 ;;		wreg, status,2, status,0
 18436 ;; Tracked objects:
 18437 ;;		On entry : 0/0
 18438 ;;		On exit  : 0/0
 18439 ;;		Unchanged: 0/0
 18440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18441 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18442 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18444 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18445 ;;Total ram usage:        7 bytes
 18446 ;; Hardware stack levels used:    1
 18447 ;; Hardware stack levels required when called:    2
 18448 ;; This function calls:
 18449 ;;		Nothing
 18450 ;; This function is called by:
 18451 ;;		_LTC6804_initialize
 18452 ;; This function uses a non-reentrant model
 18453 ;;
 18454                           
 18455                           
 18456                           ;psect for function _set_adc
 18457  2CFB                     _set_adc:	
 18458                           
 18459                           ;incstack = 0
 18460                           ; Regs used in _set_adc: [wreg+status,2+status,0]
 18461                           ;set_adc@MD stored from wreg
 18462  2CFB  00F7               	movwf	set_adc@MD
 18463                           
 18464                           ;ltc6804.c: 331: char md_bits;
 18465                           ;ltc6804.c: 333: md_bits = (MD & 0x02) >> 1;
 18466  2CFC  3677               	lsrf	set_adc@MD,w
 18467  2CFD  3901               	andlw	1
 18468  2CFE  00F5               	movwf	??_set_adc
 18469  2CFF  0875               	movf	??_set_adc,w
 18470  2D00  00F8               	movwf	set_adc@md_bits
 18471                           
 18472                           ;ltc6804.c: 334: ADCV[0] = md_bits + 0x02;
 18473  2D01  0878               	movf	set_adc@md_bits,w
 18474  2D02  3E02               	addlw	2
 18475  2D03  00F5               	movwf	??_set_adc
 18476  2D04  0875               	movf	??_set_adc,w
 18477  2D05  0021               	movlb	1	; select bank1
 18478  2D06  00EC               	movwf	_ADCV^(0+128)
 18479                           
 18480                           ;ltc6804.c: 335: md_bits = (MD & 0x01) << 7;
 18481  2D07  0877               	movf	set_adc@MD,w
 18482  2D08  3901               	andlw	1
 18483  2D09  00F5               	movwf	??_set_adc
 18484  2D0A  3006               	movlw	6
 18485  2D0B                     u11525:	
 18486  2D0B  35F5               	lslf	??_set_adc,f
 18487  2D0C  3EFF               	addlw	-1
 18488  2D0D  1D03               	skipz
 18489  2D0E  2D0B               	goto	u11525
 18490  2D0F  3575               	lslf	??_set_adc,w
 18491  2D10  00F6               	movwf	??_set_adc+1
 18492  2D11  0876               	movf	??_set_adc+1,w
 18493  2D12  00F8               	movwf	set_adc@md_bits
 18494                           
 18495                           ;ltc6804.c: 336: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 18496  2D13  0872               	movf	set_adc@DCP,w
 18497  2D14  00F5               	movwf	??_set_adc
 18498  2D15  3003               	movlw	3
 18499  2D16                     u11535:	
 18500  2D16  35F5               	lslf	??_set_adc,f
 18501  2D17  3EFF               	addlw	-1
 18502  2D18  1D03               	skipz
 18503  2D19  2D16               	goto	u11535
 18504  2D1A  3575               	lslf	??_set_adc,w
 18505  2D1B  0778               	addwf	set_adc@md_bits,w
 18506  2D1C  0773               	addwf	set_adc@CH,w
 18507  2D1D  3E60               	addlw	96
 18508  2D1E  00F6               	movwf	??_set_adc+1
 18509  2D1F  0876               	movf	??_set_adc+1,w
 18510  2D20  00ED               	movwf	(_ADCV^(0+128)+1)
 18511                           
 18512                           ;ltc6804.c: 338: md_bits = (MD & 0x02) >> 1;
 18513  2D21  3677               	lsrf	set_adc@MD,w
 18514  2D22  3901               	andlw	1
 18515  2D23  00F5               	movwf	??_set_adc
 18516  2D24  0875               	movf	??_set_adc,w
 18517  2D25  00F8               	movwf	set_adc@md_bits
 18518                           
 18519                           ;ltc6804.c: 339: ADAX[0] = md_bits + 0x04;
 18520  2D26  0878               	movf	set_adc@md_bits,w
 18521  2D27  3E04               	addlw	4
 18522  2D28  00F5               	movwf	??_set_adc
 18523  2D29  0875               	movf	??_set_adc,w
 18524  2D2A  0022               	movlb	2	; select bank2
 18525  2D2B  00E8               	movwf	_ADAX^(0+256)
 18526                           
 18527                           ;ltc6804.c: 340: md_bits = (MD & 0x01) << 7;
 18528  2D2C  0877               	movf	set_adc@MD,w
 18529  2D2D  3901               	andlw	1
 18530  2D2E  00F5               	movwf	??_set_adc
 18531  2D2F  3006               	movlw	6
 18532  2D30                     u11545:	
 18533  2D30  35F5               	lslf	??_set_adc,f
 18534  2D31  3EFF               	addlw	-1
 18535  2D32  1D03               	skipz
 18536  2D33  2D30               	goto	u11545
 18537  2D34  3575               	lslf	??_set_adc,w
 18538  2D35  00F6               	movwf	??_set_adc+1
 18539  2D36  0876               	movf	??_set_adc+1,w
 18540  2D37  00F8               	movwf	set_adc@md_bits
 18541                           
 18542                           ;ltc6804.c: 341: ADAX[1] = md_bits + 0x60 + CHG ;
 18543  2D38  0878               	movf	set_adc@md_bits,w
 18544  2D39  0774               	addwf	set_adc@CHG,w
 18545  2D3A  3E60               	addlw	96
 18546  2D3B  00F5               	movwf	??_set_adc
 18547  2D3C  0875               	movf	??_set_adc,w
 18548  2D3D  00E9               	movwf	(_ADAX^(0+256)+1)
 18549                           
 18550                           ;ltc6804.c: 343: md_bits = (MD & 0x02) >> 1;
 18551  2D3E  3677               	lsrf	set_adc@MD,w
 18552  2D3F  3901               	andlw	1
 18553  2D40  00F5               	movwf	??_set_adc
 18554  2D41  0875               	movf	??_set_adc,w
 18555  2D42  00F8               	movwf	set_adc@md_bits
 18556                           
 18557                           ;ltc6804.c: 344: ADSTAT[0] = md_bits + 0x04;
 18558  2D43  0878               	movf	set_adc@md_bits,w
 18559  2D44  3E04               	addlw	4
 18560  2D45  00F5               	movwf	??_set_adc
 18561  2D46  0875               	movf	??_set_adc,w
 18562  2D47  00E6               	movwf	_ADSTAT^(0+256)
 18563                           
 18564                           ;ltc6804.c: 345: md_bits = (MD & 0x01) << 7;
 18565  2D48  0877               	movf	set_adc@MD,w
 18566  2D49  3901               	andlw	1
 18567  2D4A  00F5               	movwf	??_set_adc
 18568  2D4B  3006               	movlw	6
 18569  2D4C                     u11555:	
 18570  2D4C  35F5               	lslf	??_set_adc,f
 18571  2D4D  3EFF               	addlw	-1
 18572  2D4E  1D03               	skipz
 18573  2D4F  2D4C               	goto	u11555
 18574  2D50  3575               	lslf	??_set_adc,w
 18575  2D51  00F6               	movwf	??_set_adc+1
 18576  2D52  0876               	movf	??_set_adc+1,w
 18577  2D53  00F8               	movwf	set_adc@md_bits
 18578                           
 18579                           ;ltc6804.c: 346: ADSTAT[1] = md_bits + 0x69;
 18580  2D54  0878               	movf	set_adc@md_bits,w
 18581  2D55  3E69               	addlw	105
 18582  2D56  00F5               	movwf	??_set_adc
 18583  2D57  0875               	movf	??_set_adc,w
 18584  2D58  00E7               	movwf	(_ADSTAT^(0+256)+1)
 18585  2D59  0008               	return
 18586  2D5A                     __end_of_set_adc:	
 18587                           
 18588                           	psect	text50
 18589  214C                     __ptext50:	
 18590 ;; *************** function _LTC6804_wrcfg *****************
 18591 ;; Defined at:
 18592 ;;		line 1011 in file "ltc6804.c"
 18593 ;; Parameters:    Size  Location     Type
 18594 ;;  total_ic        1    wreg     unsigned char 
 18595 ;;  config          1    9[COMMON] PTR unsigned char [6]
 18596 ;;		 -> configReg(6), 
 18597 ;; Auto vars:     Size  Location     Type
 18598 ;;  total_ic        1   32[BANK0 ] unsigned char 
 18599 ;;  current_byte    1   35[BANK0 ] unsigned char 
 18600 ;;  current_ic      1   36[BANK0 ] unsigned char 
 18601 ;;  cmd            12   19[BANK0 ] unsigned char [12]
 18602 ;;  cfg_pec         2   33[BANK0 ] int 
 18603 ;;  cmd_index       1   37[BANK0 ] unsigned char 
 18604 ;;  CMD_LEN         1   31[BANK0 ] unsigned char 
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  1    wreg      void 
 18607 ;; Registers used:
 18608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18609 ;; Tracked objects:
 18610 ;;		On entry : 0/0
 18611 ;;		On exit  : 0/0
 18612 ;;		Unchanged: 0/0
 18613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18614 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18615 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18616 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18617 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18618 ;;Total ram usage:       24 bytes
 18619 ;; Hardware stack levels used:    1
 18620 ;; Hardware stack levels required when called:    4
 18621 ;; This function calls:
 18622 ;;		___bmul
 18623 ;;		_pec15_calc
 18624 ;;		_spi_write_array
 18625 ;;		_wakeup_idle
 18626 ;; This function is called by:
 18627 ;;		_cellBalancing
 18628 ;;		_LTC6804_initialize
 18629 ;; This function uses a non-reentrant model
 18630 ;;
 18631                           
 18632                           
 18633                           ;psect for function _LTC6804_wrcfg
 18634  214C                     _LTC6804_wrcfg:	
 18635                           
 18636                           ;incstack = 0
 18637                           ; Regs used in _LTC6804_wrcfg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18638                           ;LTC6804_wrcfg@total_ic stored from wreg
 18639  214C  0020               	movlb	0	; select bank0
 18640  214D  00C0               	movwf	LTC6804_wrcfg@total_ic
 18641                           
 18642                           ;ltc6804.c: 1015: const char BYTES_IN_REG = 6;
 18643                           ;ltc6804.c: 1016: char CMD_LEN = 4+(8*total_ic);
 18644  214E  0840               	movf	LTC6804_wrcfg@total_ic,w
 18645  214F  00AF               	movwf	??_LTC6804_wrcfg
 18646  2150  3002               	movlw	2
 18647  2151                     u9555:	
 18648  2151  35AF               	lslf	??_LTC6804_wrcfg,f
 18649  2152  3EFF               	addlw	-1
 18650  2153  1D03               	skipz
 18651  2154  2951               	goto	u9555
 18652  2155  352F               	lslf	??_LTC6804_wrcfg,w
 18653  2156  3E04               	addlw	4
 18654  2157  00B0               	movwf	??_LTC6804_wrcfg+1
 18655  2158  0830               	movf	??_LTC6804_wrcfg+1,w
 18656  2159  00BF               	movwf	LTC6804_wrcfg@CMD_LEN
 18657                           
 18658                           ;ltc6804.c: 1017: char cmd[12];
 18659                           ;ltc6804.c: 1018: int cfg_pec;
 18660                           ;ltc6804.c: 1019: char cmd_index;
 18661                           ;ltc6804.c: 1024: cmd[0] = 0x00;
 18662  215A  01B3               	clrf	LTC6804_wrcfg@cmd
 18663                           
 18664                           ;ltc6804.c: 1025: cmd[1] = 0x01;
 18665  215B  01B4               	clrf	LTC6804_wrcfg@cmd+1
 18666  215C  0AB4               	incf	LTC6804_wrcfg@cmd+1,f
 18667                           
 18668                           ;ltc6804.c: 1026: cmd[2] = 0x3d;
 18669  215D  303D               	movlw	61
 18670  215E  00AF               	movwf	??_LTC6804_wrcfg
 18671  215F  082F               	movf	??_LTC6804_wrcfg,w
 18672  2160  00B5               	movwf	LTC6804_wrcfg@cmd+2
 18673                           
 18674                           ;ltc6804.c: 1027: cmd[3] = 0x6e;
 18675  2161  306E               	movlw	110
 18676  2162  00AF               	movwf	??_LTC6804_wrcfg
 18677  2163  082F               	movf	??_LTC6804_wrcfg,w
 18678  2164  00B6               	movwf	LTC6804_wrcfg@cmd+3
 18679                           
 18680                           ;ltc6804.c: 1030: cmd_index = 4;
 18681  2165  3004               	movlw	4
 18682  2166  00AF               	movwf	??_LTC6804_wrcfg
 18683  2167  082F               	movf	??_LTC6804_wrcfg,w
 18684  2168  00C5               	movwf	LTC6804_wrcfg@cmd_index
 18685                           
 18686                           ;ltc6804.c: 1031: for (char current_ic = total_ic; current_ic > 0; current_ic--)
 18687  2169  0840               	movf	LTC6804_wrcfg@total_ic,w
 18688  216A  00AF               	movwf	??_LTC6804_wrcfg
 18689  216B  082F               	movf	??_LTC6804_wrcfg,w
 18690  216C  00C4               	movwf	LTC6804_wrcfg@current_ic
 18691  216D  0844               	movf	LTC6804_wrcfg@current_ic,w
 18692  216E  1903               	btfsc	3,2
 18693  216F  29DA               	goto	l7286
 18694  2170                     l7260:	
 18695                           
 18696                           ;ltc6804.c: 1032: {
 18697                           ;ltc6804.c: 1035: for (char current_byte = 0; current_byte < BYTES_IN_REG; current_byte+
      +                          +)
 18698  2170  01C3               	clrf	LTC6804_wrcfg@current_byte
 18699  2171  3009               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18700  2172  0084               	movwf	4
 18701  2173  30B8               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18702  2174  0085               	movwf	5
 18703  2175  0800               	movf	0,w	;code access
 18704  2176  0243               	subwf	LTC6804_wrcfg@current_byte,w
 18705  2177  1803               	btfsc	3,0
 18706  2178  29A5               	goto	l7274
 18707  2179                     l7266:	
 18708                           
 18709                           ;ltc6804.c: 1036: {
 18710                           ;ltc6804.c: 1038: cmd[cmd_index] = config[current_ic-1][current_byte];
 18711  2179  3006               	movlw	6
 18712  217A  00AF               	movwf	??_LTC6804_wrcfg
 18713  217B  082F               	movf	??_LTC6804_wrcfg,w
 18714  217C  00F2               	movwf	___bmul@multiplicand
 18715  217D  0844               	movf	LTC6804_wrcfg@current_ic,w
 18716  217E  3EFF               	addlw	-1
 18717  217F  31A8  2071  31A1   	fcall	___bmul
 18718  2182  0779               	addwf	LTC6804_wrcfg@config,w
 18719  2183  0020               	movlb	0	; select bank0
 18720  2184  00B0               	movwf	??_LTC6804_wrcfg+1
 18721  2185  0843               	movf	LTC6804_wrcfg@current_byte,w
 18722  2186  0730               	addwf	??_LTC6804_wrcfg+1,w
 18723  2187  00B1               	movwf	??_LTC6804_wrcfg+2
 18724  2188  0831               	movf	??_LTC6804_wrcfg+2,w
 18725  2189  0086               	movwf	6
 18726  218A  3001               	movlw	1	; select bank2/3
 18727  218B  0087               	movwf	7
 18728  218C  0801               	movf	1,w
 18729  218D  00B2               	movwf	??_LTC6804_wrcfg+3
 18730  218E  0845               	movf	LTC6804_wrcfg@cmd_index,w
 18731  218F  3E33               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18732  2190  0086               	movwf	6
 18733  2191  0187               	clrf	7
 18734  2192  0832               	movf	??_LTC6804_wrcfg+3,w
 18735  2193  0081               	movwf	1
 18736                           
 18737                           ;ltc6804.c: 1039: cmd_index = cmd_index + 1;
 18738  2194  0845               	movf	LTC6804_wrcfg@cmd_index,w
 18739  2195  3E01               	addlw	1
 18740  2196  00AF               	movwf	??_LTC6804_wrcfg
 18741  2197  082F               	movf	??_LTC6804_wrcfg,w
 18742  2198  00C5               	movwf	LTC6804_wrcfg@cmd_index
 18743  2199  3001               	movlw	1
 18744  219A  00AF               	movwf	??_LTC6804_wrcfg
 18745  219B  082F               	movf	??_LTC6804_wrcfg,w
 18746  219C  07C3               	addwf	LTC6804_wrcfg@current_byte,f
 18747  219D  3009               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18748  219E  0084               	movwf	4
 18749  219F  30B8               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18750  21A0  0085               	movwf	5
 18751  21A1  0800               	movf	0,w	;code access
 18752  21A2  0243               	subwf	LTC6804_wrcfg@current_byte,w
 18753  21A3  1C03               	skipc
 18754  21A4  2979               	goto	l7266
 18755  21A5                     l7274:	
 18756                           
 18757                           ;ltc6804.c: 1040: }
 18758                           ;ltc6804.c: 1042: cfg_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
 18759  21A5  3006               	movlw	6
 18760  21A6  00AF               	movwf	??_LTC6804_wrcfg
 18761  21A7  082F               	movf	??_LTC6804_wrcfg,w
 18762  21A8  00F2               	movwf	___bmul@multiplicand
 18763  21A9  0844               	movf	LTC6804_wrcfg@current_ic,w
 18764  21AA  3EFF               	addlw	-1
 18765  21AB  31A8  2071  31A1   	fcall	___bmul
 18766  21AE  0779               	addwf	LTC6804_wrcfg@config,w
 18767  21AF  00F6               	movwf	pec15_calc@data
 18768  21B0  3001               	movlw	1
 18769  21B1  00F7               	movwf	pec15_calc@data+1
 18770  21B2  3009               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18771  21B3  0084               	movwf	4
 18772  21B4  30B8               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18773  21B5  0085               	movwf	5
 18774  21B6  0800               	movf	0,w	;code access
 18775  21B7  31AB  230C  31A1   	fcall	_pec15_calc
 18776  21BA  0877               	movf	?_pec15_calc+1,w
 18777  21BB  0020               	movlb	0	; select bank0
 18778  21BC  00C2               	movwf	LTC6804_wrcfg@cfg_pec+1
 18779  21BD  0876               	movf	?_pec15_calc,w
 18780  21BE  00C1               	movwf	LTC6804_wrcfg@cfg_pec
 18781                           
 18782                           ;ltc6804.c: 1043: cmd[cmd_index] = (char)(cfg_pec >> 8);
 18783  21BF  0842               	movf	LTC6804_wrcfg@cfg_pec+1,w
 18784  21C0  00AF               	movwf	??_LTC6804_wrcfg
 18785  21C1  0845               	movf	LTC6804_wrcfg@cmd_index,w
 18786  21C2  3E33               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18787  21C3  0086               	movwf	6
 18788  21C4  0187               	clrf	7
 18789  21C5  082F               	movf	??_LTC6804_wrcfg,w
 18790  21C6  0081               	movwf	1
 18791                           
 18792                           ;ltc6804.c: 1044: cmd[cmd_index + 1] = (char)cfg_pec;
 18793  21C7  0841               	movf	LTC6804_wrcfg@cfg_pec,w
 18794  21C8  00AF               	movwf	??_LTC6804_wrcfg
 18795  21C9  0845               	movf	LTC6804_wrcfg@cmd_index,w
 18796  21CA  3E01               	addlw	1
 18797  21CB  3E33               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18798  21CC  0086               	movwf	6
 18799  21CD  0187               	clrf	7
 18800  21CE  082F               	movf	??_LTC6804_wrcfg,w
 18801  21CF  0081               	movwf	1
 18802                           
 18803                           ;ltc6804.c: 1045: cmd_index = cmd_index + 2;
 18804  21D0  0845               	movf	LTC6804_wrcfg@cmd_index,w
 18805  21D1  3E02               	addlw	2
 18806  21D2  00AF               	movwf	??_LTC6804_wrcfg
 18807  21D3  082F               	movf	??_LTC6804_wrcfg,w
 18808  21D4  00C5               	movwf	LTC6804_wrcfg@cmd_index
 18809  21D5  3001               	movlw	1
 18810  21D6  02C4               	subwf	LTC6804_wrcfg@current_ic,f
 18811  21D7  0844               	movf	LTC6804_wrcfg@current_ic,w
 18812  21D8  1D03               	btfss	3,2
 18813  21D9  2970               	goto	l7260
 18814  21DA                     l7286:	
 18815                           
 18816                           ;ltc6804.c: 1046: }
 18817                           ;ltc6804.c: 1049: wakeup_idle ();
 18818  21DA  31A8  2039  31A1   	fcall	_wakeup_idle
 18819                           
 18820                           ;ltc6804.c: 1051: LATDbits.LATD3 = 0;
 18821  21DD  0022               	movlb	2	; select bank2
 18822  21DE  118F               	bcf	15,3	;volatile
 18823                           
 18824                           ;ltc6804.c: 1052: spi_write_array(CMD_LEN, cmd);
 18825  21DF  3033               	movlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18826  21E0  0020               	movlb	0	; select bank0
 18827  21E1  00AF               	movwf	??_LTC6804_wrcfg
 18828  21E2  082F               	movf	??_LTC6804_wrcfg,w
 18829  21E3  00F5               	movwf	spi_write_array@data
 18830  21E4  083F               	movf	LTC6804_wrcfg@CMD_LEN,w
 18831  21E5  31A8  20B6         	fcall	_spi_write_array
 18832                           
 18833                           ;ltc6804.c: 1053: LATDbits.LATD3 = 1;
 18834  21E7  0022               	movlb	2	; select bank2
 18835  21E8  158F               	bsf	15,3	;volatile
 18836  21E9  0008               	return
 18837  21EA                     __end_of_LTC6804_wrcfg:	
 18838                           
 18839                           	psect	text51
 18840  2839                     __ptext51:	
 18841 ;; *************** function _wakeup_idle *****************
 18842 ;; Defined at:
 18843 ;;		line 1162 in file "ltc6804.c"
 18844 ;; Parameters:    Size  Location     Type
 18845 ;;		None
 18846 ;; Auto vars:     Size  Location     Type
 18847 ;;		None
 18848 ;; Return value:  Size  Location     Type
 18849 ;;                  1    wreg      void 
 18850 ;; Registers used:
 18851 ;;		wreg
 18852 ;; Tracked objects:
 18853 ;;		On entry : 0/0
 18854 ;;		On exit  : 0/0
 18855 ;;		Unchanged: 0/0
 18856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18861 ;;Total ram usage:        0 bytes
 18862 ;; Hardware stack levels used:    1
 18863 ;; Hardware stack levels required when called:    2
 18864 ;; This function calls:
 18865 ;;		Nothing
 18866 ;; This function is called by:
 18867 ;;		_LTC6804_adcv
 18868 ;;		_LTC6804_rdcv_reg
 18869 ;;		_LTC6804_wrcfg
 18870 ;;		_LTC6804_rdstat_reg
 18871 ;;		_LTC6804_adstat
 18872 ;;		_LTC6804_adax
 18873 ;;		_LTC6804_rdaux_reg
 18874 ;;		_LTC6804_clrcell
 18875 ;;		_LTC6804_clraux
 18876 ;;		_LTC6804_rdcfg
 18877 ;; This function uses a non-reentrant model
 18878 ;;
 18879                           
 18880                           
 18881                           ;psect for function _wakeup_idle
 18882  2839                     _wakeup_idle:	
 18883                           
 18884                           ;ltc6804.c: 1164: LATDbits.LATD3 = 0;
 18885                           
 18886                           ;incstack = 0
 18887                           ; Regs used in _wakeup_idle: [wreg]
 18888  2839  0022               	movlb	2	; select bank2
 18889  283A  118F               	bcf	15,3	;volatile
 18890                           
 18891                           ;ltc6804.c: 1165: _delay((unsigned long)((2)*(32000000/4000000.0)));
 18892  283B  3005               	movlw	5
 18893  283C                     u12387:	
 18894  283C  0B89               	decfsz	9,f
 18895  283D  283C               	goto	u12387
 18896  283E  0000               	nop
 18897                           
 18898                           ;ltc6804.c: 1166: LATDbits.LATD3 = 1;
 18899  283F  0022               	movlb	2	; select bank2
 18900  2840  158F               	bsf	15,3	;volatile
 18901  2841  0008               	return
 18902  2842                     __end_of_wakeup_idle:	
 18903                           
 18904                           	psect	text52
 18905  28B6                     __ptext52:	
 18906 ;; *************** function _spi_write_array *****************
 18907 ;; Defined at:
 18908 ;;		line 1213 in file "ltc6804.c"
 18909 ;; Parameters:    Size  Location     Type
 18910 ;;  len             1    wreg     unsigned char 
 18911 ;;  data            1    5[COMMON] PTR unsigned char 
 18912 ;;		 -> LTC6804_wrcfg@cmd(12), LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), LTC6804_adstat@cmd(4), 
 18913 ;; Auto vars:     Size  Location     Type
 18914 ;;  len             1    7[COMMON] unsigned char 
 18915 ;;  i               1    8[COMMON] unsigned char 
 18916 ;; Return value:  Size  Location     Type
 18917 ;;                  1    wreg      void 
 18918 ;; Registers used:
 18919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18920 ;; Tracked objects:
 18921 ;;		On entry : 0/0
 18922 ;;		On exit  : 0/0
 18923 ;;		Unchanged: 0/0
 18924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18925 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18927 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18928 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18929 ;;Total ram usage:        4 bytes
 18930 ;; Hardware stack levels used:    1
 18931 ;; Hardware stack levels required when called:    3
 18932 ;; This function calls:
 18933 ;;		_spi_write
 18934 ;; This function is called by:
 18935 ;;		_LTC6804_adcv
 18936 ;;		_LTC6804_wrcfg
 18937 ;;		_LTC6804_adstat
 18938 ;;		_LTC6804_adax
 18939 ;; This function uses a non-reentrant model
 18940 ;;
 18941                           
 18942                           
 18943                           ;psect for function _spi_write_array
 18944  28B6                     _spi_write_array:	
 18945                           
 18946                           ;incstack = 0
 18947                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18948                           ;spi_write_array@len stored from wreg
 18949  28B6  00F7               	movwf	spi_write_array@len
 18950                           
 18951                           ;ltc6804.c: 1217: for(char i = 0; i < len; i++)
 18952  28B7  01F8               	clrf	spi_write_array@i
 18953  28B8                     l6724:	
 18954  28B8  0877               	movf	spi_write_array@len,w
 18955  28B9  0278               	subwf	spi_write_array@i,w
 18956  28BA  1803               	btfsc	3,0
 18957  28BB  0008               	return
 18958                           
 18959                           ;ltc6804.c: 1218: {
 18960                           ;ltc6804.c: 1219: spi_write((char)data[i]);
 18961  28BC  0878               	movf	spi_write_array@i,w
 18962  28BD  0775               	addwf	spi_write_array@data,w
 18963  28BE  00F6               	movwf	??_spi_write_array
 18964  28BF  0876               	movf	??_spi_write_array,w
 18965  28C0  0086               	movwf	6
 18966  28C1  0187               	clrf	7
 18967  28C2  0801               	movf	1,w
 18968  28C3  31A8  2042  31A8   	fcall	_spi_write
 18969  28C6  3001               	movlw	1
 18970  28C7  00F6               	movwf	??_spi_write_array
 18971  28C8  0876               	movf	??_spi_write_array,w
 18972  28C9  07F8               	addwf	spi_write_array@i,f
 18973  28CA  28B8               	goto	l6724
 18974  28CB                     __end_of_spi_write_array:	
 18975                           
 18976                           	psect	text53
 18977  2842                     __ptext53:	
 18978 ;; *************** function _spi_write *****************
 18979 ;; Defined at:
 18980 ;;		line 36 in file "spi.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;  data            1    wreg     unsigned char 
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;  data            1    4[COMMON] unsigned char 
 18985 ;;  readData        1    3[COMMON] unsigned char 
 18986 ;; Return value:  Size  Location     Type
 18987 ;;                  1    wreg      void 
 18988 ;; Registers used:
 18989 ;;		wreg
 18990 ;; Tracked objects:
 18991 ;;		On entry : 0/0
 18992 ;;		On exit  : 0/0
 18993 ;;		Unchanged: 0/0
 18994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18996 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18997 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18998 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18999 ;;Total ram usage:        3 bytes
 19000 ;; Hardware stack levels used:    1
 19001 ;; Hardware stack levels required when called:    2
 19002 ;; This function calls:
 19003 ;;		Nothing
 19004 ;; This function is called by:
 19005 ;;		_spi_write_array
 19006 ;;		_spi_write_read
 19007 ;; This function uses a non-reentrant model
 19008 ;;
 19009                           
 19010                           
 19011                           ;psect for function _spi_write
 19012  2842                     _spi_write:	
 19013                           
 19014                           ;incstack = 0
 19015                           ; Regs used in _spi_write: [wreg]
 19016                           ;spi_write@data stored from wreg
 19017  2842  00F4               	movwf	spi_write@data
 19018                           
 19019                           ;spi.c: 37: SSP1BUF = data;
 19020  2843  0874               	movf	spi_write@data,w
 19021  2844  0024               	movlb	4	; select bank4
 19022  2845  0091               	movwf	17	;volatile
 19023  2846                     l798:	
 19024                           ;spi.c: 38: while(SSP1STATbits.BF == 0);
 19025                           
 19026  2846  1C14               	btfss	20,0	;volatile
 19027  2847  2846               	goto	l798
 19028                           
 19029                           ;spi.c: 39: char readData = SSP1BUF;
 19030  2848  0811               	movf	17,w	;volatile
 19031  2849  00F2               	movwf	??_spi_write
 19032  284A  0872               	movf	??_spi_write,w
 19033  284B  00F3               	movwf	spi_write@readData
 19034  284C  0008               	return
 19035  284D                     __end_of_spi_write:	
 19036                           
 19037                           	psect	text54
 19038  2B0C                     __ptext54:	
 19039 ;; *************** function _pec15_calc *****************
 19040 ;; Defined at:
 19041 ;;		line 1190 in file "ltc6804.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;  len             1    wreg     unsigned char 
 19044 ;;  data            2    6[COMMON] PTR unsigned char 
 19045 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), LTC6804_rdaux@data(8), 
 19046 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), 
 19047 ;;		 -> ADSTAT(2), LTC6804_rdstat_reg@cmd(4), configReg(6), 
 19048 ;; Auto vars:     Size  Location     Type
 19049 ;;  len             1    9[BANK0 ] unsigned char 
 19050 ;;  i               1   12[BANK0 ] unsigned char 
 19051 ;;  remainder       2   13[BANK0 ] int 
 19052 ;;  addr            2   10[BANK0 ] int 
 19053 ;; Return value:  Size  Location     Type
 19054 ;;                  2    6[COMMON] int 
 19055 ;; Registers used:
 19056 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 19057 ;; Tracked objects:
 19058 ;;		On entry : 0/0
 19059 ;;		On exit  : 0/0
 19060 ;;		Unchanged: 0/0
 19061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19062 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19063 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19064 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19065 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19066 ;;Total ram usage:       17 bytes
 19067 ;; Hardware stack levels used:    1
 19068 ;; Hardware stack levels required when called:    2
 19069 ;; This function calls:
 19070 ;;		Nothing
 19071 ;; This function is called by:
 19072 ;;		_LTC6804_adcv
 19073 ;;		_LTC6804_rdcv
 19074 ;;		_LTC6804_rdcv_reg
 19075 ;;		_LTC6804_wrcfg
 19076 ;;		_LTC6804_rdstat_reg
 19077 ;;		_LTC6804_adstat
 19078 ;;		_LTC6804_adax
 19079 ;;		_LTC6804_rdaux
 19080 ;;		_LTC6804_rdaux_reg
 19081 ;;		_LTC6804_clrcell
 19082 ;;		_LTC6804_clraux
 19083 ;;		_LTC6804_rdcfg
 19084 ;; This function uses a non-reentrant model
 19085 ;;
 19086                           
 19087                           
 19088                           ;psect for function _pec15_calc
 19089  2B0C                     _pec15_calc:	
 19090                           
 19091                           ;incstack = 0
 19092                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 19093                           ;pec15_calc@len stored from wreg
 19094  2B0C  0020               	movlb	0	; select bank0
 19095  2B0D  00A9               	movwf	pec15_calc@len
 19096                           
 19097                           ;ltc6804.c: 1194: int remainder,addr;
 19098                           ;ltc6804.c: 1196: remainder = 16;
 19099  2B0E  3010               	movlw	16
 19100  2B0F  00AD               	movwf	pec15_calc@remainder
 19101  2B10  3000               	movlw	0
 19102  2B11  00AE               	movwf	pec15_calc@remainder+1
 19103                           
 19104                           ;ltc6804.c: 1197: for(char i = 0; i<len;i++)
 19105  2B12  01AC               	clrf	pec15_calc@i
 19106  2B13                     l6690:	
 19107  2B13  0829               	movf	pec15_calc@len,w
 19108  2B14  022C               	subwf	pec15_calc@i,w
 19109  2B15  1803               	btfsc	3,0
 19110  2B16  2B56               	goto	l6692
 19111                           
 19112                           ;ltc6804.c: 1198: {
 19113                           ;ltc6804.c: 1199: addr = ((remainder>>7)^data[i])&0xff;
 19114  2B17  082C               	movf	pec15_calc@i,w
 19115  2B18  00A0               	movwf	??_pec15_calc
 19116  2B19  01A1               	clrf	??_pec15_calc+1
 19117  2B1A  0820               	movf	??_pec15_calc,w
 19118  2B1B  0776               	addwf	pec15_calc@data,w
 19119  2B1C  0086               	movwf	6
 19120  2B1D  0821               	movf	??_pec15_calc+1,w
 19121  2B1E  3D77               	addwfc	pec15_calc@data+1,w
 19122  2B1F  0087               	movwf	7
 19123  2B20  0801               	movf	1,w
 19124  2B21  00A2               	movwf	??_pec15_calc+2
 19125  2B22  01A3               	clrf	??_pec15_calc+3
 19126  2B23  082E               	movf	pec15_calc@remainder+1,w
 19127  2B24  00A5               	movwf	??_pec15_calc+5
 19128  2B25  082D               	movf	pec15_calc@remainder,w
 19129  2B26  00A4               	movwf	??_pec15_calc+4
 19130  2B27  3007               	movlw	7
 19131  2B28  00A6               	movwf	??_pec15_calc+6
 19132  2B29                     u8485:	
 19133  2B29  0D25               	rlf	??_pec15_calc+5,w
 19134  2B2A  0CA5               	rrf	??_pec15_calc+5,f
 19135  2B2B  0CA4               	rrf	??_pec15_calc+4,f
 19136  2B2C  0BA6               	decfsz	??_pec15_calc+6,f
 19137  2B2D  2B29               	goto	u8485
 19138  2B2E  0822               	movf	??_pec15_calc+2,w
 19139  2B2F  0624               	xorwf	??_pec15_calc+4,w
 19140  2B30  00A7               	movwf	??_pec15_calc+7
 19141  2B31  0823               	movf	??_pec15_calc+3,w
 19142  2B32  0625               	xorwf	??_pec15_calc+5,w
 19143  2B33  00A8               	movwf	??_pec15_calc+8
 19144  2B34  30FF               	movlw	255
 19145  2B35  0527               	andwf	??_pec15_calc+7,w
 19146  2B36  00AA               	movwf	pec15_calc@addr
 19147  2B37  3000               	movlw	0
 19148  2B38  0528               	andwf	??_pec15_calc+8,w
 19149  2B39  00AB               	movwf	pec15_calc@addr+1
 19150                           
 19151                           ;ltc6804.c: 1200: remainder = (remainder<<8)^crc15Table[addr];
 19152  2B3A  082B               	movf	pec15_calc@addr+1,w
 19153  2B3B  0085               	movwf	5
 19154  2B3C  082A               	movf	pec15_calc@addr,w
 19155  2B3D  0084               	movwf	4
 19156  2B3E  3584               	lslf	4,f
 19157  2B3F  0D85               	rlf	5,f
 19158  2B40  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 19159  2B41  0784               	addwf	4,f
 19160  2B42  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 19161  2B43  3D85               	addwfc	5,f
 19162  2B44  3F00               	moviw [0]fsr0
 19163  2B45  00A0               	movwf	??_pec15_calc
 19164  2B46  3F01               	moviw [1]fsr0
 19165  2B47  00A1               	movwf	??_pec15_calc+1
 19166  2B48  082D               	movf	pec15_calc@remainder,w
 19167  2B49  00A3               	movwf	??_pec15_calc+3
 19168  2B4A  01A2               	clrf	??_pec15_calc+2
 19169  2B4B  0820               	movf	??_pec15_calc,w
 19170  2B4C  0622               	xorwf	??_pec15_calc+2,w
 19171  2B4D  00AD               	movwf	pec15_calc@remainder
 19172  2B4E  0821               	movf	??_pec15_calc+1,w
 19173  2B4F  0623               	xorwf	??_pec15_calc+3,w
 19174  2B50  00AE               	movwf	pec15_calc@remainder+1
 19175  2B51  3001               	movlw	1
 19176  2B52  00A0               	movwf	??_pec15_calc
 19177  2B53  0820               	movf	??_pec15_calc,w
 19178  2B54  07AC               	addwf	pec15_calc@i,f
 19179  2B55  2B13               	goto	l6690
 19180  2B56                     l6692:	
 19181                           
 19182                           ;ltc6804.c: 1201: }
 19183                           ;ltc6804.c: 1202: return(remainder*2);
 19184  2B56  352D               	lslf	pec15_calc@remainder,w
 19185  2B57  00F6               	movwf	?_pec15_calc
 19186  2B58  0D2E               	rlf	pec15_calc@remainder+1,w
 19187  2B59  00F7               	movwf	?_pec15_calc+1
 19188  2B5A  0008               	return
 19189  2B5B                     __end_of_pec15_calc:	
 19190                           
 19191                           	psect	text55
 19192  2871                     __ptext55:	
 19193 ;; *************** function ___bmul *****************
 19194 ;; Defined at:
 19195 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 19196 ;; Parameters:    Size  Location     Type
 19197 ;;  multiplier      1    wreg     unsigned char 
 19198 ;;  multiplicand    1    2[COMMON] unsigned char 
 19199 ;; Auto vars:     Size  Location     Type
 19200 ;;  multiplier      1    5[COMMON] unsigned char 
 19201 ;;  product         1    4[COMMON] unsigned char 
 19202 ;; Return value:  Size  Location     Type
 19203 ;;                  1    wreg      unsigned char 
 19204 ;; Registers used:
 19205 ;;		wreg, status,2, status,0
 19206 ;; Tracked objects:
 19207 ;;		On entry : 0/0
 19208 ;;		On exit  : 0/0
 19209 ;;		Unchanged: 0/0
 19210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19211 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19213 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19214 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19215 ;;Total ram usage:        4 bytes
 19216 ;; Hardware stack levels used:    1
 19217 ;; Hardware stack levels required when called:    2
 19218 ;; This function calls:
 19219 ;;		Nothing
 19220 ;; This function is called by:
 19221 ;;		_LTC6804_rdcv
 19222 ;;		_LTC6804_rdcv_reg
 19223 ;;		_LTC6804_wrcfg
 19224 ;;		_LTC6804_rdstat_reg
 19225 ;;		_LTC6804_rdaux
 19226 ;;		_LTC6804_rdaux_reg
 19227 ;;		_LTC6804_rdcfg
 19228 ;; This function uses a non-reentrant model
 19229 ;;
 19230                           
 19231                           
 19232                           ;psect for function ___bmul
 19233  2871                     ___bmul:	
 19234                           
 19235                           ;incstack = 0
 19236                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 19237                           ;___bmul@multiplier stored from wreg
 19238  2871  00F5               	movwf	___bmul@multiplier
 19239  2872  01F4               	clrf	___bmul@product
 19240  2873                     l6728:	
 19241  2873  1C75               	btfss	___bmul@multiplier,0
 19242  2874  2879               	goto	l6732
 19243  2875  0872               	movf	___bmul@multiplicand,w
 19244  2876  00F3               	movwf	??___bmul
 19245  2877  0873               	movf	??___bmul,w
 19246  2878  07F4               	addwf	___bmul@product,f
 19247  2879                     l6732:	
 19248  2879  1003               	clrc
 19249  287A  0DF2               	rlf	___bmul@multiplicand,f
 19250  287B  1003               	clrc
 19251  287C  0CF5               	rrf	___bmul@multiplier,f
 19252  287D  0875               	movf	___bmul@multiplier,w
 19253  287E  1D03               	btfss	3,2
 19254  287F  2873               	goto	l6728
 19255  2880  0874               	movf	___bmul@product,w
 19256  2881  0008               	return
 19257  2882                     __end_of___bmul:	
 19258                           
 19259                           	psect	text56
 19260  2E5A                     __ptext56:	
 19261 ;; *************** function _avgBuff *****************
 19262 ;; Defined at:
 19263 ;;		line 68 in file "adc.c"
 19264 ;; Parameters:    Size  Location     Type
 19265 ;;  buff            1    wreg     PTR float 
 19266 ;;		 -> main@currentBuff(80), 
 19267 ;;  size            2   33[BANK1 ] int 
 19268 ;; Auto vars:     Size  Location     Type
 19269 ;;  buff            1   39[BANK1 ] PTR float 
 19270 ;;		 -> main@currentBuff(80), 
 19271 ;;  total           4   40[BANK1 ] float 
 19272 ;;  inc             2   44[BANK1 ] int 
 19273 ;; Return value:  Size  Location     Type
 19274 ;;                  4   33[BANK1 ] float 
 19275 ;; Registers used:
 19276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19277 ;; Tracked objects:
 19278 ;;		On entry : 0/0
 19279 ;;		On exit  : 0/0
 19280 ;;		Unchanged: 0/0
 19281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19282 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19283 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19284 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19285 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19286 ;;Total ram usage:       13 bytes
 19287 ;; Hardware stack levels used:    1
 19288 ;; Hardware stack levels required when called:    3
 19289 ;; This function calls:
 19290 ;;		___fladd
 19291 ;;		___fldiv
 19292 ;;		___xxtofl
 19293 ;; This function is called by:
 19294 ;;		_main
 19295 ;; This function uses a non-reentrant model
 19296 ;;
 19297                           
 19298                           
 19299                           ;psect for function _avgBuff
 19300  2E5A                     _avgBuff:	
 19301                           
 19302                           ;incstack = 0
 19303                           ; Regs used in _avgBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19304                           ;avgBuff@buff stored from wreg
 19305  2E5A  0021               	movlb	1	; select bank1
 19306  2E5B  00C7               	movwf	avgBuff@buff^(0+128)
 19307                           
 19308                           ;adc.c: 69: int inc = 0;
 19309  2E5C  01CC               	clrf	avgBuff@inc^(0+128)
 19310  2E5D  01CD               	clrf	(avgBuff@inc+1)^(0+128)
 19311                           
 19312                           ;adc.c: 70: float total = 0;
 19313  2E5E  3000               	movlw	0
 19314  2E5F  00CB               	movwf	(avgBuff@total+3)^(0+128)
 19315  2E60  3000               	movlw	0
 19316  2E61  00CA               	movwf	(avgBuff@total+2)^(0+128)
 19317  2E62  3000               	movlw	0
 19318  2E63  00C9               	movwf	(avgBuff@total+1)^(0+128)
 19319  2E64  3000               	movlw	0
 19320  2E65  00C8               	movwf	avgBuff@total^(0+128)
 19321                           
 19322                           ;adc.c: 71: for(inc = 0; inc < size; inc++){
 19323  2E66  01CC               	clrf	avgBuff@inc^(0+128)
 19324  2E67  01CD               	clrf	(avgBuff@inc+1)^(0+128)
 19325  2E68                     l8578:	
 19326  2E68  084D               	movf	(avgBuff@inc+1)^(0+128),w
 19327  2E69  3A80               	xorlw	128
 19328  2E6A  00C5               	movwf	??_avgBuff^(0+128)
 19329  2E6B  0842               	movf	(avgBuff@size+1)^(0+128),w
 19330  2E6C  3A80               	xorlw	128
 19331  2E6D  0245               	subwf	??_avgBuff^(0+128),w
 19332  2E6E  1D03               	skipz
 19333  2E6F  2E72               	goto	u12025
 19334  2E70  0841               	movf	avgBuff@size^(0+128),w
 19335  2E71  024C               	subwf	avgBuff@inc^(0+128),w
 19336  2E72                     u12025:	
 19337  2E72  1803               	btfsc	3,0
 19338  2E73  2EA4               	goto	l8580
 19339                           
 19340                           ;adc.c: 72: total += buff[inc];
 19341  2E74  0021               	movlb	1	; select bank1
 19342  2E75  084C               	movf	avgBuff@inc^(0+128),w
 19343  2E76  00C5               	movwf	??_avgBuff^(0+128)
 19344  2E77  3001               	movlw	1
 19345  2E78                     u12015:	
 19346  2E78  35C5               	lslf	??_avgBuff^(0+128),f
 19347  2E79  3EFF               	addlw	-1
 19348  2E7A  1D03               	skipz
 19349  2E7B  2E78               	goto	u12015
 19350  2E7C  3545               	lslf	??_avgBuff^(0+128),w
 19351  2E7D  0747               	addwf	avgBuff@buff^(0+128),w
 19352  2E7E  00C6               	movwf	(??_avgBuff+1)^(0+128)
 19353  2E7F  0846               	movf	(??_avgBuff+1)^(0+128),w
 19354  2E80  0086               	movwf	6
 19355  2E81  3003               	movlw	3	; select bank6/7
 19356  2E82  0087               	movwf	7
 19357  2E83  3F40               	moviw [0]fsr1
 19358  2E84  00A9               	movwf	___fladd@b^(0+128)
 19359  2E85  3F41               	moviw [1]fsr1
 19360  2E86  00AA               	movwf	(___fladd@b+1)^(0+128)
 19361  2E87  3F42               	moviw [2]fsr1
 19362  2E88  00AB               	movwf	(___fladd@b+2)^(0+128)
 19363  2E89  3F43               	moviw [3]fsr1
 19364  2E8A  00AC               	movwf	(___fladd@b+3)^(0+128)
 19365  2E8B  084B               	movf	(avgBuff@total+3)^(0+128),w
 19366  2E8C  00B0               	movwf	(___fladd@a+3)^(0+128)
 19367  2E8D  084A               	movf	(avgBuff@total+2)^(0+128),w
 19368  2E8E  00AF               	movwf	(___fladd@a+2)^(0+128)
 19369  2E8F  0849               	movf	(avgBuff@total+1)^(0+128),w
 19370  2E90  00AE               	movwf	(___fladd@a+1)^(0+128)
 19371  2E91  0848               	movf	avgBuff@total^(0+128),w
 19372  2E92  00AD               	movwf	___fladd@a^(0+128)
 19373  2E93  3193  23D8  31AE   	fcall	___fladd
 19374  2E96  0021               	movlb	1	; select bank1
 19375  2E97  082C               	movf	(?___fladd+3)^(0+128),w
 19376  2E98  00CB               	movwf	(avgBuff@total+3)^(0+128)
 19377  2E99  082B               	movf	(?___fladd+2)^(0+128),w
 19378  2E9A  00CA               	movwf	(avgBuff@total+2)^(0+128)
 19379  2E9B  082A               	movf	(?___fladd+1)^(0+128),w
 19380  2E9C  00C9               	movwf	(avgBuff@total+1)^(0+128)
 19381  2E9D  0829               	movf	?___fladd^(0+128),w
 19382  2E9E  00C8               	movwf	avgBuff@total^(0+128)
 19383  2E9F  3001               	movlw	1
 19384  2EA0  07CC               	addwf	avgBuff@inc^(0+128),f
 19385  2EA1  3000               	movlw	0
 19386  2EA2  3DCD               	addwfc	(avgBuff@inc+1)^(0+128),f
 19387  2EA3  2E68               	goto	l8578
 19388  2EA4                     l8580:	
 19389                           
 19390                           ;adc.c: 73: }
 19391                           ;adc.c: 75: return ((float) total)/((float) size);
 19392  2EA4  0021               	movlb	1	; select bank1
 19393  2EA5  0841               	movf	avgBuff@size^(0+128),w
 19394  2EA6  0020               	movlb	0	; select bank0
 19395  2EA7  00AE               	movwf	___xxtofl@val
 19396  2EA8  0021               	movlb	1	; select bank1
 19397  2EA9  0842               	movf	(avgBuff@size+1)^(0+128),w
 19398  2EAA  0020               	movlb	0	; select bank0
 19399  2EAB  00AF               	movwf	___xxtofl@val+1
 19400  2EAC  0D89               	rlf	9,f
 19401  2EAD  3B89               	subwfb	9,f
 19402  2EAE  0989               	comf	9,f
 19403  2EAF  00B0               	movwf	___xxtofl@val+2
 19404  2EB0  00B1               	movwf	___xxtofl@val+3
 19405  2EB1  3001               	movlw	1
 19406  2EB2  31AF  276A  31AE   	fcall	___xxtofl
 19407  2EB5  0020               	movlb	0	; select bank0
 19408  2EB6  0831               	movf	?___xxtofl+3,w
 19409  2EB7  00D5               	movwf	___fldiv@a+3
 19410  2EB8  0830               	movf	?___xxtofl+2,w
 19411  2EB9  00D4               	movwf	___fldiv@a+2
 19412  2EBA  082F               	movf	?___xxtofl+1,w
 19413  2EBB  00D3               	movwf	___fldiv@a+1
 19414  2EBC  082E               	movf	?___xxtofl,w
 19415  2EBD  00D2               	movwf	___fldiv@a
 19416  2EBE  0021               	movlb	1	; select bank1
 19417  2EBF  084B               	movf	(avgBuff@total+3)^(0+128),w
 19418  2EC0  0020               	movlb	0	; select bank0
 19419  2EC1  00D9               	movwf	___fldiv@b+3
 19420  2EC2  0021               	movlb	1	; select bank1
 19421  2EC3  084A               	movf	(avgBuff@total+2)^(0+128),w
 19422  2EC4  0020               	movlb	0	; select bank0
 19423  2EC5  00D8               	movwf	___fldiv@b+2
 19424  2EC6  0021               	movlb	1	; select bank1
 19425  2EC7  0849               	movf	(avgBuff@total+1)^(0+128),w
 19426  2EC8  0020               	movlb	0	; select bank0
 19427  2EC9  00D7               	movwf	___fldiv@b+1
 19428  2ECA  0021               	movlb	1	; select bank1
 19429  2ECB  0848               	movf	avgBuff@total^(0+128),w
 19430  2ECC  0020               	movlb	0	; select bank0
 19431  2ECD  00D6               	movwf	___fldiv@b
 19432  2ECE  3190  2073         	fcall	___fldiv
 19433  2ED0  0020               	movlb	0	; select bank0
 19434  2ED1  0855               	movf	?___fldiv+3,w
 19435  2ED2  0021               	movlb	1	; select bank1
 19436  2ED3  00C4               	movwf	(?_avgBuff+3)^(0+128)
 19437  2ED4  0020               	movlb	0	; select bank0
 19438  2ED5  0854               	movf	?___fldiv+2,w
 19439  2ED6  0021               	movlb	1	; select bank1
 19440  2ED7  00C3               	movwf	(?_avgBuff+2)^(0+128)
 19441  2ED8  0020               	movlb	0	; select bank0
 19442  2ED9  0853               	movf	?___fldiv+1,w
 19443  2EDA  0021               	movlb	1	; select bank1
 19444  2EDB  00C2               	movwf	(?_avgBuff+1)^(0+128)
 19445  2EDC  0020               	movlb	0	; select bank0
 19446  2EDD  0852               	movf	?___fldiv,w
 19447  2EDE  0021               	movlb	1	; select bank1
 19448  2EDF  00C1               	movwf	?_avgBuff^(0+128)
 19449  2EE0  0008               	return
 19450  2EE1                     __end_of_avgBuff:	
 19451                           
 19452                           	psect	text57
 19453  2F6A                     __ptext57:	
 19454 ;; *************** function ___xxtofl *****************
 19455 ;; Defined at:
 19456 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 19457 ;; Parameters:    Size  Location     Type
 19458 ;;  sign            1    wreg     unsigned char 
 19459 ;;  val             4   14[BANK0 ] long 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;  sign            1   18[BANK0 ] unsigned char 
 19462 ;;  arg             4   20[BANK0 ] unsigned long 
 19463 ;;  exp             1   19[BANK0 ] unsigned char 
 19464 ;; Return value:  Size  Location     Type
 19465 ;;                  4   14[BANK0 ] unsigned char 
 19466 ;; Registers used:
 19467 ;;		wreg, status,2, status,0
 19468 ;; Tracked objects:
 19469 ;;		On entry : 0/0
 19470 ;;		On exit  : 0/0
 19471 ;;		Unchanged: 0/0
 19472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19473 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19474 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19476 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19477 ;;Total ram usage:       14 bytes
 19478 ;; Hardware stack levels used:    1
 19479 ;; Hardware stack levels required when called:    2
 19480 ;; This function calls:
 19481 ;;		Nothing
 19482 ;; This function is called by:
 19483 ;;		_main
 19484 ;;		_calculateTemp
 19485 ;;		_getCurrent
 19486 ;;		_avgBuff
 19487 ;;		_measureVoltages
 19488 ;;		_sprintf
 19489 ;; This function uses a non-reentrant model
 19490 ;;
 19491                           
 19492                           
 19493                           ;psect for function ___xxtofl
 19494  2F6A                     ___xxtofl:	
 19495                           
 19496                           ;incstack = 0
 19497                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 19498                           ;___xxtofl@sign stored from wreg
 19499  2F6A  0020               	movlb	0	; select bank0
 19500  2F6B  00B2               	movwf	___xxtofl@sign
 19501  2F6C  0832               	movf	___xxtofl@sign,w
 19502  2F6D  1D03               	btfss	3,2
 19503  2F6E  1FB1               	btfss	___xxtofl@val+3,7
 19504  2F6F  2F80               	goto	l7786
 19505  2F70  092E               	comf	___xxtofl@val,w
 19506  2F71  00B4               	movwf	___xxtofl@arg
 19507  2F72  092F               	comf	___xxtofl@val+1,w
 19508  2F73  00B5               	movwf	___xxtofl@arg+1
 19509  2F74  0930               	comf	___xxtofl@val+2,w
 19510  2F75  00B6               	movwf	___xxtofl@arg+2
 19511  2F76  0931               	comf	___xxtofl@val+3,w
 19512  2F77  00B7               	movwf	___xxtofl@arg+3
 19513  2F78  0AB4               	incf	___xxtofl@arg,f
 19514  2F79  1903               	skipnz
 19515  2F7A  0AB5               	incf	___xxtofl@arg+1,f
 19516  2F7B  1903               	skipnz
 19517  2F7C  0AB6               	incf	___xxtofl@arg+2,f
 19518  2F7D  1903               	skipnz
 19519  2F7E  0AB7               	incf	___xxtofl@arg+3,f
 19520  2F7F  2F88               	goto	l1425
 19521  2F80                     l7786:	
 19522  2F80  0831               	movf	___xxtofl@val+3,w
 19523  2F81  00B7               	movwf	___xxtofl@arg+3
 19524  2F82  0830               	movf	___xxtofl@val+2,w
 19525  2F83  00B6               	movwf	___xxtofl@arg+2
 19526  2F84  082F               	movf	___xxtofl@val+1,w
 19527  2F85  00B5               	movwf	___xxtofl@arg+1
 19528  2F86  082E               	movf	___xxtofl@val,w
 19529  2F87  00B4               	movwf	___xxtofl@arg
 19530  2F88                     l1425:	
 19531  2F88  0831               	movf	___xxtofl@val+3,w
 19532  2F89  0430               	iorwf	___xxtofl@val+2,w
 19533  2F8A  042F               	iorwf	___xxtofl@val+1,w
 19534  2F8B  042E               	iorwf	___xxtofl@val,w
 19535  2F8C  1D03               	skipz
 19536  2F8D  2F97               	goto	l7792
 19537  2F8E  3000               	movlw	0
 19538  2F8F  00B1               	movwf	?___xxtofl+3
 19539  2F90  3000               	movlw	0
 19540  2F91  00B0               	movwf	?___xxtofl+2
 19541  2F92  3000               	movlw	0
 19542  2F93  00AF               	movwf	?___xxtofl+1
 19543  2F94  3000               	movlw	0
 19544  2F95  00AE               	movwf	?___xxtofl
 19545  2F96  0008               	return
 19546  2F97                     l7792:	
 19547  2F97  3096               	movlw	150
 19548  2F98  00F4               	movwf	??___xxtofl
 19549  2F99  0874               	movf	??___xxtofl,w
 19550  2F9A  00B3               	movwf	___xxtofl@exp
 19551  2F9B                     l7796:	
 19552  2F9B  30FE               	movlw	254
 19553  2F9C  0537               	andwf	___xxtofl@arg+3,w
 19554  2F9D  1903               	btfsc	3,2
 19555  2F9E  2FBE               	goto	l1431
 19556  2F9F  3001               	movlw	1
 19557  2FA0  00F4               	movwf	??___xxtofl
 19558  2FA1  0874               	movf	??___xxtofl,w
 19559  2FA2  07B3               	addwf	___xxtofl@exp,f
 19560  2FA3  3001               	movlw	1
 19561  2FA4                     u10645:	
 19562  2FA4  36B7               	lsrf	___xxtofl@arg+3,f
 19563  2FA5  0CB6               	rrf	___xxtofl@arg+2,f
 19564  2FA6  0CB5               	rrf	___xxtofl@arg+1,f
 19565  2FA7  0CB4               	rrf	___xxtofl@arg,f
 19566  2FA8  0B89               	decfsz	9,f
 19567  2FA9  2FA4               	goto	u10645
 19568  2FAA  2F9B               	goto	l7796
 19569  2FAB                     l7798:	
 19570  2FAB  3001               	movlw	1
 19571  2FAC  00F4               	movwf	??___xxtofl
 19572  2FAD  0874               	movf	??___xxtofl,w
 19573  2FAE  07B3               	addwf	___xxtofl@exp,f
 19574  2FAF  3001               	movlw	1
 19575  2FB0  07B4               	addwf	___xxtofl@arg,f
 19576  2FB1  3000               	movlw	0
 19577  2FB2  3DB5               	addwfc	___xxtofl@arg+1,f
 19578  2FB3  3000               	movlw	0
 19579  2FB4  3DB6               	addwfc	___xxtofl@arg+2,f
 19580  2FB5  3000               	movlw	0
 19581  2FB6  3DB7               	addwfc	___xxtofl@arg+3,f
 19582  2FB7  3001               	movlw	1
 19583  2FB8                     u10665:	
 19584  2FB8  36B7               	lsrf	___xxtofl@arg+3,f
 19585  2FB9  0CB6               	rrf	___xxtofl@arg+2,f
 19586  2FBA  0CB5               	rrf	___xxtofl@arg+1,f
 19587  2FBB  0CB4               	rrf	___xxtofl@arg,f
 19588  2FBC  0B89               	decfsz	9,f
 19589  2FBD  2FB8               	goto	u10665
 19590  2FBE                     l1431:	
 19591  2FBE  30FF               	movlw	255
 19592  2FBF  0537               	andwf	___xxtofl@arg+3,w
 19593  2FC0  1903               	btfsc	3,2
 19594  2FC1  2FCC               	goto	l7806
 19595  2FC2  2FAB               	goto	l7798
 19596  2FC3                     l7804:	
 19597  2FC3  3001               	movlw	1
 19598  2FC4  02B3               	subwf	___xxtofl@exp,f
 19599  2FC5  3001               	movlw	1
 19600  2FC6                     u10685:	
 19601  2FC6  35B4               	lslf	___xxtofl@arg,f
 19602  2FC7  0DB5               	rlf	___xxtofl@arg+1,f
 19603  2FC8  0DB6               	rlf	___xxtofl@arg+2,f
 19604  2FC9  0DB7               	rlf	___xxtofl@arg+3,f
 19605  2FCA  0B89               	decfsz	9,f
 19606  2FCB  2FC6               	goto	u10685
 19607  2FCC                     l7806:	
 19608  2FCC  1BB6               	btfsc	___xxtofl@arg+2,7
 19609  2FCD  2FD2               	goto	l1438
 19610  2FCE  3002               	movlw	2
 19611  2FCF  0233               	subwf	___xxtofl@exp,w
 19612  2FD0  1803               	skipnc
 19613  2FD1  2FC3               	goto	l7804
 19614  2FD2                     l1438:	
 19615  2FD2  1833               	btfsc	___xxtofl@exp,0
 19616  2FD3  2FDC               	goto	l1439
 19617  2FD4  30FF               	movlw	255
 19618  2FD5  05B4               	andwf	___xxtofl@arg,f
 19619  2FD6  30FF               	movlw	255
 19620  2FD7  05B5               	andwf	___xxtofl@arg+1,f
 19621  2FD8  307F               	movlw	127
 19622  2FD9  05B6               	andwf	___xxtofl@arg+2,f
 19623  2FDA  30FF               	movlw	255
 19624  2FDB  05B7               	andwf	___xxtofl@arg+3,f
 19625  2FDC                     l1439:	
 19626  2FDC  1003               	clrc
 19627  2FDD  0CB3               	rrf	___xxtofl@exp,f
 19628  2FDE  0833               	movf	___xxtofl@exp,w
 19629  2FDF  00F4               	movwf	??___xxtofl
 19630  2FE0  01F5               	clrf	??___xxtofl+1
 19631  2FE1  01F6               	clrf	??___xxtofl+2
 19632  2FE2  01F7               	clrf	??___xxtofl+3
 19633  2FE3  3018               	movlw	24
 19634  2FE4                     u10725:	
 19635  2FE4  35F4               	lslf	??___xxtofl,f
 19636  2FE5  0DF5               	rlf	??___xxtofl+1,f
 19637  2FE6  0DF6               	rlf	??___xxtofl+2,f
 19638  2FE7  0DF7               	rlf	??___xxtofl+3,f
 19639  2FE8  0B89               	decfsz	9,f
 19640  2FE9  2FE4               	goto	u10725
 19641  2FEA  0874               	movf	??___xxtofl,w
 19642  2FEB  04B4               	iorwf	___xxtofl@arg,f
 19643  2FEC  0875               	movf	??___xxtofl+1,w
 19644  2FED  04B5               	iorwf	___xxtofl@arg+1,f
 19645  2FEE  0876               	movf	??___xxtofl+2,w
 19646  2FEF  04B6               	iorwf	___xxtofl@arg+2,f
 19647  2FF0  0877               	movf	??___xxtofl+3,w
 19648  2FF1  04B7               	iorwf	___xxtofl@arg+3,f
 19649  2FF2  0832               	movf	___xxtofl@sign,w
 19650  2FF3  1D03               	btfss	3,2
 19651  2FF4  1FB1               	btfss	___xxtofl@val+3,7
 19652  2FF5  2FF7               	goto	l7820
 19653  2FF6  17B7               	bsf	___xxtofl@arg+3,7
 19654  2FF7                     l7820:	
 19655  2FF7  0837               	movf	___xxtofl@arg+3,w
 19656  2FF8  00B1               	movwf	?___xxtofl+3
 19657  2FF9  0836               	movf	___xxtofl@arg+2,w
 19658  2FFA  00B0               	movwf	?___xxtofl+2
 19659  2FFB  0835               	movf	___xxtofl@arg+1,w
 19660  2FFC  00AF               	movwf	?___xxtofl+1
 19661  2FFD  0834               	movf	___xxtofl@arg,w
 19662  2FFE  00AE               	movwf	?___xxtofl
 19663  2FFF  0008               	return
 19664  3000                     __end_of___xxtofl:	
 19665                           
 19666                           	psect	text58
 19667  1073                     __ptext58:	
 19668 ;; *************** function ___fldiv *****************
 19669 ;; Defined at:
 19670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 19671 ;; Parameters:    Size  Location     Type
 19672 ;;  a               4   50[BANK0 ] unsigned char 
 19673 ;;  b               4   54[BANK0 ] unsigned char 
 19674 ;; Auto vars:     Size  Location     Type
 19675 ;;  grs             4   70[BANK0 ] unsigned long 
 19676 ;;  rem             4   64[BANK0 ] unsigned long 
 19677 ;;  new_exp         2   68[BANK0 ] int 
 19678 ;;  aexp            1   75[BANK0 ] unsigned char 
 19679 ;;  bexp            1   74[BANK0 ] unsigned char 
 19680 ;;  sign            1   63[BANK0 ] unsigned char 
 19681 ;; Return value:  Size  Location     Type
 19682 ;;                  4   50[BANK0 ] unsigned char 
 19683 ;; Registers used:
 19684 ;;		wreg, status,2, status,0
 19685 ;; Tracked objects:
 19686 ;;		On entry : 0/0
 19687 ;;		On exit  : 0/0
 19688 ;;		Unchanged: 0/0
 19689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19690 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19691 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19692 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19693 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19694 ;;Total ram usage:       26 bytes
 19695 ;; Hardware stack levels used:    1
 19696 ;; Hardware stack levels required when called:    2
 19697 ;; This function calls:
 19698 ;;		Nothing
 19699 ;; This function is called by:
 19700 ;;		_main
 19701 ;;		_startUp
 19702 ;;		_calculateTemp
 19703 ;;		_calculateCurrent
 19704 ;;		_avgBuff
 19705 ;;		_measureVoltages
 19706 ;; This function uses a non-reentrant model
 19707 ;;
 19708                           
 19709                           
 19710                           ;psect for function ___fldiv
 19711  1073                     ___fldiv:	
 19712                           
 19713                           ;incstack = 0
 19714                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19715  1073  0020               	movlb	0	; select bank0
 19716  1074  0859               	movf	___fldiv@b+3,w
 19717  1075  3980               	andlw	128
 19718  1076  00DA               	movwf	??___fldiv
 19719  1077  085A               	movf	??___fldiv,w
 19720  1078  00DF               	movwf	___fldiv@sign
 19721  1079  3559               	lslf	___fldiv@b+3,w
 19722  107A  00DA               	movwf	??___fldiv
 19723  107B  085A               	movf	??___fldiv,w
 19724  107C  00EA               	movwf	___fldiv@bexp
 19725  107D  1BD8               	btfsc	___fldiv@b+2,7
 19726  107E  146A               	bsf	___fldiv@bexp,0
 19727  107F  086A               	movf	___fldiv@bexp,w
 19728  1080  1903               	btfsc	3,2
 19729  1081  2890               	goto	l7662
 19730  1082  0A6A               	incf	___fldiv@bexp,w
 19731  1083  1D03               	btfss	3,2
 19732  1084  288D               	goto	l7658
 19733  1085  3000               	movlw	0
 19734  1086  00D9               	movwf	___fldiv@b+3
 19735  1087  3000               	movlw	0
 19736  1088  00D8               	movwf	___fldiv@b+2
 19737  1089  3000               	movlw	0
 19738  108A  00D7               	movwf	___fldiv@b+1
 19739  108B  3000               	movlw	0
 19740  108C  00D6               	movwf	___fldiv@b
 19741  108D                     l7658:	
 19742  108D  17D8               	bsf	___fldiv@b+2,7
 19743  108E  01D9               	clrf	___fldiv@b+3
 19744  108F  2898               	goto	l7664
 19745  1090                     l7662:	
 19746  1090  3000               	movlw	0
 19747  1091  00D9               	movwf	___fldiv@b+3
 19748  1092  3000               	movlw	0
 19749  1093  00D8               	movwf	___fldiv@b+2
 19750  1094  3000               	movlw	0
 19751  1095  00D7               	movwf	___fldiv@b+1
 19752  1096  3000               	movlw	0
 19753  1097  00D6               	movwf	___fldiv@b
 19754  1098                     l7664:	
 19755  1098  0855               	movf	___fldiv@a+3,w
 19756  1099  3980               	andlw	128
 19757  109A  00DA               	movwf	??___fldiv
 19758  109B  085A               	movf	??___fldiv,w
 19759  109C  06DF               	xorwf	___fldiv@sign,f
 19760  109D  3555               	lslf	___fldiv@a+3,w
 19761  109E  00DA               	movwf	??___fldiv
 19762  109F  085A               	movf	??___fldiv,w
 19763  10A0  00EB               	movwf	___fldiv@aexp
 19764  10A1  1BD4               	btfsc	___fldiv@a+2,7
 19765  10A2  146B               	bsf	___fldiv@aexp,0
 19766  10A3  086B               	movf	___fldiv@aexp,w
 19767  10A4  1903               	btfsc	3,2
 19768  10A5  28B4               	goto	l7682
 19769  10A6  0A6B               	incf	___fldiv@aexp,w
 19770  10A7  1D03               	btfss	3,2
 19771  10A8  28B1               	goto	l7678
 19772  10A9  3000               	movlw	0
 19773  10AA  00D5               	movwf	___fldiv@a+3
 19774  10AB  3000               	movlw	0
 19775  10AC  00D4               	movwf	___fldiv@a+2
 19776  10AD  3000               	movlw	0
 19777  10AE  00D3               	movwf	___fldiv@a+1
 19778  10AF  3000               	movlw	0
 19779  10B0  00D2               	movwf	___fldiv@a
 19780  10B1                     l7678:	
 19781  10B1  17D4               	bsf	___fldiv@a+2,7
 19782  10B2  01D5               	clrf	___fldiv@a+3
 19783  10B3  28BC               	goto	l1366
 19784  10B4                     l7682:	
 19785  10B4  3000               	movlw	0
 19786  10B5  00D5               	movwf	___fldiv@a+3
 19787  10B6  3000               	movlw	0
 19788  10B7  00D4               	movwf	___fldiv@a+2
 19789  10B8  3000               	movlw	0
 19790  10B9  00D3               	movwf	___fldiv@a+1
 19791  10BA  3000               	movlw	0
 19792  10BB  00D2               	movwf	___fldiv@a
 19793  10BC                     l1366:	
 19794  10BC  0855               	movf	___fldiv@a+3,w
 19795  10BD  0454               	iorwf	___fldiv@a+2,w
 19796  10BE  0453               	iorwf	___fldiv@a+1,w
 19797  10BF  0452               	iorwf	___fldiv@a,w
 19798  10C0  1D03               	skipz
 19799  10C1  28D7               	goto	l7688
 19800  10C2  3000               	movlw	0
 19801  10C3  00D9               	movwf	___fldiv@b+3
 19802  10C4  3000               	movlw	0
 19803  10C5  00D8               	movwf	___fldiv@b+2
 19804  10C6  3000               	movlw	0
 19805  10C7  00D7               	movwf	___fldiv@b+1
 19806  10C8  3000               	movlw	0
 19807  10C9  00D6               	movwf	___fldiv@b
 19808  10CA  3080               	movlw	128
 19809  10CB  04D8               	iorwf	___fldiv@b+2,f
 19810  10CC  307F               	movlw	127
 19811  10CD  04D9               	iorwf	___fldiv@b+3,f
 19812  10CE  0859               	movf	___fldiv@b+3,w
 19813  10CF  00D5               	movwf	?___fldiv+3
 19814  10D0  0858               	movf	___fldiv@b+2,w
 19815  10D1  00D4               	movwf	?___fldiv+2
 19816  10D2  0857               	movf	___fldiv@b+1,w
 19817  10D3  00D3               	movwf	?___fldiv+1
 19818  10D4  0856               	movf	___fldiv@b,w
 19819  10D5  00D2               	movwf	?___fldiv
 19820  10D6  0008               	return
 19821  10D7                     l7688:	
 19822  10D7  086A               	movf	___fldiv@bexp,w
 19823  10D8  1D03               	btfss	3,2
 19824  10D9  28EB               	goto	l7694
 19825  10DA  3000               	movlw	0
 19826  10DB  00D9               	movwf	___fldiv@b+3
 19827  10DC  3000               	movlw	0
 19828  10DD  00D8               	movwf	___fldiv@b+2
 19829  10DE  3000               	movlw	0
 19830  10DF  00D7               	movwf	___fldiv@b+1
 19831  10E0  3000               	movlw	0
 19832  10E1  00D6               	movwf	___fldiv@b
 19833  10E2  0859               	movf	___fldiv@b+3,w
 19834  10E3  00D5               	movwf	?___fldiv+3
 19835  10E4  0858               	movf	___fldiv@b+2,w
 19836  10E5  00D4               	movwf	?___fldiv+2
 19837  10E6  0857               	movf	___fldiv@b+1,w
 19838  10E7  00D3               	movwf	?___fldiv+1
 19839  10E8  0856               	movf	___fldiv@b,w
 19840  10E9  00D2               	movwf	?___fldiv
 19841  10EA  0008               	return
 19842  10EB                     l7694:	
 19843  10EB  086B               	movf	___fldiv@aexp,w
 19844  10EC  00DA               	movwf	??___fldiv
 19845  10ED  01DB               	clrf	??___fldiv+1
 19846  10EE  09DA               	comf	??___fldiv,f
 19847  10EF  09DB               	comf	??___fldiv+1,f
 19848  10F0  0ADA               	incf	??___fldiv,f
 19849  10F1  1903               	skipnz
 19850  10F2  0ADB               	incf	??___fldiv+1,f
 19851  10F3  086A               	movf	___fldiv@bexp,w
 19852  10F4  075A               	addwf	??___fldiv,w
 19853  10F5  00DC               	movwf	??___fldiv+2
 19854  10F6  085B               	movf	??___fldiv+1,w
 19855  10F7  1803               	skipnc
 19856  10F8  0A5B               	incf	??___fldiv+1,w
 19857  10F9  00DD               	movwf	??___fldiv+3
 19858  10FA  085C               	movf	??___fldiv+2,w
 19859  10FB  3E7F               	addlw	127
 19860  10FC  00E4               	movwf	___fldiv@new_exp
 19861  10FD  3000               	movlw	0
 19862  10FE  3D5D               	addwfc	??___fldiv+3,w
 19863  10FF  00E5               	movwf	___fldiv@new_exp+1
 19864  1100  0859               	movf	___fldiv@b+3,w
 19865  1101  00E3               	movwf	___fldiv@rem+3
 19866  1102  0858               	movf	___fldiv@b+2,w
 19867  1103  00E2               	movwf	___fldiv@rem+2
 19868  1104  0857               	movf	___fldiv@b+1,w
 19869  1105  00E1               	movwf	___fldiv@rem+1
 19870  1106  0856               	movf	___fldiv@b,w
 19871  1107  00E0               	movwf	___fldiv@rem
 19872  1108  3000               	movlw	0
 19873  1109  00D9               	movwf	___fldiv@b+3
 19874  110A  3000               	movlw	0
 19875  110B  00D8               	movwf	___fldiv@b+2
 19876  110C  3000               	movlw	0
 19877  110D  00D7               	movwf	___fldiv@b+1
 19878  110E  3000               	movlw	0
 19879  110F  00D6               	movwf	___fldiv@b
 19880  1110  3000               	movlw	0
 19881  1111  00E9               	movwf	___fldiv@grs+3
 19882  1112  3000               	movlw	0
 19883  1113  00E8               	movwf	___fldiv@grs+2
 19884  1114  3000               	movlw	0
 19885  1115  00E7               	movwf	___fldiv@grs+1
 19886  1116  3000               	movlw	0
 19887  1117  00E6               	movwf	___fldiv@grs
 19888  1118  01EB               	clrf	___fldiv@aexp
 19889  1119                     l7722:	
 19890  1119  301A               	movlw	26
 19891  111A  026B               	subwf	___fldiv@aexp,w
 19892  111B  1803               	btfsc	3,0
 19893  111C  2955               	goto	l7724
 19894  111D  086B               	movf	___fldiv@aexp,w
 19895  111E  1903               	btfsc	3,2
 19896  111F  2937               	goto	l7714
 19897  1120  3001               	movlw	1
 19898  1121                     u10415:	
 19899  1121  35E0               	lslf	___fldiv@rem,f
 19900  1122  0DE1               	rlf	___fldiv@rem+1,f
 19901  1123  0DE2               	rlf	___fldiv@rem+2,f
 19902  1124  0DE3               	rlf	___fldiv@rem+3,f
 19903  1125  0B89               	decfsz	9,f
 19904  1126  2921               	goto	u10415
 19905  1127  3001               	movlw	1
 19906  1128                     u10425:	
 19907  1128  35D6               	lslf	___fldiv@b,f
 19908  1129  0DD7               	rlf	___fldiv@b+1,f
 19909  112A  0DD8               	rlf	___fldiv@b+2,f
 19910  112B  0DD9               	rlf	___fldiv@b+3,f
 19911  112C  0B89               	decfsz	9,f
 19912  112D  2928               	goto	u10425
 19913  112E  1BE9               	btfsc	___fldiv@grs+3,7
 19914  112F  1456               	bsf	___fldiv@b,0
 19915  1130  3001               	movlw	1
 19916  1131                     u10445:	
 19917  1131  35E6               	lslf	___fldiv@grs,f
 19918  1132  0DE7               	rlf	___fldiv@grs+1,f
 19919  1133  0DE8               	rlf	___fldiv@grs+2,f
 19920  1134  0DE9               	rlf	___fldiv@grs+3,f
 19921  1135  0B89               	decfsz	9,f
 19922  1136  2931               	goto	u10445
 19923  1137                     l7714:	
 19924  1137  0855               	movf	___fldiv@a+3,w
 19925  1138  0263               	subwf	___fldiv@rem+3,w
 19926  1139  1D03               	skipz
 19927  113A  2945               	goto	u10455
 19928  113B  0854               	movf	___fldiv@a+2,w
 19929  113C  0262               	subwf	___fldiv@rem+2,w
 19930  113D  1D03               	skipz
 19931  113E  2945               	goto	u10455
 19932  113F  0853               	movf	___fldiv@a+1,w
 19933  1140  0261               	subwf	___fldiv@rem+1,w
 19934  1141  1D03               	skipz
 19935  1142  2945               	goto	u10455
 19936  1143  0852               	movf	___fldiv@a,w
 19937  1144  0260               	subwf	___fldiv@rem,w
 19938  1145                     u10455:	
 19939  1145  1C03               	skipc
 19940  1146  2950               	goto	l7720
 19941  1147  1769               	bsf	___fldiv@grs+3,6
 19942  1148  0852               	movf	___fldiv@a,w
 19943  1149  02E0               	subwf	___fldiv@rem,f
 19944  114A  0853               	movf	___fldiv@a+1,w
 19945  114B  3BE1               	subwfb	___fldiv@rem+1,f
 19946  114C  0854               	movf	___fldiv@a+2,w
 19947  114D  3BE2               	subwfb	___fldiv@rem+2,f
 19948  114E  0855               	movf	___fldiv@a+3,w
 19949  114F  3BE3               	subwfb	___fldiv@rem+3,f
 19950  1150                     l7720:	
 19951  1150  3001               	movlw	1
 19952  1151  00DA               	movwf	??___fldiv
 19953  1152  085A               	movf	??___fldiv,w
 19954  1153  07EB               	addwf	___fldiv@aexp,f
 19955  1154  2919               	goto	l7722
 19956  1155                     l7724:	
 19957  1155  0863               	movf	___fldiv@rem+3,w
 19958  1156  0462               	iorwf	___fldiv@rem+2,w
 19959  1157  0461               	iorwf	___fldiv@rem+1,w
 19960  1158  0460               	iorwf	___fldiv@rem,w
 19961  1159  1D03               	btfss	3,2
 19962  115A  1466               	bsf	___fldiv@grs,0
 19963  115B                     l7738:	
 19964  115B  1BD8               	btfsc	___fldiv@b+2,7
 19965  115C  2972               	goto	l7740
 19966  115D  3001               	movlw	1
 19967  115E                     u10485:	
 19968  115E  35D6               	lslf	___fldiv@b,f
 19969  115F  0DD7               	rlf	___fldiv@b+1,f
 19970  1160  0DD8               	rlf	___fldiv@b+2,f
 19971  1161  0DD9               	rlf	___fldiv@b+3,f
 19972  1162  0B89               	decfsz	9,f
 19973  1163  295E               	goto	u10485
 19974  1164  1BE9               	btfsc	___fldiv@grs+3,7
 19975  1165  1456               	bsf	___fldiv@b,0
 19976  1166  3001               	movlw	1
 19977  1167                     u10505:	
 19978  1167  35E6               	lslf	___fldiv@grs,f
 19979  1168  0DE7               	rlf	___fldiv@grs+1,f
 19980  1169  0DE8               	rlf	___fldiv@grs+2,f
 19981  116A  0DE9               	rlf	___fldiv@grs+3,f
 19982  116B  0B89               	decfsz	9,f
 19983  116C  2967               	goto	u10505
 19984  116D  30FF               	movlw	255
 19985  116E  07E4               	addwf	___fldiv@new_exp,f
 19986  116F  30FF               	movlw	255
 19987  1170  3DE5               	addwfc	___fldiv@new_exp+1,f
 19988  1171  295B               	goto	l7738
 19989  1172                     l7740:	
 19990  1172  01EB               	clrf	___fldiv@aexp
 19991  1173  1FE9               	btfss	___fldiv@grs+3,7
 19992  1174  298B               	goto	l7750
 19993  1175  30FF               	movlw	255
 19994  1176  0566               	andwf	___fldiv@grs,w
 19995  1177  00DA               	movwf	??___fldiv
 19996  1178  30FF               	movlw	255
 19997  1179  0567               	andwf	___fldiv@grs+1,w
 19998  117A  00DB               	movwf	??___fldiv+1
 19999  117B  30FF               	movlw	255
 20000  117C  0568               	andwf	___fldiv@grs+2,w
 20001  117D  00DC               	movwf	??___fldiv+2
 20002  117E  307F               	movlw	127
 20003  117F  0569               	andwf	___fldiv@grs+3,w
 20004  1180  00DD               	movwf	??___fldiv+3
 20005  1181  085D               	movf	??___fldiv+3,w
 20006  1182  045C               	iorwf	??___fldiv+2,w
 20007  1183  045B               	iorwf	??___fldiv+1,w
 20008  1184  045A               	iorwf	??___fldiv,w
 20009  1185  1D03               	btfss	3,2
 20010  1186  2989               	goto	l7748
 20011  1187  1C56               	btfss	___fldiv@b,0
 20012  1188  298B               	goto	l7750
 20013  1189                     l7748:	
 20014  1189  01EB               	clrf	___fldiv@aexp
 20015  118A  0AEB               	incf	___fldiv@aexp,f
 20016  118B                     l7750:	
 20017  118B  086B               	movf	___fldiv@aexp,w
 20018  118C  1903               	btfsc	3,2
 20019  118D  29B4               	goto	l7760
 20020  118E  3001               	movlw	1
 20021  118F  07D6               	addwf	___fldiv@b,f
 20022  1190  3000               	movlw	0
 20023  1191  3DD7               	addwfc	___fldiv@b+1,f
 20024  1192  3000               	movlw	0
 20025  1193  3DD8               	addwfc	___fldiv@b+2,f
 20026  1194  3000               	movlw	0
 20027  1195  3DD9               	addwfc	___fldiv@b+3,f
 20028  1196  1C59               	btfss	___fldiv@b+3,0
 20029  1197  29B4               	goto	l7760
 20030  1198  0856               	movf	___fldiv@b,w
 20031  1199  00DA               	movwf	??___fldiv
 20032  119A  0857               	movf	___fldiv@b+1,w
 20033  119B  00DB               	movwf	??___fldiv+1
 20034  119C  0858               	movf	___fldiv@b+2,w
 20035  119D  00DC               	movwf	??___fldiv+2
 20036  119E  0859               	movf	___fldiv@b+3,w
 20037  119F  00DD               	movwf	??___fldiv+3
 20038  11A0  3001               	movlw	1
 20039  11A1  00DE               	movwf	??___fldiv+4
 20040  11A2                     u10575:	
 20041  11A2  37DD               	asrf	??___fldiv+3,f
 20042  11A3  0CDC               	rrf	??___fldiv+2,f
 20043  11A4  0CDB               	rrf	??___fldiv+1,f
 20044  11A5  0CDA               	rrf	??___fldiv,f
 20045  11A6  0BDE               	decfsz	??___fldiv+4,f
 20046  11A7  29A2               	goto	u10575
 20047  11A8  085D               	movf	??___fldiv+3,w
 20048  11A9  00D9               	movwf	___fldiv@b+3
 20049  11AA  085C               	movf	??___fldiv+2,w
 20050  11AB  00D8               	movwf	___fldiv@b+2
 20051  11AC  085B               	movf	??___fldiv+1,w
 20052  11AD  00D7               	movwf	___fldiv@b+1
 20053  11AE  085A               	movf	??___fldiv,w
 20054  11AF  00D6               	movwf	___fldiv@b
 20055  11B0  3001               	movlw	1
 20056  11B1  07E4               	addwf	___fldiv@new_exp,f
 20057  11B2  3000               	movlw	0
 20058  11B3  3DE5               	addwfc	___fldiv@new_exp+1,f
 20059  11B4                     l7760:	
 20060  11B4  0865               	movf	___fldiv@new_exp+1,w
 20061  11B5  3A80               	xorlw	128
 20062  11B6  00DA               	movwf	??___fldiv
 20063  11B7  3080               	movlw	128
 20064  11B8  025A               	subwf	??___fldiv,w
 20065  11B9  1D03               	skipz
 20066  11BA  29BD               	goto	u10585
 20067  11BB  30FF               	movlw	255
 20068  11BC  0264               	subwf	___fldiv@new_exp,w
 20069  11BD                     u10585:	
 20070  11BD  1C03               	skipc
 20071  11BE  29CC               	goto	l1387
 20072  11BF  30FF               	movlw	255
 20073  11C0  0020               	movlb	0	; select bank0
 20074  11C1  00E4               	movwf	___fldiv@new_exp
 20075  11C2  3000               	movlw	0
 20076  11C3  00E5               	movwf	___fldiv@new_exp+1
 20077  11C4  3000               	movlw	0
 20078  11C5  00D9               	movwf	___fldiv@b+3
 20079  11C6  3000               	movlw	0
 20080  11C7  00D8               	movwf	___fldiv@b+2
 20081  11C8  3000               	movlw	0
 20082  11C9  00D7               	movwf	___fldiv@b+1
 20083  11CA  3000               	movlw	0
 20084  11CB  00D6               	movwf	___fldiv@b
 20085  11CC                     l1387:	
 20086  11CC  0020               	movlb	0	; select bank0
 20087  11CD  0865               	movf	___fldiv@new_exp+1,w
 20088  11CE  3A80               	xorlw	128
 20089  11CF  00DA               	movwf	??___fldiv
 20090  11D0  3080               	movlw	128
 20091  11D1  025A               	subwf	??___fldiv,w
 20092  11D2  1D03               	skipz
 20093  11D3  29D6               	goto	u10595
 20094  11D4  3001               	movlw	1
 20095  11D5  0264               	subwf	___fldiv@new_exp,w
 20096  11D6                     u10595:	
 20097  11D6  1803               	skipnc
 20098  11D7  29E4               	goto	l1388
 20099  11D8  0020               	movlb	0	; select bank0
 20100  11D9  01E4               	clrf	___fldiv@new_exp
 20101  11DA  01E5               	clrf	___fldiv@new_exp+1
 20102  11DB  3000               	movlw	0
 20103  11DC  00D9               	movwf	___fldiv@b+3
 20104  11DD  3000               	movlw	0
 20105  11DE  00D8               	movwf	___fldiv@b+2
 20106  11DF  3000               	movlw	0
 20107  11E0  00D7               	movwf	___fldiv@b+1
 20108  11E1  3000               	movlw	0
 20109  11E2  00D6               	movwf	___fldiv@b
 20110  11E3  01DF               	clrf	___fldiv@sign
 20111  11E4                     l1388:	
 20112  11E4  0020               	movlb	0	; select bank0
 20113  11E5  0864               	movf	___fldiv@new_exp,w
 20114  11E6  00DA               	movwf	??___fldiv
 20115  11E7  085A               	movf	??___fldiv,w
 20116  11E8  00EA               	movwf	___fldiv@bexp
 20117  11E9  1C6A               	btfss	___fldiv@bexp,0
 20118  11EA  29ED               	goto	l7774
 20119  11EB  17D8               	bsf	___fldiv@b+2,7
 20120  11EC  29F1               	goto	l1390
 20121  11ED                     l7774:	
 20122  11ED  307F               	movlw	127
 20123  11EE  00DA               	movwf	??___fldiv
 20124  11EF  085A               	movf	??___fldiv,w
 20125  11F0  05D8               	andwf	___fldiv@b+2,f
 20126  11F1                     l1390:	
 20127  11F1  366A               	lsrf	___fldiv@bexp,w
 20128  11F2  00DA               	movwf	??___fldiv
 20129  11F3  085A               	movf	??___fldiv,w
 20130  11F4  00D9               	movwf	___fldiv@b+3
 20131  11F5  085F               	movf	___fldiv@sign,w
 20132  11F6  00DA               	movwf	??___fldiv
 20133  11F7  085A               	movf	??___fldiv,w
 20134  11F8  04D9               	iorwf	___fldiv@b+3,f
 20135  11F9  0859               	movf	___fldiv@b+3,w
 20136  11FA  00D5               	movwf	?___fldiv+3
 20137  11FB  0858               	movf	___fldiv@b+2,w
 20138  11FC  00D4               	movwf	?___fldiv+2
 20139  11FD  0857               	movf	___fldiv@b+1,w
 20140  11FE  00D3               	movwf	?___fldiv+1
 20141  11FF  0856               	movf	___fldiv@b,w
 20142  1200  00D2               	movwf	?___fldiv
 20143  1201  0008               	return
 20144  1202                     __end_of___fldiv:	
 20145                           
 20146                           	psect	text59
 20147  13D8                     __ptext59:	
 20148 ;; *************** function ___fladd *****************
 20149 ;; Defined at:
 20150 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 20151 ;; Parameters:    Size  Location     Type
 20152 ;;  b               4    9[BANK1 ] unsigned char 
 20153 ;;  a               4   13[BANK1 ] unsigned char 
 20154 ;; Auto vars:     Size  Location     Type
 20155 ;;  grs             1   32[BANK1 ] unsigned char 
 20156 ;;  bexp            1   31[BANK1 ] unsigned char 
 20157 ;;  aexp            1   30[BANK1 ] unsigned char 
 20158 ;;  signs           1   29[BANK1 ] unsigned char 
 20159 ;; Return value:  Size  Location     Type
 20160 ;;                  4    9[BANK1 ] unsigned char 
 20161 ;; Registers used:
 20162 ;;		wreg, status,2, status,0
 20163 ;; Tracked objects:
 20164 ;;		On entry : 0/0
 20165 ;;		On exit  : 0/0
 20166 ;;		Unchanged: 0/0
 20167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20168 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20169 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20170 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20171 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20172 ;;Total ram usage:       24 bytes
 20173 ;; Hardware stack levels used:    1
 20174 ;; Hardware stack levels required when called:    2
 20175 ;; This function calls:
 20176 ;;		Nothing
 20177 ;; This function is called by:
 20178 ;;		_main
 20179 ;;		_startUp
 20180 ;;		_calculateCurrent
 20181 ;;		_avgBuff
 20182 ;;		_writeVoltages
 20183 ;;		_sumVoltages
 20184 ;;		_cellBalancing
 20185 ;;		_sprintf
 20186 ;;		___flsub
 20187 ;; This function uses a non-reentrant model
 20188 ;;
 20189                           
 20190                           
 20191                           ;psect for function ___fladd
 20192  13D8                     ___fladd:	
 20193                           
 20194                           ;incstack = 0
 20195                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20196  13D8  0021               	movlb	1	; select bank1
 20197  13D9  082C               	movf	(___fladd@b^(0+128)+3),w
 20198  13DA  3980               	andlw	128
 20199  13DB  00B1               	movwf	??___fladd^(0+128)
 20200  13DC  0831               	movf	??___fladd^(0+128),w
 20201  13DD  00BD               	movwf	___fladd@signs^(0+128)
 20202  13DE  352C               	lslf	(___fladd@b^(0+128)+3),w
 20203  13DF  00B1               	movwf	??___fladd^(0+128)
 20204  13E0  0831               	movf	??___fladd^(0+128),w
 20205  13E1  00BF               	movwf	___fladd@bexp^(0+128)
 20206  13E2  1BAB               	btfsc	(___fladd@b^(0+128)+2),7
 20207  13E3  143F               	bsf	___fladd@bexp^(0+128),0
 20208  13E4  083F               	movf	___fladd@bexp^(0+128),w
 20209  13E5  1903               	btfsc	3,2
 20210  13E6  2BF5               	goto	l6840
 20211  13E7  0A3F               	incf	___fladd@bexp^(0+128),w
 20212  13E8  1D03               	btfss	3,2
 20213  13E9  2BF2               	goto	l6836
 20214  13EA  3000               	movlw	0
 20215  13EB  00AC               	movwf	(___fladd@b+3)^(0+128)
 20216  13EC  3000               	movlw	0
 20217  13ED  00AB               	movwf	(___fladd@b+2)^(0+128)
 20218  13EE  3000               	movlw	0
 20219  13EF  00AA               	movwf	(___fladd@b+1)^(0+128)
 20220  13F0  3000               	movlw	0
 20221  13F1  00A9               	movwf	___fladd@b^(0+128)
 20222  13F2                     l6836:	
 20223  13F2  17AB               	bsf	(___fladd@b^(0+128)+2),7
 20224  13F3  01AC               	clrf	(___fladd@b^(0+128)+3)
 20225  13F4  2BFD               	goto	l6842
 20226  13F5                     l6840:	
 20227  13F5  3000               	movlw	0
 20228  13F6  00AC               	movwf	(___fladd@b+3)^(0+128)
 20229  13F7  3000               	movlw	0
 20230  13F8  00AB               	movwf	(___fladd@b+2)^(0+128)
 20231  13F9  3000               	movlw	0
 20232  13FA  00AA               	movwf	(___fladd@b+1)^(0+128)
 20233  13FB  3000               	movlw	0
 20234  13FC  00A9               	movwf	___fladd@b^(0+128)
 20235  13FD                     l6842:	
 20236  13FD  0830               	movf	(___fladd@a^(0+128)+3),w
 20237  13FE  3980               	andlw	128
 20238  13FF  00B1               	movwf	??___fladd^(0+128)
 20239  1400  0831               	movf	??___fladd^(0+128),w
 20240  1401  00BE               	movwf	___fladd@aexp^(0+128)
 20241  1402  083E               	movf	___fladd@aexp^(0+128),w
 20242  1403  063D               	xorwf	___fladd@signs^(0+128),w
 20243  1404  1D03               	btfss	3,2
 20244  1405  173D               	bsf	___fladd@signs^(0+128),6
 20245  1406  3530               	lslf	(___fladd@a^(0+128)+3),w
 20246  1407  00B1               	movwf	??___fladd^(0+128)
 20247  1408  0831               	movf	??___fladd^(0+128),w
 20248  1409  00BE               	movwf	___fladd@aexp^(0+128)
 20249  140A  1BAF               	btfsc	(___fladd@a^(0+128)+2),7
 20250  140B  143E               	bsf	___fladd@aexp^(0+128),0
 20251  140C  083E               	movf	___fladd@aexp^(0+128),w
 20252  140D  1903               	btfsc	3,2
 20253  140E  2C1D               	goto	l6864
 20254  140F  0A3E               	incf	___fladd@aexp^(0+128),w
 20255  1410  1D03               	btfss	3,2
 20256  1411  2C1A               	goto	l6860
 20257  1412  3000               	movlw	0
 20258  1413  00B0               	movwf	(___fladd@a+3)^(0+128)
 20259  1414  3000               	movlw	0
 20260  1415  00AF               	movwf	(___fladd@a+2)^(0+128)
 20261  1416  3000               	movlw	0
 20262  1417  00AE               	movwf	(___fladd@a+1)^(0+128)
 20263  1418  3000               	movlw	0
 20264  1419  00AD               	movwf	___fladd@a^(0+128)
 20265  141A                     l6860:	
 20266  141A  17AF               	bsf	(___fladd@a^(0+128)+2),7
 20267  141B  01B0               	clrf	(___fladd@a^(0+128)+3)
 20268  141C  2C25               	goto	l1310
 20269  141D                     l6864:	
 20270  141D  3000               	movlw	0
 20271  141E  00B0               	movwf	(___fladd@a+3)^(0+128)
 20272  141F  3000               	movlw	0
 20273  1420  00AF               	movwf	(___fladd@a+2)^(0+128)
 20274  1421  3000               	movlw	0
 20275  1422  00AE               	movwf	(___fladd@a+1)^(0+128)
 20276  1423  3000               	movlw	0
 20277  1424  00AD               	movwf	___fladd@a^(0+128)
 20278  1425                     l1310:	
 20279  1425  083F               	movf	___fladd@bexp^(0+128),w
 20280  1426  023E               	subwf	___fladd@aexp^(0+128),w
 20281  1427  1803               	skipnc
 20282  1428  2C6B               	goto	l6900
 20283  1429  1F3D               	btfss	___fladd@signs^(0+128),6
 20284  142A  2C2F               	goto	l6870
 20285  142B  3080               	movlw	128
 20286  142C  00B1               	movwf	??___fladd^(0+128)
 20287  142D  0831               	movf	??___fladd^(0+128),w
 20288  142E  06BD               	xorwf	___fladd@signs^(0+128),f
 20289  142F                     l6870:	
 20290  142F  083F               	movf	___fladd@bexp^(0+128),w
 20291  1430  00B1               	movwf	??___fladd^(0+128)
 20292  1431  0831               	movf	??___fladd^(0+128),w
 20293  1432  00C0               	movwf	___fladd@grs^(0+128)
 20294  1433  083E               	movf	___fladd@aexp^(0+128),w
 20295  1434  00B1               	movwf	??___fladd^(0+128)
 20296  1435  0831               	movf	??___fladd^(0+128),w
 20297  1436  00BF               	movwf	___fladd@bexp^(0+128)
 20298  1437  0840               	movf	___fladd@grs^(0+128),w
 20299  1438  00B1               	movwf	??___fladd^(0+128)
 20300  1439  0831               	movf	??___fladd^(0+128),w
 20301  143A  00BE               	movwf	___fladd@aexp^(0+128)
 20302  143B  0829               	movf	___fladd@b^(0+128),w
 20303  143C  00B1               	movwf	??___fladd^(0+128)
 20304  143D  0831               	movf	??___fladd^(0+128),w
 20305  143E  00C0               	movwf	___fladd@grs^(0+128)
 20306  143F  082D               	movf	___fladd@a^(0+128),w
 20307  1440  00B1               	movwf	??___fladd^(0+128)
 20308  1441  0831               	movf	??___fladd^(0+128),w
 20309  1442  00A9               	movwf	___fladd@b^(0+128)
 20310  1443  0840               	movf	___fladd@grs^(0+128),w
 20311  1444  00B1               	movwf	??___fladd^(0+128)
 20312  1445  0831               	movf	??___fladd^(0+128),w
 20313  1446  00AD               	movwf	___fladd@a^(0+128)
 20314  1447  082A               	movf	(___fladd@b^(0+128)+1),w
 20315  1448  00B1               	movwf	??___fladd^(0+128)
 20316  1449  0831               	movf	??___fladd^(0+128),w
 20317  144A  00C0               	movwf	___fladd@grs^(0+128)
 20318  144B  082E               	movf	(___fladd@a^(0+128)+1),w
 20319  144C  00B1               	movwf	??___fladd^(0+128)
 20320  144D  0831               	movf	??___fladd^(0+128),w
 20321  144E  00AA               	movwf	(___fladd@b^(0+128)+1)
 20322  144F  0840               	movf	___fladd@grs^(0+128),w
 20323  1450  00B1               	movwf	??___fladd^(0+128)
 20324  1451  0831               	movf	??___fladd^(0+128),w
 20325  1452  00AE               	movwf	(___fladd@a^(0+128)+1)
 20326  1453  082B               	movf	(___fladd@b^(0+128)+2),w
 20327  1454  00B1               	movwf	??___fladd^(0+128)
 20328  1455  0831               	movf	??___fladd^(0+128),w
 20329  1456  00C0               	movwf	___fladd@grs^(0+128)
 20330  1457  082F               	movf	(___fladd@a^(0+128)+2),w
 20331  1458  00B1               	movwf	??___fladd^(0+128)
 20332  1459  0831               	movf	??___fladd^(0+128),w
 20333  145A  00AB               	movwf	(___fladd@b^(0+128)+2)
 20334  145B  0840               	movf	___fladd@grs^(0+128),w
 20335  145C  00B1               	movwf	??___fladd^(0+128)
 20336  145D  0831               	movf	??___fladd^(0+128),w
 20337  145E  00AF               	movwf	(___fladd@a^(0+128)+2)
 20338  145F  082C               	movf	(___fladd@b^(0+128)+3),w
 20339  1460  00B1               	movwf	??___fladd^(0+128)
 20340  1461  0831               	movf	??___fladd^(0+128),w
 20341  1462  00C0               	movwf	___fladd@grs^(0+128)
 20342  1463  0830               	movf	(___fladd@a^(0+128)+3),w
 20343  1464  00B1               	movwf	??___fladd^(0+128)
 20344  1465  0831               	movf	??___fladd^(0+128),w
 20345  1466  00AC               	movwf	(___fladd@b^(0+128)+3)
 20346  1467  0840               	movf	___fladd@grs^(0+128),w
 20347  1468  00B1               	movwf	??___fladd^(0+128)
 20348  1469  0831               	movf	??___fladd^(0+128),w
 20349  146A  00B0               	movwf	(___fladd@a^(0+128)+3)
 20350  146B                     l6900:	
 20351  146B  01C0               	clrf	___fladd@grs^(0+128)
 20352  146C  083F               	movf	___fladd@bexp^(0+128),w
 20353  146D  00B1               	movwf	??___fladd^(0+128)
 20354  146E  01B2               	clrf	(??___fladd^(0+128)+1)
 20355  146F  09B1               	comf	??___fladd^(0+128),f
 20356  1470  09B2               	comf	(??___fladd^(0+128)+1),f
 20357  1471  0AB1               	incf	??___fladd^(0+128),f
 20358  1472  1903               	skipnz
 20359  1473  0AB2               	incf	(??___fladd^(0+128)+1),f
 20360  1474  083E               	movf	___fladd@aexp^(0+128),w
 20361  1475  0731               	addwf	??___fladd^(0+128),w
 20362  1476  00B3               	movwf	(??___fladd+2)^(0+128)
 20363  1477  0832               	movf	(??___fladd+1)^(0+128),w
 20364  1478  1803               	skipnc
 20365  1479  0A32               	incf	(??___fladd+1)^(0+128),w
 20366  147A  00B4               	movwf	((??___fladd+2)^(0+128)+1)
 20367  147B  0834               	movf	(??___fladd+3)^(0+128),w
 20368  147C  3A80               	xorlw	128
 20369  147D  00B5               	movwf	(??___fladd+4)^(0+128)
 20370  147E  3080               	movlw	128
 20371  147F  0235               	subwf	(??___fladd+4)^(0+128),w
 20372  1480  1D03               	skipz
 20373  1481  2C84               	goto	u8835
 20374  1482  301A               	movlw	26
 20375  1483  0233               	subwf	(??___fladd+2)^(0+128),w
 20376  1484                     u8835:	
 20377  1484  1C03               	skipc
 20378  1485  2CB8               	goto	l6918
 20379  1486  0021               	movlb	1	; select bank1
 20380  1487  082C               	movf	(___fladd@b+3)^(0+128),w
 20381  1488  042B               	iorwf	(___fladd@b+2)^(0+128),w
 20382  1489  042A               	iorwf	(___fladd@b+1)^(0+128),w
 20383  148A  0429               	iorwf	___fladd@b^(0+128),w
 20384  148B  1903               	btfsc	3,2
 20385  148C  2C8F               	goto	u8840
 20386  148D  3001               	movlw	1
 20387  148E  2C90               	goto	u8850
 20388  148F                     u8840:	
 20389  148F  3000               	movlw	0
 20390  1490                     u8850:	
 20391  1490  00B1               	movwf	??___fladd^(0+128)
 20392  1491  0831               	movf	??___fladd^(0+128),w
 20393  1492  00C0               	movwf	___fladd@grs^(0+128)
 20394  1493  3000               	movlw	0
 20395  1494  00AC               	movwf	(___fladd@b+3)^(0+128)
 20396  1495  3000               	movlw	0
 20397  1496  00AB               	movwf	(___fladd@b+2)^(0+128)
 20398  1497  3000               	movlw	0
 20399  1498  00AA               	movwf	(___fladd@b+1)^(0+128)
 20400  1499  3000               	movlw	0
 20401  149A  00A9               	movwf	___fladd@b^(0+128)
 20402  149B  083E               	movf	___fladd@aexp^(0+128),w
 20403  149C  00B1               	movwf	??___fladd^(0+128)
 20404  149D  0831               	movf	??___fladd^(0+128),w
 20405  149E  00BF               	movwf	___fladd@bexp^(0+128)
 20406  149F  2CBD               	goto	l1314
 20407  14A0                     l1316:	
 20408  14A0  1C40               	btfss	___fladd@grs^(0+128),0
 20409  14A1  2CA8               	goto	l6908
 20410  14A2  3640               	lsrf	___fladd@grs^(0+128),w
 20411  14A3  3801               	iorlw	1
 20412  14A4  00B1               	movwf	??___fladd^(0+128)
 20413  14A5  0831               	movf	??___fladd^(0+128),w
 20414  14A6  00C0               	movwf	___fladd@grs^(0+128)
 20415  14A7  2CAA               	goto	l6910
 20416  14A8                     l6908:	
 20417  14A8  1003               	clrc
 20418  14A9  0CC0               	rrf	___fladd@grs^(0+128),f
 20419  14AA                     l6910:	
 20420  14AA  1829               	btfsc	___fladd@b^(0+128),0
 20421  14AB  17C0               	bsf	___fladd@grs^(0+128),7
 20422  14AC  3001               	movlw	1
 20423  14AD  00B1               	movwf	??___fladd^(0+128)
 20424  14AE                     u8885:	
 20425  14AE  37AC               	asrf	(___fladd@b+3)^(0+128),f
 20426  14AF  0CAB               	rrf	(___fladd@b+2)^(0+128),f
 20427  14B0  0CAA               	rrf	(___fladd@b+1)^(0+128),f
 20428  14B1  0CA9               	rrf	___fladd@b^(0+128),f
 20429  14B2  0BB1               	decfsz	(??___fladd^(0+128))& (0+127),f
 20430  14B3  2CAE               	goto	u8885
 20431  14B4  3001               	movlw	1
 20432  14B5  00B1               	movwf	??___fladd^(0+128)
 20433  14B6  0831               	movf	??___fladd^(0+128),w
 20434  14B7  07BF               	addwf	___fladd@bexp^(0+128),f
 20435  14B8                     l6918:	
 20436  14B8  0021               	movlb	1	; select bank1
 20437  14B9  083E               	movf	___fladd@aexp^(0+128),w
 20438  14BA  023F               	subwf	___fladd@bexp^(0+128),w
 20439  14BB  1C03               	skipc
 20440  14BC  2CA0               	goto	l1316
 20441  14BD                     l1314:	
 20442  14BD  1B3D               	btfsc	___fladd@signs^(0+128),6
 20443  14BE  2CF0               	goto	l6944
 20444  14BF  083F               	movf	___fladd@bexp^(0+128),w
 20445  14C0  1D03               	btfss	3,2
 20446  14C1  2CCB               	goto	l6926
 20447  14C2  3000               	movlw	0
 20448  14C3  00AC               	movwf	(?___fladd+3)^(0+128)
 20449  14C4  3000               	movlw	0
 20450  14C5  00AB               	movwf	(?___fladd+2)^(0+128)
 20451  14C6  3000               	movlw	0
 20452  14C7  00AA               	movwf	(?___fladd+1)^(0+128)
 20453  14C8  3000               	movlw	0
 20454  14C9  00A9               	movwf	?___fladd^(0+128)
 20455  14CA  0008               	return
 20456  14CB                     l6926:	
 20457  14CB  082D               	movf	___fladd@a^(0+128),w
 20458  14CC  07A9               	addwf	___fladd@b^(0+128),f
 20459  14CD  082E               	movf	(___fladd@a+1)^(0+128),w
 20460  14CE  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 20461  14CF  082F               	movf	(___fladd@a+2)^(0+128),w
 20462  14D0  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 20463  14D1  0830               	movf	(___fladd@a+3)^(0+128),w
 20464  14D2  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 20465  14D3  1C2C               	btfss	(___fladd@b+3)^(0+128),0
 20466  14D4  2D7D               	goto	l6978
 20467  14D5  1C40               	btfss	___fladd@grs^(0+128),0
 20468  14D6  2CDF               	goto	l6934
 20469  14D7  1003               	clrc
 20470  14D8  0CC0               	rrf	___fladd@grs^(0+128),f
 20471  14D9  0840               	movf	___fladd@grs^(0+128),w
 20472  14DA  3801               	iorlw	1
 20473  14DB  00B1               	movwf	??___fladd^(0+128)
 20474  14DC  0831               	movf	??___fladd^(0+128),w
 20475  14DD  00C0               	movwf	___fladd@grs^(0+128)
 20476  14DE  2CE1               	goto	l6936
 20477  14DF                     l6934:	
 20478  14DF  1003               	clrc
 20479  14E0  0CC0               	rrf	___fladd@grs^(0+128),f
 20480  14E1                     l6936:	
 20481  14E1  1829               	btfsc	___fladd@b^(0+128),0
 20482  14E2  17C0               	bsf	___fladd@grs^(0+128),7
 20483  14E3  3001               	movlw	1
 20484  14E4  00B1               	movwf	??___fladd^(0+128)
 20485  14E5                     u8955:	
 20486  14E5  37AC               	asrf	(___fladd@b+3)^(0+128),f
 20487  14E6  0CAB               	rrf	(___fladd@b+2)^(0+128),f
 20488  14E7  0CAA               	rrf	(___fladd@b+1)^(0+128),f
 20489  14E8  0CA9               	rrf	___fladd@b^(0+128),f
 20490  14E9  0BB1               	decfsz	(??___fladd^(0+128))& (0+127),f
 20491  14EA  2CE5               	goto	u8955
 20492  14EB  3001               	movlw	1
 20493  14EC  00B1               	movwf	??___fladd^(0+128)
 20494  14ED  0831               	movf	??___fladd^(0+128),w
 20495  14EE  07BF               	addwf	___fladd@bexp^(0+128),f
 20496  14EF  2D7D               	goto	l6978
 20497  14F0                     l6944:	
 20498  14F0  082C               	movf	(___fladd@b+3)^(0+128),w
 20499  14F1  3A80               	xorlw	128
 20500  14F2  00B1               	movwf	??___fladd^(0+128)
 20501  14F3  0830               	movf	(___fladd@a+3)^(0+128),w
 20502  14F4  3A80               	xorlw	128
 20503  14F5  0231               	subwf	??___fladd^(0+128),w
 20504  14F6  1D03               	skipz
 20505  14F7  2D02               	goto	u8963
 20506  14F8  082F               	movf	(___fladd@a+2)^(0+128),w
 20507  14F9  022B               	subwf	(___fladd@b+2)^(0+128),w
 20508  14FA  1D03               	skipz
 20509  14FB  2D02               	goto	u8963
 20510  14FC  082E               	movf	(___fladd@a+1)^(0+128),w
 20511  14FD  022A               	subwf	(___fladd@b+1)^(0+128),w
 20512  14FE  1D03               	skipz
 20513  14FF  2D02               	goto	u8963
 20514  1500  082D               	movf	___fladd@a^(0+128),w
 20515  1501  0229               	subwf	___fladd@b^(0+128),w
 20516  1502                     u8963:	
 20517  1502  1803               	skipnc
 20518  1503  2D4D               	goto	l6954
 20519  1504  30FF               	movlw	255
 20520  1505  00B1               	movwf	??___fladd^(0+128)
 20521  1506  30FF               	movlw	255
 20522  1507  00B2               	movwf	(??___fladd^(0+128)+1)
 20523  1508  30FF               	movlw	255
 20524  1509  00B3               	movwf	(??___fladd^(0+128)+2)
 20525  150A  30FF               	movlw	255
 20526  150B  00B4               	movwf	(??___fladd^(0+128)+3)
 20527  150C  082D               	movf	___fladd@a^(0+128),w
 20528  150D  00B5               	movwf	(??___fladd+4)^(0+128)
 20529  150E  082E               	movf	(___fladd@a+1)^(0+128),w
 20530  150F  00B6               	movwf	((??___fladd+4)^(0+128)+1)
 20531  1510  082F               	movf	(___fladd@a+2)^(0+128),w
 20532  1511  00B7               	movwf	((??___fladd+4)^(0+128)+2)
 20533  1512  0830               	movf	(___fladd@a+3)^(0+128),w
 20534  1513  00B8               	movwf	((??___fladd+4)^(0+128)+3)
 20535  1514  0929               	comf	___fladd@b^(0+128),w
 20536  1515  00B9               	movwf	(??___fladd+8)^(0+128)
 20537  1516  092A               	comf	(___fladd@b+1)^(0+128),w
 20538  1517  00BA               	movwf	((??___fladd+8)^(0+128)+1)
 20539  1518  092B               	comf	(___fladd@b+2)^(0+128),w
 20540  1519  00BB               	movwf	((??___fladd+8)^(0+128)+2)
 20541  151A  092C               	comf	(___fladd@b+3)^(0+128),w
 20542  151B  00BC               	movwf	((??___fladd+8)^(0+128)+3)
 20543  151C  0AB9               	incf	(??___fladd+8)^(0+128),f
 20544  151D  1903               	skipnz
 20545  151E  0ABA               	incf	((??___fladd+8)^(0+128)+1),f
 20546  151F  1903               	skipnz
 20547  1520  0ABB               	incf	((??___fladd+8)^(0+128)+2),f
 20548  1521  1903               	skipnz
 20549  1522  0ABC               	incf	((??___fladd+8)^(0+128)+3),f
 20550  1523  0839               	movf	(??___fladd+8)^(0+128),w
 20551  1524  07B5               	addwf	(??___fladd+4)^(0+128),f
 20552  1525  083A               	movf	(??___fladd+9)^(0+128),w
 20553  1526  3DB6               	addwfc	((??___fladd+4)^(0+128)+1),f
 20554  1527  083B               	movf	(??___fladd+10)^(0+128),w
 20555  1528  3DB7               	addwfc	((??___fladd+4)^(0+128)+2),f
 20556  1529  083C               	movf	(??___fladd+11)^(0+128),w
 20557  152A  3DB8               	addwfc	((??___fladd+4)^(0+128)+3),f
 20558  152B  0835               	movf	(??___fladd+4)^(0+128),w
 20559  152C  07B1               	addwf	??___fladd^(0+128),f
 20560  152D  0836               	movf	(??___fladd+5)^(0+128),w
 20561  152E  3DB2               	addwfc	(??___fladd^(0+128)+1),f
 20562  152F  0837               	movf	(??___fladd+6)^(0+128),w
 20563  1530  3DB3               	addwfc	(??___fladd^(0+128)+2),f
 20564  1531  0838               	movf	(??___fladd+7)^(0+128),w
 20565  1532  3DB4               	addwfc	(??___fladd^(0+128)+3),f
 20566  1533  0834               	movf	(??___fladd+3)^(0+128),w
 20567  1534  00AC               	movwf	(___fladd@b+3)^(0+128)
 20568  1535  0833               	movf	(??___fladd+2)^(0+128),w
 20569  1536  00AB               	movwf	(___fladd@b+2)^(0+128)
 20570  1537  0832               	movf	(??___fladd+1)^(0+128),w
 20571  1538  00AA               	movwf	(___fladd@b+1)^(0+128)
 20572  1539  0831               	movf	??___fladd^(0+128),w
 20573  153A  00A9               	movwf	___fladd@b^(0+128)
 20574  153B  3080               	movlw	128
 20575  153C  00B1               	movwf	??___fladd^(0+128)
 20576  153D  0831               	movf	??___fladd^(0+128),w
 20577  153E  06BD               	xorwf	___fladd@signs^(0+128),f
 20578  153F  09C0               	comf	___fladd@grs^(0+128),f
 20579  1540  0AC0               	incf	___fladd@grs^(0+128),f
 20580  1541  0840               	movf	___fladd@grs^(0+128),w
 20581  1542  1D03               	btfss	3,2
 20582  1543  2D55               	goto	l1331
 20583  1544  3001               	movlw	1
 20584  1545  07A9               	addwf	___fladd@b^(0+128),f
 20585  1546  3000               	movlw	0
 20586  1547  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 20587  1548  3000               	movlw	0
 20588  1549  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 20589  154A  3000               	movlw	0
 20590  154B  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 20591  154C  2D55               	goto	l1331
 20592  154D                     l6954:	
 20593  154D  082D               	movf	___fladd@a^(0+128),w
 20594  154E  02A9               	subwf	___fladd@b^(0+128),f
 20595  154F  082E               	movf	(___fladd@a+1)^(0+128),w
 20596  1550  3BAA               	subwfb	(___fladd@b+1)^(0+128),f
 20597  1551  082F               	movf	(___fladd@a+2)^(0+128),w
 20598  1552  3BAB               	subwfb	(___fladd@b+2)^(0+128),f
 20599  1553  0830               	movf	(___fladd@a+3)^(0+128),w
 20600  1554  3BAC               	subwfb	(___fladd@b+3)^(0+128),f
 20601  1555                     l1331:	
 20602  1555  082C               	movf	(___fladd@b+3)^(0+128),w
 20603  1556  042B               	iorwf	(___fladd@b+2)^(0+128),w
 20604  1557  042A               	iorwf	(___fladd@b+1)^(0+128),w
 20605  1558  0429               	iorwf	___fladd@b^(0+128),w
 20606  1559  1D03               	skipz
 20607  155A  2D7B               	goto	l6976
 20608  155B  0840               	movf	___fladd@grs^(0+128),w
 20609  155C  1D03               	btfss	3,2
 20610  155D  2D7B               	goto	l6976
 20611  155E  3000               	movlw	0
 20612  155F  00AC               	movwf	(?___fladd+3)^(0+128)
 20613  1560  3000               	movlw	0
 20614  1561  00AB               	movwf	(?___fladd+2)^(0+128)
 20615  1562  3000               	movlw	0
 20616  1563  00AA               	movwf	(?___fladd+1)^(0+128)
 20617  1564  3000               	movlw	0
 20618  1565  00A9               	movwf	?___fladd^(0+128)
 20619  1566  0008               	return
 20620  1567                     l6962:	
 20621  1567  3001               	movlw	1
 20622  1568                     u9005:	
 20623  1568  35A9               	lslf	___fladd@b^(0+128),f
 20624  1569  0DAA               	rlf	(___fladd@b+1)^(0+128),f
 20625  156A  0DAB               	rlf	(___fladd@b+2)^(0+128),f
 20626  156B  0DAC               	rlf	(___fladd@b+3)^(0+128),f
 20627  156C  0B89               	decfsz	9,f
 20628  156D  2D68               	goto	u9005
 20629  156E  1BC0               	btfsc	___fladd@grs^(0+128),7
 20630  156F  1429               	bsf	___fladd@b^(0+128),0
 20631  1570  1C40               	btfss	___fladd@grs^(0+128),0
 20632  1571  2D74               	goto	l6970
 20633  1572  1403               	setc
 20634  1573  2D75               	goto	L13
 20635  1574                     l6970:	
 20636  1574  1003               	clrc
 20637  1575                     L13:	
 20638  1575  0DC0               	rlf	___fladd@grs^(0+128),f
 20639  1576  083F               	movf	___fladd@bexp^(0+128),w
 20640  1577  1903               	btfsc	3,2
 20641  1578  2D7B               	goto	l6976
 20642  1579  3001               	movlw	1
 20643  157A  02BF               	subwf	___fladd@bexp^(0+128),f
 20644  157B                     l6976:	
 20645  157B  1FAB               	btfss	(___fladd@b+2)^(0+128),7
 20646  157C  2D67               	goto	l6962
 20647  157D                     l6978:	
 20648  157D  01BE               	clrf	___fladd@aexp^(0+128)
 20649  157E  1FC0               	btfss	___fladd@grs^(0+128),7
 20650  157F  2D88               	goto	l6988
 20651  1580  0840               	movf	___fladd@grs^(0+128),w
 20652  1581  397F               	andlw	127
 20653  1582  1D03               	btfss	3,2
 20654  1583  2D86               	goto	l6986
 20655  1584  1C29               	btfss	___fladd@b^(0+128),0
 20656  1585  2D88               	goto	l6988
 20657  1586                     l6986:	
 20658  1586  01BE               	clrf	___fladd@aexp^(0+128)
 20659  1587  0ABE               	incf	___fladd@aexp^(0+128),f
 20660  1588                     l6988:	
 20661  1588  083E               	movf	___fladd@aexp^(0+128),w
 20662  1589  1903               	btfsc	3,2
 20663  158A  2DB4               	goto	l1344
 20664  158B  3001               	movlw	1
 20665  158C  07A9               	addwf	___fladd@b^(0+128),f
 20666  158D  3000               	movlw	0
 20667  158E  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 20668  158F  3000               	movlw	0
 20669  1590  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 20670  1591  3000               	movlw	0
 20671  1592  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 20672  1593  1C2C               	btfss	(___fladd@b+3)^(0+128),0
 20673  1594  2DB4               	goto	l1344
 20674  1595  0829               	movf	___fladd@b^(0+128),w
 20675  1596  00B1               	movwf	??___fladd^(0+128)
 20676  1597  082A               	movf	(___fladd@b+1)^(0+128),w
 20677  1598  00B2               	movwf	(??___fladd^(0+128)+1)
 20678  1599  082B               	movf	(___fladd@b+2)^(0+128),w
 20679  159A  00B3               	movwf	(??___fladd^(0+128)+2)
 20680  159B  082C               	movf	(___fladd@b+3)^(0+128),w
 20681  159C  00B4               	movwf	(??___fladd^(0+128)+3)
 20682  159D  3001               	movlw	1
 20683  159E  00B5               	movwf	(??___fladd+4)^(0+128)
 20684  159F                     u9105:	
 20685  159F  37B4               	asrf	(??___fladd^(0+128)+3),f
 20686  15A0  0CB3               	rrf	(??___fladd^(0+128)+2),f
 20687  15A1  0CB2               	rrf	(??___fladd^(0+128)+1),f
 20688  15A2  0CB1               	rrf	??___fladd^(0+128),f
 20689  15A3  0BB5               	decfsz	(??___fladd+4)^(0+128),f
 20690  15A4  2D9F               	goto	u9105
 20691  15A5  0834               	movf	(??___fladd+3)^(0+128),w
 20692  15A6  00AC               	movwf	(___fladd@b+3)^(0+128)
 20693  15A7  0833               	movf	(??___fladd+2)^(0+128),w
 20694  15A8  00AB               	movwf	(___fladd@b+2)^(0+128)
 20695  15A9  0832               	movf	(??___fladd+1)^(0+128),w
 20696  15AA  00AA               	movwf	(___fladd@b+1)^(0+128)
 20697  15AB  0831               	movf	??___fladd^(0+128),w
 20698  15AC  00A9               	movwf	___fladd@b^(0+128)
 20699  15AD  0A3F               	incf	___fladd@bexp^(0+128),w
 20700  15AE  1903               	btfsc	3,2
 20701  15AF  2DB4               	goto	l1344
 20702  15B0  3001               	movlw	1
 20703  15B1  00B1               	movwf	??___fladd^(0+128)
 20704  15B2  0831               	movf	??___fladd^(0+128),w
 20705  15B3  07BF               	addwf	___fladd@bexp^(0+128),f
 20706  15B4                     l1344:	
 20707  15B4  0A3F               	incf	___fladd@bexp^(0+128),w
 20708  15B5  1D03               	btfss	3,2
 20709  15B6  083F               	movf	___fladd@bexp^(0+128),w
 20710  15B7  1D03               	btfss	3,2
 20711  15B8  2DC4               	goto	l7006
 20712  15B9  3000               	movlw	0
 20713  15BA  00AC               	movwf	(___fladd@b+3)^(0+128)
 20714  15BB  3000               	movlw	0
 20715  15BC  00AB               	movwf	(___fladd@b+2)^(0+128)
 20716  15BD  3000               	movlw	0
 20717  15BE  00AA               	movwf	(___fladd@b+1)^(0+128)
 20718  15BF  3000               	movlw	0
 20719  15C0  00A9               	movwf	___fladd@b^(0+128)
 20720  15C1  083F               	movf	___fladd@bexp^(0+128),w
 20721  15C2  1903               	btfsc	3,2
 20722  15C3  01BD               	clrf	___fladd@signs^(0+128)
 20723  15C4                     l7006:	
 20724  15C4  1C3F               	btfss	___fladd@bexp^(0+128),0
 20725  15C5  2DC8               	goto	l7010
 20726  15C6  17AB               	bsf	(___fladd@b^(0+128)+2),7
 20727  15C7  2DCC               	goto	l1352
 20728  15C8                     l7010:	
 20729  15C8  307F               	movlw	127
 20730  15C9  00B1               	movwf	??___fladd^(0+128)
 20731  15CA  0831               	movf	??___fladd^(0+128),w
 20732  15CB  05AB               	andwf	(___fladd@b^(0+128)+2),f
 20733  15CC                     l1352:	
 20734  15CC  363F               	lsrf	___fladd@bexp^(0+128),w
 20735  15CD  00B1               	movwf	??___fladd^(0+128)
 20736  15CE  0831               	movf	??___fladd^(0+128),w
 20737  15CF  00AC               	movwf	(___fladd@b^(0+128)+3)
 20738  15D0  1FBD               	btfss	___fladd@signs^(0+128),7
 20739  15D1  0008               	return
 20740  15D2  17AC               	bsf	(___fladd@b^(0+128)+3),7
 20741  15D3  0008               	return
 20742  15D4                     __end_of___fladd:	
 20743                           
 20744                           	psect	intentry
 20745  0004                     __pintentry:	
 20746 ;; *************** function _ISR *****************
 20747 ;; Defined at:
 20748 ;;		line 183 in file "main.c"
 20749 ;; Parameters:    Size  Location     Type
 20750 ;;		None
 20751 ;; Auto vars:     Size  Location     Type
 20752 ;;		None
 20753 ;; Return value:  Size  Location     Type
 20754 ;;                  1    wreg      void 
 20755 ;; Registers used:
 20756 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20757 ;; Tracked objects:
 20758 ;;		On entry : 0/0
 20759 ;;		On exit  : 0/0
 20760 ;;		Unchanged: 0/0
 20761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20766 ;;Total ram usage:        2 bytes
 20767 ;; Hardware stack levels used:    1
 20768 ;; Hardware stack levels required when called:    1
 20769 ;; This function calls:
 20770 ;;		_uartDisable
 20771 ;; This function is called by:
 20772 ;;		Interrupt level 1
 20773 ;; This function uses a non-reentrant model
 20774 ;;
 20775                           
 20776  0004                     _ISR:	
 20777                           
 20778                           ;incstack = 0
 20779  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20780                           
 20781                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20782  0005  3180               	pagesel	$
 20783  0006  0020               	movlb	0	; select bank0
 20784  0007  087F               	movf	127,w
 20785  0008  00F1               	movwf	??_ISR+1
 20786                           
 20787                           ;main.c: 185: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 20788  0009  190B               	btfsc	11,2	;volatile
 20789  000A  1E8B               	btfss	11,5	;volatile
 20790  000B  283C               	goto	i1l6174
 20791                           
 20792                           ;main.c: 186: k ++;
 20793  000C  3001               	movlw	1
 20794  000D  0022               	movlb	2	; select bank2
 20795  000E  07DD               	addwf	_k^(0+256),f
 20796  000F  3000               	movlw	0
 20797  0010  3DDE               	addwfc	(_k+1)^(0+256),f
 20798                           
 20799                           ;main.c: 187: if(k >= 3){
 20800  0011  085E               	movf	(_k+1)^(0+256),w
 20801  0012  3A80               	xorlw	128
 20802  0013  00F0               	movwf	??_ISR
 20803  0014  3080               	movlw	128
 20804  0015  0270               	subwf	??_ISR,w
 20805  0016  1D03               	skipz
 20806  0017  281A               	goto	u797_25
 20807  0018  3003               	movlw	3
 20808  0019  025D               	subwf	_k^(0+256),w
 20809  001A                     u797_25:	
 20810  001A  1C03               	skipc
 20811  001B  2827               	goto	i1l6166
 20812                           
 20813                           ;main.c: 188: currentBool = 1;
 20814  001C  3001               	movlw	1
 20815  001D  0022               	movlb	2	; select bank2
 20816  001E  00DB               	movwf	_currentBool^(0+256)
 20817  001F  3000               	movlw	0
 20818  0020  00DC               	movwf	(_currentBool^(0+256)+1)
 20819                           
 20820                           ;main.c: 189: k=0;
 20821  0021  01DD               	clrf	_k^(0+256)
 20822  0022  01DE               	clrf	(_k+1)^(0+256)
 20823                           
 20824                           ;main.c: 190: j++;
 20825  0023  3001               	movlw	1
 20826  0024  07DF               	addwf	_j^(0+256),f
 20827  0025  3000               	movlw	0
 20828  0026  3DE0               	addwfc	(_j+1)^(0+256),f
 20829  0027                     i1l6166:	
 20830                           
 20831                           ;main.c: 191: }
 20832                           ;main.c: 193: if(j>=10000){
 20833  0027  0022               	movlb	2	; select bank2
 20834  0028  0860               	movf	(_j+1)^(0+256),w
 20835  0029  3A80               	xorlw	128
 20836  002A  00F0               	movwf	??_ISR
 20837  002B  30A7               	movlw	167
 20838  002C  0270               	subwf	??_ISR,w
 20839  002D  1D03               	skipz
 20840  002E  2831               	goto	u798_25
 20841  002F  3010               	movlw	16
 20842  0030  025F               	subwf	_j^(0+256),w
 20843  0031                     u798_25:	
 20844  0031  1C03               	skipc
 20845  0032  283B               	goto	i1l6172
 20846                           
 20847                           ;main.c: 194: uartBool = 1;
 20848  0033  3001               	movlw	1
 20849  0034  0024               	movlb	4	; select bank4
 20850  0035  00EE               	movwf	_uartBool^(0+512)
 20851  0036  3000               	movlw	0
 20852  0037  00EF               	movwf	(_uartBool^(0+512)+1)
 20853                           
 20854                           ;main.c: 195: j = 0;
 20855  0038  0022               	movlb	2	; select bank2
 20856  0039  01DF               	clrf	_j^(0+256)
 20857  003A  01E0               	clrf	(_j+1)^(0+256)
 20858  003B                     i1l6172:	
 20859                           
 20860                           ;main.c: 196: }
 20861                           ;main.c: 197: INTCONbits.TMR0IF = 0;
 20862  003B  110B               	bcf	11,2	;volatile
 20863  003C                     i1l6174:	
 20864                           
 20865                           ;main.c: 198: }
 20866                           ;main.c: 200: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 20867  003C  0021               	movlb	1	; select bank1
 20868  003D  1C91               	btfss	17,1	;volatile
 20869  003E  2849               	goto	i1l6182
 20870  003F  0020               	movlb	0	; select bank0
 20871  0040  1C91               	btfss	17,1	;volatile
 20872  0041  2849               	goto	i1l6182
 20873                           
 20874                           ;main.c: 201: currentBool = 1;
 20875  0042  3001               	movlw	1
 20876  0043  0022               	movlb	2	; select bank2
 20877  0044  00DB               	movwf	_currentBool^(0+256)
 20878  0045  3000               	movlw	0
 20879  0046  00DC               	movwf	(_currentBool^(0+256)+1)
 20880                           
 20881                           ;main.c: 202: PIR1bits.TMR2IF = 0;
 20882  0047  0020               	movlb	0	; select bank0
 20883  0048  1091               	bcf	17,1	;volatile
 20884  0049                     i1l6182:	
 20885                           
 20886                           ;main.c: 203: }
 20887                           ;main.c: 205: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 20888  0049  0020               	movlb	0	; select bank0
 20889  004A  1E11               	btfss	17,4	;volatile
 20890  004B  2869               	goto	i1l6196
 20891  004C  0021               	movlb	1	; select bank1
 20892  004D  1E11               	btfss	17,4	;volatile
 20893  004E  2869               	goto	i1l6196
 20894                           
 20895                           ;main.c: 206: if(str[z] != '\0'){
 20896  004F  087A               	movf	_z,w
 20897  0050  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
 20898  0051  0086               	movwf	6
 20899  0052  3002               	movlw	2	; select bank5/6
 20900  0053  0087               	movwf	7
 20901  0054  0801               	movf	1,w
 20902  0055  1903               	btfsc	3,2
 20903  0056  2864               	goto	i1l6192
 20904                           
 20905                           ;main.c: 207: TXREG = str[z];
 20906  0057  087A               	movf	_z,w
 20907  0058  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
 20908  0059  0086               	movwf	6
 20909  005A  3002               	movlw	2	; select bank5/6
 20910  005B  0087               	movwf	7
 20911  005C  0801               	movf	1,w
 20912  005D  0023               	movlb	3	; select bank3
 20913  005E  009A               	movwf	26	;volatile
 20914                           
 20915                           ;main.c: 208: z++;
 20916  005F  3001               	movlw	1
 20917  0060  07FA               	addwf	_z,f
 20918  0061  3000               	movlw	0
 20919  0062  3DFB               	addwfc	_z+1,f
 20920                           
 20921                           ;main.c: 209: }else{
 20922  0063  2869               	goto	i1l6196
 20923  0064                     i1l6192:	
 20924                           
 20925                           ;main.c: 210: z = 0;
 20926  0064  01FA               	clrf	_z
 20927  0065  01FB               	clrf	_z+1
 20928                           
 20929                           ;main.c: 211: uartDisable();
 20930  0066  31B7  27F5  3180   	fcall	_uartDisable
 20931  0069                     i1l6196:	
 20932                           
 20933                           ;main.c: 212: }
 20934                           ;main.c: 213: }
 20935                           ;main.c: 215: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 20936  0069  0020               	movlb	0	; select bank0
 20937  006A  1D91               	btfss	17,3	;volatile
 20938  006B  2871               	goto	i1l132
 20939  006C  0021               	movlb	1	; select bank1
 20940  006D  1D91               	btfss	17,3	;volatile
 20941  006E  2871               	goto	i1l132
 20942                           
 20943                           ;main.c: 216: PIR1bits.SSP1IF = 0;
 20944  006F  0020               	movlb	0	; select bank0
 20945  0070  1191               	bcf	17,3	;volatile
 20946  0071                     i1l132:	
 20947  0071  0871               	movf	??_ISR+1,w
 20948  0072  0020               	movlb	0	; select bank0
 20949  0073  00FF               	movwf	127
 20950  0074  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20951  0075  0009               	retfie
 20952  0076                     __end_of_ISR:	
 20953                           
 20954                           	psect	text61
 20955  37F5                     __ptext61:	
 20956 ;; *************** function _uartDisable *****************
 20957 ;; Defined at:
 20958 ;;		line 86 in file "uart.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;		None
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;		None
 20963 ;; Return value:  Size  Location     Type
 20964 ;;                  1    wreg      void 
 20965 ;; Registers used:
 20966 ;;		None
 20967 ;; Tracked objects:
 20968 ;;		On entry : 0/0
 20969 ;;		On exit  : 0/0
 20970 ;;		Unchanged: 0/0
 20971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20976 ;;Total ram usage:        0 bytes
 20977 ;; Hardware stack levels used:    1
 20978 ;; This function calls:
 20979 ;;		Nothing
 20980 ;; This function is called by:
 20981 ;;		_ISR
 20982 ;; This function uses a non-reentrant model
 20983 ;;
 20984                           
 20985                           
 20986                           ;psect for function _uartDisable
 20987  37F5                     _uartDisable:	
 20988                           
 20989                           ;uart.c: 87: PIE1bits.TXIE = 0;
 20990                           
 20991                           ;incstack = 0
 20992                           ; Regs used in _uartDisable: []
 20993  37F5  0021               	movlb	1	; select bank1
 20994  37F6  1211               	bcf	17,4	;volatile
 20995  37F7  0008               	return
 20996  37F8                     __end_of_uartDisable:	
 20997  007E                     btemp	set	126	;btemp
 20998  007E                     int$flags	set	126
 20999  007E                     wtemp0	set	126
 21000                           
 21001                           	psect	text8_split_1
 21002  2556                     l8150:	
 21003                           
 21004                           ;doprnt.c: 1341: else if(prec < c)
 21005  2556  0022               	movlb	2	; select bank2
 21006  2557  083A               	movf	sprintf@c^(0+256),w
 21007  2558  0021               	movlb	1	; select bank1
 21008  2559  00DB               	movwf	??_sprintf^(0+128)
 21009  255A  01DC               	clrf	(??_sprintf^(0+128)+1)
 21010  255B  1BDB               	btfsc	??_sprintf^(0+128),7
 21011  255C  03DC               	decf	(??_sprintf^(0+128)+1),f
 21012  255D  0022               	movlb	2	; select bank2
 21013  255E  0838               	movf	(sprintf@prec+1)^(0+256),w
 21014  255F  3A80               	xorlw	128
 21015  2560  0021               	movlb	1	; select bank1
 21016  2561  00DD               	movwf	(??_sprintf+2)^(0+128)
 21017  2562  085C               	movf	(??_sprintf+1)^(0+128),w
 21018  2563  3A80               	xorlw	128
 21019  2564  025D               	subwf	(??_sprintf+2)^(0+128),w
 21020  2565  1D03               	skipz
 21021  2566  2D6A               	goto	u11265
 21022  2567  085B               	movf	??_sprintf^(0+128),w
 21023  2568  0022               	movlb	2	; select bank2
 21024  2569  0237               	subwf	sprintf@prec^(0+256),w
 21025  256A                     u11265:	
 21026  256A  1803               	skipnc
 21027  256B  2D72               	goto	l925
 21028                           
 21029                           ;doprnt.c: 1342: prec = c;
 21030  256C  0022               	movlb	2	; select bank2
 21031  256D  083A               	movf	sprintf@c^(0+256),w
 21032  256E  00B7               	movwf	sprintf@prec^(0+256)
 21033  256F  01B8               	clrf	(sprintf@prec+1)^(0+256)
 21034  2570  1BB7               	btfsc	sprintf@prec^(0+256),7
 21035  2571  03B8               	decf	(sprintf@prec+1)^(0+256),f
 21036  2572                     l925:	
 21037                           
 21038                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21039  2572  0022               	movlb	2	; select bank2
 21040  2573  0831               	movf	sprintf@width^(0+256),w
 21041  2574  0432               	iorwf	(sprintf@width+1)^(0+256),w
 21042  2575  1903               	btfsc	3,2
 21043  2576  2D89               	goto	l8158
 21044  2577  3003               	movlw	3
 21045  2578  052F               	andwf	sprintf@flag^(0+256),w
 21046  2579  0021               	movlb	1	; select bank1
 21047  257A  00DB               	movwf	??_sprintf^(0+128)
 21048  257B  3000               	movlw	0
 21049  257C  0022               	movlb	2	; select bank2
 21050  257D  0530               	andwf	(sprintf@flag+1)^(0+256),w
 21051  257E  0021               	movlb	1	; select bank1
 21052  257F  00DC               	movwf	(??_sprintf+1)^(0+128)
 21053  2580  085B               	movf	??_sprintf^(0+128),w
 21054  2581  045C               	iorwf	(??_sprintf^(0+128)+1),w
 21055  2582  1903               	btfsc	3,2
 21056  2583  2D89               	goto	l8158
 21057                           
 21058                           ;doprnt.c: 1346: width--;
 21059  2584  30FF               	movlw	255
 21060  2585  0022               	movlb	2	; select bank2
 21061  2586  07B1               	addwf	sprintf@width^(0+256),f
 21062  2587  30FF               	movlw	255
 21063  2588  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
 21064  2589                     l8158:	
 21065                           
 21066                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21067  2589  0022               	movlb	2	; select bank2
 21068  258A  1F30               	btfss	(sprintf@flag+1)^(0+256),6
 21069  258B  2DA5               	goto	l8166
 21070                           
 21071                           ;doprnt.c: 1349: if(width > prec)
 21072  258C  0838               	movf	(sprintf@prec+1)^(0+256),w
 21073  258D  3A80               	xorlw	128
 21074  258E  0021               	movlb	1	; select bank1
 21075  258F  00DB               	movwf	??_sprintf^(0+128)
 21076  2590  0022               	movlb	2	; select bank2
 21077  2591  0832               	movf	(sprintf@width+1)^(0+256),w
 21078  2592  3A80               	xorlw	128
 21079  2593  0021               	movlb	1	; select bank1
 21080  2594  025B               	subwf	??_sprintf^(0+128),w
 21081  2595  1D03               	skipz
 21082  2596  2D9A               	goto	u11305
 21083  2597  0022               	movlb	2	; select bank2
 21084  2598  0831               	movf	sprintf@width^(0+256),w
 21085  2599  0237               	subwf	sprintf@prec^(0+256),w
 21086  259A                     u11305:	
 21087  259A  1803               	skipnc
 21088  259B  2DA2               	goto	l8164
 21089                           
 21090                           ;doprnt.c: 1350: width -= prec;
 21091  259C  0022               	movlb	2	; select bank2
 21092  259D  0837               	movf	sprintf@prec^(0+256),w
 21093  259E  02B1               	subwf	sprintf@width^(0+256),f
 21094  259F  0838               	movf	(sprintf@prec+1)^(0+256),w
 21095  25A0  3BB2               	subwfb	(sprintf@width+1)^(0+256),f
 21096  25A1  2DA5               	goto	l8166
 21097  25A2                     l8164:	
 21098                           
 21099                           ;doprnt.c: 1351: else
 21100                           ;doprnt.c: 1352: width = 0;
 21101  25A2  0022               	movlb	2	; select bank2
 21102  25A3  01B1               	clrf	sprintf@width^(0+256)
 21103  25A4  01B2               	clrf	(sprintf@width+1)^(0+256)
 21104  25A5                     l8166:	
 21105                           
 21106                           ;doprnt.c: 1353: }
 21107                           ;doprnt.c: 1381: if(width > c)
 21108  25A5  083A               	movf	sprintf@c^(0+256),w
 21109  25A6  0021               	movlb	1	; select bank1
 21110  25A7  00DB               	movwf	??_sprintf^(0+128)
 21111  25A8  01DC               	clrf	(??_sprintf^(0+128)+1)
 21112  25A9  1BDB               	btfsc	??_sprintf^(0+128),7
 21113  25AA  03DC               	decf	(??_sprintf^(0+128)+1),f
 21114  25AB  085C               	movf	(??_sprintf+1)^(0+128),w
 21115  25AC  3A80               	xorlw	128
 21116  25AD  00DD               	movwf	(??_sprintf+2)^(0+128)
 21117  25AE  0022               	movlb	2	; select bank2
 21118  25AF  0832               	movf	(sprintf@width+1)^(0+256),w
 21119  25B0  3A80               	xorlw	128
 21120  25B1  0021               	movlb	1	; select bank1
 21121  25B2  025D               	subwf	(??_sprintf+2)^(0+128),w
 21122  25B3  1D03               	skipz
 21123  25B4  2DB9               	goto	u11315
 21124  25B5  0022               	movlb	2	; select bank2
 21125  25B6  0831               	movf	sprintf@width^(0+256),w
 21126  25B7  0021               	movlb	1	; select bank1
 21127  25B8  025B               	subwf	??_sprintf^(0+128),w
 21128  25B9                     u11315:	
 21129  25B9  1803               	skipnc
 21130  25BA  2DCA               	goto	l8170
 21131                           
 21132                           ;doprnt.c: 1382: width -= c;
 21133  25BB  0022               	movlb	2	; select bank2
 21134  25BC  083A               	movf	sprintf@c^(0+256),w
 21135  25BD  0021               	movlb	1	; select bank1
 21136  25BE  00DB               	movwf	??_sprintf^(0+128)
 21137  25BF  01DC               	clrf	(??_sprintf^(0+128)+1)
 21138  25C0  1BDB               	btfsc	??_sprintf^(0+128),7
 21139  25C1  03DC               	decf	(??_sprintf^(0+128)+1),f
 21140  25C2  085B               	movf	??_sprintf^(0+128),w
 21141  25C3  0022               	movlb	2	; select bank2
 21142  25C4  02B1               	subwf	sprintf@width^(0+256),f
 21143  25C5  0021               	movlb	1	; select bank1
 21144  25C6  085C               	movf	(??_sprintf+1)^(0+128),w
 21145  25C7  0022               	movlb	2	; select bank2
 21146  25C8  3BB2               	subwfb	(sprintf@width+1)^(0+256),f
 21147  25C9  2DCD               	goto	l8172
 21148  25CA                     l8170:	
 21149                           
 21150                           ;doprnt.c: 1383: else
 21151                           ;doprnt.c: 1384: width = 0;
 21152  25CA  0022               	movlb	2	; select bank2
 21153  25CB  01B1               	clrf	sprintf@width^(0+256)
 21154  25CC  01B2               	clrf	(sprintf@width+1)^(0+256)
 21155  25CD                     l8172:	
 21156                           
 21157                           ;doprnt.c: 1387: if(flag & 0x04) {
 21158  25CD  1D2F               	btfss	sprintf@flag^(0+256),2
 21159  25CE  2E05               	goto	l8188
 21160                           
 21161                           ;doprnt.c: 1392: if(flag & 0x03)
 21162  25CF  3003               	movlw	3
 21163  25D0  052F               	andwf	sprintf@flag^(0+256),w
 21164  25D1  0021               	movlb	1	; select bank1
 21165  25D2  00DB               	movwf	??_sprintf^(0+128)
 21166  25D3  3000               	movlw	0
 21167  25D4  0022               	movlb	2	; select bank2
 21168  25D5  0530               	andwf	(sprintf@flag+1)^(0+256),w
 21169  25D6  0021               	movlb	1	; select bank1
 21170  25D7  00DC               	movwf	(??_sprintf+1)^(0+128)
 21171  25D8  085B               	movf	??_sprintf^(0+128),w
 21172  25D9  045C               	iorwf	(??_sprintf^(0+128)+1),w
 21173  25DA  1903               	btfsc	3,2
 21174  25DB  2DEB               	goto	l8180
 21175                           
 21176                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 21177  25DC  302D               	movlw	45
 21178  25DD  00DB               	movwf	??_sprintf^(0+128)
 21179  25DE  0022               	movlb	2	; select bank2
 21180  25DF  0839               	movf	sprintf@sp^(0+256),w
 21181  25E0  0086               	movwf	6
 21182  25E1  3002               	movlw	2	; select bank4/5
 21183  25E2  0087               	movwf	7
 21184  25E3  0021               	movlb	1	; select bank1
 21185  25E4  085B               	movf	??_sprintf^(0+128),w
 21186  25E5  0081               	movwf	1
 21187  25E6  3001               	movlw	1
 21188  25E7  00DB               	movwf	??_sprintf^(0+128)
 21189  25E8  085B               	movf	??_sprintf^(0+128),w
 21190  25E9  0022               	movlb	2	; select bank2
 21191  25EA  07B9               	addwf	sprintf@sp^(0+256),f
 21192  25EB                     l8180:	
 21193                           
 21194                           ;doprnt.c: 1415: if(width)
 21195  25EB  0022               	movlb	2	; select bank2
 21196  25EC                     L7:	
 21197  25EC  0831               	movf	sprintf@width^(0+256),w
 21198  25ED  0432               	iorwf	(sprintf@width+1)^(0+256),w
 21199  25EE  1903               	btfsc	3,2
 21200  25EF  2E3D               	goto	l8208
 21201                           
 21202                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 21203                           
 21204                           ;doprnt.c: 1416: do
 21205  25F0  3030               	movlw	48
 21206  25F1  0021               	movlb	1	; select bank1
 21207  25F2  00DB               	movwf	??_sprintf^(0+128)
 21208  25F3  0022               	movlb	2	; select bank2
 21209  25F4  0839               	movf	sprintf@sp^(0+256),w
 21210  25F5  0086               	movwf	6
 21211  25F6  3002               	movlw	2	; select bank4/5
 21212  25F7  0087               	movwf	7
 21213  25F8  0021               	movlb	1	; select bank1
 21214  25F9  085B               	movf	??_sprintf^(0+128),w
 21215  25FA  0081               	movwf	1
 21216  25FB  3001               	movlw	1
 21217  25FC  00DB               	movwf	??_sprintf^(0+128)
 21218  25FD  085B               	movf	??_sprintf^(0+128),w
 21219  25FE  0022               	movlb	2	; select bank2
 21220  25FF  07B9               	addwf	sprintf@sp^(0+256),f
 21221                           
 21222                           ;doprnt.c: 1418: while(--width);
 21223  2600  30FF               	movlw	255
 21224  2601  07B1               	addwf	sprintf@width^(0+256),f
 21225  2602  30FF               	movlw	255
 21226  2603  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
 21227  2604  2DEC               	goto	L7
 21228  2605                     l8188:	
 21229                           ;doprnt.c: 1420: } else
 21230                           
 21231                           
 21232                           ;doprnt.c: 1422: {
 21233                           ;doprnt.c: 1424: if(width
 21234                           ;doprnt.c: 1428: )
 21235  2605  0831               	movf	sprintf@width^(0+256),w
 21236  2606  0432               	iorwf	(sprintf@width+1)^(0+256),w
 21237  2607  1903               	btfsc	3,2
 21238  2608  2E21               	goto	l8196
 21239  2609                     l8190:	
 21240                           ;doprnt.c: 1429: do
 21241                           
 21242                           
 21243                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 21244  2609  3020               	movlw	32
 21245  260A  0021               	movlb	1	; select bank1
 21246  260B  00DB               	movwf	??_sprintf^(0+128)
 21247  260C  0022               	movlb	2	; select bank2
 21248  260D  0839               	movf	sprintf@sp^(0+256),w
 21249  260E  0086               	movwf	6
 21250  260F  3002               	movlw	2	; select bank4/5
 21251  2610  0087               	movwf	7
 21252  2611  0021               	movlb	1	; select bank1
 21253  2612  085B               	movf	??_sprintf^(0+128),w
 21254  2613  0081               	movwf	1
 21255  2614  3001               	movlw	1
 21256  2615  00DB               	movwf	??_sprintf^(0+128)
 21257  2616  085B               	movf	??_sprintf^(0+128),w
 21258  2617  0022               	movlb	2	; select bank2
 21259  2618  07B9               	addwf	sprintf@sp^(0+256),f
 21260                           
 21261                           ;doprnt.c: 1431: while(--width);
 21262  2619  30FF               	movlw	255
 21263  261A  07B1               	addwf	sprintf@width^(0+256),f
 21264  261B  30FF               	movlw	255
 21265  261C  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
 21266  261D  0831               	movf	sprintf@width^(0+256),w
 21267  261E  0432               	iorwf	(sprintf@width+1)^(0+256),w
 21268  261F  1D03               	btfss	3,2
 21269  2620  2E09               	goto	l8190
 21270  2621                     l8196:	
 21271                           
 21272                           ;doprnt.c: 1438: if(flag & 0x03)
 21273  2621  3003               	movlw	3
 21274  2622  052F               	andwf	sprintf@flag^(0+256),w
 21275  2623  0021               	movlb	1	; select bank1
 21276  2624  00DB               	movwf	??_sprintf^(0+128)
 21277  2625  3000               	movlw	0
 21278  2626  0022               	movlb	2	; select bank2
 21279  2627  0530               	andwf	(sprintf@flag+1)^(0+256),w
 21280  2628  0021               	movlb	1	; select bank1
 21281  2629  00DC               	movwf	(??_sprintf+1)^(0+128)
 21282  262A  085B               	movf	??_sprintf^(0+128),w
 21283  262B  045C               	iorwf	(??_sprintf^(0+128)+1),w
 21284  262C  1903               	btfsc	3,2
 21285  262D  2E3D               	goto	l8208
 21286                           
 21287                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 21288  262E  302D               	movlw	45
 21289  262F                     L9:	
 21290  262F  00DB               	movwf	??_sprintf^(0+128)
 21291  2630  0022               	movlb	2	; select bank2
 21292  2631  0839               	movf	sprintf@sp^(0+256),w
 21293  2632  0086               	movwf	6
 21294  2633  3002               	movlw	2	; select bank4/5
 21295  2634  0087               	movwf	7
 21296  2635  0021               	movlb	1	; select bank1
 21297  2636  085B               	movf	??_sprintf^(0+128),w
 21298  2637  0081               	movwf	1
 21299  2638  3001               	movlw	1
 21300  2639  00DB               	movwf	??_sprintf^(0+128)
 21301  263A  085B               	movf	??_sprintf^(0+128),w
 21302  263B  0022               	movlb	2	; select bank2
 21303  263C  07B9               	addwf	sprintf@sp^(0+256),f
 21304  263D                     l8208:	
 21305  263D  30FF               	movlw	255
 21306  263E  0022               	movlb	2	; select bank2
 21307  263F  07B7               	addwf	sprintf@prec^(0+256),f
 21308  2640  30FF               	movlw	255
 21309  2641  3DB8               	addwfc	(sprintf@prec+1)^(0+256),f
 21310  2642  0A37               	incf	sprintf@prec^(0+256),w
 21311  2643  1903               	btfsc	3,2
 21312  2644  0A38               	incf	(sprintf@prec+1)^(0+256),w
 21313  2645  3180  1903         	btfsc	3,2
 21314  2647  28BB               	goto	l8210
 21315                           
 21316                           ;doprnt.c: 1478: {
 21317                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21318                           
 21319                           ;doprnt.c: 1469: }
 21320                           ;doprnt.c: 1474: while(prec--) {
 21321  2648  3000               	movlw	0
 21322  2649  0020               	movlb	0	; select bank0
 21323  264A  00A9               	movwf	___llmod@divisor+3
 21324  264B  3000               	movlw	0
 21325  264C  00A8               	movwf	___llmod@divisor+2
 21326  264D  3000               	movlw	0
 21327  264E  00A7               	movwf	___llmod@divisor+1
 21328  264F  300A               	movlw	10
 21329  2650  00A6               	movwf	___llmod@divisor
 21330  2651  0022               	movlb	2	; select bank2
 21331  2652  0838               	movf	(sprintf@prec+1)^(0+256),w
 21332  2653  0085               	movwf	5
 21333  2654  0837               	movf	sprintf@prec^(0+256),w
 21334  2655  0084               	movwf	4
 21335  2656  3584               	lslf	4,f
 21336  2657  0D85               	rlf	5,f
 21337  2658  3584               	lslf	4,f
 21338  2659  0D85               	rlf	5,f
 21339  265A  309A               	movlw	low (_dpowers| (0+32768))
 21340  265B  0784               	addwf	4,f
 21341  265C  30B0               	movlw	high (_dpowers| (0+32768))
 21342  265D  3D85               	addwfc	5,f
 21343  265E  3F00               	moviw [0]fsr0
 21344  265F  00F2               	movwf	___lldiv@divisor
 21345  2660  3F01               	moviw [1]fsr0
 21346  2661  00F3               	movwf	___lldiv@divisor+1
 21347  2662  3F02               	moviw [2]fsr0
 21348  2663  00F4               	movwf	___lldiv@divisor+2
 21349  2664  3F03               	moviw [3]fsr0
 21350  2665  00F5               	movwf	___lldiv@divisor+3
 21351  2666  082C               	movf	(sprintf@val+3)^(0+256),w
 21352  2667  00F9               	movwf	___lldiv@dividend+3
 21353  2668  082B               	movf	(sprintf@val+2)^(0+256),w
 21354  2669  00F8               	movwf	___lldiv@dividend+2
 21355  266A  082A               	movf	(sprintf@val+1)^(0+256),w
 21356  266B  00F7               	movwf	___lldiv@dividend+1
 21357  266C  0829               	movf	sprintf@val^(0+256),w
 21358  266D  00F6               	movwf	___lldiv@dividend
 21359  266E  31AB  23FF  31A5   	fcall	___lldiv
 21360  2671  0875               	movf	?___lldiv+3,w
 21361  2672  0020               	movlb	0	; select bank0
 21362  2673  00AD               	movwf	___llmod@dividend+3
 21363  2674  0874               	movf	?___lldiv+2,w
 21364  2675  00AC               	movwf	___llmod@dividend+2
 21365  2676  0873               	movf	?___lldiv+1,w
 21366  2677  00AB               	movwf	___llmod@dividend+1
 21367  2678  0872               	movf	?___lldiv,w
 21368  2679  00AA               	movwf	___llmod@dividend
 21369  267A  31AA  2241  31A5   	fcall	___llmod
 21370  267D  0020               	movlb	0	; select bank0
 21371  267E  0826               	movf	?___llmod,w
 21372  267F  3E30               	addlw	48
 21373  2680  0021               	movlb	1	; select bank1
 21374  2681  00DB               	movwf	??_sprintf^(0+128)
 21375  2682  085B               	movf	??_sprintf^(0+128),w
 21376  2683  0022               	movlb	2	; select bank2
 21377  2684  00BA               	movwf	sprintf@c^(0+256)
 21378                           
 21379                           ;doprnt.c: 1523: }
 21380                           ;doprnt.c: 1524: ((*sp++ = (c)));
 21381  2685  083A               	movf	sprintf@c^(0+256),w
 21382  2686  0021               	movlb	1	; select bank1
 21383  2687  2E2F               	goto	L9
 21384  2688                     l8212:	
 21385                           ;doprnt.c: 1525: }
 21386                           ;doprnt.c: 1533: }
 21387                           ;doprnt.c: 1535: alldone:
 21388                           
 21389                           
 21390                           ;doprnt.c: 1538: *sp = 0;
 21391  2688  0839               	movf	sprintf@sp^(0+256),w
 21392  2689  0086               	movwf	6
 21393  268A  3002               	movlw	2	; select bank4/5
 21394  268B  0087               	movwf	7
 21395  268C  0181               	clrf	1
 21396  268D  0008               	return
 21397  268E                     __end_of_sprintf:	
 21398                           ;doprnt.c: 1540: return 0;
 21399                           ;	Return value of _sprintf is never used
 21400                           


Data Sizes:
    Strings     173
    Constant    2005
    Data        13
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     76      78
    BANK2            80     59      80
    BANK3            80     10      10
    BANK4            80     78      80
    BANK5            80      0      57
    BANK6            80      0      24
    BANK7            80     80      80
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_9(CODE[11]), STR_8(CODE[9]), STR_7(CODE[20]), STR_6(CODE[15]), 
		 -> STR_5(CODE[19]), STR_4(CODE[38]), STR_3(CODE[23]), STR_2(CODE[15]), 
		 -> STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> str(BANK5[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdaux@data(COMMON[8]), LTC6804_rdcv@cell_data(BANK0[8]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdstat_reg@cmd(COMMON[4]), 

    spi_write_array@data	PTR unsigned char  size(1) Largest target is 12
		 -> LTC6804_wrcfg@cmd(BANK0[12]), LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), LTC6804_adstat@cmd(COMMON[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 8
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), LTC6804_rdaux@data(COMMON[8]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK2[2]), ADCV(BANK1[2]), 
		 -> ADSTAT(BANK2[2]), LTC6804_rdstat_reg@cmd(COMMON[4]), configReg(BANK2[6]), 

    LTC6804_wrcfg@config	PTR unsigned char [6] size(1) Largest target is 6
		 -> configReg(BANK2[6]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR unsigned int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK2[24]), 

    cellBalancing@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@totalVoltage	PTR float  size(1) Largest target is 4
		 -> main@totalVoltage(BANK4[4]), 

    sumVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    avgBuff@buff	PTR float  size(1) Largest target is 80
		 -> main@currentBuff(BANK7[80]), 

    getTemps@temperatures	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    startUp@current	PTR float  size(1) Largest target is 4
		 -> main@current(BANK4[4]), 

    startUp@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    startUp@highestTemp	PTR int  size(1) Largest target is 2
		 -> main@highestTemp(BANK4[2]), 

    startUp@soc	PTR float  size(1) Largest target is 4
		 -> main@soc(BANK4[4]), 

    startUp@totalVoltage	PTR float  size(1) Largest target is 4
		 -> main@totalVoltage(BANK4[4]), 

    startUp@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    _measureVoltages->_LTC6804_adcv
    _cellBalancing->_LTC6804_wrcfg
    _LTC6804_rdcv_reg->_spi_write_read
    _spi_write_read->___bmul
    _LTC6804_adcv->_spi_write_array
    ___flmul->___awdiv
    _LTC6804_initialize->_LTC6804_wrcfg
    _LTC6804_wrcfg->_spi_write_array
    _spi_write_array->_spi_write
    _pec15_calc->___bmul
    ___xxtofl->_adcRead

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___flneg
    _writeVoltages->___flneg
    _sprintf->___flneg
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___flneg->___fldiv
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    _calculateTemp->___fltol
    ___fltol->_scale
    ___flmul->___xxtofl
    _setup->_LTC6804_initialize
    _LTC6804_initialize->_LTC6804_wrcfg
    _LTC6804_wrcfg->_pec15_calc
    ___xxtofl->_adcRead
    ___fldiv->___flmul
    ___fladd->___flneg

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeSOC->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___flge
    ___flsub->___fladd
    _startUp->_measureVoltages
    _measureVoltages->_cellBalancing
    _sumVoltages->___fladd
    _cellBalancing->___flge
    ___flge->___fladd
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fladd
    _avgBuff->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeSOC->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _startUp->_measureVoltages

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               168   168      0  518979
                                              0 BANK3     10    10      0
                                              0 BANK4     78    78      0
                                              0 BANK7     80    80      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
                            _avgBuff
                      _cellBalancing
                         _getCurrent
                           _getTemps
                    _measureVoltages
                              _setup
                            _startUp
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   22     1     21  303991
                                             75 BANK1      1     1      0
                                             38 BANK2     21     0     21
                        _clearScreen
                       _writeCurrent
                           _writeSOC
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                       21    15      6   65974
                                             65 BANK1     10     4      6
                                             27 BANK2     11    11      0
                            ___fladd
                             ___flge
                            ___flneg
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                           8     4      4   57749
                                             65 BANK1      8     4      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeSOC                                             8     4      4   64269
                                             65 BANK1      8     4      4
                            ___flmul
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         4     0      4   57462
                                             65 BANK1      4     0      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   57502
                                             65 BANK1      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (3) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             48    38     10   57341
                                             49 BANK1     16     6     10
                                              0 BANK2     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   11700
                                             50 BANK0     25    21      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4   11421
                                             50 BANK0     24    20      4
                                              0 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4807
                                             33 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     335
                                             76 BANK0      4     0      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _startUp                                             14     9      5   92558
                                             70 BANK1      5     0      5
                                             30 BANK2      9     9      0
                            ___fladd
                            ___fldiv
                             ___flge
                         _getCurrent
                           _getTemps
                    _measureVoltages
                        _sumVoltages
 ---------------------------------------------------------------------------------
 (2) _measureVoltages                                     37    34      3   47367
                                             63 BANK1      7     4      3
                                              0 BANK2     30    30      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                      _cellBalancing
                        _sumVoltages
 ---------------------------------------------------------------------------------
 (2) _sumVoltages                                         13     9      4    5012
                                             33 BANK1     13     9      4
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) _cellBalancing                                       14    12      2   12772
                                             49 BANK1     14    12      2
                      _LTC6804_wrcfg
                            ___fladd
                             ___flge
                       _setDischarge
 ---------------------------------------------------------------------------------
 (4) _setDischarge                                         4     1      3     583
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2786
                                             33 BANK1     16     8      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv                                        29    27      2   12546
                                             28 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2366
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LTC6804_rdcv_reg                                    13    11      2    5632
                                             15 BANK0     13    11      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _spi_write_read                                       8     5      3    2195
                                              6 COMMON     3     0      3
                                              0 BANK0      5     5      0
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (6) _spi_read                                             3     3      0      65
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _LTC6804_adcv                                         7     7      0    2260
                                              9 COMMON     1     1      0
                                             15 BANK0      6     6      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (2) _getTemps                                            11     9      2   12679
                                             15 BANK1     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (3) _calculateTemp                                        8     6      2   11876
                                              7 BANK1      8     6      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                             75 BANK0      4     0      4
                                              0 BANK1      7     7      0
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) _getCurrent                                           8     4      4   15886
                                             45 BANK1      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (3) _calculateCurrent                                    12     8      4   14579
                                             33 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    6773
                                             24 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _adcRead                                             16    14      2     133
                                              2 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4856
                 _LTC6804_initialize
                           _adcSetup
                           _i2cSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_initialize                                   1     1      0    4856
                                             38 BANK0      1     1      0
                      _LTC6804_wrcfg
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                              7     4      3     753
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (4) _LTC6804_wrcfg                                       24    23      1    4103
                                              9 COMMON     1     0      1
                                             15 BANK0     23    23      0
                             ___bmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _spi_write_array                                      4     3      1     524
                                              5 COMMON     4     3      1
                          _spi_write
 ---------------------------------------------------------------------------------
 (6) _spi_write                                            3     3      0      34
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _pec15_calc                                          17    15      2    1523
                                              6 COMMON     2     0      2
                                              0 BANK0     15    15      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1    1001
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _avgBuff                                             13     9      4    9081
                                             33 BANK1     13     9      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                              4 COMMON     4     4      0
                                             14 BANK0     10     6      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    3055
                                             50 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    4562
                                              9 BANK1     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                        _uartDisable
 ---------------------------------------------------------------------------------
 (8) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flneg (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
   ___flge
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
   ___flneg
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
   ___xxtofl
     _adcRead (ARG)
   _avgBuff
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _cellBalancing
     _LTC6804_wrcfg
       ___bmul
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _setDischarge
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
   _measureVoltages
     _LTC6804_adcv
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdcv
       _LTC6804_rdcv_reg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_read
           ___bmul (ARG)
           _spi_read (ARG)
           _spi_write (ARG)
         _wakeup_idle
       ___bmul
       ___wmul
       _pec15_calc
         ___bmul (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
     _cellBalancing
       _LTC6804_wrcfg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       _setDischarge
     _sumVoltages
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
   _setup
     _LTC6804_initialize
       _LTC6804_wrcfg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _set_adc
     _adcSetup
     _i2cSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _startUp
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _getCurrent
       ___xxtofl
         _adcRead (ARG)
       _adcRead
       _calculateCurrent
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     _getTemps
       _adcRead
       _calculateTemp
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___xxtofl
           _adcRead (ARG)
         _adcRead (ARG)
     _measureVoltages
       _LTC6804_adcv
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _LTC6804_rdcv
         _LTC6804_rdcv_reg
           ___bmul
           _pec15_calc
             ___bmul (ARG)
           _spi_write_read
             ___bmul (ARG)
             _spi_read (ARG)
             _spi_write (ARG)
           _wakeup_idle
         ___bmul
         ___wmul
         _pec15_calc
           ___bmul (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _cellBalancing
         _LTC6804_wrcfg
           ___bmul
           _pec15_calc
             ___bmul (ARG)
           _spi_write_array
             _spi_write
           _wakeup_idle
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         _setDischarge
       _sumVoltages
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
     _sumVoltages
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeSOC
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeVoltages
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flneg
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable

 _ISR (ROOT)
   _uartDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4C      4E       7       97.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     3B      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      A       A      11       12.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     4E      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1F5      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      39      16       71.3%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      18      18       30.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50     50      50      20      100.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1F5      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 12 17:28:50 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003C  
                         ___fldiv@aexp 006B                           ___fldiv@bexp 006A  
                                    _j 015F                                      _k 015D  
                                    _n 0161                                      _z 007A  
                                    pc 0002                           ___fldiv@sign 005F  
                       ___bmul@product 0074                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0214                                     l92 0CD4  
                                   l95 0D08                           ___awdiv@sign 0025  
                                   _t0 3800                         ?_LTC6804_wrcfg 0079  
                  ___wmul@multiplicand 0074                sumVoltages@totalVoltage 00C8  
                      writeTemps@temps 00E6                    __Umul8_16@word_mpld 0022  
             writeValuesToUart@current 0151                                    l242 2AC3  
                                  l260 27FC                                    l253 2751  
                                  l190 2DD1                                    l272 0A9E  
                                  l248 2696                                    l257 276E  
                                  l194 2C67                                    l290 29FF  
                                  l266 2015                                    l274 0AC9  
                                  l286 29EB                                    l278 0AE1  
                                  l626 1CE6                                    l804 285C  
                                  l662 1D03                                    l850 00E9  
                                  l669 1DC3                                    l925 2572  
                                  l873 02EB                                    l865 0187  
                                  l798 2846                                    _PR2 001B  
                         __CFG_CPD$OFF 0000                                    _ISR 0004  
              __end_of_measureVoltages 2556                                    _cmd 0163  
                                  _str 02A0                      SSD1306_Test@F7528 02D7  
                          _sumVoltages 2B5B                           ___awmod@sign 0078  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                         __CFG_FOSC$HS 0000                           ___flmul@aexp 0046  
                         ___flmul@bexp 004B                           ___flmul@sign 0045  
                         ___flmul@temp 0050                           ___flmul@prod 004C  
                                 S8932 2800                           __CFG_LVP$OFF 0000  
                                 ?_ISR 0070                           ___fltol@exp1 00A6  
                                 l1031 28D3                                   l1202 221B  
                                 l1212 2294                                   l1310 1425  
                                 l1160 2396                                   l1314 14BD  
                                 l1170 241A                                   l1331 1555  
                                 l1316 14A0                                   l1431 2FBE  
                                 l1175 20CD                                   l1352 15CC  
                                 l1344 15B4                                   l1425 2F88  
                                 l1418 17F3                                   l1194 209E  
                                 l1444 2934                                   l1390 11F1  
                                 l1366 10BC                                   l1438 2FD2  
                                 l1439 2FDC                                   l1387 11CC  
                                 l1388 11E4                                   l7010 15C8  
                                 l7006 15C4                                   l7030 15EE  
                                 l7112 175B                                   l7032 15F0  
                                 l7200 1C82                                   l8000 038C  
                                 l7122 1789                                   l7114 1772  
                                 l7050 1613                                   l7034 15F8  
                                 l7210 1C9D                                   l8010 03CA  
                                 l7124 178B                                   l7060 1629  
                                 l7052 161B                                   l7300 2CAD  
                                 l7212 1CA4                                   l7204 1C8C  
                                 l8020 043B                                   l7134 17B4  
                                 l7222 1CBF                                   l7206 1C93  
                                 l8110 06E6                                   l8030 049B  
                                 l8014 0435                                   l7144 17E0  
                                 l7048 1611                                   l7312 2CB9  
                                 l7224 1CC6                                   l7216 1CAE  
                                 l7232 1CD7                                   l7138 17C9  
                                 l7306 2CB3                                   l7218 1CB5  
                                 l7170 1C2D                                   l7162 1C15  
                                 l7402 100D                                   l8050 04EF  
                                 l8034 04AD                                   l8026 0472  
                                 l8210 00BB                                   l7260 2170  
                                 l8300 1DD0                                   l7228 1CD0  
                                 l7180 1C48                                   l7164 1C1C  
                                 l7412 2203                                   l8140 073F  
                                 l8116 06FA                                   l8212 2688  
                                 l6710 2980                                   l7318 2CC2  
                                 l8310 1E25                                   l7182 1C4F  
                                 l7174 1C37                                   l7158 1C0B  
                                 l7350 13A4                                   l7342 1306  
                                 l8150 2556                                   l8134 0739  
                                 l8118 06FF                                   l7512 28CD  
                                 l7192 1C6A                                   l7176 1C3E  
                                 l7168 1C26                                   l7600 2C10  
                                 l7504 2411                                   l8208 263D  
                                 l8128 072B                                   l8080 05A6  
                                 l8072 052E                                   l8048 04CC  
                                 l8056 0503                                   l7274 21A5  
                                 l7266 2179                                   l8322 1E70  
                                 l7530 20E7                                   l7194 1C71  
                                 l7186 1C59                                   l7610 2C3E  
                                 l7602 2C1E                                   l7506 241D  
                                 l7434 2256                                   l7426 223C  
                                 l6810 2AF6                                   l8170 25CA  
                                 l8146 0776                                   l8074 0592  
                                 _ADAX 0168                                   l6900 146B  
                                 l6732 2879                                   l6724 28B8  
                                 l6716 2981                                   l6708 296C  
                                 l7188 1C60                                   l7452 228B  
                                 l7444 2270                                   l6804 2ADE  
                                 l7372 0E9D                                   l8180 25EB  
                                 l8172 25CD                                   l8164 25A2  
                                 _ADCV 00EC                                   l6910 14AA  
                                 l7286 21DA                                   l6670 292E  
                                 l8318 1E66                                   l7534 2110  
                                 l7198 1C7B                                   l7614 2C49  
                                 l7630 2A70                                   l7454 2297  
                                 l7446 227E                                   l6806 2AEA  
                                 l6814 2AFF                                   l7390 0FE2  
                                 l7366 0E32                                   l8190 2609  
                                 l8166 25A5                                   l8158 2589  
                                 l8094 05EA                                   l8086 05C3  
                                 l6840 13F5                                   l7720 1150  
                                 l6728 2873                                   l8264 1D10  
                                 l8360 253E                                   l8352 248F  
                                 l7624 2A4A                                   l7464 237C  
                                 l7384 0F77                                   l7376 0EBB  
                                 l8440 29CD                                   l6842 13FD  
                                 l7714 1137                                   l7722 1119  
                                 l6690 2B13                                   l8282 1DA6  
                                 l8274 1D65                                   l8290 1DB5  
                                 l7538 2139                                   l8346 247F  
                                 l8338 2459                                   l8530 1EE0  
                                 l7626 2A58                                   l7634 2A7B  
                                 l6754 2BC3                                   l6818 2B07  
                                 l8442 29F3                                   l6908 14A8  
                                 l6860 141A                                   l6836 13F2  
                                 l7740 1172                                   l7724 1155  
                                 l7820 2FF7                                   l7804 2FC3  
                                 l6692 2B56                                   l7580 2075  
                                 l7564 203C                                   l8380 2DCB  
                                 l8356 252C                                   l6780 2BFA  
                                 l6772 2BE9                                   l6764 2BCB  
                                 l6748 2BB8                                   l8196 2621  
                                 l8188 2605                                   l7900 00E4  
                                 l8452 26E3                        spi_write_read@i 0022  
                                 l6934 14DF                                   l6926 14CB  
                                 l6918 14B8                                   l6870 142F  
                                 l7750 118B                                   l7662 1090  
                                 l7806 2FCC                                   l7590 20A2  
                                 l7582 2085                                   l8382 2D7E  
                                 l8286 1DB0                                   l8550 1F9F  
                                 l8534 1EE4                                   l8526 1E91  
                                 l7486 23DB                                   l7478 23BB  
                                 l6766 2BD7                                   l8462 275A  
                                 l8630 0CA3                                   l8622 0C90  
                                 l6936 14E1                                   l6944 14F0  
                                 l6864 141D                                   l7760 11B4  
                                 l7664 1098                                   l7832 22F7  
                                 l8560 1FF6                                   l8536 1EF4  
                                 l7496 23F6                                   l6776 2BF2  
                                 l6792 2AD1                                   l7912 0107  
                                 l7920 013A                                   l8480 0AD1  
                                 l8456 2721                                   l8624 0C93  
                                 l6970 1574                                   l6962 1567  
                                 l6954 154D                                   l7738 115B  
                                 l7682 10B4                                   l7658 108D  
                                 l7834 22B0                                   l8554 1FA3  
                                 l8546 1F6D                                   l7498 2404  
                                 l7906 00F0                                   l8642 0D18  
                                 l8634 0CCF                                   l7748 1189  
                                 l8580 2EA4                                   l7588 2093  
                                 l7844 2300                                   l7836 22FD  
                                 l8564 1FFA                                   l8556 1FB3  
                                 l6796 2AD8                                   l7940 0189  
                                 l7932 014D                                   l7908 00FA  
                                 l8636 0CE6                                   l7774 11ED  
                                 l7694 10EB                                   l7678 10B1  
                                 l7846 2358                                   l7942 01A5  
                                 l7934 0182                                   l6976 157B  
                                 l7688 10D7                                   l7792 2F97  
                                 l7856 2B67                      spi_write@readData 0073  
                                 l6986 1586                                   l6978 157D  
                                 l7786 2F80                                   l8578 2E68  
                                 l8930 1CDC                                   l7858 2BA3  
                                 l6988 1588                                   l7796 2F9B  
                                 l7948 01B9                                   l7798 2FAB  
                                 l7982 02C9                                   l7974 0261  
                                 l7958 020D                                   l8598 0B3A  
                                 l7996 036D                                   l7988 0331  
                                 STR_1 30E9                                   STR_2 314D  
                                 STR_3 3100                                   STR_4 30C3  
                                 STR_5 312B                                   STR_6 313E  
                                 STR_7 3117                                   STR_8 3167  
                                 STR_9 315C                    startUp@totalVoltage 00E8  
                                 u9005 1568                                   u9105 159F  
                                 u9305 175E                                   u9405 17BD  
                                 u9325 1767                                   u8605 2BD8  
                                 u9415 17D3                                   u9255 169F  
                                 u8615 2BE2                                   u8465 2935  
                                 u9265 16CE                                   u8625 2BEA  
                                 u8705 2AF0                                   u9275 1724  
                                 u8715 2AF7                                   u8485 2B29  
                                 u9285 173B                                   u9295 174A  
                                 u8840 148F                                   u8585 2BCE  
                                 u8850 1490                                   u8835 1484  
                                 u9555 2151                                   u9395 17A2  
                                 u8685 2AE1                                   u9815 2271  
                                 u9905 23DC                                   u8963 1502  
                                 u8955 14E5                                   u9755 223D  
                                 u8885 14AE                                   u9845 228C  
                                 u9765 224D                                   u9775 2257  
                                 u9945 23F7                                   u9885 23BC  
                                 u9975 2412                                   u9895 23D0  
                                 _WPUD 020F                            main@current 026A  
                                 _Beta 3806                           __CFG_WRT$OFF 0000  
               __end_of_spi_write_read 2998                          __CFG_FCMEN$ON 0000  
                                 _main 0AE5                                   fsr0h 0005  
                                 fsr1h 0007                                   indf0 0000  
                                 fsr0l 0004                                   indf1 0001  
                                 fsr1l 0006                                   btemp 007E  
                         spi_read@data 0073                          __CFG_BOREN$ON 0000  
                                 start 0076                          __CFG_IESO$OFF 0000  
                      ___fldiv@new_exp 0064                           _sprintf$2190 0120  
                  cellBalancing@i_1316 00DC                         ??_LTC6804_adcv 0079  
                    ___bmul@multiplier 0075                          __CFG_MCLRE$ON 0000  
                       ??_LTC6804_rdcv 003E                         writeVoltages@k 0144  
                                ??_ISR 0070                      ?_LTC6804_rdcv_reg 002F  
                        __CFG_PLLEN$ON 0000                       spi_write_array@i 0078  
                        ___fltol@sign1 00A5        writeValuesToUart@temperatureArr 014C  
           __size_of_writeValuesToUart 0064                        __end_of___fladd 15D4  
                                ?_main 0070                        __end_of___fldiv 1202  
                      __end_of_adcRead 2CA6                        __end_of___awdiv 2BFF  
                      __end_of___flneg 1C0A                          __CFG_WDTE$OFF 0000  
                      __end_of___awmod 2B0C                     ??_LTC6804_rdcv_reg 0031  
                      __end_of___flmul 1800                        __end_of___flsub 2923  
                      __end_of___fltol 20B2                        __end_of___lldiv 2C52  
                                u10005 28D4                                  u10015 28D9  
                                u10105 204D                                  u10205 2C13  
                                u10135 2076                                  u11015 036B  
                                u10225 2C1F                                  u10305 2A71  
                                u11105 04D8                                  u10235 2C33  
                                u11115 050F                                  u10165 2094  
                                u10245 2C3F                                  u11045 0466  
                                u10415 1121                                  u12015 2E78  
                                u10505 1167                                  u10425 1128  
                                u12025 2E72                                  u11305 259A  
                                u11145 05B1                                  u10275 2A4D  
                                u11315 25B9                                  u11235 076A  
                                u11155 05BF                                  u12115 0D14  
                      ___awdiv@divisor 0020                                  u10445 1131  
                                u12045 0B79                                  u10455 1145  
                                u10295 2A66                                  u11255 078A  
                                u12055 0B9B                                  u11505 1E60  
                      __end_of___llmod 2A84                                  u11265 256A  
                                u12065 0CA1                                  u12075 0CB7  
                                u10485 115E                                  u10725 2FE4  
                                u10645 2FA4                                  u11525 2D0B  
                                u10805 230A                                  u11605 24D5  
                                u12085 0CCD                                  u10575 11A2  
                                u11535 2D16                                  u11455 1DA0  
                                u10815 2B77                                  u11615 24F0  
                                u12095 0CE4                                  u11560 243B  
                                _T2CON 001C                                  u10585 11BD  
                                u10665 2FB8                                  u11545 2D30  
                                u10825 2B71                                  u10595 11D6  
                                u11555 2D4C                                  u10755 22C0  
                                u11635 2517                                  u11715 26A9  
                                u10685 2FC6                                  u10845 2C80  
                                u11645 253C                                  u11725 26C3  
                                u10775 22E4                                  u11655 254A  
                                u11815 2776                                  u12367 0B03  
                                u12377 2C62                                  u11665 2DBD  
                                u10785 22BA                                  u11585 247D  
                                u11905 1E9E                                  u11825 2790  
                                u11745 26E8                                  u12387 283C  
                                u11675 2D88                                  u10795 2310  
                                u11595 248D                                  u11755 2702  
                                u11925 1EBD                                  u10975 02F7  
                                u11695 29DD                                  u11855 0AA8  
                                u11775 2735                                  u11945 1EF2  
                                u10985 033D                                  u11955 1F6B  
                                u11795 26A2                                  u11965 1F84  
                                u11975 1F9D                                  u11895 1E8F  
                                u11985 1FB1                                  i1l132 0071  
                      ___awdiv@counter 0024                                  _TXREG 019A  
            LTC6804_wrcfg@current_byte 0043                        __end_of_avgBuff 2EE1  
              __end_of_spi_write_array 28CB                     writeVoltages@volts 0143  
                      __end_of_dpowers 30C2                                  _scale 0D70  
                      __end_of_isdigit 100F                                  _setup 2943  
                                main@i 0268                        __end_of_set_adc 2D5A  
                  clearScreen@numLines 00E1                        ?_spi_write_read 0076  
                      __end_of_startUp 2000                                  status 0003  
                                wtemp0 007E                        __end_of_sprintf 268E  
                         main@voltages 0220            LTC6804_rdcv@current_ic_1360 0055  
                __size_of_writeCurrent 0018                           __end_of_Beta 3808  
                 __size_of_clearScreen 003B                        __initialization 0078  
                         __end_of_main 0D70                        ??_LTC6804_wrcfg 002F  
                     __end_of_i2cSetup 28A4                     writeTemps@numTemps 00E3  
                       __CFG_LPBOR$OFF 0000                       __end_of_OledFont 0A98  
                               ??_main 01A0                           adcRead@total 002C  
                    ?_calculateCurrent 00C1                         set_adc@md_bits 0078  
                     ?_measureVoltages 00DF                   __size_of__tdiv_to_l_ 00B6  
                 cellBalancing@boolean 00D5                     ??_calculateCurrent 007A  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 380C       writeValuesToUart@temperatureHigh 014F  
                  pec15_calc@remainder 002D                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                     ___llmod@dividend 002A                                 ?_scale 0052  
                               _ADRESH 009C                                 _ADRESL 009B  
                               _ADSTAT 0166                       ___awdiv@dividend 0022  
writeValuesToUart@temperatureArrLength 014D                                 ?_setup 0070  
                     __end_of_adcSetup 2904                           _writeCurrent 2001  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELD 018F                                 i1l6172 003B  
                               i1l6182 0049                                 i1l6166 0027  
                               i1l6174 003C                                 i1l6192 0064  
                               i1l6196 0069                                 _SPBRGH 019C  
                               _SPBRGL 019B                                 u797_25 001A  
                               u798_25 0031                LTC6804_rdaux@BYT_IN_REG 380C  
                               _SSPADD 0212                                 _SSPBUF 0211  
                     __end_of___xxtofl 3000                           startUp@i_400 0145  
                  writeVoltages@length 00E1                         __CFG_PWRTE$OFF 0000  
                         ?_uartDisable 0070                       __end_of_getTemps 2DD9  
                     __end_of__powers_ 3034                           startUp@temps 00E6  
     __end_ofLTC6804_rdaux_reg@REG_LEN 380B                                 ___flge 20B2  
                               ___bmul 2871                           ?_timer0Setup 0070  
                   _writeVoltages$2186 013B                              ??___fladd 00B1  
                               ___wmul 28CB                              ??___fldiv 005A  
                            ??_adcRead 0020                              ??___awdiv 0079  
                         ?_timer2Setup 0070                              ??___flneg 007A  
                       __CFG_STVREN$ON 0000                              ??___awmod 0076  
                            ??___flmul 0040                              ??___flsub 007A  
                            ??___fltol 00A0                              ??___lldiv 0020  
                        main@numFaults 025A                              ??___llmod 002E  
                               _fround 1202                       ___awdiv@quotient 0026  
                      ___awmod@divisor 0072                              ??_avgBuff 00C5  
                      ___awmod@counter 0077                           ?_wakeup_idle 0070  
                     getTemps@numTemps 00AF                              ??_isdigit 0072  
                   __size_of__Umul8_16 0020                       __end_of_spiSetup 28B6  
                            ??_set_adc 0075                       ?_spi_write_array 0075  
                     __end_of_spi_read 2864                   __end_of_LTC6804_adcv 29C8  
       __end_ofLTC6804_rdcv@BYT_IN_REG 3811                   __end_of_LTC6804_rdcv 1E72  
                            ??_startUp 013E                              ??_sprintf 00DB  
                LTC6804_wrcfg@total_ic 0040                       __end_of_writeSOC 2AC7  
                           ___flge@ff1 00C1                             ___flge@ff2 00C5  
                         sumVoltages@i 00CC                           ___xxtofl@arg 0034  
                         ___xxtofl@exp 0033                           ___xxtofl@val 002E  
              __end_of__initialization 00AF                          spi_write@data 0074  
                           ___flneg@f1 006C                  calculateTemp@adcValue 00A7  
                           ___fltol@f1 006B                LTC6804_rdaux@NUM_RX_BYT 380D  
                  ___bmul@multiplicand 0072        __end_ofLTC6804_rdcv@CELL_IN_REG 3810  
                    ltc6804@crc15Table 1800                             _crc15Table 1A00  
                       __pcstackCOMMON 0070                           __pidataBANK2 282C  
                         __pidataBANK5 2832                          __end_of_scale 1000  
                        __end_of_setup 2969                     _LTC6804_initialize 2882  
               __size_of_writeVoltages 0172                         cellBalancing@i 00DA  
                           __end_of_t0 3804                          _writeSOC$2185 00E5  
                        ?_setDischarge 0072                             __div_to_l_ 2361  
                         ?_sumVoltages 00C1                    ?_LTC6804_initialize 0070  
                        adcRead@ansLow 002A                        __div_to_l_@exp1 002A  
                      __div_to_l_@cntr 0029                                ??_scale 0056  
                      __div_to_l_@quot 0025                           sprintf@width 0131  
                              ??_setup 007A                             __pbssBANK1 00EC  
                           __pbssBANK2 015B                             __pbssBANK4 026E  
                           __pbssBANK5 02A0                             __pbssBANK6 0320  
                            ?_i2cSetup 0070         __end_ofLTC6804_rdcv@NUM_RX_BYT 3812  
             LTC6804_rdaux@GPIO_IN_REG 380B                        __CFG_VCAPEN$OFF 0000  
            __end_ofltc6804@crc15Table 1A00                             _pec15_calc 2B0C  
                        __div_to_l_@f1 0072                          __div_to_l_@f2 0076  
                  writeCurrent@current 00E1                   ??_LTC6804_initialize 0046  
                    __end_of__Umul8_16 2943                     spi_write_array@len 0077  
                           __pmaintext 0AE5                cellBalancing@minVoltage 00D6  
                              ?___flge 00C1                                ?___bmul 0072  
               __size_of_cellBalancing 00C1                 LTC6804_rdcv@cell_codes 003D  
                              ?___wmul 0072                             __pintentry 0004  
             LTC6804_rdcv@data_counter 0058                             _getCurrent 2A03  
                              _CCP2CON 029A      writeValuesToUart@voltageArrLength 0146  
                              ?_fround 0052                              ?_adcSetup 0070  
                     LTC6804_wrcfg@cmd 0033                         ??_setDischarge 0075  
             LTC6804_rdaux_reg@REG_LEN 380A                     __size_of_uartSetup 000D  
               __size_of_calculateTemp 0081                              ?___xxtofl 002E  
                cellBalancing@voltages 00DE                 measureVoltages@ltcData 0120  
                   __size_of_spi_write 000B                       ??_spi_write_read 0020  
                              _SSP1BUF 0211                              ?_getTemps 00AF  
                              _SSPCON1 0215                                _SSPSTAT 0214  
            __size_of_LTC6804_rdcv_reg 0055                             ??_i2cSetup 0072  
                        _writeVoltages 268E                   spi_write_read@i_1442 0023  
                 writeVoltages@maxCell 013F                   writeVoltages@minCell 0141  
                    __end_of__npowers_ 3068                 LTC6804_wrcfg@cmd_index 0045  
                           _scale$2189 0066                              ?_spiSetup 0070  
                 __size_of_uartDisable 0003                        __size_of___flge 009A  
                      __size_of___bmul 0011                              ?_spi_read 0070  
                              ___fladd 13D8                   spi_write_read@rx_len 0078  
                              ___fldiv 1073                                _adcRead 2C52  
                              ___awdiv 2BAD                                ___flneg 1C00  
                              ___awmod 2AC7                                ___flmul 15D4  
                 spi_write_read@tx_len 0076                                ___flsub 2904  
                              ___fltol 2019                                ___lldiv 2BFF  
                      __size_of___wmul 001B                                ___llmod 2A41  
            writeVoltages@totalVoltage 00E3                   __size_of_timer0Setup 0005  
                           ??_adcSetup 0072                   __size_of_timer2Setup 000B  
                      __size_of_fround 01D6                                _avgBuff 2E5A  
                            ?_writeSOC 00E1                                __ptext1 100F  
                              __ptext2 268E                                __ptext3 0A9A  
                              __ptext4 2A84                                __ptext5 2001  
                              __ptext6 29C8                                __ptext7 37F8  
                              __ptext8 00B3                                __ptext9 0D70  
                __size_of_LTC6804_adcv 0030            writeValuesToUart@voltageArr 00EB  
                         __size_of_ISR 0072                            ?__div_to_l_ 0072  
                __size_of_LTC6804_rdcv 018B                                _dpowers 309A  
                              _isdigit 1001                             ??___xxtofl 0074  
                     ___awmod@dividend 0074                   __size_of_wakeup_idle 0009  
               LTC6804_rdcv@current_ic 0053                                _set_adc 2CFB  
           __end_ofmain@total_capacity 3806                          _cellBalancing 22A0  
                           ??_getTemps 00B1                                _startUp 1E72  
                              _sprintf 00B3                                clrloop0 2821  
                              main@soc 0260                             avgBuff@inc 00CC  
                 end_of_initialization 00AF                         ?_writeVoltages 00E1  
      __end_ofLTC6804_rdcv_reg@REG_LEN 380F                                init_ram 2826  
                              initloop 2827              __size_of_calculateCurrent 0089  
                        ??_clearScreen 00E3                          pec15_calc@len 0029  
                          ?_pec15_calc 0076                      __end_of_uartSetup 2871  
                        _calculateTemp 2DD9               calculateCurrent@adcValue 00C1  
                      ___lldiv@divisor 0072                        ___lldiv@counter 0025  
                           _uartEnable 37F8                   calculateCurrent@curr 00C5  
                           ??_spiSetup 0072                              _RCSTAbits 019D  
                    __end_of_spi_write 284D                           _LTC6804_adcv 2998  
                              psplit$0 3C0073                             ??_spi_read 0072  
                         _LTC6804_rdcv 1CE7                         __tdiv_to_l_@f1 0072  
                       __tdiv_to_l_@f2 0076                            ?_getCurrent 00CD  
    __end_ofLTC6804_rdstat_reg@REG_LEN 30C3                  __end_of_LTC6804_wrcfg 21EA  
                        ??__tdiv_to_l_ 0020                             _timerSetup 281A  
                           ??_writeSOC 007A                    LTC6804_rdcv_reg@cmd 0037  
                  LTC6804_rdcv_reg@reg 003B                            ___fladd@grs 00C0  
                        ___xxtofl@sign 0032                              _TRISAbits 008C  
                            _TRISBbits 008D                         ?_cellBalancing 00D1  
                            _TRISCbits 008E                              _TRISDbits 008F  
                 __size_of_sumVoltages 0052                            ___fldiv@grs 0066  
                          ___fldiv@rem 0060               __size_of_measureVoltages 0130  
                     main@currentIndex 025E                            ___flmul@grs 0047  
                 __end_of_setDischarge 1CE7                         ?_calculateTemp 00A7  
                            _TXSTAbits 019E                    __size_of__div_to_l_ 00C5  
            measureVoltages@errorCount 0139                   LTC6804_wrcfg@CMD_LEN 003F  
                  __end_of_clearScreen 2A03                         __end_of___flge 214C  
                       __end_of___bmul 2882                             _writeTemps 0A9A  
                       __end_of___wmul 28E6                         __end_of_fround 13D8  
                  __size_of_pec15_calc 004F                    start_initialization 0078  
                          __end_of_ISR 0076                    __end_of__tdiv_to_l_ 22A0  
                 measureVoltages@F7579 0320                        ??_writeVoltages 00E7  
                     _LTC6804_rdcv_reg 2CA6                      pnum$text8_split_1 0073  
                  __size_of_getCurrent 003E               __size_of_spi_write_array 0015  
                      ___llmod@divisor 0026                      __size_of_i2cSetup 0011  
                      ___llmod@counter 002F                    getTemps@highestTemp 00B5  
                 LTC6804_wrcfg@cfg_pec 0041                            _APFCON1bits 011D  
                       adcRead@ansHigh 0028                            ?_uartEnable 0070  
                             ??___flge 00C9                               ??___bmul 0073  
                             ??___wmul 0076                              __Umul8_16 2923  
                          __pdataBANK2 016A                            __pdataBANK5 02D2  
                             ??_fround 0056                   getTemps@temperatures 00B7  
                      LTC6804_adcv@cmd 002F                            ?_timerSetup 0070  
                        sprintf@tmpval 0125                              ___fladd@a 00AD  
                            ___fladd@b 00A9                             fround@prec 00A8  
                      ??_cellBalancing 00D3                      __size_of_adcSetup 001E  
                            ___fldiv@a 0052                              ___fldiv@b 0056  
                            ___flmul@a 003C                              ___flmul@b 0038  
                          __pbssCOMMON 007A                              ___flsub@a 00C1  
                            ___flsub@b 00C5                    sumVoltages@voltages 00C7  
                            ___latbits 0003          writeValuesToUart@totalVoltage 0148  
                        __pcstackBANK0 0020                          __pcstackBANK1 00A0  
                        __pcstackBANK2 0120                          __pcstackBANK3 01A0  
                        __pcstackBANK4 0220                          __pcstackBANK7 03A0  
                      startUp@voltages 00E7                LTC6804_rdcv@CELL_IN_REG 380F  
                    __size_of___xxtofl 0096                           _isdigit$1788 0072  
                            adcRead@ch 0027                        ??_calculateTemp 00A9  
                    __size_of_getTemps 007F                        LTC6804_rdcv@reg 0052  
                          sprintf@flag 012F                            sprintf@fval 0133  
                     _calculateCurrent 2EE1                            sprintf@prec 0137  
                          _clearScreen 29C8                    spi_write_array@data 0075  
                 calculateTemp@voltage 00AB                      ??_measureVoltages 00E2  
                            _main$2183 01A6            __size_of_LTC6804_initialize 0011  
                LTC6804_rdcv@cell_data 0043                               ?___fladd 00A9  
                             ?___fldiv 0052                               ?_adcRead 0072  
                             ?___awdiv 0020                               ?___flneg 006C  
                             ?___awmod 0072                               ?___flmul 0038  
                             ?___flsub 00C1                               ?___fltol 006B  
                             ?___lldiv 0072                               ?___llmod 0026  
                            __npowers_ 3034                             ?__Umul8_16 0072  
                 __end_of_temperatures 309A      __end_ofLTC6804_rdcfg@BYTES_IN_REG 3809  
                      main@highestTemp 025C      __end_ofLTC6804_wrcfg@BYTES_IN_REG 380A  
               getCurrent@currentValue 00D1                            ?_writeTemps 00E1  
                    __size_of_spiSetup 0012                              _configReg 016A  
                    setDischarge@index 0072                      __size_of_spi_read 000C  
                             ?_avgBuff 00C1                            __tdiv_to_l_ 21EA  
                            __pswtext1 2800                           ??__div_to_l_ 0020  
                           set_adc@CHG 0074                             set_adc@DCP 0072  
                             ?_isdigit 0070                      __size_of_writeSOC 0043  
                             ?_set_adc 0072                    __size_of_uartEnable 0003  
                             ?_startUp 00E6                  __size_of_setDischarge 00DD  
                             ?_sprintf 00D1                     __end_of_crc15Table 1C00  
                        ?_writeCurrent 00E1                         __size_of_scale 0290  
                       __size_of_setup 0026                  LTC6804_rdcv@pec_error 004B  
        LTC6804_rdcv@current_cell_1361 0056                         ___wmul@product 0076  
                  __size_of_timerSetup 0006                               _LATAbits 010C  
                             _LATBbits 010D                               _LATDbits 010F  
             LTC6804_rdcv@current_cell 0054                            writeSOC@soc 00E1  
                         ??_pec15_calc 0020                              clear_ram0 2820  
                  setDischarge@boolean 0074                               _PIE1bits 0091  
                             _PIE2bits 0092                     main@total_capacity 3804  
                        ??_uartDisable 0070                measureVoltages@pecError 0138  
                             _PIR1bits 0011                     __end_of__div_to_l_ 2426  
                             _PIR2bits 0012                     startUp@highestTemp 0142  
                            _uartSetup 2864                      ??_spi_write_array 0076  
                        ??_timer0Setup 0072                          ??_timer2Setup 0072  
                             _SSP1CON1 0215            measureVoltages@totalVoltage 00DF  
                         ??_getCurrent 007A                              _spi_write 2842  
                          writeTemps@k 00E7                          ??_wakeup_idle 0072  
                           _ADCON0bits 009D                      ___wmul@multiplier 0072  
                         _setDischarge 1C0A                        main@currentBuff 03A0  
                            main@temps 0250                     __end_of_pec15_calc 2B5B  
                         clearScreen@j 00E6                measureVoltages@voltages 013B  
                       ??_writeCurrent 007A              LTC6804_rdstat_reg@REG_LEN 30C2  
                         avgBuff@total 00C8                               _i2cSetup 2893  
           measureVoltages@numVoltages 00E0                    __size_of_writeTemps 004B  
             cellBalancing@numVoltages 00D1                     __end_of_getCurrent 2A41  
                     measureVoltages@i 013C               LTC6804_rdcv@received_pec 004E  
                             _OledFont 0798               LTC6804_rdcv_reg@total_ic 002F  
              __size_of_spi_write_read 002F                             startUp@soc 00EA  
                       startUp@current 00E9                    LTC6804_wrcfg@config 0079  
                           ?_uartSetup 0070                            ??__Umul8_16 0074  
             __end_of_LTC6804_rdcv_reg 2CFB                  spi_write_read@tx_Data 0024  
                     __size_of___fladd 01FC                       __size_of___fldiv 018F  
                     __size_of_adcRead 0054                       __size_of___awdiv 0052  
                     __size_of___flneg 000A                    __end_of_uartDisable 37F8  
                     __size_of___awmod 0045                  spi_write_read@rx_data 0077  
                     __size_of___flmul 022C                       __size_of___flsub 001F  
                     __size_of___fltol 0099                       __size_of___lldiv 0053  
                     __size_of___llmod 0043                               _adcSetup 28E6  
                           ?_spi_write 0070        __end_ofLTC6804_rdaux@BYT_IN_REG 380D  
                          _fround$2187 00A4                            _fround$2188 00A0  
              LTC6804_rdcv_reg@REG_LEN 380E                       __size_of_avgBuff 0087  
                  __end_of_timer0Setup 3800                    __end_of_timer2Setup 2858  
                          _currentBool 015B                          ??_sumVoltages 00C5  
                         _tempChannels 02D2                             sprintf@exp 012D  
                           sprintf@val 0129                               ___xxtofl 2F6A  
                     __size_of_isdigit 000E                   LTC6804_rdcv@data_pec 0050  
                 LTC6804_rdcv@cell_reg 0057                    __end_of_wakeup_idle 2842  
                     __size_of_set_adc 005F                               __ptext10 1001  
                             __ptext11 1202                               __ptext20 1E72  
                             __ptext12 2AC7                               __ptext21 2426  
                             __ptext13 2BAD                               __ptext30 2858  
                             __ptext22 2B5B                               __ptext14 21EA  
                             __ptext31 2998                               __ptext23 22A0  
                             __ptext15 2361                               __ptext40 2943  
                             __ptext32 2D5A                               __ptext24 1C0A  
                             __ptext16 2A41                               __ptext41 2864  
                             __ptext33 2DD9                               __ptext25 20B2  
                             __ptext17 2BFF                               __ptext50 214C  
                             __ptext42 281A                               __ptext34 2019  
                             __ptext26 1CE7                               __ptext18 2904  
                             __ptext51 2839                               __ptext43 284D  
                             __ptext35 2A03                               __ptext27 28CB  
                             __ptext19 1C00                               __ptext52 28B6  
                             __ptext44 37FB                               __ptext36 2EE1  
                             __ptext28 2CA6                               __ptext61 37F5  
                             __ptext53 2842                               __ptext45 28A4  
                             __ptext37 15D4                               __ptext29 2969  
                             __ptext54 2B0C                               __ptext46 2893  
                             __ptext38 2923                               __ptext55 2871  
                             __ptext47 28E6                               __ptext39 2C52  
                             __ptext56 2E5A                               __ptext48 2882  
                             __ptext57 2F6A                               __ptext49 2CFB  
                             __ptext58 1073                               __ptext59 13D8  
                             _getTemps 2D5A                           _SSP1CON1bits 0215  
                         _SSP1CON3bits 0217                               __powers_ 3000  
                  LTC6804_adcv@cmd_pec 0033                       __size_of_startUp 018E  
                     __size_of_sprintf 25DB                              set_adc@CH 0073  
                            set_adc@MD 0077                 __size_of_LTC6804_wrcfg 009E  
                        __size_of_main 028B                              pnum$text8 003C  
                         ??_uartEnable 0072                            pec15_calc@i 002C  
                             _uartBool 026E                               _spiSetup 28A4  
              LTC6804_rdcv_reg@cmd_pec 0035                               _spi_read 2858  
                             int$flags 007E                LTC6804_wrcfg@current_ic 0044  
                 writeValuesToUart@soc 0155                  _calculateCurrent$2184 00C9  
                         _SSP1STATbits 0214                           ??_timerSetup 0072  
                 LTC6804_rdcv@total_ic 003C                               _writeSOC 2A84  
           writeValuesToUart@uartLines 0159                            avgBuff@buff 00C7  
             __end_of_calculateCurrent 2F6A                            avgBuff@size 00C1  
      __end_ofLTC6804_rdaux@NUM_RX_BYT 380E                      _writeValuesToUart 100F  
                           _INTCONbits 000B                         __pstringtext10 3806  
                       __pstringtext11 3808                         __pstringtext20 3811  
                       __pstringtext12 3809                         __pstringtext21 30C2  
                       __pstringtext13 380A                         __pstringtext30 0000  
                       __pstringtext22 30E9                         __pstringtext14 380B  
                       __pstringtext23 3100                         __pstringtext15 380C  
                       __pstringtext24 3117                         __pstringtext16 380D  
                       __pstringtext25 312B                         __pstringtext17 380E  
                       __pstringtext26 313E                         __pstringtext18 380F  
                       __pstringtext27 314D                         __pstringtext19 3810  
                       __pstringtext28 315C                         __pstringtext29 3167  
                   ?_writeValuesToUart 0146                               isdigit@c 0073  
              LTC6804_rdcv@parsed_cell 004C                       spi_read@readData 0074  
                             scale@scl 006A                     __end_of_uartEnable 37FB  
                      _measureVoltages 2426                         pec15_calc@addr 002A  
                       pec15_calc@data 0076                    __end_of_sumVoltages 2BAD  
                __end_of_writeVoltages 2800                               intlevel1 0000  
                         _temperatures 3068                              sprintf@ap 0124  
                     __tdiv_to_l_@exp1 0029                       __tdiv_to_l_@cntr 0028  
                            sprintf@sp 0139                       __tdiv_to_l_@quot 0024  
               sumVoltages@numVoltages 00C1                    ??_writeValuesToUart 007A  
                     ___lldiv@dividend 0076                 LTC6804_rdcv@BYT_IN_REG 3810  
                    __CFG_CLKOUTEN$OFF 0000                     __end_of_timerSetup 2820  
                         ?_clearScreen 00E1                            _uartDisable 37F5  
                     main@totalVoltage 0264                            ??_uartSetup 0072  
                          _timer0Setup 37FB                   __end_of_writeCurrent 2019  
                          _timer2Setup 284D                  writeTemps@highestTemp 00E1  
                         ??_writeTemps 00E5                            ??_spi_write 0072  
                        _LTC6804_wrcfg 214C                               startUp@i 0143  
                         ?__tdiv_to_l_ 0072                          __pstringtext1 0798  
                        __pstringtext2 1800                          __pstringtext3 1A00  
                        __pstringtext4 3000                          __pstringtext5 3034  
                        __pstringtext6 3068                          __pstringtext7 309A  
                        __pstringtext8 3800                          __pstringtext9 3804  
            __end_of_writeValuesToUart 1073                            _wakeup_idle 2839  
               __Umul8_16@multiplicand 0072                             _OPTION_REG 0095  
                             sprintf@c 013A                               sprintf@f 00D1  
                     ___lldiv@quotient 0021                  __end_of_cellBalancing 2361  
                          _SSPCON2bits 0216              LTC6804_rdcfg@BYTES_IN_REG 3808  
            LTC6804_wrcfg@BYTES_IN_REG 3809                          ___fladd@signs 00BD  
                          getTemps@inc 00B8                        _spi_write_array 28B6  
                 LTC6804_rdcv_reg@data 0030                           ___fladd@aexp 00BE  
                         ___fladd@bexp 00BF                  __end_of_calculateTemp 2E5A  
                   __end_of_writeTemps 0AE5                   __Umul8_16@multiplier 0024  
           __end_of_LTC6804_initialize 2893                         _spi_write_read 2969  
               LTC6804_rdcv@NUM_RX_BYT 3811                      __Umul8_16@product 0020  
