

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Apr 11 21:02:20 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	cinit,global,class=CODE,merge=1,delta=2
    34                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    35                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    36                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    37                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    38                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    39                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    40                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    44                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    45                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    46                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    47                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    48                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    49                           	psect	text1,local,class=CODE,merge=1,delta=2
    50                           	psect	text2,local,class=CODE,merge=1,delta=2
    51                           	psect	text3,local,class=CODE,merge=1,delta=2
    52                           	psect	text4,local,class=CODE,merge=1,delta=2
    53                           	psect	text5,local,class=CODE,merge=1,delta=2
    54                           	psect	text6,local,class=CODE,merge=1,delta=2
    55                           	psect	text7,local,class=CODE,merge=1,delta=2
    56                           	psect	text8,local,class=CODE,merge=1,delta=2
    57                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text10,local,class=CODE,merge=1,delta=2
    59                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text19,local,class=CODE,merge=1,delta=2
    68                           	psect	text20,local,class=CODE,merge=1,delta=2
    69                           	psect	text21,local,class=CODE,merge=1,delta=2
    70                           	psect	text22,local,class=CODE,merge=1,delta=2
    71                           	psect	text23,local,class=CODE,merge=1,delta=2
    72                           	psect	text24,local,class=CODE,merge=1,delta=2
    73                           	psect	text25,local,class=CODE,merge=1,delta=2
    74                           	psect	text26,local,class=CODE,merge=1,delta=2
    75                           	psect	text27,local,class=CODE,merge=1,delta=2
    76                           	psect	text28,local,class=CODE,merge=1,delta=2
    77                           	psect	text29,local,class=CODE,merge=1,delta=2
    78                           	psect	text30,local,class=CODE,merge=1,delta=2
    79                           	psect	text31,local,class=CODE,merge=1,delta=2
    80                           	psect	text32,local,class=CODE,merge=1,delta=2
    81                           	psect	text33,local,class=CODE,merge=1,delta=2
    82                           	psect	text34,local,class=CODE,merge=1,delta=2
    83                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text36,local,class=CODE,merge=1,delta=2
    85                           	psect	text37,local,class=CODE,merge=1,delta=2
    86                           	psect	text38,local,class=CODE,merge=1,delta=2
    87                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text40,local,class=CODE,merge=1,delta=2
    89                           	psect	text41,local,class=CODE,merge=1,delta=2
    90                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text44,local,class=CODE,merge=1,delta=2
    93                           	psect	text45,local,class=CODE,merge=1,delta=2
    94                           	psect	text46,local,class=CODE,merge=1,delta=2
    95                           	psect	swtext1,local,class=CONST,delta=2
    96                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text48,local,class=CODE,merge=1,delta=2
    98                           	psect	text49,local,class=CODE,merge=1,delta=2
    99                           	psect	text50,local,class=CODE,merge=1,delta=2
   100                           	psect	text51,local,class=CODE,merge=1,delta=2
   101                           	psect	text52,local,class=CODE,merge=1,delta=2
   102                           	psect	text53,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text54,local,class=CODE,merge=1,delta=2
   104                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   105                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	intentry,global,class=CODE,delta=2
   108                           	psect	text59,local,class=CODE,merge=1,delta=2
   109                           	dabs	1,0x7E,2
   110  0000                     
   111                           ; Version 1.45
   112                           ; Generated 16/11/2017 GMT
   113                           ; 
   114                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   115                           ; All rights reserved.
   116                           ; 
   117                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   118                           ; 
   119                           ; Redistribution and use in source and binary forms, with or without modification, are
   120                           ; permitted provided that the following conditions are met:
   121                           ; 
   122                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   123                           ;        conditions and the following disclaimer.
   124                           ; 
   125                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   126                           ;        of conditions and the following disclaimer in the documentation and/or other
   127                           ;        materials provided with the distribution.
   128                           ; 
   129                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   130                           ;        software without specific prior written permission.
   131                           ; 
   132                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   133                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   134                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   135                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   136                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   137                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   138                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   139                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   140                           ; 
   141                           ; 
   142                           ; Code-generator required, PIC16F1789 Definitions
   143                           ; 
   144                           ; SFR Addresses
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0110                     	;# 
   201  0111                     	;# 
   202  0112                     	;# 
   203  0113                     	;# 
   204  0114                     	;# 
   205  0115                     	;# 
   206  0116                     	;# 
   207  0117                     	;# 
   208  0118                     	;# 
   209  0119                     	;# 
   210  011A                     	;# 
   211  011B                     	;# 
   212  011C                     	;# 
   213  011D                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  011E                     	;# 
   217  011F                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  018E                     	;# 
   221  018F                     	;# 
   222  0190                     	;# 
   223  0191                     	;# 
   224  0191                     	;# 
   225  0192                     	;# 
   226  0193                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0194                     	;# 
   230  0195                     	;# 
   231  0196                     	;# 
   232  0197                     	;# 
   233  0199                     	;# 
   234  0199                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019A                     	;# 
   238  019A                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019C                     	;# 
   245  019C                     	;# 
   246  019C                     	;# 
   247  019D                     	;# 
   248  019D                     	;# 
   249  019D                     	;# 
   250  019E                     	;# 
   251  019E                     	;# 
   252  019E                     	;# 
   253  019F                     	;# 
   254  019F                     	;# 
   255  019F                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  020C                     	;# 
   259  020D                     	;# 
   260  020E                     	;# 
   261  020F                     	;# 
   262  0210                     	;# 
   263  0211                     	;# 
   264  0211                     	;# 
   265  0212                     	;# 
   266  0212                     	;# 
   267  0213                     	;# 
   268  0213                     	;# 
   269  0214                     	;# 
   270  0214                     	;# 
   271  0215                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0216                     	;# 
   276  0216                     	;# 
   277  0217                     	;# 
   278  0217                     	;# 
   279  028C                     	;# 
   280  028D                     	;# 
   281  028E                     	;# 
   282  028F                     	;# 
   283  0290                     	;# 
   284  0291                     	;# 
   285  0291                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0298                     	;# 
   289  0298                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  030C                     	;# 
   293  030D                     	;# 
   294  030E                     	;# 
   295  030F                     	;# 
   296  0310                     	;# 
   297  0311                     	;# 
   298  0311                     	;# 
   299  0312                     	;# 
   300  0313                     	;# 
   301  038C                     	;# 
   302  038D                     	;# 
   303  038E                     	;# 
   304  038F                     	;# 
   305  0390                     	;# 
   306  0391                     	;# 
   307  0392                     	;# 
   308  0393                     	;# 
   309  0394                     	;# 
   310  0395                     	;# 
   311  0396                     	;# 
   312  0397                     	;# 
   313  0398                     	;# 
   314  0399                     	;# 
   315  039D                     	;# 
   316  039E                     	;# 
   317  039F                     	;# 
   318  0511                     	;# 
   319  0513                     	;# 
   320  0515                     	;# 
   321  051A                     	;# 
   322  0591                     	;# 
   323  0592                     	;# 
   324  0592                     	;# 
   325  0593                     	;# 
   326  0594                     	;# 
   327  0594                     	;# 
   328  0595                     	;# 
   329  0596                     	;# 
   330  0596                     	;# 
   331  0E91                     	;# 
   332  0E92                     	;# 
   333  0E93                     	;# 
   334  0E94                     	;# 
   335  0E95                     	;# 
   336  0E96                     	;# 
   337  0E97                     	;# 
   338  0E98                     	;# 
   339  0E99                     	;# 
   340  0E9A                     	;# 
   341  0E9B                     	;# 
   342  0E9C                     	;# 
   343  0E9D                     	;# 
   344  0E9E                     	;# 
   345  0E9F                     	;# 
   346  0EA0                     	;# 
   347  0EA1                     	;# 
   348  0EA1                     	;# 
   349  0EA2                     	;# 
   350  0EA3                     	;# 
   351  0EA3                     	;# 
   352  0EA4                     	;# 
   353  0EA5                     	;# 
   354  0EA5                     	;# 
   355  0EA6                     	;# 
   356  0EA7                     	;# 
   357  0EA7                     	;# 
   358  0EA8                     	;# 
   359  0EA9                     	;# 
   360  0EAA                     	;# 
   361  0EAB                     	;# 
   362  0EAC                     	;# 
   363  0EAD                     	;# 
   364  0EAE                     	;# 
   365  0EAF                     	;# 
   366  0EB1                     	;# 
   367  0EB2                     	;# 
   368  0EB3                     	;# 
   369  0EB4                     	;# 
   370  0EB5                     	;# 
   371  0EB6                     	;# 
   372  0EB7                     	;# 
   373  0EB8                     	;# 
   374  0EB9                     	;# 
   375  0EBA                     	;# 
   376  0EBB                     	;# 
   377  0EBC                     	;# 
   378  0EBD                     	;# 
   379  0EBE                     	;# 
   380  0EBF                     	;# 
   381  0EC0                     	;# 
   382  0EC1                     	;# 
   383  0EC1                     	;# 
   384  0EC2                     	;# 
   385  0EC3                     	;# 
   386  0EC3                     	;# 
   387  0EC4                     	;# 
   388  0EC5                     	;# 
   389  0EC5                     	;# 
   390  0EC6                     	;# 
   391  0EC7                     	;# 
   392  0EC7                     	;# 
   393  0EC8                     	;# 
   394  0EC9                     	;# 
   395  0ECA                     	;# 
   396  0ECB                     	;# 
   397  0ECC                     	;# 
   398  0ECD                     	;# 
   399  0ECE                     	;# 
   400  0ECF                     	;# 
   401  0ED1                     	;# 
   402  0ED2                     	;# 
   403  0ED3                     	;# 
   404  0ED4                     	;# 
   405  0ED5                     	;# 
   406  0ED6                     	;# 
   407  0ED7                     	;# 
   408  0ED8                     	;# 
   409  0ED9                     	;# 
   410  0EDA                     	;# 
   411  0EDB                     	;# 
   412  0EDC                     	;# 
   413  0EDD                     	;# 
   414  0EDE                     	;# 
   415  0EDF                     	;# 
   416  0EE0                     	;# 
   417  0EE1                     	;# 
   418  0EE1                     	;# 
   419  0EE2                     	;# 
   420  0EE3                     	;# 
   421  0EE3                     	;# 
   422  0EE4                     	;# 
   423  0EE5                     	;# 
   424  0EE5                     	;# 
   425  0EE6                     	;# 
   426  0EE7                     	;# 
   427  0EE7                     	;# 
   428  0EE8                     	;# 
   429  0EE9                     	;# 
   430  0EEA                     	;# 
   431  0EEB                     	;# 
   432  0EEC                     	;# 
   433  0EED                     	;# 
   434  0EEE                     	;# 
   435  0EEF                     	;# 
   436  0F11                     	;# 
   437  0F12                     	;# 
   438  0F13                     	;# 
   439  0F14                     	;# 
   440  0F15                     	;# 
   441  0F16                     	;# 
   442  0F17                     	;# 
   443  0F18                     	;# 
   444  0F19                     	;# 
   445  0F1A                     	;# 
   446  0F1B                     	;# 
   447  0F1C                     	;# 
   448  0F1D                     	;# 
   449  0F1E                     	;# 
   450  0F1F                     	;# 
   451  0F20                     	;# 
   452  0F21                     	;# 
   453  0F21                     	;# 
   454  0F22                     	;# 
   455  0F23                     	;# 
   456  0F23                     	;# 
   457  0F24                     	;# 
   458  0F25                     	;# 
   459  0F25                     	;# 
   460  0F26                     	;# 
   461  0F27                     	;# 
   462  0F27                     	;# 
   463  0F28                     	;# 
   464  0F29                     	;# 
   465  0F2A                     	;# 
   466  0F2B                     	;# 
   467  0F2C                     	;# 
   468  0F2D                     	;# 
   469  0F2E                     	;# 
   470  0F2F                     	;# 
   471  0FE4                     	;# 
   472  0FE5                     	;# 
   473  0FE6                     	;# 
   474  0FE7                     	;# 
   475  0FE8                     	;# 
   476  0FE9                     	;# 
   477  0FEA                     	;# 
   478  0FEB                     	;# 
   479  0FED                     	;# 
   480  0FEE                     	;# 
   481  0FEF                     	;# 
   482  0000                     	;# 
   483  0001                     	;# 
   484  0002                     	;# 
   485  0003                     	;# 
   486  0004                     	;# 
   487  0005                     	;# 
   488  0006                     	;# 
   489  0007                     	;# 
   490  0008                     	;# 
   491  0009                     	;# 
   492  000A                     	;# 
   493  000B                     	;# 
   494  000C                     	;# 
   495  000D                     	;# 
   496  000E                     	;# 
   497  000F                     	;# 
   498  0010                     	;# 
   499  0011                     	;# 
   500  0012                     	;# 
   501  0013                     	;# 
   502  0014                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  008C                     	;# 
   513  008D                     	;# 
   514  008E                     	;# 
   515  008F                     	;# 
   516  0090                     	;# 
   517  0091                     	;# 
   518  0092                     	;# 
   519  0093                     	;# 
   520  0094                     	;# 
   521  0095                     	;# 
   522  0096                     	;# 
   523  0097                     	;# 
   524  0098                     	;# 
   525  0099                     	;# 
   526  009A                     	;# 
   527  009B                     	;# 
   528  009B                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  0110                     	;# 
   538  0111                     	;# 
   539  0112                     	;# 
   540  0113                     	;# 
   541  0114                     	;# 
   542  0115                     	;# 
   543  0116                     	;# 
   544  0117                     	;# 
   545  0118                     	;# 
   546  0119                     	;# 
   547  011A                     	;# 
   548  011B                     	;# 
   549  011C                     	;# 
   550  011D                     	;# 
   551  011D                     	;# 
   552  011D                     	;# 
   553  011E                     	;# 
   554  011F                     	;# 
   555  018C                     	;# 
   556  018D                     	;# 
   557  018E                     	;# 
   558  018F                     	;# 
   559  0190                     	;# 
   560  0191                     	;# 
   561  0191                     	;# 
   562  0192                     	;# 
   563  0193                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0194                     	;# 
   567  0195                     	;# 
   568  0196                     	;# 
   569  0197                     	;# 
   570  0199                     	;# 
   571  0199                     	;# 
   572  0199                     	;# 
   573  019A                     	;# 
   574  019A                     	;# 
   575  019A                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019C                     	;# 
   582  019C                     	;# 
   583  019C                     	;# 
   584  019D                     	;# 
   585  019D                     	;# 
   586  019D                     	;# 
   587  019E                     	;# 
   588  019E                     	;# 
   589  019E                     	;# 
   590  019F                     	;# 
   591  019F                     	;# 
   592  019F                     	;# 
   593  019F                     	;# 
   594  019F                     	;# 
   595  020C                     	;# 
   596  020D                     	;# 
   597  020E                     	;# 
   598  020F                     	;# 
   599  0210                     	;# 
   600  0211                     	;# 
   601  0211                     	;# 
   602  0212                     	;# 
   603  0212                     	;# 
   604  0213                     	;# 
   605  0213                     	;# 
   606  0214                     	;# 
   607  0214                     	;# 
   608  0215                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0216                     	;# 
   613  0216                     	;# 
   614  0217                     	;# 
   615  0217                     	;# 
   616  028C                     	;# 
   617  028D                     	;# 
   618  028E                     	;# 
   619  028F                     	;# 
   620  0290                     	;# 
   621  0291                     	;# 
   622  0291                     	;# 
   623  0292                     	;# 
   624  0293                     	;# 
   625  0298                     	;# 
   626  0298                     	;# 
   627  0299                     	;# 
   628  029A                     	;# 
   629  030C                     	;# 
   630  030D                     	;# 
   631  030E                     	;# 
   632  030F                     	;# 
   633  0310                     	;# 
   634  0311                     	;# 
   635  0311                     	;# 
   636  0312                     	;# 
   637  0313                     	;# 
   638  038C                     	;# 
   639  038D                     	;# 
   640  038E                     	;# 
   641  038F                     	;# 
   642  0390                     	;# 
   643  0391                     	;# 
   644  0392                     	;# 
   645  0393                     	;# 
   646  0394                     	;# 
   647  0395                     	;# 
   648  0396                     	;# 
   649  0397                     	;# 
   650  0398                     	;# 
   651  0399                     	;# 
   652  039D                     	;# 
   653  039E                     	;# 
   654  039F                     	;# 
   655  0511                     	;# 
   656  0513                     	;# 
   657  0515                     	;# 
   658  051A                     	;# 
   659  0591                     	;# 
   660  0592                     	;# 
   661  0592                     	;# 
   662  0593                     	;# 
   663  0594                     	;# 
   664  0594                     	;# 
   665  0595                     	;# 
   666  0596                     	;# 
   667  0596                     	;# 
   668  0E91                     	;# 
   669  0E92                     	;# 
   670  0E93                     	;# 
   671  0E94                     	;# 
   672  0E95                     	;# 
   673  0E96                     	;# 
   674  0E97                     	;# 
   675  0E98                     	;# 
   676  0E99                     	;# 
   677  0E9A                     	;# 
   678  0E9B                     	;# 
   679  0E9C                     	;# 
   680  0E9D                     	;# 
   681  0E9E                     	;# 
   682  0E9F                     	;# 
   683  0EA0                     	;# 
   684  0EA1                     	;# 
   685  0EA1                     	;# 
   686  0EA2                     	;# 
   687  0EA3                     	;# 
   688  0EA3                     	;# 
   689  0EA4                     	;# 
   690  0EA5                     	;# 
   691  0EA5                     	;# 
   692  0EA6                     	;# 
   693  0EA7                     	;# 
   694  0EA7                     	;# 
   695  0EA8                     	;# 
   696  0EA9                     	;# 
   697  0EAA                     	;# 
   698  0EAB                     	;# 
   699  0EAC                     	;# 
   700  0EAD                     	;# 
   701  0EAE                     	;# 
   702  0EAF                     	;# 
   703  0EB1                     	;# 
   704  0EB2                     	;# 
   705  0EB3                     	;# 
   706  0EB4                     	;# 
   707  0EB5                     	;# 
   708  0EB6                     	;# 
   709  0EB7                     	;# 
   710  0EB8                     	;# 
   711  0EB9                     	;# 
   712  0EBA                     	;# 
   713  0EBB                     	;# 
   714  0EBC                     	;# 
   715  0EBD                     	;# 
   716  0EBE                     	;# 
   717  0EBF                     	;# 
   718  0EC0                     	;# 
   719  0EC1                     	;# 
   720  0EC1                     	;# 
   721  0EC2                     	;# 
   722  0EC3                     	;# 
   723  0EC3                     	;# 
   724  0EC4                     	;# 
   725  0EC5                     	;# 
   726  0EC5                     	;# 
   727  0EC6                     	;# 
   728  0EC7                     	;# 
   729  0EC7                     	;# 
   730  0EC8                     	;# 
   731  0EC9                     	;# 
   732  0ECA                     	;# 
   733  0ECB                     	;# 
   734  0ECC                     	;# 
   735  0ECD                     	;# 
   736  0ECE                     	;# 
   737  0ECF                     	;# 
   738  0ED1                     	;# 
   739  0ED2                     	;# 
   740  0ED3                     	;# 
   741  0ED4                     	;# 
   742  0ED5                     	;# 
   743  0ED6                     	;# 
   744  0ED7                     	;# 
   745  0ED8                     	;# 
   746  0ED9                     	;# 
   747  0EDA                     	;# 
   748  0EDB                     	;# 
   749  0EDC                     	;# 
   750  0EDD                     	;# 
   751  0EDE                     	;# 
   752  0EDF                     	;# 
   753  0EE0                     	;# 
   754  0EE1                     	;# 
   755  0EE1                     	;# 
   756  0EE2                     	;# 
   757  0EE3                     	;# 
   758  0EE3                     	;# 
   759  0EE4                     	;# 
   760  0EE5                     	;# 
   761  0EE5                     	;# 
   762  0EE6                     	;# 
   763  0EE7                     	;# 
   764  0EE7                     	;# 
   765  0EE8                     	;# 
   766  0EE9                     	;# 
   767  0EEA                     	;# 
   768  0EEB                     	;# 
   769  0EEC                     	;# 
   770  0EED                     	;# 
   771  0EEE                     	;# 
   772  0EEF                     	;# 
   773  0F11                     	;# 
   774  0F12                     	;# 
   775  0F13                     	;# 
   776  0F14                     	;# 
   777  0F15                     	;# 
   778  0F16                     	;# 
   779  0F17                     	;# 
   780  0F18                     	;# 
   781  0F19                     	;# 
   782  0F1A                     	;# 
   783  0F1B                     	;# 
   784  0F1C                     	;# 
   785  0F1D                     	;# 
   786  0F1E                     	;# 
   787  0F1F                     	;# 
   788  0F20                     	;# 
   789  0F21                     	;# 
   790  0F21                     	;# 
   791  0F22                     	;# 
   792  0F23                     	;# 
   793  0F23                     	;# 
   794  0F24                     	;# 
   795  0F25                     	;# 
   796  0F25                     	;# 
   797  0F26                     	;# 
   798  0F27                     	;# 
   799  0F27                     	;# 
   800  0F28                     	;# 
   801  0F29                     	;# 
   802  0F2A                     	;# 
   803  0F2B                     	;# 
   804  0F2C                     	;# 
   805  0F2D                     	;# 
   806  0F2E                     	;# 
   807  0F2F                     	;# 
   808  0FE4                     	;# 
   809  0FE5                     	;# 
   810  0FE6                     	;# 
   811  0FE7                     	;# 
   812  0FE8                     	;# 
   813  0FE9                     	;# 
   814  0FEA                     	;# 
   815  0FEB                     	;# 
   816  0FED                     	;# 
   817  0FEE                     	;# 
   818  0FEF                     	;# 
   819  0000                     	;# 
   820  0001                     	;# 
   821  0002                     	;# 
   822  0003                     	;# 
   823  0004                     	;# 
   824  0005                     	;# 
   825  0006                     	;# 
   826  0007                     	;# 
   827  0008                     	;# 
   828  0009                     	;# 
   829  000A                     	;# 
   830  000B                     	;# 
   831  000C                     	;# 
   832  000D                     	;# 
   833  000E                     	;# 
   834  000F                     	;# 
   835  0010                     	;# 
   836  0011                     	;# 
   837  0012                     	;# 
   838  0013                     	;# 
   839  0014                     	;# 
   840  0015                     	;# 
   841  0016                     	;# 
   842  0016                     	;# 
   843  0017                     	;# 
   844  0018                     	;# 
   845  0019                     	;# 
   846  001A                     	;# 
   847  001B                     	;# 
   848  001C                     	;# 
   849  008C                     	;# 
   850  008D                     	;# 
   851  008E                     	;# 
   852  008F                     	;# 
   853  0090                     	;# 
   854  0091                     	;# 
   855  0092                     	;# 
   856  0093                     	;# 
   857  0094                     	;# 
   858  0095                     	;# 
   859  0096                     	;# 
   860  0097                     	;# 
   861  0098                     	;# 
   862  0099                     	;# 
   863  009A                     	;# 
   864  009B                     	;# 
   865  009B                     	;# 
   866  009C                     	;# 
   867  009D                     	;# 
   868  009E                     	;# 
   869  009F                     	;# 
   870  010C                     	;# 
   871  010D                     	;# 
   872  010E                     	;# 
   873  010F                     	;# 
   874  0110                     	;# 
   875  0111                     	;# 
   876  0112                     	;# 
   877  0113                     	;# 
   878  0114                     	;# 
   879  0115                     	;# 
   880  0116                     	;# 
   881  0117                     	;# 
   882  0118                     	;# 
   883  0119                     	;# 
   884  011A                     	;# 
   885  011B                     	;# 
   886  011C                     	;# 
   887  011D                     	;# 
   888  011D                     	;# 
   889  011D                     	;# 
   890  011E                     	;# 
   891  011F                     	;# 
   892  018C                     	;# 
   893  018D                     	;# 
   894  018E                     	;# 
   895  018F                     	;# 
   896  0190                     	;# 
   897  0191                     	;# 
   898  0191                     	;# 
   899  0192                     	;# 
   900  0193                     	;# 
   901  0193                     	;# 
   902  0193                     	;# 
   903  0194                     	;# 
   904  0195                     	;# 
   905  0196                     	;# 
   906  0197                     	;# 
   907  0199                     	;# 
   908  0199                     	;# 
   909  0199                     	;# 
   910  019A                     	;# 
   911  019A                     	;# 
   912  019A                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019C                     	;# 
   919  019C                     	;# 
   920  019C                     	;# 
   921  019D                     	;# 
   922  019D                     	;# 
   923  019D                     	;# 
   924  019E                     	;# 
   925  019E                     	;# 
   926  019E                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  019F                     	;# 
   931  019F                     	;# 
   932  020C                     	;# 
   933  020D                     	;# 
   934  020E                     	;# 
   935  020F                     	;# 
   936  0210                     	;# 
   937  0211                     	;# 
   938  0211                     	;# 
   939  0212                     	;# 
   940  0212                     	;# 
   941  0213                     	;# 
   942  0213                     	;# 
   943  0214                     	;# 
   944  0214                     	;# 
   945  0215                     	;# 
   946  0215                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0216                     	;# 
   950  0216                     	;# 
   951  0217                     	;# 
   952  0217                     	;# 
   953  028C                     	;# 
   954  028D                     	;# 
   955  028E                     	;# 
   956  028F                     	;# 
   957  0290                     	;# 
   958  0291                     	;# 
   959  0291                     	;# 
   960  0292                     	;# 
   961  0293                     	;# 
   962  0298                     	;# 
   963  0298                     	;# 
   964  0299                     	;# 
   965  029A                     	;# 
   966  030C                     	;# 
   967  030D                     	;# 
   968  030E                     	;# 
   969  030F                     	;# 
   970  0310                     	;# 
   971  0311                     	;# 
   972  0311                     	;# 
   973  0312                     	;# 
   974  0313                     	;# 
   975  038C                     	;# 
   976  038D                     	;# 
   977  038E                     	;# 
   978  038F                     	;# 
   979  0390                     	;# 
   980  0391                     	;# 
   981  0392                     	;# 
   982  0393                     	;# 
   983  0394                     	;# 
   984  0395                     	;# 
   985  0396                     	;# 
   986  0397                     	;# 
   987  0398                     	;# 
   988  0399                     	;# 
   989  039D                     	;# 
   990  039E                     	;# 
   991  039F                     	;# 
   992  0511                     	;# 
   993  0513                     	;# 
   994  0515                     	;# 
   995  051A                     	;# 
   996  0591                     	;# 
   997  0592                     	;# 
   998  0592                     	;# 
   999  0593                     	;# 
  1000  0594                     	;# 
  1001  0594                     	;# 
  1002  0595                     	;# 
  1003  0596                     	;# 
  1004  0596                     	;# 
  1005  0E91                     	;# 
  1006  0E92                     	;# 
  1007  0E93                     	;# 
  1008  0E94                     	;# 
  1009  0E95                     	;# 
  1010  0E96                     	;# 
  1011  0E97                     	;# 
  1012  0E98                     	;# 
  1013  0E99                     	;# 
  1014  0E9A                     	;# 
  1015  0E9B                     	;# 
  1016  0E9C                     	;# 
  1017  0E9D                     	;# 
  1018  0E9E                     	;# 
  1019  0E9F                     	;# 
  1020  0EA0                     	;# 
  1021  0EA1                     	;# 
  1022  0EA1                     	;# 
  1023  0EA2                     	;# 
  1024  0EA3                     	;# 
  1025  0EA3                     	;# 
  1026  0EA4                     	;# 
  1027  0EA5                     	;# 
  1028  0EA5                     	;# 
  1029  0EA6                     	;# 
  1030  0EA7                     	;# 
  1031  0EA7                     	;# 
  1032  0EA8                     	;# 
  1033  0EA9                     	;# 
  1034  0EAA                     	;# 
  1035  0EAB                     	;# 
  1036  0EAC                     	;# 
  1037  0EAD                     	;# 
  1038  0EAE                     	;# 
  1039  0EAF                     	;# 
  1040  0EB1                     	;# 
  1041  0EB2                     	;# 
  1042  0EB3                     	;# 
  1043  0EB4                     	;# 
  1044  0EB5                     	;# 
  1045  0EB6                     	;# 
  1046  0EB7                     	;# 
  1047  0EB8                     	;# 
  1048  0EB9                     	;# 
  1049  0EBA                     	;# 
  1050  0EBB                     	;# 
  1051  0EBC                     	;# 
  1052  0EBD                     	;# 
  1053  0EBE                     	;# 
  1054  0EBF                     	;# 
  1055  0EC0                     	;# 
  1056  0EC1                     	;# 
  1057  0EC1                     	;# 
  1058  0EC2                     	;# 
  1059  0EC3                     	;# 
  1060  0EC3                     	;# 
  1061  0EC4                     	;# 
  1062  0EC5                     	;# 
  1063  0EC5                     	;# 
  1064  0EC6                     	;# 
  1065  0EC7                     	;# 
  1066  0EC7                     	;# 
  1067  0EC8                     	;# 
  1068  0EC9                     	;# 
  1069  0ECA                     	;# 
  1070  0ECB                     	;# 
  1071  0ECC                     	;# 
  1072  0ECD                     	;# 
  1073  0ECE                     	;# 
  1074  0ECF                     	;# 
  1075  0ED1                     	;# 
  1076  0ED2                     	;# 
  1077  0ED3                     	;# 
  1078  0ED4                     	;# 
  1079  0ED5                     	;# 
  1080  0ED6                     	;# 
  1081  0ED7                     	;# 
  1082  0ED8                     	;# 
  1083  0ED9                     	;# 
  1084  0EDA                     	;# 
  1085  0EDB                     	;# 
  1086  0EDC                     	;# 
  1087  0EDD                     	;# 
  1088  0EDE                     	;# 
  1089  0EDF                     	;# 
  1090  0EE0                     	;# 
  1091  0EE1                     	;# 
  1092  0EE1                     	;# 
  1093  0EE2                     	;# 
  1094  0EE3                     	;# 
  1095  0EE3                     	;# 
  1096  0EE4                     	;# 
  1097  0EE5                     	;# 
  1098  0EE5                     	;# 
  1099  0EE6                     	;# 
  1100  0EE7                     	;# 
  1101  0EE7                     	;# 
  1102  0EE8                     	;# 
  1103  0EE9                     	;# 
  1104  0EEA                     	;# 
  1105  0EEB                     	;# 
  1106  0EEC                     	;# 
  1107  0EED                     	;# 
  1108  0EEE                     	;# 
  1109  0EEF                     	;# 
  1110  0F11                     	;# 
  1111  0F12                     	;# 
  1112  0F13                     	;# 
  1113  0F14                     	;# 
  1114  0F15                     	;# 
  1115  0F16                     	;# 
  1116  0F17                     	;# 
  1117  0F18                     	;# 
  1118  0F19                     	;# 
  1119  0F1A                     	;# 
  1120  0F1B                     	;# 
  1121  0F1C                     	;# 
  1122  0F1D                     	;# 
  1123  0F1E                     	;# 
  1124  0F1F                     	;# 
  1125  0F20                     	;# 
  1126  0F21                     	;# 
  1127  0F21                     	;# 
  1128  0F22                     	;# 
  1129  0F23                     	;# 
  1130  0F23                     	;# 
  1131  0F24                     	;# 
  1132  0F25                     	;# 
  1133  0F25                     	;# 
  1134  0F26                     	;# 
  1135  0F27                     	;# 
  1136  0F27                     	;# 
  1137  0F28                     	;# 
  1138  0F29                     	;# 
  1139  0F2A                     	;# 
  1140  0F2B                     	;# 
  1141  0F2C                     	;# 
  1142  0F2D                     	;# 
  1143  0F2E                     	;# 
  1144  0F2F                     	;# 
  1145  0FE4                     	;# 
  1146  0FE5                     	;# 
  1147  0FE6                     	;# 
  1148  0FE7                     	;# 
  1149  0FE8                     	;# 
  1150  0FE9                     	;# 
  1151  0FEA                     	;# 
  1152  0FEB                     	;# 
  1153  0FED                     	;# 
  1154  0FEE                     	;# 
  1155  0FEF                     	;# 
  1156  0000                     	;# 
  1157  0001                     	;# 
  1158  0002                     	;# 
  1159  0003                     	;# 
  1160  0004                     	;# 
  1161  0005                     	;# 
  1162  0006                     	;# 
  1163  0007                     	;# 
  1164  0008                     	;# 
  1165  0009                     	;# 
  1166  000A                     	;# 
  1167  000B                     	;# 
  1168  000C                     	;# 
  1169  000D                     	;# 
  1170  000E                     	;# 
  1171  000F                     	;# 
  1172  0010                     	;# 
  1173  0011                     	;# 
  1174  0012                     	;# 
  1175  0013                     	;# 
  1176  0014                     	;# 
  1177  0015                     	;# 
  1178  0016                     	;# 
  1179  0016                     	;# 
  1180  0017                     	;# 
  1181  0018                     	;# 
  1182  0019                     	;# 
  1183  001A                     	;# 
  1184  001B                     	;# 
  1185  001C                     	;# 
  1186  008C                     	;# 
  1187  008D                     	;# 
  1188  008E                     	;# 
  1189  008F                     	;# 
  1190  0090                     	;# 
  1191  0091                     	;# 
  1192  0092                     	;# 
  1193  0093                     	;# 
  1194  0094                     	;# 
  1195  0095                     	;# 
  1196  0096                     	;# 
  1197  0097                     	;# 
  1198  0098                     	;# 
  1199  0099                     	;# 
  1200  009A                     	;# 
  1201  009B                     	;# 
  1202  009B                     	;# 
  1203  009C                     	;# 
  1204  009D                     	;# 
  1205  009E                     	;# 
  1206  009F                     	;# 
  1207  010C                     	;# 
  1208  010D                     	;# 
  1209  010E                     	;# 
  1210  010F                     	;# 
  1211  0110                     	;# 
  1212  0111                     	;# 
  1213  0112                     	;# 
  1214  0113                     	;# 
  1215  0114                     	;# 
  1216  0115                     	;# 
  1217  0116                     	;# 
  1218  0117                     	;# 
  1219  0118                     	;# 
  1220  0119                     	;# 
  1221  011A                     	;# 
  1222  011B                     	;# 
  1223  011C                     	;# 
  1224  011D                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011E                     	;# 
  1228  011F                     	;# 
  1229  018C                     	;# 
  1230  018D                     	;# 
  1231  018E                     	;# 
  1232  018F                     	;# 
  1233  0190                     	;# 
  1234  0191                     	;# 
  1235  0191                     	;# 
  1236  0192                     	;# 
  1237  0193                     	;# 
  1238  0193                     	;# 
  1239  0193                     	;# 
  1240  0194                     	;# 
  1241  0195                     	;# 
  1242  0196                     	;# 
  1243  0197                     	;# 
  1244  0199                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  019A                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019C                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  020C                     	;# 
  1270  020D                     	;# 
  1271  020E                     	;# 
  1272  020F                     	;# 
  1273  0210                     	;# 
  1274  0211                     	;# 
  1275  0211                     	;# 
  1276  0212                     	;# 
  1277  0212                     	;# 
  1278  0213                     	;# 
  1279  0213                     	;# 
  1280  0214                     	;# 
  1281  0214                     	;# 
  1282  0215                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0216                     	;# 
  1287  0216                     	;# 
  1288  0217                     	;# 
  1289  0217                     	;# 
  1290  028C                     	;# 
  1291  028D                     	;# 
  1292  028E                     	;# 
  1293  028F                     	;# 
  1294  0290                     	;# 
  1295  0291                     	;# 
  1296  0291                     	;# 
  1297  0292                     	;# 
  1298  0293                     	;# 
  1299  0298                     	;# 
  1300  0298                     	;# 
  1301  0299                     	;# 
  1302  029A                     	;# 
  1303  030C                     	;# 
  1304  030D                     	;# 
  1305  030E                     	;# 
  1306  030F                     	;# 
  1307  0310                     	;# 
  1308  0311                     	;# 
  1309  0311                     	;# 
  1310  0312                     	;# 
  1311  0313                     	;# 
  1312  038C                     	;# 
  1313  038D                     	;# 
  1314  038E                     	;# 
  1315  038F                     	;# 
  1316  0390                     	;# 
  1317  0391                     	;# 
  1318  0392                     	;# 
  1319  0393                     	;# 
  1320  0394                     	;# 
  1321  0395                     	;# 
  1322  0396                     	;# 
  1323  0397                     	;# 
  1324  0398                     	;# 
  1325  0399                     	;# 
  1326  039D                     	;# 
  1327  039E                     	;# 
  1328  039F                     	;# 
  1329  0511                     	;# 
  1330  0513                     	;# 
  1331  0515                     	;# 
  1332  051A                     	;# 
  1333  0591                     	;# 
  1334  0592                     	;# 
  1335  0592                     	;# 
  1336  0593                     	;# 
  1337  0594                     	;# 
  1338  0594                     	;# 
  1339  0595                     	;# 
  1340  0596                     	;# 
  1341  0596                     	;# 
  1342  0E91                     	;# 
  1343  0E92                     	;# 
  1344  0E93                     	;# 
  1345  0E94                     	;# 
  1346  0E95                     	;# 
  1347  0E96                     	;# 
  1348  0E97                     	;# 
  1349  0E98                     	;# 
  1350  0E99                     	;# 
  1351  0E9A                     	;# 
  1352  0E9B                     	;# 
  1353  0E9C                     	;# 
  1354  0E9D                     	;# 
  1355  0E9E                     	;# 
  1356  0E9F                     	;# 
  1357  0EA0                     	;# 
  1358  0EA1                     	;# 
  1359  0EA1                     	;# 
  1360  0EA2                     	;# 
  1361  0EA3                     	;# 
  1362  0EA3                     	;# 
  1363  0EA4                     	;# 
  1364  0EA5                     	;# 
  1365  0EA5                     	;# 
  1366  0EA6                     	;# 
  1367  0EA7                     	;# 
  1368  0EA7                     	;# 
  1369  0EA8                     	;# 
  1370  0EA9                     	;# 
  1371  0EAA                     	;# 
  1372  0EAB                     	;# 
  1373  0EAC                     	;# 
  1374  0EAD                     	;# 
  1375  0EAE                     	;# 
  1376  0EAF                     	;# 
  1377  0EB1                     	;# 
  1378  0EB2                     	;# 
  1379  0EB3                     	;# 
  1380  0EB4                     	;# 
  1381  0EB5                     	;# 
  1382  0EB6                     	;# 
  1383  0EB7                     	;# 
  1384  0EB8                     	;# 
  1385  0EB9                     	;# 
  1386  0EBA                     	;# 
  1387  0EBB                     	;# 
  1388  0EBC                     	;# 
  1389  0EBD                     	;# 
  1390  0EBE                     	;# 
  1391  0EBF                     	;# 
  1392  0EC0                     	;# 
  1393  0EC1                     	;# 
  1394  0EC1                     	;# 
  1395  0EC2                     	;# 
  1396  0EC3                     	;# 
  1397  0EC3                     	;# 
  1398  0EC4                     	;# 
  1399  0EC5                     	;# 
  1400  0EC5                     	;# 
  1401  0EC6                     	;# 
  1402  0EC7                     	;# 
  1403  0EC7                     	;# 
  1404  0EC8                     	;# 
  1405  0EC9                     	;# 
  1406  0ECA                     	;# 
  1407  0ECB                     	;# 
  1408  0ECC                     	;# 
  1409  0ECD                     	;# 
  1410  0ECE                     	;# 
  1411  0ECF                     	;# 
  1412  0ED1                     	;# 
  1413  0ED2                     	;# 
  1414  0ED3                     	;# 
  1415  0ED4                     	;# 
  1416  0ED5                     	;# 
  1417  0ED6                     	;# 
  1418  0ED7                     	;# 
  1419  0ED8                     	;# 
  1420  0ED9                     	;# 
  1421  0EDA                     	;# 
  1422  0EDB                     	;# 
  1423  0EDC                     	;# 
  1424  0EDD                     	;# 
  1425  0EDE                     	;# 
  1426  0EDF                     	;# 
  1427  0EE0                     	;# 
  1428  0EE1                     	;# 
  1429  0EE1                     	;# 
  1430  0EE2                     	;# 
  1431  0EE3                     	;# 
  1432  0EE3                     	;# 
  1433  0EE4                     	;# 
  1434  0EE5                     	;# 
  1435  0EE5                     	;# 
  1436  0EE6                     	;# 
  1437  0EE7                     	;# 
  1438  0EE7                     	;# 
  1439  0EE8                     	;# 
  1440  0EE9                     	;# 
  1441  0EEA                     	;# 
  1442  0EEB                     	;# 
  1443  0EEC                     	;# 
  1444  0EED                     	;# 
  1445  0EEE                     	;# 
  1446  0EEF                     	;# 
  1447  0F11                     	;# 
  1448  0F12                     	;# 
  1449  0F13                     	;# 
  1450  0F14                     	;# 
  1451  0F15                     	;# 
  1452  0F16                     	;# 
  1453  0F17                     	;# 
  1454  0F18                     	;# 
  1455  0F19                     	;# 
  1456  0F1A                     	;# 
  1457  0F1B                     	;# 
  1458  0F1C                     	;# 
  1459  0F1D                     	;# 
  1460  0F1E                     	;# 
  1461  0F1F                     	;# 
  1462  0F20                     	;# 
  1463  0F21                     	;# 
  1464  0F21                     	;# 
  1465  0F22                     	;# 
  1466  0F23                     	;# 
  1467  0F23                     	;# 
  1468  0F24                     	;# 
  1469  0F25                     	;# 
  1470  0F25                     	;# 
  1471  0F26                     	;# 
  1472  0F27                     	;# 
  1473  0F27                     	;# 
  1474  0F28                     	;# 
  1475  0F29                     	;# 
  1476  0F2A                     	;# 
  1477  0F2B                     	;# 
  1478  0F2C                     	;# 
  1479  0F2D                     	;# 
  1480  0F2E                     	;# 
  1481  0F2F                     	;# 
  1482  0FE4                     	;# 
  1483  0FE5                     	;# 
  1484  0FE6                     	;# 
  1485  0FE7                     	;# 
  1486  0FE8                     	;# 
  1487  0FE9                     	;# 
  1488  0FEA                     	;# 
  1489  0FEB                     	;# 
  1490  0FED                     	;# 
  1491  0FEE                     	;# 
  1492  0FEF                     	;# 
  1493  0000                     	;# 
  1494  0001                     	;# 
  1495  0002                     	;# 
  1496  0003                     	;# 
  1497  0004                     	;# 
  1498  0005                     	;# 
  1499  0006                     	;# 
  1500  0007                     	;# 
  1501  0008                     	;# 
  1502  0009                     	;# 
  1503  000A                     	;# 
  1504  000B                     	;# 
  1505  000C                     	;# 
  1506  000D                     	;# 
  1507  000E                     	;# 
  1508  000F                     	;# 
  1509  0010                     	;# 
  1510  0011                     	;# 
  1511  0012                     	;# 
  1512  0013                     	;# 
  1513  0014                     	;# 
  1514  0015                     	;# 
  1515  0016                     	;# 
  1516  0016                     	;# 
  1517  0017                     	;# 
  1518  0018                     	;# 
  1519  0019                     	;# 
  1520  001A                     	;# 
  1521  001B                     	;# 
  1522  001C                     	;# 
  1523  008C                     	;# 
  1524  008D                     	;# 
  1525  008E                     	;# 
  1526  008F                     	;# 
  1527  0090                     	;# 
  1528  0091                     	;# 
  1529  0092                     	;# 
  1530  0093                     	;# 
  1531  0094                     	;# 
  1532  0095                     	;# 
  1533  0096                     	;# 
  1534  0097                     	;# 
  1535  0098                     	;# 
  1536  0099                     	;# 
  1537  009A                     	;# 
  1538  009B                     	;# 
  1539  009B                     	;# 
  1540  009C                     	;# 
  1541  009D                     	;# 
  1542  009E                     	;# 
  1543  009F                     	;# 
  1544  010C                     	;# 
  1545  010D                     	;# 
  1546  010E                     	;# 
  1547  010F                     	;# 
  1548  0110                     	;# 
  1549  0111                     	;# 
  1550  0112                     	;# 
  1551  0113                     	;# 
  1552  0114                     	;# 
  1553  0115                     	;# 
  1554  0116                     	;# 
  1555  0117                     	;# 
  1556  0118                     	;# 
  1557  0119                     	;# 
  1558  011A                     	;# 
  1559  011B                     	;# 
  1560  011C                     	;# 
  1561  011D                     	;# 
  1562  011D                     	;# 
  1563  011D                     	;# 
  1564  011E                     	;# 
  1565  011F                     	;# 
  1566  018C                     	;# 
  1567  018D                     	;# 
  1568  018E                     	;# 
  1569  018F                     	;# 
  1570  0190                     	;# 
  1571  0191                     	;# 
  1572  0191                     	;# 
  1573  0192                     	;# 
  1574  0193                     	;# 
  1575  0193                     	;# 
  1576  0193                     	;# 
  1577  0194                     	;# 
  1578  0195                     	;# 
  1579  0196                     	;# 
  1580  0197                     	;# 
  1581  0199                     	;# 
  1582  0199                     	;# 
  1583  0199                     	;# 
  1584  019A                     	;# 
  1585  019A                     	;# 
  1586  019A                     	;# 
  1587  019B                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019C                     	;# 
  1593  019C                     	;# 
  1594  019C                     	;# 
  1595  019D                     	;# 
  1596  019D                     	;# 
  1597  019D                     	;# 
  1598  019E                     	;# 
  1599  019E                     	;# 
  1600  019E                     	;# 
  1601  019F                     	;# 
  1602  019F                     	;# 
  1603  019F                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  020C                     	;# 
  1607  020D                     	;# 
  1608  020E                     	;# 
  1609  020F                     	;# 
  1610  0210                     	;# 
  1611  0211                     	;# 
  1612  0211                     	;# 
  1613  0212                     	;# 
  1614  0212                     	;# 
  1615  0213                     	;# 
  1616  0213                     	;# 
  1617  0214                     	;# 
  1618  0214                     	;# 
  1619  0215                     	;# 
  1620  0215                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0216                     	;# 
  1624  0216                     	;# 
  1625  0217                     	;# 
  1626  0217                     	;# 
  1627  028C                     	;# 
  1628  028D                     	;# 
  1629  028E                     	;# 
  1630  028F                     	;# 
  1631  0290                     	;# 
  1632  0291                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0293                     	;# 
  1636  0298                     	;# 
  1637  0298                     	;# 
  1638  0299                     	;# 
  1639  029A                     	;# 
  1640  030C                     	;# 
  1641  030D                     	;# 
  1642  030E                     	;# 
  1643  030F                     	;# 
  1644  0310                     	;# 
  1645  0311                     	;# 
  1646  0311                     	;# 
  1647  0312                     	;# 
  1648  0313                     	;# 
  1649  038C                     	;# 
  1650  038D                     	;# 
  1651  038E                     	;# 
  1652  038F                     	;# 
  1653  0390                     	;# 
  1654  0391                     	;# 
  1655  0392                     	;# 
  1656  0393                     	;# 
  1657  0394                     	;# 
  1658  0395                     	;# 
  1659  0396                     	;# 
  1660  0397                     	;# 
  1661  0398                     	;# 
  1662  0399                     	;# 
  1663  039D                     	;# 
  1664  039E                     	;# 
  1665  039F                     	;# 
  1666  0511                     	;# 
  1667  0513                     	;# 
  1668  0515                     	;# 
  1669  051A                     	;# 
  1670  0591                     	;# 
  1671  0592                     	;# 
  1672  0592                     	;# 
  1673  0593                     	;# 
  1674  0594                     	;# 
  1675  0594                     	;# 
  1676  0595                     	;# 
  1677  0596                     	;# 
  1678  0596                     	;# 
  1679  0E91                     	;# 
  1680  0E92                     	;# 
  1681  0E93                     	;# 
  1682  0E94                     	;# 
  1683  0E95                     	;# 
  1684  0E96                     	;# 
  1685  0E97                     	;# 
  1686  0E98                     	;# 
  1687  0E99                     	;# 
  1688  0E9A                     	;# 
  1689  0E9B                     	;# 
  1690  0E9C                     	;# 
  1691  0E9D                     	;# 
  1692  0E9E                     	;# 
  1693  0E9F                     	;# 
  1694  0EA0                     	;# 
  1695  0EA1                     	;# 
  1696  0EA1                     	;# 
  1697  0EA2                     	;# 
  1698  0EA3                     	;# 
  1699  0EA3                     	;# 
  1700  0EA4                     	;# 
  1701  0EA5                     	;# 
  1702  0EA5                     	;# 
  1703  0EA6                     	;# 
  1704  0EA7                     	;# 
  1705  0EA7                     	;# 
  1706  0EA8                     	;# 
  1707  0EA9                     	;# 
  1708  0EAA                     	;# 
  1709  0EAB                     	;# 
  1710  0EAC                     	;# 
  1711  0EAD                     	;# 
  1712  0EAE                     	;# 
  1713  0EAF                     	;# 
  1714  0EB1                     	;# 
  1715  0EB2                     	;# 
  1716  0EB3                     	;# 
  1717  0EB4                     	;# 
  1718  0EB5                     	;# 
  1719  0EB6                     	;# 
  1720  0EB7                     	;# 
  1721  0EB8                     	;# 
  1722  0EB9                     	;# 
  1723  0EBA                     	;# 
  1724  0EBB                     	;# 
  1725  0EBC                     	;# 
  1726  0EBD                     	;# 
  1727  0EBE                     	;# 
  1728  0EBF                     	;# 
  1729  0EC0                     	;# 
  1730  0EC1                     	;# 
  1731  0EC1                     	;# 
  1732  0EC2                     	;# 
  1733  0EC3                     	;# 
  1734  0EC3                     	;# 
  1735  0EC4                     	;# 
  1736  0EC5                     	;# 
  1737  0EC5                     	;# 
  1738  0EC6                     	;# 
  1739  0EC7                     	;# 
  1740  0EC7                     	;# 
  1741  0EC8                     	;# 
  1742  0EC9                     	;# 
  1743  0ECA                     	;# 
  1744  0ECB                     	;# 
  1745  0ECC                     	;# 
  1746  0ECD                     	;# 
  1747  0ECE                     	;# 
  1748  0ECF                     	;# 
  1749  0ED1                     	;# 
  1750  0ED2                     	;# 
  1751  0ED3                     	;# 
  1752  0ED4                     	;# 
  1753  0ED5                     	;# 
  1754  0ED6                     	;# 
  1755  0ED7                     	;# 
  1756  0ED8                     	;# 
  1757  0ED9                     	;# 
  1758  0EDA                     	;# 
  1759  0EDB                     	;# 
  1760  0EDC                     	;# 
  1761  0EDD                     	;# 
  1762  0EDE                     	;# 
  1763  0EDF                     	;# 
  1764  0EE0                     	;# 
  1765  0EE1                     	;# 
  1766  0EE1                     	;# 
  1767  0EE2                     	;# 
  1768  0EE3                     	;# 
  1769  0EE3                     	;# 
  1770  0EE4                     	;# 
  1771  0EE5                     	;# 
  1772  0EE5                     	;# 
  1773  0EE6                     	;# 
  1774  0EE7                     	;# 
  1775  0EE7                     	;# 
  1776  0EE8                     	;# 
  1777  0EE9                     	;# 
  1778  0EEA                     	;# 
  1779  0EEB                     	;# 
  1780  0EEC                     	;# 
  1781  0EED                     	;# 
  1782  0EEE                     	;# 
  1783  0EEF                     	;# 
  1784  0F11                     	;# 
  1785  0F12                     	;# 
  1786  0F13                     	;# 
  1787  0F14                     	;# 
  1788  0F15                     	;# 
  1789  0F16                     	;# 
  1790  0F17                     	;# 
  1791  0F18                     	;# 
  1792  0F19                     	;# 
  1793  0F1A                     	;# 
  1794  0F1B                     	;# 
  1795  0F1C                     	;# 
  1796  0F1D                     	;# 
  1797  0F1E                     	;# 
  1798  0F1F                     	;# 
  1799  0F20                     	;# 
  1800  0F21                     	;# 
  1801  0F21                     	;# 
  1802  0F22                     	;# 
  1803  0F23                     	;# 
  1804  0F23                     	;# 
  1805  0F24                     	;# 
  1806  0F25                     	;# 
  1807  0F25                     	;# 
  1808  0F26                     	;# 
  1809  0F27                     	;# 
  1810  0F27                     	;# 
  1811  0F28                     	;# 
  1812  0F29                     	;# 
  1813  0F2A                     	;# 
  1814  0F2B                     	;# 
  1815  0F2C                     	;# 
  1816  0F2D                     	;# 
  1817  0F2E                     	;# 
  1818  0F2F                     	;# 
  1819  0FE4                     	;# 
  1820  0FE5                     	;# 
  1821  0FE6                     	;# 
  1822  0FE7                     	;# 
  1823  0FE8                     	;# 
  1824  0FE9                     	;# 
  1825  0FEA                     	;# 
  1826  0FEB                     	;# 
  1827  0FED                     	;# 
  1828  0FEE                     	;# 
  1829  0FEF                     	;# 
  1830  0000                     	;# 
  1831  0001                     	;# 
  1832  0002                     	;# 
  1833  0003                     	;# 
  1834  0004                     	;# 
  1835  0005                     	;# 
  1836  0006                     	;# 
  1837  0007                     	;# 
  1838  0008                     	;# 
  1839  0009                     	;# 
  1840  000A                     	;# 
  1841  000B                     	;# 
  1842  000C                     	;# 
  1843  000D                     	;# 
  1844  000E                     	;# 
  1845  000F                     	;# 
  1846  0010                     	;# 
  1847  0011                     	;# 
  1848  0012                     	;# 
  1849  0013                     	;# 
  1850  0014                     	;# 
  1851  0015                     	;# 
  1852  0016                     	;# 
  1853  0016                     	;# 
  1854  0017                     	;# 
  1855  0018                     	;# 
  1856  0019                     	;# 
  1857  001A                     	;# 
  1858  001B                     	;# 
  1859  001C                     	;# 
  1860  008C                     	;# 
  1861  008D                     	;# 
  1862  008E                     	;# 
  1863  008F                     	;# 
  1864  0090                     	;# 
  1865  0091                     	;# 
  1866  0092                     	;# 
  1867  0093                     	;# 
  1868  0094                     	;# 
  1869  0095                     	;# 
  1870  0096                     	;# 
  1871  0097                     	;# 
  1872  0098                     	;# 
  1873  0099                     	;# 
  1874  009A                     	;# 
  1875  009B                     	;# 
  1876  009B                     	;# 
  1877  009C                     	;# 
  1878  009D                     	;# 
  1879  009E                     	;# 
  1880  009F                     	;# 
  1881  010C                     	;# 
  1882  010D                     	;# 
  1883  010E                     	;# 
  1884  010F                     	;# 
  1885  0110                     	;# 
  1886  0111                     	;# 
  1887  0112                     	;# 
  1888  0113                     	;# 
  1889  0114                     	;# 
  1890  0115                     	;# 
  1891  0116                     	;# 
  1892  0117                     	;# 
  1893  0118                     	;# 
  1894  0119                     	;# 
  1895  011A                     	;# 
  1896  011B                     	;# 
  1897  011C                     	;# 
  1898  011D                     	;# 
  1899  011D                     	;# 
  1900  011D                     	;# 
  1901  011E                     	;# 
  1902  011F                     	;# 
  1903  018C                     	;# 
  1904  018D                     	;# 
  1905  018E                     	;# 
  1906  018F                     	;# 
  1907  0190                     	;# 
  1908  0191                     	;# 
  1909  0191                     	;# 
  1910  0192                     	;# 
  1911  0193                     	;# 
  1912  0193                     	;# 
  1913  0193                     	;# 
  1914  0194                     	;# 
  1915  0195                     	;# 
  1916  0196                     	;# 
  1917  0197                     	;# 
  1918  0199                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  019A                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019C                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019D                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019E                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  020C                     	;# 
  1944  020D                     	;# 
  1945  020E                     	;# 
  1946  020F                     	;# 
  1947  0210                     	;# 
  1948  0211                     	;# 
  1949  0211                     	;# 
  1950  0212                     	;# 
  1951  0212                     	;# 
  1952  0213                     	;# 
  1953  0213                     	;# 
  1954  0214                     	;# 
  1955  0214                     	;# 
  1956  0215                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0216                     	;# 
  1961  0216                     	;# 
  1962  0217                     	;# 
  1963  0217                     	;# 
  1964  028C                     	;# 
  1965  028D                     	;# 
  1966  028E                     	;# 
  1967  028F                     	;# 
  1968  0290                     	;# 
  1969  0291                     	;# 
  1970  0291                     	;# 
  1971  0292                     	;# 
  1972  0293                     	;# 
  1973  0298                     	;# 
  1974  0298                     	;# 
  1975  0299                     	;# 
  1976  029A                     	;# 
  1977  030C                     	;# 
  1978  030D                     	;# 
  1979  030E                     	;# 
  1980  030F                     	;# 
  1981  0310                     	;# 
  1982  0311                     	;# 
  1983  0311                     	;# 
  1984  0312                     	;# 
  1985  0313                     	;# 
  1986  038C                     	;# 
  1987  038D                     	;# 
  1988  038E                     	;# 
  1989  038F                     	;# 
  1990  0390                     	;# 
  1991  0391                     	;# 
  1992  0392                     	;# 
  1993  0393                     	;# 
  1994  0394                     	;# 
  1995  0395                     	;# 
  1996  0396                     	;# 
  1997  0397                     	;# 
  1998  0398                     	;# 
  1999  0399                     	;# 
  2000  039D                     	;# 
  2001  039E                     	;# 
  2002  039F                     	;# 
  2003  0511                     	;# 
  2004  0513                     	;# 
  2005  0515                     	;# 
  2006  051A                     	;# 
  2007  0591                     	;# 
  2008  0592                     	;# 
  2009  0592                     	;# 
  2010  0593                     	;# 
  2011  0594                     	;# 
  2012  0594                     	;# 
  2013  0595                     	;# 
  2014  0596                     	;# 
  2015  0596                     	;# 
  2016  0E91                     	;# 
  2017  0E92                     	;# 
  2018  0E93                     	;# 
  2019  0E94                     	;# 
  2020  0E95                     	;# 
  2021  0E96                     	;# 
  2022  0E97                     	;# 
  2023  0E98                     	;# 
  2024  0E99                     	;# 
  2025  0E9A                     	;# 
  2026  0E9B                     	;# 
  2027  0E9C                     	;# 
  2028  0E9D                     	;# 
  2029  0E9E                     	;# 
  2030  0E9F                     	;# 
  2031  0EA0                     	;# 
  2032  0EA1                     	;# 
  2033  0EA1                     	;# 
  2034  0EA2                     	;# 
  2035  0EA3                     	;# 
  2036  0EA3                     	;# 
  2037  0EA4                     	;# 
  2038  0EA5                     	;# 
  2039  0EA5                     	;# 
  2040  0EA6                     	;# 
  2041  0EA7                     	;# 
  2042  0EA7                     	;# 
  2043  0EA8                     	;# 
  2044  0EA9                     	;# 
  2045  0EAA                     	;# 
  2046  0EAB                     	;# 
  2047  0EAC                     	;# 
  2048  0EAD                     	;# 
  2049  0EAE                     	;# 
  2050  0EAF                     	;# 
  2051  0EB1                     	;# 
  2052  0EB2                     	;# 
  2053  0EB3                     	;# 
  2054  0EB4                     	;# 
  2055  0EB5                     	;# 
  2056  0EB6                     	;# 
  2057  0EB7                     	;# 
  2058  0EB8                     	;# 
  2059  0EB9                     	;# 
  2060  0EBA                     	;# 
  2061  0EBB                     	;# 
  2062  0EBC                     	;# 
  2063  0EBD                     	;# 
  2064  0EBE                     	;# 
  2065  0EBF                     	;# 
  2066  0EC0                     	;# 
  2067  0EC1                     	;# 
  2068  0EC1                     	;# 
  2069  0EC2                     	;# 
  2070  0EC3                     	;# 
  2071  0EC3                     	;# 
  2072  0EC4                     	;# 
  2073  0EC5                     	;# 
  2074  0EC5                     	;# 
  2075  0EC6                     	;# 
  2076  0EC7                     	;# 
  2077  0EC7                     	;# 
  2078  0EC8                     	;# 
  2079  0EC9                     	;# 
  2080  0ECA                     	;# 
  2081  0ECB                     	;# 
  2082  0ECC                     	;# 
  2083  0ECD                     	;# 
  2084  0ECE                     	;# 
  2085  0ECF                     	;# 
  2086  0ED1                     	;# 
  2087  0ED2                     	;# 
  2088  0ED3                     	;# 
  2089  0ED4                     	;# 
  2090  0ED5                     	;# 
  2091  0ED6                     	;# 
  2092  0ED7                     	;# 
  2093  0ED8                     	;# 
  2094  0ED9                     	;# 
  2095  0EDA                     	;# 
  2096  0EDB                     	;# 
  2097  0EDC                     	;# 
  2098  0EDD                     	;# 
  2099  0EDE                     	;# 
  2100  0EDF                     	;# 
  2101  0EE0                     	;# 
  2102  0EE1                     	;# 
  2103  0EE1                     	;# 
  2104  0EE2                     	;# 
  2105  0EE3                     	;# 
  2106  0EE3                     	;# 
  2107  0EE4                     	;# 
  2108  0EE5                     	;# 
  2109  0EE5                     	;# 
  2110  0EE6                     	;# 
  2111  0EE7                     	;# 
  2112  0EE7                     	;# 
  2113  0EE8                     	;# 
  2114  0EE9                     	;# 
  2115  0EEA                     	;# 
  2116  0EEB                     	;# 
  2117  0EEC                     	;# 
  2118  0EED                     	;# 
  2119  0EEE                     	;# 
  2120  0EEF                     	;# 
  2121  0F11                     	;# 
  2122  0F12                     	;# 
  2123  0F13                     	;# 
  2124  0F14                     	;# 
  2125  0F15                     	;# 
  2126  0F16                     	;# 
  2127  0F17                     	;# 
  2128  0F18                     	;# 
  2129  0F19                     	;# 
  2130  0F1A                     	;# 
  2131  0F1B                     	;# 
  2132  0F1C                     	;# 
  2133  0F1D                     	;# 
  2134  0F1E                     	;# 
  2135  0F1F                     	;# 
  2136  0F20                     	;# 
  2137  0F21                     	;# 
  2138  0F21                     	;# 
  2139  0F22                     	;# 
  2140  0F23                     	;# 
  2141  0F23                     	;# 
  2142  0F24                     	;# 
  2143  0F25                     	;# 
  2144  0F25                     	;# 
  2145  0F26                     	;# 
  2146  0F27                     	;# 
  2147  0F27                     	;# 
  2148  0F28                     	;# 
  2149  0F29                     	;# 
  2150  0F2A                     	;# 
  2151  0F2B                     	;# 
  2152  0F2C                     	;# 
  2153  0F2D                     	;# 
  2154  0F2E                     	;# 
  2155  0F2F                     	;# 
  2156  0FE4                     	;# 
  2157  0FE5                     	;# 
  2158  0FE6                     	;# 
  2159  0FE7                     	;# 
  2160  0FE8                     	;# 
  2161  0FE9                     	;# 
  2162  0FEA                     	;# 
  2163  0FEB                     	;# 
  2164  0FED                     	;# 
  2165  0FEE                     	;# 
  2166  0FEF                     	;# 
  2167  0000                     	;# 
  2168  0001                     	;# 
  2169  0002                     	;# 
  2170  0003                     	;# 
  2171  0004                     	;# 
  2172  0005                     	;# 
  2173  0006                     	;# 
  2174  0007                     	;# 
  2175  0008                     	;# 
  2176  0009                     	;# 
  2177  000A                     	;# 
  2178  000B                     	;# 
  2179  000C                     	;# 
  2180  000D                     	;# 
  2181  000E                     	;# 
  2182  000F                     	;# 
  2183  0010                     	;# 
  2184  0011                     	;# 
  2185  0012                     	;# 
  2186  0013                     	;# 
  2187  0014                     	;# 
  2188  0015                     	;# 
  2189  0016                     	;# 
  2190  0016                     	;# 
  2191  0017                     	;# 
  2192  0018                     	;# 
  2193  0019                     	;# 
  2194  001A                     	;# 
  2195  001B                     	;# 
  2196  001C                     	;# 
  2197  008C                     	;# 
  2198  008D                     	;# 
  2199  008E                     	;# 
  2200  008F                     	;# 
  2201  0090                     	;# 
  2202  0091                     	;# 
  2203  0092                     	;# 
  2204  0093                     	;# 
  2205  0094                     	;# 
  2206  0095                     	;# 
  2207  0096                     	;# 
  2208  0097                     	;# 
  2209  0098                     	;# 
  2210  0099                     	;# 
  2211  009A                     	;# 
  2212  009B                     	;# 
  2213  009B                     	;# 
  2214  009C                     	;# 
  2215  009D                     	;# 
  2216  009E                     	;# 
  2217  009F                     	;# 
  2218  010C                     	;# 
  2219  010D                     	;# 
  2220  010E                     	;# 
  2221  010F                     	;# 
  2222  0110                     	;# 
  2223  0111                     	;# 
  2224  0112                     	;# 
  2225  0113                     	;# 
  2226  0114                     	;# 
  2227  0115                     	;# 
  2228  0116                     	;# 
  2229  0117                     	;# 
  2230  0118                     	;# 
  2231  0119                     	;# 
  2232  011A                     	;# 
  2233  011B                     	;# 
  2234  011C                     	;# 
  2235  011D                     	;# 
  2236  011D                     	;# 
  2237  011D                     	;# 
  2238  011E                     	;# 
  2239  011F                     	;# 
  2240  018C                     	;# 
  2241  018D                     	;# 
  2242  018E                     	;# 
  2243  018F                     	;# 
  2244  0190                     	;# 
  2245  0191                     	;# 
  2246  0191                     	;# 
  2247  0192                     	;# 
  2248  0193                     	;# 
  2249  0193                     	;# 
  2250  0193                     	;# 
  2251  0194                     	;# 
  2252  0195                     	;# 
  2253  0196                     	;# 
  2254  0197                     	;# 
  2255  0199                     	;# 
  2256  0199                     	;# 
  2257  0199                     	;# 
  2258  019A                     	;# 
  2259  019A                     	;# 
  2260  019A                     	;# 
  2261  019B                     	;# 
  2262  019B                     	;# 
  2263  019B                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019C                     	;# 
  2267  019C                     	;# 
  2268  019C                     	;# 
  2269  019D                     	;# 
  2270  019D                     	;# 
  2271  019D                     	;# 
  2272  019E                     	;# 
  2273  019E                     	;# 
  2274  019E                     	;# 
  2275  019F                     	;# 
  2276  019F                     	;# 
  2277  019F                     	;# 
  2278  019F                     	;# 
  2279  019F                     	;# 
  2280  020C                     	;# 
  2281  020D                     	;# 
  2282  020E                     	;# 
  2283  020F                     	;# 
  2284  0210                     	;# 
  2285  0211                     	;# 
  2286  0211                     	;# 
  2287  0212                     	;# 
  2288  0212                     	;# 
  2289  0213                     	;# 
  2290  0213                     	;# 
  2291  0214                     	;# 
  2292  0214                     	;# 
  2293  0215                     	;# 
  2294  0215                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0216                     	;# 
  2298  0216                     	;# 
  2299  0217                     	;# 
  2300  0217                     	;# 
  2301  028C                     	;# 
  2302  028D                     	;# 
  2303  028E                     	;# 
  2304  028F                     	;# 
  2305  0290                     	;# 
  2306  0291                     	;# 
  2307  0291                     	;# 
  2308  0292                     	;# 
  2309  0293                     	;# 
  2310  0298                     	;# 
  2311  0298                     	;# 
  2312  0299                     	;# 
  2313  029A                     	;# 
  2314  030C                     	;# 
  2315  030D                     	;# 
  2316  030E                     	;# 
  2317  030F                     	;# 
  2318  0310                     	;# 
  2319  0311                     	;# 
  2320  0311                     	;# 
  2321  0312                     	;# 
  2322  0313                     	;# 
  2323  038C                     	;# 
  2324  038D                     	;# 
  2325  038E                     	;# 
  2326  038F                     	;# 
  2327  0390                     	;# 
  2328  0391                     	;# 
  2329  0392                     	;# 
  2330  0393                     	;# 
  2331  0394                     	;# 
  2332  0395                     	;# 
  2333  0396                     	;# 
  2334  0397                     	;# 
  2335  0398                     	;# 
  2336  0399                     	;# 
  2337  039D                     	;# 
  2338  039E                     	;# 
  2339  039F                     	;# 
  2340  0511                     	;# 
  2341  0513                     	;# 
  2342  0515                     	;# 
  2343  051A                     	;# 
  2344  0591                     	;# 
  2345  0592                     	;# 
  2346  0592                     	;# 
  2347  0593                     	;# 
  2348  0594                     	;# 
  2349  0594                     	;# 
  2350  0595                     	;# 
  2351  0596                     	;# 
  2352  0596                     	;# 
  2353  0E91                     	;# 
  2354  0E92                     	;# 
  2355  0E93                     	;# 
  2356  0E94                     	;# 
  2357  0E95                     	;# 
  2358  0E96                     	;# 
  2359  0E97                     	;# 
  2360  0E98                     	;# 
  2361  0E99                     	;# 
  2362  0E9A                     	;# 
  2363  0E9B                     	;# 
  2364  0E9C                     	;# 
  2365  0E9D                     	;# 
  2366  0E9E                     	;# 
  2367  0E9F                     	;# 
  2368  0EA0                     	;# 
  2369  0EA1                     	;# 
  2370  0EA1                     	;# 
  2371  0EA2                     	;# 
  2372  0EA3                     	;# 
  2373  0EA3                     	;# 
  2374  0EA4                     	;# 
  2375  0EA5                     	;# 
  2376  0EA5                     	;# 
  2377  0EA6                     	;# 
  2378  0EA7                     	;# 
  2379  0EA7                     	;# 
  2380  0EA8                     	;# 
  2381  0EA9                     	;# 
  2382  0EAA                     	;# 
  2383  0EAB                     	;# 
  2384  0EAC                     	;# 
  2385  0EAD                     	;# 
  2386  0EAE                     	;# 
  2387  0EAF                     	;# 
  2388  0EB1                     	;# 
  2389  0EB2                     	;# 
  2390  0EB3                     	;# 
  2391  0EB4                     	;# 
  2392  0EB5                     	;# 
  2393  0EB6                     	;# 
  2394  0EB7                     	;# 
  2395  0EB8                     	;# 
  2396  0EB9                     	;# 
  2397  0EBA                     	;# 
  2398  0EBB                     	;# 
  2399  0EBC                     	;# 
  2400  0EBD                     	;# 
  2401  0EBE                     	;# 
  2402  0EBF                     	;# 
  2403  0EC0                     	;# 
  2404  0EC1                     	;# 
  2405  0EC1                     	;# 
  2406  0EC2                     	;# 
  2407  0EC3                     	;# 
  2408  0EC3                     	;# 
  2409  0EC4                     	;# 
  2410  0EC5                     	;# 
  2411  0EC5                     	;# 
  2412  0EC6                     	;# 
  2413  0EC7                     	;# 
  2414  0EC7                     	;# 
  2415  0EC8                     	;# 
  2416  0EC9                     	;# 
  2417  0ECA                     	;# 
  2418  0ECB                     	;# 
  2419  0ECC                     	;# 
  2420  0ECD                     	;# 
  2421  0ECE                     	;# 
  2422  0ECF                     	;# 
  2423  0ED1                     	;# 
  2424  0ED2                     	;# 
  2425  0ED3                     	;# 
  2426  0ED4                     	;# 
  2427  0ED5                     	;# 
  2428  0ED6                     	;# 
  2429  0ED7                     	;# 
  2430  0ED8                     	;# 
  2431  0ED9                     	;# 
  2432  0EDA                     	;# 
  2433  0EDB                     	;# 
  2434  0EDC                     	;# 
  2435  0EDD                     	;# 
  2436  0EDE                     	;# 
  2437  0EDF                     	;# 
  2438  0EE0                     	;# 
  2439  0EE1                     	;# 
  2440  0EE1                     	;# 
  2441  0EE2                     	;# 
  2442  0EE3                     	;# 
  2443  0EE3                     	;# 
  2444  0EE4                     	;# 
  2445  0EE5                     	;# 
  2446  0EE5                     	;# 
  2447  0EE6                     	;# 
  2448  0EE7                     	;# 
  2449  0EE7                     	;# 
  2450  0EE8                     	;# 
  2451  0EE9                     	;# 
  2452  0EEA                     	;# 
  2453  0EEB                     	;# 
  2454  0EEC                     	;# 
  2455  0EED                     	;# 
  2456  0EEE                     	;# 
  2457  0EEF                     	;# 
  2458  0F11                     	;# 
  2459  0F12                     	;# 
  2460  0F13                     	;# 
  2461  0F14                     	;# 
  2462  0F15                     	;# 
  2463  0F16                     	;# 
  2464  0F17                     	;# 
  2465  0F18                     	;# 
  2466  0F19                     	;# 
  2467  0F1A                     	;# 
  2468  0F1B                     	;# 
  2469  0F1C                     	;# 
  2470  0F1D                     	;# 
  2471  0F1E                     	;# 
  2472  0F1F                     	;# 
  2473  0F20                     	;# 
  2474  0F21                     	;# 
  2475  0F21                     	;# 
  2476  0F22                     	;# 
  2477  0F23                     	;# 
  2478  0F23                     	;# 
  2479  0F24                     	;# 
  2480  0F25                     	;# 
  2481  0F25                     	;# 
  2482  0F26                     	;# 
  2483  0F27                     	;# 
  2484  0F27                     	;# 
  2485  0F28                     	;# 
  2486  0F29                     	;# 
  2487  0F2A                     	;# 
  2488  0F2B                     	;# 
  2489  0F2C                     	;# 
  2490  0F2D                     	;# 
  2491  0F2E                     	;# 
  2492  0F2F                     	;# 
  2493  0FE4                     	;# 
  2494  0FE5                     	;# 
  2495  0FE6                     	;# 
  2496  0FE7                     	;# 
  2497  0FE8                     	;# 
  2498  0FE9                     	;# 
  2499  0FEA                     	;# 
  2500  0FEB                     	;# 
  2501  0FED                     	;# 
  2502  0FEE                     	;# 
  2503  0FEF                     	;# 
  2504  0000                     	;# 
  2505  0001                     	;# 
  2506  0002                     	;# 
  2507  0003                     	;# 
  2508  0004                     	;# 
  2509  0005                     	;# 
  2510  0006                     	;# 
  2511  0007                     	;# 
  2512  0008                     	;# 
  2513  0009                     	;# 
  2514  000A                     	;# 
  2515  000B                     	;# 
  2516  000C                     	;# 
  2517  000D                     	;# 
  2518  000E                     	;# 
  2519  000F                     	;# 
  2520  0010                     	;# 
  2521  0011                     	;# 
  2522  0012                     	;# 
  2523  0013                     	;# 
  2524  0014                     	;# 
  2525  0015                     	;# 
  2526  0016                     	;# 
  2527  0016                     	;# 
  2528  0017                     	;# 
  2529  0018                     	;# 
  2530  0019                     	;# 
  2531  001A                     	;# 
  2532  001B                     	;# 
  2533  001C                     	;# 
  2534  008C                     	;# 
  2535  008D                     	;# 
  2536  008E                     	;# 
  2537  008F                     	;# 
  2538  0090                     	;# 
  2539  0091                     	;# 
  2540  0092                     	;# 
  2541  0093                     	;# 
  2542  0094                     	;# 
  2543  0095                     	;# 
  2544  0096                     	;# 
  2545  0097                     	;# 
  2546  0098                     	;# 
  2547  0099                     	;# 
  2548  009A                     	;# 
  2549  009B                     	;# 
  2550  009B                     	;# 
  2551  009C                     	;# 
  2552  009D                     	;# 
  2553  009E                     	;# 
  2554  009F                     	;# 
  2555  010C                     	;# 
  2556  010D                     	;# 
  2557  010E                     	;# 
  2558  010F                     	;# 
  2559  0110                     	;# 
  2560  0111                     	;# 
  2561  0112                     	;# 
  2562  0113                     	;# 
  2563  0114                     	;# 
  2564  0115                     	;# 
  2565  0116                     	;# 
  2566  0117                     	;# 
  2567  0118                     	;# 
  2568  0119                     	;# 
  2569  011A                     	;# 
  2570  011B                     	;# 
  2571  011C                     	;# 
  2572  011D                     	;# 
  2573  011D                     	;# 
  2574  011D                     	;# 
  2575  011E                     	;# 
  2576  011F                     	;# 
  2577  018C                     	;# 
  2578  018D                     	;# 
  2579  018E                     	;# 
  2580  018F                     	;# 
  2581  0190                     	;# 
  2582  0191                     	;# 
  2583  0191                     	;# 
  2584  0192                     	;# 
  2585  0193                     	;# 
  2586  0193                     	;# 
  2587  0193                     	;# 
  2588  0194                     	;# 
  2589  0195                     	;# 
  2590  0196                     	;# 
  2591  0197                     	;# 
  2592  0199                     	;# 
  2593  0199                     	;# 
  2594  0199                     	;# 
  2595  019A                     	;# 
  2596  019A                     	;# 
  2597  019A                     	;# 
  2598  019B                     	;# 
  2599  019B                     	;# 
  2600  019B                     	;# 
  2601  019B                     	;# 
  2602  019B                     	;# 
  2603  019C                     	;# 
  2604  019C                     	;# 
  2605  019C                     	;# 
  2606  019D                     	;# 
  2607  019D                     	;# 
  2608  019D                     	;# 
  2609  019E                     	;# 
  2610  019E                     	;# 
  2611  019E                     	;# 
  2612  019F                     	;# 
  2613  019F                     	;# 
  2614  019F                     	;# 
  2615  019F                     	;# 
  2616  019F                     	;# 
  2617  020C                     	;# 
  2618  020D                     	;# 
  2619  020E                     	;# 
  2620  020F                     	;# 
  2621  0210                     	;# 
  2622  0211                     	;# 
  2623  0211                     	;# 
  2624  0212                     	;# 
  2625  0212                     	;# 
  2626  0213                     	;# 
  2627  0213                     	;# 
  2628  0214                     	;# 
  2629  0214                     	;# 
  2630  0215                     	;# 
  2631  0215                     	;# 
  2632  0215                     	;# 
  2633  0215                     	;# 
  2634  0216                     	;# 
  2635  0216                     	;# 
  2636  0217                     	;# 
  2637  0217                     	;# 
  2638  028C                     	;# 
  2639  028D                     	;# 
  2640  028E                     	;# 
  2641  028F                     	;# 
  2642  0290                     	;# 
  2643  0291                     	;# 
  2644  0291                     	;# 
  2645  0292                     	;# 
  2646  0293                     	;# 
  2647  0298                     	;# 
  2648  0298                     	;# 
  2649  0299                     	;# 
  2650  029A                     	;# 
  2651  030C                     	;# 
  2652  030D                     	;# 
  2653  030E                     	;# 
  2654  030F                     	;# 
  2655  0310                     	;# 
  2656  0311                     	;# 
  2657  0311                     	;# 
  2658  0312                     	;# 
  2659  0313                     	;# 
  2660  038C                     	;# 
  2661  038D                     	;# 
  2662  038E                     	;# 
  2663  038F                     	;# 
  2664  0390                     	;# 
  2665  0391                     	;# 
  2666  0392                     	;# 
  2667  0393                     	;# 
  2668  0394                     	;# 
  2669  0395                     	;# 
  2670  0396                     	;# 
  2671  0397                     	;# 
  2672  0398                     	;# 
  2673  0399                     	;# 
  2674  039D                     	;# 
  2675  039E                     	;# 
  2676  039F                     	;# 
  2677  0511                     	;# 
  2678  0513                     	;# 
  2679  0515                     	;# 
  2680  051A                     	;# 
  2681  0591                     	;# 
  2682  0592                     	;# 
  2683  0592                     	;# 
  2684  0593                     	;# 
  2685  0594                     	;# 
  2686  0594                     	;# 
  2687  0595                     	;# 
  2688  0596                     	;# 
  2689  0596                     	;# 
  2690  0E91                     	;# 
  2691  0E92                     	;# 
  2692  0E93                     	;# 
  2693  0E94                     	;# 
  2694  0E95                     	;# 
  2695  0E96                     	;# 
  2696  0E97                     	;# 
  2697  0E98                     	;# 
  2698  0E99                     	;# 
  2699  0E9A                     	;# 
  2700  0E9B                     	;# 
  2701  0E9C                     	;# 
  2702  0E9D                     	;# 
  2703  0E9E                     	;# 
  2704  0E9F                     	;# 
  2705  0EA0                     	;# 
  2706  0EA1                     	;# 
  2707  0EA1                     	;# 
  2708  0EA2                     	;# 
  2709  0EA3                     	;# 
  2710  0EA3                     	;# 
  2711  0EA4                     	;# 
  2712  0EA5                     	;# 
  2713  0EA5                     	;# 
  2714  0EA6                     	;# 
  2715  0EA7                     	;# 
  2716  0EA7                     	;# 
  2717  0EA8                     	;# 
  2718  0EA9                     	;# 
  2719  0EAA                     	;# 
  2720  0EAB                     	;# 
  2721  0EAC                     	;# 
  2722  0EAD                     	;# 
  2723  0EAE                     	;# 
  2724  0EAF                     	;# 
  2725  0EB1                     	;# 
  2726  0EB2                     	;# 
  2727  0EB3                     	;# 
  2728  0EB4                     	;# 
  2729  0EB5                     	;# 
  2730  0EB6                     	;# 
  2731  0EB7                     	;# 
  2732  0EB8                     	;# 
  2733  0EB9                     	;# 
  2734  0EBA                     	;# 
  2735  0EBB                     	;# 
  2736  0EBC                     	;# 
  2737  0EBD                     	;# 
  2738  0EBE                     	;# 
  2739  0EBF                     	;# 
  2740  0EC0                     	;# 
  2741  0EC1                     	;# 
  2742  0EC1                     	;# 
  2743  0EC2                     	;# 
  2744  0EC3                     	;# 
  2745  0EC3                     	;# 
  2746  0EC4                     	;# 
  2747  0EC5                     	;# 
  2748  0EC5                     	;# 
  2749  0EC6                     	;# 
  2750  0EC7                     	;# 
  2751  0EC7                     	;# 
  2752  0EC8                     	;# 
  2753  0EC9                     	;# 
  2754  0ECA                     	;# 
  2755  0ECB                     	;# 
  2756  0ECC                     	;# 
  2757  0ECD                     	;# 
  2758  0ECE                     	;# 
  2759  0ECF                     	;# 
  2760  0ED1                     	;# 
  2761  0ED2                     	;# 
  2762  0ED3                     	;# 
  2763  0ED4                     	;# 
  2764  0ED5                     	;# 
  2765  0ED6                     	;# 
  2766  0ED7                     	;# 
  2767  0ED8                     	;# 
  2768  0ED9                     	;# 
  2769  0EDA                     	;# 
  2770  0EDB                     	;# 
  2771  0EDC                     	;# 
  2772  0EDD                     	;# 
  2773  0EDE                     	;# 
  2774  0EDF                     	;# 
  2775  0EE0                     	;# 
  2776  0EE1                     	;# 
  2777  0EE1                     	;# 
  2778  0EE2                     	;# 
  2779  0EE3                     	;# 
  2780  0EE3                     	;# 
  2781  0EE4                     	;# 
  2782  0EE5                     	;# 
  2783  0EE5                     	;# 
  2784  0EE6                     	;# 
  2785  0EE7                     	;# 
  2786  0EE7                     	;# 
  2787  0EE8                     	;# 
  2788  0EE9                     	;# 
  2789  0EEA                     	;# 
  2790  0EEB                     	;# 
  2791  0EEC                     	;# 
  2792  0EED                     	;# 
  2793  0EEE                     	;# 
  2794  0EEF                     	;# 
  2795  0F11                     	;# 
  2796  0F12                     	;# 
  2797  0F13                     	;# 
  2798  0F14                     	;# 
  2799  0F15                     	;# 
  2800  0F16                     	;# 
  2801  0F17                     	;# 
  2802  0F18                     	;# 
  2803  0F19                     	;# 
  2804  0F1A                     	;# 
  2805  0F1B                     	;# 
  2806  0F1C                     	;# 
  2807  0F1D                     	;# 
  2808  0F1E                     	;# 
  2809  0F1F                     	;# 
  2810  0F20                     	;# 
  2811  0F21                     	;# 
  2812  0F21                     	;# 
  2813  0F22                     	;# 
  2814  0F23                     	;# 
  2815  0F23                     	;# 
  2816  0F24                     	;# 
  2817  0F25                     	;# 
  2818  0F25                     	;# 
  2819  0F26                     	;# 
  2820  0F27                     	;# 
  2821  0F27                     	;# 
  2822  0F28                     	;# 
  2823  0F29                     	;# 
  2824  0F2A                     	;# 
  2825  0F2B                     	;# 
  2826  0F2C                     	;# 
  2827  0F2D                     	;# 
  2828  0F2E                     	;# 
  2829  0F2F                     	;# 
  2830  0FE4                     	;# 
  2831  0FE5                     	;# 
  2832  0FE6                     	;# 
  2833  0FE7                     	;# 
  2834  0FE8                     	;# 
  2835  0FE9                     	;# 
  2836  0FEA                     	;# 
  2837  0FEB                     	;# 
  2838  0FED                     	;# 
  2839  0FEE                     	;# 
  2840  0FEF                     	;# 
  2841                           
  2842                           	psect	idataBANK3
  2843  2BBC                     __pidataBANK3:	
  2844                           
  2845                           ;initializer for measureVoltages@F7587
  2846  2BBC  3400               	retlw	0
  2847  2BBD  3490               	retlw	144
  2848  2BBE  341F               	retlw	31
  2849  2BBF  34C4               	retlw	196
  2850  2BC0  3400               	retlw	0
  2851  2BC1  3490               	retlw	144
  2852                           
  2853                           ;initializer for _tempChannels
  2854  2BC2  340C               	retlw	12
  2855  2BC3  340A               	retlw	10
  2856  2BC4  3408               	retlw	8
  2857  2BC5  3409               	retlw	9
  2858  2BC6  340B               	retlw	11
  2859                           
  2860                           ;initializer for SSD1306_Test@F7528
  2861  2BC7  348D               	retlw	141
  2862  2BC8  3414               	retlw	20
  2863                           
  2864                           ;initializer for _configReg
  2865  2BC9  3400               	retlw	0
  2866  2BCA  3490               	retlw	144
  2867  2BCB  341F               	retlw	31
  2868  2BCC  34C4               	retlw	196
  2869  2BCD  3400               	retlw	0
  2870  2BCE  3490               	retlw	144
  2871                           
  2872                           	psect	stringtext1
  2873  1000                     __pstringtext1:	
  2874  1000                     _OledFont:	
  2875  1000  3400               	retlw	0
  2876  1001  3400               	retlw	0
  2877  1002  3400               	retlw	0
  2878  1003  3400               	retlw	0
  2879  1004  3400               	retlw	0
  2880  1005  3400               	retlw	0
  2881  1006  3400               	retlw	0
  2882  1007  3400               	retlw	0
  2883  1008  3400               	retlw	0
  2884  1009  3400               	retlw	0
  2885  100A  345F               	retlw	95
  2886  100B  3400               	retlw	0
  2887  100C  3400               	retlw	0
  2888  100D  3400               	retlw	0
  2889  100E  3400               	retlw	0
  2890  100F  3400               	retlw	0
  2891  1010  3400               	retlw	0
  2892  1011  3400               	retlw	0
  2893  1012  3407               	retlw	7
  2894  1013  3400               	retlw	0
  2895  1014  3407               	retlw	7
  2896  1015  3400               	retlw	0
  2897  1016  3400               	retlw	0
  2898  1017  3400               	retlw	0
  2899  1018  3400               	retlw	0
  2900  1019  3414               	retlw	20
  2901  101A  347F               	retlw	127
  2902  101B  3414               	retlw	20
  2903  101C  347F               	retlw	127
  2904  101D  3414               	retlw	20
  2905  101E  3400               	retlw	0
  2906  101F  3400               	retlw	0
  2907  1020  3400               	retlw	0
  2908  1021  3424               	retlw	36
  2909  1022  342A               	retlw	42
  2910  1023  347F               	retlw	127
  2911  1024  342A               	retlw	42
  2912  1025  3412               	retlw	18
  2913  1026  3400               	retlw	0
  2914  1027  3400               	retlw	0
  2915  1028  3400               	retlw	0
  2916  1029  3423               	retlw	35
  2917  102A  3413               	retlw	19
  2918  102B  3408               	retlw	8
  2919  102C  3464               	retlw	100
  2920  102D  3462               	retlw	98
  2921  102E  3400               	retlw	0
  2922  102F  3400               	retlw	0
  2923  1030  3400               	retlw	0
  2924  1031  3436               	retlw	54
  2925  1032  3449               	retlw	73
  2926  1033  3455               	retlw	85
  2927  1034  3422               	retlw	34
  2928  1035  3450               	retlw	80
  2929  1036  3400               	retlw	0
  2930  1037  3400               	retlw	0
  2931  1038  3400               	retlw	0
  2932  1039  3400               	retlw	0
  2933  103A  3405               	retlw	5
  2934  103B  3403               	retlw	3
  2935  103C  3400               	retlw	0
  2936  103D  3400               	retlw	0
  2937  103E  3400               	retlw	0
  2938  103F  3400               	retlw	0
  2939  1040  3400               	retlw	0
  2940  1041  341C               	retlw	28
  2941  1042  3422               	retlw	34
  2942  1043  3441               	retlw	65
  2943  1044  3400               	retlw	0
  2944  1045  3400               	retlw	0
  2945  1046  3400               	retlw	0
  2946  1047  3400               	retlw	0
  2947  1048  3400               	retlw	0
  2948  1049  3441               	retlw	65
  2949  104A  3422               	retlw	34
  2950  104B  341C               	retlw	28
  2951  104C  3400               	retlw	0
  2952  104D  3400               	retlw	0
  2953  104E  3400               	retlw	0
  2954  104F  3400               	retlw	0
  2955  1050  3400               	retlw	0
  2956  1051  3408               	retlw	8
  2957  1052  342A               	retlw	42
  2958  1053  341C               	retlw	28
  2959  1054  342A               	retlw	42
  2960  1055  3408               	retlw	8
  2961  1056  3400               	retlw	0
  2962  1057  3400               	retlw	0
  2963  1058  3400               	retlw	0
  2964  1059  3408               	retlw	8
  2965  105A  3408               	retlw	8
  2966  105B  343E               	retlw	62
  2967  105C  3408               	retlw	8
  2968  105D  3408               	retlw	8
  2969  105E  3400               	retlw	0
  2970  105F  3400               	retlw	0
  2971  1060  3400               	retlw	0
  2972  1061  34A0               	retlw	160
  2973  1062  3460               	retlw	96
  2974  1063  3400               	retlw	0
  2975  1064  3400               	retlw	0
  2976  1065  3400               	retlw	0
  2977  1066  3400               	retlw	0
  2978  1067  3400               	retlw	0
  2979  1068  3400               	retlw	0
  2980  1069  3408               	retlw	8
  2981  106A  3408               	retlw	8
  2982  106B  3408               	retlw	8
  2983  106C  3408               	retlw	8
  2984  106D  3408               	retlw	8
  2985  106E  3400               	retlw	0
  2986  106F  3400               	retlw	0
  2987  1070  3400               	retlw	0
  2988  1071  3460               	retlw	96
  2989  1072  3460               	retlw	96
  2990  1073  3400               	retlw	0
  2991  1074  3400               	retlw	0
  2992  1075  3400               	retlw	0
  2993  1076  3400               	retlw	0
  2994  1077  3400               	retlw	0
  2995  1078  3400               	retlw	0
  2996  1079  3420               	retlw	32
  2997  107A  3410               	retlw	16
  2998  107B  3408               	retlw	8
  2999  107C  3404               	retlw	4
  3000  107D  3402               	retlw	2
  3001  107E  3400               	retlw	0
  3002  107F  3400               	retlw	0
  3003  1080  3400               	retlw	0
  3004  1081  343E               	retlw	62
  3005  1082  3451               	retlw	81
  3006  1083  3449               	retlw	73
  3007  1084  3445               	retlw	69
  3008  1085  343E               	retlw	62
  3009  1086  3400               	retlw	0
  3010  1087  3400               	retlw	0
  3011  1088  3400               	retlw	0
  3012  1089  3400               	retlw	0
  3013  108A  3442               	retlw	66
  3014  108B  347F               	retlw	127
  3015  108C  3440               	retlw	64
  3016  108D  3400               	retlw	0
  3017  108E  3400               	retlw	0
  3018  108F  3400               	retlw	0
  3019  1090  3400               	retlw	0
  3020  1091  3462               	retlw	98
  3021  1092  3451               	retlw	81
  3022  1093  3449               	retlw	73
  3023  1094  3449               	retlw	73
  3024  1095  3446               	retlw	70
  3025  1096  3400               	retlw	0
  3026  1097  3400               	retlw	0
  3027  1098  3400               	retlw	0
  3028  1099  3422               	retlw	34
  3029  109A  3441               	retlw	65
  3030  109B  3449               	retlw	73
  3031  109C  3449               	retlw	73
  3032  109D  3436               	retlw	54
  3033  109E  3400               	retlw	0
  3034  109F  3400               	retlw	0
  3035  10A0  3400               	retlw	0
  3036  10A1  3418               	retlw	24
  3037  10A2  3414               	retlw	20
  3038  10A3  3412               	retlw	18
  3039  10A4  347F               	retlw	127
  3040  10A5  3410               	retlw	16
  3041  10A6  3400               	retlw	0
  3042  10A7  3400               	retlw	0
  3043  10A8  3400               	retlw	0
  3044  10A9  3427               	retlw	39
  3045  10AA  3445               	retlw	69
  3046  10AB  3445               	retlw	69
  3047  10AC  3445               	retlw	69
  3048  10AD  3439               	retlw	57
  3049  10AE  3400               	retlw	0
  3050  10AF  3400               	retlw	0
  3051  10B0  3400               	retlw	0
  3052  10B1  343C               	retlw	60
  3053  10B2  344A               	retlw	74
  3054  10B3  3449               	retlw	73
  3055  10B4  3449               	retlw	73
  3056  10B5  3430               	retlw	48
  3057  10B6  3400               	retlw	0
  3058  10B7  3400               	retlw	0
  3059  10B8  3400               	retlw	0
  3060  10B9  3401               	retlw	1
  3061  10BA  3471               	retlw	113
  3062  10BB  3409               	retlw	9
  3063  10BC  3405               	retlw	5
  3064  10BD  3403               	retlw	3
  3065  10BE  3400               	retlw	0
  3066  10BF  3400               	retlw	0
  3067  10C0  3400               	retlw	0
  3068  10C1  3436               	retlw	54
  3069  10C2  3449               	retlw	73
  3070  10C3  3449               	retlw	73
  3071  10C4  3449               	retlw	73
  3072  10C5  3436               	retlw	54
  3073  10C6  3400               	retlw	0
  3074  10C7  3400               	retlw	0
  3075  10C8  3400               	retlw	0
  3076  10C9  3406               	retlw	6
  3077  10CA  3449               	retlw	73
  3078  10CB  3449               	retlw	73
  3079  10CC  3429               	retlw	41
  3080  10CD  341E               	retlw	30
  3081  10CE  3400               	retlw	0
  3082  10CF  3400               	retlw	0
  3083  10D0  3400               	retlw	0
  3084  10D1  3400               	retlw	0
  3085  10D2  3436               	retlw	54
  3086  10D3  3436               	retlw	54
  3087  10D4  3400               	retlw	0
  3088  10D5  3400               	retlw	0
  3089  10D6  3400               	retlw	0
  3090  10D7  3400               	retlw	0
  3091  10D8  3400               	retlw	0
  3092  10D9  3400               	retlw	0
  3093  10DA  34AC               	retlw	172
  3094  10DB  346C               	retlw	108
  3095  10DC  3400               	retlw	0
  3096  10DD  3400               	retlw	0
  3097  10DE  3400               	retlw	0
  3098  10DF  3400               	retlw	0
  3099  10E0  3400               	retlw	0
  3100  10E1  3408               	retlw	8
  3101  10E2  3414               	retlw	20
  3102  10E3  3422               	retlw	34
  3103  10E4  3441               	retlw	65
  3104  10E5  3400               	retlw	0
  3105  10E6  3400               	retlw	0
  3106  10E7  3400               	retlw	0
  3107  10E8  3400               	retlw	0
  3108  10E9  3414               	retlw	20
  3109  10EA  3414               	retlw	20
  3110  10EB  3414               	retlw	20
  3111  10EC  3414               	retlw	20
  3112  10ED  3414               	retlw	20
  3113  10EE  3400               	retlw	0
  3114  10EF  3400               	retlw	0
  3115  10F0  3400               	retlw	0
  3116  10F1  3441               	retlw	65
  3117  10F2  3422               	retlw	34
  3118  10F3  3414               	retlw	20
  3119  10F4  3408               	retlw	8
  3120  10F5  3400               	retlw	0
  3121  10F6  3400               	retlw	0
  3122  10F7  3400               	retlw	0
  3123  10F8  3400               	retlw	0
  3124  10F9  3402               	retlw	2
  3125  10FA  3401               	retlw	1
  3126  10FB  3451               	retlw	81
  3127  10FC  3409               	retlw	9
  3128  10FD  3406               	retlw	6
  3129  10FE  3400               	retlw	0
  3130  10FF  3400               	retlw	0
  3131  1100  3400               	retlw	0
  3132  1101  3432               	retlw	50
  3133  1102  3449               	retlw	73
  3134  1103  3479               	retlw	121
  3135  1104  3441               	retlw	65
  3136  1105  343E               	retlw	62
  3137  1106  3400               	retlw	0
  3138  1107  3400               	retlw	0
  3139  1108  3400               	retlw	0
  3140  1109  347E               	retlw	126
  3141  110A  3409               	retlw	9
  3142  110B  3409               	retlw	9
  3143  110C  3409               	retlw	9
  3144  110D  347E               	retlw	126
  3145  110E  3400               	retlw	0
  3146  110F  3400               	retlw	0
  3147  1110  3400               	retlw	0
  3148  1111  347F               	retlw	127
  3149  1112  3449               	retlw	73
  3150  1113  3449               	retlw	73
  3151  1114  3449               	retlw	73
  3152  1115  3436               	retlw	54
  3153  1116  3400               	retlw	0
  3154  1117  3400               	retlw	0
  3155  1118  3400               	retlw	0
  3156  1119  343E               	retlw	62
  3157  111A  3441               	retlw	65
  3158  111B  3441               	retlw	65
  3159  111C  3441               	retlw	65
  3160  111D  3422               	retlw	34
  3161  111E  3400               	retlw	0
  3162  111F  3400               	retlw	0
  3163  1120  3400               	retlw	0
  3164  1121  347F               	retlw	127
  3165  1122  3441               	retlw	65
  3166  1123  3441               	retlw	65
  3167  1124  3422               	retlw	34
  3168  1125  341C               	retlw	28
  3169  1126  3400               	retlw	0
  3170  1127  3400               	retlw	0
  3171  1128  3400               	retlw	0
  3172  1129  347F               	retlw	127
  3173  112A  3449               	retlw	73
  3174  112B  3449               	retlw	73
  3175  112C  3449               	retlw	73
  3176  112D  3441               	retlw	65
  3177  112E  3400               	retlw	0
  3178  112F  3400               	retlw	0
  3179  1130  3400               	retlw	0
  3180  1131  347F               	retlw	127
  3181  1132  3409               	retlw	9
  3182  1133  3409               	retlw	9
  3183  1134  3409               	retlw	9
  3184  1135  3401               	retlw	1
  3185  1136  3400               	retlw	0
  3186  1137  3400               	retlw	0
  3187  1138  3400               	retlw	0
  3188  1139  343E               	retlw	62
  3189  113A  3441               	retlw	65
  3190  113B  3441               	retlw	65
  3191  113C  3451               	retlw	81
  3192  113D  3472               	retlw	114
  3193  113E  3400               	retlw	0
  3194  113F  3400               	retlw	0
  3195  1140  3400               	retlw	0
  3196  1141  347F               	retlw	127
  3197  1142  3408               	retlw	8
  3198  1143  3408               	retlw	8
  3199  1144  3408               	retlw	8
  3200  1145  347F               	retlw	127
  3201  1146  3400               	retlw	0
  3202  1147  3400               	retlw	0
  3203  1148  3400               	retlw	0
  3204  1149  3441               	retlw	65
  3205  114A  347F               	retlw	127
  3206  114B  3441               	retlw	65
  3207  114C  3400               	retlw	0
  3208  114D  3400               	retlw	0
  3209  114E  3400               	retlw	0
  3210  114F  3400               	retlw	0
  3211  1150  3400               	retlw	0
  3212  1151  3420               	retlw	32
  3213  1152  3440               	retlw	64
  3214  1153  3441               	retlw	65
  3215  1154  343F               	retlw	63
  3216  1155  3401               	retlw	1
  3217  1156  3400               	retlw	0
  3218  1157  3400               	retlw	0
  3219  1158  3400               	retlw	0
  3220  1159  347F               	retlw	127
  3221  115A  3408               	retlw	8
  3222  115B  3414               	retlw	20
  3223  115C  3422               	retlw	34
  3224  115D  3441               	retlw	65
  3225  115E  3400               	retlw	0
  3226  115F  3400               	retlw	0
  3227  1160  3400               	retlw	0
  3228  1161  347F               	retlw	127
  3229  1162  3440               	retlw	64
  3230  1163  3440               	retlw	64
  3231  1164  3440               	retlw	64
  3232  1165  3440               	retlw	64
  3233  1166  3400               	retlw	0
  3234  1167  3400               	retlw	0
  3235  1168  3400               	retlw	0
  3236  1169  347F               	retlw	127
  3237  116A  3402               	retlw	2
  3238  116B  340C               	retlw	12
  3239  116C  3402               	retlw	2
  3240  116D  347F               	retlw	127
  3241  116E  3400               	retlw	0
  3242  116F  3400               	retlw	0
  3243  1170  3400               	retlw	0
  3244  1171  347F               	retlw	127
  3245  1172  3404               	retlw	4
  3246  1173  3408               	retlw	8
  3247  1174  3410               	retlw	16
  3248  1175  347F               	retlw	127
  3249  1176  3400               	retlw	0
  3250  1177  3400               	retlw	0
  3251  1178  3400               	retlw	0
  3252  1179  343E               	retlw	62
  3253  117A  3441               	retlw	65
  3254  117B  3441               	retlw	65
  3255  117C  3441               	retlw	65
  3256  117D  343E               	retlw	62
  3257  117E  3400               	retlw	0
  3258  117F  3400               	retlw	0
  3259  1180  3400               	retlw	0
  3260  1181  347F               	retlw	127
  3261  1182  3409               	retlw	9
  3262  1183  3409               	retlw	9
  3263  1184  3409               	retlw	9
  3264  1185  3406               	retlw	6
  3265  1186  3400               	retlw	0
  3266  1187  3400               	retlw	0
  3267  1188  3400               	retlw	0
  3268  1189  343E               	retlw	62
  3269  118A  3441               	retlw	65
  3270  118B  3451               	retlw	81
  3271  118C  3421               	retlw	33
  3272  118D  345E               	retlw	94
  3273  118E  3400               	retlw	0
  3274  118F  3400               	retlw	0
  3275  1190  3400               	retlw	0
  3276  1191  347F               	retlw	127
  3277  1192  3409               	retlw	9
  3278  1193  3419               	retlw	25
  3279  1194  3429               	retlw	41
  3280  1195  3446               	retlw	70
  3281  1196  3400               	retlw	0
  3282  1197  3400               	retlw	0
  3283  1198  3400               	retlw	0
  3284  1199  3426               	retlw	38
  3285  119A  3449               	retlw	73
  3286  119B  3449               	retlw	73
  3287  119C  3449               	retlw	73
  3288  119D  3432               	retlw	50
  3289  119E  3400               	retlw	0
  3290  119F  3400               	retlw	0
  3291  11A0  3400               	retlw	0
  3292  11A1  3401               	retlw	1
  3293  11A2  3401               	retlw	1
  3294  11A3  347F               	retlw	127
  3295  11A4  3401               	retlw	1
  3296  11A5  3401               	retlw	1
  3297  11A6  3400               	retlw	0
  3298  11A7  3400               	retlw	0
  3299  11A8  3400               	retlw	0
  3300  11A9  343F               	retlw	63
  3301  11AA  3440               	retlw	64
  3302  11AB  3440               	retlw	64
  3303  11AC  3440               	retlw	64
  3304  11AD  343F               	retlw	63
  3305  11AE  3400               	retlw	0
  3306  11AF  3400               	retlw	0
  3307  11B0  3400               	retlw	0
  3308  11B1  341F               	retlw	31
  3309  11B2  3420               	retlw	32
  3310  11B3  3440               	retlw	64
  3311  11B4  3420               	retlw	32
  3312  11B5  341F               	retlw	31
  3313  11B6  3400               	retlw	0
  3314  11B7  3400               	retlw	0
  3315  11B8  3400               	retlw	0
  3316  11B9  343F               	retlw	63
  3317  11BA  3440               	retlw	64
  3318  11BB  3438               	retlw	56
  3319  11BC  3440               	retlw	64
  3320  11BD  343F               	retlw	63
  3321  11BE  3400               	retlw	0
  3322  11BF  3400               	retlw	0
  3323  11C0  3400               	retlw	0
  3324  11C1  3463               	retlw	99
  3325  11C2  3414               	retlw	20
  3326  11C3  3408               	retlw	8
  3327  11C4  3414               	retlw	20
  3328  11C5  3463               	retlw	99
  3329  11C6  3400               	retlw	0
  3330  11C7  3400               	retlw	0
  3331  11C8  3400               	retlw	0
  3332  11C9  3403               	retlw	3
  3333  11CA  3404               	retlw	4
  3334  11CB  3478               	retlw	120
  3335  11CC  3404               	retlw	4
  3336  11CD  3403               	retlw	3
  3337  11CE  3400               	retlw	0
  3338  11CF  3400               	retlw	0
  3339  11D0  3400               	retlw	0
  3340  11D1  3461               	retlw	97
  3341  11D2  3451               	retlw	81
  3342  11D3  3449               	retlw	73
  3343  11D4  3445               	retlw	69
  3344  11D5  3443               	retlw	67
  3345  11D6  3400               	retlw	0
  3346  11D7  3400               	retlw	0
  3347  11D8  3400               	retlw	0
  3348  11D9  347F               	retlw	127
  3349  11DA  3441               	retlw	65
  3350  11DB  3441               	retlw	65
  3351  11DC  3400               	retlw	0
  3352  11DD  3400               	retlw	0
  3353  11DE  3400               	retlw	0
  3354  11DF  3400               	retlw	0
  3355  11E0  3400               	retlw	0
  3356  11E1  3402               	retlw	2
  3357  11E2  3404               	retlw	4
  3358  11E3  3408               	retlw	8
  3359  11E4  3410               	retlw	16
  3360  11E5  3420               	retlw	32
  3361  11E6  3400               	retlw	0
  3362  11E7  3400               	retlw	0
  3363  11E8  3400               	retlw	0
  3364  11E9  3441               	retlw	65
  3365  11EA  3441               	retlw	65
  3366  11EB  347F               	retlw	127
  3367  11EC  3400               	retlw	0
  3368  11ED  3400               	retlw	0
  3369  11EE  3400               	retlw	0
  3370  11EF  3400               	retlw	0
  3371  11F0  3400               	retlw	0
  3372  11F1  3404               	retlw	4
  3373  11F2  3402               	retlw	2
  3374  11F3  3401               	retlw	1
  3375  11F4  3402               	retlw	2
  3376  11F5  3404               	retlw	4
  3377  11F6  3400               	retlw	0
  3378  11F7  3400               	retlw	0
  3379  11F8  3400               	retlw	0
  3380  11F9  3480               	retlw	128
  3381  11FA  3480               	retlw	128
  3382  11FB  3480               	retlw	128
  3383  11FC  3480               	retlw	128
  3384  11FD  3480               	retlw	128
  3385  11FE  3400               	retlw	0
  3386  11FF  3400               	retlw	0
  3387  1200  3400               	retlw	0
  3388  1201  3401               	retlw	1
  3389  1202  3402               	retlw	2
  3390  1203  3404               	retlw	4
  3391  1204  3400               	retlw	0
  3392  1205  3400               	retlw	0
  3393  1206  3400               	retlw	0
  3394  1207  3400               	retlw	0
  3395  1208  3400               	retlw	0
  3396  1209  3420               	retlw	32
  3397  120A  3454               	retlw	84
  3398  120B  3454               	retlw	84
  3399  120C  3454               	retlw	84
  3400  120D  3478               	retlw	120
  3401  120E  3400               	retlw	0
  3402  120F  3400               	retlw	0
  3403  1210  3400               	retlw	0
  3404  1211  347F               	retlw	127
  3405  1212  3448               	retlw	72
  3406  1213  3444               	retlw	68
  3407  1214  3444               	retlw	68
  3408  1215  3438               	retlw	56
  3409  1216  3400               	retlw	0
  3410  1217  3400               	retlw	0
  3411  1218  3400               	retlw	0
  3412  1219  3438               	retlw	56
  3413  121A  3444               	retlw	68
  3414  121B  3444               	retlw	68
  3415  121C  3428               	retlw	40
  3416  121D  3400               	retlw	0
  3417  121E  3400               	retlw	0
  3418  121F  3400               	retlw	0
  3419  1220  3400               	retlw	0
  3420  1221  3438               	retlw	56
  3421  1222  3444               	retlw	68
  3422  1223  3444               	retlw	68
  3423  1224  3448               	retlw	72
  3424  1225  347F               	retlw	127
  3425  1226  3400               	retlw	0
  3426  1227  3400               	retlw	0
  3427  1228  3400               	retlw	0
  3428  1229  3438               	retlw	56
  3429  122A  3454               	retlw	84
  3430  122B  3454               	retlw	84
  3431  122C  3454               	retlw	84
  3432  122D  3418               	retlw	24
  3433  122E  3400               	retlw	0
  3434  122F  3400               	retlw	0
  3435  1230  3400               	retlw	0
  3436  1231  3408               	retlw	8
  3437  1232  347E               	retlw	126
  3438  1233  3409               	retlw	9
  3439  1234  3402               	retlw	2
  3440  1235  3400               	retlw	0
  3441  1236  3400               	retlw	0
  3442  1237  3400               	retlw	0
  3443  1238  3400               	retlw	0
  3444  1239  3418               	retlw	24
  3445  123A  34A4               	retlw	164
  3446  123B  34A4               	retlw	164
  3447  123C  34A4               	retlw	164
  3448  123D  347C               	retlw	124
  3449  123E  3400               	retlw	0
  3450  123F  3400               	retlw	0
  3451  1240  3400               	retlw	0
  3452  1241  347F               	retlw	127
  3453  1242  3408               	retlw	8
  3454  1243  3404               	retlw	4
  3455  1244  3404               	retlw	4
  3456  1245  3478               	retlw	120
  3457  1246  3400               	retlw	0
  3458  1247  3400               	retlw	0
  3459  1248  3400               	retlw	0
  3460  1249  3400               	retlw	0
  3461  124A  347D               	retlw	125
  3462  124B  3400               	retlw	0
  3463  124C  3400               	retlw	0
  3464  124D  3400               	retlw	0
  3465  124E  3400               	retlw	0
  3466  124F  3400               	retlw	0
  3467  1250  3400               	retlw	0
  3468  1251  3480               	retlw	128
  3469  1252  3484               	retlw	132
  3470  1253  347D               	retlw	125
  3471  1254  3400               	retlw	0
  3472  1255  3400               	retlw	0
  3473  1256  3400               	retlw	0
  3474  1257  3400               	retlw	0
  3475  1258  3400               	retlw	0
  3476  1259  347F               	retlw	127
  3477  125A  3410               	retlw	16
  3478  125B  3428               	retlw	40
  3479  125C  3444               	retlw	68
  3480  125D  3400               	retlw	0
  3481  125E  3400               	retlw	0
  3482  125F  3400               	retlw	0
  3483  1260  3400               	retlw	0
  3484  1261  3441               	retlw	65
  3485  1262  347F               	retlw	127
  3486  1263  3440               	retlw	64
  3487  1264  3400               	retlw	0
  3488  1265  3400               	retlw	0
  3489  1266  3400               	retlw	0
  3490  1267  3400               	retlw	0
  3491  1268  3400               	retlw	0
  3492  1269  347C               	retlw	124
  3493  126A  3404               	retlw	4
  3494  126B  3418               	retlw	24
  3495  126C  3404               	retlw	4
  3496  126D  3478               	retlw	120
  3497  126E  3400               	retlw	0
  3498  126F  3400               	retlw	0
  3499  1270  3400               	retlw	0
  3500  1271  347C               	retlw	124
  3501  1272  3408               	retlw	8
  3502  1273  3404               	retlw	4
  3503  1274  347C               	retlw	124
  3504  1275  3400               	retlw	0
  3505  1276  3400               	retlw	0
  3506  1277  3400               	retlw	0
  3507  1278  3400               	retlw	0
  3508  1279  3438               	retlw	56
  3509  127A  3444               	retlw	68
  3510  127B  3444               	retlw	68
  3511  127C  3438               	retlw	56
  3512  127D  3400               	retlw	0
  3513  127E  3400               	retlw	0
  3514  127F  3400               	retlw	0
  3515  1280  3400               	retlw	0
  3516  1281  34FC               	retlw	252
  3517  1282  3424               	retlw	36
  3518  1283  3424               	retlw	36
  3519  1284  3418               	retlw	24
  3520  1285  3400               	retlw	0
  3521  1286  3400               	retlw	0
  3522  1287  3400               	retlw	0
  3523  1288  3400               	retlw	0
  3524  1289  3418               	retlw	24
  3525  128A  3424               	retlw	36
  3526  128B  3424               	retlw	36
  3527  128C  34FC               	retlw	252
  3528  128D  3400               	retlw	0
  3529  128E  3400               	retlw	0
  3530  128F  3400               	retlw	0
  3531  1290  3400               	retlw	0
  3532  1291  3400               	retlw	0
  3533  1292  347C               	retlw	124
  3534  1293  3408               	retlw	8
  3535  1294  3404               	retlw	4
  3536  1295  3400               	retlw	0
  3537  1296  3400               	retlw	0
  3538  1297  3400               	retlw	0
  3539  1298  3400               	retlw	0
  3540  1299  3448               	retlw	72
  3541  129A  3454               	retlw	84
  3542  129B  3454               	retlw	84
  3543  129C  3424               	retlw	36
  3544  129D  3400               	retlw	0
  3545  129E  3400               	retlw	0
  3546  129F  3400               	retlw	0
  3547  12A0  3400               	retlw	0
  3548  12A1  3404               	retlw	4
  3549  12A2  347F               	retlw	127
  3550  12A3  3444               	retlw	68
  3551  12A4  3400               	retlw	0
  3552  12A5  3400               	retlw	0
  3553  12A6  3400               	retlw	0
  3554  12A7  3400               	retlw	0
  3555  12A8  3400               	retlw	0
  3556  12A9  343C               	retlw	60
  3557  12AA  3440               	retlw	64
  3558  12AB  3440               	retlw	64
  3559  12AC  347C               	retlw	124
  3560  12AD  3400               	retlw	0
  3561  12AE  3400               	retlw	0
  3562  12AF  3400               	retlw	0
  3563  12B0  3400               	retlw	0
  3564  12B1  341C               	retlw	28
  3565  12B2  3420               	retlw	32
  3566  12B3  3440               	retlw	64
  3567  12B4  3420               	retlw	32
  3568  12B5  341C               	retlw	28
  3569  12B6  3400               	retlw	0
  3570  12B7  3400               	retlw	0
  3571  12B8  3400               	retlw	0
  3572  12B9  343C               	retlw	60
  3573  12BA  3440               	retlw	64
  3574  12BB  3430               	retlw	48
  3575  12BC  3440               	retlw	64
  3576  12BD  343C               	retlw	60
  3577  12BE  3400               	retlw	0
  3578  12BF  3400               	retlw	0
  3579  12C0  3400               	retlw	0
  3580  12C1  3444               	retlw	68
  3581  12C2  3428               	retlw	40
  3582  12C3  3410               	retlw	16
  3583  12C4  3428               	retlw	40
  3584  12C5  3444               	retlw	68
  3585  12C6  3400               	retlw	0
  3586  12C7  3400               	retlw	0
  3587  12C8  3400               	retlw	0
  3588  12C9  341C               	retlw	28
  3589  12CA  34A0               	retlw	160
  3590  12CB  34A0               	retlw	160
  3591  12CC  347C               	retlw	124
  3592  12CD  3400               	retlw	0
  3593  12CE  3400               	retlw	0
  3594  12CF  3400               	retlw	0
  3595  12D0  3400               	retlw	0
  3596  12D1  3444               	retlw	68
  3597  12D2  3464               	retlw	100
  3598  12D3  3454               	retlw	84
  3599  12D4  344C               	retlw	76
  3600  12D5  3444               	retlw	68
  3601  12D6  3400               	retlw	0
  3602  12D7  3400               	retlw	0
  3603  12D8  3400               	retlw	0
  3604  12D9  3408               	retlw	8
  3605  12DA  3436               	retlw	54
  3606  12DB  3441               	retlw	65
  3607  12DC  3400               	retlw	0
  3608  12DD  3400               	retlw	0
  3609  12DE  3400               	retlw	0
  3610  12DF  3400               	retlw	0
  3611  12E0  3400               	retlw	0
  3612  12E1  3400               	retlw	0
  3613  12E2  347F               	retlw	127
  3614  12E3  3400               	retlw	0
  3615  12E4  3400               	retlw	0
  3616  12E5  3400               	retlw	0
  3617  12E6  3400               	retlw	0
  3618  12E7  3400               	retlw	0
  3619  12E8  3400               	retlw	0
  3620  12E9  3441               	retlw	65
  3621  12EA  3436               	retlw	54
  3622  12EB  3408               	retlw	8
  3623  12EC  3400               	retlw	0
  3624  12ED  3400               	retlw	0
  3625  12EE  3400               	retlw	0
  3626  12EF  3400               	retlw	0
  3627  12F0  3400               	retlw	0
  3628  12F1  3402               	retlw	2
  3629  12F2  3401               	retlw	1
  3630  12F3  3401               	retlw	1
  3631  12F4  3402               	retlw	2
  3632  12F5  3401               	retlw	1
  3633  12F6  3400               	retlw	0
  3634  12F7  3400               	retlw	0
  3635  12F8  3400               	retlw	0
  3636  12F9  3402               	retlw	2
  3637  12FA  3405               	retlw	5
  3638  12FB  3405               	retlw	5
  3639  12FC  3402               	retlw	2
  3640  12FD  3400               	retlw	0
  3641  12FE  3400               	retlw	0
  3642  12FF  3400               	retlw	0
  3643  1300                     __end_of_OledFont:	
  3644                           
  3645                           	psect	stringtext2
  3646  1800                     __pstringtext2:	
  3647  1800                     ltc6804@crc15Table:	
  3648  1800  3400               	retlw	0
  3649  1801  3400               	retlw	0
  3650  1802  3499               	retlw	153
  3651  1803  34C5               	retlw	197
  3652  1804  34AB               	retlw	171
  3653  1805  34CE               	retlw	206
  3654  1806  3432               	retlw	50
  3655  1807  340B               	retlw	11
  3656  1808  34CF               	retlw	207
  3657  1809  34D8               	retlw	216
  3658  180A  3456               	retlw	86
  3659  180B  341D               	retlw	29
  3660  180C  3464               	retlw	100
  3661  180D  3416               	retlw	22
  3662  180E  34FD               	retlw	253
  3663  180F  34D3               	retlw	211
  3664  1810  3407               	retlw	7
  3665  1811  34F4               	retlw	244
  3666  1812  349E               	retlw	158
  3667  1813  3431               	retlw	49
  3668  1814  34AC               	retlw	172
  3669  1815  343A               	retlw	58
  3670  1816  3435               	retlw	53
  3671  1817  34FF               	retlw	255
  3672  1818  34C8               	retlw	200
  3673  1819  342C               	retlw	44
  3674  181A  3451               	retlw	81
  3675  181B  34E9               	retlw	233
  3676  181C  3463               	retlw	99
  3677  181D  34E2               	retlw	226
  3678  181E  34FA               	retlw	250
  3679  181F  3427               	retlw	39
  3680  1820  3497               	retlw	151
  3681  1821  34AD               	retlw	173
  3682  1822  340E               	retlw	14
  3683  1823  3468               	retlw	104
  3684  1824  343C               	retlw	60
  3685  1825  3463               	retlw	99
  3686  1826  34A5               	retlw	165
  3687  1827  34A6               	retlw	166
  3688  1828  3458               	retlw	88
  3689  1829  3475               	retlw	117
  3690  182A  34C1               	retlw	193
  3691  182B  34B0               	retlw	176
  3692  182C  34F3               	retlw	243
  3693  182D  34BB               	retlw	187
  3694  182E  346A               	retlw	106
  3695  182F  347E               	retlw	126
  3696  1830  3490               	retlw	144
  3697  1831  3459               	retlw	89
  3698  1832  3409               	retlw	9
  3699  1833  349C               	retlw	156
  3700  1834  343B               	retlw	59
  3701  1835  3497               	retlw	151
  3702  1836  34A2               	retlw	162
  3703  1837  3452               	retlw	82
  3704  1838  345F               	retlw	95
  3705  1839  3481               	retlw	129
  3706  183A  34C6               	retlw	198
  3707  183B  3444               	retlw	68
  3708  183C  34F4               	retlw	244
  3709  183D  344F               	retlw	79
  3710  183E  346D               	retlw	109
  3711  183F  348A               	retlw	138
  3712  1840  342E               	retlw	46
  3713  1841  345B               	retlw	91
  3714  1842  34B7               	retlw	183
  3715  1843  349E               	retlw	158
  3716  1844  3485               	retlw	133
  3717  1845  3495               	retlw	149
  3718  1846  341C               	retlw	28
  3719  1847  3450               	retlw	80
  3720  1848  34E1               	retlw	225
  3721  1849  3483               	retlw	131
  3722  184A  3478               	retlw	120
  3723  184B  3446               	retlw	70
  3724  184C  344A               	retlw	74
  3725  184D  344D               	retlw	77
  3726  184E  34D3               	retlw	211
  3727  184F  3488               	retlw	136
  3728  1850  3429               	retlw	41
  3729  1851  34AF               	retlw	175
  3730  1852  34B0               	retlw	176
  3731  1853  346A               	retlw	106
  3732  1854  3482               	retlw	130
  3733  1855  3461               	retlw	97
  3734  1856  341B               	retlw	27
  3735  1857  34A4               	retlw	164
  3736  1858  34E6               	retlw	230
  3737  1859  3477               	retlw	119
  3738  185A  347F               	retlw	127
  3739  185B  34B2               	retlw	178
  3740  185C  344D               	retlw	77
  3741  185D  34B9               	retlw	185
  3742  185E  34D4               	retlw	212
  3743  185F  347C               	retlw	124
  3744  1860  34B9               	retlw	185
  3745  1861  34F6               	retlw	246
  3746  1862  3420               	retlw	32
  3747  1863  3433               	retlw	51
  3748  1864  3412               	retlw	18
  3749  1865  3438               	retlw	56
  3750  1866  348B               	retlw	139
  3751  1867  34FD               	retlw	253
  3752  1868  3476               	retlw	118
  3753  1869  342E               	retlw	46
  3754  186A  34EF               	retlw	239
  3755  186B  34EB               	retlw	235
  3756  186C  34DD               	retlw	221
  3757  186D  34E0               	retlw	224
  3758  186E  3444               	retlw	68
  3759  186F  3425               	retlw	37
  3760  1870  34BE               	retlw	190
  3761  1871  3402               	retlw	2
  3762  1872  3427               	retlw	39
  3763  1873  34C7               	retlw	199
  3764  1874  3415               	retlw	21
  3765  1875  34CC               	retlw	204
  3766  1876  348C               	retlw	140
  3767  1877  3409               	retlw	9
  3768  1878  3471               	retlw	113
  3769  1879  34DA               	retlw	218
  3770  187A  34E8               	retlw	232
  3771  187B  341F               	retlw	31
  3772  187C  34DA               	retlw	218
  3773  187D  3414               	retlw	20
  3774  187E  3443               	retlw	67
  3775  187F  34D1               	retlw	209
  3776  1880  34C5               	retlw	197
  3777  1881  34F3               	retlw	243
  3778  1882  345C               	retlw	92
  3779  1883  3436               	retlw	54
  3780  1884  346E               	retlw	110
  3781  1885  343D               	retlw	61
  3782  1886  34F7               	retlw	247
  3783  1887  34F8               	retlw	248
  3784  1888  340A               	retlw	10
  3785  1889  342B               	retlw	43
  3786  188A  3493               	retlw	147
  3787  188B  34EE               	retlw	238
  3788  188C  34A1               	retlw	161
  3789  188D  34E5               	retlw	229
  3790  188E  3438               	retlw	56
  3791  188F  3420               	retlw	32
  3792  1890  34C2               	retlw	194
  3793  1891  3407               	retlw	7
  3794  1892  345B               	retlw	91
  3795  1893  34C2               	retlw	194
  3796  1894  3469               	retlw	105
  3797  1895  34C9               	retlw	201
  3798  1896  34F0               	retlw	240
  3799  1897  340C               	retlw	12
  3800  1898  340D               	retlw	13
  3801  1899  34DF               	retlw	223
  3802  189A  3494               	retlw	148
  3803  189B  341A               	retlw	26
  3804  189C  34A6               	retlw	166
  3805  189D  3411               	retlw	17
  3806  189E  343F               	retlw	63
  3807  189F  34D4               	retlw	212
  3808  18A0  3452               	retlw	82
  3809  18A1  345E               	retlw	94
  3810  18A2  34CB               	retlw	203
  3811  18A3  349B               	retlw	155
  3812  18A4  34F9               	retlw	249
  3813  18A5  3490               	retlw	144
  3814  18A6  3460               	retlw	96
  3815  18A7  3455               	retlw	85
  3816  18A8  349D               	retlw	157
  3817  18A9  3486               	retlw	134
  3818  18AA  3404               	retlw	4
  3819  18AB  3443               	retlw	67
  3820  18AC  3436               	retlw	54
  3821  18AD  3448               	retlw	72
  3822  18AE  34AF               	retlw	175
  3823  18AF  348D               	retlw	141
  3824  18B0  3455               	retlw	85
  3825  18B1  34AA               	retlw	170
  3826  18B2  34CC               	retlw	204
  3827  18B3  346F               	retlw	111
  3828  18B4  34FE               	retlw	254
  3829  18B5  3464               	retlw	100
  3830  18B6  3467               	retlw	103
  3831  18B7  34A1               	retlw	161
  3832  18B8  349A               	retlw	154
  3833  18B9  3472               	retlw	114
  3834  18BA  3403               	retlw	3
  3835  18BB  34B7               	retlw	183
  3836  18BC  3431               	retlw	49
  3837  18BD  34BC               	retlw	188
  3838  18BE  34A8               	retlw	168
  3839  18BF  3479               	retlw	121
  3840  18C0  34EB               	retlw	235
  3841  18C1  34A8               	retlw	168
  3842  18C2  3472               	retlw	114
  3843  18C3  346D               	retlw	109
  3844  18C4  3440               	retlw	64
  3845  18C5  3466               	retlw	102
  3846  18C6  34D9               	retlw	217
  3847  18C7  34A3               	retlw	163
  3848  18C8  3424               	retlw	36
  3849  18C9  3470               	retlw	112
  3850  18CA  34BD               	retlw	189
  3851  18CB  34B5               	retlw	181
  3852  18CC  348F               	retlw	143
  3853  18CD  34BE               	retlw	190
  3854  18CE  3416               	retlw	22
  3855  18CF  347B               	retlw	123
  3856  18D0  34EC               	retlw	236
  3857  18D1  345C               	retlw	92
  3858  18D2  3475               	retlw	117
  3859  18D3  3499               	retlw	153
  3860  18D4  3447               	retlw	71
  3861  18D5  3492               	retlw	146
  3862  18D6  34DE               	retlw	222
  3863  18D7  3457               	retlw	87
  3864  18D8  3423               	retlw	35
  3865  18D9  3484               	retlw	132
  3866  18DA  34BA               	retlw	186
  3867  18DB  3441               	retlw	65
  3868  18DC  3488               	retlw	136
  3869  18DD  344A               	retlw	74
  3870  18DE  3411               	retlw	17
  3871  18DF  348F               	retlw	143
  3872  18E0  347C               	retlw	124
  3873  18E1  3405               	retlw	5
  3874  18E2  34E5               	retlw	229
  3875  18E3  34C0               	retlw	192
  3876  18E4  34D7               	retlw	215
  3877  18E5  34CB               	retlw	203
  3878  18E6  344E               	retlw	78
  3879  18E7  340E               	retlw	14
  3880  18E8  34B3               	retlw	179
  3881  18E9  34DD               	retlw	221
  3882  18EA  342A               	retlw	42
  3883  18EB  3418               	retlw	24
  3884  18EC  3418               	retlw	24
  3885  18ED  3413               	retlw	19
  3886  18EE  3481               	retlw	129
  3887  18EF  34D6               	retlw	214
  3888  18F0  347B               	retlw	123
  3889  18F1  34F1               	retlw	241
  3890  18F2  34E2               	retlw	226
  3891  18F3  3434               	retlw	52
  3892  18F4  34D0               	retlw	208
  3893  18F5  343F               	retlw	63
  3894  18F6  3449               	retlw	73
  3895  18F7  34FA               	retlw	250
  3896  18F8  34B4               	retlw	180
  3897  18F9  3429               	retlw	41
  3898  18FA  342D               	retlw	45
  3899  18FB  34EC               	retlw	236
  3900  18FC  341F               	retlw	31
  3901  18FD  34E7               	retlw	231
  3902  18FE  3486               	retlw	134
  3903  18FF  3422               	retlw	34
  3904  1900  3413               	retlw	19
  3905  1901  34A2               	retlw	162
  3906  1902  348A               	retlw	138
  3907  1903  3467               	retlw	103
  3908  1904  34B8               	retlw	184
  3909  1905  346C               	retlw	108
  3910  1906  3421               	retlw	33
  3911  1907  34A9               	retlw	169
  3912  1908  34DC               	retlw	220
  3913  1909  347A               	retlw	122
  3914  190A  3445               	retlw	69
  3915  190B  34BF               	retlw	191
  3916  190C  3477               	retlw	119
  3917  190D  34B4               	retlw	180
  3918  190E  34EE               	retlw	238
  3919  190F  3471               	retlw	113
  3920  1910  3414               	retlw	20
  3921  1911  3456               	retlw	86
  3922  1912  348D               	retlw	141
  3923  1913  3493               	retlw	147
  3924  1914  34BF               	retlw	191
  3925  1915  3498               	retlw	152
  3926  1916  3426               	retlw	38
  3927  1917  345D               	retlw	93
  3928  1918  34DB               	retlw	219
  3929  1919  348E               	retlw	142
  3930  191A  3442               	retlw	66
  3931  191B  344B               	retlw	75
  3932  191C  3470               	retlw	112
  3933  191D  3440               	retlw	64
  3934  191E  34E9               	retlw	233
  3935  191F  3485               	retlw	133
  3936  1920  3484               	retlw	132
  3937  1921  340F               	retlw	15
  3938  1922  341D               	retlw	29
  3939  1923  34CA               	retlw	202
  3940  1924  342F               	retlw	47
  3941  1925  34C1               	retlw	193
  3942  1926  34B6               	retlw	182
  3943  1927  3404               	retlw	4
  3944  1928  344B               	retlw	75
  3945  1929  34D7               	retlw	215
  3946  192A  34D2               	retlw	210
  3947  192B  3412               	retlw	18
  3948  192C  34E0               	retlw	224
  3949  192D  3419               	retlw	25
  3950  192E  3479               	retlw	121
  3951  192F  34DC               	retlw	220
  3952  1930  3483               	retlw	131
  3953  1931  34FB               	retlw	251
  3954  1932  341A               	retlw	26
  3955  1933  343E               	retlw	62
  3956  1934  3428               	retlw	40
  3957  1935  3435               	retlw	53
  3958  1936  34B1               	retlw	177
  3959  1937  34F0               	retlw	240
  3960  1938  344C               	retlw	76
  3961  1939  3423               	retlw	35
  3962  193A  34D5               	retlw	213
  3963  193B  34E6               	retlw	230
  3964  193C  34E7               	retlw	231
  3965  193D  34ED               	retlw	237
  3966  193E  347E               	retlw	126
  3967  193F  3428               	retlw	40
  3968  1940  343D               	retlw	61
  3969  1941  34F9               	retlw	249
  3970  1942  34A4               	retlw	164
  3971  1943  343C               	retlw	60
  3972  1944  3496               	retlw	150
  3973  1945  3437               	retlw	55
  3974  1946  340F               	retlw	15
  3975  1947  34F2               	retlw	242
  3976  1948  34F2               	retlw	242
  3977  1949  3421               	retlw	33
  3978  194A  346B               	retlw	107
  3979  194B  34E4               	retlw	228
  3980  194C  3459               	retlw	89
  3981  194D  34EF               	retlw	239
  3982  194E  34C0               	retlw	192
  3983  194F  342A               	retlw	42
  3984  1950  343A               	retlw	58
  3985  1951  340D               	retlw	13
  3986  1952  34A3               	retlw	163
  3987  1953  34C8               	retlw	200
  3988  1954  3491               	retlw	145
  3989  1955  34C3               	retlw	195
  3990  1956  3408               	retlw	8
  3991  1957  3406               	retlw	6
  3992  1958  34F5               	retlw	245
  3993  1959  34D5               	retlw	213
  3994  195A  346C               	retlw	108
  3995  195B  3410               	retlw	16
  3996  195C  345E               	retlw	94
  3997  195D  341B               	retlw	27
  3998  195E  34C7               	retlw	199
  3999  195F  34DE               	retlw	222
  4000  1960  34AA               	retlw	170
  4001  1961  3454               	retlw	84
  4002  1962  3433               	retlw	51
  4003  1963  3491               	retlw	145
  4004  1964  3401               	retlw	1
  4005  1965  349A               	retlw	154
  4006  1966  3498               	retlw	152
  4007  1967  345F               	retlw	95
  4008  1968  3465               	retlw	101
  4009  1969  348C               	retlw	140
  4010  196A  34FC               	retlw	252
  4011  196B  3449               	retlw	73
  4012  196C  34CE               	retlw	206
  4013  196D  3442               	retlw	66
  4014  196E  3457               	retlw	87
  4015  196F  3487               	retlw	135
  4016  1970  34AD               	retlw	173
  4017  1971  34A0               	retlw	160
  4018  1972  3434               	retlw	52
  4019  1973  3465               	retlw	101
  4020  1974  3406               	retlw	6
  4021  1975  346E               	retlw	110
  4022  1976  349F               	retlw	159
  4023  1977  34AB               	retlw	171
  4024  1978  3462               	retlw	98
  4025  1979  3478               	retlw	120
  4026  197A  34FB               	retlw	251
  4027  197B  34BD               	retlw	189
  4028  197C  34C9               	retlw	201
  4029  197D  34B6               	retlw	182
  4030  197E  3450               	retlw	80
  4031  197F  3473               	retlw	115
  4032  1980  34D6               	retlw	214
  4033  1981  3451               	retlw	81
  4034  1982  344F               	retlw	79
  4035  1983  3494               	retlw	148
  4036  1984  347D               	retlw	125
  4037  1985  349F               	retlw	159
  4038  1986  34E4               	retlw	228
  4039  1987  345A               	retlw	90
  4040  1988  3419               	retlw	25
  4041  1989  3489               	retlw	137
  4042  198A  3480               	retlw	128
  4043  198B  344C               	retlw	76
  4044  198C  34B2               	retlw	178
  4045  198D  3447               	retlw	71
  4046  198E  342B               	retlw	43
  4047  198F  3482               	retlw	130
  4048  1990  34D1               	retlw	209
  4049  1991  34A5               	retlw	165
  4050  1992  3448               	retlw	72
  4051  1993  3460               	retlw	96
  4052  1994  347A               	retlw	122
  4053  1995  346B               	retlw	107
  4054  1996  34E3               	retlw	227
  4055  1997  34AE               	retlw	174
  4056  1998  341E               	retlw	30
  4057  1999  347D               	retlw	125
  4058  199A  3487               	retlw	135
  4059  199B  34B8               	retlw	184
  4060  199C  34B5               	retlw	181
  4061  199D  34B3               	retlw	179
  4062  199E  342C               	retlw	44
  4063  199F  3476               	retlw	118
  4064  19A0  3441               	retlw	65
  4065  19A1  34FC               	retlw	252
  4066  19A2  34D8               	retlw	216
  4067  19A3  3439               	retlw	57
  4068  19A4  34EA               	retlw	234
  4069  19A5  3432               	retlw	50
  4070  19A6  3473               	retlw	115
  4071  19A7  34F7               	retlw	247
  4072  19A8  348E               	retlw	142
  4073  19A9  3424               	retlw	36
  4074  19AA  3417               	retlw	23
  4075  19AB  34E1               	retlw	225
  4076  19AC  3425               	retlw	37
  4077  19AD  34EA               	retlw	234
  4078  19AE  34BC               	retlw	188
  4079  19AF  342F               	retlw	47
  4080  19B0  3446               	retlw	70
  4081  19B1  3408               	retlw	8
  4082  19B2  34DF               	retlw	223
  4083  19B3  34CD               	retlw	205
  4084  19B4  34ED               	retlw	237
  4085  19B5  34C6               	retlw	198
  4086  19B6  3474               	retlw	116
  4087  19B7  3403               	retlw	3
  4088  19B8  3489               	retlw	137
  4089  19B9  34D0               	retlw	208
  4090  19BA  3410               	retlw	16
  4091  19BB  3415               	retlw	21
  4092  19BC  3422               	retlw	34
  4093  19BD  341E               	retlw	30
  4094  19BE  34BB               	retlw	187
  4095  19BF  34DB               	retlw	219
  4096  19C0  34F8               	retlw	248
  4097  19C1  340A               	retlw	10
  4098  19C2  3461               	retlw	97
  4099  19C3  34CF               	retlw	207
  4100  19C4  3453               	retlw	83
  4101  19C5  34C4               	retlw	196
  4102  19C6  34CA               	retlw	202
  4103  19C7  3401               	retlw	1
  4104  19C8  3437               	retlw	55
  4105  19C9  34D2               	retlw	210
  4106  19CA  34AE               	retlw	174
  4107  19CB  3417               	retlw	23
  4108  19CC  349C               	retlw	156
  4109  19CD  341C               	retlw	28
  4110  19CE  3405               	retlw	5
  4111  19CF  34D9               	retlw	217
  4112  19D0  34FF               	retlw	255
  4113  19D1  34FE               	retlw	254
  4114  19D2  3466               	retlw	102
  4115  19D3  343B               	retlw	59
  4116  19D4  3454               	retlw	84
  4117  19D5  3430               	retlw	48
  4118  19D6  34CD               	retlw	205
  4119  19D7  34F5               	retlw	245
  4120  19D8  3430               	retlw	48
  4121  19D9  3426               	retlw	38
  4122  19DA  34A9               	retlw	169
  4123  19DB  34E3               	retlw	227
  4124  19DC  349B               	retlw	155
  4125  19DD  34E8               	retlw	232
  4126  19DE  3402               	retlw	2
  4127  19DF  342D               	retlw	45
  4128  19E0  346F               	retlw	111
  4129  19E1  34A7               	retlw	167
  4130  19E2  34F6               	retlw	246
  4131  19E3  3462               	retlw	98
  4132  19E4  34C4               	retlw	196
  4133  19E5  3469               	retlw	105
  4134  19E6  345D               	retlw	93
  4135  19E7  34AC               	retlw	172
  4136  19E8  34A0               	retlw	160
  4137  19E9  347F               	retlw	127
  4138  19EA  3439               	retlw	57
  4139  19EB  34BA               	retlw	186
  4140  19EC  340B               	retlw	11
  4141  19ED  34B1               	retlw	177
  4142  19EE  3492               	retlw	146
  4143  19EF  3474               	retlw	116
  4144  19F0  3468               	retlw	104
  4145  19F1  3453               	retlw	83
  4146  19F2  34F1               	retlw	241
  4147  19F3  3496               	retlw	150
  4148  19F4  34C3               	retlw	195
  4149  19F5  349D               	retlw	157
  4150  19F6  345A               	retlw	90
  4151  19F7  3458               	retlw	88
  4152  19F8  34A7               	retlw	167
  4153  19F9  348B               	retlw	139
  4154  19FA  343E               	retlw	62
  4155  19FB  344E               	retlw	78
  4156  19FC  340C               	retlw	12
  4157  19FD  3445               	retlw	69
  4158  19FE  3495               	retlw	149
  4159  19FF  3480               	retlw	128
  4160  1A00                     __end_ofltc6804@crc15Table:	
  4161                           
  4162                           	psect	stringtext3
  4163  1A00                     __pstringtext3:	
  4164  1A00                     _crc15Table:	
  4165  1A00  3400               	retlw	0
  4166  1A01  3400               	retlw	0
  4167  1A02  3499               	retlw	153
  4168  1A03  34C5               	retlw	197
  4169  1A04  34AB               	retlw	171
  4170  1A05  34CE               	retlw	206
  4171  1A06  3432               	retlw	50
  4172  1A07  340B               	retlw	11
  4173  1A08  34CF               	retlw	207
  4174  1A09  34D8               	retlw	216
  4175  1A0A  3456               	retlw	86
  4176  1A0B  341D               	retlw	29
  4177  1A0C  3464               	retlw	100
  4178  1A0D  3416               	retlw	22
  4179  1A0E  34FD               	retlw	253
  4180  1A0F  34D3               	retlw	211
  4181  1A10  3407               	retlw	7
  4182  1A11  34F4               	retlw	244
  4183  1A12  349E               	retlw	158
  4184  1A13  3431               	retlw	49
  4185  1A14  34AC               	retlw	172
  4186  1A15  343A               	retlw	58
  4187  1A16  3435               	retlw	53
  4188  1A17  34FF               	retlw	255
  4189  1A18  34C8               	retlw	200
  4190  1A19  342C               	retlw	44
  4191  1A1A  3451               	retlw	81
  4192  1A1B  34E9               	retlw	233
  4193  1A1C  3463               	retlw	99
  4194  1A1D  34E2               	retlw	226
  4195  1A1E  34FA               	retlw	250
  4196  1A1F  3427               	retlw	39
  4197  1A20  3497               	retlw	151
  4198  1A21  34AD               	retlw	173
  4199  1A22  340E               	retlw	14
  4200  1A23  3468               	retlw	104
  4201  1A24  343C               	retlw	60
  4202  1A25  3463               	retlw	99
  4203  1A26  34A5               	retlw	165
  4204  1A27  34A6               	retlw	166
  4205  1A28  3458               	retlw	88
  4206  1A29  3475               	retlw	117
  4207  1A2A  34C1               	retlw	193
  4208  1A2B  34B0               	retlw	176
  4209  1A2C  34F3               	retlw	243
  4210  1A2D  34BB               	retlw	187
  4211  1A2E  346A               	retlw	106
  4212  1A2F  347E               	retlw	126
  4213  1A30  3490               	retlw	144
  4214  1A31  3459               	retlw	89
  4215  1A32  3409               	retlw	9
  4216  1A33  349C               	retlw	156
  4217  1A34  343B               	retlw	59
  4218  1A35  3497               	retlw	151
  4219  1A36  34A2               	retlw	162
  4220  1A37  3452               	retlw	82
  4221  1A38  345F               	retlw	95
  4222  1A39  3481               	retlw	129
  4223  1A3A  34C6               	retlw	198
  4224  1A3B  3444               	retlw	68
  4225  1A3C  34F4               	retlw	244
  4226  1A3D  344F               	retlw	79
  4227  1A3E  346D               	retlw	109
  4228  1A3F  348A               	retlw	138
  4229  1A40  342E               	retlw	46
  4230  1A41  345B               	retlw	91
  4231  1A42  34B7               	retlw	183
  4232  1A43  349E               	retlw	158
  4233  1A44  3485               	retlw	133
  4234  1A45  3495               	retlw	149
  4235  1A46  341C               	retlw	28
  4236  1A47  3450               	retlw	80
  4237  1A48  34E1               	retlw	225
  4238  1A49  3483               	retlw	131
  4239  1A4A  3478               	retlw	120
  4240  1A4B  3446               	retlw	70
  4241  1A4C  344A               	retlw	74
  4242  1A4D  344D               	retlw	77
  4243  1A4E  34D3               	retlw	211
  4244  1A4F  3488               	retlw	136
  4245  1A50  3429               	retlw	41
  4246  1A51  34AF               	retlw	175
  4247  1A52  34B0               	retlw	176
  4248  1A53  346A               	retlw	106
  4249  1A54  3482               	retlw	130
  4250  1A55  3461               	retlw	97
  4251  1A56  341B               	retlw	27
  4252  1A57  34A4               	retlw	164
  4253  1A58  34E6               	retlw	230
  4254  1A59  3477               	retlw	119
  4255  1A5A  347F               	retlw	127
  4256  1A5B  34B2               	retlw	178
  4257  1A5C  344D               	retlw	77
  4258  1A5D  34B9               	retlw	185
  4259  1A5E  34D4               	retlw	212
  4260  1A5F  347C               	retlw	124
  4261  1A60  34B9               	retlw	185
  4262  1A61  34F6               	retlw	246
  4263  1A62  3420               	retlw	32
  4264  1A63  3433               	retlw	51
  4265  1A64  3412               	retlw	18
  4266  1A65  3438               	retlw	56
  4267  1A66  348B               	retlw	139
  4268  1A67  34FD               	retlw	253
  4269  1A68  3476               	retlw	118
  4270  1A69  342E               	retlw	46
  4271  1A6A  34EF               	retlw	239
  4272  1A6B  34EB               	retlw	235
  4273  1A6C  34DD               	retlw	221
  4274  1A6D  34E0               	retlw	224
  4275  1A6E  3444               	retlw	68
  4276  1A6F  3425               	retlw	37
  4277  1A70  34BE               	retlw	190
  4278  1A71  3402               	retlw	2
  4279  1A72  3427               	retlw	39
  4280  1A73  34C7               	retlw	199
  4281  1A74  3415               	retlw	21
  4282  1A75  34CC               	retlw	204
  4283  1A76  348C               	retlw	140
  4284  1A77  3409               	retlw	9
  4285  1A78  3471               	retlw	113
  4286  1A79  34DA               	retlw	218
  4287  1A7A  34E8               	retlw	232
  4288  1A7B  341F               	retlw	31
  4289  1A7C  34DA               	retlw	218
  4290  1A7D  3414               	retlw	20
  4291  1A7E  3443               	retlw	67
  4292  1A7F  34D1               	retlw	209
  4293  1A80  34C5               	retlw	197
  4294  1A81  34F3               	retlw	243
  4295  1A82  345C               	retlw	92
  4296  1A83  3436               	retlw	54
  4297  1A84  346E               	retlw	110
  4298  1A85  343D               	retlw	61
  4299  1A86  34F7               	retlw	247
  4300  1A87  34F8               	retlw	248
  4301  1A88  340A               	retlw	10
  4302  1A89  342B               	retlw	43
  4303  1A8A  3493               	retlw	147
  4304  1A8B  34EE               	retlw	238
  4305  1A8C  34A1               	retlw	161
  4306  1A8D  34E5               	retlw	229
  4307  1A8E  3438               	retlw	56
  4308  1A8F  3420               	retlw	32
  4309  1A90  34C2               	retlw	194
  4310  1A91  3407               	retlw	7
  4311  1A92  345B               	retlw	91
  4312  1A93  34C2               	retlw	194
  4313  1A94  3469               	retlw	105
  4314  1A95  34C9               	retlw	201
  4315  1A96  34F0               	retlw	240
  4316  1A97  340C               	retlw	12
  4317  1A98  340D               	retlw	13
  4318  1A99  34DF               	retlw	223
  4319  1A9A  3494               	retlw	148
  4320  1A9B  341A               	retlw	26
  4321  1A9C  34A6               	retlw	166
  4322  1A9D  3411               	retlw	17
  4323  1A9E  343F               	retlw	63
  4324  1A9F  34D4               	retlw	212
  4325  1AA0  3452               	retlw	82
  4326  1AA1  345E               	retlw	94
  4327  1AA2  34CB               	retlw	203
  4328  1AA3  349B               	retlw	155
  4329  1AA4  34F9               	retlw	249
  4330  1AA5  3490               	retlw	144
  4331  1AA6  3460               	retlw	96
  4332  1AA7  3455               	retlw	85
  4333  1AA8  349D               	retlw	157
  4334  1AA9  3486               	retlw	134
  4335  1AAA  3404               	retlw	4
  4336  1AAB  3443               	retlw	67
  4337  1AAC  3436               	retlw	54
  4338  1AAD  3448               	retlw	72
  4339  1AAE  34AF               	retlw	175
  4340  1AAF  348D               	retlw	141
  4341  1AB0  3455               	retlw	85
  4342  1AB1  34AA               	retlw	170
  4343  1AB2  34CC               	retlw	204
  4344  1AB3  346F               	retlw	111
  4345  1AB4  34FE               	retlw	254
  4346  1AB5  3464               	retlw	100
  4347  1AB6  3467               	retlw	103
  4348  1AB7  34A1               	retlw	161
  4349  1AB8  349A               	retlw	154
  4350  1AB9  3472               	retlw	114
  4351  1ABA  3403               	retlw	3
  4352  1ABB  34B7               	retlw	183
  4353  1ABC  3431               	retlw	49
  4354  1ABD  34BC               	retlw	188
  4355  1ABE  34A8               	retlw	168
  4356  1ABF  3479               	retlw	121
  4357  1AC0  34EB               	retlw	235
  4358  1AC1  34A8               	retlw	168
  4359  1AC2  3472               	retlw	114
  4360  1AC3  346D               	retlw	109
  4361  1AC4  3440               	retlw	64
  4362  1AC5  3466               	retlw	102
  4363  1AC6  34D9               	retlw	217
  4364  1AC7  34A3               	retlw	163
  4365  1AC8  3424               	retlw	36
  4366  1AC9  3470               	retlw	112
  4367  1ACA  34BD               	retlw	189
  4368  1ACB  34B5               	retlw	181
  4369  1ACC  348F               	retlw	143
  4370  1ACD  34BE               	retlw	190
  4371  1ACE  3416               	retlw	22
  4372  1ACF  347B               	retlw	123
  4373  1AD0  34EC               	retlw	236
  4374  1AD1  345C               	retlw	92
  4375  1AD2  3475               	retlw	117
  4376  1AD3  3499               	retlw	153
  4377  1AD4  3447               	retlw	71
  4378  1AD5  3492               	retlw	146
  4379  1AD6  34DE               	retlw	222
  4380  1AD7  3457               	retlw	87
  4381  1AD8  3423               	retlw	35
  4382  1AD9  3484               	retlw	132
  4383  1ADA  34BA               	retlw	186
  4384  1ADB  3441               	retlw	65
  4385  1ADC  3488               	retlw	136
  4386  1ADD  344A               	retlw	74
  4387  1ADE  3411               	retlw	17
  4388  1ADF  348F               	retlw	143
  4389  1AE0  347C               	retlw	124
  4390  1AE1  3405               	retlw	5
  4391  1AE2  34E5               	retlw	229
  4392  1AE3  34C0               	retlw	192
  4393  1AE4  34D7               	retlw	215
  4394  1AE5  34CB               	retlw	203
  4395  1AE6  344E               	retlw	78
  4396  1AE7  340E               	retlw	14
  4397  1AE8  34B3               	retlw	179
  4398  1AE9  34DD               	retlw	221
  4399  1AEA  342A               	retlw	42
  4400  1AEB  3418               	retlw	24
  4401  1AEC  3418               	retlw	24
  4402  1AED  3413               	retlw	19
  4403  1AEE  3481               	retlw	129
  4404  1AEF  34D6               	retlw	214
  4405  1AF0  347B               	retlw	123
  4406  1AF1  34F1               	retlw	241
  4407  1AF2  34E2               	retlw	226
  4408  1AF3  3434               	retlw	52
  4409  1AF4  34D0               	retlw	208
  4410  1AF5  343F               	retlw	63
  4411  1AF6  3449               	retlw	73
  4412  1AF7  34FA               	retlw	250
  4413  1AF8  34B4               	retlw	180
  4414  1AF9  3429               	retlw	41
  4415  1AFA  342D               	retlw	45
  4416  1AFB  34EC               	retlw	236
  4417  1AFC  341F               	retlw	31
  4418  1AFD  34E7               	retlw	231
  4419  1AFE  3486               	retlw	134
  4420  1AFF  3422               	retlw	34
  4421  1B00  3413               	retlw	19
  4422  1B01  34A2               	retlw	162
  4423  1B02  348A               	retlw	138
  4424  1B03  3467               	retlw	103
  4425  1B04  34B8               	retlw	184
  4426  1B05  346C               	retlw	108
  4427  1B06  3421               	retlw	33
  4428  1B07  34A9               	retlw	169
  4429  1B08  34DC               	retlw	220
  4430  1B09  347A               	retlw	122
  4431  1B0A  3445               	retlw	69
  4432  1B0B  34BF               	retlw	191
  4433  1B0C  3477               	retlw	119
  4434  1B0D  34B4               	retlw	180
  4435  1B0E  34EE               	retlw	238
  4436  1B0F  3471               	retlw	113
  4437  1B10  3414               	retlw	20
  4438  1B11  3456               	retlw	86
  4439  1B12  348D               	retlw	141
  4440  1B13  3493               	retlw	147
  4441  1B14  34BF               	retlw	191
  4442  1B15  3498               	retlw	152
  4443  1B16  3426               	retlw	38
  4444  1B17  345D               	retlw	93
  4445  1B18  34DB               	retlw	219
  4446  1B19  348E               	retlw	142
  4447  1B1A  3442               	retlw	66
  4448  1B1B  344B               	retlw	75
  4449  1B1C  3470               	retlw	112
  4450  1B1D  3440               	retlw	64
  4451  1B1E  34E9               	retlw	233
  4452  1B1F  3485               	retlw	133
  4453  1B20  3484               	retlw	132
  4454  1B21  340F               	retlw	15
  4455  1B22  341D               	retlw	29
  4456  1B23  34CA               	retlw	202
  4457  1B24  342F               	retlw	47
  4458  1B25  34C1               	retlw	193
  4459  1B26  34B6               	retlw	182
  4460  1B27  3404               	retlw	4
  4461  1B28  344B               	retlw	75
  4462  1B29  34D7               	retlw	215
  4463  1B2A  34D2               	retlw	210
  4464  1B2B  3412               	retlw	18
  4465  1B2C  34E0               	retlw	224
  4466  1B2D  3419               	retlw	25
  4467  1B2E  3479               	retlw	121
  4468  1B2F  34DC               	retlw	220
  4469  1B30  3483               	retlw	131
  4470  1B31  34FB               	retlw	251
  4471  1B32  341A               	retlw	26
  4472  1B33  343E               	retlw	62
  4473  1B34  3428               	retlw	40
  4474  1B35  3435               	retlw	53
  4475  1B36  34B1               	retlw	177
  4476  1B37  34F0               	retlw	240
  4477  1B38  344C               	retlw	76
  4478  1B39  3423               	retlw	35
  4479  1B3A  34D5               	retlw	213
  4480  1B3B  34E6               	retlw	230
  4481  1B3C  34E7               	retlw	231
  4482  1B3D  34ED               	retlw	237
  4483  1B3E  347E               	retlw	126
  4484  1B3F  3428               	retlw	40
  4485  1B40  343D               	retlw	61
  4486  1B41  34F9               	retlw	249
  4487  1B42  34A4               	retlw	164
  4488  1B43  343C               	retlw	60
  4489  1B44  3496               	retlw	150
  4490  1B45  3437               	retlw	55
  4491  1B46  340F               	retlw	15
  4492  1B47  34F2               	retlw	242
  4493  1B48  34F2               	retlw	242
  4494  1B49  3421               	retlw	33
  4495  1B4A  346B               	retlw	107
  4496  1B4B  34E4               	retlw	228
  4497  1B4C  3459               	retlw	89
  4498  1B4D  34EF               	retlw	239
  4499  1B4E  34C0               	retlw	192
  4500  1B4F  342A               	retlw	42
  4501  1B50  343A               	retlw	58
  4502  1B51  340D               	retlw	13
  4503  1B52  34A3               	retlw	163
  4504  1B53  34C8               	retlw	200
  4505  1B54  3491               	retlw	145
  4506  1B55  34C3               	retlw	195
  4507  1B56  3408               	retlw	8
  4508  1B57  3406               	retlw	6
  4509  1B58  34F5               	retlw	245
  4510  1B59  34D5               	retlw	213
  4511  1B5A  346C               	retlw	108
  4512  1B5B  3410               	retlw	16
  4513  1B5C  345E               	retlw	94
  4514  1B5D  341B               	retlw	27
  4515  1B5E  34C7               	retlw	199
  4516  1B5F  34DE               	retlw	222
  4517  1B60  34AA               	retlw	170
  4518  1B61  3454               	retlw	84
  4519  1B62  3433               	retlw	51
  4520  1B63  3491               	retlw	145
  4521  1B64  3401               	retlw	1
  4522  1B65  349A               	retlw	154
  4523  1B66  3498               	retlw	152
  4524  1B67  345F               	retlw	95
  4525  1B68  3465               	retlw	101
  4526  1B69  348C               	retlw	140
  4527  1B6A  34FC               	retlw	252
  4528  1B6B  3449               	retlw	73
  4529  1B6C  34CE               	retlw	206
  4530  1B6D  3442               	retlw	66
  4531  1B6E  3457               	retlw	87
  4532  1B6F  3487               	retlw	135
  4533  1B70  34AD               	retlw	173
  4534  1B71  34A0               	retlw	160
  4535  1B72  3434               	retlw	52
  4536  1B73  3465               	retlw	101
  4537  1B74  3406               	retlw	6
  4538  1B75  346E               	retlw	110
  4539  1B76  349F               	retlw	159
  4540  1B77  34AB               	retlw	171
  4541  1B78  3462               	retlw	98
  4542  1B79  3478               	retlw	120
  4543  1B7A  34FB               	retlw	251
  4544  1B7B  34BD               	retlw	189
  4545  1B7C  34C9               	retlw	201
  4546  1B7D  34B6               	retlw	182
  4547  1B7E  3450               	retlw	80
  4548  1B7F  3473               	retlw	115
  4549  1B80  34D6               	retlw	214
  4550  1B81  3451               	retlw	81
  4551  1B82  344F               	retlw	79
  4552  1B83  3494               	retlw	148
  4553  1B84  347D               	retlw	125
  4554  1B85  349F               	retlw	159
  4555  1B86  34E4               	retlw	228
  4556  1B87  345A               	retlw	90
  4557  1B88  3419               	retlw	25
  4558  1B89  3489               	retlw	137
  4559  1B8A  3480               	retlw	128
  4560  1B8B  344C               	retlw	76
  4561  1B8C  34B2               	retlw	178
  4562  1B8D  3447               	retlw	71
  4563  1B8E  342B               	retlw	43
  4564  1B8F  3482               	retlw	130
  4565  1B90  34D1               	retlw	209
  4566  1B91  34A5               	retlw	165
  4567  1B92  3448               	retlw	72
  4568  1B93  3460               	retlw	96
  4569  1B94  347A               	retlw	122
  4570  1B95  346B               	retlw	107
  4571  1B96  34E3               	retlw	227
  4572  1B97  34AE               	retlw	174
  4573  1B98  341E               	retlw	30
  4574  1B99  347D               	retlw	125
  4575  1B9A  3487               	retlw	135
  4576  1B9B  34B8               	retlw	184
  4577  1B9C  34B5               	retlw	181
  4578  1B9D  34B3               	retlw	179
  4579  1B9E  342C               	retlw	44
  4580  1B9F  3476               	retlw	118
  4581  1BA0  3441               	retlw	65
  4582  1BA1  34FC               	retlw	252
  4583  1BA2  34D8               	retlw	216
  4584  1BA3  3439               	retlw	57
  4585  1BA4  34EA               	retlw	234
  4586  1BA5  3432               	retlw	50
  4587  1BA6  3473               	retlw	115
  4588  1BA7  34F7               	retlw	247
  4589  1BA8  348E               	retlw	142
  4590  1BA9  3424               	retlw	36
  4591  1BAA  3417               	retlw	23
  4592  1BAB  34E1               	retlw	225
  4593  1BAC  3425               	retlw	37
  4594  1BAD  34EA               	retlw	234
  4595  1BAE  34BC               	retlw	188
  4596  1BAF  342F               	retlw	47
  4597  1BB0  3446               	retlw	70
  4598  1BB1  3408               	retlw	8
  4599  1BB2  34DF               	retlw	223
  4600  1BB3  34CD               	retlw	205
  4601  1BB4  34ED               	retlw	237
  4602  1BB5  34C6               	retlw	198
  4603  1BB6  3474               	retlw	116
  4604  1BB7  3403               	retlw	3
  4605  1BB8  3489               	retlw	137
  4606  1BB9  34D0               	retlw	208
  4607  1BBA  3410               	retlw	16
  4608  1BBB  3415               	retlw	21
  4609  1BBC  3422               	retlw	34
  4610  1BBD  341E               	retlw	30
  4611  1BBE  34BB               	retlw	187
  4612  1BBF  34DB               	retlw	219
  4613  1BC0  34F8               	retlw	248
  4614  1BC1  340A               	retlw	10
  4615  1BC2  3461               	retlw	97
  4616  1BC3  34CF               	retlw	207
  4617  1BC4  3453               	retlw	83
  4618  1BC5  34C4               	retlw	196
  4619  1BC6  34CA               	retlw	202
  4620  1BC7  3401               	retlw	1
  4621  1BC8  3437               	retlw	55
  4622  1BC9  34D2               	retlw	210
  4623  1BCA  34AE               	retlw	174
  4624  1BCB  3417               	retlw	23
  4625  1BCC  349C               	retlw	156
  4626  1BCD  341C               	retlw	28
  4627  1BCE  3405               	retlw	5
  4628  1BCF  34D9               	retlw	217
  4629  1BD0  34FF               	retlw	255
  4630  1BD1  34FE               	retlw	254
  4631  1BD2  3466               	retlw	102
  4632  1BD3  343B               	retlw	59
  4633  1BD4  3454               	retlw	84
  4634  1BD5  3430               	retlw	48
  4635  1BD6  34CD               	retlw	205
  4636  1BD7  34F5               	retlw	245
  4637  1BD8  3430               	retlw	48
  4638  1BD9  3426               	retlw	38
  4639  1BDA  34A9               	retlw	169
  4640  1BDB  34E3               	retlw	227
  4641  1BDC  349B               	retlw	155
  4642  1BDD  34E8               	retlw	232
  4643  1BDE  3402               	retlw	2
  4644  1BDF  342D               	retlw	45
  4645  1BE0  346F               	retlw	111
  4646  1BE1  34A7               	retlw	167
  4647  1BE2  34F6               	retlw	246
  4648  1BE3  3462               	retlw	98
  4649  1BE4  34C4               	retlw	196
  4650  1BE5  3469               	retlw	105
  4651  1BE6  345D               	retlw	93
  4652  1BE7  34AC               	retlw	172
  4653  1BE8  34A0               	retlw	160
  4654  1BE9  347F               	retlw	127
  4655  1BEA  3439               	retlw	57
  4656  1BEB  34BA               	retlw	186
  4657  1BEC  340B               	retlw	11
  4658  1BED  34B1               	retlw	177
  4659  1BEE  3492               	retlw	146
  4660  1BEF  3474               	retlw	116
  4661  1BF0  3468               	retlw	104
  4662  1BF1  3453               	retlw	83
  4663  1BF2  34F1               	retlw	241
  4664  1BF3  3496               	retlw	150
  4665  1BF4  34C3               	retlw	195
  4666  1BF5  349D               	retlw	157
  4667  1BF6  345A               	retlw	90
  4668  1BF7  3458               	retlw	88
  4669  1BF8  34A7               	retlw	167
  4670  1BF9  348B               	retlw	139
  4671  1BFA  343E               	retlw	62
  4672  1BFB  344E               	retlw	78
  4673  1BFC  340C               	retlw	12
  4674  1BFD  3445               	retlw	69
  4675  1BFE  3495               	retlw	149
  4676  1BFF  3480               	retlw	128
  4677  1C00                     __end_of_crc15Table:	
  4678                           
  4679                           	psect	stringtext4
  4680  3000                     __pstringtext4:	
  4681  3000                     __powers_:	
  4682  3000  3400               	retlw	0
  4683  3001  3400               	retlw	0
  4684  3002  3480               	retlw	128
  4685  3003  343F               	retlw	63
  4686  3004  3400               	retlw	0
  4687  3005  3400               	retlw	0
  4688  3006  3420               	retlw	32
  4689  3007  3441               	retlw	65
  4690  3008  3400               	retlw	0
  4691  3009  3400               	retlw	0
  4692  300A  34C8               	retlw	200
  4693  300B  3442               	retlw	66
  4694  300C  3400               	retlw	0
  4695  300D  3400               	retlw	0
  4696  300E  347A               	retlw	122
  4697  300F  3444               	retlw	68
  4698  3010  3400               	retlw	0
  4699  3011  3440               	retlw	64
  4700  3012  341C               	retlw	28
  4701  3013  3446               	retlw	70
  4702  3014  3400               	retlw	0
  4703  3015  3450               	retlw	80
  4704  3016  34C3               	retlw	195
  4705  3017  3447               	retlw	71
  4706  3018  3400               	retlw	0
  4707  3019  3424               	retlw	36
  4708  301A  3474               	retlw	116
  4709  301B  3449               	retlw	73
  4710  301C  3480               	retlw	128
  4711  301D  3496               	retlw	150
  4712  301E  3418               	retlw	24
  4713  301F  344B               	retlw	75
  4714  3020  3420               	retlw	32
  4715  3021  34BC               	retlw	188
  4716  3022  34BE               	retlw	190
  4717  3023  344C               	retlw	76
  4718  3024  3428               	retlw	40
  4719  3025  346B               	retlw	107
  4720  3026  346E               	retlw	110
  4721  3027  344E               	retlw	78
  4722  3028  34F9               	retlw	249
  4723  3029  3402               	retlw	2
  4724  302A  3415               	retlw	21
  4725  302B  3450               	retlw	80
  4726  302C  34EC               	retlw	236
  4727  302D  3478               	retlw	120
  4728  302E  34AD               	retlw	173
  4729  302F  3460               	retlw	96
  4730  3030  34CA               	retlw	202
  4731  3031  34F2               	retlw	242
  4732  3032  3449               	retlw	73
  4733  3033  3471               	retlw	113
  4734  3034                     __end_of__powers_:	
  4735                           
  4736                           	psect	stringtext5
  4737  3034                     __pstringtext5:	
  4738  3034                     __npowers_:	
  4739  3034  3400               	retlw	0
  4740  3035  3400               	retlw	0
  4741  3036  3480               	retlw	128
  4742  3037  343F               	retlw	63
  4743  3038  34CD               	retlw	205
  4744  3039  34CC               	retlw	204
  4745  303A  34CC               	retlw	204
  4746  303B  343D               	retlw	61
  4747  303C  340A               	retlw	10
  4748  303D  34D7               	retlw	215
  4749  303E  3423               	retlw	35
  4750  303F  343C               	retlw	60
  4751  3040  346F               	retlw	111
  4752  3041  3412               	retlw	18
  4753  3042  3483               	retlw	131
  4754  3043  343A               	retlw	58
  4755  3044  3417               	retlw	23
  4756  3045  34B7               	retlw	183
  4757  3046  34D1               	retlw	209
  4758  3047  3438               	retlw	56
  4759  3048  34AC               	retlw	172
  4760  3049  34C5               	retlw	197
  4761  304A  3427               	retlw	39
  4762  304B  3437               	retlw	55
  4763  304C  34BD               	retlw	189
  4764  304D  3437               	retlw	55
  4765  304E  3486               	retlw	134
  4766  304F  3435               	retlw	53
  4767  3050  3495               	retlw	149
  4768  3051  34BF               	retlw	191
  4769  3052  34D6               	retlw	214
  4770  3053  3433               	retlw	51
  4771  3054  3477               	retlw	119
  4772  3055  34CC               	retlw	204
  4773  3056  342B               	retlw	43
  4774  3057  3432               	retlw	50
  4775  3058  345F               	retlw	95
  4776  3059  3470               	retlw	112
  4777  305A  3489               	retlw	137
  4778  305B  3430               	retlw	48
  4779  305C  34FF               	retlw	255
  4780  305D  34E6               	retlw	230
  4781  305E  34DB               	retlw	219
  4782  305F  342E               	retlw	46
  4783  3060  3408               	retlw	8
  4784  3061  34E5               	retlw	229
  4785  3062  343C               	retlw	60
  4786  3063  341E               	retlw	30
  4787  3064  3460               	retlw	96
  4788  3065  3442               	retlw	66
  4789  3066  34A2               	retlw	162
  4790  3067  340D               	retlw	13
  4791  3068                     __end_of__npowers_:	
  4792                           
  4793                           	psect	stringtext6
  4794  3068                     __pstringtext6:	
  4795  3068                     _temperatures:	
  4796  3068  3494               	retlw	148
  4797  3069  3476               	retlw	118
  4798  306A  3467               	retlw	103
  4799  306B  345C               	retlw	92
  4800  306C  3454               	retlw	84
  4801  306D  344E               	retlw	78
  4802  306E  3448               	retlw	72
  4803  306F  3443               	retlw	67
  4804  3070  343F               	retlw	63
  4805  3071  343C               	retlw	60
  4806  3072  3438               	retlw	56
  4807  3073  3435               	retlw	53
  4808  3074  3433               	retlw	51
  4809  3075  3430               	retlw	48
  4810  3076  342D               	retlw	45
  4811  3077  342B               	retlw	43
  4812  3078  3429               	retlw	41
  4813  3079  3427               	retlw	39
  4814  307A  3425               	retlw	37
  4815  307B  3422               	retlw	34
  4816  307C  3421               	retlw	33
  4817  307D  341F               	retlw	31
  4818  307E  341D               	retlw	29
  4819  307F  341B               	retlw	27
  4820  3080  3419               	retlw	25
  4821  3081  3417               	retlw	23
  4822  3082  3416               	retlw	22
  4823  3083  3414               	retlw	20
  4824  3084  3412               	retlw	18
  4825  3085  3410               	retlw	16
  4826  3086  340F               	retlw	15
  4827  3087  340D               	retlw	13
  4828  3088  340B               	retlw	11
  4829  3089  3409               	retlw	9
  4830  308A  3407               	retlw	7
  4831  308B  3405               	retlw	5
  4832  308C  3403               	retlw	3
  4833  308D  3401               	retlw	1
  4834  308E  34FF               	retlw	255
  4835  308F  34FD               	retlw	253
  4836  3090  34FB               	retlw	251
  4837  3091  34F8               	retlw	248
  4838  3092  34F5               	retlw	245
  4839  3093  34F2               	retlw	242
  4840  3094  34EF               	retlw	239
  4841  3095  34EB               	retlw	235
  4842  3096  34E6               	retlw	230
  4843  3097  34E0               	retlw	224
  4844  3098  34D6               	retlw	214
  4845  3099  34EF               	retlw	239
  4846  309A                     __end_of_temperatures:	
  4847                           
  4848                           	psect	stringtext7
  4849  309A                     __pstringtext7:	
  4850  309A                     _dpowers:	
  4851  309A  3401               	retlw	1
  4852  309B  3400               	retlw	0
  4853  309C  3400               	retlw	0
  4854  309D  3400               	retlw	0
  4855  309E  340A               	retlw	10
  4856  309F  3400               	retlw	0
  4857  30A0  3400               	retlw	0
  4858  30A1  3400               	retlw	0
  4859  30A2  3464               	retlw	100
  4860  30A3  3400               	retlw	0
  4861  30A4  3400               	retlw	0
  4862  30A5  3400               	retlw	0
  4863  30A6  34E8               	retlw	232
  4864  30A7  3403               	retlw	3
  4865  30A8  3400               	retlw	0
  4866  30A9  3400               	retlw	0
  4867  30AA  3410               	retlw	16
  4868  30AB  3427               	retlw	39
  4869  30AC  3400               	retlw	0
  4870  30AD  3400               	retlw	0
  4871  30AE  34A0               	retlw	160
  4872  30AF  3486               	retlw	134
  4873  30B0  3401               	retlw	1
  4874  30B1  3400               	retlw	0
  4875  30B2  3440               	retlw	64
  4876  30B3  3442               	retlw	66
  4877  30B4  340F               	retlw	15
  4878  30B5  3400               	retlw	0
  4879  30B6  3480               	retlw	128
  4880  30B7  3496               	retlw	150
  4881  30B8  3498               	retlw	152
  4882  30B9  3400               	retlw	0
  4883  30BA  3400               	retlw	0
  4884  30BB  34E1               	retlw	225
  4885  30BC  34F5               	retlw	245
  4886  30BD  3405               	retlw	5
  4887  30BE  3400               	retlw	0
  4888  30BF  34CA               	retlw	202
  4889  30C0  349A               	retlw	154
  4890  30C1  343B               	retlw	59
  4891  30C2                     __end_of_dpowers:	
  4892                           
  4893                           	psect	stringtext8
  4894  3159                     __pstringtext8:	
  4895  3159                     _t0:	
  4896  3159  3433               	retlw	51
  4897  315A  3413               	retlw	19
  4898  315B  3495               	retlw	149
  4899  315C  3443               	retlw	67
  4900  315D                     __end_of_t0:	
  4901                           
  4902                           	psect	stringtext9
  4903  315D                     __pstringtext9:	
  4904  315D                     _balanceThreshold:	
  4905  315D  3400               	retlw	0
  4906  315E  3400               	retlw	0
  4907  315F                     __end_of_balanceThreshold:	
  4908                           
  4909                           	psect	stringtext10
  4910  315F                     __pstringtext10:	
  4911  315F                     _Beta:	
  4912  315F  3489               	retlw	137
  4913  3160  340F               	retlw	15
  4914  3161                     __end_of_Beta:	
  4915                           
  4916                           	psect	stringtext11
  4917  3161                     __pstringtext11:	
  4918  3161                     LTC6804_rdcfg@BYTES_IN_REG:	
  4919  3161  3408               	retlw	8
  4920  3162                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4921                           
  4922                           	psect	stringtext12
  4923  3162                     __pstringtext12:	
  4924  3162                     LTC6804_wrcfg@BYTES_IN_REG:	
  4925  3162  3406               	retlw	6
  4926  3163                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4927                           
  4928                           	psect	stringtext13
  4929  3163                     __pstringtext13:	
  4930  3163                     LTC6804_rdaux_reg@REG_LEN:	
  4931  3163  3408               	retlw	8
  4932  3164                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4933                           
  4934                           	psect	stringtext14
  4935  3164                     __pstringtext14:	
  4936  3164                     LTC6804_rdaux@GPIO_IN_REG:	
  4937  3164  3403               	retlw	3
  4938  3165                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4939                           
  4940                           	psect	stringtext15
  4941  3165                     __pstringtext15:	
  4942  3165                     LTC6804_rdaux@BYT_IN_REG:	
  4943  3165  3406               	retlw	6
  4944  3166                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4945                           
  4946                           	psect	stringtext16
  4947  3166                     __pstringtext16:	
  4948  3166                     LTC6804_rdaux@NUM_RX_BYT:	
  4949  3166  3408               	retlw	8
  4950  3167                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4951                           
  4952                           	psect	stringtext17
  4953  3167                     __pstringtext17:	
  4954  3167                     LTC6804_rdcv_reg@REG_LEN:	
  4955  3167  3408               	retlw	8
  4956  3168                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4957                           
  4958                           	psect	stringtext18
  4959  3168                     __pstringtext18:	
  4960  3168                     LTC6804_rdcv@CELL_IN_REG:	
  4961  3168  3403               	retlw	3
  4962  3169                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4963                           
  4964                           	psect	stringtext19
  4965  3169                     __pstringtext19:	
  4966  3169                     LTC6804_rdcv@BYT_IN_REG:	
  4967  3169  3406               	retlw	6
  4968  316A                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4969                           
  4970                           	psect	stringtext20
  4971  30C2                     __pstringtext20:	
  4972  30C2                     LTC6804_rdcv@NUM_RX_BYT:	
  4973  30C2  3408               	retlw	8
  4974  30C3                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4975  0012                     _PIR2bits	set	18
  4976  001C                     _T2CON	set	28
  4977  001B                     _PR2	set	27
  4978  0011                     _PIR1bits	set	17
  4979  000B                     _INTCONbits	set	11
  4980  0092                     _PIE2bits	set	146
  4981  0095                     _OPTION_REG	set	149
  4982  009F                     _ADCON2	set	159
  4983  009E                     _ADCON1	set	158
  4984  009D                     _ADCON0	set	157
  4985  009B                     _ADRESL	set	155
  4986  009C                     _ADRESH	set	156
  4987  009D                     _ADCON0bits	set	157
  4988  008E                     _TRISCbits	set	142
  4989  008D                     _TRISBbits	set	141
  4990  008C                     _TRISAbits	set	140
  4991  008F                     _TRISDbits	set	143
  4992  0091                     _PIE1bits	set	145
  4993  011D                     _APFCON1bits	set	285
  4994  010D                     _LATBbits	set	269
  4995  010C                     _LATAbits	set	268
  4996  010F                     _LATDbits	set	271
  4997  019B                     _SPBRGL	set	411
  4998  019C                     _SPBRGH	set	412
  4999  019D                     _RCSTAbits	set	413
  5000  019E                     _TXSTAbits	set	414
  5001  018F                     _ANSELD	set	399
  5002  018D                     _ANSELB	set	397
  5003  018C                     _ANSELA	set	396
  5004  019A                     _TXREG	set	410
  5005  0211                     _SSP1BUF	set	529
  5006  0215                     _SSP1CON1bits	set	533
  5007  0215                     _SSP1CON1	set	533
  5008  0214                     _SSP1STATbits	set	532
  5009  0217                     _SSP1CON3bits	set	535
  5010  0214                     _SSPSTAT	set	532
  5011  0212                     _SSPADD	set	530
  5012  0215                     _SSPCON1	set	533
  5013  0214                     _SSPSTATbits	set	532
  5014  0216                     _SSPCON2bits	set	534
  5015  0211                     _SSPBUF	set	529
  5016  020F                     _WPUD	set	527
  5017  029A                     _CCP2CON	set	666
  5018  30C3                     STR_3:	
  5019  30C3  344D               	retlw	77	;'M'
  5020  30C4  3461               	retlw	97	;'a'
  5021  30C5  3478               	retlw	120	;'x'
  5022  30C6  3420               	retlw	32	;' '
  5023  30C7  3444               	retlw	68	;'D'
  5024  30C8  3469               	retlw	105	;'i'
  5025  30C9  3466               	retlw	102	;'f'
  5026  30CA  3466               	retlw	102	;'f'
  5027  30CB  3465               	retlw	101	;'e'
  5028  30CC  3472               	retlw	114	;'r'
  5029  30CD  3465               	retlw	101	;'e'
  5030  30CE  346E               	retlw	110	;'n'
  5031  30CF  3463               	retlw	99	;'c'
  5032  30D0  3465               	retlw	101	;'e'
  5033  30D1  3420               	retlw	32	;' '
  5034  30D2  343D               	retlw	61	;'='
  5035  30D3  3420               	retlw	32	;' '
  5036  30D4  3456               	retlw	86	;'V'
  5037  30D5  3425               	retlw	37	;'%'
  5038  30D6  3469               	retlw	105	;'i'
  5039  30D7  3420               	retlw	32	;' '
  5040  30D8  3426               	retlw	38	;'&'
  5041  30D9  3420               	retlw	32	;' '
  5042  30DA  3456               	retlw	86	;'V'
  5043  30DB  3425               	retlw	37	;'%'
  5044  30DC  3469               	retlw	105	;'i'
  5045  30DD  3420               	retlw	32	;' '
  5046  30DE  3440               	retlw	64	;'@'
  5047  30DF  3420               	retlw	32	;' '
  5048  30E0  3425               	retlw	37	;'%'
  5049  30E1  3430               	retlw	48	;'0'
  5050  30E2  342E               	retlw	46	;'.'
  5051  30E3  3434               	retlw	52	;'4'
  5052  30E4  3466               	retlw	102	;'f'
  5053  30E5  3456               	retlw	86	;'V'
  5054  30E6  340A               	retlw	10
  5055  30E7  340D               	retlw	13
  5056  30E8  3400               	retlw	0
  5057                           
  5058                           	psect	stringtext21
  5059  30E9                     __pstringtext21:	
  5060  30E9                     STR_2:	
  5061  30E9  3450               	retlw	80	;'P'
  5062  30EA  3461               	retlw	97	;'a'
  5063  30EB  3463               	retlw	99	;'c'
  5064  30EC  346B               	retlw	107	;'k'
  5065  30ED  3420               	retlw	32	;' '
  5066  30EE  3456               	retlw	86	;'V'
  5067  30EF  346F               	retlw	111	;'o'
  5068  30F0  346C               	retlw	108	;'l'
  5069  30F1  3474               	retlw	116	;'t'
  5070  30F2  3461               	retlw	97	;'a'
  5071  30F3  3467               	retlw	103	;'g'
  5072  30F4  3465               	retlw	101	;'e'
  5073  30F5  343A               	retlw	58	;':'
  5074  30F6  3420               	retlw	32	;' '
  5075  30F7  3425               	retlw	37	;'%'
  5076  30F8  3430               	retlw	48	;'0'
  5077  30F9  342E               	retlw	46	;'.'
  5078  30FA  3434               	retlw	52	;'4'
  5079  30FB  3466               	retlw	102	;'f'
  5080  30FC  3456               	retlw	86	;'V'
  5081  30FD  340A               	retlw	10
  5082  30FE  340D               	retlw	13
  5083  30FF  3400               	retlw	0
  5084                           
  5085                           	psect	stringtext22
  5086  3100                     __pstringtext22:	
  5087  3100                     STR_6:	
  5088  3100  3448               	retlw	72	;'H'
  5089  3101  3469               	retlw	105	;'i'
  5090  3102  3467               	retlw	103	;'g'
  5091  3103  3468               	retlw	104	;'h'
  5092  3104  3465               	retlw	101	;'e'
  5093  3105  3473               	retlw	115	;'s'
  5094  3106  3474               	retlw	116	;'t'
  5095  3107  3420               	retlw	32	;' '
  5096  3108  3454               	retlw	84	;'T'
  5097  3109  3465               	retlw	101	;'e'
  5098  310A  346D               	retlw	109	;'m'
  5099  310B  3470               	retlw	112	;'p'
  5100  310C  343A               	retlw	58	;':'
  5101  310D  3420               	retlw	32	;' '
  5102  310E  3425               	retlw	37	;'%'
  5103  310F  3469               	retlw	105	;'i'
  5104  3110  3443               	retlw	67	;'C'
  5105  3111  340A               	retlw	10
  5106  3112  340D               	retlw	13
  5107  3113  3400               	retlw	0
  5108                           
  5109                           	psect	stringtext23
  5110  3114                     __pstringtext23:	
  5111  3114                     STR_4:	
  5112  3114  3463               	retlw	99	;'c'
  5113  3115  3475               	retlw	117	;'u'
  5114  3116  3472               	retlw	114	;'r'
  5115  3117  3472               	retlw	114	;'r'
  5116  3118  3465               	retlw	101	;'e'
  5117  3119  346E               	retlw	110	;'n'
  5118  311A  3474               	retlw	116	;'t'
  5119  311B  3420               	retlw	32	;' '
  5120  311C  343D               	retlw	61	;'='
  5121  311D  3420               	retlw	32	;' '
  5122  311E  3425               	retlw	37	;'%'
  5123  311F  3430               	retlw	48	;'0'
  5124  3120  342E               	retlw	46	;'.'
  5125  3121  3434               	retlw	52	;'4'
  5126  3122  3466               	retlw	102	;'f'
  5127  3123  3441               	retlw	65	;'A'
  5128  3124  340A               	retlw	10
  5129  3125  340D               	retlw	13
  5130  3126  3400               	retlw	0
  5131                           
  5132                           	psect	stringtext24
  5133  3127                     __pstringtext24:	
  5134  3127                     STR_5:	
  5135  3127  3454               	retlw	84	;'T'
  5136  3128  3465               	retlw	101	;'e'
  5137  3129  346D               	retlw	109	;'m'
  5138  312A  3470               	retlw	112	;'p'
  5139  312B  3425               	retlw	37	;'%'
  5140  312C  3469               	retlw	105	;'i'
  5141  312D  3420               	retlw	32	;' '
  5142  312E  343D               	retlw	61	;'='
  5143  312F  3420               	retlw	32	;' '
  5144  3130  3425               	retlw	37	;'%'
  5145  3131  3469               	retlw	105	;'i'
  5146  3132  3443               	retlw	67	;'C'
  5147  3133  340A               	retlw	10
  5148  3134  340D               	retlw	13
  5149  3135  3400               	retlw	0
  5150                           
  5151                           	psect	stringtext25
  5152  3136                     __pstringtext25:	
  5153  3136                     STR_1:	
  5154  3136  3456               	retlw	86	;'V'
  5155  3137  3425               	retlw	37	;'%'
  5156  3138  3469               	retlw	105	;'i'
  5157  3139  3420               	retlw	32	;' '
  5158  313A  343D               	retlw	61	;'='
  5159  313B  3420               	retlw	32	;' '
  5160  313C  3425               	retlw	37	;'%'
  5161  313D  3430               	retlw	48	;'0'
  5162  313E  342E               	retlw	46	;'.'
  5163  313F  3434               	retlw	52	;'4'
  5164  3140  3466               	retlw	102	;'f'
  5165  3141  3456               	retlw	86	;'V'
  5166  3142  340A               	retlw	10
  5167  3143  340D               	retlw	13
  5168  3144  3400               	retlw	0
  5169                           
  5170                           	psect	stringtext26
  5171  3145                     __pstringtext26:	
  5172  3145                     STR_8:	
  5173  3145  341B               	retlw	27
  5174  3146  345B               	retlw	91	;'['
  5175  3147  3432               	retlw	50	;'2'
  5176  3148  344B               	retlw	75	;'K'
  5177  3149  3420               	retlw	32	;' '
  5178  314A  341B               	retlw	27
  5179  314B  345B               	retlw	91	;'['
  5180  314C  3441               	retlw	65	;'A'
  5181  314D  3420               	retlw	32	;' '
  5182  314E  340D               	retlw	13
  5183  314F  3400               	retlw	0
  5184                           
  5185                           	psect	stringtext27
  5186  3150                     __pstringtext27:	
  5187  3150                     STR_7:	
  5188  3150  341B               	retlw	27
  5189  3151  345B               	retlw	91	;'['
  5190  3152  3432               	retlw	50	;'2'
  5191  3153  344B               	retlw	75	;'K'
  5192  3154  3420               	retlw	32	;' '
  5193  3155  341B               	retlw	27
  5194  3156  345B               	retlw	91	;'['
  5195  3157  3441               	retlw	65	;'A'
  5196  3158  3400               	retlw	0
  5197                           
  5198                           	psect	stringtext28
  5199  0000                     __pstringtext28:	
  5200                           
  5201                           ; #config settings
  5202  0000                     
  5203                           	psect	cinit
  5204  0077                     start_initialization:	
  5205  0077                     __initialization:	
  5206                           
  5207                           ; Initialize objects allocated to BANK3
  5208  0077  30BC               	movlw	low __pidataBANK3
  5209  0078  0084               	movwf	4
  5210  0079  30AB               	movlw	(high __pidataBANK3)| (0+128)
  5211  007A  0085               	movwf	5
  5212  007B  30CD               	movlw	low __pdataBANK3
  5213  007C  0086               	movwf	6
  5214  007D  3001               	movlw	high __pdataBANK3
  5215  007E  0087               	movwf	7
  5216  007F  3013               	movlw	19
  5217  0080  3187  27F8  3180   	fcall	init_ram
  5218                           
  5219                           ; Clear objects allocated to COMMON
  5220  0083  01FA               	clrf	__pbssCOMMON& (0+127)
  5221  0084  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5222                           
  5223                           ; Clear objects allocated to BANK2
  5224  0085  0022               	movlb	2	; select bank2
  5225  0086  01EB               	clrf	__pbssBANK2& (0+127)
  5226  0087  01EC               	clrf	(__pbssBANK2+1)& (0+127)
  5227                           
  5228                           ; Clear objects allocated to BANK3
  5229  0088  30A0               	movlw	low __pbssBANK3
  5230  0089  0084               	movwf	4
  5231  008A  3001               	movlw	high __pbssBANK3
  5232  008B  0085               	movwf	5
  5233  008C  302D               	movlw	45
  5234  008D  3193  2301  3180   	fcall	clear_ram0
  5235                           
  5236                           ; Clear objects allocated to BANK4
  5237  0090  3020               	movlw	low __pbssBANK4
  5238  0091  0084               	movwf	4
  5239  0092  3002               	movlw	high __pbssBANK4
  5240  0093  0085               	movwf	5
  5241  0094  3048               	movlw	72
  5242  0095  3193  2301  3180   	fcall	clear_ram0
  5243                           
  5244                           ; Clear objects allocated to BANK5
  5245  0098  30A0               	movlw	low __pbssBANK5
  5246  0099  0084               	movwf	4
  5247  009A  3002               	movlw	high __pbssBANK5
  5248  009B  0085               	movwf	5
  5249  009C  3032               	movlw	50
  5250  009D  3193  2301  3180   	fcall	clear_ram0
  5251                           
  5252                           ; Clear objects allocated to BANK6
  5253  00A0  3020               	movlw	low __pbssBANK6
  5254  00A1  0084               	movwf	4
  5255  00A2  3003               	movlw	high __pbssBANK6
  5256  00A3  0085               	movwf	5
  5257  00A4  3050               	movlw	80
  5258  00A5  3193  2301         	fcall	clear_ram0
  5259  00A7                     end_of_initialization:	
  5260                           ;End of C runtime variable initialization code
  5261                           
  5262  00A7                     __end_of__initialization:	
  5263  00A7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5264  00A8  0020               	movlb	0
  5265  00A9  319C  2CFC         	ljmp	_main	;jump to C main() function
  5266                           
  5267                           	psect	bssCOMMON
  5268  007A                     __pbssCOMMON:	
  5269  007A                     _z:	
  5270  007A                     	ds	2
  5271                           
  5272                           	psect	bssBANK2
  5273  016B                     __pbssBANK2:	
  5274  016B                     _currentIndex:	
  5275  016B                     	ds	2
  5276                           
  5277                           	psect	bssBANK3
  5278  01A0                     __pbssBANK3:	
  5279  01A0                     _temp:	
  5280  01A0                     	ds	4
  5281  01A4                     _current:	
  5282  01A4                     	ds	4
  5283  01A8                     _minVoltage:	
  5284  01A8                     	ds	2
  5285  01AA                     _SOC:	
  5286  01AA                     	ds	2
  5287  01AC                     _highestTemp:	
  5288  01AC                     	ds	2
  5289  01AE                     _currentBool:	
  5290  01AE                     	ds	2
  5291  01B0                     _uartBool:	
  5292  01B0                     	ds	2
  5293  01B2                     _k:	
  5294  01B2                     	ds	2
  5295  01B4                     _j:	
  5296  01B4                     	ds	2
  5297  01B6                     _n:	
  5298  01B6                     	ds	2
  5299  01B8                     _temps:	
  5300  01B8                     	ds	10
  5301  01C2                     _totalVoltage:	
  5302  01C2                     	ds	4
  5303  01C6                     _cmd:	
  5304  01C6                     	ds	3
  5305  01C9                     _ADAX:	
  5306  01C9                     	ds	2
  5307  01CB                     _ADCV:	
  5308  01CB                     	ds	2
  5309                           
  5310                           	psect	dataBANK3
  5311  01CD                     __pdataBANK3:	
  5312  01CD                     measureVoltages@F7587:	
  5313  01CD                     	ds	6
  5314  01D3                     _tempChannels:	
  5315  01D3                     	ds	5
  5316  01D8                     SSD1306_Test@F7528:	
  5317  01D8                     	ds	2
  5318  01DA                     _configReg:	
  5319  01DA                     	ds	6
  5320                           
  5321                           	psect	bssBANK4
  5322  0220                     __pbssBANK4:	
  5323  0220                     measureVoltages@F7584:	
  5324  0220                     	ds	24
  5325  0238                     _voltages:	
  5326  0238                     	ds	48
  5327                           
  5328                           	psect	bssBANK5
  5329  02A0                     __pbssBANK5:	
  5330  02A0                     _str:	
  5331  02A0                     	ds	50
  5332                           
  5333                           	psect	bssBANK6
  5334  0320                     __pbssBANK6:	
  5335  0320                     _currentBuff:	
  5336  0320                     	ds	80
  5337                           
  5338                           	psect	inittext
  5339  07F8                     init_ram:	
  5340  07F8  00FE               	movwf	126
  5341  07F9                     initloop:	
  5342  07F9  0012               	moviw fsr0++
  5343  07FA  001E               	movwi fsr1++
  5344  07FB  0BFE               	decfsz	126,f
  5345  07FC  2FF9               	goto	initloop
  5346  07FD  3400               	retlw	0
  5347                           
  5348                           	psect	clrtext
  5349  1301                     clear_ram0:	
  5350                           ;	Called with FSR0 containing the base address, and
  5351                           ;	WREG with the size to clear
  5352                           
  5353  1301  0064               	clrwdt	;clear the watchdog before getting into this loop
  5354  1302                     clrloop0:	
  5355  1302  0180               	clrf	0	;clear RAM location pointed to by FSR
  5356  1303  3101               	addfsr 0,1
  5357  1304  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5358  1305  2B02               	goto	clrloop0	;have we reached the end yet?
  5359  1306  3400               	retlw	0	;all done for this memory range, return
  5360                           
  5361                           	psect	cstackBANK3
  5362  01E0                     __pcstackBANK3:	
  5363  01E0                     main@numFaults:	
  5364                           
  5365                           ; 2 bytes @ 0x0
  5366  01E0                     	ds	2
  5367  01E2                     main@i:	
  5368                           
  5369                           ; 2 bytes @ 0x2
  5370  01E2                     	ds	2
  5371                           
  5372                           	psect	cstackBANK2
  5373  0120                     __pcstackBANK2:	
  5374  0120                     ??_sprintf:	
  5375  0120                     cellBalancing@boolean:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378  0120                     measureVoltages@ltcData:	
  5379                           ; 1 bytes @ 0x0
  5380                           
  5381                           
  5382                           ; 24 bytes @ 0x0
  5383  0120                     	ds	1
  5384  0121                     cellBalancing@minVoltage:	
  5385                           
  5386                           ; 4 bytes @ 0x1
  5387  0121                     	ds	4
  5388  0125                     cellBalancing@i:	
  5389                           
  5390                           ; 2 bytes @ 0x5
  5391  0125                     	ds	1
  5392  0126                     _sprintf$2151:	
  5393                           
  5394                           ; 4 bytes @ 0x6
  5395  0126                     	ds	1
  5396  0127                     cellBalancing@i_1293:	
  5397                           
  5398                           ; 2 bytes @ 0x7
  5399  0127                     	ds	2
  5400  0129                     cellBalancing@voltages:	
  5401                           
  5402                           ; 1 bytes @ 0x9
  5403  0129                     	ds	1
  5404  012A                     sprintf@ap:	
  5405                           
  5406                           ; 1 bytes @ 0xA
  5407  012A                     	ds	1
  5408  012B                     sprintf@tmpval:	
  5409                           
  5410                           ; 4 bytes @ 0xB
  5411  012B                     	ds	4
  5412  012F                     sprintf@val:	
  5413                           
  5414                           ; 4 bytes @ 0xF
  5415  012F                     	ds	4
  5416  0133                     sprintf@exp:	
  5417                           
  5418                           ; 2 bytes @ 0x13
  5419  0133                     	ds	2
  5420  0135                     sprintf@flag:	
  5421                           
  5422                           ; 2 bytes @ 0x15
  5423  0135                     	ds	2
  5424  0137                     sprintf@width:	
  5425                           
  5426                           ; 2 bytes @ 0x17
  5427  0137                     	ds	1
  5428  0138                     measureVoltages@tempConfig:	
  5429                           
  5430                           ; 6 bytes @ 0x18
  5431  0138                     	ds	1
  5432  0139                     sprintf@fval:	
  5433                           
  5434                           ; 4 bytes @ 0x19
  5435  0139                     	ds	4
  5436  013D                     sprintf@prec:	
  5437                           
  5438                           ; 2 bytes @ 0x1D
  5439  013D                     	ds	1
  5440  013E                     measureVoltages@pecError:	
  5441                           
  5442                           ; 1 bytes @ 0x1E
  5443  013E                     	ds	1
  5444  013F                     measureVoltages@voltages:	
  5445  013F                     sprintf@sp:	
  5446                           ; 1 bytes @ 0x1F
  5447                           
  5448                           
  5449                           ; 1 bytes @ 0x1F
  5450  013F                     	ds	1
  5451  0140                     sprintf@c:	
  5452  0140                     measureVoltages@i:	
  5453                           ; 1 bytes @ 0x20
  5454                           
  5455                           
  5456                           ; 2 bytes @ 0x20
  5457  0140                     	ds	1
  5458  0141                     ?_clearScreen:	
  5459  0141                     ?_writeVoltages:	
  5460                           ; 1 bytes @ 0x21
  5461                           
  5462  0141                     ?_writeTemps:	
  5463                           ; 1 bytes @ 0x21
  5464                           
  5465  0141                     ?_writeCurrent:	
  5466                           ; 1 bytes @ 0x21
  5467                           
  5468  0141                     writeVoltages@length:	
  5469                           ; 1 bytes @ 0x21
  5470                           
  5471  0141                     writeTemps@highestTemp:	
  5472                           ; 2 bytes @ 0x21
  5473                           
  5474  0141                     clearScreen@numLines:	
  5475                           ; 2 bytes @ 0x21
  5476                           
  5477  0141                     writeCurrent@current:	
  5478                           ; 2 bytes @ 0x21
  5479                           
  5480                           
  5481                           ; 4 bytes @ 0x21
  5482  0141                     	ds	2
  5483  0143                     ??_clearScreen:	
  5484  0143                     writeTemps@numTemps:	
  5485                           ; 1 bytes @ 0x23
  5486                           
  5487  0143                     writeVoltages@totalVoltage:	
  5488                           ; 2 bytes @ 0x23
  5489                           
  5490                           
  5491                           ; 4 bytes @ 0x23
  5492  0143                     	ds	2
  5493  0145                     writeTemps@temps:	
  5494                           
  5495                           ; 1 bytes @ 0x25
  5496  0145                     	ds	1
  5497  0146                     writeTemps@k:	
  5498  0146                     clearScreen@j:	
  5499                           ; 2 bytes @ 0x26
  5500                           
  5501                           
  5502                           ; 2 bytes @ 0x26
  5503  0146                     	ds	1
  5504  0147                     ??_writeVoltages:	
  5505                           
  5506                           ; 1 bytes @ 0x27
  5507  0147                     	ds	4
  5508  014B                     _writeVoltages$2147:	
  5509                           
  5510                           ; 4 bytes @ 0x2B
  5511  014B                     	ds	4
  5512  014F                     writeVoltages@maxCell:	
  5513                           
  5514                           ; 2 bytes @ 0x2F
  5515  014F                     	ds	2
  5516  0151                     writeVoltages@minCell:	
  5517                           
  5518                           ; 2 bytes @ 0x31
  5519  0151                     	ds	2
  5520  0153                     writeVoltages@volts:	
  5521                           
  5522                           ; 1 bytes @ 0x33
  5523  0153                     	ds	1
  5524  0154                     writeVoltages@k:	
  5525                           
  5526                           ; 2 bytes @ 0x34
  5527  0154                     	ds	2
  5528  0156                     ?_writeValuesToUart:	
  5529  0156                     writeValuesToUart@voltageArrLength:	
  5530                           ; 1 bytes @ 0x36
  5531                           
  5532                           
  5533                           ; 2 bytes @ 0x36
  5534  0156                     	ds	2
  5535  0158                     writeValuesToUart@totalVoltage:	
  5536                           
  5537                           ; 4 bytes @ 0x38
  5538  0158                     	ds	4
  5539  015C                     writeValuesToUart@temperatureArr:	
  5540                           
  5541                           ; 1 bytes @ 0x3C
  5542  015C                     	ds	1
  5543  015D                     writeValuesToUart@temperatureArrLength:	
  5544                           
  5545                           ; 2 bytes @ 0x3D
  5546  015D                     	ds	2
  5547  015F                     writeValuesToUart@temperatureHigh:	
  5548                           
  5549                           ; 2 bytes @ 0x3F
  5550  015F                     	ds	2
  5551  0161                     writeValuesToUart@current:	
  5552                           
  5553                           ; 4 bytes @ 0x41
  5554  0161                     	ds	4
  5555  0165                     writeValuesToUart@uartLines:	
  5556                           
  5557                           ; 2 bytes @ 0x45
  5558  0165                     	ds	2
  5559  0167                     writeValuesToUart@voltageArr:	
  5560                           
  5561                           ; 1 bytes @ 0x47
  5562  0167                     	ds	1
  5563  0168                     ??_main:	
  5564                           
  5565                           ; 1 bytes @ 0x48
  5566  0168                     	ds	3
  5567                           
  5568                           	psect	cstackBANK1
  5569  00A0                     __pcstackBANK1:	
  5570  00A0                     ??_fround:	
  5571  00A0                     ??_scale:	
  5572                           ; 1 bytes @ 0x0
  5573                           
  5574                           
  5575                           ; 1 bytes @ 0x0
  5576  00A0                     	ds	16
  5577  00B0                     _scale$2150:	
  5578                           
  5579                           ; 4 bytes @ 0x10
  5580  00B0                     	ds	4
  5581  00B4                     scale@scl:	
  5582  00B4                     _fround$2149:	
  5583                           ; 1 bytes @ 0x14
  5584                           
  5585                           
  5586                           ; 4 bytes @ 0x14
  5587  00B4                     	ds	1
  5588  00B5                     ?___fltol:	
  5589  00B5                     ___fltol@f1:	
  5590                           ; 4 bytes @ 0x15
  5591                           
  5592                           
  5593                           ; 4 bytes @ 0x15
  5594  00B5                     	ds	3
  5595  00B8                     _fround$2148:	
  5596                           
  5597                           ; 4 bytes @ 0x18
  5598  00B8                     	ds	1
  5599  00B9                     ??___fltol:	
  5600                           
  5601                           ; 1 bytes @ 0x19
  5602  00B9                     	ds	3
  5603  00BC                     fround@prec:	
  5604                           
  5605                           ; 1 bytes @ 0x1C
  5606  00BC                     	ds	1
  5607  00BD                     ?___fladd:	
  5608  00BD                     ___fladd@b:	
  5609                           ; 4 bytes @ 0x1D
  5610                           
  5611                           
  5612                           ; 4 bytes @ 0x1D
  5613  00BD                     	ds	1
  5614  00BE                     ___fltol@sign1:	
  5615                           
  5616                           ; 1 bytes @ 0x1E
  5617  00BE                     	ds	1
  5618  00BF                     ___fltol@exp1:	
  5619                           
  5620                           ; 1 bytes @ 0x1F
  5621  00BF                     	ds	1
  5622  00C0                     ?_calculateTemp:	
  5623  00C0                     calculateTemp@adcValue:	
  5624                           ; 2 bytes @ 0x20
  5625                           
  5626                           
  5627                           ; 2 bytes @ 0x20
  5628  00C0                     	ds	1
  5629  00C1                     ___fladd@a:	
  5630                           
  5631                           ; 4 bytes @ 0x21
  5632  00C1                     	ds	1
  5633  00C2                     ??_calculateTemp:	
  5634                           
  5635                           ; 1 bytes @ 0x22
  5636  00C2                     	ds	2
  5637  00C4                     calculateTemp@voltage:	
  5638                           
  5639                           ; 4 bytes @ 0x24
  5640  00C4                     	ds	1
  5641  00C5                     ??___fladd:	
  5642                           
  5643                           ; 1 bytes @ 0x25
  5644  00C5                     	ds	3
  5645  00C8                     ?_getTemps:	
  5646  00C8                     getTemps@numTemps:	
  5647                           ; 2 bytes @ 0x28
  5648                           
  5649                           
  5650                           ; 2 bytes @ 0x28
  5651  00C8                     	ds	2
  5652  00CA                     ??_getTemps:	
  5653                           
  5654                           ; 1 bytes @ 0x2A
  5655  00CA                     	ds	4
  5656  00CE                     getTemps@highestTemp:	
  5657                           
  5658                           ; 2 bytes @ 0x2E
  5659  00CE                     	ds	2
  5660  00D0                     getTemps@temperatures:	
  5661                           
  5662                           ; 1 bytes @ 0x30
  5663  00D0                     	ds	1
  5664  00D1                     ___fladd@signs:	
  5665  00D1                     getTemps@inc:	
  5666                           ; 1 bytes @ 0x31
  5667                           
  5668                           
  5669                           ; 2 bytes @ 0x31
  5670  00D1                     	ds	1
  5671  00D2                     ___fladd@aexp:	
  5672                           
  5673                           ; 1 bytes @ 0x32
  5674  00D2                     	ds	1
  5675  00D3                     ___fladd@bexp:	
  5676                           
  5677                           ; 1 bytes @ 0x33
  5678  00D3                     	ds	1
  5679  00D4                     ___fladd@grs:	
  5680                           
  5681                           ; 1 bytes @ 0x34
  5682  00D4                     	ds	1
  5683  00D5                     ?___flge:	
  5684  00D5                     ?_sumVoltages:	
  5685                           ; 1 bit 
  5686                           
  5687  00D5                     ?_avgBuff:	
  5688                           ; 4 bytes @ 0x35
  5689                           
  5690  00D5                     ?_calculateCurrent:	
  5691                           ; 4 bytes @ 0x35
  5692                           
  5693  00D5                     ?___flsub:	
  5694                           ; 4 bytes @ 0x35
  5695                           
  5696  00D5                     avgBuff@size:	
  5697                           ; 4 bytes @ 0x35
  5698                           
  5699  00D5                     sumVoltages@numVoltages:	
  5700                           ; 2 bytes @ 0x35
  5701                           
  5702  00D5                     calculateCurrent@adcValue:	
  5703                           ; 2 bytes @ 0x35
  5704                           
  5705  00D5                     ___flge@ff1:	
  5706                           ; 4 bytes @ 0x35
  5707                           
  5708  00D5                     ___flsub@a:	
  5709                           ; 4 bytes @ 0x35
  5710                           
  5711                           
  5712                           ; 4 bytes @ 0x35
  5713  00D5                     	ds	4
  5714  00D9                     ??_sumVoltages:	
  5715  00D9                     ??_avgBuff:	
  5716                           ; 1 bytes @ 0x39
  5717                           
  5718  00D9                     calculateCurrent@curr:	
  5719                           ; 1 bytes @ 0x39
  5720                           
  5721  00D9                     ___flge@ff2:	
  5722                           ; 4 bytes @ 0x39
  5723                           
  5724  00D9                     ___flsub@b:	
  5725                           ; 4 bytes @ 0x39
  5726                           
  5727                           
  5728                           ; 4 bytes @ 0x39
  5729  00D9                     	ds	2
  5730  00DB                     avgBuff@buff:	
  5731  00DB                     sumVoltages@voltages:	
  5732                           ; 1 bytes @ 0x3B
  5733                           
  5734                           
  5735                           ; 1 bytes @ 0x3B
  5736  00DB                     	ds	1
  5737  00DC                     avgBuff@total:	
  5738  00DC                     sumVoltages@total:	
  5739                           ; 4 bytes @ 0x3C
  5740                           
  5741                           
  5742                           ; 4 bytes @ 0x3C
  5743  00DC                     	ds	1
  5744  00DD                     ??___flge:	
  5745  00DD                     _calculateCurrent$2146:	
  5746                           ; 1 bytes @ 0x3D
  5747                           
  5748                           
  5749                           ; 4 bytes @ 0x3D
  5750  00DD                     	ds	3
  5751  00E0                     avgBuff@inc:	
  5752  00E0                     sumVoltages@i:	
  5753                           ; 2 bytes @ 0x40
  5754                           
  5755                           
  5756                           ; 2 bytes @ 0x40
  5757  00E0                     	ds	1
  5758  00E1                     ?_getCurrent:	
  5759                           
  5760                           ; 4 bytes @ 0x41
  5761  00E1                     	ds	4
  5762  00E5                     ?_measureVoltages:	
  5763  00E5                     ?_cellBalancing:	
  5764                           ; 1 bytes @ 0x45
  5765                           
  5766  00E5                     ?_sprintf:	
  5767                           ; 1 bytes @ 0x45
  5768                           
  5769  00E5                     measureVoltages@numVoltages:	
  5770                           ; 2 bytes @ 0x45
  5771                           
  5772  00E5                     cellBalancing@numVoltages:	
  5773                           ; 2 bytes @ 0x45
  5774                           
  5775  00E5                     sprintf@f:	
  5776                           ; 2 bytes @ 0x45
  5777                           
  5778  00E5                     getCurrent@currentValue:	
  5779                           ; 2 bytes @ 0x45
  5780                           
  5781                           
  5782                           ; 4 bytes @ 0x45
  5783  00E5                     	ds	2
  5784  00E7                     ??_measureVoltages:	
  5785  00E7                     ??_cellBalancing:	
  5786                           ; 1 bytes @ 0x47
  5787                           
  5788                           
  5789                           ; 1 bytes @ 0x47
  5790  00E7                     	ds	8
  5791  00EF                     ??_writeTemps:	
  5792                           
  5793                           ; 1 bytes @ 0x4F
  5794  00EF                     	ds	1
  5795                           
  5796                           	psect	cstackCOMMON
  5797  0070                     __pcstackCOMMON:	
  5798  0070                     ?_isdigit:	
  5799  0070                     ?_setup:	
  5800                           ; 1 bit 
  5801                           
  5802  0070                     ?_uartDisable:	
  5803                           ; 1 bytes @ 0x0
  5804                           
  5805  0070                     ??_uartDisable:	
  5806                           ; 1 bytes @ 0x0
  5807                           
  5808  0070                     ?_timerSetup:	
  5809                           ; 1 bytes @ 0x0
  5810                           
  5811  0070                     ?_adcSetup:	
  5812                           ; 1 bytes @ 0x0
  5813                           
  5814  0070                     ?_uartSetup:	
  5815                           ; 1 bytes @ 0x0
  5816                           
  5817  0070                     ?_i2cSetup:	
  5818                           ; 1 bytes @ 0x0
  5819                           
  5820  0070                     ?_spiSetup:	
  5821                           ; 1 bytes @ 0x0
  5822                           
  5823  0070                     ?_uartEnable:	
  5824                           ; 1 bytes @ 0x0
  5825                           
  5826  0070                     ?_timer0Setup:	
  5827                           ; 1 bytes @ 0x0
  5828                           
  5829  0070                     ?_timer2Setup:	
  5830                           ; 1 bytes @ 0x0
  5831                           
  5832  0070                     ?_LTC6804_adcv:	
  5833                           ; 1 bytes @ 0x0
  5834                           
  5835  0070                     ?_wakeup_idle:	
  5836                           ; 1 bytes @ 0x0
  5837                           
  5838  0070                     ?_spi_write:	
  5839                           ; 1 bytes @ 0x0
  5840                           
  5841  0070                     ?_spi_read:	
  5842                           ; 1 bytes @ 0x0
  5843                           
  5844  0070                     ?_main:	
  5845                           ; 1 bytes @ 0x0
  5846                           
  5847  0070                     ?_ISR:	
  5848                           ; 1 bytes @ 0x0
  5849                           
  5850  0070                     ??_ISR:	
  5851                           ; 1 bytes @ 0x0
  5852                           
  5853                           
  5854                           ; 1 bytes @ 0x0
  5855  0070                     	ds	2
  5856  0072                     ??_timerSetup:	
  5857  0072                     ??_adcSetup:	
  5858                           ; 1 bytes @ 0x2
  5859                           
  5860  0072                     ??_uartSetup:	
  5861                           ; 1 bytes @ 0x2
  5862                           
  5863  0072                     ??_i2cSetup:	
  5864                           ; 1 bytes @ 0x2
  5865                           
  5866  0072                     ??_spiSetup:	
  5867                           ; 1 bytes @ 0x2
  5868                           
  5869  0072                     ??_uartEnable:	
  5870                           ; 1 bytes @ 0x2
  5871                           
  5872  0072                     ??_timer0Setup:	
  5873                           ; 1 bytes @ 0x2
  5874                           
  5875  0072                     ??_timer2Setup:	
  5876                           ; 1 bytes @ 0x2
  5877                           
  5878  0072                     ?_setDischarge:	
  5879                           ; 1 bytes @ 0x2
  5880                           
  5881  0072                     ?_set_adc:	
  5882                           ; 1 bytes @ 0x2
  5883                           
  5884  0072                     ??_wakeup_idle:	
  5885                           ; 1 bytes @ 0x2
  5886                           
  5887  0072                     ??_spi_write:	
  5888                           ; 1 bytes @ 0x2
  5889                           
  5890  0072                     ??_spi_read:	
  5891                           ; 1 bytes @ 0x2
  5892                           
  5893  0072                     ??_isdigit:	
  5894                           ; 1 bytes @ 0x2
  5895                           
  5896  0072                     ?___bmul:	
  5897                           ; 1 bytes @ 0x2
  5898                           
  5899  0072                     ?_adcRead:	
  5900                           ; 1 bytes @ 0x2
  5901                           
  5902  0072                     ?__Umul8_16:	
  5903                           ; 2 bytes @ 0x2
  5904                           
  5905  0072                     ?___wmul:	
  5906                           ; 2 bytes @ 0x2
  5907                           
  5908  0072                     ?___awmod:	
  5909                           ; 2 bytes @ 0x2
  5910                           
  5911  0072                     ?__tdiv_to_l_:	
  5912                           ; 2 bytes @ 0x2
  5913                           
  5914  0072                     ?__div_to_l_:	
  5915                           ; 4 bytes @ 0x2
  5916                           
  5917  0072                     ?___flneg:	
  5918                           ; 4 bytes @ 0x2
  5919                           
  5920  0072                     ?___lldiv:	
  5921                           ; 4 bytes @ 0x2
  5922                           
  5923  0072                     set_adc@DCP:	
  5924                           ; 4 bytes @ 0x2
  5925                           
  5926  0072                     ___bmul@multiplicand:	
  5927                           ; 1 bytes @ 0x2
  5928                           
  5929  0072                     _isdigit$1757:	
  5930                           ; 1 bytes @ 0x2
  5931                           
  5932  0072                     __Umul8_16@multiplicand:	
  5933                           ; 1 bytes @ 0x2
  5934                           
  5935  0072                     setDischarge@index:	
  5936                           ; 1 bytes @ 0x2
  5937                           
  5938  0072                     ___wmul@multiplier:	
  5939                           ; 2 bytes @ 0x2
  5940                           
  5941  0072                     ___awmod@divisor:	
  5942                           ; 2 bytes @ 0x2
  5943                           
  5944  0072                     __div_to_l_@f1:	
  5945                           ; 2 bytes @ 0x2
  5946                           
  5947  0072                     ___flneg@f1:	
  5948                           ; 4 bytes @ 0x2
  5949                           
  5950  0072                     __tdiv_to_l_@f1:	
  5951                           ; 4 bytes @ 0x2
  5952                           
  5953  0072                     ___lldiv@divisor:	
  5954                           ; 4 bytes @ 0x2
  5955                           
  5956                           
  5957                           ; 4 bytes @ 0x2
  5958  0072                     	ds	1
  5959  0073                     ??___bmul:	
  5960  0073                     set_adc@CH:	
  5961                           ; 1 bytes @ 0x3
  5962                           
  5963  0073                     spi_write@readData:	
  5964                           ; 1 bytes @ 0x3
  5965                           
  5966  0073                     spi_read@data:	
  5967                           ; 1 bytes @ 0x3
  5968                           
  5969  0073                     isdigit@c:	
  5970                           ; 1 bytes @ 0x3
  5971                           
  5972                           
  5973                           ; 1 bytes @ 0x3
  5974  0073                     	ds	1
  5975  0074                     ??__Umul8_16:	
  5976  0074                     ??___xxtofl:	
  5977                           ; 1 bytes @ 0x4
  5978                           
  5979  0074                     setDischarge@boolean:	
  5980                           ; 1 bytes @ 0x4
  5981                           
  5982  0074                     set_adc@CHG:	
  5983                           ; 1 bytes @ 0x4
  5984                           
  5985  0074                     spi_write@data:	
  5986                           ; 1 bytes @ 0x4
  5987                           
  5988  0074                     spi_read@readData:	
  5989                           ; 1 bytes @ 0x4
  5990                           
  5991  0074                     ___bmul@product:	
  5992                           ; 1 bytes @ 0x4
  5993                           
  5994  0074                     ___wmul@multiplicand:	
  5995                           ; 1 bytes @ 0x4
  5996                           
  5997  0074                     ___awmod@dividend:	
  5998                           ; 2 bytes @ 0x4
  5999                           
  6000                           
  6001                           ; 2 bytes @ 0x4
  6002  0074                     	ds	1
  6003  0075                     ??_setDischarge:	
  6004  0075                     ??_set_adc:	
  6005                           ; 1 bytes @ 0x5
  6006                           
  6007  0075                     ?_spi_write_array:	
  6008                           ; 1 bytes @ 0x5
  6009                           
  6010  0075                     spi_write_array@data:	
  6011                           ; 1 bytes @ 0x5
  6012                           
  6013  0075                     ___bmul@multiplier:	
  6014                           ; 1 bytes @ 0x5
  6015                           
  6016                           
  6017                           ; 1 bytes @ 0x5
  6018  0075                     	ds	1
  6019  0076                     ??_spi_write_array:	
  6020  0076                     ?_spi_write_read:	
  6021                           ; 1 bytes @ 0x6
  6022                           
  6023  0076                     ??___wmul:	
  6024                           ; 1 bytes @ 0x6
  6025                           
  6026  0076                     ??___awmod:	
  6027                           ; 1 bytes @ 0x6
  6028                           
  6029  0076                     ??___flneg:	
  6030                           ; 1 bytes @ 0x6
  6031                           
  6032  0076                     spi_write_read@tx_len:	
  6033                           ; 1 bytes @ 0x6
  6034                           
  6035  0076                     ___wmul@product:	
  6036                           ; 1 bytes @ 0x6
  6037                           
  6038  0076                     __div_to_l_@f2:	
  6039                           ; 2 bytes @ 0x6
  6040                           
  6041  0076                     __tdiv_to_l_@f2:	
  6042                           ; 4 bytes @ 0x6
  6043                           
  6044  0076                     ___lldiv@dividend:	
  6045                           ; 4 bytes @ 0x6
  6046                           
  6047                           
  6048                           ; 4 bytes @ 0x6
  6049  0076                     	ds	1
  6050  0077                     set_adc@MD:	
  6051  0077                     spi_write_array@len:	
  6052                           ; 1 bytes @ 0x7
  6053                           
  6054  0077                     ___awmod@counter:	
  6055                           ; 1 bytes @ 0x7
  6056                           
  6057  0077                     spi_write_read@rx_data:	
  6058                           ; 1 bytes @ 0x7
  6059                           
  6060                           
  6061                           ; 2 bytes @ 0x7
  6062  0077                     	ds	1
  6063  0078                     ?_pec15_calc:	
  6064  0078                     set_adc@md_bits:	
  6065                           ; 2 bytes @ 0x8
  6066                           
  6067  0078                     spi_write_array@i:	
  6068                           ; 1 bytes @ 0x8
  6069                           
  6070  0078                     ___awmod@sign:	
  6071                           ; 1 bytes @ 0x8
  6072                           
  6073  0078                     pec15_calc@data:	
  6074                           ; 1 bytes @ 0x8
  6075                           
  6076                           
  6077                           ; 2 bytes @ 0x8
  6078  0078                     	ds	1
  6079  0079                     ??___awdiv:	
  6080  0079                     spi_write_read@rx_len:	
  6081                           ; 1 bytes @ 0x9
  6082                           
  6083                           
  6084                           ; 1 bytes @ 0x9
  6085  0079                     	ds	1
  6086  007A                     ??_setup:	
  6087  007A                     ??_getCurrent:	
  6088                           ; 1 bytes @ 0xA
  6089                           
  6090  007A                     ??_writeValuesToUart:	
  6091                           ; 1 bytes @ 0xA
  6092                           
  6093  007A                     ??_LTC6804_initialize:	
  6094                           ; 1 bytes @ 0xA
  6095                           
  6096  007A                     ??_writeCurrent:	
  6097                           ; 1 bytes @ 0xA
  6098                           
  6099  007A                     ??_calculateCurrent:	
  6100                           ; 1 bytes @ 0xA
  6101                           
  6102  007A                     ??___flsub:	
  6103                           ; 1 bytes @ 0xA
  6104                           
  6105                           
  6106                           	psect	cstackBANK0
  6107  0020                     __pcstackBANK0:	
  6108                           ; 1 bytes @ 0xA
  6109                           
  6110  0020                     ??_adcRead:	
  6111  0020                     ??_pec15_calc:	
  6112                           ; 1 bytes @ 0x0
  6113                           
  6114  0020                     ??_spi_write_read:	
  6115                           ; 1 bytes @ 0x0
  6116                           
  6117  0020                     ??__tdiv_to_l_:	
  6118                           ; 1 bytes @ 0x0
  6119                           
  6120  0020                     ??__div_to_l_:	
  6121                           ; 1 bytes @ 0x0
  6122                           
  6123  0020                     ??___lldiv:	
  6124                           ; 1 bytes @ 0x0
  6125                           
  6126  0020                     ?___awdiv:	
  6127                           ; 1 bytes @ 0x0
  6128                           
  6129  0020                     ___awdiv@divisor:	
  6130                           ; 2 bytes @ 0x0
  6131                           
  6132  0020                     __Umul8_16@product:	
  6133                           ; 2 bytes @ 0x0
  6134                           
  6135                           
  6136                           ; 2 bytes @ 0x0
  6137  0020                     	ds	1
  6138  0021                     ___lldiv@quotient:	
  6139                           
  6140                           ; 4 bytes @ 0x1
  6141  0021                     	ds	1
  6142  0022                     ___awdiv@dividend:	
  6143  0022                     __Umul8_16@word_mpld:	
  6144                           ; 2 bytes @ 0x2
  6145                           
  6146                           
  6147                           ; 2 bytes @ 0x2
  6148  0022                     	ds	2
  6149  0024                     ___awdiv@counter:	
  6150  0024                     __Umul8_16@multiplier:	
  6151                           ; 1 bytes @ 0x4
  6152                           
  6153  0024                     __tdiv_to_l_@quot:	
  6154                           ; 1 bytes @ 0x4
  6155                           
  6156                           
  6157                           ; 4 bytes @ 0x4
  6158  0024                     	ds	1
  6159  0025                     spi_write_read@tx_Data:	
  6160  0025                     ___awdiv@sign:	
  6161                           ; 1 bytes @ 0x5
  6162                           
  6163  0025                     ___lldiv@counter:	
  6164                           ; 1 bytes @ 0x5
  6165                           
  6166  0025                     __div_to_l_@quot:	
  6167                           ; 1 bytes @ 0x5
  6168                           
  6169                           
  6170                           ; 4 bytes @ 0x5
  6171  0025                     	ds	1
  6172  0026                     ?___llmod:	
  6173  0026                     spi_write_read@i:	
  6174                           ; 4 bytes @ 0x6
  6175                           
  6176  0026                     ___awdiv@quotient:	
  6177                           ; 1 bytes @ 0x6
  6178                           
  6179  0026                     ___llmod@divisor:	
  6180                           ; 2 bytes @ 0x6
  6181                           
  6182                           
  6183                           ; 4 bytes @ 0x6
  6184  0026                     	ds	1
  6185  0027                     adcRead@ch:	
  6186  0027                     spi_write_read@i_1411:	
  6187                           ; 1 bytes @ 0x7
  6188                           
  6189                           
  6190                           ; 1 bytes @ 0x7
  6191  0027                     	ds	1
  6192  0028                     __tdiv_to_l_@cntr:	
  6193  0028                     adcRead@ansHigh:	
  6194                           ; 1 bytes @ 0x8
  6195                           
  6196                           
  6197                           ; 2 bytes @ 0x8
  6198  0028                     	ds	1
  6199  0029                     pec15_calc@len:	
  6200  0029                     __div_to_l_@cntr:	
  6201                           ; 1 bytes @ 0x9
  6202                           
  6203  0029                     __tdiv_to_l_@exp1:	
  6204                           ; 1 bytes @ 0x9
  6205                           
  6206                           
  6207                           ; 1 bytes @ 0x9
  6208  0029                     	ds	1
  6209  002A                     __div_to_l_@exp1:	
  6210  002A                     adcRead@ansLow:	
  6211                           ; 1 bytes @ 0xA
  6212                           
  6213  002A                     pec15_calc@addr:	
  6214                           ; 2 bytes @ 0xA
  6215                           
  6216  002A                     ___llmod@dividend:	
  6217                           ; 2 bytes @ 0xA
  6218                           
  6219                           
  6220                           ; 4 bytes @ 0xA
  6221  002A                     	ds	2
  6222  002C                     pec15_calc@i:	
  6223  002C                     adcRead@total:	
  6224                           ; 1 bytes @ 0xC
  6225                           
  6226                           
  6227                           ; 2 bytes @ 0xC
  6228  002C                     	ds	1
  6229  002D                     pec15_calc@remainder:	
  6230                           
  6231                           ; 2 bytes @ 0xD
  6232  002D                     	ds	1
  6233  002E                     ??___llmod:	
  6234  002E                     ?___xxtofl:	
  6235                           ; 1 bytes @ 0xE
  6236                           
  6237  002E                     ___xxtofl@val:	
  6238                           ; 4 bytes @ 0xE
  6239                           
  6240                           
  6241                           ; 4 bytes @ 0xE
  6242  002E                     	ds	1
  6243  002F                     ?_LTC6804_wrcfg:	
  6244  002F                     ??_LTC6804_adcv:	
  6245                           ; 1 bytes @ 0xF
  6246                           
  6247  002F                     ?_LTC6804_rdcv_reg:	
  6248                           ; 1 bytes @ 0xF
  6249                           
  6250  002F                     LTC6804_rdcv_reg@total_ic:	
  6251                           ; 1 bytes @ 0xF
  6252                           
  6253  002F                     ___llmod@counter:	
  6254                           ; 1 bytes @ 0xF
  6255                           
  6256  002F                     LTC6804_wrcfg@config:	
  6257                           ; 1 bytes @ 0xF
  6258                           
  6259                           
  6260                           ; 2 bytes @ 0xF
  6261  002F                     	ds	1
  6262  0030                     LTC6804_rdcv_reg@data:	
  6263  0030                     LTC6804_adcv@cmd:	
  6264                           ; 1 bytes @ 0x10
  6265                           
  6266                           
  6267                           ; 4 bytes @ 0x10
  6268  0030                     	ds	1
  6269  0031                     ??_LTC6804_wrcfg:	
  6270  0031                     ??_LTC6804_rdcv_reg:	
  6271                           ; 1 bytes @ 0x11
  6272                           
  6273                           
  6274                           ; 1 bytes @ 0x11
  6275  0031                     	ds	1
  6276  0032                     ___xxtofl@sign:	
  6277                           
  6278                           ; 1 bytes @ 0x12
  6279  0032                     	ds	1
  6280  0033                     ___xxtofl@exp:	
  6281                           
  6282                           ; 1 bytes @ 0x13
  6283  0033                     	ds	1
  6284  0034                     LTC6804_adcv@cmd_pec:	
  6285  0034                     LTC6804_rdcv_reg@cmd_pec:	
  6286                           ; 2 bytes @ 0x14
  6287                           
  6288  0034                     ___xxtofl@arg:	
  6289                           ; 2 bytes @ 0x14
  6290                           
  6291                           
  6292                           ; 4 bytes @ 0x14
  6293  0034                     	ds	2
  6294  0036                     LTC6804_rdcv_reg@cmd:	
  6295  0036                     LTC6804_wrcfg@cmd:	
  6296                           ; 4 bytes @ 0x16
  6297                           
  6298                           
  6299                           ; 12 bytes @ 0x16
  6300  0036                     	ds	2
  6301  0038                     ?___fldiv:	
  6302  0038                     ___fldiv@a:	
  6303                           ; 4 bytes @ 0x18
  6304                           
  6305                           
  6306                           ; 4 bytes @ 0x18
  6307  0038                     	ds	2
  6308  003A                     LTC6804_rdcv_reg@reg:	
  6309                           
  6310                           ; 1 bytes @ 0x1A
  6311  003A                     	ds	1
  6312  003B                     ?_LTC6804_rdcv:	
  6313  003B                     LTC6804_rdcv@total_ic:	
  6314                           ; 1 bytes @ 0x1B
  6315                           
  6316                           
  6317                           ; 1 bytes @ 0x1B
  6318  003B                     	ds	1
  6319  003C                     LTC6804_rdcv@cell_codes:	
  6320  003C                     ___fldiv@b:	
  6321                           ; 1 bytes @ 0x1C
  6322                           
  6323                           
  6324                           ; 4 bytes @ 0x1C
  6325  003C                     	ds	1
  6326  003D                     ??_LTC6804_rdcv:	
  6327                           
  6328                           ; 1 bytes @ 0x1D
  6329  003D                     	ds	3
  6330  0040                     ??___fldiv:	
  6331                           
  6332                           ; 1 bytes @ 0x20
  6333  0040                     	ds	2
  6334  0042                     LTC6804_wrcfg@CMD_LEN:	
  6335  0042                     LTC6804_rdcv@cell_data:	
  6336                           ; 1 bytes @ 0x22
  6337                           
  6338                           
  6339                           ; 8 bytes @ 0x22
  6340  0042                     	ds	1
  6341  0043                     LTC6804_wrcfg@total_ic:	
  6342                           
  6343                           ; 1 bytes @ 0x23
  6344  0043                     	ds	1
  6345  0044                     LTC6804_wrcfg@cfg_pec:	
  6346                           
  6347                           ; 2 bytes @ 0x24
  6348  0044                     	ds	1
  6349  0045                     ___fldiv@sign:	
  6350                           
  6351                           ; 1 bytes @ 0x25
  6352  0045                     	ds	1
  6353  0046                     LTC6804_wrcfg@current_byte:	
  6354  0046                     ___fldiv@rem:	
  6355                           ; 1 bytes @ 0x26
  6356                           
  6357                           
  6358                           ; 4 bytes @ 0x26
  6359  0046                     	ds	1
  6360  0047                     LTC6804_wrcfg@current_ic:	
  6361                           
  6362                           ; 1 bytes @ 0x27
  6363  0047                     	ds	1
  6364  0048                     LTC6804_wrcfg@cmd_index:	
  6365                           
  6366                           ; 1 bytes @ 0x28
  6367  0048                     	ds	1
  6368  0049                     ?_LTC6804_initialize:	
  6369  0049                     LTC6804_initialize@configReg:	
  6370                           ; 1 bytes @ 0x29
  6371                           
  6372                           
  6373                           ; 2 bytes @ 0x29
  6374  0049                     	ds	1
  6375  004A                     LTC6804_rdcv@pec_error:	
  6376  004A                     ___fldiv@new_exp:	
  6377                           ; 1 bytes @ 0x2A
  6378                           
  6379                           
  6380                           ; 2 bytes @ 0x2A
  6381  004A                     	ds	1
  6382  004B                     LTC6804_rdcv@parsed_cell:	
  6383                           
  6384                           ; 2 bytes @ 0x2B
  6385  004B                     	ds	1
  6386  004C                     ___fldiv@grs:	
  6387                           
  6388                           ; 4 bytes @ 0x2C
  6389  004C                     	ds	1
  6390  004D                     LTC6804_rdcv@received_pec:	
  6391                           
  6392                           ; 2 bytes @ 0x2D
  6393  004D                     	ds	2
  6394  004F                     LTC6804_rdcv@data_pec:	
  6395                           
  6396                           ; 2 bytes @ 0x2F
  6397  004F                     	ds	1
  6398  0050                     ___fldiv@bexp:	
  6399                           
  6400                           ; 1 bytes @ 0x30
  6401  0050                     	ds	1
  6402  0051                     LTC6804_rdcv@reg:	
  6403  0051                     ___fldiv@aexp:	
  6404                           ; 1 bytes @ 0x31
  6405                           
  6406                           
  6407                           ; 1 bytes @ 0x31
  6408  0051                     	ds	1
  6409  0052                     ?___flmul:	
  6410  0052                     LTC6804_rdcv@current_ic:	
  6411                           ; 4 bytes @ 0x32
  6412                           
  6413  0052                     ___flmul@b:	
  6414                           ; 1 bytes @ 0x32
  6415                           
  6416                           
  6417                           ; 4 bytes @ 0x32
  6418  0052                     	ds	1
  6419  0053                     LTC6804_rdcv@current_cell:	
  6420                           
  6421                           ; 1 bytes @ 0x33
  6422  0053                     	ds	1
  6423  0054                     LTC6804_rdcv@current_ic_1329:	
  6424                           
  6425                           ; 1 bytes @ 0x34
  6426  0054                     	ds	1
  6427  0055                     LTC6804_rdcv@current_cell_1330:	
  6428                           
  6429                           ; 1 bytes @ 0x35
  6430  0055                     	ds	1
  6431  0056                     LTC6804_rdcv@cell_reg:	
  6432  0056                     ___flmul@a:	
  6433                           ; 1 bytes @ 0x36
  6434                           
  6435                           
  6436                           ; 4 bytes @ 0x36
  6437  0056                     	ds	1
  6438  0057                     LTC6804_rdcv@data_counter:	
  6439                           
  6440                           ; 1 bytes @ 0x37
  6441  0057                     	ds	3
  6442  005A                     ??___flmul:	
  6443                           
  6444                           ; 1 bytes @ 0x3A
  6445  005A                     	ds	5
  6446  005F                     ___flmul@sign:	
  6447                           
  6448                           ; 1 bytes @ 0x3F
  6449  005F                     	ds	1
  6450  0060                     ___flmul@aexp:	
  6451                           
  6452                           ; 1 bytes @ 0x40
  6453  0060                     	ds	1
  6454  0061                     ___flmul@grs:	
  6455                           
  6456                           ; 4 bytes @ 0x41
  6457  0061                     	ds	4
  6458  0065                     ___flmul@bexp:	
  6459                           
  6460                           ; 1 bytes @ 0x45
  6461  0065                     	ds	1
  6462  0066                     ___flmul@prod:	
  6463                           
  6464                           ; 4 bytes @ 0x46
  6465  0066                     	ds	4
  6466  006A                     ___flmul@temp:	
  6467                           
  6468                           ; 2 bytes @ 0x4A
  6469  006A                     	ds	2
  6470  006C                     ?_fround:	
  6471  006C                     ?_scale:	
  6472                           ; 4 bytes @ 0x4C
  6473                           
  6474                           
  6475                           ; 4 bytes @ 0x4C
  6476  006C                     	ds	4
  6477                           
  6478                           	psect	maintext
  6479  1CFC                     __pmaintext:	
  6480 ;;
  6481 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  6482 ;;
  6483 ;; *************** function _main *****************
  6484 ;; Defined at:
  6485 ;;		line 54 in file "main.c"
  6486 ;; Parameters:    Size  Location     Type
  6487 ;;		None
  6488 ;; Auto vars:     Size  Location     Type
  6489 ;;  i               2    2[BANK3 ] int 
  6490 ;;  numFaults       2    0[BANK3 ] int 
  6491 ;; Return value:  Size  Location     Type
  6492 ;;                  1    wreg      void 
  6493 ;; Registers used:
  6494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : B1F/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6501 ;;      Locals:         0       0       0       0       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6502 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6503 ;;      Totals:         0       0       0       3       4       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6504 ;;Total ram usage:        7 bytes
  6505 ;; Hardware stack levels required when called:    8
  6506 ;; This function calls:
  6507 ;;		___flge
  6508 ;;		_avgBuff
  6509 ;;		_cellBalancing
  6510 ;;		_getCurrent
  6511 ;;		_getTemps
  6512 ;;		_measureVoltages
  6513 ;;		_setup
  6514 ;;		_sumVoltages
  6515 ;;		_writeValuesToUart
  6516 ;; This function is called by:
  6517 ;;		Startup code after reset
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           
  6522                           ;psect for function _main
  6523  1CFC                     _main:	
  6524                           
  6525                           ;main.c: 56: int numFaults = 0;
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6529  1CFC  0023               	movlb	3	; select bank3
  6530  1CFD  01E0               	clrf	main@numFaults^(0+384)
  6531  1CFE  01E1               	clrf	(main@numFaults+1)^(0+384)
  6532                           
  6533                           ;main.c: 59: setup();
  6534  1CFF  31AC  2461  319C   	fcall	_setup
  6535                           
  6536                           ;main.c: 61: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6537  1D02  3029               	movlw	41
  6538  1D03  0022               	movlb	2	; select bank2
  6539  1D04  00E9               	movwf	(??_main^(0+256)+1)
  6540  1D05  3096               	movlw	150
  6541  1D06  00E8               	movwf	??_main^(0+256)
  6542  1D07  307F               	movlw	127
  6543  1D08                     u12217:	
  6544  1D08  0B89               	decfsz	9,f
  6545  1D09  2D08               	goto	u12217
  6546  1D0A  0BE8               	decfsz	??_main^(0+256),f
  6547  1D0B  2D08               	goto	u12217
  6548  1D0C  0BE9               	decfsz	(??_main^(0+256)+1),f
  6549  1D0D  2D08               	goto	u12217
  6550                           
  6551                           ;main.c: 63: LATDbits.LATD5 = 0;
  6552  1D0E  0022               	movlb	2	; select bank2
  6553  1D0F  128F               	bcf	15,5	;volatile
  6554                           
  6555                           ;main.c: 64: LATDbits.LATD4 = 0;
  6556  1D10  120F               	bcf	15,4	;volatile
  6557                           
  6558                           ;main.c: 66: LATDbits.LATD5 = 1;
  6559  1D11  168F               	bsf	15,5	;volatile
  6560  1D12                     l8378:	
  6561                           ;main.c: 79: while(1){
  6562                           
  6563                           
  6564                           ;main.c: 81: LATAbits.LATA5 ^= 1;
  6565  1D12  0022               	movlb	2	; select bank2
  6566  1D13  0E0C               	swapf	12,w	;volatile
  6567  1D14  00E8               	movwf	??_main^(0+256)
  6568  1D15  0C68               	rrf	??_main^(0+256),w
  6569  1D16  3901               	andlw	1
  6570  1D17  00E8               	movwf	??_main^(0+256)
  6571  1D18  3001               	movlw	1
  6572  1D19  06E8               	xorwf	??_main^(0+256),f
  6573  1D1A  0EE8               	swapf	??_main^(0+256),f
  6574  1D1B  0DE8               	rlf	??_main^(0+256),f
  6575  1D1C  080C               	movf	12,w	;volatile
  6576  1D1D  0668               	xorwf	??_main^(0+256),w
  6577  1D1E  39DF               	andlw	-33
  6578  1D1F  0668               	xorwf	??_main^(0+256),w
  6579  1D20  008C               	movwf	12	;volatile
  6580                           
  6581                           ;main.c: 82: measureVoltages(voltages, 12);
  6582  1D21  300C               	movlw	12
  6583  1D22  0021               	movlb	1	; select bank1
  6584  1D23  00E5               	movwf	measureVoltages@numVoltages^(0+128)
  6585  1D24  3000               	movlw	0
  6586  1D25  00E6               	movwf	(measureVoltages@numVoltages^(0+128)+1)
  6587  1D26  3038               	movlw	(low (_voltages| (0+512)))& (0+255)
  6588  1D27  31A6  26FB  319C   	fcall	_measureVoltages
  6589                           
  6590                           ;main.c: 84: totalVoltage = sumVoltages(voltages, 12);
  6591  1D2A  300C               	movlw	12
  6592  1D2B  0021               	movlb	1	; select bank1
  6593  1D2C  00D5               	movwf	sumVoltages@numVoltages^(0+128)
  6594  1D2D  3000               	movlw	0
  6595  1D2E  00D6               	movwf	(sumVoltages@numVoltages^(0+128)+1)
  6596  1D2F  3038               	movlw	(low (_voltages| (0+512)))& (0+255)
  6597  1D30  31AE  26B5  319C   	fcall	_sumVoltages
  6598  1D33  0021               	movlb	1	; select bank1
  6599  1D34  0858               	movf	(?_sumVoltages+3)^(0+128),w
  6600  1D35  0023               	movlb	3	; select bank3
  6601  1D36  00C5               	movwf	(_totalVoltage+3)^(0+384)
  6602  1D37  0021               	movlb	1	; select bank1
  6603  1D38  0857               	movf	(?_sumVoltages+2)^(0+128),w
  6604  1D39  0023               	movlb	3	; select bank3
  6605  1D3A  00C4               	movwf	(_totalVoltage+2)^(0+384)
  6606  1D3B  0021               	movlb	1	; select bank1
  6607  1D3C  0856               	movf	(?_sumVoltages+1)^(0+128),w
  6608  1D3D  0023               	movlb	3	; select bank3
  6609  1D3E  00C3               	movwf	(_totalVoltage+1)^(0+384)
  6610  1D3F  0021               	movlb	1	; select bank1
  6611  1D40  0855               	movf	?_sumVoltages^(0+128),w
  6612  1D41  0023               	movlb	3	; select bank3
  6613  1D42  00C2               	movwf	_totalVoltage^(0+384)
  6614                           
  6615                           ;main.c: 89: for(int i = 0; i <5; i++){
  6616  1D43  01E2               	clrf	main@i^(0+384)
  6617  1D44  01E3               	clrf	(main@i+1)^(0+384)
  6618  1D45  0863               	movf	(main@i+1)^(0+384),w
  6619  1D46  3A80               	xorlw	128
  6620  1D47  0022               	movlb	2	; select bank2
  6621  1D48  00E8               	movwf	??_main^(0+256)
  6622  1D49  3080               	movlw	128
  6623  1D4A  0268               	subwf	??_main^(0+256),w
  6624  1D4B  1D03               	skipz
  6625  1D4C  2D50               	goto	u11785
  6626  1D4D  3005               	movlw	5
  6627  1D4E  0023               	movlb	3	; select bank3
  6628  1D4F  0262               	subwf	main@i^(0+384),w
  6629  1D50                     u11785:	
  6630  1D50  1803               	btfsc	3,0
  6631  1D51  2D95               	goto	l8396
  6632  1D52                     l8390:	
  6633                           
  6634                           ;main.c: 90: if(temps[i] >= 40 || temps[i] <= 10){
  6635  1D52  0023               	movlb	3	; select bank3
  6636  1D53  3562               	lslf	main@i^(0+384),w
  6637  1D54  3EB8               	addlw	(low (_temps| (0+256)))& (0+255)
  6638  1D55  0086               	movwf	6
  6639  1D56  3001               	movlw	1	; select bank3/4
  6640  1D57  0087               	movwf	7
  6641  1D58  3F40               	moviw [0]fsr1
  6642  1D59  0022               	movlb	2	; select bank2
  6643  1D5A  00E8               	movwf	??_main^(0+256)
  6644  1D5B  3F41               	moviw [1]fsr1
  6645  1D5C  00E9               	movwf	(??_main^(0+256)+1)
  6646  1D5D  0869               	movf	(??_main+1)^(0+256),w
  6647  1D5E  3A80               	xorlw	128
  6648  1D5F  00EA               	movwf	(??_main+2)^(0+256)
  6649  1D60  3080               	movlw	128
  6650  1D61  026A               	subwf	(??_main+2)^(0+256),w
  6651  1D62  1D03               	skipz
  6652  1D63  2D66               	goto	u11795
  6653  1D64  3028               	movlw	40
  6654  1D65  0268               	subwf	??_main^(0+256),w
  6655  1D66                     u11795:	
  6656  1D66  1803               	skipnc
  6657  1D67  2D7E               	goto	l8394
  6658  1D68  0023               	movlb	3	; select bank3
  6659  1D69  3562               	lslf	main@i^(0+384),w
  6660  1D6A  3EB8               	addlw	(low (_temps| (0+256)))& (0+255)
  6661  1D6B  0086               	movwf	6
  6662  1D6C  3001               	movlw	1	; select bank3/4
  6663  1D6D  0087               	movwf	7
  6664  1D6E  3F40               	moviw [0]fsr1
  6665  1D6F  0022               	movlb	2	; select bank2
  6666  1D70  00E8               	movwf	??_main^(0+256)
  6667  1D71  3F41               	moviw [1]fsr1
  6668  1D72  00E9               	movwf	(??_main^(0+256)+1)
  6669  1D73  0869               	movf	(??_main+1)^(0+256),w
  6670  1D74  3A80               	xorlw	128
  6671  1D75  00EA               	movwf	(??_main+2)^(0+256)
  6672  1D76  3080               	movlw	128
  6673  1D77  026A               	subwf	(??_main+2)^(0+256),w
  6674  1D78  1D03               	skipz
  6675  1D79  2D7C               	goto	u11805
  6676  1D7A  300B               	movlw	11
  6677  1D7B  0268               	subwf	??_main^(0+256),w
  6678  1D7C                     u11805:	
  6679  1D7C  1803               	skipnc
  6680  1D7D  2D83               	goto	l106
  6681  1D7E                     l8394:	
  6682                           
  6683                           ;main.c: 91: numFaults++;
  6684  1D7E  3001               	movlw	1
  6685  1D7F  0023               	movlb	3	; select bank3
  6686  1D80  07E0               	addwf	main@numFaults^(0+384),f
  6687  1D81  3000               	movlw	0
  6688  1D82  3DE1               	addwfc	(main@numFaults+1)^(0+384),f
  6689  1D83                     l106:	
  6690  1D83  3001               	movlw	1
  6691  1D84  0023               	movlb	3	; select bank3
  6692  1D85  07E2               	addwf	main@i^(0+384),f
  6693  1D86  3000               	movlw	0
  6694  1D87  3DE3               	addwfc	(main@i+1)^(0+384),f
  6695  1D88  0863               	movf	(main@i+1)^(0+384),w
  6696  1D89  3A80               	xorlw	128
  6697  1D8A  0022               	movlb	2	; select bank2
  6698  1D8B  00E8               	movwf	??_main^(0+256)
  6699  1D8C  3080               	movlw	128
  6700  1D8D  0268               	subwf	??_main^(0+256),w
  6701  1D8E  1D03               	skipz
  6702  1D8F  2D93               	goto	u11815
  6703  1D90  3005               	movlw	5
  6704  1D91  0023               	movlb	3	; select bank3
  6705  1D92  0262               	subwf	main@i^(0+384),w
  6706  1D93                     u11815:	
  6707  1D93  1C03               	skipc
  6708  1D94  2D52               	goto	l8390
  6709  1D95                     l8396:	
  6710                           
  6711                           ;main.c: 92: }
  6712                           ;main.c: 93: }
  6713                           ;main.c: 95: if(current >= 10){
  6714  1D95  0023               	movlb	3	; select bank3
  6715  1D96  0827               	movf	(_current+3)^(0+384),w
  6716  1D97  0021               	movlb	1	; select bank1
  6717  1D98  00D8               	movwf	(___flge@ff1+3)^(0+128)
  6718  1D99  0023               	movlb	3	; select bank3
  6719  1D9A  0826               	movf	(_current+2)^(0+384),w
  6720  1D9B  0021               	movlb	1	; select bank1
  6721  1D9C  00D7               	movwf	(___flge@ff1+2)^(0+128)
  6722  1D9D  0023               	movlb	3	; select bank3
  6723  1D9E  0825               	movf	(_current+1)^(0+384),w
  6724  1D9F  0021               	movlb	1	; select bank1
  6725  1DA0  00D6               	movwf	(___flge@ff1+1)^(0+128)
  6726  1DA1  0023               	movlb	3	; select bank3
  6727  1DA2  0824               	movf	_current^(0+384),w
  6728  1DA3  0021               	movlb	1	; select bank1
  6729  1DA4  00D5               	movwf	___flge@ff1^(0+128)
  6730  1DA5  3041               	movlw	65
  6731  1DA6  00DC               	movwf	(___flge@ff2+3)^(0+128)
  6732  1DA7  3020               	movlw	32
  6733  1DA8  00DB               	movwf	(___flge@ff2+2)^(0+128)
  6734  1DA9  3000               	movlw	0
  6735  1DAA  00DA               	movwf	(___flge@ff2+1)^(0+128)
  6736  1DAB  3000               	movlw	0
  6737  1DAC  00D9               	movwf	___flge@ff2^(0+128)
  6738  1DAD  3188  2005  319C   	fcall	___flge
  6739  1DB0  1C03               	btfss	3,0
  6740  1DB1  2DB7               	goto	l109
  6741                           
  6742                           ;main.c: 96: numFaults++;
  6743  1DB2  3001               	movlw	1
  6744  1DB3  0023               	movlb	3	; select bank3
  6745  1DB4  07E0               	addwf	main@numFaults^(0+384),f
  6746  1DB5  3000               	movlw	0
  6747  1DB6  3DE1               	addwfc	(main@numFaults+1)^(0+384),f
  6748  1DB7                     l109:	
  6749                           
  6750                           ;main.c: 97: }
  6751                           ;main.c: 99: if(numFaults >= 10){
  6752  1DB7  0023               	movlb	3	; select bank3
  6753  1DB8  0861               	movf	(main@numFaults+1)^(0+384),w
  6754  1DB9  3A80               	xorlw	128
  6755  1DBA  0022               	movlb	2	; select bank2
  6756  1DBB  00E8               	movwf	??_main^(0+256)
  6757  1DBC  3080               	movlw	128
  6758  1DBD  0268               	subwf	??_main^(0+256),w
  6759  1DBE  1D03               	skipz
  6760  1DBF  2DC3               	goto	u11835
  6761  1DC0  300A               	movlw	10
  6762  1DC1  0023               	movlb	3	; select bank3
  6763  1DC2  0260               	subwf	main@numFaults^(0+384),w
  6764  1DC3                     u11835:	
  6765  1DC3  1C03               	skipc
  6766  1DC4  2DC7               	goto	l8402
  6767                           
  6768                           ;main.c: 100: LATDbits.LATD5 = 0;
  6769  1DC5  0022               	movlb	2	; select bank2
  6770  1DC6  128F               	bcf	15,5	;volatile
  6771  1DC7                     l8402:	
  6772                           
  6773                           ;main.c: 101: }
  6774                           ;main.c: 103: highestTemp = getTemps(temps, 5);
  6775  1DC7  3005               	movlw	5
  6776  1DC8  0021               	movlb	1	; select bank1
  6777  1DC9  00C8               	movwf	getTemps@numTemps^(0+128)
  6778  1DCA  3000               	movlw	0
  6779  1DCB  00C9               	movwf	(getTemps@numTemps^(0+128)+1)
  6780  1DCC  30B8               	movlw	(low (_temps| (0+256)))& (0+255)
  6781  1DCD  31A1  2146  319C   	fcall	_getTemps
  6782  1DD0  0021               	movlb	1	; select bank1
  6783  1DD1  0849               	movf	(?_getTemps+1)^(0+128),w
  6784  1DD2  0023               	movlb	3	; select bank3
  6785  1DD3  00AD               	movwf	(_highestTemp+1)^(0+384)
  6786  1DD4  0021               	movlb	1	; select bank1
  6787  1DD5  0848               	movf	?_getTemps^(0+128),w
  6788  1DD6  0023               	movlb	3	; select bank3
  6789  1DD7  00AC               	movwf	_highestTemp^(0+384)
  6790                           
  6791                           ;main.c: 104: if(currentBool == 1){
  6792  1DD8  032E               	decf	_currentBool^(0+384),w
  6793  1DD9  042F               	iorwf	(_currentBool+1)^(0+384),w
  6794  1DDA  1D03               	btfss	3,2
  6795  1DDB  2E30               	goto	l8420
  6796                           
  6797                           ;main.c: 105: currentBuff[currentIndex] = getCurrent();
  6798  1DDC  31AD  255D  319C   	fcall	_getCurrent
  6799  1DDF  0022               	movlb	2	; select bank2
  6800  1DE0  086B               	movf	_currentIndex^(0+256),w
  6801  1DE1  00E8               	movwf	??_main^(0+256)
  6802  1DE2  3001               	movlw	1
  6803  1DE3                     u11855:	
  6804  1DE3  35E8               	lslf	??_main^(0+256),f
  6805  1DE4  3EFF               	addlw	-1
  6806  1DE5  1D03               	skipz
  6807  1DE6  2DE3               	goto	u11855
  6808  1DE7  3568               	lslf	??_main^(0+256),w
  6809  1DE8  3E20               	addlw	(low (_currentBuff| (0+768)))& (0+255)
  6810  1DE9  0086               	movwf	6
  6811  1DEA  3003               	movlw	3	; select bank6/7
  6812  1DEB  0087               	movwf	7
  6813  1DEC  0021               	movlb	1	; select bank1
  6814  1DED  0861               	movf	?_getCurrent^(0+128),w
  6815  1DEE  3FC0               	movwi [0]fsr1
  6816  1DEF  0862               	movf	(?_getCurrent+1)^(0+128),w
  6817  1DF0  3FC1               	movwi [1]fsr1
  6818  1DF1  0863               	movf	(?_getCurrent+2)^(0+128),w
  6819  1DF2  3FC2               	movwi [2]fsr1
  6820  1DF3  0864               	movf	(?_getCurrent+3)^(0+128),w
  6821  1DF4  3FC3               	movwi [3]fsr1
  6822                           
  6823                           ;main.c: 106: currentIndex ++;
  6824  1DF5  3001               	movlw	1
  6825  1DF6  0022               	movlb	2	; select bank2
  6826  1DF7  07EB               	addwf	_currentIndex^(0+256),f
  6827  1DF8  3000               	movlw	0
  6828  1DF9  3DEC               	addwfc	(_currentIndex+1)^(0+256),f
  6829                           
  6830                           ;main.c: 107: if(currentIndex >= 20){
  6831  1DFA  086C               	movf	(_currentIndex+1)^(0+256),w
  6832  1DFB  3A80               	xorlw	128
  6833  1DFC  00E8               	movwf	??_main^(0+256)
  6834  1DFD  3080               	movlw	128
  6835  1DFE  0268               	subwf	??_main^(0+256),w
  6836  1DFF  1D03               	skipz
  6837  1E00  2E03               	goto	u11865
  6838  1E01  3014               	movlw	20
  6839  1E02  026B               	subwf	_currentIndex^(0+256),w
  6840  1E03                     u11865:	
  6841  1E03  1C03               	skipc
  6842  1E04  2E2D               	goto	l8418
  6843                           
  6844                           ;main.c: 108: cellBalancing(voltages, 12);
  6845  1E05  300C               	movlw	12
  6846  1E06  0021               	movlb	1	; select bank1
  6847  1E07  00E5               	movwf	cellBalancing@numVoltages^(0+128)
  6848  1E08  3000               	movlw	0
  6849  1E09  00E6               	movwf	(cellBalancing@numVoltages^(0+128)+1)
  6850  1E0A  3038               	movlw	(low (_voltages| (0+512)))& (0+255)
  6851  1E0B  319C  241C  319C   	fcall	_cellBalancing
  6852                           
  6853                           ;main.c: 109: current = avgBuff(currentBuff, currentIndex);
  6854  1E0E  0022               	movlb	2	; select bank2
  6855  1E0F  086C               	movf	(_currentIndex+1)^(0+256),w
  6856  1E10  0021               	movlb	1	; select bank1
  6857  1E11  00D6               	movwf	(avgBuff@size+1)^(0+128)
  6858  1E12  0022               	movlb	2	; select bank2
  6859  1E13  086B               	movf	_currentIndex^(0+256),w
  6860  1E14  0021               	movlb	1	; select bank1
  6861  1E15  00D5               	movwf	avgBuff@size^(0+128)
  6862  1E16  3020               	movlw	(low (_currentBuff| (0+768)))& (0+255)
  6863  1E17  31A1  21C5  319C   	fcall	_avgBuff
  6864  1E1A  0021               	movlb	1	; select bank1
  6865  1E1B  0858               	movf	(?_avgBuff+3)^(0+128),w
  6866  1E1C  0023               	movlb	3	; select bank3
  6867  1E1D  00A7               	movwf	(_current+3)^(0+384)
  6868  1E1E  0021               	movlb	1	; select bank1
  6869  1E1F  0857               	movf	(?_avgBuff+2)^(0+128),w
  6870  1E20  0023               	movlb	3	; select bank3
  6871  1E21  00A6               	movwf	(_current+2)^(0+384)
  6872  1E22  0021               	movlb	1	; select bank1
  6873  1E23  0856               	movf	(?_avgBuff+1)^(0+128),w
  6874  1E24  0023               	movlb	3	; select bank3
  6875  1E25  00A5               	movwf	(_current+1)^(0+384)
  6876  1E26  0021               	movlb	1	; select bank1
  6877  1E27  0855               	movf	?_avgBuff^(0+128),w
  6878  1E28  0023               	movlb	3	; select bank3
  6879  1E29  00A4               	movwf	_current^(0+384)
  6880                           
  6881                           ;main.c: 110: currentIndex = 0;
  6882  1E2A  0022               	movlb	2	; select bank2
  6883  1E2B  01EB               	clrf	_currentIndex^(0+256)
  6884  1E2C  01EC               	clrf	(_currentIndex+1)^(0+256)
  6885  1E2D                     l8418:	
  6886                           
  6887                           ;main.c: 111: }
  6888                           ;main.c: 112: currentBool = 0;
  6889  1E2D  0023               	movlb	3	; select bank3
  6890  1E2E  01AE               	clrf	_currentBool^(0+384)
  6891  1E2F  01AF               	clrf	(_currentBool+1)^(0+384)
  6892  1E30                     l8420:	
  6893                           
  6894                           ;main.c: 113: }
  6895                           ;main.c: 114: if(uartBool == 1){
  6896  1E30  0330               	decf	_uartBool^(0+384),w
  6897  1E31  0431               	iorwf	(_uartBool+1)^(0+384),w
  6898  1E32  1D03               	btfss	3,2
  6899  1E33  2D12               	goto	l8378
  6900                           
  6901                           ;main.c: 115: writeValuesToUart(voltages, 12, totalVoltage, temps, 5, highestTemp, curre
      +                          nt, 21);
  6902  1E34  300C               	movlw	12
  6903  1E35  0022               	movlb	2	; select bank2
  6904  1E36  00D6               	movwf	writeValuesToUart@voltageArrLength^(0+256)
  6905  1E37  3000               	movlw	0
  6906  1E38  00D7               	movwf	(writeValuesToUart@voltageArrLength^(0+256)+1)
  6907  1E39  0023               	movlb	3	; select bank3
  6908  1E3A  0845               	movf	(_totalVoltage+3)^(0+384),w
  6909  1E3B  0022               	movlb	2	; select bank2
  6910  1E3C  00DB               	movwf	(writeValuesToUart@totalVoltage+3)^(0+256)
  6911  1E3D  0023               	movlb	3	; select bank3
  6912  1E3E  0844               	movf	(_totalVoltage+2)^(0+384),w
  6913  1E3F  0022               	movlb	2	; select bank2
  6914  1E40  00DA               	movwf	(writeValuesToUart@totalVoltage+2)^(0+256)
  6915  1E41  0023               	movlb	3	; select bank3
  6916  1E42  0843               	movf	(_totalVoltage+1)^(0+384),w
  6917  1E43  0022               	movlb	2	; select bank2
  6918  1E44  00D9               	movwf	(writeValuesToUart@totalVoltage+1)^(0+256)
  6919  1E45  0023               	movlb	3	; select bank3
  6920  1E46  0842               	movf	_totalVoltage^(0+384),w
  6921  1E47  0022               	movlb	2	; select bank2
  6922  1E48  00D8               	movwf	writeValuesToUart@totalVoltage^(0+256)
  6923  1E49  30B8               	movlw	(low (_temps| (0+256)))& (0+255)
  6924  1E4A  00E8               	movwf	??_main^(0+256)
  6925  1E4B  0868               	movf	??_main^(0+256),w
  6926  1E4C  00DC               	movwf	writeValuesToUart@temperatureArr^(0+256)
  6927  1E4D  3005               	movlw	5
  6928  1E4E  00DD               	movwf	writeValuesToUart@temperatureArrLength^(0+256)
  6929  1E4F  3000               	movlw	0
  6930  1E50  00DE               	movwf	(writeValuesToUart@temperatureArrLength^(0+256)+1)
  6931  1E51  0023               	movlb	3	; select bank3
  6932  1E52  082D               	movf	(_highestTemp+1)^(0+384),w
  6933  1E53  0022               	movlb	2	; select bank2
  6934  1E54  00E0               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+256)
  6935  1E55  0023               	movlb	3	; select bank3
  6936  1E56  082C               	movf	_highestTemp^(0+384),w
  6937  1E57  0022               	movlb	2	; select bank2
  6938  1E58  00DF               	movwf	writeValuesToUart@temperatureHigh^(0+256)
  6939  1E59  0023               	movlb	3	; select bank3
  6940  1E5A  0827               	movf	(_current+3)^(0+384),w
  6941  1E5B  0022               	movlb	2	; select bank2
  6942  1E5C  00E4               	movwf	(writeValuesToUart@current+3)^(0+256)
  6943  1E5D  0023               	movlb	3	; select bank3
  6944  1E5E  0826               	movf	(_current+2)^(0+384),w
  6945  1E5F  0022               	movlb	2	; select bank2
  6946  1E60  00E3               	movwf	(writeValuesToUart@current+2)^(0+256)
  6947  1E61  0023               	movlb	3	; select bank3
  6948  1E62  0825               	movf	(_current+1)^(0+384),w
  6949  1E63  0022               	movlb	2	; select bank2
  6950  1E64  00E2               	movwf	(writeValuesToUart@current+1)^(0+256)
  6951  1E65  0023               	movlb	3	; select bank3
  6952  1E66  0824               	movf	_current^(0+384),w
  6953  1E67  0022               	movlb	2	; select bank2
  6954  1E68  00E1               	movwf	writeValuesToUart@current^(0+256)
  6955  1E69  3015               	movlw	21
  6956  1E6A  00E5               	movwf	writeValuesToUart@uartLines^(0+256)
  6957  1E6B  3000               	movlw	0
  6958  1E6C  00E6               	movwf	(writeValuesToUart@uartLines^(0+256)+1)
  6959  1E6D  3038               	movlw	(low (_voltages| (0+512)))& (0+255)
  6960  1E6E  31AC  24B8  319C   	fcall	_writeValuesToUart
  6961                           
  6962                           ;main.c: 116: uartBool = 0;
  6963  1E71  0023               	movlb	3	; select bank3
  6964  1E72  01B0               	clrf	_uartBool^(0+384)
  6965  1E73  01B1               	clrf	(_uartBool+1)^(0+384)
  6966  1E74  2D12               	goto	l8378
  6967  1E75                     __end_of_main:	
  6968                           
  6969                           	psect	text1
  6970  2CB8                     __ptext1:	
  6971 ;; *************** function _writeValuesToUart *****************
  6972 ;; Defined at:
  6973 ;;		line 11 in file "uart.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  voltageArr      1    wreg     PTR float 
  6976 ;;		 -> voltages(48), 
  6977 ;;  voltageArrLe    2   54[BANK2 ] int 
  6978 ;;  totalVoltage    4   56[BANK2 ] float 
  6979 ;;  temperatureA    1   60[BANK2 ] PTR int 
  6980 ;;		 -> temps(10), 
  6981 ;;  temperatureA    2   61[BANK2 ] int 
  6982 ;;  temperatureH    2   63[BANK2 ] int 
  6983 ;;  current         4   65[BANK2 ] float 
  6984 ;;  uartLines       2   69[BANK2 ] int 
  6985 ;; Auto vars:     Size  Location     Type
  6986 ;;  voltageArr      1   71[BANK2 ] PTR float 
  6987 ;;		 -> voltages(48), 
  6988 ;; Return value:  Size  Location     Type
  6989 ;;                  1    wreg      void 
  6990 ;; Registers used:
  6991 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6992 ;; Tracked objects:
  6993 ;;		On entry : 0/0
  6994 ;;		On exit  : 0/0
  6995 ;;		Unchanged: 0/0
  6996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6997 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6998 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7000 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7001 ;;Total ram usage:       18 bytes
  7002 ;; Hardware stack levels used:    1
  7003 ;; Hardware stack levels required when called:    7
  7004 ;; This function calls:
  7005 ;;		_clearScreen
  7006 ;;		_writeCurrent
  7007 ;;		_writeTemps
  7008 ;;		_writeVoltages
  7009 ;; This function is called by:
  7010 ;;		_main
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _writeValuesToUart
  7016  2CB8                     _writeValuesToUart:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7020                           ;writeValuesToUart@voltageArr stored from wreg
  7021  2CB8  0022               	movlb	2	; select bank2
  7022  2CB9  00E7               	movwf	writeValuesToUart@voltageArr^(0+256)
  7023                           
  7024                           ;uart.c: 12: clearScreen(uartLines);
  7025  2CBA  0866               	movf	(writeValuesToUart@uartLines+1)^(0+256),w
  7026  2CBB  00C2               	movwf	(clearScreen@numLines+1)^(0+256)
  7027  2CBC  0865               	movf	writeValuesToUart@uartLines^(0+256),w
  7028  2CBD  00C1               	movwf	clearScreen@numLines^(0+256)
  7029  2CBE  31AD  2521  31AC   	fcall	_clearScreen
  7030                           
  7031                           ;uart.c: 13: writeVoltages(voltageArr, voltageArrLength, totalVoltage);
  7032  2CC1  0022               	movlb	2	; select bank2
  7033  2CC2  0857               	movf	(writeValuesToUart@voltageArrLength+1)^(0+256),w
  7034  2CC3  00C2               	movwf	(writeVoltages@length+1)^(0+256)
  7035  2CC4  0856               	movf	writeValuesToUart@voltageArrLength^(0+256),w
  7036  2CC5  00C1               	movwf	writeVoltages@length^(0+256)
  7037  2CC6  085B               	movf	(writeValuesToUart@totalVoltage+3)^(0+256),w
  7038  2CC7  00C6               	movwf	(writeVoltages@totalVoltage+3)^(0+256)
  7039  2CC8  085A               	movf	(writeValuesToUart@totalVoltage+2)^(0+256),w
  7040  2CC9  00C5               	movwf	(writeVoltages@totalVoltage+2)^(0+256)
  7041  2CCA  0859               	movf	(writeValuesToUart@totalVoltage+1)^(0+256),w
  7042  2CCB  00C4               	movwf	(writeVoltages@totalVoltage+1)^(0+256)
  7043  2CCC  0858               	movf	writeValuesToUart@totalVoltage^(0+256),w
  7044  2CCD  00C3               	movwf	writeVoltages@totalVoltage^(0+256)
  7045  2CCE  0867               	movf	writeValuesToUart@voltageArr^(0+256),w
  7046  2CCF  3193  2307  31AC   	fcall	_writeVoltages
  7047                           
  7048                           ;uart.c: 14: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength);
  7049  2CD2  0022               	movlb	2	; select bank2
  7050  2CD3  0860               	movf	(writeValuesToUart@temperatureHigh+1)^(0+256),w
  7051  2CD4  00C2               	movwf	(writeTemps@highestTemp+1)^(0+256)
  7052  2CD5  085F               	movf	writeValuesToUart@temperatureHigh^(0+256),w
  7053  2CD6  00C1               	movwf	writeTemps@highestTemp^(0+256)
  7054  2CD7  085E               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+256),w
  7055  2CD8  00C4               	movwf	(writeTemps@numTemps+1)^(0+256)
  7056  2CD9  085D               	movf	writeValuesToUart@temperatureArrLength^(0+256),w
  7057  2CDA  00C3               	movwf	writeTemps@numTemps^(0+256)
  7058  2CDB  085C               	movf	writeValuesToUart@temperatureArr^(0+256),w
  7059  2CDC  31A0  206D  31AC   	fcall	_writeTemps
  7060                           
  7061                           ;uart.c: 15: writeCurrent(current);
  7062  2CDF  0022               	movlb	2	; select bank2
  7063  2CE0  0864               	movf	(writeValuesToUart@current+3)^(0+256),w
  7064  2CE1  00C4               	movwf	(writeCurrent@current+3)^(0+256)
  7065  2CE2  0863               	movf	(writeValuesToUart@current+2)^(0+256),w
  7066  2CE3  00C3               	movwf	(writeCurrent@current+2)^(0+256)
  7067  2CE4  0862               	movf	(writeValuesToUart@current+1)^(0+256),w
  7068  2CE5  00C2               	movwf	(writeCurrent@current+1)^(0+256)
  7069  2CE6  0861               	movf	writeValuesToUart@current^(0+256),w
  7070  2CE7  00C1               	movwf	writeCurrent@current^(0+256)
  7071  2CE8  31AC  2441         	fcall	_writeCurrent
  7072  2CEA  0008               	return
  7073  2CEB                     __end_of_writeValuesToUart:	
  7074                           
  7075                           	psect	text2
  7076  1307                     __ptext2:	
  7077 ;; *************** function _writeVoltages *****************
  7078 ;; Defined at:
  7079 ;;		line 18 in file "uart.c"
  7080 ;; Parameters:    Size  Location     Type
  7081 ;;  volts           1    wreg     PTR float 
  7082 ;;		 -> voltages(48), 
  7083 ;;  length          2   33[BANK2 ] int 
  7084 ;;  totalVoltage    4   35[BANK2 ] float 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  volts           1   51[BANK2 ] PTR float 
  7087 ;;		 -> voltages(48), 
  7088 ;;  k               2   52[BANK2 ] int 
  7089 ;;  minCell         2   49[BANK2 ] int 
  7090 ;;  maxCell         2   47[BANK2 ] int 
  7091 ;; Return value:  Size  Location     Type
  7092 ;;                  1    wreg      void 
  7093 ;; Registers used:
  7094 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7095 ;; Tracked objects:
  7096 ;;		On entry : 0/0
  7097 ;;		On exit  : 0/0
  7098 ;;		Unchanged: 0/0
  7099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7100 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7101 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7102 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7103 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7104 ;;Total ram usage:       21 bytes
  7105 ;; Hardware stack levels used:    1
  7106 ;; Hardware stack levels required when called:    6
  7107 ;; This function calls:
  7108 ;;		___fladd
  7109 ;;		___flge
  7110 ;;		___flneg
  7111 ;;		_sprintf
  7112 ;;		_uartEnable
  7113 ;; This function is called by:
  7114 ;;		_writeValuesToUart
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           
  7119                           ;psect for function _writeVoltages
  7120  1307                     _writeVoltages:	
  7121                           
  7122                           ;incstack = 0
  7123                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7124                           ;writeVoltages@volts stored from wreg
  7125  1307  0022               	movlb	2	; select bank2
  7126  1308  00D3               	movwf	writeVoltages@volts^(0+256)
  7127                           
  7128                           ;uart.c: 19: int maxCell = 0;
  7129  1309  01CF               	clrf	writeVoltages@maxCell^(0+256)
  7130  130A  01D0               	clrf	(writeVoltages@maxCell+1)^(0+256)
  7131                           
  7132                           ;uart.c: 20: int minCell = 0;
  7133  130B  01D1               	clrf	writeVoltages@minCell^(0+256)
  7134  130C  01D2               	clrf	(writeVoltages@minCell+1)^(0+256)
  7135                           
  7136                           ;uart.c: 21: for(int k = 0; k < length; k++){
  7137  130D  01D4               	clrf	writeVoltages@k^(0+256)
  7138  130E  01D5               	clrf	(writeVoltages@k+1)^(0+256)
  7139  130F                     l253:	
  7140  130F  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7141  1310  3A80               	xorlw	128
  7142  1311  00C7               	movwf	??_writeVoltages^(0+256)
  7143  1312  0842               	movf	(writeVoltages@length+1)^(0+256),w
  7144  1313  3A80               	xorlw	128
  7145  1314  0247               	subwf	??_writeVoltages^(0+256),w
  7146  1315  1D03               	skipz
  7147  1316  2B19               	goto	u11255
  7148  1317  0841               	movf	writeVoltages@length^(0+256),w
  7149  1318  0254               	subwf	writeVoltages@k^(0+256),w
  7150  1319                     u11255:	
  7151  1319  1803               	btfsc	3,0
  7152  131A  2BC7               	goto	l8018
  7153                           
  7154                           ;uart.c: 22: if(volts[k]<volts[minCell]){
  7155  131B  0022               	movlb	2	; select bank2
  7156  131C  0854               	movf	writeVoltages@k^(0+256),w
  7157  131D  00C7               	movwf	??_writeVoltages^(0+256)
  7158  131E  3001               	movlw	1
  7159  131F                     u11175:	
  7160  131F  35C7               	lslf	??_writeVoltages^(0+256),f
  7161  1320  3EFF               	addlw	-1
  7162  1321  1D03               	skipz
  7163  1322  2B1F               	goto	u11175
  7164  1323  3547               	lslf	??_writeVoltages^(0+256),w
  7165  1324  0753               	addwf	writeVoltages@volts^(0+256),w
  7166  1325  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7167  1326  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7168  1327  0086               	movwf	6
  7169  1328  3002               	movlw	2	; select bank4/5
  7170  1329  0087               	movwf	7
  7171  132A  3F40               	moviw [0]fsr1
  7172  132B  0021               	movlb	1	; select bank1
  7173  132C  00D5               	movwf	___flge@ff1^(0+128)
  7174  132D  3F41               	moviw [1]fsr1
  7175  132E  00D6               	movwf	(___flge@ff1+1)^(0+128)
  7176  132F  3F42               	moviw [2]fsr1
  7177  1330  00D7               	movwf	(___flge@ff1+2)^(0+128)
  7178  1331  3F43               	moviw [3]fsr1
  7179  1332  00D8               	movwf	(___flge@ff1+3)^(0+128)
  7180  1333  0022               	movlb	2	; select bank2
  7181  1334  0851               	movf	writeVoltages@minCell^(0+256),w
  7182  1335  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7183  1336  3001               	movlw	1
  7184  1337                     u11185:	
  7185  1337  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7186  1338  3EFF               	addlw	-1
  7187  1339  1D03               	skipz
  7188  133A  2B37               	goto	u11185
  7189  133B  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7190  133C  0753               	addwf	writeVoltages@volts^(0+256),w
  7191  133D  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7192  133E  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7193  133F  0086               	movwf	6
  7194  1340  3002               	movlw	2	; select bank4/5
  7195  1341  0087               	movwf	7
  7196  1342  3F40               	moviw [0]fsr1
  7197  1343  0021               	movlb	1	; select bank1
  7198  1344  00D9               	movwf	___flge@ff2^(0+128)
  7199  1345  3F41               	moviw [1]fsr1
  7200  1346  00DA               	movwf	(___flge@ff2+1)^(0+128)
  7201  1347  3F42               	moviw [2]fsr1
  7202  1348  00DB               	movwf	(___flge@ff2+2)^(0+128)
  7203  1349  3F43               	moviw [3]fsr1
  7204  134A  00DC               	movwf	(___flge@ff2+3)^(0+128)
  7205  134B  3188  2005  3193   	fcall	___flge
  7206  134E  1803               	btfsc	3,0
  7207  134F  2B56               	goto	l8008
  7208                           
  7209                           ;uart.c: 23: minCell = k;
  7210  1350  0022               	movlb	2	; select bank2
  7211  1351  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7212  1352  00D2               	movwf	(writeVoltages@minCell+1)^(0+256)
  7213  1353  0854               	movf	writeVoltages@k^(0+256),w
  7214  1354  00D1               	movwf	writeVoltages@minCell^(0+256)
  7215                           
  7216                           ;uart.c: 24: }else if(volts[k] > volts[maxCell]){
  7217  1355  2B90               	goto	l8012
  7218  1356                     l8008:	
  7219  1356  0022               	movlb	2	; select bank2
  7220  1357  084F               	movf	writeVoltages@maxCell^(0+256),w
  7221  1358  00C7               	movwf	??_writeVoltages^(0+256)
  7222  1359  3001               	movlw	1
  7223  135A                     u11205:	
  7224  135A  35C7               	lslf	??_writeVoltages^(0+256),f
  7225  135B  3EFF               	addlw	-1
  7226  135C  1D03               	skipz
  7227  135D  2B5A               	goto	u11205
  7228  135E  3547               	lslf	??_writeVoltages^(0+256),w
  7229  135F  0753               	addwf	writeVoltages@volts^(0+256),w
  7230  1360  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7231  1361  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7232  1362  0086               	movwf	6
  7233  1363  3002               	movlw	2	; select bank4/5
  7234  1364  0087               	movwf	7
  7235  1365  3F40               	moviw [0]fsr1
  7236  1366  0021               	movlb	1	; select bank1
  7237  1367  00D5               	movwf	___flge@ff1^(0+128)
  7238  1368  3F41               	moviw [1]fsr1
  7239  1369  00D6               	movwf	(___flge@ff1+1)^(0+128)
  7240  136A  3F42               	moviw [2]fsr1
  7241  136B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  7242  136C  3F43               	moviw [3]fsr1
  7243  136D  00D8               	movwf	(___flge@ff1+3)^(0+128)
  7244  136E  0022               	movlb	2	; select bank2
  7245  136F  0854               	movf	writeVoltages@k^(0+256),w
  7246  1370  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7247  1371  3001               	movlw	1
  7248  1372                     u11215:	
  7249  1372  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7250  1373  3EFF               	addlw	-1
  7251  1374  1D03               	skipz
  7252  1375  2B72               	goto	u11215
  7253  1376  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7254  1377  0753               	addwf	writeVoltages@volts^(0+256),w
  7255  1378  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7256  1379  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7257  137A  0086               	movwf	6
  7258  137B  3002               	movlw	2	; select bank4/5
  7259  137C  0087               	movwf	7
  7260  137D  3F40               	moviw [0]fsr1
  7261  137E  0021               	movlb	1	; select bank1
  7262  137F  00D9               	movwf	___flge@ff2^(0+128)
  7263  1380  3F41               	moviw [1]fsr1
  7264  1381  00DA               	movwf	(___flge@ff2+1)^(0+128)
  7265  1382  3F42               	moviw [2]fsr1
  7266  1383  00DB               	movwf	(___flge@ff2+2)^(0+128)
  7267  1384  3F43               	moviw [3]fsr1
  7268  1385  00DC               	movwf	(___flge@ff2+3)^(0+128)
  7269  1386  3188  2005  3193   	fcall	___flge
  7270  1389  1803               	btfsc	3,0
  7271  138A  2B90               	goto	l8012
  7272                           
  7273                           ;uart.c: 25: maxCell = k;
  7274  138B  0022               	movlb	2	; select bank2
  7275  138C  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7276  138D  00D0               	movwf	(writeVoltages@maxCell+1)^(0+256)
  7277  138E  0854               	movf	writeVoltages@k^(0+256),w
  7278  138F  00CF               	movwf	writeVoltages@maxCell^(0+256)
  7279  1390                     l8012:	
  7280                           
  7281                           ;uart.c: 26: }
  7282                           ;uart.c: 28: sprintf(&str[0], "V%i = %0.4fV\n\r", k+1, volts[k]);
  7283  1390  3036               	movlw	low (STR_1| (0+32768))
  7284  1391  0021               	movlb	1	; select bank1
  7285  1392  00E5               	movwf	sprintf@f^(0+128)
  7286  1393  30B1               	movlw	high (STR_1| (0+32768))
  7287  1394  00E6               	movwf	(sprintf@f^(0+128)+1)
  7288  1395  0022               	movlb	2	; select bank2
  7289  1396  0854               	movf	writeVoltages@k^(0+256),w
  7290  1397  3E01               	addlw	1
  7291  1398  0021               	movlb	1	; select bank1
  7292  1399  00E7               	movwf	(?_sprintf^(0+128)+2)
  7293  139A  3000               	movlw	0
  7294  139B  0022               	movlb	2	; select bank2
  7295  139C  3D55               	addwfc	(writeVoltages@k+1)^(0+256),w
  7296  139D  0021               	movlb	1	; select bank1
  7297  139E  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7298  139F  0022               	movlb	2	; select bank2
  7299  13A0  0854               	movf	writeVoltages@k^(0+256),w
  7300  13A1  00C7               	movwf	??_writeVoltages^(0+256)
  7301  13A2  3001               	movlw	1
  7302  13A3                     u11235:	
  7303  13A3  35C7               	lslf	??_writeVoltages^(0+256),f
  7304  13A4  3EFF               	addlw	-1
  7305  13A5  1D03               	skipz
  7306  13A6  2BA3               	goto	u11235
  7307  13A7  3547               	lslf	??_writeVoltages^(0+256),w
  7308  13A8  0753               	addwf	writeVoltages@volts^(0+256),w
  7309  13A9  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7310  13AA  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7311  13AB  0086               	movwf	6
  7312  13AC  3002               	movlw	2	; select bank4/5
  7313  13AD  0087               	movwf	7
  7314  13AE  3F40               	moviw [0]fsr1
  7315  13AF  0021               	movlb	1	; select bank1
  7316  13B0  00E9               	movwf	(?_sprintf^(0+128)+4)
  7317  13B1  3F41               	moviw [1]fsr1
  7318  13B2  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7319  13B3  3F42               	moviw [2]fsr1
  7320  13B4  00EB               	movwf	((?_sprintf+2)^(0+128)+4)
  7321  13B5  3F43               	moviw [3]fsr1
  7322  13B6  00EC               	movwf	((?_sprintf+3)^(0+128)+4)
  7323  13B7  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7324  13B8  3188  209F  3193   	fcall	_sprintf
  7325                           
  7326                           ;uart.c: 29: uartEnable();
  7327  13BB  31AB  231F  3193   	fcall	_uartEnable
  7328  13BE                     l258:	
  7329                           ;uart.c: 30: while(PIE1bits.TXIE);
  7330                           
  7331  13BE  0021               	movlb	1	; select bank1
  7332  13BF  1A11               	btfsc	17,4	;volatile
  7333  13C0  2BBE               	goto	l258
  7334  13C1  3001               	movlw	1
  7335  13C2  0022               	movlb	2	; select bank2
  7336  13C3  07D4               	addwf	writeVoltages@k^(0+256),f
  7337  13C4  3000               	movlw	0
  7338  13C5  3DD5               	addwfc	(writeVoltages@k+1)^(0+256),f
  7339  13C6  2B0F               	goto	l253
  7340  13C7                     l8018:	
  7341                           
  7342                           ;uart.c: 31: }
  7343                           ;uart.c: 33: sprintf(&str[0], "Pack Voltage: %0.4fV\n\r", totalVoltage);
  7344  13C7  30E9               	movlw	low (STR_2| (0+32768))
  7345  13C8  0021               	movlb	1	; select bank1
  7346  13C9  00E5               	movwf	sprintf@f^(0+128)
  7347  13CA  30B0               	movlw	high (STR_2| (0+32768))
  7348  13CB  00E6               	movwf	(sprintf@f^(0+128)+1)
  7349  13CC  0022               	movlb	2	; select bank2
  7350  13CD  0846               	movf	(writeVoltages@totalVoltage+3)^(0+256),w
  7351  13CE  0021               	movlb	1	; select bank1
  7352  13CF  00EA               	movwf	((?_sprintf+3)^(0+128)+2)
  7353  13D0  0022               	movlb	2	; select bank2
  7354  13D1  0845               	movf	(writeVoltages@totalVoltage+2)^(0+256),w
  7355  13D2  0021               	movlb	1	; select bank1
  7356  13D3  00E9               	movwf	((?_sprintf+2)^(0+128)+2)
  7357  13D4  0022               	movlb	2	; select bank2
  7358  13D5  0844               	movf	(writeVoltages@totalVoltage+1)^(0+256),w
  7359  13D6  0021               	movlb	1	; select bank1
  7360  13D7  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7361  13D8  0022               	movlb	2	; select bank2
  7362  13D9  0843               	movf	writeVoltages@totalVoltage^(0+256),w
  7363  13DA  0021               	movlb	1	; select bank1
  7364  13DB  00E7               	movwf	(?_sprintf^(0+128)+2)
  7365  13DC  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7366  13DD  3188  209F  3193   	fcall	_sprintf
  7367                           
  7368                           ;uart.c: 34: uartEnable();
  7369  13E0  31AB  231F  3193   	fcall	_uartEnable
  7370  13E3                     l262:	
  7371                           ;uart.c: 35: while(PIE1bits.TXIE);
  7372                           
  7373  13E3  0021               	movlb	1	; select bank1
  7374  13E4  1A11               	btfsc	17,4	;volatile
  7375  13E5  2BE3               	goto	l262
  7376                           
  7377                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7378  13E6  0022               	movlb	2	; select bank2
  7379  13E7  084F               	movf	writeVoltages@maxCell^(0+256),w
  7380  13E8  00C7               	movwf	??_writeVoltages^(0+256)
  7381  13E9  3001               	movlw	1
  7382  13EA                     u11275:	
  7383  13EA  35C7               	lslf	??_writeVoltages^(0+256),f
  7384  13EB  3EFF               	addlw	-1
  7385  13EC  1D03               	skipz
  7386  13ED  2BEA               	goto	u11275
  7387  13EE  3547               	lslf	??_writeVoltages^(0+256),w
  7388  13EF  0753               	addwf	writeVoltages@volts^(0+256),w
  7389  13F0  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7390  13F1  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7391  13F2  0086               	movwf	6
  7392  13F3  3002               	movlw	2	; select bank4/5
  7393  13F4  0087               	movwf	7
  7394  13F5  3F40               	moviw [0]fsr1
  7395  13F6  0021               	movlb	1	; select bank1
  7396  13F7  00BD               	movwf	___fladd@b^(0+128)
  7397  13F8  3F41               	moviw [1]fsr1
  7398  13F9  00BE               	movwf	(___fladd@b+1)^(0+128)
  7399  13FA  3F42               	moviw [2]fsr1
  7400  13FB  00BF               	movwf	(___fladd@b+2)^(0+128)
  7401  13FC  3F43               	moviw [3]fsr1
  7402  13FD  00C0               	movwf	(___fladd@b+3)^(0+128)
  7403  13FE  0022               	movlb	2	; select bank2
  7404  13FF  0851               	movf	writeVoltages@minCell^(0+256),w
  7405  1400  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7406  1401  3001               	movlw	1
  7407  1402                     u11285:	
  7408  1402  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7409  1403  3EFF               	addlw	-1
  7410  1404  1D03               	skipz
  7411  1405  2C02               	goto	u11285
  7412  1406  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7413  1407  0753               	addwf	writeVoltages@volts^(0+256),w
  7414  1408  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7415  1409  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7416  140A  0086               	movwf	6
  7417  140B  3002               	movlw	2	; select bank4/5
  7418  140C  0087               	movwf	7
  7419  140D  3F40               	moviw [0]fsr1
  7420  140E  00F2               	movwf	___flneg@f1
  7421  140F  3F41               	moviw [1]fsr1
  7422  1410  00F3               	movwf	___flneg@f1+1
  7423  1411  3F42               	moviw [2]fsr1
  7424  1412  00F4               	movwf	___flneg@f1+2
  7425  1413  3F43               	moviw [3]fsr1
  7426  1414  00F5               	movwf	___flneg@f1+3
  7427  1415  31AB  2331  3193   	fcall	___flneg
  7428  1418  0875               	movf	?___flneg+3,w
  7429  1419  0021               	movlb	1	; select bank1
  7430  141A  00C4               	movwf	(___fladd@a+3)^(0+128)
  7431  141B  0874               	movf	?___flneg+2,w
  7432  141C  00C3               	movwf	(___fladd@a+2)^(0+128)
  7433  141D  0873               	movf	?___flneg+1,w
  7434  141E  00C2               	movwf	(___fladd@a+1)^(0+128)
  7435  141F  0872               	movf	?___flneg,w
  7436  1420  00C1               	movwf	___fladd@a^(0+128)
  7437  1421  3185  25FC  3193   	fcall	___fladd
  7438  1424  0021               	movlb	1	; select bank1
  7439  1425  0840               	movf	(?___fladd+3)^(0+128),w
  7440  1426  0022               	movlb	2	; select bank2
  7441  1427  00CE               	movwf	(_writeVoltages$2147+3)^(0+256)
  7442  1428  0021               	movlb	1	; select bank1
  7443  1429  083F               	movf	(?___fladd+2)^(0+128),w
  7444  142A  0022               	movlb	2	; select bank2
  7445  142B  00CD               	movwf	(_writeVoltages$2147+2)^(0+256)
  7446  142C  0021               	movlb	1	; select bank1
  7447  142D  083E               	movf	(?___fladd+1)^(0+128),w
  7448  142E  0022               	movlb	2	; select bank2
  7449  142F  00CC               	movwf	(_writeVoltages$2147+1)^(0+256)
  7450  1430  0021               	movlb	1	; select bank1
  7451  1431  083D               	movf	?___fladd^(0+128),w
  7452  1432  0022               	movlb	2	; select bank2
  7453  1433  00CB               	movwf	_writeVoltages$2147^(0+256)
  7454                           
  7455                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7456  1434  30C3               	movlw	low (STR_3| (0+32768))
  7457  1435  0021               	movlb	1	; select bank1
  7458  1436  00E5               	movwf	sprintf@f^(0+128)
  7459  1437  30B0               	movlw	high (STR_3| (0+32768))
  7460  1438  00E6               	movwf	(sprintf@f^(0+128)+1)
  7461  1439  0022               	movlb	2	; select bank2
  7462  143A  0851               	movf	writeVoltages@minCell^(0+256),w
  7463  143B  3E01               	addlw	1
  7464  143C  0021               	movlb	1	; select bank1
  7465  143D  00E7               	movwf	(?_sprintf^(0+128)+2)
  7466  143E  3000               	movlw	0
  7467  143F  0022               	movlb	2	; select bank2
  7468  1440  3D52               	addwfc	(writeVoltages@minCell+1)^(0+256),w
  7469  1441  0021               	movlb	1	; select bank1
  7470  1442  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7471  1443  0022               	movlb	2	; select bank2
  7472  1444  084F               	movf	writeVoltages@maxCell^(0+256),w
  7473  1445  3E01               	addlw	1
  7474  1446  0021               	movlb	1	; select bank1
  7475  1447  00E9               	movwf	(?_sprintf^(0+128)+4)
  7476  1448  3000               	movlw	0
  7477  1449  0022               	movlb	2	; select bank2
  7478  144A  3D50               	addwfc	(writeVoltages@maxCell+1)^(0+256),w
  7479  144B  0021               	movlb	1	; select bank1
  7480  144C  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7481  144D  0022               	movlb	2	; select bank2
  7482  144E  084E               	movf	(_writeVoltages$2147+3)^(0+256),w
  7483  144F  0021               	movlb	1	; select bank1
  7484  1450  00EE               	movwf	((?_sprintf+3)^(0+128)+6)
  7485  1451  0022               	movlb	2	; select bank2
  7486  1452  084D               	movf	(_writeVoltages$2147+2)^(0+256),w
  7487  1453  0021               	movlb	1	; select bank1
  7488  1454  00ED               	movwf	((?_sprintf+2)^(0+128)+6)
  7489  1455  0022               	movlb	2	; select bank2
  7490  1456  084C               	movf	(_writeVoltages$2147+1)^(0+256),w
  7491  1457  0021               	movlb	1	; select bank1
  7492  1458  00EC               	movwf	((?_sprintf+1)^(0+128)+6)
  7493  1459  0022               	movlb	2	; select bank2
  7494  145A  084B               	movf	_writeVoltages$2147^(0+256),w
  7495  145B  0021               	movlb	1	; select bank1
  7496  145C  00EB               	movwf	(?_sprintf^(0+128)+6)
  7497  145D  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7498  145E  3188  209F  3193   	fcall	_sprintf
  7499                           
  7500                           ;uart.c: 38: uartEnable();
  7501  1461  31AB  231F  3193   	fcall	_uartEnable
  7502  1464                     l265:	
  7503                           ;uart.c: 39: while(PIE1bits.TXIE);
  7504                           
  7505  1464  0021               	movlb	1	; select bank1
  7506  1465  1E11               	btfss	17,4	;volatile
  7507  1466  0008               	return
  7508  1467  2C64               	goto	l265
  7509  1468                     __end_of_writeVoltages:	
  7510                           
  7511                           	psect	text3
  7512  206D                     __ptext3:	
  7513 ;; *************** function _writeTemps *****************
  7514 ;; Defined at:
  7515 ;;		line 48 in file "uart.c"
  7516 ;; Parameters:    Size  Location     Type
  7517 ;;  temps           1    wreg     PTR int 
  7518 ;;		 -> temps(10), 
  7519 ;;  highestTemp     2   33[BANK2 ] int 
  7520 ;;  numTemps        2   35[BANK2 ] int 
  7521 ;; Auto vars:     Size  Location     Type
  7522 ;;  temps           1   37[BANK2 ] PTR int 
  7523 ;;		 -> temps(10), 
  7524 ;;  k               2   38[BANK2 ] int 
  7525 ;; Return value:  Size  Location     Type
  7526 ;;                  1    wreg      void 
  7527 ;; Registers used:
  7528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7529 ;; Tracked objects:
  7530 ;;		On entry : 0/0
  7531 ;;		On exit  : 0/0
  7532 ;;		Unchanged: 0/0
  7533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7534 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7535 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7536 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7537 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7538 ;;Total ram usage:        8 bytes
  7539 ;; Hardware stack levels used:    1
  7540 ;; Hardware stack levels required when called:    6
  7541 ;; This function calls:
  7542 ;;		_sprintf
  7543 ;;		_uartEnable
  7544 ;; This function is called by:
  7545 ;;		_writeValuesToUart
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _writeTemps
  7551  206D                     _writeTemps:	
  7552                           
  7553                           ;incstack = 0
  7554                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7555                           ;writeTemps@temps stored from wreg
  7556  206D  0022               	movlb	2	; select bank2
  7557  206E  00C5               	movwf	writeTemps@temps^(0+256)
  7558                           
  7559                           ;uart.c: 49: for(int k = 0; k<numTemps; k++){
  7560  206F  01C6               	clrf	writeTemps@k^(0+256)
  7561  2070  01C7               	clrf	(writeTemps@k+1)^(0+256)
  7562  2071                     l277:	
  7563  2071  0847               	movf	(writeTemps@k+1)^(0+256),w
  7564  2072  3A80               	xorlw	128
  7565  2073  0021               	movlb	1	; select bank1
  7566  2074  00EF               	movwf	??_writeTemps^(0+128)
  7567  2075  0022               	movlb	2	; select bank2
  7568  2076  0844               	movf	(writeTemps@numTemps+1)^(0+256),w
  7569  2077  3A80               	xorlw	128
  7570  2078  0021               	movlb	1	; select bank1
  7571  2079  026F               	subwf	??_writeTemps^(0+128),w
  7572  207A  1D03               	skipz
  7573  207B  287F               	goto	u11315
  7574  207C  0022               	movlb	2	; select bank2
  7575  207D  0843               	movf	writeTemps@numTemps^(0+256),w
  7576  207E  0246               	subwf	writeTemps@k^(0+256),w
  7577  207F                     u11315:	
  7578  207F  1803               	btfsc	3,0
  7579  2080  28AF               	goto	l8036
  7580                           
  7581                           ;uart.c: 50: sprintf(&str[n], "Temp%i = %iC\n\r", k+1, temps[k]);
  7582  2081  3027               	movlw	low (STR_5| (0+32768))
  7583  2082  0021               	movlb	1	; select bank1
  7584  2083  00E5               	movwf	sprintf@f^(0+128)
  7585  2084  30B1               	movlw	high (STR_5| (0+32768))
  7586  2085  00E6               	movwf	(sprintf@f^(0+128)+1)
  7587  2086  0022               	movlb	2	; select bank2
  7588  2087  0846               	movf	writeTemps@k^(0+256),w
  7589  2088  3E01               	addlw	1
  7590  2089  0021               	movlb	1	; select bank1
  7591  208A  00E7               	movwf	(?_sprintf^(0+128)+2)
  7592  208B  3000               	movlw	0
  7593  208C  0022               	movlb	2	; select bank2
  7594  208D  3D47               	addwfc	(writeTemps@k+1)^(0+256),w
  7595  208E  0021               	movlb	1	; select bank1
  7596  208F  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7597  2090  0022               	movlb	2	; select bank2
  7598  2091  3546               	lslf	writeTemps@k^(0+256),w
  7599  2092  0745               	addwf	writeTemps@temps^(0+256),w
  7600  2093  0021               	movlb	1	; select bank1
  7601  2094  00EF               	movwf	??_writeTemps^(0+128)
  7602  2095  086F               	movf	??_writeTemps^(0+128),w
  7603  2096  0086               	movwf	6
  7604  2097  3001               	movlw	1	; select bank2/3
  7605  2098  0087               	movwf	7
  7606  2099  3F40               	moviw [0]fsr1
  7607  209A  00E9               	movwf	(?_sprintf^(0+128)+4)
  7608  209B  3F41               	moviw [1]fsr1
  7609  209C  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7610  209D  0023               	movlb	3	; select bank3
  7611  209E  0836               	movf	_n^(0+384),w
  7612  209F  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
  7613  20A0  3188  209F  31A0   	fcall	_sprintf
  7614                           
  7615                           ;uart.c: 51: uartEnable();
  7616  20A3  31AB  231F  31A0   	fcall	_uartEnable
  7617  20A6                     l279:	
  7618                           ;uart.c: 52: while(PIE1bits.TXIE);
  7619                           
  7620  20A6  0021               	movlb	1	; select bank1
  7621  20A7  1A11               	btfsc	17,4	;volatile
  7622  20A8  28A6               	goto	l279
  7623  20A9  3001               	movlw	1
  7624  20AA  0022               	movlb	2	; select bank2
  7625  20AB  07C6               	addwf	writeTemps@k^(0+256),f
  7626  20AC  3000               	movlw	0
  7627  20AD  3DC7               	addwfc	(writeTemps@k+1)^(0+256),f
  7628  20AE  2871               	goto	l277
  7629  20AF                     l8036:	
  7630                           
  7631                           ;uart.c: 53: }
  7632                           ;uart.c: 56: sprintf(&str[0], "Highest Temp: %iC\n\r", highestTemp);
  7633  20AF  3000               	movlw	low (STR_6| (0+32768))
  7634  20B0  0021               	movlb	1	; select bank1
  7635  20B1  00E5               	movwf	sprintf@f^(0+128)
  7636  20B2  30B1               	movlw	high (STR_6| (0+32768))
  7637  20B3  00E6               	movwf	(sprintf@f^(0+128)+1)
  7638  20B4  0022               	movlb	2	; select bank2
  7639  20B5  0842               	movf	(writeTemps@highestTemp+1)^(0+256),w
  7640  20B6  0021               	movlb	1	; select bank1
  7641  20B7  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7642  20B8  0022               	movlb	2	; select bank2
  7643  20B9  0841               	movf	writeTemps@highestTemp^(0+256),w
  7644  20BA  0021               	movlb	1	; select bank1
  7645  20BB  00E7               	movwf	(?_sprintf^(0+128)+2)
  7646  20BC  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7647  20BD  3188  209F  31A0   	fcall	_sprintf
  7648                           
  7649                           ;uart.c: 57: uartEnable();
  7650  20C0  31AB  231F  31A0   	fcall	_uartEnable
  7651  20C3                     l283:	
  7652                           ;uart.c: 58: while(PIE1bits.TXIE);
  7653                           
  7654  20C3  0021               	movlb	1	; select bank1
  7655  20C4  1E11               	btfss	17,4	;volatile
  7656  20C5  0008               	return
  7657  20C6  28C3               	goto	l283
  7658  20C7                     __end_of_writeTemps:	
  7659                           
  7660                           	psect	text4
  7661  2C41                     __ptext4:	
  7662 ;; *************** function _writeCurrent *****************
  7663 ;; Defined at:
  7664 ;;		line 43 in file "uart.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  current         4   33[BANK2 ] float 
  7667 ;; Auto vars:     Size  Location     Type
  7668 ;;		None
  7669 ;; Return value:  Size  Location     Type
  7670 ;;                  1    wreg      void 
  7671 ;; Registers used:
  7672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7673 ;; Tracked objects:
  7674 ;;		On entry : 0/0
  7675 ;;		On exit  : 0/0
  7676 ;;		Unchanged: 0/0
  7677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7678 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7681 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7682 ;;Total ram usage:        4 bytes
  7683 ;; Hardware stack levels used:    1
  7684 ;; Hardware stack levels required when called:    6
  7685 ;; This function calls:
  7686 ;;		_sprintf
  7687 ;;		_uartEnable
  7688 ;; This function is called by:
  7689 ;;		_writeValuesToUart
  7690 ;; This function uses a non-reentrant model
  7691 ;;
  7692                           
  7693                           
  7694                           ;psect for function _writeCurrent
  7695  2C41                     _writeCurrent:	
  7696                           
  7697                           ;uart.c: 44: sprintf(&str[0], "current = %0.4fA\n\r", current);
  7698                           
  7699                           ;incstack = 0
  7700                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7701  2C41  3014               	movlw	low (STR_4| (0+32768))
  7702  2C42  0021               	movlb	1	; select bank1
  7703  2C43  00E5               	movwf	sprintf@f^(0+128)
  7704  2C44  30B1               	movlw	high (STR_4| (0+32768))
  7705  2C45  00E6               	movwf	(sprintf@f^(0+128)+1)
  7706  2C46  0022               	movlb	2	; select bank2
  7707  2C47  0844               	movf	(writeCurrent@current+3)^(0+256),w
  7708  2C48  0021               	movlb	1	; select bank1
  7709  2C49  00EA               	movwf	((?_sprintf+3)^(0+128)+2)
  7710  2C4A  0022               	movlb	2	; select bank2
  7711  2C4B  0843               	movf	(writeCurrent@current+2)^(0+256),w
  7712  2C4C  0021               	movlb	1	; select bank1
  7713  2C4D  00E9               	movwf	((?_sprintf+2)^(0+128)+2)
  7714  2C4E  0022               	movlb	2	; select bank2
  7715  2C4F  0842               	movf	(writeCurrent@current+1)^(0+256),w
  7716  2C50  0021               	movlb	1	; select bank1
  7717  2C51  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7718  2C52  0022               	movlb	2	; select bank2
  7719  2C53  0841               	movf	writeCurrent@current^(0+256),w
  7720  2C54  0021               	movlb	1	; select bank1
  7721  2C55  00E7               	movwf	(?_sprintf^(0+128)+2)
  7722  2C56  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7723  2C57  3188  209F  31AC   	fcall	_sprintf
  7724                           
  7725                           ;uart.c: 45: uartEnable();
  7726  2C5A  31AB  231F  31AC   	fcall	_uartEnable
  7727  2C5D                     l271:	
  7728                           ;uart.c: 46: while(PIE1bits.TXIE);
  7729                           
  7730  2C5D  0021               	movlb	1	; select bank1
  7731  2C5E  1E11               	btfss	17,4	;volatile
  7732  2C5F  0008               	return
  7733  2C60  2C5D               	goto	l271
  7734  2C61                     __end_of_writeCurrent:	
  7735                           
  7736                           	psect	text5
  7737  2D21                     __ptext5:	
  7738 ;; *************** function _clearScreen *****************
  7739 ;; Defined at:
  7740 ;;		line 61 in file "uart.c"
  7741 ;; Parameters:    Size  Location     Type
  7742 ;;  numLines        2   33[BANK2 ] int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  j               2   38[BANK2 ] int 
  7745 ;; Return value:  Size  Location     Type
  7746 ;;                  1    wreg      void 
  7747 ;; Registers used:
  7748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7749 ;; Tracked objects:
  7750 ;;		On entry : 0/0
  7751 ;;		On exit  : 0/0
  7752 ;;		Unchanged: 0/0
  7753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7754 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7755 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7756 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7757 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7758 ;;Total ram usage:        7 bytes
  7759 ;; Hardware stack levels used:    1
  7760 ;; Hardware stack levels required when called:    6
  7761 ;; This function calls:
  7762 ;;		_sprintf
  7763 ;;		_uartEnable
  7764 ;; This function is called by:
  7765 ;;		_writeValuesToUart
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           
  7770                           ;psect for function _clearScreen
  7771  2D21                     _clearScreen:	
  7772                           
  7773                           ;uart.c: 62: int j = 0;
  7774                           
  7775                           ;incstack = 0
  7776                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7777  2D21  0022               	movlb	2	; select bank2
  7778  2D22  01C6               	clrf	clearScreen@j^(0+256)
  7779  2D23  01C7               	clrf	(clearScreen@j+1)^(0+256)
  7780                           
  7781                           ;uart.c: 64: for(j = 0; j < numLines-1; j++){
  7782  2D24  01C6               	clrf	clearScreen@j^(0+256)
  7783  2D25  01C7               	clrf	(clearScreen@j+1)^(0+256)
  7784  2D26                     l7996:	
  7785  2D26  0841               	movf	clearScreen@numLines^(0+256),w
  7786  2D27  3EFF               	addlw	255
  7787  2D28  00C3               	movwf	??_clearScreen^(0+256)
  7788  2D29  30FF               	movlw	255
  7789  2D2A  3D42               	addwfc	(clearScreen@numLines+1)^(0+256),w
  7790  2D2B  00C4               	movwf	(??_clearScreen+1)^(0+256)
  7791  2D2C  0847               	movf	(clearScreen@j+1)^(0+256),w
  7792  2D2D  3A80               	xorlw	128
  7793  2D2E  00C5               	movwf	(??_clearScreen+2)^(0+256)
  7794  2D2F  0844               	movf	(??_clearScreen+1)^(0+256),w
  7795  2D30  3A80               	xorlw	128
  7796  2D31  0245               	subwf	(??_clearScreen+2)^(0+256),w
  7797  2D32  1D03               	skipz
  7798  2D33  2D36               	goto	u11155
  7799  2D34  0843               	movf	??_clearScreen^(0+256),w
  7800  2D35  0246               	subwf	clearScreen@j^(0+256),w
  7801  2D36                     u11155:	
  7802  2D36  1803               	btfsc	3,0
  7803  2D37  2D4D               	goto	l7998
  7804                           
  7805                           ;uart.c: 65: sprintf(&str[0], "\33[2K \033[A");
  7806  2D38  3050               	movlw	low (STR_7| (0+32768))
  7807  2D39  0021               	movlb	1	; select bank1
  7808  2D3A  00E5               	movwf	sprintf@f^(0+128)
  7809  2D3B  30B1               	movlw	high (STR_7| (0+32768))
  7810  2D3C  00E6               	movwf	(sprintf@f^(0+128)+1)
  7811  2D3D  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7812  2D3E  3188  209F  31AD   	fcall	_sprintf
  7813                           
  7814                           ;uart.c: 66: uartEnable();
  7815  2D41  31AB  231F  31AD   	fcall	_uartEnable
  7816  2D44                     l291:	
  7817                           ;uart.c: 67: while(PIE1bits.TXIE);
  7818                           
  7819  2D44  0021               	movlb	1	; select bank1
  7820  2D45  1A11               	btfsc	17,4	;volatile
  7821  2D46  2D44               	goto	l291
  7822  2D47  3001               	movlw	1
  7823  2D48  0022               	movlb	2	; select bank2
  7824  2D49  07C6               	addwf	clearScreen@j^(0+256),f
  7825  2D4A  3000               	movlw	0
  7826  2D4B  3DC7               	addwfc	(clearScreen@j+1)^(0+256),f
  7827  2D4C  2D26               	goto	l7996
  7828  2D4D                     l7998:	
  7829                           
  7830                           ;uart.c: 68: }
  7831                           ;uart.c: 70: sprintf(&str[0], "\33[2K \033[A \r");
  7832  2D4D  3045               	movlw	low (STR_8| (0+32768))
  7833  2D4E  0021               	movlb	1	; select bank1
  7834  2D4F  00E5               	movwf	sprintf@f^(0+128)
  7835  2D50  30B1               	movlw	high (STR_8| (0+32768))
  7836  2D51  00E6               	movwf	(sprintf@f^(0+128)+1)
  7837  2D52  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7838  2D53  3188  209F  31AD   	fcall	_sprintf
  7839                           
  7840                           ;uart.c: 71: uartEnable();
  7841  2D56  31AB  231F  31AD   	fcall	_uartEnable
  7842  2D59                     l295:	
  7843                           ;uart.c: 72: while(PIE1bits.TXIE);
  7844                           
  7845  2D59  0021               	movlb	1	; select bank1
  7846  2D5A  1E11               	btfss	17,4	;volatile
  7847  2D5B  0008               	return
  7848  2D5C  2D59               	goto	l295
  7849  2D5D                     __end_of_clearScreen:	
  7850                           
  7851                           	psect	text6
  7852  2B1F                     __ptext6:	
  7853 ;; *************** function _uartEnable *****************
  7854 ;; Defined at:
  7855 ;;		line 75 in file "uart.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;		None
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;		None
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		None
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7873 ;;Total ram usage:        0 bytes
  7874 ;; Hardware stack levels used:    1
  7875 ;; Hardware stack levels required when called:    2
  7876 ;; This function calls:
  7877 ;;		Nothing
  7878 ;; This function is called by:
  7879 ;;		_writeVoltages
  7880 ;;		_writeCurrent
  7881 ;;		_writeTemps
  7882 ;;		_clearScreen
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           
  7887                           ;psect for function _uartEnable
  7888  2B1F                     _uartEnable:	
  7889                           
  7890                           ;uart.c: 76: PIE1bits.TXIE = 1;
  7891                           
  7892                           ;incstack = 0
  7893                           ; Regs used in _uartEnable: []
  7894  2B1F  0021               	movlb	1	; select bank1
  7895  2B20  1611               	bsf	17,4	;volatile
  7896  2B21  0008               	return
  7897  2B22                     __end_of_uartEnable:	
  7898                           
  7899                           	psect	text7
  7900  089F                     __ptext7:	
  7901 ;; *************** function _sprintf *****************
  7902 ;; Defined at:
  7903 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  sp              1    wreg     PTR unsigned char 
  7906 ;;		 -> str(50), 
  7907 ;;  f               2   69[BANK1 ] PTR const unsigned char 
  7908 ;;		 -> STR_8(11), STR_7(9), STR_6(20), STR_5(15), 
  7909 ;;		 -> STR_4(19), STR_3(38), STR_2(23), STR_1(15), 
  7910 ;; Auto vars:     Size  Location     Type
  7911 ;;  sp              1   31[BANK2 ] PTR unsigned char 
  7912 ;;		 -> str(50), 
  7913 ;;  fval            4   25[BANK2 ] PTR unsigned char 
  7914 ;;  val             4   15[BANK2 ] unsigned long 
  7915 ;;  tmpval          4   11[BANK2 ] struct .
  7916 ;;  prec            2   29[BANK2 ] int 
  7917 ;;  width           2   23[BANK2 ] int 
  7918 ;;  flag            2   21[BANK2 ] unsigned short 
  7919 ;;  exp             2   19[BANK2 ] int 
  7920 ;;  cp              2    0        PTR const unsigned char 
  7921 ;;  len             2    0        unsigned int 
  7922 ;;  c               1   32[BANK2 ] char 
  7923 ;;  ap              1   10[BANK2 ] PTR void [1]
  7924 ;;		 -> ?_sprintf(2), 
  7925 ;;  d               1    0        unsigned char 
  7926 ;; Return value:  Size  Location     Type
  7927 ;;                  2   69[BANK1 ] int 
  7928 ;; Registers used:
  7929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7930 ;; Tracked objects:
  7931 ;;		On entry : 0/0
  7932 ;;		On exit  : 0/0
  7933 ;;		Unchanged: 0/0
  7934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7935 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7936 ;;      Locals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7937 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7938 ;;      Totals:         0       0      10      33       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7939 ;;Total ram usage:       43 bytes
  7940 ;; Hardware stack levels used:    1
  7941 ;; Hardware stack levels required when called:    5
  7942 ;; This function calls:
  7943 ;;		___awdiv
  7944 ;;		___fladd
  7945 ;;		___flge
  7946 ;;		___flmul
  7947 ;;		___flneg
  7948 ;;		___flsub
  7949 ;;		___fltol
  7950 ;;		___lldiv
  7951 ;;		___llmod
  7952 ;;		___wmul
  7953 ;;		___xxtofl
  7954 ;;		__div_to_l_
  7955 ;;		__tdiv_to_l_
  7956 ;;		_fround
  7957 ;;		_isdigit
  7958 ;;		_scale
  7959 ;; This function is called by:
  7960 ;;		_writeVoltages
  7961 ;;		_writeCurrent
  7962 ;;		_writeTemps
  7963 ;;		_clearScreen
  7964 ;; This function uses a non-reentrant model
  7965 ;;
  7966                           
  7967                           
  7968                           ;psect for function _sprintf
  7969  089F                     _sprintf:	
  7970                           
  7971                           ;incstack = 0
  7972                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7973                           ;sprintf@sp stored from wreg
  7974  089F  0022               	movlb	2	; select bank2
  7975  08A0  00BF               	movwf	sprintf@sp^(0+256)
  7976                           
  7977                           ;doprnt.c: 494: va_list ap;
  7978                           ;doprnt.c: 499: signed char c;
  7979                           ;doprnt.c: 501: int width;
  7980                           ;doprnt.c: 504: int prec;
  7981                           ;doprnt.c: 508: unsigned short flag;
  7982                           ;doprnt.c: 515: char d;
  7983                           ;doprnt.c: 516: double fval;
  7984                           ;doprnt.c: 517: int exp;
  7985                           ;doprnt.c: 523: union {
  7986                           ;doprnt.c: 524: unsigned long vd;
  7987                           ;doprnt.c: 525: double integ;
  7988                           ;doprnt.c: 526: } tmpval;
  7989                           ;doprnt.c: 528: unsigned long val;
  7990                           ;doprnt.c: 529: unsigned len;
  7991                           ;doprnt.c: 530: const char * cp;
  7992                           ;doprnt.c: 533: *ap = __va_start();
  7993  08A1  30E7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7994  08A2  00A0               	movwf	??_sprintf^(0+256)
  7995  08A3  0820               	movf	??_sprintf^(0+256),w
  7996  08A4  00AA               	movwf	sprintf@ap^(0+256)
  7997  08A5                     l7676:	
  7998                           ;doprnt.c: 536: while(c = *f++) {
  7999                           
  8000  08A5  0021               	movlb	1	; select bank1
  8001  08A6  0866               	movf	(sprintf@f+1)^(0+128),w
  8002  08A7  0022               	movlb	2	; select bank2
  8003  08A8  00A1               	movwf	(??_sprintf^(0+256)+1)
  8004  08A9  0021               	movlb	1	; select bank1
  8005  08AA  0865               	movf	sprintf@f^(0+128),w
  8006  08AB  0022               	movlb	2	; select bank2
  8007  08AC  00A0               	movwf	??_sprintf^(0+256)
  8008  08AD  0021               	movlb	1	; select bank1
  8009  08AE  0AE5               	incf	sprintf@f^(0+128),f
  8010  08AF  1903               	skipnz
  8011  08B0  0AE6               	incf	(sprintf@f+1)^(0+128),f
  8012  08B1  0022               	movlb	2	; select bank2
  8013  08B2  0820               	movf	??_sprintf^(0+256),w
  8014  08B3  0084               	movwf	4
  8015  08B4  0821               	movf	(??_sprintf+1)^(0+256),w
  8016  08B5  0085               	movwf	5
  8017  08B6  0800               	movf	0,w	;code access
  8018  08B7  00A2               	movwf	(??_sprintf+2)^(0+256)
  8019  08B8  0822               	movf	(??_sprintf+2)^(0+256),w
  8020  08B9  00C0               	movwf	sprintf@c^(0+256)
  8021  08BA  0840               	movf	sprintf@c^(0+256),w
  8022  08BB  1903               	btfsc	3,2
  8023  08BC  2FFA               	goto	l7678
  8024                           
  8025                           ;doprnt.c: 538: if(c != '%')
  8026  08BD  3025               	movlw	37
  8027  08BE  0640               	xorwf	sprintf@c^(0+256),w
  8028  08BF  1903               	btfsc	3,2
  8029  08C0  28CE               	goto	l7366
  8030                           
  8031                           ;doprnt.c: 540: {
  8032                           ;doprnt.c: 541: ((*sp++ = (c)));
  8033  08C1  0840               	movf	sprintf@c^(0+256),w
  8034  08C2  00A0               	movwf	??_sprintf^(0+256)
  8035  08C3  083F               	movf	sprintf@sp^(0+256),w
  8036  08C4  0086               	movwf	6
  8037  08C5  3002               	movlw	2	; select bank4/5
  8038  08C6  0087               	movwf	7
  8039  08C7  0820               	movf	??_sprintf^(0+256),w
  8040  08C8  0081               	movwf	1
  8041  08C9  3001               	movlw	1
  8042  08CA  00A0               	movwf	??_sprintf^(0+256)
  8043  08CB  0820               	movf	??_sprintf^(0+256),w
  8044  08CC  07BF               	addwf	sprintf@sp^(0+256),f
  8045                           
  8046                           ;doprnt.c: 542: continue;
  8047  08CD  28A5               	goto	l7676
  8048  08CE                     l7366:	
  8049                           
  8050                           ;doprnt.c: 543: }
  8051                           ;doprnt.c: 546: width = 0;
  8052  08CE  01B7               	clrf	sprintf@width^(0+256)
  8053  08CF  01B8               	clrf	(sprintf@width+1)^(0+256)
  8054                           
  8055                           ;doprnt.c: 548: flag = 0;
  8056  08D0  01B5               	clrf	sprintf@flag^(0+256)
  8057  08D1  01B6               	clrf	(sprintf@flag+1)^(0+256)
  8058                           
  8059                           ;doprnt.c: 551: switch(*f) {
  8060                           
  8061                           ;doprnt.c: 550: for(;;) {
  8062  08D2  28DA               	goto	l7372
  8063  08D3                     l842:	
  8064                           ;doprnt.c: 579: case '0':
  8065                           
  8066                           
  8067                           ;doprnt.c: 580: flag |= 0x04;
  8068  08D3  0022               	movlb	2	; select bank2
  8069  08D4  1535               	bsf	sprintf@flag^(0+256),2
  8070                           
  8071                           ;doprnt.c: 581: f++;
  8072  08D5  3001               	movlw	1
  8073  08D6  0021               	movlb	1	; select bank1
  8074  08D7  07E5               	addwf	sprintf@f^(0+128),f
  8075  08D8  3000               	movlw	0
  8076  08D9  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8077  08DA                     l7372:	
  8078                           ;doprnt.c: 584: }
  8079                           
  8080                           ;doprnt.c: 582: continue;
  8081                           
  8082  08DA  0021               	movlb	1	; select bank1
  8083  08DB  0865               	movf	sprintf@f^(0+128),w
  8084  08DC  0084               	movwf	4
  8085  08DD  0866               	movf	(sprintf@f+1)^(0+128),w
  8086  08DE  0085               	movwf	5
  8087  08DF  0800               	movf	0,w	;code access
  8088                           
  8089                           ; Switch size 1, requested type "space"
  8090                           ; Number of cases is 1, Range of values is 48 to 48
  8091                           ; switch strategies available:
  8092                           ; Name         Instructions Cycles
  8093                           ; simple_byte            4     3 (average)
  8094                           ; direct_byte           11     9 (fixed)
  8095                           ; jumptable            263     9 (fixed)
  8096                           ;	Chosen strategy is simple_byte
  8097  08E0  3A30               	xorlw	48	; case 48
  8098  08E1  1903               	skipnz
  8099  08E2  28D3               	goto	l842
  8100  08E3  28E4               	goto	l7374
  8101  08E4                     l7374:	
  8102                           ;doprnt.c: 586: }
  8103                           
  8104                           ;doprnt.c: 585: break;
  8105                           
  8106                           
  8107                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8108  08E4  0865               	movf	sprintf@f^(0+128),w
  8109  08E5  0084               	movwf	4
  8110  08E6  0866               	movf	(sprintf@f+1)^(0+128),w
  8111  08E7  0085               	movwf	5
  8112  08E8  0800               	movf	0,w	;code access
  8113  08E9  31AB  2369  3188   	fcall	_isdigit
  8114  08EC  1C03               	btfss	3,0
  8115  08ED  2922               	goto	l7386
  8116                           
  8117                           ;doprnt.c: 598: width = 0;
  8118  08EE  0022               	movlb	2	; select bank2
  8119  08EF  01B7               	clrf	sprintf@width^(0+256)
  8120  08F0  01B8               	clrf	(sprintf@width+1)^(0+256)
  8121  08F1                     l7378:	
  8122                           ;doprnt.c: 599: do {
  8123                           
  8124                           
  8125                           ;doprnt.c: 600: width *= 10;
  8126  08F1  300A               	movlw	10
  8127  08F2  00F2               	movwf	___wmul@multiplier
  8128  08F3  3000               	movlw	0
  8129  08F4  00F3               	movwf	___wmul@multiplier+1
  8130  08F5  0022               	movlb	2	; select bank2
  8131  08F6  0838               	movf	(sprintf@width+1)^(0+256),w
  8132  08F7  00F5               	movwf	___wmul@multiplicand+1
  8133  08F8  0837               	movf	sprintf@width^(0+256),w
  8134  08F9  00F4               	movwf	___wmul@multiplicand
  8135  08FA  319C  2401  3188   	fcall	___wmul
  8136  08FD  0873               	movf	?___wmul+1,w
  8137  08FE  0022               	movlb	2	; select bank2
  8138  08FF  00B8               	movwf	(sprintf@width+1)^(0+256)
  8139  0900  0872               	movf	?___wmul,w
  8140  0901  00B7               	movwf	sprintf@width^(0+256)
  8141                           
  8142                           ;doprnt.c: 601: width += *f++ - '0';
  8143  0902  0021               	movlb	1	; select bank1
  8144  0903  0865               	movf	sprintf@f^(0+128),w
  8145  0904  0084               	movwf	4
  8146  0905  0866               	movf	(sprintf@f+1)^(0+128),w
  8147  0906  0085               	movwf	5
  8148  0907  0800               	movf	0,w	;code access
  8149  0908  3ED0               	addlw	208
  8150  0909  0022               	movlb	2	; select bank2
  8151  090A  00A0               	movwf	??_sprintf^(0+256)
  8152  090B  30FF               	movlw	255
  8153  090C  1803               	skipnc
  8154  090D  3000               	movlw	0
  8155  090E  00A1               	movwf	(??_sprintf^(0+256)+1)
  8156  090F  0820               	movf	??_sprintf^(0+256),w
  8157  0910  07B7               	addwf	sprintf@width^(0+256),f
  8158  0911  0821               	movf	(??_sprintf+1)^(0+256),w
  8159  0912  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  8160  0913  3001               	movlw	1
  8161  0914  0021               	movlb	1	; select bank1
  8162  0915  07E5               	addwf	sprintf@f^(0+128),f
  8163  0916  3000               	movlw	0
  8164  0917  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8165                           
  8166                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8167  0918  0865               	movf	sprintf@f^(0+128),w
  8168  0919  0084               	movwf	4
  8169  091A  0866               	movf	(sprintf@f+1)^(0+128),w
  8170  091B  0085               	movwf	5
  8171  091C  0800               	movf	0,w	;code access
  8172  091D  31AB  2369  3188   	fcall	_isdigit
  8173  0920  1803               	btfsc	3,0
  8174  0921  28F1               	goto	l7378
  8175  0922                     l7386:	
  8176                           
  8177                           ;doprnt.c: 608: }
  8178                           ;doprnt.c: 611: if(*f == '.') {
  8179  0922  0021               	movlb	1	; select bank1
  8180  0923  0865               	movf	sprintf@f^(0+128),w
  8181  0924  0084               	movwf	4
  8182  0925  0866               	movf	(sprintf@f+1)^(0+128),w
  8183  0926  0085               	movwf	5
  8184  0927  0012               	moviw fsr0++
  8185  0928  3A2E               	xorlw	46
  8186  0929  1D03               	btfss	3,2
  8187  092A  2967               	goto	l7400
  8188                           
  8189                           ;doprnt.c: 612: flag |= 0x4000;
  8190  092B  0022               	movlb	2	; select bank2
  8191  092C  1736               	bsf	(sprintf@flag^(0+256)+1),6
  8192                           
  8193                           ;doprnt.c: 613: f++;
  8194  092D  3001               	movlw	1
  8195  092E  0021               	movlb	1	; select bank1
  8196  092F  07E5               	addwf	sprintf@f^(0+128),f
  8197  0930  3000               	movlw	0
  8198  0931  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8199                           
  8200                           ;doprnt.c: 620: {
  8201                           ;doprnt.c: 621: prec = 0;
  8202  0932  0022               	movlb	2	; select bank2
  8203  0933  01BD               	clrf	sprintf@prec^(0+256)
  8204  0934  01BE               	clrf	(sprintf@prec+1)^(0+256)
  8205  0935                     l7398:	
  8206                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8207                           
  8208  0935  0021               	movlb	1	; select bank1
  8209  0936  0865               	movf	sprintf@f^(0+128),w
  8210  0937  0084               	movwf	4
  8211  0938  0866               	movf	(sprintf@f+1)^(0+128),w
  8212  0939  0085               	movwf	5
  8213  093A  0800               	movf	0,w	;code access
  8214  093B  31AB  2369  3188   	fcall	_isdigit
  8215  093E  1C03               	btfss	3,0
  8216  093F  296E               	goto	l7406
  8217                           
  8218                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8219  0940  0021               	movlb	1	; select bank1
  8220  0941  0865               	movf	sprintf@f^(0+128),w
  8221  0942  0084               	movwf	4
  8222  0943  0866               	movf	(sprintf@f+1)^(0+128),w
  8223  0944  0085               	movwf	5
  8224  0945  0800               	movf	0,w	;code access
  8225  0946  0022               	movlb	2	; select bank2
  8226  0947  00A0               	movwf	??_sprintf^(0+256)
  8227  0948  01A1               	clrf	(??_sprintf^(0+256)+1)
  8228  0949  083E               	movf	(sprintf@prec+1)^(0+256),w
  8229  094A  00F3               	movwf	___wmul@multiplier+1
  8230  094B  083D               	movf	sprintf@prec^(0+256),w
  8231  094C  00F2               	movwf	___wmul@multiplier
  8232  094D  300A               	movlw	10
  8233  094E  00F4               	movwf	___wmul@multiplicand
  8234  094F  3000               	movlw	0
  8235  0950  00F5               	movwf	___wmul@multiplicand+1
  8236  0951  319C  2401  3188   	fcall	___wmul
  8237  0954  0022               	movlb	2	; select bank2
  8238  0955  0820               	movf	??_sprintf^(0+256),w
  8239  0956  0772               	addwf	?___wmul,w
  8240  0957  00A2               	movwf	(??_sprintf+2)^(0+256)
  8241  0958  0821               	movf	(??_sprintf+1)^(0+256),w
  8242  0959  3D73               	addwfc	?___wmul+1,w
  8243  095A  00A3               	movwf	(??_sprintf+3)^(0+256)
  8244  095B  0822               	movf	(??_sprintf+2)^(0+256),w
  8245  095C  3ED0               	addlw	208
  8246  095D  00BD               	movwf	sprintf@prec^(0+256)
  8247  095E  30FF               	movlw	255
  8248  095F  3D23               	addwfc	(??_sprintf+3)^(0+256),w
  8249  0960  00BE               	movwf	(sprintf@prec+1)^(0+256)
  8250  0961  3001               	movlw	1
  8251  0962  0021               	movlb	1	; select bank1
  8252  0963  07E5               	addwf	sprintf@f^(0+128),f
  8253  0964  3000               	movlw	0
  8254  0965  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8255  0966  2935               	goto	l7398
  8256  0967                     l7400:	
  8257                           ;doprnt.c: 624: }
  8258                           ;doprnt.c: 625: } else {
  8259                           
  8260                           
  8261                           ;doprnt.c: 626: prec = 0;
  8262  0967  0022               	movlb	2	; select bank2
  8263  0968  01BD               	clrf	sprintf@prec^(0+256)
  8264  0969  01BE               	clrf	(sprintf@prec+1)^(0+256)
  8265                           
  8266                           ;doprnt.c: 628: flag |= 0x1000;
  8267  096A  1636               	bsf	(sprintf@flag^(0+256)+1),4
  8268                           
  8269                           ;doprnt.c: 630: }
  8270                           ;doprnt.c: 635: switch(c = *f++) {
  8271  096B  296E               	goto	l7406
  8272  096C                     l857:	
  8273                           ;doprnt.c: 662: case 'f':
  8274                           
  8275                           ;doprnt.c: 638: goto alldone;
  8276                           
  8277                           ;doprnt.c: 637: case 0:
  8278                           
  8279                           
  8280                           ;doprnt.c: 663: flag |= 0x400;
  8281  096C  1536               	bsf	(sprintf@flag^(0+256)+1),2
  8282                           
  8283                           ;doprnt.c: 698: case 'i':
  8284                           ;doprnt.c: 699: break;
  8285                           
  8286                           ;doprnt.c: 697: case 'd':
  8287                           
  8288                           ;doprnt.c: 664: break;
  8289  096D  298E               	goto	l7408
  8290  096E                     l7406:	
  8291                           ;doprnt.c: 822: }
  8292                           
  8293                           ;doprnt.c: 813: continue;
  8294                           
  8295                           ;doprnt.c: 802: default:
  8296                           
  8297  096E  0021               	movlb	1	; select bank1
  8298  096F  0866               	movf	(sprintf@f+1)^(0+128),w
  8299  0970  0022               	movlb	2	; select bank2
  8300  0971  00A1               	movwf	(??_sprintf^(0+256)+1)
  8301  0972  0021               	movlb	1	; select bank1
  8302  0973  0865               	movf	sprintf@f^(0+128),w
  8303  0974  0022               	movlb	2	; select bank2
  8304  0975  00A0               	movwf	??_sprintf^(0+256)
  8305  0976  0021               	movlb	1	; select bank1
  8306  0977  0AE5               	incf	sprintf@f^(0+128),f
  8307  0978  1903               	skipnz
  8308  0979  0AE6               	incf	(sprintf@f+1)^(0+128),f
  8309  097A  0022               	movlb	2	; select bank2
  8310  097B  0820               	movf	??_sprintf^(0+256),w
  8311  097C  0084               	movwf	4
  8312  097D  0821               	movf	(??_sprintf+1)^(0+256),w
  8313  097E  0085               	movwf	5
  8314  097F  0800               	movf	0,w	;code access
  8315  0980  00C0               	movwf	sprintf@c^(0+256)
  8316                           
  8317                           ; Switch size 1, requested type "space"
  8318                           ; Number of cases is 4, Range of values is 0 to 105
  8319                           ; switch strategies available:
  8320                           ; Name         Instructions Cycles
  8321                           ; simple_byte           13     7 (average)
  8322                           ; direct_byte          218     6 (fixed)
  8323                           ; jumptable            260     6 (fixed)
  8324                           ;	Chosen strategy is simple_byte
  8325  0981  3A00               	xorlw	0	; case 0
  8326  0982  1903               	skipnz
  8327  0983  2FFA               	goto	l7678
  8328  0984  3A64               	xorlw	100	; case 100
  8329  0985  1903               	skipnz
  8330  0986  298E               	goto	l7408
  8331  0987  3A02               	xorlw	2	; case 102
  8332  0988  1903               	skipnz
  8333  0989  296C               	goto	l857
  8334  098A  3A0F               	xorlw	15	; case 105
  8335  098B  1903               	skipnz
  8336  098C  298E               	goto	l7408
  8337  098D  28A5               	goto	l7676
  8338  098E                     l7408:	
  8339                           
  8340                           ;doprnt.c: 825: if(flag & (0x700)) {
  8341  098E  3000               	movlw	0
  8342  098F  0535               	andwf	sprintf@flag^(0+256),w
  8343  0990  00A0               	movwf	??_sprintf^(0+256)
  8344  0991  3007               	movlw	7
  8345  0992  0536               	andwf	(sprintf@flag+1)^(0+256),w
  8346  0993  00A1               	movwf	(??_sprintf+1)^(0+256)
  8347  0994  0820               	movf	??_sprintf^(0+256),w
  8348  0995  0421               	iorwf	(??_sprintf^(0+256)+1),w
  8349  0996  1903               	btfsc	3,2
  8350  0997  2E7A               	goto	l7584
  8351                           
  8352                           ;doprnt.c: 827: if(flag & 0x1000)
  8353  0998  1E36               	btfss	(sprintf@flag+1)^(0+256),4
  8354  0999  299E               	goto	l7414
  8355                           
  8356                           ;doprnt.c: 829: prec = 6;
  8357  099A  3006               	movlw	6
  8358  099B  00BD               	movwf	sprintf@prec^(0+256)
  8359  099C  3000               	movlw	0
  8360  099D  00BE               	movwf	(sprintf@prec^(0+256)+1)
  8361  099E                     l7414:	
  8362                           
  8363                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8364  099E  082A               	movf	sprintf@ap^(0+256),w
  8365  099F  0086               	movwf	6
  8366  09A0  0187               	clrf	7
  8367  09A1  3F40               	moviw [0]fsr1
  8368  09A2  00B9               	movwf	sprintf@fval^(0+256)
  8369  09A3  3F41               	moviw [1]fsr1
  8370  09A4  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8371  09A5  3F42               	moviw [2]fsr1
  8372  09A6  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8373  09A7  3F43               	moviw [3]fsr1
  8374  09A8  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8375  09A9  3004               	movlw	4
  8376  09AA  00A0               	movwf	??_sprintf^(0+256)
  8377  09AB  0820               	movf	??_sprintf^(0+256),w
  8378  09AC  07AA               	addwf	sprintf@ap^(0+256),f
  8379                           
  8380                           ;doprnt.c: 831: if(fval < 0.0) {
  8381  09AD  083C               	movf	(sprintf@fval+3)^(0+256),w
  8382  09AE  0021               	movlb	1	; select bank1
  8383  09AF  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8384  09B0  0022               	movlb	2	; select bank2
  8385  09B1  083B               	movf	(sprintf@fval+2)^(0+256),w
  8386  09B2  0021               	movlb	1	; select bank1
  8387  09B3  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8388  09B4  0022               	movlb	2	; select bank2
  8389  09B5  083A               	movf	(sprintf@fval+1)^(0+256),w
  8390  09B6  0021               	movlb	1	; select bank1
  8391  09B7  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8392  09B8  0022               	movlb	2	; select bank2
  8393  09B9  0839               	movf	sprintf@fval^(0+256),w
  8394  09BA  0021               	movlb	1	; select bank1
  8395  09BB  00D5               	movwf	___flge@ff1^(0+128)
  8396  09BC  3000               	movlw	0
  8397  09BD  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8398  09BE  3000               	movlw	0
  8399  09BF  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8400  09C0  3000               	movlw	0
  8401  09C1  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8402  09C2  3000               	movlw	0
  8403  09C3  00D9               	movwf	___flge@ff2^(0+128)
  8404  09C4  3188  2005  3188   	fcall	___flge
  8405  09C7  1803               	btfsc	3,0
  8406  09C8  29E2               	goto	l7424
  8407                           
  8408                           ;doprnt.c: 832: fval = -fval;
  8409  09C9  0022               	movlb	2	; select bank2
  8410  09CA  083C               	movf	(sprintf@fval+3)^(0+256),w
  8411  09CB  00F5               	movwf	___flneg@f1+3
  8412  09CC  083B               	movf	(sprintf@fval+2)^(0+256),w
  8413  09CD  00F4               	movwf	___flneg@f1+2
  8414  09CE  083A               	movf	(sprintf@fval+1)^(0+256),w
  8415  09CF  00F3               	movwf	___flneg@f1+1
  8416  09D0  0839               	movf	sprintf@fval^(0+256),w
  8417  09D1  00F2               	movwf	___flneg@f1
  8418  09D2  31AB  2331  3188   	fcall	___flneg
  8419  09D5  0875               	movf	?___flneg+3,w
  8420  09D6  0022               	movlb	2	; select bank2
  8421  09D7  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8422  09D8  0874               	movf	?___flneg+2,w
  8423  09D9  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8424  09DA  0873               	movf	?___flneg+1,w
  8425  09DB  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8426  09DC  0872               	movf	?___flneg,w
  8427  09DD  00B9               	movwf	sprintf@fval^(0+256)
  8428                           
  8429                           ;doprnt.c: 833: flag |= 0x03;
  8430  09DE  3003               	movlw	3
  8431  09DF  04B5               	iorwf	sprintf@flag^(0+256),f
  8432  09E0  3000               	movlw	0
  8433  09E1  04B6               	iorwf	(sprintf@flag+1)^(0+256),f
  8434  09E2                     l7424:	
  8435                           
  8436                           ;doprnt.c: 834: }
  8437                           ;doprnt.c: 835: exp = 0;
  8438  09E2  0022               	movlb	2	; select bank2
  8439  09E3  01B3               	clrf	sprintf@exp^(0+256)
  8440  09E4  01B4               	clrf	(sprintf@exp+1)^(0+256)
  8441                           
  8442                           ;doprnt.c: 836: if( fval!=0) {
  8443  09E5  083C               	movf	(sprintf@fval+3)^(0+256),w
  8444  09E6  043B               	iorwf	(sprintf@fval+2)^(0+256),w
  8445  09E7  043A               	iorwf	(sprintf@fval+1)^(0+256),w
  8446  09E8  0439               	iorwf	sprintf@fval^(0+256),w
  8447  09E9  1903               	skipnz
  8448  09EA  2AB8               	goto	l865
  8449                           
  8450                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8451  09EB  0839               	movf	sprintf@fval^(0+256),w
  8452  09EC  00A0               	movwf	??_sprintf^(0+256)
  8453  09ED  083A               	movf	(sprintf@fval+1)^(0+256),w
  8454  09EE  00A1               	movwf	(??_sprintf^(0+256)+1)
  8455  09EF  083B               	movf	(sprintf@fval+2)^(0+256),w
  8456  09F0  00A2               	movwf	(??_sprintf^(0+256)+2)
  8457  09F1  083C               	movf	(sprintf@fval+3)^(0+256),w
  8458  09F2  00A3               	movwf	(??_sprintf^(0+256)+3)
  8459  09F3  1003               	clrc
  8460  09F4  0D22               	rlf	(??_sprintf^(0+256)+2),w
  8461  09F5  0D23               	rlf	(??_sprintf^(0+256)+3),w
  8462  09F6  3E82               	addlw	130
  8463  09F7  00B3               	movwf	sprintf@exp^(0+256)
  8464  09F8  30FF               	movlw	255
  8465  09F9  1803               	skipnc
  8466  09FA  3000               	movlw	0
  8467  09FB  00B4               	movwf	(sprintf@exp^(0+256)+1)
  8468                           
  8469                           ;doprnt.c: 838: exp--;
  8470  09FC  30FF               	movlw	255
  8471  09FD  07B3               	addwf	sprintf@exp^(0+256),f
  8472  09FE  30FF               	movlw	255
  8473  09FF  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8474                           
  8475                           ;doprnt.c: 839: exp *= 3;
  8476  0A00  3003               	movlw	3
  8477  0A01  00F2               	movwf	___wmul@multiplier
  8478  0A02  3000               	movlw	0
  8479  0A03  00F3               	movwf	___wmul@multiplier+1
  8480  0A04  0834               	movf	(sprintf@exp+1)^(0+256),w
  8481  0A05  00F5               	movwf	___wmul@multiplicand+1
  8482  0A06  0833               	movf	sprintf@exp^(0+256),w
  8483  0A07  00F4               	movwf	___wmul@multiplicand
  8484  0A08  319C  2401  3188   	fcall	___wmul
  8485  0A0B  0873               	movf	?___wmul+1,w
  8486  0A0C  0022               	movlb	2	; select bank2
  8487  0A0D  00B4               	movwf	(sprintf@exp+1)^(0+256)
  8488  0A0E  0872               	movf	?___wmul,w
  8489  0A0F  00B3               	movwf	sprintf@exp^(0+256)
  8490                           
  8491                           ;doprnt.c: 840: exp /= 10;
  8492  0A10  300A               	movlw	10
  8493  0A11  0020               	movlb	0	; select bank0
  8494  0A12  00A0               	movwf	___awdiv@divisor
  8495  0A13  3000               	movlw	0
  8496  0A14  00A1               	movwf	___awdiv@divisor+1
  8497  0A15  0022               	movlb	2	; select bank2
  8498  0A16  0834               	movf	(sprintf@exp+1)^(0+256),w
  8499  0A17  0020               	movlb	0	; select bank0
  8500  0A18  00A3               	movwf	___awdiv@dividend+1
  8501  0A19  0022               	movlb	2	; select bank2
  8502  0A1A  0833               	movf	sprintf@exp^(0+256),w
  8503  0A1B  0020               	movlb	0	; select bank0
  8504  0A1C  00A2               	movwf	___awdiv@dividend
  8505  0A1D  31AF  2707  3188   	fcall	___awdiv
  8506  0A20  0020               	movlb	0	; select bank0
  8507  0A21  0821               	movf	?___awdiv+1,w
  8508  0A22  0022               	movlb	2	; select bank2
  8509  0A23  00B4               	movwf	(sprintf@exp+1)^(0+256)
  8510  0A24  0020               	movlb	0	; select bank0
  8511  0A25  0820               	movf	?___awdiv,w
  8512  0A26  0022               	movlb	2	; select bank2
  8513  0A27  00B3               	movwf	sprintf@exp^(0+256)
  8514                           
  8515                           ;doprnt.c: 841: if(exp < 0)
  8516  0A28  1FB4               	btfss	(sprintf@exp+1)^(0+256),7
  8517  0A29  2A2E               	goto	l7440
  8518                           
  8519                           ;doprnt.c: 842: exp--;
  8520  0A2A  30FF               	movlw	255
  8521  0A2B  07B3               	addwf	sprintf@exp^(0+256),f
  8522  0A2C  30FF               	movlw	255
  8523  0A2D  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8524  0A2E                     l7440:	
  8525                           
  8526                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8527  0A2E  0333               	decf	sprintf@exp^(0+256),w
  8528  0A2F  3AFF               	xorlw	255
  8529  0A30  3180  20AB  3188   	fcall	_scale
  8530  0A33  0020               	movlb	0	; select bank0
  8531  0A34  086F               	movf	?_scale+3,w
  8532  0A35  0022               	movlb	2	; select bank2
  8533  0A36  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8534  0A37  0020               	movlb	0	; select bank0
  8535  0A38  086E               	movf	?_scale+2,w
  8536  0A39  0022               	movlb	2	; select bank2
  8537  0A3A  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8538  0A3B  0020               	movlb	0	; select bank0
  8539  0A3C  086D               	movf	?_scale+1,w
  8540  0A3D  0022               	movlb	2	; select bank2
  8541  0A3E  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8542  0A3F  0020               	movlb	0	; select bank0
  8543  0A40  086C               	movf	?_scale,w
  8544  0A41  0022               	movlb	2	; select bank2
  8545  0A42  00AB               	movwf	sprintf@tmpval^(0+256)
  8546                           
  8547                           ;doprnt.c: 847: tmpval.integ *= fval;
  8548  0A43  083C               	movf	(sprintf@fval+3)^(0+256),w
  8549  0A44  0020               	movlb	0	; select bank0
  8550  0A45  00D5               	movwf	___flmul@b+3
  8551  0A46  0022               	movlb	2	; select bank2
  8552  0A47  083B               	movf	(sprintf@fval+2)^(0+256),w
  8553  0A48  0020               	movlb	0	; select bank0
  8554  0A49  00D4               	movwf	___flmul@b+2
  8555  0A4A  0022               	movlb	2	; select bank2
  8556  0A4B  083A               	movf	(sprintf@fval+1)^(0+256),w
  8557  0A4C  0020               	movlb	0	; select bank0
  8558  0A4D  00D3               	movwf	___flmul@b+1
  8559  0A4E  0022               	movlb	2	; select bank2
  8560  0A4F  0839               	movf	sprintf@fval^(0+256),w
  8561  0A50  0020               	movlb	0	; select bank0
  8562  0A51  00D2               	movwf	___flmul@b
  8563  0A52  0022               	movlb	2	; select bank2
  8564  0A53  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8565  0A54  0020               	movlb	0	; select bank0
  8566  0A55  00D9               	movwf	___flmul@a+3
  8567  0A56  0022               	movlb	2	; select bank2
  8568  0A57  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8569  0A58  0020               	movlb	0	; select bank0
  8570  0A59  00D8               	movwf	___flmul@a+2
  8571  0A5A  0022               	movlb	2	; select bank2
  8572  0A5B  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8573  0A5C  0020               	movlb	0	; select bank0
  8574  0A5D  00D7               	movwf	___flmul@a+1
  8575  0A5E  0022               	movlb	2	; select bank2
  8576  0A5F  082B               	movf	sprintf@tmpval^(0+256),w
  8577  0A60  0020               	movlb	0	; select bank0
  8578  0A61  00D6               	movwf	___flmul@a
  8579  0A62  3183  23D0  3188   	fcall	___flmul
  8580  0A65  0020               	movlb	0	; select bank0
  8581  0A66  0855               	movf	?___flmul+3,w
  8582  0A67  0022               	movlb	2	; select bank2
  8583  0A68  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8584  0A69  0020               	movlb	0	; select bank0
  8585  0A6A  0854               	movf	?___flmul+2,w
  8586  0A6B  0022               	movlb	2	; select bank2
  8587  0A6C  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8588  0A6D  0020               	movlb	0	; select bank0
  8589  0A6E  0853               	movf	?___flmul+1,w
  8590  0A6F  0022               	movlb	2	; select bank2
  8591  0A70  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8592  0A71  0020               	movlb	0	; select bank0
  8593  0A72  0852               	movf	?___flmul,w
  8594  0A73  0022               	movlb	2	; select bank2
  8595  0A74  00AB               	movwf	sprintf@tmpval^(0+256)
  8596                           
  8597                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8598  0A75  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8599  0A76  0021               	movlb	1	; select bank1
  8600  0A77  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8601  0A78  0022               	movlb	2	; select bank2
  8602  0A79  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8603  0A7A  0021               	movlb	1	; select bank1
  8604  0A7B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8605  0A7C  0022               	movlb	2	; select bank2
  8606  0A7D  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8607  0A7E  0021               	movlb	1	; select bank1
  8608  0A7F  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8609  0A80  0022               	movlb	2	; select bank2
  8610  0A81  082B               	movf	sprintf@tmpval^(0+256),w
  8611  0A82  0021               	movlb	1	; select bank1
  8612  0A83  00D5               	movwf	___flge@ff1^(0+128)
  8613  0A84  303F               	movlw	63
  8614  0A85  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8615  0A86  3080               	movlw	128
  8616  0A87  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8617  0A88  3000               	movlw	0
  8618  0A89  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8619  0A8A  3000               	movlw	0
  8620  0A8B  00D9               	movwf	___flge@ff2^(0+128)
  8621  0A8C  3188  2005  3188   	fcall	___flge
  8622  0A8F  1803               	btfsc	3,0
  8623  0A90  2A96               	goto	l7448
  8624                           
  8625                           ;doprnt.c: 849: exp--;
  8626  0A91  30FF               	movlw	255
  8627  0A92  0022               	movlb	2	; select bank2
  8628  0A93  07B3               	addwf	sprintf@exp^(0+256),f
  8629  0A94  30FF               	movlw	255
  8630  0A95  2AB7               	goto	L2
  8631  0A96                     l7448:	
  8632                           
  8633                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8634  0A96  0022               	movlb	2	; select bank2
  8635  0A97  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8636  0A98  0021               	movlb	1	; select bank1
  8637  0A99  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8638  0A9A  0022               	movlb	2	; select bank2
  8639  0A9B  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8640  0A9C  0021               	movlb	1	; select bank1
  8641  0A9D  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8642  0A9E  0022               	movlb	2	; select bank2
  8643  0A9F  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8644  0AA0  0021               	movlb	1	; select bank1
  8645  0AA1  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8646  0AA2  0022               	movlb	2	; select bank2
  8647  0AA3  082B               	movf	sprintf@tmpval^(0+256),w
  8648  0AA4  0021               	movlb	1	; select bank1
  8649  0AA5  00D5               	movwf	___flge@ff1^(0+128)
  8650  0AA6  3041               	movlw	65
  8651  0AA7  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8652  0AA8  3020               	movlw	32
  8653  0AA9  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8654  0AAA  3000               	movlw	0
  8655  0AAB  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8656  0AAC  3000               	movlw	0
  8657  0AAD  00D9               	movwf	___flge@ff2^(0+128)
  8658  0AAE  3188  2005  3188   	fcall	___flge
  8659  0AB1  1C03               	btfss	3,0
  8660  0AB2  2AB8               	goto	l865
  8661                           
  8662                           ;doprnt.c: 851: exp++;
  8663  0AB3  3001               	movlw	1
  8664  0AB4  0022               	movlb	2	; select bank2
  8665  0AB5  07B3               	addwf	sprintf@exp^(0+256),f
  8666  0AB6  3000               	movlw	0
  8667  0AB7                     L2:	
  8668  0AB7  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8669  0AB8                     l865:	
  8670                           
  8671                           ;doprnt.c: 852: }
  8672                           ;doprnt.c: 1112: if(prec <= 12)
  8673  0AB8  0022               	movlb	2	; select bank2
  8674  0AB9  083E               	movf	(sprintf@prec+1)^(0+256),w
  8675  0ABA  3A80               	xorlw	128
  8676  0ABB  00A0               	movwf	??_sprintf^(0+256)
  8677  0ABC  3080               	movlw	128
  8678  0ABD  0220               	subwf	??_sprintf^(0+256),w
  8679  0ABE  1D03               	skipz
  8680  0ABF  2AC2               	goto	u10275
  8681  0AC0  300D               	movlw	13
  8682  0AC1  023D               	subwf	sprintf@prec^(0+256),w
  8683  0AC2                     u10275:	
  8684  0AC2  1803               	skipnc
  8685  0AC3  2AFC               	goto	l7454
  8686                           
  8687                           ;doprnt.c: 1113: fval += fround(prec);
  8688  0AC4  0022               	movlb	2	; select bank2
  8689  0AC5  083D               	movf	sprintf@prec^(0+256),w
  8690  0AC6  3195  25F7  3188   	fcall	_fround
  8691  0AC9  0020               	movlb	0	; select bank0
  8692  0ACA  086F               	movf	?_fround+3,w
  8693  0ACB  0021               	movlb	1	; select bank1
  8694  0ACC  00C0               	movwf	(___fladd@b+3)^(0+128)
  8695  0ACD  0020               	movlb	0	; select bank0
  8696  0ACE  086E               	movf	?_fround+2,w
  8697  0ACF  0021               	movlb	1	; select bank1
  8698  0AD0  00BF               	movwf	(___fladd@b+2)^(0+128)
  8699  0AD1  0020               	movlb	0	; select bank0
  8700  0AD2  086D               	movf	?_fround+1,w
  8701  0AD3  0021               	movlb	1	; select bank1
  8702  0AD4  00BE               	movwf	(___fladd@b+1)^(0+128)
  8703  0AD5  0020               	movlb	0	; select bank0
  8704  0AD6  086C               	movf	?_fround,w
  8705  0AD7  0021               	movlb	1	; select bank1
  8706  0AD8  00BD               	movwf	___fladd@b^(0+128)
  8707  0AD9  0022               	movlb	2	; select bank2
  8708  0ADA  083C               	movf	(sprintf@fval+3)^(0+256),w
  8709  0ADB  0021               	movlb	1	; select bank1
  8710  0ADC  00C4               	movwf	(___fladd@a+3)^(0+128)
  8711  0ADD  0022               	movlb	2	; select bank2
  8712  0ADE  083B               	movf	(sprintf@fval+2)^(0+256),w
  8713  0ADF  0021               	movlb	1	; select bank1
  8714  0AE0  00C3               	movwf	(___fladd@a+2)^(0+128)
  8715  0AE1  0022               	movlb	2	; select bank2
  8716  0AE2  083A               	movf	(sprintf@fval+1)^(0+256),w
  8717  0AE3  0021               	movlb	1	; select bank1
  8718  0AE4  00C2               	movwf	(___fladd@a+1)^(0+128)
  8719  0AE5  0022               	movlb	2	; select bank2
  8720  0AE6  0839               	movf	sprintf@fval^(0+256),w
  8721  0AE7  0021               	movlb	1	; select bank1
  8722  0AE8  00C1               	movwf	___fladd@a^(0+128)
  8723  0AE9  3185  25FC  3188   	fcall	___fladd
  8724  0AEC  0021               	movlb	1	; select bank1
  8725  0AED  0840               	movf	(?___fladd+3)^(0+128),w
  8726  0AEE  0022               	movlb	2	; select bank2
  8727  0AEF  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8728  0AF0  0021               	movlb	1	; select bank1
  8729  0AF1  083F               	movf	(?___fladd+2)^(0+128),w
  8730  0AF2  0022               	movlb	2	; select bank2
  8731  0AF3  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8732  0AF4  0021               	movlb	1	; select bank1
  8733  0AF5  083E               	movf	(?___fladd+1)^(0+128),w
  8734  0AF6  0022               	movlb	2	; select bank2
  8735  0AF7  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8736  0AF8  0021               	movlb	1	; select bank1
  8737  0AF9  083D               	movf	?___fladd^(0+128),w
  8738  0AFA  0022               	movlb	2	; select bank2
  8739  0AFB  00B9               	movwf	sprintf@fval^(0+256)
  8740  0AFC                     l7454:	
  8741                           
  8742                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8743  0AFC  0022               	movlb	2	; select bank2
  8744  0AFD  0834               	movf	(sprintf@exp+1)^(0+256),w
  8745  0AFE  3A80               	xorlw	128
  8746  0AFF  00A0               	movwf	??_sprintf^(0+256)
  8747  0B00  3080               	movlw	128
  8748  0B01  0220               	subwf	??_sprintf^(0+256),w
  8749  0B02  1D03               	skipz
  8750  0B03  2B06               	goto	u10285
  8751  0B04  300A               	movlw	10
  8752  0B05  0233               	subwf	sprintf@exp^(0+256),w
  8753  0B06                     u10285:	
  8754  0B06  1803               	skipnc
  8755  0B07  2B34               	goto	l7462
  8756  0B08  0022               	movlb	2	; select bank2
  8757  0B09  083C               	movf	(sprintf@fval+3)^(0+256),w
  8758  0B0A  043B               	iorwf	(sprintf@fval+2)^(0+256),w
  8759  0B0B  043A               	iorwf	(sprintf@fval+1)^(0+256),w
  8760  0B0C  0439               	iorwf	sprintf@fval^(0+256),w
  8761  0B0D  1903               	skipnz
  8762  0B0E  2B91               	goto	l7476
  8763  0B0F  083C               	movf	(sprintf@fval+3)^(0+256),w
  8764  0B10  0021               	movlb	1	; select bank1
  8765  0B11  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8766  0B12  0022               	movlb	2	; select bank2
  8767  0B13  083B               	movf	(sprintf@fval+2)^(0+256),w
  8768  0B14  0021               	movlb	1	; select bank1
  8769  0B15  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8770  0B16  0022               	movlb	2	; select bank2
  8771  0B17  083A               	movf	(sprintf@fval+1)^(0+256),w
  8772  0B18  0021               	movlb	1	; select bank1
  8773  0B19  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8774  0B1A  0022               	movlb	2	; select bank2
  8775  0B1B  0839               	movf	sprintf@fval^(0+256),w
  8776  0B1C  0021               	movlb	1	; select bank1
  8777  0B1D  00B5               	movwf	___fltol@f1^(0+128)
  8778  0B1E  31A0  20C7  3188   	fcall	___fltol
  8779  0B21  0021               	movlb	1	; select bank1
  8780  0B22  0838               	movf	(?___fltol+3)^(0+128),w
  8781  0B23  0437               	iorwf	(?___fltol+2)^(0+128),w
  8782  0B24  0436               	iorwf	(?___fltol+1)^(0+128),w
  8783  0B25  0435               	iorwf	?___fltol^(0+128),w
  8784  0B26  1D03               	skipz
  8785  0B27  2B91               	goto	l7476
  8786  0B28  0022               	movlb	2	; select bank2
  8787  0B29  0834               	movf	(sprintf@exp+1)^(0+256),w
  8788  0B2A  3A80               	xorlw	128
  8789  0B2B  00A0               	movwf	??_sprintf^(0+256)
  8790  0B2C  3080               	movlw	128
  8791  0B2D  0220               	subwf	??_sprintf^(0+256),w
  8792  0B2E  1D03               	skipz
  8793  0B2F  2B32               	goto	u10315
  8794  0B30  3002               	movlw	2
  8795  0B31  0233               	subwf	sprintf@exp^(0+256),w
  8796  0B32                     u10315:	
  8797  0B32  1C03               	skipc
  8798  0B33  2B91               	goto	l7476
  8799  0B34                     l7462:	
  8800                           
  8801                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8802  0B34  0022               	movlb	2	; select bank2
  8803  0B35  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8804  0B36  0021               	movlb	1	; select bank1
  8805  0B37  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8806  0B38  0022               	movlb	2	; select bank2
  8807  0B39  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8808  0B3A  0021               	movlb	1	; select bank1
  8809  0B3B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8810  0B3C  0022               	movlb	2	; select bank2
  8811  0B3D  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8812  0B3E  0021               	movlb	1	; select bank1
  8813  0B3F  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8814  0B40  0022               	movlb	2	; select bank2
  8815  0B41  082B               	movf	sprintf@tmpval^(0+256),w
  8816  0B42  0021               	movlb	1	; select bank1
  8817  0B43  00D5               	movwf	___flge@ff1^(0+128)
  8818  0B44  3040               	movlw	64
  8819  0B45  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8820  0B46  3089               	movlw	137
  8821  0B47  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8822  0B48  3070               	movlw	112
  8823  0B49  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8824  0B4A  305F               	movlw	95
  8825  0B4B  00D9               	movwf	___flge@ff2^(0+128)
  8826  0B4C  3188  2005  3188   	fcall	___flge
  8827  0B4F  1803               	btfsc	3,0
  8828  0B50  2B53               	goto	l7466
  8829                           
  8830                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8831  0B51  30F7               	movlw	247
  8832  0B52  2B54               	goto	L3
  8833  0B53                     l7466:	
  8834                           ;doprnt.c: 1122: }else{
  8835                           
  8836                           
  8837                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8838  0B53  30F8               	movlw	248
  8839  0B54                     L3:	
  8840  0B54  0022               	movlb	2	; select bank2
  8841  0B55  07B3               	addwf	sprintf@exp^(0+256),f
  8842  0B56  30FF               	movlw	255
  8843  0B57  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8844                           
  8845                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8846  0B58  0833               	movf	sprintf@exp^(0+256),w
  8847  0B59  3180  20AB  3188   	fcall	_scale
  8848  0B5C  0020               	movlb	0	; select bank0
  8849  0B5D  086F               	movf	?_scale+3,w
  8850  0B5E  0022               	movlb	2	; select bank2
  8851  0B5F  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8852  0B60  0020               	movlb	0	; select bank0
  8853  0B61  086E               	movf	?_scale+2,w
  8854  0B62  0022               	movlb	2	; select bank2
  8855  0B63  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8856  0B64  0020               	movlb	0	; select bank0
  8857  0B65  086D               	movf	?_scale+1,w
  8858  0B66  0022               	movlb	2	; select bank2
  8859  0B67  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8860  0B68  0020               	movlb	0	; select bank0
  8861  0B69  086C               	movf	?_scale,w
  8862  0B6A  0022               	movlb	2	; select bank2
  8863  0B6B  00AB               	movwf	sprintf@tmpval^(0+256)
  8864  0B6C  083C               	movf	(sprintf@fval+3)^(0+256),w
  8865  0B6D  00F5               	movwf	__div_to_l_@f1+3
  8866  0B6E  083B               	movf	(sprintf@fval+2)^(0+256),w
  8867  0B6F  00F4               	movwf	__div_to_l_@f1+2
  8868  0B70  083A               	movf	(sprintf@fval+1)^(0+256),w
  8869  0B71  00F3               	movwf	__div_to_l_@f1+1
  8870  0B72  0839               	movf	sprintf@fval^(0+256),w
  8871  0B73  00F2               	movwf	__div_to_l_@f1
  8872  0B74  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8873  0B75  00F9               	movwf	__div_to_l_@f2+3
  8874  0B76  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8875  0B77  00F8               	movwf	__div_to_l_@f2+2
  8876  0B78  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8877  0B79  00F7               	movwf	__div_to_l_@f2+1
  8878  0B7A  082B               	movf	sprintf@tmpval^(0+256),w
  8879  0B7B  00F6               	movwf	__div_to_l_@f2
  8880  0B7C  31A5  2559  3188   	fcall	__div_to_l_
  8881  0B7F  0875               	movf	?__div_to_l_+3,w
  8882  0B80  0022               	movlb	2	; select bank2
  8883  0B81  00B2               	movwf	(sprintf@val+3)^(0+256)
  8884  0B82  0874               	movf	?__div_to_l_+2,w
  8885  0B83  00B1               	movwf	(sprintf@val+2)^(0+256)
  8886  0B84  0873               	movf	?__div_to_l_+1,w
  8887  0B85  00B0               	movwf	(sprintf@val+1)^(0+256)
  8888  0B86  0872               	movf	?__div_to_l_,w
  8889  0B87  00AF               	movwf	sprintf@val^(0+256)
  8890                           
  8891                           ;doprnt.c: 1129: fval = 0.0;
  8892  0B88  3000               	movlw	0
  8893  0B89  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8894  0B8A  3000               	movlw	0
  8895  0B8B  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8896  0B8C  3000               	movlw	0
  8897  0B8D  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8898  0B8E  3000               	movlw	0
  8899  0B8F  00B9               	movwf	sprintf@fval^(0+256)
  8900                           
  8901                           ;doprnt.c: 1130: } else {
  8902  0B90  2BFC               	goto	l7480
  8903  0B91                     l7476:	
  8904                           
  8905                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8906  0B91  0022               	movlb	2	; select bank2
  8907  0B92  083C               	movf	(sprintf@fval+3)^(0+256),w
  8908  0B93  0021               	movlb	1	; select bank1
  8909  0B94  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8910  0B95  0022               	movlb	2	; select bank2
  8911  0B96  083B               	movf	(sprintf@fval+2)^(0+256),w
  8912  0B97  0021               	movlb	1	; select bank1
  8913  0B98  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8914  0B99  0022               	movlb	2	; select bank2
  8915  0B9A  083A               	movf	(sprintf@fval+1)^(0+256),w
  8916  0B9B  0021               	movlb	1	; select bank1
  8917  0B9C  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8918  0B9D  0022               	movlb	2	; select bank2
  8919  0B9E  0839               	movf	sprintf@fval^(0+256),w
  8920  0B9F  0021               	movlb	1	; select bank1
  8921  0BA0  00B5               	movwf	___fltol@f1^(0+128)
  8922  0BA1  31A0  20C7  3188   	fcall	___fltol
  8923  0BA4  0021               	movlb	1	; select bank1
  8924  0BA5  0838               	movf	(?___fltol+3)^(0+128),w
  8925  0BA6  0022               	movlb	2	; select bank2
  8926  0BA7  00B2               	movwf	(sprintf@val+3)^(0+256)
  8927  0BA8  0021               	movlb	1	; select bank1
  8928  0BA9  0837               	movf	(?___fltol+2)^(0+128),w
  8929  0BAA  0022               	movlb	2	; select bank2
  8930  0BAB  00B1               	movwf	(sprintf@val+2)^(0+256)
  8931  0BAC  0021               	movlb	1	; select bank1
  8932  0BAD  0836               	movf	(?___fltol+1)^(0+128),w
  8933  0BAE  0022               	movlb	2	; select bank2
  8934  0BAF  00B0               	movwf	(sprintf@val+1)^(0+256)
  8935  0BB0  0021               	movlb	1	; select bank1
  8936  0BB1  0835               	movf	?___fltol^(0+128),w
  8937  0BB2  0022               	movlb	2	; select bank2
  8938  0BB3  00AF               	movwf	sprintf@val^(0+256)
  8939                           
  8940                           ;doprnt.c: 1132: fval -= (double)val;
  8941  0BB4  0832               	movf	(sprintf@val+3)^(0+256),w
  8942  0BB5  0020               	movlb	0	; select bank0
  8943  0BB6  00B1               	movwf	___xxtofl@val+3
  8944  0BB7  0022               	movlb	2	; select bank2
  8945  0BB8  0831               	movf	(sprintf@val+2)^(0+256),w
  8946  0BB9  0020               	movlb	0	; select bank0
  8947  0BBA  00B0               	movwf	___xxtofl@val+2
  8948  0BBB  0022               	movlb	2	; select bank2
  8949  0BBC  0830               	movf	(sprintf@val+1)^(0+256),w
  8950  0BBD  0020               	movlb	0	; select bank0
  8951  0BBE  00AF               	movwf	___xxtofl@val+1
  8952  0BBF  0022               	movlb	2	; select bank2
  8953  0BC0  082F               	movf	sprintf@val^(0+256),w
  8954  0BC1  0020               	movlb	0	; select bank0
  8955  0BC2  00AE               	movwf	___xxtofl@val
  8956  0BC3  3000               	movlw	0
  8957  0BC4  31A3  235C  3188   	fcall	___xxtofl
  8958  0BC7  0020               	movlb	0	; select bank0
  8959  0BC8  0831               	movf	?___xxtofl+3,w
  8960  0BC9  0021               	movlb	1	; select bank1
  8961  0BCA  00D8               	movwf	(___flsub@a+3)^(0+128)
  8962  0BCB  0020               	movlb	0	; select bank0
  8963  0BCC  0830               	movf	?___xxtofl+2,w
  8964  0BCD  0021               	movlb	1	; select bank1
  8965  0BCE  00D7               	movwf	(___flsub@a+2)^(0+128)
  8966  0BCF  0020               	movlb	0	; select bank0
  8967  0BD0  082F               	movf	?___xxtofl+1,w
  8968  0BD1  0021               	movlb	1	; select bank1
  8969  0BD2  00D6               	movwf	(___flsub@a+1)^(0+128)
  8970  0BD3  0020               	movlb	0	; select bank0
  8971  0BD4  082E               	movf	?___xxtofl,w
  8972  0BD5  0021               	movlb	1	; select bank1
  8973  0BD6  00D5               	movwf	___flsub@a^(0+128)
  8974  0BD7  0022               	movlb	2	; select bank2
  8975  0BD8  083C               	movf	(sprintf@fval+3)^(0+256),w
  8976  0BD9  0021               	movlb	1	; select bank1
  8977  0BDA  00DC               	movwf	(___flsub@b+3)^(0+128)
  8978  0BDB  0022               	movlb	2	; select bank2
  8979  0BDC  083B               	movf	(sprintf@fval+2)^(0+256),w
  8980  0BDD  0021               	movlb	1	; select bank1
  8981  0BDE  00DB               	movwf	(___flsub@b+2)^(0+128)
  8982  0BDF  0022               	movlb	2	; select bank2
  8983  0BE0  083A               	movf	(sprintf@fval+1)^(0+256),w
  8984  0BE1  0021               	movlb	1	; select bank1
  8985  0BE2  00DA               	movwf	(___flsub@b+1)^(0+128)
  8986  0BE3  0022               	movlb	2	; select bank2
  8987  0BE4  0839               	movf	sprintf@fval^(0+256),w
  8988  0BE5  0021               	movlb	1	; select bank1
  8989  0BE6  00D9               	movwf	___flsub@b^(0+128)
  8990  0BE7  31AC  2402  3188   	fcall	___flsub
  8991  0BEA  0021               	movlb	1	; select bank1
  8992  0BEB  0858               	movf	(?___flsub+3)^(0+128),w
  8993  0BEC  0022               	movlb	2	; select bank2
  8994  0BED  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8995  0BEE  0021               	movlb	1	; select bank1
  8996  0BEF  0857               	movf	(?___flsub+2)^(0+128),w
  8997  0BF0  0022               	movlb	2	; select bank2
  8998  0BF1  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8999  0BF2  0021               	movlb	1	; select bank1
  9000  0BF3  0856               	movf	(?___flsub+1)^(0+128),w
  9001  0BF4  0022               	movlb	2	; select bank2
  9002  0BF5  00BA               	movwf	(sprintf@fval+1)^(0+256)
  9003  0BF6  0021               	movlb	1	; select bank1
  9004  0BF7  0855               	movf	?___flsub^(0+128),w
  9005  0BF8  0022               	movlb	2	; select bank2
  9006  0BF9  00B9               	movwf	sprintf@fval^(0+256)
  9007                           
  9008                           ;doprnt.c: 1133: exp = 0;
  9009  0BFA  01B3               	clrf	sprintf@exp^(0+256)
  9010  0BFB  01B4               	clrf	(sprintf@exp+1)^(0+256)
  9011  0BFC                     l7480:	
  9012                           
  9013                           ;doprnt.c: 1134: }
  9014                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9015  0BFC  01C0               	clrf	sprintf@c^(0+256)
  9016  0BFD  0AC0               	incf	sprintf@c^(0+256),f
  9017  0BFE  300A               	movlw	10
  9018  0BFF  0640               	xorwf	sprintf@c^(0+256),w
  9019  0C00  1903               	btfsc	3,2
  9020  0C01  2C2F               	goto	l7492
  9021  0C02                     l7486:	
  9022                           
  9023                           ;doprnt.c: 1137: if(val < dpowers[c])
  9024  0C02  0840               	movf	sprintf@c^(0+256),w
  9025  0C03  00A0               	movwf	??_sprintf^(0+256)
  9026  0C04  01A1               	clrf	(??_sprintf^(0+256)+1)
  9027  0C05  35A0               	lslf	??_sprintf^(0+256),f
  9028  0C06  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9029  0C07  35A0               	lslf	??_sprintf^(0+256),f
  9030  0C08  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9031  0C09  309A               	movlw	low (_dpowers| (0+32768))
  9032  0C0A  0720               	addwf	??_sprintf^(0+256),w
  9033  0C0B  0084               	movwf	4
  9034  0C0C  30B0               	movlw	high (_dpowers| (0+32768))
  9035  0C0D  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9036  0C0E  0085               	movwf	5
  9037  0C0F  3F00               	moviw [0]fsr0
  9038  0C10  00A2               	movwf	(??_sprintf+2)^(0+256)
  9039  0C11  3F01               	moviw [1]fsr0
  9040  0C12  00A3               	movwf	((??_sprintf+2)^(0+256)+1)
  9041  0C13  3F02               	moviw [2]fsr0
  9042  0C14  00A4               	movwf	((??_sprintf+2)^(0+256)+2)
  9043  0C15  3F03               	moviw [3]fsr0
  9044  0C16  00A5               	movwf	((??_sprintf+2)^(0+256)+3)
  9045  0C17  0825               	movf	(??_sprintf+5)^(0+256),w
  9046  0C18  0232               	subwf	(sprintf@val+3)^(0+256),w
  9047  0C19  1D03               	skipz
  9048  0C1A  2C25               	goto	u10345
  9049  0C1B  0824               	movf	(??_sprintf+4)^(0+256),w
  9050  0C1C  0231               	subwf	(sprintf@val+2)^(0+256),w
  9051  0C1D  1D03               	skipz
  9052  0C1E  2C25               	goto	u10345
  9053  0C1F  0823               	movf	(??_sprintf+3)^(0+256),w
  9054  0C20  0230               	subwf	(sprintf@val+1)^(0+256),w
  9055  0C21  1D03               	skipz
  9056  0C22  2C25               	goto	u10345
  9057  0C23  0822               	movf	(??_sprintf+2)^(0+256),w
  9058  0C24  022F               	subwf	sprintf@val^(0+256),w
  9059  0C25                     u10345:	
  9060  0C25  1C03               	btfss	3,0
  9061  0C26  2C2F               	goto	l7492
  9062                           
  9063                           ;doprnt.c: 1138: break;
  9064  0C27  3001               	movlw	1
  9065  0C28  00A0               	movwf	??_sprintf^(0+256)
  9066  0C29  0820               	movf	??_sprintf^(0+256),w
  9067  0C2A  07C0               	addwf	sprintf@c^(0+256),f
  9068  0C2B  300A               	movlw	10
  9069  0C2C  0640               	xorwf	sprintf@c^(0+256),w
  9070  0C2D  1D03               	btfss	3,2
  9071  0C2E  2C02               	goto	l7486
  9072  0C2F                     l7492:	
  9073                           
  9074                           ;doprnt.c: 1142: width -= prec + c + exp;
  9075  0C2F  0840               	movf	sprintf@c^(0+256),w
  9076  0C30  00A0               	movwf	??_sprintf^(0+256)
  9077  0C31  01A1               	clrf	(??_sprintf^(0+256)+1)
  9078  0C32  1BA0               	btfsc	??_sprintf^(0+256),7
  9079  0C33  03A1               	decf	(??_sprintf^(0+256)+1),f
  9080  0C34  083D               	movf	sprintf@prec^(0+256),w
  9081  0C35  0720               	addwf	??_sprintf^(0+256),w
  9082  0C36  00A2               	movwf	(??_sprintf+2)^(0+256)
  9083  0C37  083E               	movf	(sprintf@prec+1)^(0+256),w
  9084  0C38  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9085  0C39  00A3               	movwf	(??_sprintf+3)^(0+256)
  9086  0C3A  0833               	movf	sprintf@exp^(0+256),w
  9087  0C3B  0722               	addwf	(??_sprintf+2)^(0+256),w
  9088  0C3C  00A4               	movwf	(??_sprintf+4)^(0+256)
  9089  0C3D  0834               	movf	(sprintf@exp+1)^(0+256),w
  9090  0C3E  3D23               	addwfc	(??_sprintf+3)^(0+256),w
  9091  0C3F  00A5               	movwf	(??_sprintf+5)^(0+256)
  9092  0C40  0824               	movf	(??_sprintf+4)^(0+256),w
  9093  0C41  02B7               	subwf	sprintf@width^(0+256),f
  9094  0C42  0825               	movf	(??_sprintf+5)^(0+256),w
  9095  0C43  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
  9096                           
  9097                           ;doprnt.c: 1143: if(
  9098                           ;doprnt.c: 1147: prec)
  9099  0C44  083D               	movf	sprintf@prec^(0+256),w
  9100  0C45  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9101  0C46  1903               	btfsc	3,2
  9102  0C47  2C4C               	goto	l7496
  9103                           
  9104                           ;doprnt.c: 1148: width--;
  9105  0C48  30FF               	movlw	255
  9106  0C49  07B7               	addwf	sprintf@width^(0+256),f
  9107  0C4A  30FF               	movlw	255
  9108  0C4B  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9109  0C4C                     l7496:	
  9110                           
  9111                           ;doprnt.c: 1149: if(flag & 0x03)
  9112  0C4C  3003               	movlw	3
  9113  0C4D  0535               	andwf	sprintf@flag^(0+256),w
  9114  0C4E  00A0               	movwf	??_sprintf^(0+256)
  9115  0C4F  3000               	movlw	0
  9116  0C50  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9117  0C51  00A1               	movwf	(??_sprintf+1)^(0+256)
  9118  0C52  0820               	movf	??_sprintf^(0+256),w
  9119  0C53  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9120  0C54  1903               	btfsc	3,2
  9121  0C55  2C5A               	goto	l7500
  9122                           
  9123                           ;doprnt.c: 1150: width--;
  9124  0C56  30FF               	movlw	255
  9125  0C57  07B7               	addwf	sprintf@width^(0+256),f
  9126  0C58  30FF               	movlw	255
  9127  0C59  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9128  0C5A                     l7500:	
  9129                           
  9130                           ;doprnt.c: 1153: if(flag & 0x04) {
  9131  0C5A  1D35               	btfss	sprintf@flag^(0+256),2
  9132  0C5B  2CA0               	goto	l7522
  9133                           
  9134                           ;doprnt.c: 1157: if(flag & 0x03)
  9135  0C5C  3003               	movlw	3
  9136  0C5D  0535               	andwf	sprintf@flag^(0+256),w
  9137  0C5E  00A0               	movwf	??_sprintf^(0+256)
  9138  0C5F  3000               	movlw	0
  9139  0C60  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9140  0C61  00A1               	movwf	(??_sprintf+1)^(0+256)
  9141  0C62  0820               	movf	??_sprintf^(0+256),w
  9142  0C63  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9143  0C64  1903               	btfsc	3,2
  9144  0C65  2C72               	goto	l7514
  9145                           
  9146                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  9147  0C66  302D               	movlw	45
  9148  0C67  00A0               	movwf	??_sprintf^(0+256)
  9149  0C68  083F               	movf	sprintf@sp^(0+256),w
  9150  0C69  0086               	movwf	6
  9151  0C6A  3002               	movlw	2	; select bank4/5
  9152  0C6B  0087               	movwf	7
  9153  0C6C  0820               	movf	??_sprintf^(0+256),w
  9154  0C6D  0081               	movwf	1
  9155  0C6E  3001               	movlw	1
  9156  0C6F  00A0               	movwf	??_sprintf^(0+256)
  9157  0C70  0820               	movf	??_sprintf^(0+256),w
  9158  0C71  07BF               	addwf	sprintf@sp^(0+256),f
  9159  0C72                     l7514:	
  9160                           ;doprnt.c: 1168: while(width > 0) {
  9161                           
  9162  0C72  0838               	movf	(sprintf@width+1)^(0+256),w
  9163  0C73  3A80               	xorlw	128
  9164  0C74  00A0               	movwf	??_sprintf^(0+256)
  9165  0C75  3080               	movlw	128
  9166  0C76  0220               	subwf	??_sprintf^(0+256),w
  9167  0C77  1D03               	skipz
  9168  0C78  2C7B               	goto	u10405
  9169  0C79  3001               	movlw	1
  9170  0C7A  0237               	subwf	sprintf@width^(0+256),w
  9171  0C7B                     u10405:	
  9172  0C7B  1C03               	btfss	3,0
  9173  0C7C  2CC3               	goto	l7538
  9174                           
  9175                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  9176  0C7D  3030               	movlw	48
  9177  0C7E  0022               	movlb	2	; select bank2
  9178  0C7F  00A0               	movwf	??_sprintf^(0+256)
  9179  0C80  083F               	movf	sprintf@sp^(0+256),w
  9180  0C81  0086               	movwf	6
  9181  0C82  3002               	movlw	2	; select bank4/5
  9182  0C83  0087               	movwf	7
  9183  0C84  0820               	movf	??_sprintf^(0+256),w
  9184  0C85  0081               	movwf	1
  9185  0C86  3001               	movlw	1
  9186  0C87  00A0               	movwf	??_sprintf^(0+256)
  9187  0C88  0820               	movf	??_sprintf^(0+256),w
  9188  0C89  07BF               	addwf	sprintf@sp^(0+256),f
  9189                           
  9190                           ;doprnt.c: 1170: width--;
  9191  0C8A  30FF               	movlw	255
  9192  0C8B  07B7               	addwf	sprintf@width^(0+256),f
  9193  0C8C  30FF               	movlw	255
  9194  0C8D  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9195  0C8E  2C72               	goto	l7514
  9196  0C8F                     l7516:	
  9197                           ;doprnt.c: 1175: {
  9198                           ;doprnt.c: 1180: while(width > 0) {
  9199                           
  9200                           ;doprnt.c: 1171: }
  9201                           ;doprnt.c: 1173: } else
  9202                           
  9203                           
  9204                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9205  0C8F  3020               	movlw	32
  9206  0C90  0022               	movlb	2	; select bank2
  9207  0C91  00A0               	movwf	??_sprintf^(0+256)
  9208  0C92  083F               	movf	sprintf@sp^(0+256),w
  9209  0C93  0086               	movwf	6
  9210  0C94  3002               	movlw	2	; select bank4/5
  9211  0C95  0087               	movwf	7
  9212  0C96  0820               	movf	??_sprintf^(0+256),w
  9213  0C97  0081               	movwf	1
  9214  0C98  3001               	movlw	1
  9215  0C99  00A0               	movwf	??_sprintf^(0+256)
  9216  0C9A  0820               	movf	??_sprintf^(0+256),w
  9217  0C9B  07BF               	addwf	sprintf@sp^(0+256),f
  9218                           
  9219                           ;doprnt.c: 1182: width--;
  9220  0C9C  30FF               	movlw	255
  9221  0C9D  07B7               	addwf	sprintf@width^(0+256),f
  9222  0C9E  30FF               	movlw	255
  9223  0C9F  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9224  0CA0                     l7522:	
  9225  0CA0  0022               	movlb	2	; select bank2
  9226  0CA1  0838               	movf	(sprintf@width+1)^(0+256),w
  9227  0CA2  3A80               	xorlw	128
  9228  0CA3  00A0               	movwf	??_sprintf^(0+256)
  9229  0CA4  3080               	movlw	128
  9230  0CA5  0220               	subwf	??_sprintf^(0+256),w
  9231  0CA6  1D03               	skipz
  9232  0CA7  2CAA               	goto	u10415
  9233  0CA8  3001               	movlw	1
  9234  0CA9  0237               	subwf	sprintf@width^(0+256),w
  9235  0CAA                     u10415:	
  9236  0CAA  1803               	skipnc
  9237  0CAB  2C8F               	goto	l7516
  9238                           
  9239                           ;doprnt.c: 1183: }
  9240                           ;doprnt.c: 1188: if(flag & 0x03)
  9241  0CAC  3003               	movlw	3
  9242  0CAD  0022               	movlb	2	; select bank2
  9243  0CAE  0535               	andwf	sprintf@flag^(0+256),w
  9244  0CAF  00A0               	movwf	??_sprintf^(0+256)
  9245  0CB0  3000               	movlw	0
  9246  0CB1  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9247  0CB2  00A1               	movwf	(??_sprintf+1)^(0+256)
  9248  0CB3  0820               	movf	??_sprintf^(0+256),w
  9249  0CB4  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9250  0CB5  1903               	btfsc	3,2
  9251  0CB6  2CC3               	goto	l7538
  9252                           
  9253                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9254  0CB7  302D               	movlw	45
  9255  0CB8                     L7:	
  9256  0CB8  00A0               	movwf	??_sprintf^(0+256)
  9257  0CB9  083F               	movf	sprintf@sp^(0+256),w
  9258  0CBA  0086               	movwf	6
  9259  0CBB  3002               	movlw	2	; select bank4/5
  9260  0CBC  0087               	movwf	7
  9261  0CBD  0820               	movf	??_sprintf^(0+256),w
  9262  0CBE  0081               	movwf	1
  9263  0CBF  3001               	movlw	1
  9264  0CC0  00A0               	movwf	??_sprintf^(0+256)
  9265  0CC1  0820               	movf	??_sprintf^(0+256),w
  9266  0CC2  07BF               	addwf	sprintf@sp^(0+256),f
  9267  0CC3                     l7538:	
  9268  0CC3  30FF               	movlw	255
  9269  0CC4  0022               	movlb	2	; select bank2
  9270  0CC5  00A0               	movwf	??_sprintf^(0+256)
  9271  0CC6  0820               	movf	??_sprintf^(0+256),w
  9272  0CC7  07C0               	addwf	sprintf@c^(0+256),f
  9273  0CC8  0A40               	incf	sprintf@c^(0+256),w
  9274  0CC9  1903               	btfsc	3,2
  9275  0CCA  2D34               	goto	l7546
  9276                           
  9277                           ;doprnt.c: 1200: {
  9278                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9279                           
  9280                           ;doprnt.c: 1195: }
  9281                           ;doprnt.c: 1196: while(c--) {
  9282  0CCB  0840               	movf	sprintf@c^(0+256),w
  9283  0CCC  00A0               	movwf	??_sprintf^(0+256)
  9284  0CCD  01A1               	clrf	(??_sprintf^(0+256)+1)
  9285  0CCE  35A0               	lslf	??_sprintf^(0+256),f
  9286  0CCF  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9287  0CD0  35A0               	lslf	??_sprintf^(0+256),f
  9288  0CD1  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9289  0CD2  309A               	movlw	low (_dpowers| (0+32768))
  9290  0CD3  0720               	addwf	??_sprintf^(0+256),w
  9291  0CD4  0084               	movwf	4
  9292  0CD5  30B0               	movlw	high (_dpowers| (0+32768))
  9293  0CD6  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9294  0CD7  0085               	movwf	5
  9295  0CD8  3F00               	moviw [0]fsr0
  9296  0CD9  00F2               	movwf	___lldiv@divisor
  9297  0CDA  3F01               	moviw [1]fsr0
  9298  0CDB  00F3               	movwf	___lldiv@divisor+1
  9299  0CDC  3F02               	moviw [2]fsr0
  9300  0CDD  00F4               	movwf	___lldiv@divisor+2
  9301  0CDE  3F03               	moviw [3]fsr0
  9302  0CDF  00F5               	movwf	___lldiv@divisor+3
  9303  0CE0  0832               	movf	(sprintf@val+3)^(0+256),w
  9304  0CE1  00F9               	movwf	___lldiv@dividend+3
  9305  0CE2  0831               	movf	(sprintf@val+2)^(0+256),w
  9306  0CE3  00F8               	movwf	___lldiv@dividend+2
  9307  0CE4  0830               	movf	(sprintf@val+1)^(0+256),w
  9308  0CE5  00F7               	movwf	___lldiv@dividend+1
  9309  0CE6  082F               	movf	sprintf@val^(0+256),w
  9310  0CE7  00F6               	movwf	___lldiv@dividend
  9311  0CE8  31AF  2759  3188   	fcall	___lldiv
  9312  0CEB  0875               	movf	?___lldiv+3,w
  9313  0CEC  0022               	movlb	2	; select bank2
  9314  0CED  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9315  0CEE  0874               	movf	?___lldiv+2,w
  9316  0CEF  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9317  0CF0  0873               	movf	?___lldiv+1,w
  9318  0CF1  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9319  0CF2  0872               	movf	?___lldiv,w
  9320  0CF3  00AB               	movwf	sprintf@tmpval^(0+256)
  9321                           
  9322                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9323  0CF4  3000               	movlw	0
  9324  0CF5  0020               	movlb	0	; select bank0
  9325  0CF6  00A9               	movwf	___llmod@divisor+3
  9326  0CF7  3000               	movlw	0
  9327  0CF8  00A8               	movwf	___llmod@divisor+2
  9328  0CF9  3000               	movlw	0
  9329  0CFA  00A7               	movwf	___llmod@divisor+1
  9330  0CFB  300A               	movlw	10
  9331  0CFC  00A6               	movwf	___llmod@divisor
  9332  0CFD  0022               	movlb	2	; select bank2
  9333  0CFE  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  9334  0CFF  0020               	movlb	0	; select bank0
  9335  0D00  00AD               	movwf	___llmod@dividend+3
  9336  0D01  0022               	movlb	2	; select bank2
  9337  0D02  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  9338  0D03  0020               	movlb	0	; select bank0
  9339  0D04  00AC               	movwf	___llmod@dividend+2
  9340  0D05  0022               	movlb	2	; select bank2
  9341  0D06  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  9342  0D07  0020               	movlb	0	; select bank0
  9343  0D08  00AB               	movwf	___llmod@dividend+1
  9344  0D09  0022               	movlb	2	; select bank2
  9345  0D0A  082B               	movf	sprintf@tmpval^(0+256),w
  9346  0D0B  0020               	movlb	0	; select bank0
  9347  0D0C  00AA               	movwf	___llmod@dividend
  9348  0D0D  31AD  25DE  3188   	fcall	___llmod
  9349  0D10  0020               	movlb	0	; select bank0
  9350  0D11  0829               	movf	?___llmod+3,w
  9351  0D12  0022               	movlb	2	; select bank2
  9352  0D13  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9353  0D14  0020               	movlb	0	; select bank0
  9354  0D15  0828               	movf	?___llmod+2,w
  9355  0D16  0022               	movlb	2	; select bank2
  9356  0D17  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9357  0D18  0020               	movlb	0	; select bank0
  9358  0D19  0827               	movf	?___llmod+1,w
  9359  0D1A  0022               	movlb	2	; select bank2
  9360  0D1B  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9361  0D1C  0020               	movlb	0	; select bank0
  9362  0D1D  0826               	movf	?___llmod,w
  9363  0D1E  0022               	movlb	2	; select bank2
  9364  0D1F  00AB               	movwf	sprintf@tmpval^(0+256)
  9365                           
  9366                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9367  0D20  082B               	movf	sprintf@tmpval^(0+256),w
  9368  0D21  3E30               	addlw	48
  9369  0D22  2CB8               	goto	L7
  9370  0D23                     l7540:	
  9371                           ;doprnt.c: 1204: }
  9372                           ;doprnt.c: 1206: }
  9373                           ;doprnt.c: 1207: while(exp > 0) {
  9374                           
  9375                           
  9376                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9377  0D23  3030               	movlw	48
  9378  0D24  0022               	movlb	2	; select bank2
  9379  0D25  00A0               	movwf	??_sprintf^(0+256)
  9380  0D26  083F               	movf	sprintf@sp^(0+256),w
  9381  0D27  0086               	movwf	6
  9382  0D28  3002               	movlw	2	; select bank4/5
  9383  0D29  0087               	movwf	7
  9384  0D2A  0820               	movf	??_sprintf^(0+256),w
  9385  0D2B  0081               	movwf	1
  9386  0D2C  3001               	movlw	1
  9387  0D2D  00A0               	movwf	??_sprintf^(0+256)
  9388  0D2E  0820               	movf	??_sprintf^(0+256),w
  9389  0D2F  07BF               	addwf	sprintf@sp^(0+256),f
  9390                           
  9391                           ;doprnt.c: 1209: exp--;
  9392  0D30  30FF               	movlw	255
  9393  0D31  07B3               	addwf	sprintf@exp^(0+256),f
  9394  0D32  30FF               	movlw	255
  9395  0D33  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  9396  0D34                     l7546:	
  9397  0D34  0834               	movf	(sprintf@exp+1)^(0+256),w
  9398  0D35  3A80               	xorlw	128
  9399  0D36  00A0               	movwf	??_sprintf^(0+256)
  9400  0D37  3080               	movlw	128
  9401  0D38  0220               	subwf	??_sprintf^(0+256),w
  9402  0D39  1D03               	skipz
  9403  0D3A  2D3D               	goto	u10445
  9404  0D3B  3001               	movlw	1
  9405  0D3C  0233               	subwf	sprintf@exp^(0+256),w
  9406  0D3D                     u10445:	
  9407  0D3D  1803               	skipnc
  9408  0D3E  2D23               	goto	l7540
  9409                           
  9410                           ;doprnt.c: 1210: }
  9411                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9412  0D3F  0022               	movlb	2	; select bank2
  9413  0D40  083E               	movf	(sprintf@prec+1)^(0+256),w
  9414  0D41  3A80               	xorlw	128
  9415  0D42  00A0               	movwf	??_sprintf^(0+256)
  9416  0D43  3080               	movlw	128
  9417  0D44  0220               	subwf	??_sprintf^(0+256),w
  9418  0D45  1D03               	skipz
  9419  0D46  2D49               	goto	u10455
  9420  0D47  3009               	movlw	9
  9421  0D48  023D               	subwf	sprintf@prec^(0+256),w
  9422  0D49                     u10455:	
  9423  0D49  1C03               	skipc
  9424  0D4A  2D4E               	goto	l7552
  9425                           
  9426                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9427  0D4B  3008               	movlw	8
  9428  0D4C  0022               	movlb	2	; select bank2
  9429  0D4D  2D50               	goto	L5
  9430  0D4E                     l7552:	
  9431                           
  9432                           ;doprnt.c: 1213: else
  9433                           ;doprnt.c: 1214: c = prec;
  9434  0D4E  0022               	movlb	2	; select bank2
  9435  0D4F  083D               	movf	sprintf@prec^(0+256),w
  9436  0D50                     L5:	
  9437  0D50  00A0               	movwf	??_sprintf^(0+256)
  9438  0D51  0820               	movf	??_sprintf^(0+256),w
  9439  0D52  00C0               	movwf	sprintf@c^(0+256)
  9440                           
  9441                           ;doprnt.c: 1215: prec -= c;
  9442  0D53  0840               	movf	sprintf@c^(0+256),w
  9443  0D54  00A0               	movwf	??_sprintf^(0+256)
  9444  0D55  01A1               	clrf	(??_sprintf^(0+256)+1)
  9445  0D56  1BA0               	btfsc	??_sprintf^(0+256),7
  9446  0D57  03A1               	decf	(??_sprintf^(0+256)+1),f
  9447  0D58  0820               	movf	??_sprintf^(0+256),w
  9448  0D59  02BD               	subwf	sprintf@prec^(0+256),f
  9449  0D5A  0821               	movf	(??_sprintf+1)^(0+256),w
  9450  0D5B  3BBE               	subwfb	(sprintf@prec+1)^(0+256),f
  9451                           
  9452                           ;doprnt.c: 1219: if(c)
  9453  0D5C  0840               	movf	sprintf@c^(0+256),w
  9454  0D5D  1903               	btfsc	3,2
  9455  0D5E  2D6B               	goto	l7560
  9456                           
  9457                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9458  0D5F  302E               	movlw	46
  9459  0D60  00A0               	movwf	??_sprintf^(0+256)
  9460  0D61  083F               	movf	sprintf@sp^(0+256),w
  9461  0D62  0086               	movwf	6
  9462  0D63  3002               	movlw	2	; select bank4/5
  9463  0D64  0087               	movwf	7
  9464  0D65  0820               	movf	??_sprintf^(0+256),w
  9465  0D66  0081               	movwf	1
  9466  0D67  3001               	movlw	1
  9467  0D68  00A0               	movwf	??_sprintf^(0+256)
  9468  0D69  0820               	movf	??_sprintf^(0+256),w
  9469  0D6A  07BF               	addwf	sprintf@sp^(0+256),f
  9470  0D6B                     l7560:	
  9471                           
  9472                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9473  0D6B  0840               	movf	sprintf@c^(0+256),w
  9474  0D6C  3180  20AB  3188   	fcall	_scale
  9475  0D6F  0020               	movlb	0	; select bank0
  9476  0D70  086F               	movf	?_scale+3,w
  9477  0D71  0022               	movlb	2	; select bank2
  9478  0D72  00A9               	movwf	(_sprintf$2151+3)^(0+256)
  9479  0D73  0020               	movlb	0	; select bank0
  9480  0D74  086E               	movf	?_scale+2,w
  9481  0D75  0022               	movlb	2	; select bank2
  9482  0D76  00A8               	movwf	(_sprintf$2151+2)^(0+256)
  9483  0D77  0020               	movlb	0	; select bank0
  9484  0D78  086D               	movf	?_scale+1,w
  9485  0D79  0022               	movlb	2	; select bank2
  9486  0D7A  00A7               	movwf	(_sprintf$2151+1)^(0+256)
  9487  0D7B  0020               	movlb	0	; select bank0
  9488  0D7C  086C               	movf	?_scale,w
  9489  0D7D  0022               	movlb	2	; select bank2
  9490  0D7E  00A6               	movwf	_sprintf$2151^(0+256)
  9491                           
  9492                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9493  0D7F  0829               	movf	(_sprintf$2151+3)^(0+256),w
  9494  0D80  0020               	movlb	0	; select bank0
  9495  0D81  00D9               	movwf	___flmul@a+3
  9496  0D82  0022               	movlb	2	; select bank2
  9497  0D83  0828               	movf	(_sprintf$2151+2)^(0+256),w
  9498  0D84  0020               	movlb	0	; select bank0
  9499  0D85  00D8               	movwf	___flmul@a+2
  9500  0D86  0022               	movlb	2	; select bank2
  9501  0D87  0827               	movf	(_sprintf$2151+1)^(0+256),w
  9502  0D88  0020               	movlb	0	; select bank0
  9503  0D89  00D7               	movwf	___flmul@a+1
  9504  0D8A  0022               	movlb	2	; select bank2
  9505  0D8B  0826               	movf	_sprintf$2151^(0+256),w
  9506  0D8C  0020               	movlb	0	; select bank0
  9507  0D8D  00D6               	movwf	___flmul@a
  9508  0D8E  0022               	movlb	2	; select bank2
  9509  0D8F  083C               	movf	(sprintf@fval+3)^(0+256),w
  9510  0D90  0020               	movlb	0	; select bank0
  9511  0D91  00D5               	movwf	___flmul@b+3
  9512  0D92  0022               	movlb	2	; select bank2
  9513  0D93  083B               	movf	(sprintf@fval+2)^(0+256),w
  9514  0D94  0020               	movlb	0	; select bank0
  9515  0D95  00D4               	movwf	___flmul@b+2
  9516  0D96  0022               	movlb	2	; select bank2
  9517  0D97  083A               	movf	(sprintf@fval+1)^(0+256),w
  9518  0D98  0020               	movlb	0	; select bank0
  9519  0D99  00D3               	movwf	___flmul@b+1
  9520  0D9A  0022               	movlb	2	; select bank2
  9521  0D9B  0839               	movf	sprintf@fval^(0+256),w
  9522  0D9C  0020               	movlb	0	; select bank0
  9523  0D9D  00D2               	movwf	___flmul@b
  9524  0D9E  3183  23D0  3188   	fcall	___flmul
  9525  0DA1  0020               	movlb	0	; select bank0
  9526  0DA2  0855               	movf	?___flmul+3,w
  9527  0DA3  0021               	movlb	1	; select bank1
  9528  0DA4  00B8               	movwf	(___fltol@f1+3)^(0+128)
  9529  0DA5  0020               	movlb	0	; select bank0
  9530  0DA6  0854               	movf	?___flmul+2,w
  9531  0DA7  0021               	movlb	1	; select bank1
  9532  0DA8  00B7               	movwf	(___fltol@f1+2)^(0+128)
  9533  0DA9  0020               	movlb	0	; select bank0
  9534  0DAA  0853               	movf	?___flmul+1,w
  9535  0DAB  0021               	movlb	1	; select bank1
  9536  0DAC  00B6               	movwf	(___fltol@f1+1)^(0+128)
  9537  0DAD  0020               	movlb	0	; select bank0
  9538  0DAE  0852               	movf	?___flmul,w
  9539  0DAF  0021               	movlb	1	; select bank1
  9540  0DB0  00B5               	movwf	___fltol@f1^(0+128)
  9541  0DB1  31A0  20C7  3188   	fcall	___fltol
  9542  0DB4  0021               	movlb	1	; select bank1
  9543  0DB5  0838               	movf	(?___fltol+3)^(0+128),w
  9544  0DB6  0022               	movlb	2	; select bank2
  9545  0DB7  00B2               	movwf	(sprintf@val+3)^(0+256)
  9546  0DB8  0021               	movlb	1	; select bank1
  9547  0DB9  0837               	movf	(?___fltol+2)^(0+128),w
  9548  0DBA  0022               	movlb	2	; select bank2
  9549  0DBB  00B1               	movwf	(sprintf@val+2)^(0+256)
  9550  0DBC  0021               	movlb	1	; select bank1
  9551  0DBD  0836               	movf	(?___fltol+1)^(0+128),w
  9552  0DBE  0022               	movlb	2	; select bank2
  9553  0DBF  00B0               	movwf	(sprintf@val+1)^(0+256)
  9554  0DC0  0021               	movlb	1	; select bank1
  9555  0DC1  0835               	movf	?___fltol^(0+128),w
  9556  0DC2                     L6:	
  9557  0DC2  0022               	movlb	2	; select bank2
  9558  0DC3  00AF               	movwf	sprintf@val^(0+256)
  9559  0DC4  30FF               	movlw	255
  9560  0DC5  00A0               	movwf	??_sprintf^(0+256)
  9561  0DC6  0820               	movf	??_sprintf^(0+256),w
  9562  0DC7  07C0               	addwf	sprintf@c^(0+256),f
  9563  0DC8  0A40               	incf	sprintf@c^(0+256),w
  9564  0DC9  1903               	btfsc	3,2
  9565  0DCA  2E75               	goto	l7582
  9566                           
  9567                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9568                           
  9569                           ;doprnt.c: 1228: while(c--) {
  9570  0DCB  0840               	movf	sprintf@c^(0+256),w
  9571  0DCC  00A0               	movwf	??_sprintf^(0+256)
  9572  0DCD  01A1               	clrf	(??_sprintf^(0+256)+1)
  9573  0DCE  35A0               	lslf	??_sprintf^(0+256),f
  9574  0DCF  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9575  0DD0  35A0               	lslf	??_sprintf^(0+256),f
  9576  0DD1  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9577  0DD2  309A               	movlw	low (_dpowers| (0+32768))
  9578  0DD3  0720               	addwf	??_sprintf^(0+256),w
  9579  0DD4  0084               	movwf	4
  9580  0DD5  30B0               	movlw	high (_dpowers| (0+32768))
  9581  0DD6  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9582  0DD7  0085               	movwf	5
  9583  0DD8  3F00               	moviw [0]fsr0
  9584  0DD9  00F2               	movwf	___lldiv@divisor
  9585  0DDA  3F01               	moviw [1]fsr0
  9586  0DDB  00F3               	movwf	___lldiv@divisor+1
  9587  0DDC  3F02               	moviw [2]fsr0
  9588  0DDD  00F4               	movwf	___lldiv@divisor+2
  9589  0DDE  3F03               	moviw [3]fsr0
  9590  0DDF  00F5               	movwf	___lldiv@divisor+3
  9591  0DE0  0832               	movf	(sprintf@val+3)^(0+256),w
  9592  0DE1  00F9               	movwf	___lldiv@dividend+3
  9593  0DE2  0831               	movf	(sprintf@val+2)^(0+256),w
  9594  0DE3  00F8               	movwf	___lldiv@dividend+2
  9595  0DE4  0830               	movf	(sprintf@val+1)^(0+256),w
  9596  0DE5  00F7               	movwf	___lldiv@dividend+1
  9597  0DE6  082F               	movf	sprintf@val^(0+256),w
  9598  0DE7  00F6               	movwf	___lldiv@dividend
  9599  0DE8  31AF  2759  3188   	fcall	___lldiv
  9600  0DEB  0875               	movf	?___lldiv+3,w
  9601  0DEC  0022               	movlb	2	; select bank2
  9602  0DED  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9603  0DEE  0874               	movf	?___lldiv+2,w
  9604  0DEF  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9605  0DF0  0873               	movf	?___lldiv+1,w
  9606  0DF1  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9607  0DF2  0872               	movf	?___lldiv,w
  9608  0DF3  00AB               	movwf	sprintf@tmpval^(0+256)
  9609                           
  9610                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9611  0DF4  3000               	movlw	0
  9612  0DF5  0020               	movlb	0	; select bank0
  9613  0DF6  00A9               	movwf	___llmod@divisor+3
  9614  0DF7  3000               	movlw	0
  9615  0DF8  00A8               	movwf	___llmod@divisor+2
  9616  0DF9  3000               	movlw	0
  9617  0DFA  00A7               	movwf	___llmod@divisor+1
  9618  0DFB  300A               	movlw	10
  9619  0DFC  00A6               	movwf	___llmod@divisor
  9620  0DFD  0022               	movlb	2	; select bank2
  9621  0DFE  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  9622  0DFF  0020               	movlb	0	; select bank0
  9623  0E00  00AD               	movwf	___llmod@dividend+3
  9624  0E01  0022               	movlb	2	; select bank2
  9625  0E02  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  9626  0E03  0020               	movlb	0	; select bank0
  9627  0E04  00AC               	movwf	___llmod@dividend+2
  9628  0E05  0022               	movlb	2	; select bank2
  9629  0E06  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  9630  0E07  0020               	movlb	0	; select bank0
  9631  0E08  00AB               	movwf	___llmod@dividend+1
  9632  0E09  0022               	movlb	2	; select bank2
  9633  0E0A  082B               	movf	sprintf@tmpval^(0+256),w
  9634  0E0B  0020               	movlb	0	; select bank0
  9635  0E0C  00AA               	movwf	___llmod@dividend
  9636  0E0D  31AD  25DE  3188   	fcall	___llmod
  9637  0E10  0020               	movlb	0	; select bank0
  9638  0E11  0829               	movf	?___llmod+3,w
  9639  0E12  0022               	movlb	2	; select bank2
  9640  0E13  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9641  0E14  0020               	movlb	0	; select bank0
  9642  0E15  0828               	movf	?___llmod+2,w
  9643  0E16  0022               	movlb	2	; select bank2
  9644  0E17  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9645  0E18  0020               	movlb	0	; select bank0
  9646  0E19  0827               	movf	?___llmod+1,w
  9647  0E1A  0022               	movlb	2	; select bank2
  9648  0E1B  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9649  0E1C  0020               	movlb	0	; select bank0
  9650  0E1D  0826               	movf	?___llmod,w
  9651  0E1E  0022               	movlb	2	; select bank2
  9652  0E1F  00AB               	movwf	sprintf@tmpval^(0+256)
  9653                           
  9654                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9655  0E20  082B               	movf	sprintf@tmpval^(0+256),w
  9656  0E21  3E30               	addlw	48
  9657  0E22  00A0               	movwf	??_sprintf^(0+256)
  9658  0E23  083F               	movf	sprintf@sp^(0+256),w
  9659  0E24  0086               	movwf	6
  9660  0E25  3002               	movlw	2	; select bank4/5
  9661  0E26  0087               	movwf	7
  9662  0E27  0820               	movf	??_sprintf^(0+256),w
  9663  0E28  0081               	movwf	1
  9664  0E29  3001               	movlw	1
  9665  0E2A  00A0               	movwf	??_sprintf^(0+256)
  9666  0E2B  0820               	movf	??_sprintf^(0+256),w
  9667  0E2C  07BF               	addwf	sprintf@sp^(0+256),f
  9668                           
  9669                           ;doprnt.c: 1232: val %= dpowers[c];
  9670  0E2D  0840               	movf	sprintf@c^(0+256),w
  9671  0E2E  00A0               	movwf	??_sprintf^(0+256)
  9672  0E2F  01A1               	clrf	(??_sprintf^(0+256)+1)
  9673  0E30  35A0               	lslf	??_sprintf^(0+256),f
  9674  0E31  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9675  0E32  35A0               	lslf	??_sprintf^(0+256),f
  9676  0E33  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9677  0E34  309A               	movlw	low (_dpowers| (0+32768))
  9678  0E35  0720               	addwf	??_sprintf^(0+256),w
  9679  0E36  0084               	movwf	4
  9680  0E37  30B0               	movlw	high (_dpowers| (0+32768))
  9681  0E38  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9682  0E39  0085               	movwf	5
  9683  0E3A  3F00               	moviw [0]fsr0
  9684  0E3B  0020               	movlb	0	; select bank0
  9685  0E3C  00A6               	movwf	___llmod@divisor
  9686  0E3D  3F01               	moviw [1]fsr0
  9687  0E3E  00A7               	movwf	___llmod@divisor+1
  9688  0E3F  3F02               	moviw [2]fsr0
  9689  0E40  00A8               	movwf	___llmod@divisor+2
  9690  0E41  3F03               	moviw [3]fsr0
  9691  0E42  00A9               	movwf	___llmod@divisor+3
  9692  0E43  0022               	movlb	2	; select bank2
  9693  0E44  0832               	movf	(sprintf@val+3)^(0+256),w
  9694  0E45  0020               	movlb	0	; select bank0
  9695  0E46  00AD               	movwf	___llmod@dividend+3
  9696  0E47  0022               	movlb	2	; select bank2
  9697  0E48  0831               	movf	(sprintf@val+2)^(0+256),w
  9698  0E49  0020               	movlb	0	; select bank0
  9699  0E4A  00AC               	movwf	___llmod@dividend+2
  9700  0E4B  0022               	movlb	2	; select bank2
  9701  0E4C  0830               	movf	(sprintf@val+1)^(0+256),w
  9702  0E4D  0020               	movlb	0	; select bank0
  9703  0E4E  00AB               	movwf	___llmod@dividend+1
  9704  0E4F  0022               	movlb	2	; select bank2
  9705  0E50  082F               	movf	sprintf@val^(0+256),w
  9706  0E51  0020               	movlb	0	; select bank0
  9707  0E52  00AA               	movwf	___llmod@dividend
  9708  0E53  31AD  25DE  3188   	fcall	___llmod
  9709  0E56  0020               	movlb	0	; select bank0
  9710  0E57  0829               	movf	?___llmod+3,w
  9711  0E58  0022               	movlb	2	; select bank2
  9712  0E59  00B2               	movwf	(sprintf@val+3)^(0+256)
  9713  0E5A  0020               	movlb	0	; select bank0
  9714  0E5B  0828               	movf	?___llmod+2,w
  9715  0E5C  0022               	movlb	2	; select bank2
  9716  0E5D  00B1               	movwf	(sprintf@val+2)^(0+256)
  9717  0E5E  0020               	movlb	0	; select bank0
  9718  0E5F  0827               	movf	?___llmod+1,w
  9719  0E60  0022               	movlb	2	; select bank2
  9720  0E61  00B0               	movwf	(sprintf@val+1)^(0+256)
  9721  0E62  0020               	movlb	0	; select bank0
  9722  0E63  0826               	movf	?___llmod,w
  9723  0E64  2DC2               	goto	L6
  9724  0E65                     l7576:	
  9725                           ;doprnt.c: 1233: }
  9726                           ;doprnt.c: 1235: while(prec) {
  9727                           
  9728                           
  9729                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9730  0E65  3030               	movlw	48
  9731  0E66  00A0               	movwf	??_sprintf^(0+256)
  9732  0E67  083F               	movf	sprintf@sp^(0+256),w
  9733  0E68  0086               	movwf	6
  9734  0E69  3002               	movlw	2	; select bank4/5
  9735  0E6A  0087               	movwf	7
  9736  0E6B  0820               	movf	??_sprintf^(0+256),w
  9737  0E6C  0081               	movwf	1
  9738  0E6D  3001               	movlw	1
  9739  0E6E  00A0               	movwf	??_sprintf^(0+256)
  9740  0E6F  0820               	movf	??_sprintf^(0+256),w
  9741  0E70  07BF               	addwf	sprintf@sp^(0+256),f
  9742                           
  9743                           ;doprnt.c: 1237: prec--;
  9744  0E71  30FF               	movlw	255
  9745  0E72  07BD               	addwf	sprintf@prec^(0+256),f
  9746  0E73  30FF               	movlw	255
  9747  0E74  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
  9748  0E75                     l7582:	
  9749  0E75  083D               	movf	sprintf@prec^(0+256),w
  9750  0E76  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9751  0E77  1903               	btfsc	3,2
  9752  0E78  28A5               	goto	l7676
  9753  0E79  2E65               	goto	l7576
  9754  0E7A                     l7584:	
  9755                           ;doprnt.c: 1238: }
  9756                           ;doprnt.c: 1245: continue;
  9757                           
  9758                           
  9759                           ;doprnt.c: 1246: }
  9760                           ;doprnt.c: 1253: {
  9761                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9762  0E7A  082A               	movf	sprintf@ap^(0+256),w
  9763  0E7B  0086               	movwf	6
  9764  0E7C  0187               	clrf	7
  9765  0E7D  3F40               	moviw [0]fsr1
  9766  0E7E  00A0               	movwf	??_sprintf^(0+256)
  9767  0E7F  3F41               	moviw [1]fsr1
  9768  0E80  00A1               	movwf	(??_sprintf^(0+256)+1)
  9769  0E81  0820               	movf	??_sprintf^(0+256),w
  9770  0E82  00AF               	movwf	sprintf@val^(0+256)
  9771  0E83  0821               	movf	(??_sprintf+1)^(0+256),w
  9772  0E84  00B0               	movwf	(sprintf@val+1)^(0+256)
  9773  0E85  0D89               	rlf	9,f
  9774  0E86  3B89               	subwfb	9,f
  9775  0E87  0989               	comf	9,f
  9776  0E88  00B1               	movwf	(sprintf@val+2)^(0+256)
  9777  0E89  00B2               	movwf	(sprintf@val+3)^(0+256)
  9778  0E8A  3002               	movlw	2
  9779  0E8B  00A0               	movwf	??_sprintf^(0+256)
  9780  0E8C  0820               	movf	??_sprintf^(0+256),w
  9781  0E8D  07AA               	addwf	sprintf@ap^(0+256),f
  9782                           
  9783                           ;doprnt.c: 1261: if((long)val < 0) {
  9784  0E8E  1FB2               	btfss	(sprintf@val+3)^(0+256),7
  9785  0E8F  2E9F               	goto	l7594
  9786                           
  9787                           ;doprnt.c: 1262: flag |= 0x03;
  9788  0E90  3003               	movlw	3
  9789  0E91  04B5               	iorwf	sprintf@flag^(0+256),f
  9790  0E92  3000               	movlw	0
  9791  0E93  04B6               	iorwf	(sprintf@flag+1)^(0+256),f
  9792                           
  9793                           ;doprnt.c: 1263: val = -val;
  9794  0E94  09AF               	comf	sprintf@val^(0+256),f
  9795  0E95  09B0               	comf	(sprintf@val+1)^(0+256),f
  9796  0E96  09B1               	comf	(sprintf@val+2)^(0+256),f
  9797  0E97  09B2               	comf	(sprintf@val+3)^(0+256),f
  9798  0E98  0AAF               	incf	sprintf@val^(0+256),f
  9799  0E99  1903               	skipnz
  9800  0E9A  0AB0               	incf	(sprintf@val+1)^(0+256),f
  9801  0E9B  1903               	skipnz
  9802  0E9C  0AB1               	incf	(sprintf@val+2)^(0+256),f
  9803  0E9D  1903               	skipnz
  9804  0E9E  0AB2               	incf	(sprintf@val+3)^(0+256),f
  9805  0E9F                     l7594:	
  9806                           
  9807                           ;doprnt.c: 1264: }
  9808                           ;doprnt.c: 1266: }
  9809                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9810  0E9F  083D               	movf	sprintf@prec^(0+256),w
  9811  0EA0  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9812  0EA1  1D03               	btfss	3,2
  9813  0EA2  2EAD               	goto	l7600
  9814  0EA3  0832               	movf	(sprintf@val+3)^(0+256),w
  9815  0EA4  0431               	iorwf	(sprintf@val+2)^(0+256),w
  9816  0EA5  0430               	iorwf	(sprintf@val+1)^(0+256),w
  9817  0EA6  042F               	iorwf	sprintf@val^(0+256),w
  9818  0EA7  1D03               	skipz
  9819  0EA8  2EAD               	goto	l7600
  9820                           
  9821                           ;doprnt.c: 1291: prec++;
  9822  0EA9  3001               	movlw	1
  9823  0EAA  07BD               	addwf	sprintf@prec^(0+256),f
  9824  0EAB  3000               	movlw	0
  9825  0EAC  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
  9826  0EAD                     l7600:	
  9827                           
  9828                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9829  0EAD  01C0               	clrf	sprintf@c^(0+256)
  9830  0EAE  0AC0               	incf	sprintf@c^(0+256),f
  9831  0EAF  300A               	movlw	10
  9832  0EB0  0640               	xorwf	sprintf@c^(0+256),w
  9833  0EB1  1903               	btfsc	3,2
  9834  0EB2  2EE0               	goto	l7612
  9835  0EB3                     l7606:	
  9836                           
  9837                           ;doprnt.c: 1306: if(val < dpowers[c])
  9838  0EB3  0840               	movf	sprintf@c^(0+256),w
  9839  0EB4  00A0               	movwf	??_sprintf^(0+256)
  9840  0EB5  01A1               	clrf	(??_sprintf^(0+256)+1)
  9841  0EB6  35A0               	lslf	??_sprintf^(0+256),f
  9842  0EB7  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9843  0EB8  35A0               	lslf	??_sprintf^(0+256),f
  9844  0EB9  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9845  0EBA  309A               	movlw	low (_dpowers| (0+32768))
  9846  0EBB  0720               	addwf	??_sprintf^(0+256),w
  9847  0EBC  0084               	movwf	4
  9848  0EBD  30B0               	movlw	high (_dpowers| (0+32768))
  9849  0EBE  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9850  0EBF  0085               	movwf	5
  9851  0EC0  3F00               	moviw [0]fsr0
  9852  0EC1  00A2               	movwf	(??_sprintf+2)^(0+256)
  9853  0EC2  3F01               	moviw [1]fsr0
  9854  0EC3  00A3               	movwf	((??_sprintf+2)^(0+256)+1)
  9855  0EC4  3F02               	moviw [2]fsr0
  9856  0EC5  00A4               	movwf	((??_sprintf+2)^(0+256)+2)
  9857  0EC6  3F03               	moviw [3]fsr0
  9858  0EC7  00A5               	movwf	((??_sprintf+2)^(0+256)+3)
  9859  0EC8  0825               	movf	(??_sprintf+5)^(0+256),w
  9860  0EC9  0232               	subwf	(sprintf@val+3)^(0+256),w
  9861  0ECA  1D03               	skipz
  9862  0ECB  2ED6               	goto	u10535
  9863  0ECC  0824               	movf	(??_sprintf+4)^(0+256),w
  9864  0ECD  0231               	subwf	(sprintf@val+2)^(0+256),w
  9865  0ECE  1D03               	skipz
  9866  0ECF  2ED6               	goto	u10535
  9867  0ED0  0823               	movf	(??_sprintf+3)^(0+256),w
  9868  0ED1  0230               	subwf	(sprintf@val+1)^(0+256),w
  9869  0ED2  1D03               	skipz
  9870  0ED3  2ED6               	goto	u10535
  9871  0ED4  0822               	movf	(??_sprintf+2)^(0+256),w
  9872  0ED5  022F               	subwf	sprintf@val^(0+256),w
  9873  0ED6                     u10535:	
  9874  0ED6  1C03               	btfss	3,0
  9875  0ED7  2EE0               	goto	l7612
  9876                           
  9877                           ;doprnt.c: 1307: break;
  9878  0ED8  3001               	movlw	1
  9879  0ED9  00A0               	movwf	??_sprintf^(0+256)
  9880  0EDA  0820               	movf	??_sprintf^(0+256),w
  9881  0EDB  07C0               	addwf	sprintf@c^(0+256),f
  9882  0EDC  300A               	movlw	10
  9883  0EDD  0640               	xorwf	sprintf@c^(0+256),w
  9884  0EDE  1D03               	btfss	3,2
  9885  0EDF  2EB3               	goto	l7606
  9886  0EE0                     l7612:	
  9887                           
  9888                           ;doprnt.c: 1339: if(c < prec)
  9889  0EE0  0840               	movf	sprintf@c^(0+256),w
  9890  0EE1  00A0               	movwf	??_sprintf^(0+256)
  9891  0EE2  01A1               	clrf	(??_sprintf^(0+256)+1)
  9892  0EE3  1BA0               	btfsc	??_sprintf^(0+256),7
  9893  0EE4  03A1               	decf	(??_sprintf^(0+256)+1),f
  9894  0EE5  0821               	movf	(??_sprintf+1)^(0+256),w
  9895  0EE6  3A80               	xorlw	128
  9896  0EE7  00A2               	movwf	(??_sprintf+2)^(0+256)
  9897  0EE8  083E               	movf	(sprintf@prec+1)^(0+256),w
  9898  0EE9  3A80               	xorlw	128
  9899  0EEA  0222               	subwf	(??_sprintf+2)^(0+256),w
  9900  0EEB  1D03               	skipz
  9901  0EEC  2EEF               	goto	u10555
  9902  0EED  083D               	movf	sprintf@prec^(0+256),w
  9903  0EEE  0220               	subwf	??_sprintf^(0+256),w
  9904  0EEF                     u10555:	
  9905  0EEF  1803               	skipnc
  9906  0EF0  2EF7               	goto	l7616
  9907                           
  9908                           ;doprnt.c: 1340: c = prec;
  9909  0EF1  0022               	movlb	2	; select bank2
  9910  0EF2  083D               	movf	sprintf@prec^(0+256),w
  9911  0EF3  00A0               	movwf	??_sprintf^(0+256)
  9912  0EF4  0820               	movf	??_sprintf^(0+256),w
  9913  0EF5  00C0               	movwf	sprintf@c^(0+256)
  9914  0EF6  2F0F               	goto	l917
  9915  0EF7                     l7616:	
  9916                           
  9917                           ;doprnt.c: 1341: else if(prec < c)
  9918  0EF7  0022               	movlb	2	; select bank2
  9919  0EF8  0840               	movf	sprintf@c^(0+256),w
  9920  0EF9  00A0               	movwf	??_sprintf^(0+256)
  9921  0EFA  01A1               	clrf	(??_sprintf^(0+256)+1)
  9922  0EFB  1BA0               	btfsc	??_sprintf^(0+256),7
  9923  0EFC  03A1               	decf	(??_sprintf^(0+256)+1),f
  9924  0EFD  083E               	movf	(sprintf@prec+1)^(0+256),w
  9925  0EFE  3A80               	xorlw	128
  9926  0EFF  00A2               	movwf	(??_sprintf+2)^(0+256)
  9927  0F00  0821               	movf	(??_sprintf+1)^(0+256),w
  9928  0F01  3A80               	xorlw	128
  9929  0F02  0222               	subwf	(??_sprintf+2)^(0+256),w
  9930  0F03  1D03               	skipz
  9931  0F04  2F07               	goto	u10565
  9932  0F05  0820               	movf	??_sprintf^(0+256),w
  9933  0F06  023D               	subwf	sprintf@prec^(0+256),w
  9934  0F07                     u10565:	
  9935  0F07  1803               	skipnc
  9936  0F08  2F0F               	goto	l917
  9937                           
  9938                           ;doprnt.c: 1342: prec = c;
  9939  0F09  0022               	movlb	2	; select bank2
  9940  0F0A  0840               	movf	sprintf@c^(0+256),w
  9941  0F0B  00BD               	movwf	sprintf@prec^(0+256)
  9942  0F0C  01BE               	clrf	(sprintf@prec+1)^(0+256)
  9943  0F0D  1BBD               	btfsc	sprintf@prec^(0+256),7
  9944  0F0E  03BE               	decf	(sprintf@prec+1)^(0+256),f
  9945  0F0F                     l917:	
  9946                           
  9947                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9948  0F0F  0022               	movlb	2	; select bank2
  9949  0F10  0837               	movf	sprintf@width^(0+256),w
  9950  0F11  0438               	iorwf	(sprintf@width+1)^(0+256),w
  9951  0F12  1903               	btfsc	3,2
  9952  0F13  2F22               	goto	l7624
  9953  0F14  3003               	movlw	3
  9954  0F15  0535               	andwf	sprintf@flag^(0+256),w
  9955  0F16  00A0               	movwf	??_sprintf^(0+256)
  9956  0F17  3000               	movlw	0
  9957  0F18  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9958  0F19  00A1               	movwf	(??_sprintf+1)^(0+256)
  9959  0F1A  0820               	movf	??_sprintf^(0+256),w
  9960  0F1B  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9961  0F1C  1903               	btfsc	3,2
  9962  0F1D  2F22               	goto	l7624
  9963                           
  9964                           ;doprnt.c: 1346: width--;
  9965  0F1E  30FF               	movlw	255
  9966  0F1F  07B7               	addwf	sprintf@width^(0+256),f
  9967  0F20  30FF               	movlw	255
  9968  0F21  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9969  0F22                     l7624:	
  9970                           
  9971                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9972  0F22  1F36               	btfss	(sprintf@flag+1)^(0+256),6
  9973  0F23  2F39               	goto	l7632
  9974                           
  9975                           ;doprnt.c: 1349: if(width > prec)
  9976  0F24  083E               	movf	(sprintf@prec+1)^(0+256),w
  9977  0F25  3A80               	xorlw	128
  9978  0F26  00A0               	movwf	??_sprintf^(0+256)
  9979  0F27  0838               	movf	(sprintf@width+1)^(0+256),w
  9980  0F28  3A80               	xorlw	128
  9981  0F29  0220               	subwf	??_sprintf^(0+256),w
  9982  0F2A  1D03               	skipz
  9983  0F2B  2F2E               	goto	u10605
  9984  0F2C  0837               	movf	sprintf@width^(0+256),w
  9985  0F2D  023D               	subwf	sprintf@prec^(0+256),w
  9986  0F2E                     u10605:	
  9987  0F2E  1803               	skipnc
  9988  0F2F  2F36               	goto	l7630
  9989                           
  9990                           ;doprnt.c: 1350: width -= prec;
  9991  0F30  0022               	movlb	2	; select bank2
  9992  0F31  083D               	movf	sprintf@prec^(0+256),w
  9993  0F32  02B7               	subwf	sprintf@width^(0+256),f
  9994  0F33  083E               	movf	(sprintf@prec+1)^(0+256),w
  9995  0F34  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
  9996  0F35  2F39               	goto	l7632
  9997  0F36                     l7630:	
  9998                           
  9999                           ;doprnt.c: 1351: else
 10000                           ;doprnt.c: 1352: width = 0;
 10001  0F36  0022               	movlb	2	; select bank2
 10002  0F37  01B7               	clrf	sprintf@width^(0+256)
 10003  0F38  01B8               	clrf	(sprintf@width+1)^(0+256)
 10004  0F39                     l7632:	
 10005                           
 10006                           ;doprnt.c: 1353: }
 10007                           ;doprnt.c: 1381: if(width > c)
 10008  0F39  0840               	movf	sprintf@c^(0+256),w
 10009  0F3A  00A0               	movwf	??_sprintf^(0+256)
 10010  0F3B  01A1               	clrf	(??_sprintf^(0+256)+1)
 10011  0F3C  1BA0               	btfsc	??_sprintf^(0+256),7
 10012  0F3D  03A1               	decf	(??_sprintf^(0+256)+1),f
 10013  0F3E  0821               	movf	(??_sprintf+1)^(0+256),w
 10014  0F3F  3A80               	xorlw	128
 10015  0F40  00A2               	movwf	(??_sprintf+2)^(0+256)
 10016  0F41  0838               	movf	(sprintf@width+1)^(0+256),w
 10017  0F42  3A80               	xorlw	128
 10018  0F43  0222               	subwf	(??_sprintf+2)^(0+256),w
 10019  0F44  1D03               	skipz
 10020  0F45  2F48               	goto	u10615
 10021  0F46  0837               	movf	sprintf@width^(0+256),w
 10022  0F47  0220               	subwf	??_sprintf^(0+256),w
 10023  0F48                     u10615:	
 10024  0F48  1803               	skipnc
 10025  0F49  2F55               	goto	l7636
 10026                           
 10027                           ;doprnt.c: 1382: width -= c;
 10028  0F4A  0022               	movlb	2	; select bank2
 10029  0F4B  0840               	movf	sprintf@c^(0+256),w
 10030  0F4C  00A0               	movwf	??_sprintf^(0+256)
 10031  0F4D  01A1               	clrf	(??_sprintf^(0+256)+1)
 10032  0F4E  1BA0               	btfsc	??_sprintf^(0+256),7
 10033  0F4F  03A1               	decf	(??_sprintf^(0+256)+1),f
 10034  0F50  0820               	movf	??_sprintf^(0+256),w
 10035  0F51  02B7               	subwf	sprintf@width^(0+256),f
 10036  0F52  0821               	movf	(??_sprintf+1)^(0+256),w
 10037  0F53  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
 10038  0F54  2F58               	goto	l7638
 10039  0F55                     l7636:	
 10040                           
 10041                           ;doprnt.c: 1383: else
 10042                           ;doprnt.c: 1384: width = 0;
 10043  0F55  0022               	movlb	2	; select bank2
 10044  0F56  01B7               	clrf	sprintf@width^(0+256)
 10045  0F57  01B8               	clrf	(sprintf@width+1)^(0+256)
 10046  0F58                     l7638:	
 10047                           
 10048                           ;doprnt.c: 1387: if(flag & 0x04) {
 10049  0F58  1D35               	btfss	sprintf@flag^(0+256),2
 10050  0F59  2F85               	goto	l7654
 10051                           
 10052                           ;doprnt.c: 1392: if(flag & 0x03)
 10053  0F5A  3003               	movlw	3
 10054  0F5B  0535               	andwf	sprintf@flag^(0+256),w
 10055  0F5C  00A0               	movwf	??_sprintf^(0+256)
 10056  0F5D  3000               	movlw	0
 10057  0F5E  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10058  0F5F  00A1               	movwf	(??_sprintf+1)^(0+256)
 10059  0F60  0820               	movf	??_sprintf^(0+256),w
 10060  0F61  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10061  0F62  1903               	btfsc	3,2
 10062  0F63  2F70               	goto	l7646
 10063                           
 10064                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 10065  0F64  302D               	movlw	45
 10066  0F65  00A0               	movwf	??_sprintf^(0+256)
 10067  0F66  083F               	movf	sprintf@sp^(0+256),w
 10068  0F67  0086               	movwf	6
 10069  0F68  3002               	movlw	2	; select bank4/5
 10070  0F69  0087               	movwf	7
 10071  0F6A  0820               	movf	??_sprintf^(0+256),w
 10072  0F6B  0081               	movwf	1
 10073  0F6C  3001               	movlw	1
 10074  0F6D  00A0               	movwf	??_sprintf^(0+256)
 10075  0F6E  0820               	movf	??_sprintf^(0+256),w
 10076  0F6F  07BF               	addwf	sprintf@sp^(0+256),f
 10077  0F70                     l7646:	
 10078                           
 10079                           ;doprnt.c: 1415: if(width)
 10080  0F70  0837               	movf	sprintf@width^(0+256),w
 10081  0F71  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10082  0F72  1903               	btfsc	3,2
 10083  0F73  2FB3               	goto	l7674
 10084                           
 10085                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10086                           
 10087                           ;doprnt.c: 1416: do
 10088  0F74  3030               	movlw	48
 10089  0F75  00A0               	movwf	??_sprintf^(0+256)
 10090  0F76  083F               	movf	sprintf@sp^(0+256),w
 10091  0F77  0086               	movwf	6
 10092  0F78  3002               	movlw	2	; select bank4/5
 10093  0F79  0087               	movwf	7
 10094  0F7A  0820               	movf	??_sprintf^(0+256),w
 10095  0F7B  0081               	movwf	1
 10096  0F7C  3001               	movlw	1
 10097  0F7D  00A0               	movwf	??_sprintf^(0+256)
 10098  0F7E  0820               	movf	??_sprintf^(0+256),w
 10099  0F7F  07BF               	addwf	sprintf@sp^(0+256),f
 10100                           
 10101                           ;doprnt.c: 1418: while(--width);
 10102  0F80  30FF               	movlw	255
 10103  0F81  07B7               	addwf	sprintf@width^(0+256),f
 10104  0F82  30FF               	movlw	255
 10105  0F83  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10106  0F84  2F70               	goto	l7646
 10107  0F85                     l7654:	
 10108                           ;doprnt.c: 1420: } else
 10109                           
 10110                           
 10111                           ;doprnt.c: 1422: {
 10112                           ;doprnt.c: 1424: if(width
 10113                           ;doprnt.c: 1428: )
 10114  0F85  0837               	movf	sprintf@width^(0+256),w
 10115  0F86  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10116  0F87  1903               	btfsc	3,2
 10117  0F88  2F9D               	goto	l7662
 10118  0F89                     l7656:	
 10119                           ;doprnt.c: 1429: do
 10120                           
 10121                           
 10122                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10123  0F89  3020               	movlw	32
 10124  0F8A  00A0               	movwf	??_sprintf^(0+256)
 10125  0F8B  083F               	movf	sprintf@sp^(0+256),w
 10126  0F8C  0086               	movwf	6
 10127  0F8D  3002               	movlw	2	; select bank4/5
 10128  0F8E  0087               	movwf	7
 10129  0F8F  0820               	movf	??_sprintf^(0+256),w
 10130  0F90  0081               	movwf	1
 10131  0F91  3001               	movlw	1
 10132  0F92  00A0               	movwf	??_sprintf^(0+256)
 10133  0F93  0820               	movf	??_sprintf^(0+256),w
 10134  0F94  07BF               	addwf	sprintf@sp^(0+256),f
 10135                           
 10136                           ;doprnt.c: 1431: while(--width);
 10137  0F95  30FF               	movlw	255
 10138  0F96  07B7               	addwf	sprintf@width^(0+256),f
 10139  0F97  30FF               	movlw	255
 10140  0F98  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10141  0F99  0837               	movf	sprintf@width^(0+256),w
 10142  0F9A  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10143  0F9B  1D03               	btfss	3,2
 10144  0F9C  2F89               	goto	l7656
 10145  0F9D                     l7662:	
 10146                           
 10147                           ;doprnt.c: 1438: if(flag & 0x03)
 10148  0F9D  3003               	movlw	3
 10149  0F9E  0535               	andwf	sprintf@flag^(0+256),w
 10150  0F9F  00A0               	movwf	??_sprintf^(0+256)
 10151  0FA0  3000               	movlw	0
 10152  0FA1  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10153  0FA2  00A1               	movwf	(??_sprintf+1)^(0+256)
 10154  0FA3  0820               	movf	??_sprintf^(0+256),w
 10155  0FA4  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10156  0FA5  1903               	btfsc	3,2
 10157  0FA6  2FB3               	goto	l7674
 10158                           
 10159                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10160  0FA7  302D               	movlw	45
 10161  0FA8                     L8:	
 10162  0FA8  00A0               	movwf	??_sprintf^(0+256)
 10163  0FA9  083F               	movf	sprintf@sp^(0+256),w
 10164  0FAA  0086               	movwf	6
 10165  0FAB  3002               	movlw	2	; select bank4/5
 10166  0FAC  0087               	movwf	7
 10167  0FAD  0820               	movf	??_sprintf^(0+256),w
 10168  0FAE  0081               	movwf	1
 10169  0FAF  3001               	movlw	1
 10170  0FB0  00A0               	movwf	??_sprintf^(0+256)
 10171  0FB1  0820               	movf	??_sprintf^(0+256),w
 10172  0FB2  07BF               	addwf	sprintf@sp^(0+256),f
 10173  0FB3                     l7674:	
 10174  0FB3  30FF               	movlw	255
 10175  0FB4  07BD               	addwf	sprintf@prec^(0+256),f
 10176  0FB5  30FF               	movlw	255
 10177  0FB6  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
 10178  0FB7  0A3D               	incf	sprintf@prec^(0+256),w
 10179  0FB8  1903               	btfsc	3,2
 10180  0FB9  0A3E               	incf	(sprintf@prec+1)^(0+256),w
 10181  0FBA  1903               	btfsc	3,2
 10182  0FBB  28A5               	goto	l7676
 10183                           
 10184                           ;doprnt.c: 1478: {
 10185                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10186                           
 10187                           ;doprnt.c: 1469: }
 10188                           ;doprnt.c: 1474: while(prec--) {
 10189  0FBC  3000               	movlw	0
 10190  0FBD  0020               	movlb	0	; select bank0
 10191  0FBE  00A9               	movwf	___llmod@divisor+3
 10192  0FBF  3000               	movlw	0
 10193  0FC0  00A8               	movwf	___llmod@divisor+2
 10194  0FC1  3000               	movlw	0
 10195  0FC2  00A7               	movwf	___llmod@divisor+1
 10196  0FC3  300A               	movlw	10
 10197  0FC4  00A6               	movwf	___llmod@divisor
 10198  0FC5  0022               	movlb	2	; select bank2
 10199  0FC6  083E               	movf	(sprintf@prec+1)^(0+256),w
 10200  0FC7  0085               	movwf	5
 10201  0FC8  083D               	movf	sprintf@prec^(0+256),w
 10202  0FC9  0084               	movwf	4
 10203  0FCA  3584               	lslf	4,f
 10204  0FCB  0D85               	rlf	5,f
 10205  0FCC  3584               	lslf	4,f
 10206  0FCD  0D85               	rlf	5,f
 10207  0FCE  309A               	movlw	low (_dpowers| (0+32768))
 10208  0FCF  0784               	addwf	4,f
 10209  0FD0  30B0               	movlw	high (_dpowers| (0+32768))
 10210  0FD1  3D85               	addwfc	5,f
 10211  0FD2  3F00               	moviw [0]fsr0
 10212  0FD3  00F2               	movwf	___lldiv@divisor
 10213  0FD4  3F01               	moviw [1]fsr0
 10214  0FD5  00F3               	movwf	___lldiv@divisor+1
 10215  0FD6  3F02               	moviw [2]fsr0
 10216  0FD7  00F4               	movwf	___lldiv@divisor+2
 10217  0FD8  3F03               	moviw [3]fsr0
 10218  0FD9  00F5               	movwf	___lldiv@divisor+3
 10219  0FDA  0832               	movf	(sprintf@val+3)^(0+256),w
 10220  0FDB  00F9               	movwf	___lldiv@dividend+3
 10221  0FDC  0831               	movf	(sprintf@val+2)^(0+256),w
 10222  0FDD  00F8               	movwf	___lldiv@dividend+2
 10223  0FDE  0830               	movf	(sprintf@val+1)^(0+256),w
 10224  0FDF  00F7               	movwf	___lldiv@dividend+1
 10225  0FE0  082F               	movf	sprintf@val^(0+256),w
 10226  0FE1  00F6               	movwf	___lldiv@dividend
 10227  0FE2  31AF  2759  3188   	fcall	___lldiv
 10228  0FE5  0875               	movf	?___lldiv+3,w
 10229  0FE6  0020               	movlb	0	; select bank0
 10230  0FE7  00AD               	movwf	___llmod@dividend+3
 10231  0FE8  0874               	movf	?___lldiv+2,w
 10232  0FE9  00AC               	movwf	___llmod@dividend+2
 10233  0FEA  0873               	movf	?___lldiv+1,w
 10234  0FEB  00AB               	movwf	___llmod@dividend+1
 10235  0FEC  0872               	movf	?___lldiv,w
 10236  0FED  00AA               	movwf	___llmod@dividend
 10237  0FEE  31AD  25DE  3188   	fcall	___llmod
 10238  0FF1  0020               	movlb	0	; select bank0
 10239  0FF2  0826               	movf	?___llmod,w
 10240  0FF3  3E30               	addlw	48
 10241  0FF4  0022               	movlb	2	; select bank2
 10242  0FF5  00A0               	movwf	??_sprintf^(0+256)
 10243  0FF6  0820               	movf	??_sprintf^(0+256),w
 10244  0FF7  00C0               	movwf	sprintf@c^(0+256)
 10245                           
 10246                           ;doprnt.c: 1523: }
 10247                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10248  0FF8  0840               	movf	sprintf@c^(0+256),w
 10249  0FF9  2FA8               	goto	L8
 10250  0FFA                     l7678:	
 10251                           ;doprnt.c: 1525: }
 10252                           ;doprnt.c: 1533: }
 10253                           ;doprnt.c: 1535: alldone:
 10254                           
 10255                           
 10256                           ;doprnt.c: 1538: *sp = 0;
 10257  0FFA  083F               	movf	sprintf@sp^(0+256),w
 10258  0FFB  0086               	movwf	6
 10259  0FFC  3002               	movlw	2	; select bank4/5
 10260  0FFD  0087               	movwf	7
 10261  0FFE  0181               	clrf	1
 10262  0FFF  0008               	return
 10263  1000                     __end_of_sprintf:	
 10264                           ;doprnt.c: 1540: return 0;
 10265                           ;	Return value of _sprintf is never used
 10266                           
 10267                           
 10268                           	psect	text8
 10269  00AB                     __ptext8:	
 10270 ;; *************** function _scale *****************
 10271 ;; Defined at:
 10272 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  scl             1    wreg     char 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  scl             1   20[BANK1 ] char 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  4   76[BANK0 ] char 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10286 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10287 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10289 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10290 ;;Total ram usage:       25 bytes
 10291 ;; Hardware stack levels used:    1
 10292 ;; Hardware stack levels required when called:    4
 10293 ;; This function calls:
 10294 ;;		___awdiv
 10295 ;;		___awmod
 10296 ;;		___flmul
 10297 ;; This function is called by:
 10298 ;;		_sprintf
 10299 ;; This function uses a non-reentrant model
 10300 ;;
 10301                           
 10302                           
 10303                           ;psect for function _scale
 10304  00AB                     _scale:	
 10305                           
 10306                           ;incstack = 0
 10307                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10308                           ;scale@scl stored from wreg
 10309  00AB  0021               	movlb	1	; select bank1
 10310  00AC  00B4               	movwf	scale@scl^(0+128)
 10311                           
 10312                           ;doprnt.c: 428: if(scl < 0) {
 10313  00AD  1FB4               	btfss	scale@scl^(0+128),7
 10314  00AE  2A40               	goto	l7032
 10315                           
 10316                           ;doprnt.c: 429: scl = -scl;
 10317  00AF  09B4               	comf	scale@scl^(0+128),f
 10318  00B0  0AB4               	incf	scale@scl^(0+128),f
 10319                           
 10320                           ;doprnt.c: 430: if(scl>=110)
 10321  00B1  0834               	movf	scale@scl^(0+128),w
 10322  00B2  3A80               	xorlw	128
 10323  00B3  3E12               	addlw	-238
 10324  00B4  1C03               	skipc
 10325  00B5  299B               	goto	l7022
 10326                           
 10327                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10328  00B6  300A               	movlw	10
 10329  00B7  0020               	movlb	0	; select bank0
 10330  00B8  00A0               	movwf	___awdiv@divisor
 10331  00B9  3000               	movlw	0
 10332  00BA  00A1               	movwf	___awdiv@divisor+1
 10333  00BB  0021               	movlb	1	; select bank1
 10334  00BC  0834               	movf	scale@scl^(0+128),w
 10335  00BD  00F4               	movwf	___awmod@dividend
 10336  00BE  01F5               	clrf	___awmod@dividend+1
 10337  00BF  1BF4               	btfsc	___awmod@dividend,7
 10338  00C0  03F5               	decf	___awmod@dividend+1,f
 10339  00C1  3064               	movlw	100
 10340  00C2  00F2               	movwf	___awmod@divisor
 10341  00C3  3000               	movlw	0
 10342  00C4  00F3               	movwf	___awmod@divisor+1
 10343  00C5  31AE  2621  3180   	fcall	___awmod
 10344  00C8  0873               	movf	?___awmod+1,w
 10345  00C9  0020               	movlb	0	; select bank0
 10346  00CA  00A3               	movwf	___awdiv@dividend+1
 10347  00CB  0872               	movf	?___awmod,w
 10348  00CC  00A2               	movwf	___awdiv@dividend
 10349  00CD  31AF  2707  3180   	fcall	___awdiv
 10350  00D0  0020               	movlb	0	; select bank0
 10351  00D1  0820               	movf	?___awdiv,w
 10352  00D2  0021               	movlb	1	; select bank1
 10353  00D3  00A0               	movwf	??_scale^(0+128)
 10354  00D4  0020               	movlb	0	; select bank0
 10355  00D5  0821               	movf	?___awdiv+1,w
 10356  00D6  0021               	movlb	1	; select bank1
 10357  00D7  00A1               	movwf	(??_scale^(0+128)+1)
 10358  00D8  35A0               	lslf	??_scale^(0+128),f
 10359  00D9  0DA1               	rlf	(??_scale^(0+128)+1),f
 10360  00DA  35A0               	lslf	??_scale^(0+128),f
 10361  00DB  0DA1               	rlf	(??_scale^(0+128)+1),f
 10362  00DC  0820               	movf	??_scale^(0+128),w
 10363  00DD  3E24               	addlw	36
 10364  00DE  00A2               	movwf	(??_scale+2)^(0+128)
 10365  00DF  3000               	movlw	0
 10366  00E0  3D21               	addwfc	(??_scale+1)^(0+128),w
 10367  00E1  00A3               	movwf	(??_scale+3)^(0+128)
 10368  00E2  3034               	movlw	low (__npowers_| (0+32768))
 10369  00E3  0722               	addwf	(??_scale+2)^(0+128),w
 10370  00E4  0084               	movwf	4
 10371  00E5  30B0               	movlw	high (__npowers_| (0+32768))
 10372  00E6  3D23               	addwfc	(??_scale+3)^(0+128),w
 10373  00E7  0085               	movwf	5
 10374  00E8  3F00               	moviw [0]fsr0
 10375  00E9  00A4               	movwf	(??_scale+4)^(0+128)
 10376  00EA  3F01               	moviw [1]fsr0
 10377  00EB  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10378  00EC  3F02               	moviw [2]fsr0
 10379  00ED  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10380  00EE  3F03               	moviw [3]fsr0
 10381  00EF  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10382  00F0  0827               	movf	(??_scale+7)^(0+128),w
 10383  00F1  0020               	movlb	0	; select bank0
 10384  00F2  00D5               	movwf	___flmul@b+3
 10385  00F3  0021               	movlb	1	; select bank1
 10386  00F4  0826               	movf	(??_scale+6)^(0+128),w
 10387  00F5  0020               	movlb	0	; select bank0
 10388  00F6  00D4               	movwf	___flmul@b+2
 10389  00F7  0021               	movlb	1	; select bank1
 10390  00F8  0825               	movf	(??_scale+5)^(0+128),w
 10391  00F9  0020               	movlb	0	; select bank0
 10392  00FA  00D3               	movwf	___flmul@b+1
 10393  00FB  0021               	movlb	1	; select bank1
 10394  00FC  0824               	movf	(??_scale+4)^(0+128),w
 10395  00FD  0020               	movlb	0	; select bank0
 10396  00FE  00D2               	movwf	___flmul@b
 10397  00FF  3064               	movlw	100
 10398  0100  00A0               	movwf	___awdiv@divisor
 10399  0101  3000               	movlw	0
 10400  0102  00A1               	movwf	___awdiv@divisor+1
 10401  0103  0021               	movlb	1	; select bank1
 10402  0104  0834               	movf	scale@scl^(0+128),w
 10403  0105  0020               	movlb	0	; select bank0
 10404  0106  00A2               	movwf	___awdiv@dividend
 10405  0107  01A3               	clrf	___awdiv@dividend+1
 10406  0108  1BA2               	btfsc	___awdiv@dividend,7
 10407  0109  03A3               	decf	___awdiv@dividend+1,f
 10408  010A  31AF  2707  3180   	fcall	___awdiv
 10409  010D  0020               	movlb	0	; select bank0
 10410  010E  0820               	movf	?___awdiv,w
 10411  010F  0021               	movlb	1	; select bank1
 10412  0110  00A8               	movwf	(??_scale+8)^(0+128)
 10413  0111  0020               	movlb	0	; select bank0
 10414  0112  0821               	movf	?___awdiv+1,w
 10415  0113  0021               	movlb	1	; select bank1
 10416  0114  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10417  0115  35A8               	lslf	(??_scale+8)^(0+128),f
 10418  0116  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10419  0117  35A8               	lslf	(??_scale+8)^(0+128),f
 10420  0118  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10421  0119  0828               	movf	(??_scale+8)^(0+128),w
 10422  011A  3E48               	addlw	72
 10423  011B  00AA               	movwf	(??_scale+10)^(0+128)
 10424  011C  3000               	movlw	0
 10425  011D  3D29               	addwfc	(??_scale+9)^(0+128),w
 10426  011E  00AB               	movwf	(??_scale+11)^(0+128)
 10427  011F  3034               	movlw	low (__npowers_| (0+32768))
 10428  0120  072A               	addwf	(??_scale+10)^(0+128),w
 10429  0121  0084               	movwf	4
 10430  0122  30B0               	movlw	high (__npowers_| (0+32768))
 10431  0123  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10432  0124  0085               	movwf	5
 10433  0125  3F00               	moviw [0]fsr0
 10434  0126  00AC               	movwf	(??_scale+12)^(0+128)
 10435  0127  3F01               	moviw [1]fsr0
 10436  0128  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10437  0129  3F02               	moviw [2]fsr0
 10438  012A  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10439  012B  3F03               	moviw [3]fsr0
 10440  012C  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10441  012D  082F               	movf	(??_scale+15)^(0+128),w
 10442  012E  0020               	movlb	0	; select bank0
 10443  012F  00D9               	movwf	___flmul@a+3
 10444  0130  0021               	movlb	1	; select bank1
 10445  0131  082E               	movf	(??_scale+14)^(0+128),w
 10446  0132  0020               	movlb	0	; select bank0
 10447  0133  00D8               	movwf	___flmul@a+2
 10448  0134  0021               	movlb	1	; select bank1
 10449  0135  082D               	movf	(??_scale+13)^(0+128),w
 10450  0136  0020               	movlb	0	; select bank0
 10451  0137  00D7               	movwf	___flmul@a+1
 10452  0138  0021               	movlb	1	; select bank1
 10453  0139  082C               	movf	(??_scale+12)^(0+128),w
 10454  013A  0020               	movlb	0	; select bank0
 10455  013B  00D6               	movwf	___flmul@a
 10456  013C  3183  23D0  3180   	fcall	___flmul
 10457  013F  0020               	movlb	0	; select bank0
 10458  0140  0855               	movf	?___flmul+3,w
 10459  0141  0021               	movlb	1	; select bank1
 10460  0142  00B3               	movwf	(_scale$2150+3)^(0+128)
 10461  0143  0020               	movlb	0	; select bank0
 10462  0144  0854               	movf	?___flmul+2,w
 10463  0145  0021               	movlb	1	; select bank1
 10464  0146  00B2               	movwf	(_scale$2150+2)^(0+128)
 10465  0147  0020               	movlb	0	; select bank0
 10466  0148  0853               	movf	?___flmul+1,w
 10467  0149  0021               	movlb	1	; select bank1
 10468  014A  00B1               	movwf	(_scale$2150+1)^(0+128)
 10469  014B  0020               	movlb	0	; select bank0
 10470  014C  0852               	movf	?___flmul,w
 10471  014D  0021               	movlb	1	; select bank1
 10472  014E  00B0               	movwf	_scale$2150^(0+128)
 10473                           
 10474                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10475  014F  300A               	movlw	10
 10476  0150  00F2               	movwf	___awmod@divisor
 10477  0151  3000               	movlw	0
 10478  0152  00F3               	movwf	___awmod@divisor+1
 10479  0153  0834               	movf	scale@scl^(0+128),w
 10480  0154  00F4               	movwf	___awmod@dividend
 10481  0155  01F5               	clrf	___awmod@dividend+1
 10482  0156  1BF4               	btfsc	___awmod@dividend,7
 10483  0157  03F5               	decf	___awmod@dividend+1,f
 10484  0158  31AE  2621  3180   	fcall	___awmod
 10485  015B  0873               	movf	?___awmod+1,w
 10486  015C  0085               	movwf	5
 10487  015D  0872               	movf	?___awmod,w
 10488  015E  0084               	movwf	4
 10489  015F  3584               	lslf	4,f
 10490  0160  0D85               	rlf	5,f
 10491  0161  3584               	lslf	4,f
 10492  0162  0D85               	rlf	5,f
 10493  0163  3034               	movlw	low (__npowers_| (0+32768))
 10494  0164  0784               	addwf	4,f
 10495  0165  30B0               	movlw	high (__npowers_| (0+32768))
 10496  0166  3D85               	addwfc	5,f
 10497  0167  3F00               	moviw [0]fsr0
 10498  0168  0021               	movlb	1	; select bank1
 10499  0169  00A0               	movwf	??_scale^(0+128)
 10500  016A  3F01               	moviw [1]fsr0
 10501  016B  00A1               	movwf	(??_scale^(0+128)+1)
 10502  016C  3F02               	moviw [2]fsr0
 10503  016D  00A2               	movwf	(??_scale^(0+128)+2)
 10504  016E  3F03               	moviw [3]fsr0
 10505  016F  00A3               	movwf	(??_scale^(0+128)+3)
 10506  0170  0823               	movf	(??_scale+3)^(0+128),w
 10507  0171  0020               	movlb	0	; select bank0
 10508  0172  00D5               	movwf	___flmul@b+3
 10509  0173  0021               	movlb	1	; select bank1
 10510  0174  0822               	movf	(??_scale+2)^(0+128),w
 10511  0175  0020               	movlb	0	; select bank0
 10512  0176  00D4               	movwf	___flmul@b+2
 10513  0177  0021               	movlb	1	; select bank1
 10514  0178  0821               	movf	(??_scale+1)^(0+128),w
 10515  0179  0020               	movlb	0	; select bank0
 10516  017A  00D3               	movwf	___flmul@b+1
 10517  017B  0021               	movlb	1	; select bank1
 10518  017C  0820               	movf	??_scale^(0+128),w
 10519  017D  0020               	movlb	0	; select bank0
 10520  017E  00D2               	movwf	___flmul@b
 10521  017F  0021               	movlb	1	; select bank1
 10522  0180  0833               	movf	(_scale$2150+3)^(0+128),w
 10523  0181  0020               	movlb	0	; select bank0
 10524  0182  00D9               	movwf	___flmul@a+3
 10525  0183  0021               	movlb	1	; select bank1
 10526  0184  0832               	movf	(_scale$2150+2)^(0+128),w
 10527  0185  0020               	movlb	0	; select bank0
 10528  0186  00D8               	movwf	___flmul@a+2
 10529  0187  0021               	movlb	1	; select bank1
 10530  0188  0831               	movf	(_scale$2150+1)^(0+128),w
 10531  0189  0020               	movlb	0	; select bank0
 10532  018A  00D7               	movwf	___flmul@a+1
 10533  018B  0021               	movlb	1	; select bank1
 10534  018C  0830               	movf	_scale$2150^(0+128),w
 10535  018D  0020               	movlb	0	; select bank0
 10536  018E  00D6               	movwf	___flmul@a
 10537  018F  3183  23D0         	fcall	___flmul
 10538  0191  0020               	movlb	0	; select bank0
 10539  0192  0855               	movf	?___flmul+3,w
 10540  0193  00EF               	movwf	?_scale+3
 10541  0194  0854               	movf	?___flmul+2,w
 10542  0195  00EE               	movwf	?_scale+2
 10543  0196  0853               	movf	?___flmul+1,w
 10544  0197  00ED               	movwf	?_scale+1
 10545  0198  0852               	movf	?___flmul,w
 10546  0199  00EC               	movwf	?_scale
 10547  019A  0008               	return
 10548  019B                     l7022:	
 10549                           
 10550                           ;doprnt.c: 432: else if(scl > 10)
 10551  019B  0021               	movlb	1	; select bank1
 10552  019C  0834               	movf	scale@scl^(0+128),w
 10553  019D  3A80               	xorlw	128
 10554  019E  3E75               	addlw	-139
 10555  019F  1C03               	skipc
 10556  01A0  2A1A               	goto	l7028
 10557                           
 10558                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10559  01A1  300A               	movlw	10
 10560  01A2  00F2               	movwf	___awmod@divisor
 10561  01A3  3000               	movlw	0
 10562  01A4  00F3               	movwf	___awmod@divisor+1
 10563  01A5  0834               	movf	scale@scl^(0+128),w
 10564  01A6  00F4               	movwf	___awmod@dividend
 10565  01A7  01F5               	clrf	___awmod@dividend+1
 10566  01A8  1BF4               	btfsc	___awmod@dividend,7
 10567  01A9  03F5               	decf	___awmod@dividend+1,f
 10568  01AA  31AE  2621  3180   	fcall	___awmod
 10569  01AD  0873               	movf	?___awmod+1,w
 10570  01AE  0085               	movwf	5
 10571  01AF  0872               	movf	?___awmod,w
 10572  01B0  0084               	movwf	4
 10573  01B1  3584               	lslf	4,f
 10574  01B2  0D85               	rlf	5,f
 10575  01B3  3584               	lslf	4,f
 10576  01B4  0D85               	rlf	5,f
 10577  01B5  3034               	movlw	low (__npowers_| (0+32768))
 10578  01B6  0784               	addwf	4,f
 10579  01B7  30B0               	movlw	high (__npowers_| (0+32768))
 10580  01B8  3D85               	addwfc	5,f
 10581  01B9  3F00               	moviw [0]fsr0
 10582  01BA  0021               	movlb	1	; select bank1
 10583  01BB  00A0               	movwf	??_scale^(0+128)
 10584  01BC  3F01               	moviw [1]fsr0
 10585  01BD  00A1               	movwf	(??_scale^(0+128)+1)
 10586  01BE  3F02               	moviw [2]fsr0
 10587  01BF  00A2               	movwf	(??_scale^(0+128)+2)
 10588  01C0  3F03               	moviw [3]fsr0
 10589  01C1  00A3               	movwf	(??_scale^(0+128)+3)
 10590  01C2  0823               	movf	(??_scale+3)^(0+128),w
 10591  01C3  0020               	movlb	0	; select bank0
 10592  01C4  00D5               	movwf	___flmul@b+3
 10593  01C5  0021               	movlb	1	; select bank1
 10594  01C6  0822               	movf	(??_scale+2)^(0+128),w
 10595  01C7  0020               	movlb	0	; select bank0
 10596  01C8  00D4               	movwf	___flmul@b+2
 10597  01C9  0021               	movlb	1	; select bank1
 10598  01CA  0821               	movf	(??_scale+1)^(0+128),w
 10599  01CB  0020               	movlb	0	; select bank0
 10600  01CC  00D3               	movwf	___flmul@b+1
 10601  01CD  0021               	movlb	1	; select bank1
 10602  01CE  0820               	movf	??_scale^(0+128),w
 10603  01CF  0020               	movlb	0	; select bank0
 10604  01D0  00D2               	movwf	___flmul@b
 10605  01D1  300A               	movlw	10
 10606  01D2  00A0               	movwf	___awdiv@divisor
 10607  01D3  3000               	movlw	0
 10608  01D4  00A1               	movwf	___awdiv@divisor+1
 10609  01D5  0021               	movlb	1	; select bank1
 10610  01D6  0834               	movf	scale@scl^(0+128),w
 10611  01D7  0020               	movlb	0	; select bank0
 10612  01D8  00A2               	movwf	___awdiv@dividend
 10613  01D9  01A3               	clrf	___awdiv@dividend+1
 10614  01DA  1BA2               	btfsc	___awdiv@dividend,7
 10615  01DB  03A3               	decf	___awdiv@dividend+1,f
 10616  01DC  31AF  2707  3180   	fcall	___awdiv
 10617  01DF  0020               	movlb	0	; select bank0
 10618  01E0  0820               	movf	?___awdiv,w
 10619  01E1  0021               	movlb	1	; select bank1
 10620  01E2  00A4               	movwf	(??_scale+4)^(0+128)
 10621  01E3  0020               	movlb	0	; select bank0
 10622  01E4  0821               	movf	?___awdiv+1,w
 10623  01E5  0021               	movlb	1	; select bank1
 10624  01E6  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10625  01E7  35A4               	lslf	(??_scale+4)^(0+128),f
 10626  01E8  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10627  01E9  35A4               	lslf	(??_scale+4)^(0+128),f
 10628  01EA  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10629  01EB  0824               	movf	(??_scale+4)^(0+128),w
 10630  01EC  3E24               	addlw	36
 10631  01ED  00A6               	movwf	(??_scale+6)^(0+128)
 10632  01EE  3000               	movlw	0
 10633  01EF  3D25               	addwfc	(??_scale+5)^(0+128),w
 10634  01F0  00A7               	movwf	(??_scale+7)^(0+128)
 10635  01F1  3034               	movlw	low (__npowers_| (0+32768))
 10636  01F2  0726               	addwf	(??_scale+6)^(0+128),w
 10637  01F3  0084               	movwf	4
 10638  01F4  30B0               	movlw	high (__npowers_| (0+32768))
 10639  01F5  3D27               	addwfc	(??_scale+7)^(0+128),w
 10640  01F6  0085               	movwf	5
 10641  01F7  3F00               	moviw [0]fsr0
 10642  01F8  00A8               	movwf	(??_scale+8)^(0+128)
 10643  01F9  3F01               	moviw [1]fsr0
 10644  01FA  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10645  01FB  3F02               	moviw [2]fsr0
 10646  01FC  00AA               	movwf	((??_scale+8)^(0+128)+2)
 10647  01FD  3F03               	moviw [3]fsr0
 10648  01FE  00AB               	movwf	((??_scale+8)^(0+128)+3)
 10649  01FF  082B               	movf	(??_scale+11)^(0+128),w
 10650  0200  0020               	movlb	0	; select bank0
 10651  0201  00D9               	movwf	___flmul@a+3
 10652  0202  0021               	movlb	1	; select bank1
 10653  0203  082A               	movf	(??_scale+10)^(0+128),w
 10654  0204  0020               	movlb	0	; select bank0
 10655  0205  00D8               	movwf	___flmul@a+2
 10656  0206  0021               	movlb	1	; select bank1
 10657  0207  0829               	movf	(??_scale+9)^(0+128),w
 10658  0208  0020               	movlb	0	; select bank0
 10659  0209  00D7               	movwf	___flmul@a+1
 10660  020A  0021               	movlb	1	; select bank1
 10661  020B  0828               	movf	(??_scale+8)^(0+128),w
 10662  020C  0020               	movlb	0	; select bank0
 10663  020D  00D6               	movwf	___flmul@a
 10664  020E  3183  23D0         	fcall	___flmul
 10665  0210  0020               	movlb	0	; select bank0
 10666  0211  0855               	movf	?___flmul+3,w
 10667  0212  00EF               	movwf	?_scale+3
 10668  0213  0854               	movf	?___flmul+2,w
 10669  0214  00EE               	movwf	?_scale+2
 10670  0215  0853               	movf	?___flmul+1,w
 10671  0216  00ED               	movwf	?_scale+1
 10672  0217  0852               	movf	?___flmul,w
 10673  0218  00EC               	movwf	?_scale
 10674  0219  0008               	return
 10675  021A                     l7028:	
 10676                           
 10677                           ;doprnt.c: 434: return _npowers_[scl];
 10678  021A  0021               	movlb	1	; select bank1
 10679  021B  0834               	movf	scale@scl^(0+128),w
 10680  021C  00A0               	movwf	??_scale^(0+128)
 10681  021D  01A1               	clrf	(??_scale^(0+128)+1)
 10682  021E  35A0               	lslf	??_scale^(0+128),f
 10683  021F  0DA1               	rlf	(??_scale^(0+128)+1),f
 10684  0220  35A0               	lslf	??_scale^(0+128),f
 10685  0221  0DA1               	rlf	(??_scale^(0+128)+1),f
 10686  0222  3034               	movlw	low (__npowers_| (0+32768))
 10687  0223  0720               	addwf	??_scale^(0+128),w
 10688  0224  0084               	movwf	4
 10689  0225  30B0               	movlw	high (__npowers_| (0+32768))
 10690  0226  3D21               	addwfc	(??_scale+1)^(0+128),w
 10691  0227  0085               	movwf	5
 10692  0228  3F00               	moviw [0]fsr0
 10693  0229  00A2               	movwf	(??_scale+2)^(0+128)
 10694  022A  3F01               	moviw [1]fsr0
 10695  022B  00A3               	movwf	((??_scale+2)^(0+128)+1)
 10696  022C  3F02               	moviw [2]fsr0
 10697  022D  00A4               	movwf	((??_scale+2)^(0+128)+2)
 10698  022E  3F03               	moviw [3]fsr0
 10699  022F  00A5               	movwf	((??_scale+2)^(0+128)+3)
 10700  0230  0825               	movf	(??_scale+5)^(0+128),w
 10701  0231  0020               	movlb	0	; select bank0
 10702  0232  00EF               	movwf	?_scale+3
 10703  0233  0021               	movlb	1	; select bank1
 10704  0234  0824               	movf	(??_scale+4)^(0+128),w
 10705  0235  0020               	movlb	0	; select bank0
 10706  0236  00EE               	movwf	?_scale+2
 10707  0237  0021               	movlb	1	; select bank1
 10708  0238  0823               	movf	(??_scale+3)^(0+128),w
 10709  0239  0020               	movlb	0	; select bank0
 10710  023A  00ED               	movwf	?_scale+1
 10711  023B  0021               	movlb	1	; select bank1
 10712  023C  0822               	movf	(??_scale+2)^(0+128),w
 10713  023D  0020               	movlb	0	; select bank0
 10714  023E  00EC               	movwf	?_scale
 10715  023F  0008               	return
 10716  0240                     l7032:	
 10717                           
 10718                           ;doprnt.c: 435: }
 10719                           ;doprnt.c: 436: if(scl>=110)
 10720  0240  0021               	movlb	1	; select bank1
 10721  0241  0834               	movf	scale@scl^(0+128),w
 10722  0242  3A80               	xorlw	128
 10723  0243  3E12               	addlw	-238
 10724  0244  1C03               	skipc
 10725  0245  2B2B               	goto	l7040
 10726                           
 10727                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10728  0246  300A               	movlw	10
 10729  0247  0020               	movlb	0	; select bank0
 10730  0248  00A0               	movwf	___awdiv@divisor
 10731  0249  3000               	movlw	0
 10732  024A  00A1               	movwf	___awdiv@divisor+1
 10733  024B  0021               	movlb	1	; select bank1
 10734  024C  0834               	movf	scale@scl^(0+128),w
 10735  024D  00F4               	movwf	___awmod@dividend
 10736  024E  01F5               	clrf	___awmod@dividend+1
 10737  024F  1BF4               	btfsc	___awmod@dividend,7
 10738  0250  03F5               	decf	___awmod@dividend+1,f
 10739  0251  3064               	movlw	100
 10740  0252  00F2               	movwf	___awmod@divisor
 10741  0253  3000               	movlw	0
 10742  0254  00F3               	movwf	___awmod@divisor+1
 10743  0255  31AE  2621  3180   	fcall	___awmod
 10744  0258  0873               	movf	?___awmod+1,w
 10745  0259  0020               	movlb	0	; select bank0
 10746  025A  00A3               	movwf	___awdiv@dividend+1
 10747  025B  0872               	movf	?___awmod,w
 10748  025C  00A2               	movwf	___awdiv@dividend
 10749  025D  31AF  2707  3180   	fcall	___awdiv
 10750  0260  0020               	movlb	0	; select bank0
 10751  0261  0820               	movf	?___awdiv,w
 10752  0262  0021               	movlb	1	; select bank1
 10753  0263  00A0               	movwf	??_scale^(0+128)
 10754  0264  0020               	movlb	0	; select bank0
 10755  0265  0821               	movf	?___awdiv+1,w
 10756  0266  0021               	movlb	1	; select bank1
 10757  0267  00A1               	movwf	(??_scale^(0+128)+1)
 10758  0268  35A0               	lslf	??_scale^(0+128),f
 10759  0269  0DA1               	rlf	(??_scale^(0+128)+1),f
 10760  026A  35A0               	lslf	??_scale^(0+128),f
 10761  026B  0DA1               	rlf	(??_scale^(0+128)+1),f
 10762  026C  0820               	movf	??_scale^(0+128),w
 10763  026D  3E24               	addlw	36
 10764  026E  00A2               	movwf	(??_scale+2)^(0+128)
 10765  026F  3000               	movlw	0
 10766  0270  3D21               	addwfc	(??_scale+1)^(0+128),w
 10767  0271  00A3               	movwf	(??_scale+3)^(0+128)
 10768  0272  3000               	movlw	low (__powers_| (0+32768))
 10769  0273  0722               	addwf	(??_scale+2)^(0+128),w
 10770  0274  0084               	movwf	4
 10771  0275  30B0               	movlw	high (__powers_| (0+32768))
 10772  0276  3D23               	addwfc	(??_scale+3)^(0+128),w
 10773  0277  0085               	movwf	5
 10774  0278  3F00               	moviw [0]fsr0
 10775  0279  00A4               	movwf	(??_scale+4)^(0+128)
 10776  027A  3F01               	moviw [1]fsr0
 10777  027B  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10778  027C  3F02               	moviw [2]fsr0
 10779  027D  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10780  027E  3F03               	moviw [3]fsr0
 10781  027F  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10782  0280  0827               	movf	(??_scale+7)^(0+128),w
 10783  0281  0020               	movlb	0	; select bank0
 10784  0282  00D5               	movwf	___flmul@b+3
 10785  0283  0021               	movlb	1	; select bank1
 10786  0284  0826               	movf	(??_scale+6)^(0+128),w
 10787  0285  0020               	movlb	0	; select bank0
 10788  0286  00D4               	movwf	___flmul@b+2
 10789  0287  0021               	movlb	1	; select bank1
 10790  0288  0825               	movf	(??_scale+5)^(0+128),w
 10791  0289  0020               	movlb	0	; select bank0
 10792  028A  00D3               	movwf	___flmul@b+1
 10793  028B  0021               	movlb	1	; select bank1
 10794  028C  0824               	movf	(??_scale+4)^(0+128),w
 10795  028D  0020               	movlb	0	; select bank0
 10796  028E  00D2               	movwf	___flmul@b
 10797  028F  3064               	movlw	100
 10798  0290  00A0               	movwf	___awdiv@divisor
 10799  0291  3000               	movlw	0
 10800  0292  00A1               	movwf	___awdiv@divisor+1
 10801  0293  0021               	movlb	1	; select bank1
 10802  0294  0834               	movf	scale@scl^(0+128),w
 10803  0295  0020               	movlb	0	; select bank0
 10804  0296  00A2               	movwf	___awdiv@dividend
 10805  0297  01A3               	clrf	___awdiv@dividend+1
 10806  0298  1BA2               	btfsc	___awdiv@dividend,7
 10807  0299  03A3               	decf	___awdiv@dividend+1,f
 10808  029A  31AF  2707  3180   	fcall	___awdiv
 10809  029D  0020               	movlb	0	; select bank0
 10810  029E  0820               	movf	?___awdiv,w
 10811  029F  0021               	movlb	1	; select bank1
 10812  02A0  00A8               	movwf	(??_scale+8)^(0+128)
 10813  02A1  0020               	movlb	0	; select bank0
 10814  02A2  0821               	movf	?___awdiv+1,w
 10815  02A3  0021               	movlb	1	; select bank1
 10816  02A4  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10817  02A5  35A8               	lslf	(??_scale+8)^(0+128),f
 10818  02A6  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10819  02A7  35A8               	lslf	(??_scale+8)^(0+128),f
 10820  02A8  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10821  02A9  0828               	movf	(??_scale+8)^(0+128),w
 10822  02AA  3E48               	addlw	72
 10823  02AB  00AA               	movwf	(??_scale+10)^(0+128)
 10824  02AC  3000               	movlw	0
 10825  02AD  3D29               	addwfc	(??_scale+9)^(0+128),w
 10826  02AE  00AB               	movwf	(??_scale+11)^(0+128)
 10827  02AF  3000               	movlw	low (__powers_| (0+32768))
 10828  02B0  072A               	addwf	(??_scale+10)^(0+128),w
 10829  02B1  0084               	movwf	4
 10830  02B2  30B0               	movlw	high (__powers_| (0+32768))
 10831  02B3  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10832  02B4  0085               	movwf	5
 10833  02B5  3F00               	moviw [0]fsr0
 10834  02B6  00AC               	movwf	(??_scale+12)^(0+128)
 10835  02B7  3F01               	moviw [1]fsr0
 10836  02B8  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10837  02B9  3F02               	moviw [2]fsr0
 10838  02BA  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10839  02BB  3F03               	moviw [3]fsr0
 10840  02BC  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10841  02BD  082F               	movf	(??_scale+15)^(0+128),w
 10842  02BE  0020               	movlb	0	; select bank0
 10843  02BF  00D9               	movwf	___flmul@a+3
 10844  02C0  0021               	movlb	1	; select bank1
 10845  02C1  082E               	movf	(??_scale+14)^(0+128),w
 10846  02C2  0020               	movlb	0	; select bank0
 10847  02C3  00D8               	movwf	___flmul@a+2
 10848  02C4  0021               	movlb	1	; select bank1
 10849  02C5  082D               	movf	(??_scale+13)^(0+128),w
 10850  02C6  0020               	movlb	0	; select bank0
 10851  02C7  00D7               	movwf	___flmul@a+1
 10852  02C8  0021               	movlb	1	; select bank1
 10853  02C9  082C               	movf	(??_scale+12)^(0+128),w
 10854  02CA  0020               	movlb	0	; select bank0
 10855  02CB  00D6               	movwf	___flmul@a
 10856  02CC  3183  23D0  3180   	fcall	___flmul
 10857  02CF  0020               	movlb	0	; select bank0
 10858  02D0  0855               	movf	?___flmul+3,w
 10859  02D1  0021               	movlb	1	; select bank1
 10860  02D2  00B3               	movwf	(_scale$2150+3)^(0+128)
 10861  02D3  0020               	movlb	0	; select bank0
 10862  02D4  0854               	movf	?___flmul+2,w
 10863  02D5  0021               	movlb	1	; select bank1
 10864  02D6  00B2               	movwf	(_scale$2150+2)^(0+128)
 10865  02D7  0020               	movlb	0	; select bank0
 10866  02D8  0853               	movf	?___flmul+1,w
 10867  02D9  0021               	movlb	1	; select bank1
 10868  02DA  00B1               	movwf	(_scale$2150+1)^(0+128)
 10869  02DB  0020               	movlb	0	; select bank0
 10870  02DC  0852               	movf	?___flmul,w
 10871  02DD  0021               	movlb	1	; select bank1
 10872  02DE  00B0               	movwf	_scale$2150^(0+128)
 10873                           
 10874                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10875  02DF  300A               	movlw	10
 10876  02E0  00F2               	movwf	___awmod@divisor
 10877  02E1  3000               	movlw	0
 10878  02E2  00F3               	movwf	___awmod@divisor+1
 10879  02E3  0834               	movf	scale@scl^(0+128),w
 10880  02E4  00F4               	movwf	___awmod@dividend
 10881  02E5  01F5               	clrf	___awmod@dividend+1
 10882  02E6  1BF4               	btfsc	___awmod@dividend,7
 10883  02E7  03F5               	decf	___awmod@dividend+1,f
 10884  02E8  31AE  2621  3180   	fcall	___awmod
 10885  02EB  0873               	movf	?___awmod+1,w
 10886  02EC  0085               	movwf	5
 10887  02ED  0872               	movf	?___awmod,w
 10888  02EE  0084               	movwf	4
 10889  02EF  3584               	lslf	4,f
 10890  02F0  0D85               	rlf	5,f
 10891  02F1  3584               	lslf	4,f
 10892  02F2  0D85               	rlf	5,f
 10893  02F3  3000               	movlw	low (__powers_| (0+32768))
 10894  02F4  0784               	addwf	4,f
 10895  02F5  30B0               	movlw	high (__powers_| (0+32768))
 10896  02F6  3D85               	addwfc	5,f
 10897  02F7  3F00               	moviw [0]fsr0
 10898  02F8  0021               	movlb	1	; select bank1
 10899  02F9  00A0               	movwf	??_scale^(0+128)
 10900  02FA  3F01               	moviw [1]fsr0
 10901  02FB  00A1               	movwf	(??_scale^(0+128)+1)
 10902  02FC  3F02               	moviw [2]fsr0
 10903  02FD  00A2               	movwf	(??_scale^(0+128)+2)
 10904  02FE  3F03               	moviw [3]fsr0
 10905  02FF  00A3               	movwf	(??_scale^(0+128)+3)
 10906  0300  0823               	movf	(??_scale+3)^(0+128),w
 10907  0301  0020               	movlb	0	; select bank0
 10908  0302  00D5               	movwf	___flmul@b+3
 10909  0303  0021               	movlb	1	; select bank1
 10910  0304  0822               	movf	(??_scale+2)^(0+128),w
 10911  0305  0020               	movlb	0	; select bank0
 10912  0306  00D4               	movwf	___flmul@b+2
 10913  0307  0021               	movlb	1	; select bank1
 10914  0308  0821               	movf	(??_scale+1)^(0+128),w
 10915  0309  0020               	movlb	0	; select bank0
 10916  030A  00D3               	movwf	___flmul@b+1
 10917  030B  0021               	movlb	1	; select bank1
 10918  030C  0820               	movf	??_scale^(0+128),w
 10919  030D  0020               	movlb	0	; select bank0
 10920  030E  00D2               	movwf	___flmul@b
 10921  030F  0021               	movlb	1	; select bank1
 10922  0310  0833               	movf	(_scale$2150+3)^(0+128),w
 10923  0311  0020               	movlb	0	; select bank0
 10924  0312  00D9               	movwf	___flmul@a+3
 10925  0313  0021               	movlb	1	; select bank1
 10926  0314  0832               	movf	(_scale$2150+2)^(0+128),w
 10927  0315  0020               	movlb	0	; select bank0
 10928  0316  00D8               	movwf	___flmul@a+2
 10929  0317  0021               	movlb	1	; select bank1
 10930  0318  0831               	movf	(_scale$2150+1)^(0+128),w
 10931  0319  0020               	movlb	0	; select bank0
 10932  031A  00D7               	movwf	___flmul@a+1
 10933  031B  0021               	movlb	1	; select bank1
 10934  031C  0830               	movf	_scale$2150^(0+128),w
 10935  031D  0020               	movlb	0	; select bank0
 10936  031E  00D6               	movwf	___flmul@a
 10937  031F  3183  23D0         	fcall	___flmul
 10938  0321  0020               	movlb	0	; select bank0
 10939  0322  0855               	movf	?___flmul+3,w
 10940  0323  00EF               	movwf	?_scale+3
 10941  0324  0854               	movf	?___flmul+2,w
 10942  0325  00EE               	movwf	?_scale+2
 10943  0326  0853               	movf	?___flmul+1,w
 10944  0327  00ED               	movwf	?_scale+1
 10945  0328  0852               	movf	?___flmul,w
 10946  0329  00EC               	movwf	?_scale
 10947  032A  0008               	return
 10948  032B                     l7040:	
 10949                           
 10950                           ;doprnt.c: 438: else if(scl > 10)
 10951  032B  0021               	movlb	1	; select bank1
 10952  032C  0834               	movf	scale@scl^(0+128),w
 10953  032D  3A80               	xorlw	128
 10954  032E  3E75               	addlw	-139
 10955  032F  1C03               	skipc
 10956  0330  2BAA               	goto	l7046
 10957                           
 10958                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10959  0331  300A               	movlw	10
 10960  0332  00F2               	movwf	___awmod@divisor
 10961  0333  3000               	movlw	0
 10962  0334  00F3               	movwf	___awmod@divisor+1
 10963  0335  0834               	movf	scale@scl^(0+128),w
 10964  0336  00F4               	movwf	___awmod@dividend
 10965  0337  01F5               	clrf	___awmod@dividend+1
 10966  0338  1BF4               	btfsc	___awmod@dividend,7
 10967  0339  03F5               	decf	___awmod@dividend+1,f
 10968  033A  31AE  2621  3180   	fcall	___awmod
 10969  033D  0873               	movf	?___awmod+1,w
 10970  033E  0085               	movwf	5
 10971  033F  0872               	movf	?___awmod,w
 10972  0340  0084               	movwf	4
 10973  0341  3584               	lslf	4,f
 10974  0342  0D85               	rlf	5,f
 10975  0343  3584               	lslf	4,f
 10976  0344  0D85               	rlf	5,f
 10977  0345  3000               	movlw	low (__powers_| (0+32768))
 10978  0346  0784               	addwf	4,f
 10979  0347  30B0               	movlw	high (__powers_| (0+32768))
 10980  0348  3D85               	addwfc	5,f
 10981  0349  3F00               	moviw [0]fsr0
 10982  034A  0021               	movlb	1	; select bank1
 10983  034B  00A0               	movwf	??_scale^(0+128)
 10984  034C  3F01               	moviw [1]fsr0
 10985  034D  00A1               	movwf	(??_scale^(0+128)+1)
 10986  034E  3F02               	moviw [2]fsr0
 10987  034F  00A2               	movwf	(??_scale^(0+128)+2)
 10988  0350  3F03               	moviw [3]fsr0
 10989  0351  00A3               	movwf	(??_scale^(0+128)+3)
 10990  0352  0823               	movf	(??_scale+3)^(0+128),w
 10991  0353  0020               	movlb	0	; select bank0
 10992  0354  00D5               	movwf	___flmul@b+3
 10993  0355  0021               	movlb	1	; select bank1
 10994  0356  0822               	movf	(??_scale+2)^(0+128),w
 10995  0357  0020               	movlb	0	; select bank0
 10996  0358  00D4               	movwf	___flmul@b+2
 10997  0359  0021               	movlb	1	; select bank1
 10998  035A  0821               	movf	(??_scale+1)^(0+128),w
 10999  035B  0020               	movlb	0	; select bank0
 11000  035C  00D3               	movwf	___flmul@b+1
 11001  035D  0021               	movlb	1	; select bank1
 11002  035E  0820               	movf	??_scale^(0+128),w
 11003  035F  0020               	movlb	0	; select bank0
 11004  0360  00D2               	movwf	___flmul@b
 11005  0361  300A               	movlw	10
 11006  0362  00A0               	movwf	___awdiv@divisor
 11007  0363  3000               	movlw	0
 11008  0364  00A1               	movwf	___awdiv@divisor+1
 11009  0365  0021               	movlb	1	; select bank1
 11010  0366  0834               	movf	scale@scl^(0+128),w
 11011  0367  0020               	movlb	0	; select bank0
 11012  0368  00A2               	movwf	___awdiv@dividend
 11013  0369  01A3               	clrf	___awdiv@dividend+1
 11014  036A  1BA2               	btfsc	___awdiv@dividend,7
 11015  036B  03A3               	decf	___awdiv@dividend+1,f
 11016  036C  31AF  2707  3180   	fcall	___awdiv
 11017  036F  0020               	movlb	0	; select bank0
 11018  0370  0820               	movf	?___awdiv,w
 11019  0371  0021               	movlb	1	; select bank1
 11020  0372  00A4               	movwf	(??_scale+4)^(0+128)
 11021  0373  0020               	movlb	0	; select bank0
 11022  0374  0821               	movf	?___awdiv+1,w
 11023  0375  0021               	movlb	1	; select bank1
 11024  0376  00A5               	movwf	((??_scale+4)^(0+128)+1)
 11025  0377  35A4               	lslf	(??_scale+4)^(0+128),f
 11026  0378  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 11027  0379  35A4               	lslf	(??_scale+4)^(0+128),f
 11028  037A  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 11029  037B  0824               	movf	(??_scale+4)^(0+128),w
 11030  037C  3E24               	addlw	36
 11031  037D  00A6               	movwf	(??_scale+6)^(0+128)
 11032  037E  3000               	movlw	0
 11033  037F  3D25               	addwfc	(??_scale+5)^(0+128),w
 11034  0380  00A7               	movwf	(??_scale+7)^(0+128)
 11035  0381  3000               	movlw	low (__powers_| (0+32768))
 11036  0382  0726               	addwf	(??_scale+6)^(0+128),w
 11037  0383  0084               	movwf	4
 11038  0384  30B0               	movlw	high (__powers_| (0+32768))
 11039  0385  3D27               	addwfc	(??_scale+7)^(0+128),w
 11040  0386  0085               	movwf	5
 11041  0387  3F00               	moviw [0]fsr0
 11042  0388  00A8               	movwf	(??_scale+8)^(0+128)
 11043  0389  3F01               	moviw [1]fsr0
 11044  038A  00A9               	movwf	((??_scale+8)^(0+128)+1)
 11045  038B  3F02               	moviw [2]fsr0
 11046  038C  00AA               	movwf	((??_scale+8)^(0+128)+2)
 11047  038D  3F03               	moviw [3]fsr0
 11048  038E  00AB               	movwf	((??_scale+8)^(0+128)+3)
 11049  038F  082B               	movf	(??_scale+11)^(0+128),w
 11050  0390  0020               	movlb	0	; select bank0
 11051  0391  00D9               	movwf	___flmul@a+3
 11052  0392  0021               	movlb	1	; select bank1
 11053  0393  082A               	movf	(??_scale+10)^(0+128),w
 11054  0394  0020               	movlb	0	; select bank0
 11055  0395  00D8               	movwf	___flmul@a+2
 11056  0396  0021               	movlb	1	; select bank1
 11057  0397  0829               	movf	(??_scale+9)^(0+128),w
 11058  0398  0020               	movlb	0	; select bank0
 11059  0399  00D7               	movwf	___flmul@a+1
 11060  039A  0021               	movlb	1	; select bank1
 11061  039B  0828               	movf	(??_scale+8)^(0+128),w
 11062  039C  0020               	movlb	0	; select bank0
 11063  039D  00D6               	movwf	___flmul@a
 11064  039E  3183  23D0         	fcall	___flmul
 11065  03A0  0020               	movlb	0	; select bank0
 11066  03A1  0855               	movf	?___flmul+3,w
 11067  03A2  00EF               	movwf	?_scale+3
 11068  03A3  0854               	movf	?___flmul+2,w
 11069  03A4  00EE               	movwf	?_scale+2
 11070  03A5  0853               	movf	?___flmul+1,w
 11071  03A6  00ED               	movwf	?_scale+1
 11072  03A7  0852               	movf	?___flmul,w
 11073  03A8  00EC               	movwf	?_scale
 11074  03A9  0008               	return
 11075  03AA                     l7046:	
 11076                           
 11077                           ;doprnt.c: 440: return _powers_[scl];
 11078  03AA  0021               	movlb	1	; select bank1
 11079  03AB  0834               	movf	scale@scl^(0+128),w
 11080  03AC  00A0               	movwf	??_scale^(0+128)
 11081  03AD  01A1               	clrf	(??_scale^(0+128)+1)
 11082  03AE  35A0               	lslf	??_scale^(0+128),f
 11083  03AF  0DA1               	rlf	(??_scale^(0+128)+1),f
 11084  03B0  35A0               	lslf	??_scale^(0+128),f
 11085  03B1  0DA1               	rlf	(??_scale^(0+128)+1),f
 11086  03B2  3000               	movlw	low (__powers_| (0+32768))
 11087  03B3  0720               	addwf	??_scale^(0+128),w
 11088  03B4  0084               	movwf	4
 11089  03B5  30B0               	movlw	high (__powers_| (0+32768))
 11090  03B6  3D21               	addwfc	(??_scale+1)^(0+128),w
 11091  03B7  0085               	movwf	5
 11092  03B8  3F00               	moviw [0]fsr0
 11093  03B9  00A2               	movwf	(??_scale+2)^(0+128)
 11094  03BA  3F01               	moviw [1]fsr0
 11095  03BB  00A3               	movwf	((??_scale+2)^(0+128)+1)
 11096  03BC  3F02               	moviw [2]fsr0
 11097  03BD  00A4               	movwf	((??_scale+2)^(0+128)+2)
 11098  03BE  3F03               	moviw [3]fsr0
 11099  03BF  00A5               	movwf	((??_scale+2)^(0+128)+3)
 11100  03C0  0825               	movf	(??_scale+5)^(0+128),w
 11101  03C1  0020               	movlb	0	; select bank0
 11102  03C2  00EF               	movwf	?_scale+3
 11103  03C3  0021               	movlb	1	; select bank1
 11104  03C4  0824               	movf	(??_scale+4)^(0+128),w
 11105  03C5  0020               	movlb	0	; select bank0
 11106  03C6  00EE               	movwf	?_scale+2
 11107  03C7  0021               	movlb	1	; select bank1
 11108  03C8  0823               	movf	(??_scale+3)^(0+128),w
 11109  03C9  0020               	movlb	0	; select bank0
 11110  03CA  00ED               	movwf	?_scale+1
 11111  03CB  0021               	movlb	1	; select bank1
 11112  03CC  0822               	movf	(??_scale+2)^(0+128),w
 11113  03CD  0020               	movlb	0	; select bank0
 11114  03CE  00EC               	movwf	?_scale
 11115  03CF  0008               	return
 11116  03D0                     __end_of_scale:	
 11117                           
 11118                           	psect	text9
 11119  2B69                     __ptext9:	
 11120 ;; *************** function _isdigit *****************
 11121 ;; Defined at:
 11122 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11123 ;; Parameters:    Size  Location     Type
 11124 ;;  c               1    wreg     unsigned char 
 11125 ;; Auto vars:     Size  Location     Type
 11126 ;;  c               1    3[COMMON] unsigned char 
 11127 ;; Return value:  Size  Location     Type
 11128 ;;		None               void
 11129 ;; Registers used:
 11130 ;;		wreg, status,2, status,0
 11131 ;; Tracked objects:
 11132 ;;		On entry : 0/0
 11133 ;;		On exit  : 0/0
 11134 ;;		Unchanged: 0/0
 11135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11137 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11140 ;;Total ram usage:        2 bytes
 11141 ;; Hardware stack levels used:    1
 11142 ;; Hardware stack levels required when called:    2
 11143 ;; This function calls:
 11144 ;;		Nothing
 11145 ;; This function is called by:
 11146 ;;		_sprintf
 11147 ;; This function uses a non-reentrant model
 11148 ;;
 11149                           
 11150                           
 11151                           ;psect for function _isdigit
 11152  2B69                     _isdigit:	
 11153                           
 11154                           ;incstack = 0
 11155                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11156                           ;isdigit@c stored from wreg
 11157  2B69  00F3               	movwf	isdigit@c
 11158  2B6A  01F2               	clrf	_isdigit$1757
 11159  2B6B  303A               	movlw	58
 11160  2B6C  0273               	subwf	isdigit@c,w
 11161  2B6D  1803               	skipnc
 11162  2B6E  2B75               	goto	l7058
 11163  2B6F  3030               	movlw	48
 11164  2B70  0273               	subwf	isdigit@c,w
 11165  2B71  1C03               	skipc
 11166  2B72  2B75               	goto	l7058
 11167  2B73  01F2               	clrf	_isdigit$1757
 11168  2B74  0AF2               	incf	_isdigit$1757,f
 11169  2B75                     l7058:	
 11170  2B75  0C72               	rrf	_isdigit$1757,w
 11171  2B76  0008               	return
 11172  2B77                     __end_of_isdigit:	
 11173                           
 11174                           	psect	text10
 11175  15F7                     __ptext10:	
 11176 ;; *************** function _fround *****************
 11177 ;; Defined at:
 11178 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11179 ;; Parameters:    Size  Location     Type
 11180 ;;  prec            1    wreg     unsigned char 
 11181 ;; Auto vars:     Size  Location     Type
 11182 ;;  prec            1   28[BANK1 ] unsigned char 
 11183 ;; Return value:  Size  Location     Type
 11184 ;;                  4   76[BANK0 ] unsigned char 
 11185 ;; Registers used:
 11186 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11187 ;; Tracked objects:
 11188 ;;		On entry : 0/0
 11189 ;;		On exit  : 0/0
 11190 ;;		Unchanged: 0/0
 11191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11192 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11193 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11194 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11195 ;;      Totals:         0       4      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11196 ;;Total ram usage:       33 bytes
 11197 ;; Hardware stack levels used:    1
 11198 ;; Hardware stack levels required when called:    4
 11199 ;; This function calls:
 11200 ;;		___awdiv
 11201 ;;		___awmod
 11202 ;;		___flmul
 11203 ;; This function is called by:
 11204 ;;		_sprintf
 11205 ;; This function uses a non-reentrant model
 11206 ;;
 11207                           
 11208                           
 11209                           ;psect for function _fround
 11210  15F7                     _fround:	
 11211                           
 11212                           ;incstack = 0
 11213                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11214                           ;fround@prec stored from wreg
 11215  15F7  0021               	movlb	1	; select bank1
 11216  15F8  00BC               	movwf	fround@prec^(0+128)
 11217                           
 11218                           ;doprnt.c: 413: if(prec>=110)
 11219  15F9  306E               	movlw	110
 11220  15FA  023C               	subwf	fround@prec^(0+128),w
 11221  15FB  1C03               	skipc
 11222  15FC  2F16               	goto	l6998
 11223                           
 11224                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11225  15FD  300A               	movlw	10
 11226  15FE  0020               	movlb	0	; select bank0
 11227  15FF  00A0               	movwf	___awdiv@divisor
 11228  1600  3000               	movlw	0
 11229  1601  00A1               	movwf	___awdiv@divisor+1
 11230  1602  0021               	movlb	1	; select bank1
 11231  1603  083C               	movf	fround@prec^(0+128),w
 11232  1604  00A0               	movwf	??_fround^(0+128)
 11233  1605  01A1               	clrf	(??_fround^(0+128)+1)
 11234  1606  0820               	movf	??_fround^(0+128),w
 11235  1607  00F4               	movwf	___awmod@dividend
 11236  1608  0821               	movf	(??_fround+1)^(0+128),w
 11237  1609  00F5               	movwf	___awmod@dividend+1
 11238  160A  3064               	movlw	100
 11239  160B  00F2               	movwf	___awmod@divisor
 11240  160C  3000               	movlw	0
 11241  160D  00F3               	movwf	___awmod@divisor+1
 11242  160E  31AE  2621  3195   	fcall	___awmod
 11243  1611  0873               	movf	?___awmod+1,w
 11244  1612  0020               	movlb	0	; select bank0
 11245  1613  00A3               	movwf	___awdiv@dividend+1
 11246  1614  0872               	movf	?___awmod,w
 11247  1615  00A2               	movwf	___awdiv@dividend
 11248  1616  31AF  2707  3195   	fcall	___awdiv
 11249  1619  0020               	movlb	0	; select bank0
 11250  161A  0820               	movf	?___awdiv,w
 11251  161B  0021               	movlb	1	; select bank1
 11252  161C  00A2               	movwf	(??_fround+2)^(0+128)
 11253  161D  0020               	movlb	0	; select bank0
 11254  161E  0821               	movf	?___awdiv+1,w
 11255  161F  0021               	movlb	1	; select bank1
 11256  1620  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11257  1621  35A2               	lslf	(??_fround+2)^(0+128),f
 11258  1622  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11259  1623  35A2               	lslf	(??_fround+2)^(0+128),f
 11260  1624  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11261  1625  0822               	movf	(??_fround+2)^(0+128),w
 11262  1626  3E24               	addlw	36
 11263  1627  00A4               	movwf	(??_fround+4)^(0+128)
 11264  1628  3000               	movlw	0
 11265  1629  3D23               	addwfc	(??_fround+3)^(0+128),w
 11266  162A  00A5               	movwf	(??_fround+5)^(0+128)
 11267  162B  3034               	movlw	low (__npowers_| (0+32768))
 11268  162C  0724               	addwf	(??_fround+4)^(0+128),w
 11269  162D  0084               	movwf	4
 11270  162E  30B0               	movlw	high (__npowers_| (0+32768))
 11271  162F  3D25               	addwfc	(??_fround+5)^(0+128),w
 11272  1630  0085               	movwf	5
 11273  1631  3F00               	moviw [0]fsr0
 11274  1632  00A6               	movwf	(??_fround+6)^(0+128)
 11275  1633  3F01               	moviw [1]fsr0
 11276  1634  00A7               	movwf	((??_fround+6)^(0+128)+1)
 11277  1635  3F02               	moviw [2]fsr0
 11278  1636  00A8               	movwf	((??_fround+6)^(0+128)+2)
 11279  1637  3F03               	moviw [3]fsr0
 11280  1638  00A9               	movwf	((??_fround+6)^(0+128)+3)
 11281  1639  0829               	movf	(??_fround+9)^(0+128),w
 11282  163A  0020               	movlb	0	; select bank0
 11283  163B  00D5               	movwf	___flmul@b+3
 11284  163C  0021               	movlb	1	; select bank1
 11285  163D  0828               	movf	(??_fround+8)^(0+128),w
 11286  163E  0020               	movlb	0	; select bank0
 11287  163F  00D4               	movwf	___flmul@b+2
 11288  1640  0021               	movlb	1	; select bank1
 11289  1641  0827               	movf	(??_fround+7)^(0+128),w
 11290  1642  0020               	movlb	0	; select bank0
 11291  1643  00D3               	movwf	___flmul@b+1
 11292  1644  0021               	movlb	1	; select bank1
 11293  1645  0826               	movf	(??_fround+6)^(0+128),w
 11294  1646  0020               	movlb	0	; select bank0
 11295  1647  00D2               	movwf	___flmul@b
 11296  1648  3064               	movlw	100
 11297  1649  00A0               	movwf	___awdiv@divisor
 11298  164A  3000               	movlw	0
 11299  164B  00A1               	movwf	___awdiv@divisor+1
 11300  164C  0021               	movlb	1	; select bank1
 11301  164D  083C               	movf	fround@prec^(0+128),w
 11302  164E  00AA               	movwf	(??_fround+10)^(0+128)
 11303  164F  01AB               	clrf	((??_fround+10)^(0+128)+1)
 11304  1650  082A               	movf	(??_fround+10)^(0+128),w
 11305  1651  0020               	movlb	0	; select bank0
 11306  1652  00A2               	movwf	___awdiv@dividend
 11307  1653  0021               	movlb	1	; select bank1
 11308  1654  082B               	movf	(??_fround+11)^(0+128),w
 11309  1655  0020               	movlb	0	; select bank0
 11310  1656  00A3               	movwf	___awdiv@dividend+1
 11311  1657  31AF  2707  3195   	fcall	___awdiv
 11312  165A  0020               	movlb	0	; select bank0
 11313  165B  0820               	movf	?___awdiv,w
 11314  165C  0021               	movlb	1	; select bank1
 11315  165D  00AC               	movwf	(??_fround+12)^(0+128)
 11316  165E  0020               	movlb	0	; select bank0
 11317  165F  0821               	movf	?___awdiv+1,w
 11318  1660  0021               	movlb	1	; select bank1
 11319  1661  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11320  1662  35AC               	lslf	(??_fround+12)^(0+128),f
 11321  1663  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11322  1664  35AC               	lslf	(??_fround+12)^(0+128),f
 11323  1665  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11324  1666  082C               	movf	(??_fround+12)^(0+128),w
 11325  1667  3E48               	addlw	72
 11326  1668  00AE               	movwf	(??_fround+14)^(0+128)
 11327  1669  3000               	movlw	0
 11328  166A  3D2D               	addwfc	(??_fround+13)^(0+128),w
 11329  166B  00AF               	movwf	(??_fround+15)^(0+128)
 11330  166C  3034               	movlw	low (__npowers_| (0+32768))
 11331  166D  072E               	addwf	(??_fround+14)^(0+128),w
 11332  166E  0084               	movwf	4
 11333  166F  30B0               	movlw	high (__npowers_| (0+32768))
 11334  1670  3D2F               	addwfc	(??_fround+15)^(0+128),w
 11335  1671  0085               	movwf	5
 11336  1672  3F00               	moviw [0]fsr0
 11337  1673  00B0               	movwf	(??_fround+16)^(0+128)
 11338  1674  3F01               	moviw [1]fsr0
 11339  1675  00B1               	movwf	((??_fround+16)^(0+128)+1)
 11340  1676  3F02               	moviw [2]fsr0
 11341  1677  00B2               	movwf	((??_fround+16)^(0+128)+2)
 11342  1678  3F03               	moviw [3]fsr0
 11343  1679  00B3               	movwf	((??_fround+16)^(0+128)+3)
 11344  167A  0833               	movf	(??_fround+19)^(0+128),w
 11345  167B  0020               	movlb	0	; select bank0
 11346  167C  00D9               	movwf	___flmul@a+3
 11347  167D  0021               	movlb	1	; select bank1
 11348  167E  0832               	movf	(??_fround+18)^(0+128),w
 11349  167F  0020               	movlb	0	; select bank0
 11350  1680  00D8               	movwf	___flmul@a+2
 11351  1681  0021               	movlb	1	; select bank1
 11352  1682  0831               	movf	(??_fround+17)^(0+128),w
 11353  1683  0020               	movlb	0	; select bank0
 11354  1684  00D7               	movwf	___flmul@a+1
 11355  1685  0021               	movlb	1	; select bank1
 11356  1686  0830               	movf	(??_fround+16)^(0+128),w
 11357  1687  0020               	movlb	0	; select bank0
 11358  1688  00D6               	movwf	___flmul@a
 11359  1689  3183  23D0  3195   	fcall	___flmul
 11360  168C  0020               	movlb	0	; select bank0
 11361  168D  0855               	movf	?___flmul+3,w
 11362  168E  0021               	movlb	1	; select bank1
 11363  168F  00BB               	movwf	(_fround$2148+3)^(0+128)
 11364  1690  0020               	movlb	0	; select bank0
 11365  1691  0854               	movf	?___flmul+2,w
 11366  1692  0021               	movlb	1	; select bank1
 11367  1693  00BA               	movwf	(_fround$2148+2)^(0+128)
 11368  1694  0020               	movlb	0	; select bank0
 11369  1695  0853               	movf	?___flmul+1,w
 11370  1696  0021               	movlb	1	; select bank1
 11371  1697  00B9               	movwf	(_fround$2148+1)^(0+128)
 11372  1698  0020               	movlb	0	; select bank0
 11373  1699  0852               	movf	?___flmul,w
 11374  169A  0021               	movlb	1	; select bank1
 11375  169B  00B8               	movwf	_fround$2148^(0+128)
 11376                           
 11377                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11378  169C  300A               	movlw	10
 11379  169D  00F2               	movwf	___awmod@divisor
 11380  169E  3000               	movlw	0
 11381  169F  00F3               	movwf	___awmod@divisor+1
 11382  16A0  083C               	movf	fround@prec^(0+128),w
 11383  16A1  00A0               	movwf	??_fround^(0+128)
 11384  16A2  01A1               	clrf	(??_fround^(0+128)+1)
 11385  16A3  0820               	movf	??_fround^(0+128),w
 11386  16A4  00F4               	movwf	___awmod@dividend
 11387  16A5  0821               	movf	(??_fround+1)^(0+128),w
 11388  16A6  00F5               	movwf	___awmod@dividend+1
 11389  16A7  31AE  2621  3195   	fcall	___awmod
 11390  16AA  0873               	movf	?___awmod+1,w
 11391  16AB  0085               	movwf	5
 11392  16AC  0872               	movf	?___awmod,w
 11393  16AD  0084               	movwf	4
 11394  16AE  3584               	lslf	4,f
 11395  16AF  0D85               	rlf	5,f
 11396  16B0  3584               	lslf	4,f
 11397  16B1  0D85               	rlf	5,f
 11398  16B2  3034               	movlw	low (__npowers_| (0+32768))
 11399  16B3  0784               	addwf	4,f
 11400  16B4  30B0               	movlw	high (__npowers_| (0+32768))
 11401  16B5  3D85               	addwfc	5,f
 11402  16B6  3F00               	moviw [0]fsr0
 11403  16B7  0021               	movlb	1	; select bank1
 11404  16B8  00A2               	movwf	(??_fround+2)^(0+128)
 11405  16B9  3F01               	moviw [1]fsr0
 11406  16BA  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11407  16BB  3F02               	moviw [2]fsr0
 11408  16BC  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11409  16BD  3F03               	moviw [3]fsr0
 11410  16BE  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11411  16BF  0825               	movf	(??_fround+5)^(0+128),w
 11412  16C0  0020               	movlb	0	; select bank0
 11413  16C1  00D5               	movwf	___flmul@b+3
 11414  16C2  0021               	movlb	1	; select bank1
 11415  16C3  0824               	movf	(??_fround+4)^(0+128),w
 11416  16C4  0020               	movlb	0	; select bank0
 11417  16C5  00D4               	movwf	___flmul@b+2
 11418  16C6  0021               	movlb	1	; select bank1
 11419  16C7  0823               	movf	(??_fround+3)^(0+128),w
 11420  16C8  0020               	movlb	0	; select bank0
 11421  16C9  00D3               	movwf	___flmul@b+1
 11422  16CA  0021               	movlb	1	; select bank1
 11423  16CB  0822               	movf	(??_fround+2)^(0+128),w
 11424  16CC  0020               	movlb	0	; select bank0
 11425  16CD  00D2               	movwf	___flmul@b
 11426  16CE  0021               	movlb	1	; select bank1
 11427  16CF  083B               	movf	(_fround$2148+3)^(0+128),w
 11428  16D0  0020               	movlb	0	; select bank0
 11429  16D1  00D9               	movwf	___flmul@a+3
 11430  16D2  0021               	movlb	1	; select bank1
 11431  16D3  083A               	movf	(_fround$2148+2)^(0+128),w
 11432  16D4  0020               	movlb	0	; select bank0
 11433  16D5  00D8               	movwf	___flmul@a+2
 11434  16D6  0021               	movlb	1	; select bank1
 11435  16D7  0839               	movf	(_fround$2148+1)^(0+128),w
 11436  16D8  0020               	movlb	0	; select bank0
 11437  16D9  00D7               	movwf	___flmul@a+1
 11438  16DA  0021               	movlb	1	; select bank1
 11439  16DB  0838               	movf	_fround$2148^(0+128),w
 11440  16DC  0020               	movlb	0	; select bank0
 11441  16DD  00D6               	movwf	___flmul@a
 11442  16DE  3183  23D0  3195   	fcall	___flmul
 11443  16E1  0020               	movlb	0	; select bank0
 11444  16E2  0855               	movf	?___flmul+3,w
 11445  16E3  0021               	movlb	1	; select bank1
 11446  16E4  00B7               	movwf	(_fround$2149+3)^(0+128)
 11447  16E5  0020               	movlb	0	; select bank0
 11448  16E6  0854               	movf	?___flmul+2,w
 11449  16E7  0021               	movlb	1	; select bank1
 11450  16E8  00B6               	movwf	(_fround$2149+2)^(0+128)
 11451  16E9  0020               	movlb	0	; select bank0
 11452  16EA  0853               	movf	?___flmul+1,w
 11453  16EB  0021               	movlb	1	; select bank1
 11454  16EC  00B5               	movwf	(_fround$2149+1)^(0+128)
 11455  16ED  0020               	movlb	0	; select bank0
 11456  16EE  0852               	movf	?___flmul,w
 11457  16EF  0021               	movlb	1	; select bank1
 11458  16F0  00B4               	movwf	_fround$2149^(0+128)
 11459                           
 11460                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11461  16F1  303F               	movlw	63
 11462  16F2  0020               	movlb	0	; select bank0
 11463  16F3  00D5               	movwf	___flmul@b+3
 11464  16F4  3000               	movlw	0
 11465  16F5  00D4               	movwf	___flmul@b+2
 11466  16F6  3000               	movlw	0
 11467  16F7  00D3               	movwf	___flmul@b+1
 11468  16F8  3000               	movlw	0
 11469  16F9  00D2               	movwf	___flmul@b
 11470  16FA  0021               	movlb	1	; select bank1
 11471  16FB  0837               	movf	(_fround$2149+3)^(0+128),w
 11472  16FC  0020               	movlb	0	; select bank0
 11473  16FD  00D9               	movwf	___flmul@a+3
 11474  16FE  0021               	movlb	1	; select bank1
 11475  16FF  0836               	movf	(_fround$2149+2)^(0+128),w
 11476  1700  0020               	movlb	0	; select bank0
 11477  1701  00D8               	movwf	___flmul@a+2
 11478  1702  0021               	movlb	1	; select bank1
 11479  1703  0835               	movf	(_fround$2149+1)^(0+128),w
 11480  1704  0020               	movlb	0	; select bank0
 11481  1705  00D7               	movwf	___flmul@a+1
 11482  1706  0021               	movlb	1	; select bank1
 11483  1707  0834               	movf	_fround$2149^(0+128),w
 11484  1708  0020               	movlb	0	; select bank0
 11485  1709  00D6               	movwf	___flmul@a
 11486  170A  3183  23D0         	fcall	___flmul
 11487  170C  0020               	movlb	0	; select bank0
 11488  170D  0855               	movf	?___flmul+3,w
 11489  170E  00EF               	movwf	?_fround+3
 11490  170F  0854               	movf	?___flmul+2,w
 11491  1710  00EE               	movwf	?_fround+2
 11492  1711  0853               	movf	?___flmul+1,w
 11493  1712  00ED               	movwf	?_fround+1
 11494  1713  0852               	movf	?___flmul,w
 11495  1714  00EC               	movwf	?_fround
 11496  1715  0008               	return
 11497  1716                     l6998:	
 11498                           
 11499                           ;doprnt.c: 415: else if(prec > 10)
 11500  1716  300B               	movlw	11
 11501  1717  0021               	movlb	1	; select bank1
 11502  1718  023C               	subwf	fround@prec^(0+128),w
 11503  1719  1C03               	skipc
 11504  171A  2FC6               	goto	l7006
 11505                           
 11506                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11507  171B  300A               	movlw	10
 11508  171C  00F2               	movwf	___awmod@divisor
 11509  171D  3000               	movlw	0
 11510  171E  00F3               	movwf	___awmod@divisor+1
 11511  171F  083C               	movf	fround@prec^(0+128),w
 11512  1720  00A0               	movwf	??_fround^(0+128)
 11513  1721  01A1               	clrf	(??_fround^(0+128)+1)
 11514  1722  0820               	movf	??_fround^(0+128),w
 11515  1723  00F4               	movwf	___awmod@dividend
 11516  1724  0821               	movf	(??_fround+1)^(0+128),w
 11517  1725  00F5               	movwf	___awmod@dividend+1
 11518  1726  31AE  2621  3195   	fcall	___awmod
 11519  1729  0873               	movf	?___awmod+1,w
 11520  172A  0085               	movwf	5
 11521  172B  0872               	movf	?___awmod,w
 11522  172C  0084               	movwf	4
 11523  172D  3584               	lslf	4,f
 11524  172E  0D85               	rlf	5,f
 11525  172F  3584               	lslf	4,f
 11526  1730  0D85               	rlf	5,f
 11527  1731  3034               	movlw	low (__npowers_| (0+32768))
 11528  1732  0784               	addwf	4,f
 11529  1733  30B0               	movlw	high (__npowers_| (0+32768))
 11530  1734  3D85               	addwfc	5,f
 11531  1735  3F00               	moviw [0]fsr0
 11532  1736  0021               	movlb	1	; select bank1
 11533  1737  00A2               	movwf	(??_fround+2)^(0+128)
 11534  1738  3F01               	moviw [1]fsr0
 11535  1739  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11536  173A  3F02               	moviw [2]fsr0
 11537  173B  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11538  173C  3F03               	moviw [3]fsr0
 11539  173D  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11540  173E  0825               	movf	(??_fround+5)^(0+128),w
 11541  173F  0020               	movlb	0	; select bank0
 11542  1740  00D5               	movwf	___flmul@b+3
 11543  1741  0021               	movlb	1	; select bank1
 11544  1742  0824               	movf	(??_fround+4)^(0+128),w
 11545  1743  0020               	movlb	0	; select bank0
 11546  1744  00D4               	movwf	___flmul@b+2
 11547  1745  0021               	movlb	1	; select bank1
 11548  1746  0823               	movf	(??_fround+3)^(0+128),w
 11549  1747  0020               	movlb	0	; select bank0
 11550  1748  00D3               	movwf	___flmul@b+1
 11551  1749  0021               	movlb	1	; select bank1
 11552  174A  0822               	movf	(??_fround+2)^(0+128),w
 11553  174B  0020               	movlb	0	; select bank0
 11554  174C  00D2               	movwf	___flmul@b
 11555  174D  300A               	movlw	10
 11556  174E  00A0               	movwf	___awdiv@divisor
 11557  174F  3000               	movlw	0
 11558  1750  00A1               	movwf	___awdiv@divisor+1
 11559  1751  0021               	movlb	1	; select bank1
 11560  1752  083C               	movf	fround@prec^(0+128),w
 11561  1753  00A6               	movwf	(??_fround+6)^(0+128)
 11562  1754  01A7               	clrf	((??_fround+6)^(0+128)+1)
 11563  1755  0826               	movf	(??_fround+6)^(0+128),w
 11564  1756  0020               	movlb	0	; select bank0
 11565  1757  00A2               	movwf	___awdiv@dividend
 11566  1758  0021               	movlb	1	; select bank1
 11567  1759  0827               	movf	(??_fround+7)^(0+128),w
 11568  175A  0020               	movlb	0	; select bank0
 11569  175B  00A3               	movwf	___awdiv@dividend+1
 11570  175C  31AF  2707  3195   	fcall	___awdiv
 11571  175F  0020               	movlb	0	; select bank0
 11572  1760  0820               	movf	?___awdiv,w
 11573  1761  0021               	movlb	1	; select bank1
 11574  1762  00A8               	movwf	(??_fround+8)^(0+128)
 11575  1763  0020               	movlb	0	; select bank0
 11576  1764  0821               	movf	?___awdiv+1,w
 11577  1765  0021               	movlb	1	; select bank1
 11578  1766  00A9               	movwf	((??_fround+8)^(0+128)+1)
 11579  1767  35A8               	lslf	(??_fround+8)^(0+128),f
 11580  1768  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11581  1769  35A8               	lslf	(??_fround+8)^(0+128),f
 11582  176A  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11583  176B  0828               	movf	(??_fround+8)^(0+128),w
 11584  176C  3E24               	addlw	36
 11585  176D  00AA               	movwf	(??_fround+10)^(0+128)
 11586  176E  3000               	movlw	0
 11587  176F  3D29               	addwfc	(??_fround+9)^(0+128),w
 11588  1770  00AB               	movwf	(??_fround+11)^(0+128)
 11589  1771  3034               	movlw	low (__npowers_| (0+32768))
 11590  1772  072A               	addwf	(??_fround+10)^(0+128),w
 11591  1773  0084               	movwf	4
 11592  1774  30B0               	movlw	high (__npowers_| (0+32768))
 11593  1775  3D2B               	addwfc	(??_fround+11)^(0+128),w
 11594  1776  0085               	movwf	5
 11595  1777  3F00               	moviw [0]fsr0
 11596  1778  00AC               	movwf	(??_fround+12)^(0+128)
 11597  1779  3F01               	moviw [1]fsr0
 11598  177A  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11599  177B  3F02               	moviw [2]fsr0
 11600  177C  00AE               	movwf	((??_fround+12)^(0+128)+2)
 11601  177D  3F03               	moviw [3]fsr0
 11602  177E  00AF               	movwf	((??_fround+12)^(0+128)+3)
 11603  177F  082F               	movf	(??_fround+15)^(0+128),w
 11604  1780  0020               	movlb	0	; select bank0
 11605  1781  00D9               	movwf	___flmul@a+3
 11606  1782  0021               	movlb	1	; select bank1
 11607  1783  082E               	movf	(??_fround+14)^(0+128),w
 11608  1784  0020               	movlb	0	; select bank0
 11609  1785  00D8               	movwf	___flmul@a+2
 11610  1786  0021               	movlb	1	; select bank1
 11611  1787  082D               	movf	(??_fround+13)^(0+128),w
 11612  1788  0020               	movlb	0	; select bank0
 11613  1789  00D7               	movwf	___flmul@a+1
 11614  178A  0021               	movlb	1	; select bank1
 11615  178B  082C               	movf	(??_fround+12)^(0+128),w
 11616  178C  0020               	movlb	0	; select bank0
 11617  178D  00D6               	movwf	___flmul@a
 11618  178E  3183  23D0  3195   	fcall	___flmul
 11619  1791  0020               	movlb	0	; select bank0
 11620  1792  0855               	movf	?___flmul+3,w
 11621  1793  0021               	movlb	1	; select bank1
 11622  1794  00BB               	movwf	(_fround$2148+3)^(0+128)
 11623  1795  0020               	movlb	0	; select bank0
 11624  1796  0854               	movf	?___flmul+2,w
 11625  1797  0021               	movlb	1	; select bank1
 11626  1798  00BA               	movwf	(_fround$2148+2)^(0+128)
 11627  1799  0020               	movlb	0	; select bank0
 11628  179A  0853               	movf	?___flmul+1,w
 11629  179B  0021               	movlb	1	; select bank1
 11630  179C  00B9               	movwf	(_fround$2148+1)^(0+128)
 11631  179D  0020               	movlb	0	; select bank0
 11632  179E  0852               	movf	?___flmul,w
 11633  179F  0021               	movlb	1	; select bank1
 11634  17A0  00B8               	movwf	_fround$2148^(0+128)
 11635                           
 11636                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11637  17A1  303F               	movlw	63
 11638  17A2  0020               	movlb	0	; select bank0
 11639  17A3  00D5               	movwf	___flmul@b+3
 11640  17A4  3000               	movlw	0
 11641  17A5  00D4               	movwf	___flmul@b+2
 11642  17A6  3000               	movlw	0
 11643  17A7  00D3               	movwf	___flmul@b+1
 11644  17A8  3000               	movlw	0
 11645  17A9  00D2               	movwf	___flmul@b
 11646  17AA  0021               	movlb	1	; select bank1
 11647  17AB  083B               	movf	(_fround$2148+3)^(0+128),w
 11648  17AC  0020               	movlb	0	; select bank0
 11649  17AD  00D9               	movwf	___flmul@a+3
 11650  17AE  0021               	movlb	1	; select bank1
 11651  17AF  083A               	movf	(_fround$2148+2)^(0+128),w
 11652  17B0  0020               	movlb	0	; select bank0
 11653  17B1  00D8               	movwf	___flmul@a+2
 11654  17B2  0021               	movlb	1	; select bank1
 11655  17B3  0839               	movf	(_fround$2148+1)^(0+128),w
 11656  17B4  0020               	movlb	0	; select bank0
 11657  17B5  00D7               	movwf	___flmul@a+1
 11658  17B6  0021               	movlb	1	; select bank1
 11659  17B7  0838               	movf	_fround$2148^(0+128),w
 11660  17B8  0020               	movlb	0	; select bank0
 11661  17B9  00D6               	movwf	___flmul@a
 11662  17BA  3183  23D0         	fcall	___flmul
 11663  17BC  0020               	movlb	0	; select bank0
 11664  17BD  0855               	movf	?___flmul+3,w
 11665  17BE  00EF               	movwf	?_fround+3
 11666  17BF  0854               	movf	?___flmul+2,w
 11667  17C0  00EE               	movwf	?_fround+2
 11668  17C1  0853               	movf	?___flmul+1,w
 11669  17C2  00ED               	movwf	?_fround+1
 11670  17C3  0852               	movf	?___flmul,w
 11671  17C4  00EC               	movwf	?_fround
 11672  17C5  0008               	return
 11673  17C6                     l7006:	
 11674                           
 11675                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11676  17C6  303F               	movlw	63
 11677  17C7  0020               	movlb	0	; select bank0
 11678  17C8  00D5               	movwf	___flmul@b+3
 11679  17C9  3000               	movlw	0
 11680  17CA  00D4               	movwf	___flmul@b+2
 11681  17CB  3000               	movlw	0
 11682  17CC  00D3               	movwf	___flmul@b+1
 11683  17CD  3000               	movlw	0
 11684  17CE  00D2               	movwf	___flmul@b
 11685  17CF  0021               	movlb	1	; select bank1
 11686  17D0  083C               	movf	fround@prec^(0+128),w
 11687  17D1  00A0               	movwf	??_fround^(0+128)
 11688  17D2  01A1               	clrf	(??_fround^(0+128)+1)
 11689  17D3  35A0               	lslf	??_fround^(0+128),f
 11690  17D4  0DA1               	rlf	(??_fround^(0+128)+1),f
 11691  17D5  35A0               	lslf	??_fround^(0+128),f
 11692  17D6  0DA1               	rlf	(??_fround^(0+128)+1),f
 11693  17D7  3034               	movlw	low (__npowers_| (0+32768))
 11694  17D8  0720               	addwf	??_fround^(0+128),w
 11695  17D9  0084               	movwf	4
 11696  17DA  30B0               	movlw	high (__npowers_| (0+32768))
 11697  17DB  3D21               	addwfc	(??_fround+1)^(0+128),w
 11698  17DC  0085               	movwf	5
 11699  17DD  3F00               	moviw [0]fsr0
 11700  17DE  00A2               	movwf	(??_fround+2)^(0+128)
 11701  17DF  3F01               	moviw [1]fsr0
 11702  17E0  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11703  17E1  3F02               	moviw [2]fsr0
 11704  17E2  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11705  17E3  3F03               	moviw [3]fsr0
 11706  17E4  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11707  17E5  0825               	movf	(??_fround+5)^(0+128),w
 11708  17E6  0020               	movlb	0	; select bank0
 11709  17E7  00D9               	movwf	___flmul@a+3
 11710  17E8  0021               	movlb	1	; select bank1
 11711  17E9  0824               	movf	(??_fround+4)^(0+128),w
 11712  17EA  0020               	movlb	0	; select bank0
 11713  17EB  00D8               	movwf	___flmul@a+2
 11714  17EC  0021               	movlb	1	; select bank1
 11715  17ED  0823               	movf	(??_fround+3)^(0+128),w
 11716  17EE  0020               	movlb	0	; select bank0
 11717  17EF  00D7               	movwf	___flmul@a+1
 11718  17F0  0021               	movlb	1	; select bank1
 11719  17F1  0822               	movf	(??_fround+2)^(0+128),w
 11720  17F2  0020               	movlb	0	; select bank0
 11721  17F3  00D6               	movwf	___flmul@a
 11722  17F4  3183  23D0         	fcall	___flmul
 11723  17F6  0020               	movlb	0	; select bank0
 11724  17F7  0855               	movf	?___flmul+3,w
 11725  17F8  00EF               	movwf	?_fround+3
 11726  17F9  0854               	movf	?___flmul+2,w
 11727  17FA  00EE               	movwf	?_fround+2
 11728  17FB  0853               	movf	?___flmul+1,w
 11729  17FC  00ED               	movwf	?_fround+1
 11730  17FD  0852               	movf	?___flmul,w
 11731  17FE  00EC               	movwf	?_fround
 11732  17FF  0008               	return
 11733  1800                     __end_of_fround:	
 11734                           
 11735                           	psect	text11
 11736  2E21                     __ptext11:	
 11737 ;; *************** function ___awmod *****************
 11738 ;; Defined at:
 11739 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;  divisor         2    2[COMMON] int 
 11742 ;;  dividend        2    4[COMMON] int 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  sign            1    8[COMMON] unsigned char 
 11745 ;;  counter         1    7[COMMON] unsigned char 
 11746 ;; Return value:  Size  Location     Type
 11747 ;;                  2    2[COMMON] int 
 11748 ;; Registers used:
 11749 ;;		wreg, status,2, status,0
 11750 ;; Tracked objects:
 11751 ;;		On entry : 0/0
 11752 ;;		On exit  : 0/0
 11753 ;;		Unchanged: 0/0
 11754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11755 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11758 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11759 ;;Total ram usage:        7 bytes
 11760 ;; Hardware stack levels used:    1
 11761 ;; Hardware stack levels required when called:    2
 11762 ;; This function calls:
 11763 ;;		Nothing
 11764 ;; This function is called by:
 11765 ;;		_fround
 11766 ;;		_scale
 11767 ;; This function uses a non-reentrant model
 11768 ;;
 11769                           
 11770                           
 11771                           ;psect for function ___awmod
 11772  2E21                     ___awmod:	
 11773                           
 11774                           ;incstack = 0
 11775                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11776  2E21  01F8               	clrf	___awmod@sign
 11777  2E22  1FF5               	btfss	___awmod@dividend+1,7
 11778  2E23  2E2B               	goto	l6578
 11779  2E24  09F4               	comf	___awmod@dividend,f
 11780  2E25  09F5               	comf	___awmod@dividend+1,f
 11781  2E26  0AF4               	incf	___awmod@dividend,f
 11782  2E27  1903               	skipnz
 11783  2E28  0AF5               	incf	___awmod@dividend+1,f
 11784  2E29  01F8               	clrf	___awmod@sign
 11785  2E2A  0AF8               	incf	___awmod@sign,f
 11786  2E2B                     l6578:	
 11787  2E2B  1FF3               	btfss	___awmod@divisor+1,7
 11788  2E2C  2E32               	goto	l6582
 11789  2E2D  09F2               	comf	___awmod@divisor,f
 11790  2E2E  09F3               	comf	___awmod@divisor+1,f
 11791  2E2F  0AF2               	incf	___awmod@divisor,f
 11792  2E30  1903               	skipnz
 11793  2E31  0AF3               	incf	___awmod@divisor+1,f
 11794  2E32                     l6582:	
 11795  2E32  0872               	movf	___awmod@divisor,w
 11796  2E33  0473               	iorwf	___awmod@divisor+1,w
 11797  2E34  1903               	btfsc	3,2
 11798  2E35  2E59               	goto	l6600
 11799  2E36  01F7               	clrf	___awmod@counter
 11800  2E37  0AF7               	incf	___awmod@counter,f
 11801  2E38                     l6590:	
 11802  2E38  1BF3               	btfsc	___awmod@divisor+1,7
 11803  2E39  2E44               	goto	l6592
 11804  2E3A  3001               	movlw	1
 11805  2E3B                     u8515:	
 11806  2E3B  35F2               	lslf	___awmod@divisor,f
 11807  2E3C  0DF3               	rlf	___awmod@divisor+1,f
 11808  2E3D  0B89               	decfsz	9,f
 11809  2E3E  2E3B               	goto	u8515
 11810  2E3F  3001               	movlw	1
 11811  2E40  00F6               	movwf	??___awmod
 11812  2E41  0876               	movf	??___awmod,w
 11813  2E42  07F7               	addwf	___awmod@counter,f
 11814  2E43  2E38               	goto	l6590
 11815  2E44                     l6592:	
 11816  2E44  0873               	movf	___awmod@divisor+1,w
 11817  2E45  0275               	subwf	___awmod@dividend+1,w
 11818  2E46  1D03               	skipz
 11819  2E47  2E4A               	goto	u8535
 11820  2E48  0872               	movf	___awmod@divisor,w
 11821  2E49  0274               	subwf	___awmod@dividend,w
 11822  2E4A                     u8535:	
 11823  2E4A  1C03               	skipc
 11824  2E4B  2E50               	goto	l6596
 11825  2E4C  0872               	movf	___awmod@divisor,w
 11826  2E4D  02F4               	subwf	___awmod@dividend,f
 11827  2E4E  0873               	movf	___awmod@divisor+1,w
 11828  2E4F  3BF5               	subwfb	___awmod@dividend+1,f
 11829  2E50                     l6596:	
 11830  2E50  3001               	movlw	1
 11831  2E51                     u8545:	
 11832  2E51  36F3               	lsrf	___awmod@divisor+1,f
 11833  2E52  0CF2               	rrf	___awmod@divisor,f
 11834  2E53  0B89               	decfsz	9,f
 11835  2E54  2E51               	goto	u8545
 11836  2E55  3001               	movlw	1
 11837  2E56  02F7               	subwf	___awmod@counter,f
 11838  2E57  1D03               	btfss	3,2
 11839  2E58  2E44               	goto	l6592
 11840  2E59                     l6600:	
 11841  2E59  0878               	movf	___awmod@sign,w
 11842  2E5A  1903               	btfsc	3,2
 11843  2E5B  2E61               	goto	l6604
 11844  2E5C  09F4               	comf	___awmod@dividend,f
 11845  2E5D  09F5               	comf	___awmod@dividend+1,f
 11846  2E5E  0AF4               	incf	___awmod@dividend,f
 11847  2E5F  1903               	skipnz
 11848  2E60  0AF5               	incf	___awmod@dividend+1,f
 11849  2E61                     l6604:	
 11850  2E61  0875               	movf	___awmod@dividend+1,w
 11851  2E62  00F3               	movwf	?___awmod+1
 11852  2E63  0874               	movf	___awmod@dividend,w
 11853  2E64  00F2               	movwf	?___awmod
 11854  2E65  0008               	return
 11855  2E66                     __end_of___awmod:	
 11856                           
 11857                           	psect	text12
 11858  2F07                     __ptext12:	
 11859 ;; *************** function ___awdiv *****************
 11860 ;; Defined at:
 11861 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  divisor         2    0[BANK0 ] int 
 11864 ;;  dividend        2    2[BANK0 ] int 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  quotient        2    6[BANK0 ] int 
 11867 ;;  sign            1    5[BANK0 ] unsigned char 
 11868 ;;  counter         1    4[BANK0 ] unsigned char 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  2    0[BANK0 ] int 
 11871 ;; Registers used:
 11872 ;;		wreg, status,2, status,0
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/0
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11878 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11879 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11880 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11881 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11882 ;;Total ram usage:        9 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    2
 11885 ;; This function calls:
 11886 ;;		Nothing
 11887 ;; This function is called by:
 11888 ;;		_fround
 11889 ;;		_scale
 11890 ;;		_sprintf
 11891 ;; This function uses a non-reentrant model
 11892 ;;
 11893                           
 11894                           
 11895                           ;psect for function ___awdiv
 11896  2F07                     ___awdiv:	
 11897                           
 11898                           ;incstack = 0
 11899                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11900  2F07  0020               	movlb	0	; select bank0
 11901  2F08  01A5               	clrf	___awdiv@sign
 11902  2F09  1FA1               	btfss	___awdiv@divisor+1,7
 11903  2F0A  2F12               	goto	l6534
 11904  2F0B  09A0               	comf	___awdiv@divisor,f
 11905  2F0C  09A1               	comf	___awdiv@divisor+1,f
 11906  2F0D  0AA0               	incf	___awdiv@divisor,f
 11907  2F0E  1903               	skipnz
 11908  2F0F  0AA1               	incf	___awdiv@divisor+1,f
 11909  2F10  01A5               	clrf	___awdiv@sign
 11910  2F11  0AA5               	incf	___awdiv@sign,f
 11911  2F12                     l6534:	
 11912  2F12  1FA3               	btfss	___awdiv@dividend+1,7
 11913  2F13  2F1D               	goto	l6540
 11914  2F14  09A2               	comf	___awdiv@dividend,f
 11915  2F15  09A3               	comf	___awdiv@dividend+1,f
 11916  2F16  0AA2               	incf	___awdiv@dividend,f
 11917  2F17  1903               	skipnz
 11918  2F18  0AA3               	incf	___awdiv@dividend+1,f
 11919  2F19  3001               	movlw	1
 11920  2F1A  00F9               	movwf	??___awdiv
 11921  2F1B  0879               	movf	??___awdiv,w
 11922  2F1C  06A5               	xorwf	___awdiv@sign,f
 11923  2F1D                     l6540:	
 11924  2F1D  01A6               	clrf	___awdiv@quotient
 11925  2F1E  01A7               	clrf	___awdiv@quotient+1
 11926  2F1F  0820               	movf	___awdiv@divisor,w
 11927  2F20  0421               	iorwf	___awdiv@divisor+1,w
 11928  2F21  1903               	btfsc	3,2
 11929  2F22  2F4C               	goto	l6562
 11930  2F23  01A4               	clrf	___awdiv@counter
 11931  2F24  0AA4               	incf	___awdiv@counter,f
 11932  2F25                     l6550:	
 11933  2F25  1BA1               	btfsc	___awdiv@divisor+1,7
 11934  2F26  2F31               	goto	l6552
 11935  2F27  3001               	movlw	1
 11936  2F28                     u8415:	
 11937  2F28  35A0               	lslf	___awdiv@divisor,f
 11938  2F29  0DA1               	rlf	___awdiv@divisor+1,f
 11939  2F2A  0B89               	decfsz	9,f
 11940  2F2B  2F28               	goto	u8415
 11941  2F2C  3001               	movlw	1
 11942  2F2D  00F9               	movwf	??___awdiv
 11943  2F2E  0879               	movf	??___awdiv,w
 11944  2F2F  07A4               	addwf	___awdiv@counter,f
 11945  2F30  2F25               	goto	l6550
 11946  2F31                     l6552:	
 11947  2F31  3001               	movlw	1
 11948  2F32                     u8435:	
 11949  2F32  35A6               	lslf	___awdiv@quotient,f
 11950  2F33  0DA7               	rlf	___awdiv@quotient+1,f
 11951  2F34  0B89               	decfsz	9,f
 11952  2F35  2F32               	goto	u8435
 11953  2F36  0821               	movf	___awdiv@divisor+1,w
 11954  2F37  0223               	subwf	___awdiv@dividend+1,w
 11955  2F38  1D03               	skipz
 11956  2F39  2F3C               	goto	u8445
 11957  2F3A  0820               	movf	___awdiv@divisor,w
 11958  2F3B  0222               	subwf	___awdiv@dividend,w
 11959  2F3C                     u8445:	
 11960  2F3C  1C03               	skipc
 11961  2F3D  2F43               	goto	l6558
 11962  2F3E  0820               	movf	___awdiv@divisor,w
 11963  2F3F  02A2               	subwf	___awdiv@dividend,f
 11964  2F40  0821               	movf	___awdiv@divisor+1,w
 11965  2F41  3BA3               	subwfb	___awdiv@dividend+1,f
 11966  2F42  1426               	bsf	___awdiv@quotient,0
 11967  2F43                     l6558:	
 11968  2F43  3001               	movlw	1
 11969  2F44                     u8455:	
 11970  2F44  36A1               	lsrf	___awdiv@divisor+1,f
 11971  2F45  0CA0               	rrf	___awdiv@divisor,f
 11972  2F46  0B89               	decfsz	9,f
 11973  2F47  2F44               	goto	u8455
 11974  2F48  3001               	movlw	1
 11975  2F49  02A4               	subwf	___awdiv@counter,f
 11976  2F4A  1D03               	btfss	3,2
 11977  2F4B  2F31               	goto	l6552
 11978  2F4C                     l6562:	
 11979  2F4C  0825               	movf	___awdiv@sign,w
 11980  2F4D  1903               	btfsc	3,2
 11981  2F4E  2F54               	goto	l6566
 11982  2F4F  09A6               	comf	___awdiv@quotient,f
 11983  2F50  09A7               	comf	___awdiv@quotient+1,f
 11984  2F51  0AA6               	incf	___awdiv@quotient,f
 11985  2F52  1903               	skipnz
 11986  2F53  0AA7               	incf	___awdiv@quotient+1,f
 11987  2F54                     l6566:	
 11988  2F54  0827               	movf	___awdiv@quotient+1,w
 11989  2F55  00A1               	movwf	?___awdiv+1
 11990  2F56  0826               	movf	___awdiv@quotient,w
 11991  2F57  00A0               	movwf	?___awdiv
 11992  2F58  0008               	return
 11993  2F59                     __end_of___awdiv:	
 11994                           
 11995                           	psect	text13
 11996  24A3                     __ptext13:	
 11997 ;; *************** function __tdiv_to_l_ *****************
 11998 ;; Defined at:
 11999 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12000 ;; Parameters:    Size  Location     Type
 12001 ;;  f1              4    2[COMMON] float 
 12002 ;;  f2              4    6[COMMON] float 
 12003 ;; Auto vars:     Size  Location     Type
 12004 ;;  quot            4    4[BANK0 ] unsigned long 
 12005 ;;  exp1            1    9[BANK0 ] unsigned char 
 12006 ;;  cntr            1    8[BANK0 ] unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  4    2[COMMON] unsigned long 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2, status,0
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12016 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12017 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12019 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12020 ;;Total ram usage:       18 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:    2
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_sprintf
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           
 12031                           ;psect for function __tdiv_to_l_
 12032  24A3                     __tdiv_to_l_:	
 12033                           
 12034                           ;incstack = 0
 12035                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 12036  24A3  0872               	movf	__tdiv_to_l_@f1,w
 12037  24A4  0020               	movlb	0	; select bank0
 12038  24A5  00A0               	movwf	??__tdiv_to_l_
 12039  24A6  0873               	movf	__tdiv_to_l_@f1+1,w
 12040  24A7  00A1               	movwf	??__tdiv_to_l_+1
 12041  24A8  0874               	movf	__tdiv_to_l_@f1+2,w
 12042  24A9  00A2               	movwf	??__tdiv_to_l_+2
 12043  24AA  1003               	clrc
 12044  24AB  0D21               	rlf	??__tdiv_to_l_+1,w
 12045  24AC  0D22               	rlf	??__tdiv_to_l_+2,w
 12046  24AD  00A3               	movwf	??__tdiv_to_l_+3
 12047  24AE  0823               	movf	??__tdiv_to_l_+3,w
 12048  24AF  00A9               	movwf	__tdiv_to_l_@exp1
 12049  24B0  0829               	movf	__tdiv_to_l_@exp1,w
 12050  24B1  1D03               	btfss	3,2
 12051  24B2  2CBC               	goto	l7068
 12052  24B3  3000               	movlw	0
 12053  24B4  00F5               	movwf	?__tdiv_to_l_+3
 12054  24B5  3000               	movlw	0
 12055  24B6  00F4               	movwf	?__tdiv_to_l_+2
 12056  24B7  3000               	movlw	0
 12057  24B8  00F3               	movwf	?__tdiv_to_l_+1
 12058  24B9  3000               	movlw	0
 12059  24BA  00F2               	movwf	?__tdiv_to_l_
 12060  24BB  0008               	return
 12061  24BC                     l7068:	
 12062  24BC  0876               	movf	__tdiv_to_l_@f2,w
 12063  24BD  00A0               	movwf	??__tdiv_to_l_
 12064  24BE  0877               	movf	__tdiv_to_l_@f2+1,w
 12065  24BF  00A1               	movwf	??__tdiv_to_l_+1
 12066  24C0  0878               	movf	__tdiv_to_l_@f2+2,w
 12067  24C1  00A2               	movwf	??__tdiv_to_l_+2
 12068  24C2  1003               	clrc
 12069  24C3  0D21               	rlf	??__tdiv_to_l_+1,w
 12070  24C4  0D22               	rlf	??__tdiv_to_l_+2,w
 12071  24C5  00A3               	movwf	??__tdiv_to_l_+3
 12072  24C6  0823               	movf	??__tdiv_to_l_+3,w
 12073  24C7  00A8               	movwf	__tdiv_to_l_@cntr
 12074  24C8  0828               	movf	__tdiv_to_l_@cntr,w
 12075  24C9  1D03               	btfss	3,2
 12076  24CA  2CD4               	goto	l1194
 12077  24CB  3000               	movlw	0
 12078  24CC  00F5               	movwf	?__tdiv_to_l_+3
 12079  24CD  3000               	movlw	0
 12080  24CE  00F4               	movwf	?__tdiv_to_l_+2
 12081  24CF  3000               	movlw	0
 12082  24D0  00F3               	movwf	?__tdiv_to_l_+1
 12083  24D1  3000               	movlw	0
 12084  24D2  00F2               	movwf	?__tdiv_to_l_
 12085  24D3  0008               	return
 12086  24D4                     l1194:	
 12087  24D4  17F3               	bsf	__tdiv_to_l_@f1+1,7
 12088  24D5  30FF               	movlw	255
 12089  24D6  05F2               	andwf	__tdiv_to_l_@f1,f
 12090  24D7  30FF               	movlw	255
 12091  24D8  05F3               	andwf	__tdiv_to_l_@f1+1,f
 12092  24D9  3000               	movlw	0
 12093  24DA  05F4               	andwf	__tdiv_to_l_@f1+2,f
 12094  24DB  17F7               	bsf	__tdiv_to_l_@f2+1,7
 12095  24DC  30FF               	movlw	255
 12096  24DD  05F6               	andwf	__tdiv_to_l_@f2,f
 12097  24DE  30FF               	movlw	255
 12098  24DF  05F7               	andwf	__tdiv_to_l_@f2+1,f
 12099  24E0  3000               	movlw	0
 12100  24E1  05F8               	andwf	__tdiv_to_l_@f2+2,f
 12101  24E2  3000               	movlw	0
 12102  24E3  00A7               	movwf	__tdiv_to_l_@quot+3
 12103  24E4  3000               	movlw	0
 12104  24E5  00A6               	movwf	__tdiv_to_l_@quot+2
 12105  24E6  3000               	movlw	0
 12106  24E7  00A5               	movwf	__tdiv_to_l_@quot+1
 12107  24E8  3000               	movlw	0
 12108  24E9  00A4               	movwf	__tdiv_to_l_@quot
 12109  24EA  307F               	movlw	127
 12110  24EB  02A9               	subwf	__tdiv_to_l_@exp1,f
 12111  24EC  3098               	movlw	152
 12112  24ED  0728               	addwf	__tdiv_to_l_@cntr,w
 12113  24EE  00A0               	movwf	??__tdiv_to_l_
 12114  24EF  0820               	movf	??__tdiv_to_l_,w
 12115  24F0  02A9               	subwf	__tdiv_to_l_@exp1,f
 12116  24F1  3018               	movlw	24
 12117  24F2  00A0               	movwf	??__tdiv_to_l_
 12118  24F3  0820               	movf	??__tdiv_to_l_,w
 12119  24F4  00A8               	movwf	__tdiv_to_l_@cntr
 12120  24F5                     l7082:	
 12121  24F5  3001               	movlw	1
 12122  24F6                     u9425:	
 12123  24F6  35A4               	lslf	__tdiv_to_l_@quot,f
 12124  24F7  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12125  24F8  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12126  24F9  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12127  24FA  0B89               	decfsz	9,f
 12128  24FB  2CF6               	goto	u9425
 12129  24FC  0878               	movf	__tdiv_to_l_@f2+2,w
 12130  24FD  0274               	subwf	__tdiv_to_l_@f1+2,w
 12131  24FE  1D03               	skipz
 12132  24FF  2D06               	goto	u9435
 12133  2500  0877               	movf	__tdiv_to_l_@f2+1,w
 12134  2501  0273               	subwf	__tdiv_to_l_@f1+1,w
 12135  2502  1D03               	skipz
 12136  2503  2D06               	goto	u9435
 12137  2504  0876               	movf	__tdiv_to_l_@f2,w
 12138  2505  0272               	subwf	__tdiv_to_l_@f1,w
 12139  2506                     u9435:	
 12140  2506  1C03               	skipc
 12141  2507  2D0F               	goto	l7090
 12142  2508  0876               	movf	__tdiv_to_l_@f2,w
 12143  2509  02F2               	subwf	__tdiv_to_l_@f1,f
 12144  250A  0877               	movf	__tdiv_to_l_@f2+1,w
 12145  250B  3BF3               	subwfb	__tdiv_to_l_@f1+1,f
 12146  250C  0878               	movf	__tdiv_to_l_@f2+2,w
 12147  250D  3BF4               	subwfb	__tdiv_to_l_@f1+2,f
 12148  250E  1424               	bsf	__tdiv_to_l_@quot,0
 12149  250F                     l7090:	
 12150  250F  3001               	movlw	1
 12151  2510                     u9445:	
 12152  2510  35F2               	lslf	__tdiv_to_l_@f1,f
 12153  2511  0DF3               	rlf	__tdiv_to_l_@f1+1,f
 12154  2512  0DF4               	rlf	__tdiv_to_l_@f1+2,f
 12155  2513  0B89               	decfsz	9,f
 12156  2514  2D10               	goto	u9445
 12157  2515  3001               	movlw	1
 12158  2516  02A8               	subwf	__tdiv_to_l_@cntr,f
 12159  2517  1D03               	btfss	3,2
 12160  2518  2CF5               	goto	l7082
 12161  2519  1FA9               	btfss	__tdiv_to_l_@exp1,7
 12162  251A  2D37               	goto	l7102
 12163  251B  0829               	movf	__tdiv_to_l_@exp1,w
 12164  251C  3A80               	xorlw	128
 12165  251D  3E97               	addlw	151
 12166  251E  1803               	skipnc
 12167  251F  2D29               	goto	l7100
 12168  2520  3000               	movlw	0
 12169  2521  00F5               	movwf	?__tdiv_to_l_+3
 12170  2522  3000               	movlw	0
 12171  2523  00F4               	movwf	?__tdiv_to_l_+2
 12172  2524  3000               	movlw	0
 12173  2525  00F3               	movwf	?__tdiv_to_l_+1
 12174  2526  3000               	movlw	0
 12175  2527  00F2               	movwf	?__tdiv_to_l_
 12176  2528  0008               	return
 12177  2529                     l7100:	
 12178  2529  3001               	movlw	1
 12179  252A                     u9485:	
 12180  252A  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 12181  252B  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 12182  252C  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 12183  252D  0CA4               	rrf	__tdiv_to_l_@quot,f
 12184  252E  0B89               	decfsz	9,f
 12185  252F  2D2A               	goto	u9485
 12186  2530  3001               	movlw	1
 12187  2531  00A0               	movwf	??__tdiv_to_l_
 12188  2532  0820               	movf	??__tdiv_to_l_,w
 12189  2533  07A9               	addwf	__tdiv_to_l_@exp1,f
 12190  2534  1903               	btfsc	3,2
 12191  2535  2D50               	goto	l7110
 12192  2536  2D29               	goto	l7100
 12193  2537                     l7102:	
 12194  2537  3018               	movlw	24
 12195  2538  0229               	subwf	__tdiv_to_l_@exp1,w
 12196  2539  1C03               	skipc
 12197  253A  2D4D               	goto	l1204
 12198  253B  3000               	movlw	0
 12199  253C  00F5               	movwf	?__tdiv_to_l_+3
 12200  253D  3000               	movlw	0
 12201  253E  00F4               	movwf	?__tdiv_to_l_+2
 12202  253F  3000               	movlw	0
 12203  2540  00F3               	movwf	?__tdiv_to_l_+1
 12204  2541  3000               	movlw	0
 12205  2542  00F2               	movwf	?__tdiv_to_l_
 12206  2543  0008               	return
 12207  2544                     l7108:	
 12208  2544  3001               	movlw	1
 12209  2545                     u9515:	
 12210  2545  35A4               	lslf	__tdiv_to_l_@quot,f
 12211  2546  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12212  2547  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12213  2548  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12214  2549  0B89               	decfsz	9,f
 12215  254A  2D45               	goto	u9515
 12216  254B  3001               	movlw	1
 12217  254C  02A9               	subwf	__tdiv_to_l_@exp1,f
 12218  254D                     l1204:	
 12219  254D  0829               	movf	__tdiv_to_l_@exp1,w
 12220  254E  1D03               	btfss	3,2
 12221  254F  2D44               	goto	l7108
 12222  2550                     l7110:	
 12223  2550  0827               	movf	__tdiv_to_l_@quot+3,w
 12224  2551  00F5               	movwf	?__tdiv_to_l_+3
 12225  2552  0826               	movf	__tdiv_to_l_@quot+2,w
 12226  2553  00F4               	movwf	?__tdiv_to_l_+2
 12227  2554  0825               	movf	__tdiv_to_l_@quot+1,w
 12228  2555  00F3               	movwf	?__tdiv_to_l_+1
 12229  2556  0824               	movf	__tdiv_to_l_@quot,w
 12230  2557  00F2               	movwf	?__tdiv_to_l_
 12231  2558  0008               	return
 12232  2559                     __end_of__tdiv_to_l_:	
 12233                           
 12234                           	psect	text14
 12235  2559                     __ptext14:	
 12236 ;; *************** function __div_to_l_ *****************
 12237 ;; Defined at:
 12238 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12239 ;; Parameters:    Size  Location     Type
 12240 ;;  f1              4    2[COMMON] unsigned long 
 12241 ;;  f2              4    6[COMMON] unsigned long 
 12242 ;; Auto vars:     Size  Location     Type
 12243 ;;  quot            4    5[BANK0 ] unsigned long 
 12244 ;;  exp1            1   10[BANK0 ] unsigned char 
 12245 ;;  cntr            1    9[BANK0 ] unsigned char 
 12246 ;; Return value:  Size  Location     Type
 12247 ;;                  4    2[COMMON] unsigned long 
 12248 ;; Registers used:
 12249 ;;		wreg, status,2, status,0
 12250 ;; Tracked objects:
 12251 ;;		On entry : 0/0
 12252 ;;		On exit  : 0/0
 12253 ;;		Unchanged: 0/0
 12254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12255 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12256 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12257 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12258 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;Total ram usage:       19 bytes
 12260 ;; Hardware stack levels used:    1
 12261 ;; Hardware stack levels required when called:    2
 12262 ;; This function calls:
 12263 ;;		Nothing
 12264 ;; This function is called by:
 12265 ;;		_sprintf
 12266 ;; This function uses a non-reentrant model
 12267 ;;
 12268                           
 12269                           
 12270                           ;psect for function __div_to_l_
 12271  2559                     __div_to_l_:	
 12272                           
 12273                           ;incstack = 0
 12274                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 12275  2559  0872               	movf	__div_to_l_@f1,w
 12276  255A  0020               	movlb	0	; select bank0
 12277  255B  00A0               	movwf	??__div_to_l_
 12278  255C  0873               	movf	__div_to_l_@f1+1,w
 12279  255D  00A1               	movwf	??__div_to_l_+1
 12280  255E  0874               	movf	__div_to_l_@f1+2,w
 12281  255F  00A2               	movwf	??__div_to_l_+2
 12282  2560  0875               	movf	__div_to_l_@f1+3,w
 12283  2561  00A3               	movwf	??__div_to_l_+3
 12284  2562  1003               	clrc
 12285  2563  0D22               	rlf	??__div_to_l_+2,w
 12286  2564  0D23               	rlf	??__div_to_l_+3,w
 12287  2565  00A4               	movwf	??__div_to_l_+4
 12288  2566  0824               	movf	??__div_to_l_+4,w
 12289  2567  00AA               	movwf	__div_to_l_@exp1
 12290  2568  082A               	movf	__div_to_l_@exp1,w
 12291  2569  1D03               	btfss	3,2
 12292  256A  2D74               	goto	l7120
 12293  256B  3000               	movlw	0
 12294  256C  00F5               	movwf	?__div_to_l_+3
 12295  256D  3000               	movlw	0
 12296  256E  00F4               	movwf	?__div_to_l_+2
 12297  256F  3000               	movlw	0
 12298  2570  00F3               	movwf	?__div_to_l_+1
 12299  2571  3000               	movlw	0
 12300  2572  00F2               	movwf	?__div_to_l_
 12301  2573  0008               	return
 12302  2574                     l7120:	
 12303  2574  0876               	movf	__div_to_l_@f2,w
 12304  2575  00A0               	movwf	??__div_to_l_
 12305  2576  0877               	movf	__div_to_l_@f2+1,w
 12306  2577  00A1               	movwf	??__div_to_l_+1
 12307  2578  0878               	movf	__div_to_l_@f2+2,w
 12308  2579  00A2               	movwf	??__div_to_l_+2
 12309  257A  0879               	movf	__div_to_l_@f2+3,w
 12310  257B  00A3               	movwf	??__div_to_l_+3
 12311  257C  1003               	clrc
 12312  257D  0D22               	rlf	??__div_to_l_+2,w
 12313  257E  0D23               	rlf	??__div_to_l_+3,w
 12314  257F  00A4               	movwf	??__div_to_l_+4
 12315  2580  0824               	movf	??__div_to_l_+4,w
 12316  2581  00A9               	movwf	__div_to_l_@cntr
 12317  2582  0829               	movf	__div_to_l_@cntr,w
 12318  2583  1D03               	btfss	3,2
 12319  2584  2D8E               	goto	l1152
 12320  2585  3000               	movlw	0
 12321  2586  00F5               	movwf	?__div_to_l_+3
 12322  2587  3000               	movlw	0
 12323  2588  00F4               	movwf	?__div_to_l_+2
 12324  2589  3000               	movlw	0
 12325  258A  00F3               	movwf	?__div_to_l_+1
 12326  258B  3000               	movlw	0
 12327  258C  00F2               	movwf	?__div_to_l_
 12328  258D  0008               	return
 12329  258E                     l1152:	
 12330  258E  17F4               	bsf	__div_to_l_@f1+2,7
 12331  258F  30FF               	movlw	255
 12332  2590  05F2               	andwf	__div_to_l_@f1,f
 12333  2591  30FF               	movlw	255
 12334  2592  05F3               	andwf	__div_to_l_@f1+1,f
 12335  2593  30FF               	movlw	255
 12336  2594  05F4               	andwf	__div_to_l_@f1+2,f
 12337  2595  3000               	movlw	0
 12338  2596  05F5               	andwf	__div_to_l_@f1+3,f
 12339  2597  17F8               	bsf	__div_to_l_@f2+2,7
 12340  2598  30FF               	movlw	255
 12341  2599  05F6               	andwf	__div_to_l_@f2,f
 12342  259A  30FF               	movlw	255
 12343  259B  05F7               	andwf	__div_to_l_@f2+1,f
 12344  259C  30FF               	movlw	255
 12345  259D  05F8               	andwf	__div_to_l_@f2+2,f
 12346  259E  3000               	movlw	0
 12347  259F  05F9               	andwf	__div_to_l_@f2+3,f
 12348  25A0  3000               	movlw	0
 12349  25A1  00A8               	movwf	__div_to_l_@quot+3
 12350  25A2  3000               	movlw	0
 12351  25A3  00A7               	movwf	__div_to_l_@quot+2
 12352  25A4  3000               	movlw	0
 12353  25A5  00A6               	movwf	__div_to_l_@quot+1
 12354  25A6  3000               	movlw	0
 12355  25A7  00A5               	movwf	__div_to_l_@quot
 12356  25A8  307F               	movlw	127
 12357  25A9  02AA               	subwf	__div_to_l_@exp1,f
 12358  25AA  30A0               	movlw	160
 12359  25AB  0729               	addwf	__div_to_l_@cntr,w
 12360  25AC  00A0               	movwf	??__div_to_l_
 12361  25AD  0820               	movf	??__div_to_l_,w
 12362  25AE  02AA               	subwf	__div_to_l_@exp1,f
 12363  25AF  3020               	movlw	32
 12364  25B0  00A0               	movwf	??__div_to_l_
 12365  25B1  0820               	movf	??__div_to_l_,w
 12366  25B2  00A9               	movwf	__div_to_l_@cntr
 12367  25B3                     l7134:	
 12368  25B3  3001               	movlw	1
 12369  25B4                     u9555:	
 12370  25B4  35A5               	lslf	__div_to_l_@quot,f
 12371  25B5  0DA6               	rlf	__div_to_l_@quot+1,f
 12372  25B6  0DA7               	rlf	__div_to_l_@quot+2,f
 12373  25B7  0DA8               	rlf	__div_to_l_@quot+3,f
 12374  25B8  0B89               	decfsz	9,f
 12375  25B9  2DB4               	goto	u9555
 12376  25BA  0879               	movf	__div_to_l_@f2+3,w
 12377  25BB  0275               	subwf	__div_to_l_@f1+3,w
 12378  25BC  1D03               	skipz
 12379  25BD  2DC8               	goto	u9565
 12380  25BE  0878               	movf	__div_to_l_@f2+2,w
 12381  25BF  0274               	subwf	__div_to_l_@f1+2,w
 12382  25C0  1D03               	skipz
 12383  25C1  2DC8               	goto	u9565
 12384  25C2  0877               	movf	__div_to_l_@f2+1,w
 12385  25C3  0273               	subwf	__div_to_l_@f1+1,w
 12386  25C4  1D03               	skipz
 12387  25C5  2DC8               	goto	u9565
 12388  25C6  0876               	movf	__div_to_l_@f2,w
 12389  25C7  0272               	subwf	__div_to_l_@f1,w
 12390  25C8                     u9565:	
 12391  25C8  1C03               	skipc
 12392  25C9  2DD3               	goto	l7142
 12393  25CA  0876               	movf	__div_to_l_@f2,w
 12394  25CB  02F2               	subwf	__div_to_l_@f1,f
 12395  25CC  0877               	movf	__div_to_l_@f2+1,w
 12396  25CD  3BF3               	subwfb	__div_to_l_@f1+1,f
 12397  25CE  0878               	movf	__div_to_l_@f2+2,w
 12398  25CF  3BF4               	subwfb	__div_to_l_@f1+2,f
 12399  25D0  0879               	movf	__div_to_l_@f2+3,w
 12400  25D1  3BF5               	subwfb	__div_to_l_@f1+3,f
 12401  25D2  1425               	bsf	__div_to_l_@quot,0
 12402  25D3                     l7142:	
 12403  25D3  3001               	movlw	1
 12404  25D4                     u9575:	
 12405  25D4  35F2               	lslf	__div_to_l_@f1,f
 12406  25D5  0DF3               	rlf	__div_to_l_@f1+1,f
 12407  25D6  0DF4               	rlf	__div_to_l_@f1+2,f
 12408  25D7  0DF5               	rlf	__div_to_l_@f1+3,f
 12409  25D8  0B89               	decfsz	9,f
 12410  25D9  2DD4               	goto	u9575
 12411  25DA  3001               	movlw	1
 12412  25DB  02A9               	subwf	__div_to_l_@cntr,f
 12413  25DC  1D03               	btfss	3,2
 12414  25DD  2DB3               	goto	l7134
 12415  25DE  1FAA               	btfss	__div_to_l_@exp1,7
 12416  25DF  2DFC               	goto	l7154
 12417  25E0  082A               	movf	__div_to_l_@exp1,w
 12418  25E1  3A80               	xorlw	128
 12419  25E2  3E9F               	addlw	159
 12420  25E3  1803               	skipnc
 12421  25E4  2DEE               	goto	l7152
 12422  25E5  3000               	movlw	0
 12423  25E6  00F5               	movwf	?__div_to_l_+3
 12424  25E7  3000               	movlw	0
 12425  25E8  00F4               	movwf	?__div_to_l_+2
 12426  25E9  3000               	movlw	0
 12427  25EA  00F3               	movwf	?__div_to_l_+1
 12428  25EB  3000               	movlw	0
 12429  25EC  00F2               	movwf	?__div_to_l_
 12430  25ED  0008               	return
 12431  25EE                     l7152:	
 12432  25EE  3001               	movlw	1
 12433  25EF                     u9615:	
 12434  25EF  36A8               	lsrf	__div_to_l_@quot+3,f
 12435  25F0  0CA7               	rrf	__div_to_l_@quot+2,f
 12436  25F1  0CA6               	rrf	__div_to_l_@quot+1,f
 12437  25F2  0CA5               	rrf	__div_to_l_@quot,f
 12438  25F3  0B89               	decfsz	9,f
 12439  25F4  2DEF               	goto	u9615
 12440  25F5  3001               	movlw	1
 12441  25F6  00A0               	movwf	??__div_to_l_
 12442  25F7  0820               	movf	??__div_to_l_,w
 12443  25F8  07AA               	addwf	__div_to_l_@exp1,f
 12444  25F9  1903               	btfsc	3,2
 12445  25FA  2E15               	goto	l7162
 12446  25FB  2DEE               	goto	l7152
 12447  25FC                     l7154:	
 12448  25FC  3020               	movlw	32
 12449  25FD  022A               	subwf	__div_to_l_@exp1,w
 12450  25FE  1C03               	skipc
 12451  25FF  2E12               	goto	l1162
 12452  2600  3000               	movlw	0
 12453  2601  00F5               	movwf	?__div_to_l_+3
 12454  2602  3000               	movlw	0
 12455  2603  00F4               	movwf	?__div_to_l_+2
 12456  2604  3000               	movlw	0
 12457  2605  00F3               	movwf	?__div_to_l_+1
 12458  2606  3000               	movlw	0
 12459  2607  00F2               	movwf	?__div_to_l_
 12460  2608  0008               	return
 12461  2609                     l7160:	
 12462  2609  3001               	movlw	1
 12463  260A                     u9645:	
 12464  260A  35A5               	lslf	__div_to_l_@quot,f
 12465  260B  0DA6               	rlf	__div_to_l_@quot+1,f
 12466  260C  0DA7               	rlf	__div_to_l_@quot+2,f
 12467  260D  0DA8               	rlf	__div_to_l_@quot+3,f
 12468  260E  0B89               	decfsz	9,f
 12469  260F  2E0A               	goto	u9645
 12470  2610  3001               	movlw	1
 12471  2611  02AA               	subwf	__div_to_l_@exp1,f
 12472  2612                     l1162:	
 12473  2612  082A               	movf	__div_to_l_@exp1,w
 12474  2613  1D03               	btfss	3,2
 12475  2614  2E09               	goto	l7160
 12476  2615                     l7162:	
 12477  2615  0828               	movf	__div_to_l_@quot+3,w
 12478  2616  00F5               	movwf	?__div_to_l_+3
 12479  2617  0827               	movf	__div_to_l_@quot+2,w
 12480  2618  00F4               	movwf	?__div_to_l_+2
 12481  2619  0826               	movf	__div_to_l_@quot+1,w
 12482  261A  00F3               	movwf	?__div_to_l_+1
 12483  261B  0825               	movf	__div_to_l_@quot,w
 12484  261C  00F2               	movwf	?__div_to_l_
 12485  261D  0008               	return
 12486  261E                     __end_of__div_to_l_:	
 12487                           
 12488                           	psect	text15
 12489  2DDE                     __ptext15:	
 12490 ;; *************** function ___llmod *****************
 12491 ;; Defined at:
 12492 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12493 ;; Parameters:    Size  Location     Type
 12494 ;;  divisor         4    6[BANK0 ] unsigned long 
 12495 ;;  dividend        4   10[BANK0 ] unsigned long 
 12496 ;; Auto vars:     Size  Location     Type
 12497 ;;  counter         1   15[BANK0 ] unsigned char 
 12498 ;; Return value:  Size  Location     Type
 12499 ;;                  4    6[BANK0 ] unsigned long 
 12500 ;; Registers used:
 12501 ;;		wreg, status,2, status,0
 12502 ;; Tracked objects:
 12503 ;;		On entry : 0/0
 12504 ;;		On exit  : 0/0
 12505 ;;		Unchanged: 0/0
 12506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12507 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12508 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12509 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12510 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12511 ;;Total ram usage:       10 bytes
 12512 ;; Hardware stack levels used:    1
 12513 ;; Hardware stack levels required when called:    2
 12514 ;; This function calls:
 12515 ;;		Nothing
 12516 ;; This function is called by:
 12517 ;;		_sprintf
 12518 ;; This function uses a non-reentrant model
 12519 ;;
 12520                           
 12521                           
 12522                           ;psect for function ___llmod
 12523  2DDE                     ___llmod:	
 12524                           
 12525                           ;incstack = 0
 12526                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12527  2DDE  0020               	movlb	0	; select bank0
 12528  2DDF  0829               	movf	___llmod@divisor+3,w
 12529  2DE0  0428               	iorwf	___llmod@divisor+2,w
 12530  2DE1  0427               	iorwf	___llmod@divisor+1,w
 12531  2DE2  0426               	iorwf	___llmod@divisor,w
 12532  2DE3  1903               	skipnz
 12533  2DE4  2E18               	goto	l7304
 12534  2DE5  01AF               	clrf	___llmod@counter
 12535  2DE6  0AAF               	incf	___llmod@counter,f
 12536  2DE7                     l7294:	
 12537  2DE7  1BA9               	btfsc	___llmod@divisor+3,7
 12538  2DE8  2DF5               	goto	l7296
 12539  2DE9  3001               	movlw	1
 12540  2DEA                     u9965:	
 12541  2DEA  35A6               	lslf	___llmod@divisor,f
 12542  2DEB  0DA7               	rlf	___llmod@divisor+1,f
 12543  2DEC  0DA8               	rlf	___llmod@divisor+2,f
 12544  2DED  0DA9               	rlf	___llmod@divisor+3,f
 12545  2DEE  0B89               	decfsz	9,f
 12546  2DEF  2DEA               	goto	u9965
 12547  2DF0  3001               	movlw	1
 12548  2DF1  00AE               	movwf	??___llmod
 12549  2DF2  082E               	movf	??___llmod,w
 12550  2DF3  07AF               	addwf	___llmod@counter,f
 12551  2DF4  2DE7               	goto	l7294
 12552  2DF5                     l7296:	
 12553  2DF5  0829               	movf	___llmod@divisor+3,w
 12554  2DF6  022D               	subwf	___llmod@dividend+3,w
 12555  2DF7  1D03               	skipz
 12556  2DF8  2E03               	goto	u9985
 12557  2DF9  0828               	movf	___llmod@divisor+2,w
 12558  2DFA  022C               	subwf	___llmod@dividend+2,w
 12559  2DFB  1D03               	skipz
 12560  2DFC  2E03               	goto	u9985
 12561  2DFD  0827               	movf	___llmod@divisor+1,w
 12562  2DFE  022B               	subwf	___llmod@dividend+1,w
 12563  2DFF  1D03               	skipz
 12564  2E00  2E03               	goto	u9985
 12565  2E01  0826               	movf	___llmod@divisor,w
 12566  2E02  022A               	subwf	___llmod@dividend,w
 12567  2E03                     u9985:	
 12568  2E03  1C03               	skipc
 12569  2E04  2E0D               	goto	l7300
 12570  2E05  0826               	movf	___llmod@divisor,w
 12571  2E06  02AA               	subwf	___llmod@dividend,f
 12572  2E07  0827               	movf	___llmod@divisor+1,w
 12573  2E08  3BAB               	subwfb	___llmod@dividend+1,f
 12574  2E09  0828               	movf	___llmod@divisor+2,w
 12575  2E0A  3BAC               	subwfb	___llmod@dividend+2,f
 12576  2E0B  0829               	movf	___llmod@divisor+3,w
 12577  2E0C  3BAD               	subwfb	___llmod@dividend+3,f
 12578  2E0D                     l7300:	
 12579  2E0D  3001               	movlw	1
 12580  2E0E                     u9995:	
 12581  2E0E  36A9               	lsrf	___llmod@divisor+3,f
 12582  2E0F  0CA8               	rrf	___llmod@divisor+2,f
 12583  2E10  0CA7               	rrf	___llmod@divisor+1,f
 12584  2E11  0CA6               	rrf	___llmod@divisor,f
 12585  2E12  0B89               	decfsz	9,f
 12586  2E13  2E0E               	goto	u9995
 12587  2E14  3001               	movlw	1
 12588  2E15  02AF               	subwf	___llmod@counter,f
 12589  2E16  1D03               	btfss	3,2
 12590  2E17  2DF5               	goto	l7296
 12591  2E18                     l7304:	
 12592  2E18  082D               	movf	___llmod@dividend+3,w
 12593  2E19  00A9               	movwf	?___llmod+3
 12594  2E1A  082C               	movf	___llmod@dividend+2,w
 12595  2E1B  00A8               	movwf	?___llmod+2
 12596  2E1C  082B               	movf	___llmod@dividend+1,w
 12597  2E1D  00A7               	movwf	?___llmod+1
 12598  2E1E  082A               	movf	___llmod@dividend,w
 12599  2E1F  00A6               	movwf	?___llmod
 12600  2E20  0008               	return
 12601  2E21                     __end_of___llmod:	
 12602                           
 12603                           	psect	text16
 12604  2F59                     __ptext16:	
 12605 ;; *************** function ___lldiv *****************
 12606 ;; Defined at:
 12607 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  divisor         4    2[COMMON] unsigned long 
 12610 ;;  dividend        4    6[COMMON] unsigned long 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  quotient        4    1[BANK0 ] unsigned long 
 12613 ;;  counter         1    5[BANK0 ] unsigned char 
 12614 ;; Return value:  Size  Location     Type
 12615 ;;                  4    2[COMMON] unsigned long 
 12616 ;; Registers used:
 12617 ;;		wreg, status,2, status,0
 12618 ;; Tracked objects:
 12619 ;;		On entry : 0/0
 12620 ;;		On exit  : 0/0
 12621 ;;		Unchanged: 0/0
 12622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12623 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12624 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12625 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12626 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12627 ;;Total ram usage:       14 bytes
 12628 ;; Hardware stack levels used:    1
 12629 ;; Hardware stack levels required when called:    2
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_sprintf
 12634 ;; This function uses a non-reentrant model
 12635 ;;
 12636                           
 12637                           
 12638                           ;psect for function ___lldiv
 12639  2F59                     ___lldiv:	
 12640                           
 12641                           ;incstack = 0
 12642                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12643  2F59  3000               	movlw	0
 12644  2F5A  0020               	movlb	0	; select bank0
 12645  2F5B  00A4               	movwf	___lldiv@quotient+3
 12646  2F5C  3000               	movlw	0
 12647  2F5D  00A3               	movwf	___lldiv@quotient+2
 12648  2F5E  3000               	movlw	0
 12649  2F5F  00A2               	movwf	___lldiv@quotient+1
 12650  2F60  3000               	movlw	0
 12651  2F61  00A1               	movwf	___lldiv@quotient
 12652  2F62  0875               	movf	___lldiv@divisor+3,w
 12653  2F63  0474               	iorwf	___lldiv@divisor+2,w
 12654  2F64  0473               	iorwf	___lldiv@divisor+1,w
 12655  2F65  0472               	iorwf	___lldiv@divisor,w
 12656  2F66  1903               	skipnz
 12657  2F67  2FA3               	goto	l7284
 12658  2F68  01A5               	clrf	___lldiv@counter
 12659  2F69  0AA5               	incf	___lldiv@counter,f
 12660  2F6A                     l7270:	
 12661  2F6A  1BF5               	btfsc	___lldiv@divisor+3,7
 12662  2F6B  2F78               	goto	l7272
 12663  2F6C  3001               	movlw	1
 12664  2F6D                     u9895:	
 12665  2F6D  35F2               	lslf	___lldiv@divisor,f
 12666  2F6E  0DF3               	rlf	___lldiv@divisor+1,f
 12667  2F6F  0DF4               	rlf	___lldiv@divisor+2,f
 12668  2F70  0DF5               	rlf	___lldiv@divisor+3,f
 12669  2F71  0B89               	decfsz	9,f
 12670  2F72  2F6D               	goto	u9895
 12671  2F73  3001               	movlw	1
 12672  2F74  00A0               	movwf	??___lldiv
 12673  2F75  0820               	movf	??___lldiv,w
 12674  2F76  07A5               	addwf	___lldiv@counter,f
 12675  2F77  2F6A               	goto	l7270
 12676  2F78                     l7272:	
 12677  2F78  3001               	movlw	1
 12678  2F79                     u9915:	
 12679  2F79  35A1               	lslf	___lldiv@quotient,f
 12680  2F7A  0DA2               	rlf	___lldiv@quotient+1,f
 12681  2F7B  0DA3               	rlf	___lldiv@quotient+2,f
 12682  2F7C  0DA4               	rlf	___lldiv@quotient+3,f
 12683  2F7D  0B89               	decfsz	9,f
 12684  2F7E  2F79               	goto	u9915
 12685  2F7F  0875               	movf	___lldiv@divisor+3,w
 12686  2F80  0279               	subwf	___lldiv@dividend+3,w
 12687  2F81  1D03               	skipz
 12688  2F82  2F8D               	goto	u9925
 12689  2F83  0874               	movf	___lldiv@divisor+2,w
 12690  2F84  0278               	subwf	___lldiv@dividend+2,w
 12691  2F85  1D03               	skipz
 12692  2F86  2F8D               	goto	u9925
 12693  2F87  0873               	movf	___lldiv@divisor+1,w
 12694  2F88  0277               	subwf	___lldiv@dividend+1,w
 12695  2F89  1D03               	skipz
 12696  2F8A  2F8D               	goto	u9925
 12697  2F8B  0872               	movf	___lldiv@divisor,w
 12698  2F8C  0276               	subwf	___lldiv@dividend,w
 12699  2F8D                     u9925:	
 12700  2F8D  1C03               	skipc
 12701  2F8E  2F98               	goto	l7280
 12702  2F8F  0872               	movf	___lldiv@divisor,w
 12703  2F90  02F6               	subwf	___lldiv@dividend,f
 12704  2F91  0873               	movf	___lldiv@divisor+1,w
 12705  2F92  3BF7               	subwfb	___lldiv@dividend+1,f
 12706  2F93  0874               	movf	___lldiv@divisor+2,w
 12707  2F94  3BF8               	subwfb	___lldiv@dividend+2,f
 12708  2F95  0875               	movf	___lldiv@divisor+3,w
 12709  2F96  3BF9               	subwfb	___lldiv@dividend+3,f
 12710  2F97  1421               	bsf	___lldiv@quotient,0
 12711  2F98                     l7280:	
 12712  2F98  3001               	movlw	1
 12713  2F99                     u9935:	
 12714  2F99  36F5               	lsrf	___lldiv@divisor+3,f
 12715  2F9A  0CF4               	rrf	___lldiv@divisor+2,f
 12716  2F9B  0CF3               	rrf	___lldiv@divisor+1,f
 12717  2F9C  0CF2               	rrf	___lldiv@divisor,f
 12718  2F9D  0B89               	decfsz	9,f
 12719  2F9E  2F99               	goto	u9935
 12720  2F9F  3001               	movlw	1
 12721  2FA0  02A5               	subwf	___lldiv@counter,f
 12722  2FA1  1D03               	btfss	3,2
 12723  2FA2  2F78               	goto	l7272
 12724  2FA3                     l7284:	
 12725  2FA3  0824               	movf	___lldiv@quotient+3,w
 12726  2FA4  00F5               	movwf	?___lldiv+3
 12727  2FA5  0823               	movf	___lldiv@quotient+2,w
 12728  2FA6  00F4               	movwf	?___lldiv+2
 12729  2FA7  0822               	movf	___lldiv@quotient+1,w
 12730  2FA8  00F3               	movwf	?___lldiv+1
 12731  2FA9  0821               	movf	___lldiv@quotient,w
 12732  2FAA  00F2               	movwf	?___lldiv
 12733  2FAB  0008               	return
 12734  2FAC                     __end_of___lldiv:	
 12735                           
 12736                           	psect	text17
 12737  2C02                     __ptext17:	
 12738 ;; *************** function ___flsub *****************
 12739 ;; Defined at:
 12740 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12741 ;; Parameters:    Size  Location     Type
 12742 ;;  a               4   53[BANK1 ] unsigned long 
 12743 ;;  b               4   57[BANK1 ] unsigned long 
 12744 ;; Auto vars:     Size  Location     Type
 12745 ;;		None
 12746 ;; Return value:  Size  Location     Type
 12747 ;;                  4   53[BANK1 ] unsigned long 
 12748 ;; Registers used:
 12749 ;;		wreg, status,2, status,0, pclath, cstack
 12750 ;; Tracked objects:
 12751 ;;		On entry : 0/0
 12752 ;;		On exit  : 0/0
 12753 ;;		Unchanged: 0/0
 12754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12755 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12758 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12759 ;;Total ram usage:        8 bytes
 12760 ;; Hardware stack levels used:    1
 12761 ;; Hardware stack levels required when called:    3
 12762 ;; This function calls:
 12763 ;;		___fladd
 12764 ;; This function is called by:
 12765 ;;		_sprintf
 12766 ;; This function uses a non-reentrant model
 12767 ;;
 12768                           
 12769                           
 12770                           ;psect for function ___flsub
 12771  2C02                     ___flsub:	
 12772                           
 12773                           ;incstack = 0
 12774                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12775  2C02  3080               	movlw	128
 12776  2C03  0021               	movlb	1	; select bank1
 12777  2C04  06D8               	xorwf	(___flsub@a+3)^(0+128),f
 12778  2C05  085C               	movf	(___flsub@b+3)^(0+128),w
 12779  2C06  00C0               	movwf	(___fladd@b+3)^(0+128)
 12780  2C07  085B               	movf	(___flsub@b+2)^(0+128),w
 12781  2C08  00BF               	movwf	(___fladd@b+2)^(0+128)
 12782  2C09  085A               	movf	(___flsub@b+1)^(0+128),w
 12783  2C0A  00BE               	movwf	(___fladd@b+1)^(0+128)
 12784  2C0B  0859               	movf	___flsub@b^(0+128),w
 12785  2C0C  00BD               	movwf	___fladd@b^(0+128)
 12786  2C0D  0858               	movf	(___flsub@a+3)^(0+128),w
 12787  2C0E  00C4               	movwf	(___fladd@a+3)^(0+128)
 12788  2C0F  0857               	movf	(___flsub@a+2)^(0+128),w
 12789  2C10  00C3               	movwf	(___fladd@a+2)^(0+128)
 12790  2C11  0856               	movf	(___flsub@a+1)^(0+128),w
 12791  2C12  00C2               	movwf	(___fladd@a+1)^(0+128)
 12792  2C13  0855               	movf	___flsub@a^(0+128),w
 12793  2C14  00C1               	movwf	___fladd@a^(0+128)
 12794  2C15  3185  25FC         	fcall	___fladd
 12795  2C17  0021               	movlb	1	; select bank1
 12796  2C18  0840               	movf	(?___fladd+3)^(0+128),w
 12797  2C19  00D8               	movwf	(?___flsub+3)^(0+128)
 12798  2C1A  083F               	movf	(?___fladd+2)^(0+128),w
 12799  2C1B  00D7               	movwf	(?___flsub+2)^(0+128)
 12800  2C1C  083E               	movf	(?___fladd+1)^(0+128),w
 12801  2C1D  00D6               	movwf	(?___flsub+1)^(0+128)
 12802  2C1E  083D               	movf	?___fladd^(0+128),w
 12803  2C1F  00D5               	movwf	?___flsub^(0+128)
 12804  2C20  0008               	return
 12805  2C21                     __end_of___flsub:	
 12806                           
 12807                           	psect	text18
 12808  2B31                     __ptext18:	
 12809 ;; *************** function ___flneg *****************
 12810 ;; Defined at:
 12811 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;  f1              4    2[COMMON] unsigned long 
 12814 ;; Auto vars:     Size  Location     Type
 12815 ;;		None
 12816 ;; Return value:  Size  Location     Type
 12817 ;;                  4    2[COMMON] unsigned long 
 12818 ;; Registers used:
 12819 ;;		wreg
 12820 ;; Tracked objects:
 12821 ;;		On entry : 0/0
 12822 ;;		On exit  : 0/0
 12823 ;;		Unchanged: 0/0
 12824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12829 ;;Total ram usage:        4 bytes
 12830 ;; Hardware stack levels used:    1
 12831 ;; Hardware stack levels required when called:    2
 12832 ;; This function calls:
 12833 ;;		Nothing
 12834 ;; This function is called by:
 12835 ;;		_writeVoltages
 12836 ;;		_sprintf
 12837 ;; This function uses a non-reentrant model
 12838 ;;
 12839                           
 12840                           
 12841                           ;psect for function ___flneg
 12842  2B31                     ___flneg:	
 12843                           
 12844                           ;incstack = 0
 12845                           ; Regs used in ___flneg: [wreg]
 12846  2B31  0875               	movf	___flneg@f1+3,w
 12847  2B32  0474               	iorwf	___flneg@f1+2,w
 12848  2B33  0473               	iorwf	___flneg@f1+1,w
 12849  2B34  0472               	iorwf	___flneg@f1,w
 12850  2B35  1903               	skipnz
 12851  2B36  0008               	return
 12852  2B37  3080               	movlw	128
 12853  2B38  06F5               	xorwf	___flneg@f1+3,f
 12854  2B39  0008               	return
 12855  2B3A                     __end_of___flneg:	
 12856                           
 12857                           	psect	text19
 12858  2EB5                     __ptext19:	
 12859 ;; *************** function _sumVoltages *****************
 12860 ;; Defined at:
 12861 ;;		line 78 in file "ltc6804.c"
 12862 ;; Parameters:    Size  Location     Type
 12863 ;;  voltages        1    wreg     PTR float 
 12864 ;;		 -> voltages(48), 
 12865 ;;  numVoltages     2   53[BANK1 ] int 
 12866 ;; Auto vars:     Size  Location     Type
 12867 ;;  voltages        1   59[BANK1 ] PTR float 
 12868 ;;		 -> voltages(48), 
 12869 ;;  i               2   64[BANK1 ] int 
 12870 ;;  total           4   60[BANK1 ] float 
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  4   53[BANK1 ] float 
 12873 ;; Registers used:
 12874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12880 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12881 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12883 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12884 ;;Total ram usage:       13 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    3
 12887 ;; This function calls:
 12888 ;;		___fladd
 12889 ;; This function is called by:
 12890 ;;		_main
 12891 ;;		_startUp
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           
 12896                           ;psect for function _sumVoltages
 12897  2EB5                     _sumVoltages:	
 12898                           
 12899                           ;incstack = 0
 12900                           ; Regs used in _sumVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12901                           ;sumVoltages@voltages stored from wreg
 12902  2EB5  0021               	movlb	1	; select bank1
 12903  2EB6  00DB               	movwf	sumVoltages@voltages^(0+128)
 12904                           
 12905                           ;ltc6804.c: 79: float total = 0.0;
 12906  2EB7  3000               	movlw	0
 12907  2EB8  00DF               	movwf	(sumVoltages@total+3)^(0+128)
 12908  2EB9  3000               	movlw	0
 12909  2EBA  00DE               	movwf	(sumVoltages@total+2)^(0+128)
 12910  2EBB  3000               	movlw	0
 12911  2EBC  00DD               	movwf	(sumVoltages@total+1)^(0+128)
 12912  2EBD  3000               	movlw	0
 12913  2EBE  00DC               	movwf	sumVoltages@total^(0+128)
 12914                           
 12915                           ;ltc6804.c: 80: for(int i = 0; i < numVoltages; i++){
 12916  2EBF  01E0               	clrf	sumVoltages@i^(0+128)
 12917  2EC0  01E1               	clrf	(sumVoltages@i+1)^(0+128)
 12918  2EC1                     l8288:	
 12919  2EC1  0861               	movf	(sumVoltages@i+1)^(0+128),w
 12920  2EC2  3A80               	xorlw	128
 12921  2EC3  00D9               	movwf	??_sumVoltages^(0+128)
 12922  2EC4  0856               	movf	(sumVoltages@numVoltages+1)^(0+128),w
 12923  2EC5  3A80               	xorlw	128
 12924  2EC6  0259               	subwf	??_sumVoltages^(0+128),w
 12925  2EC7  1D03               	skipz
 12926  2EC8  2ECB               	goto	u11675
 12927  2EC9  0855               	movf	sumVoltages@numVoltages^(0+128),w
 12928  2ECA  0260               	subwf	sumVoltages@i^(0+128),w
 12929  2ECB                     u11675:	
 12930  2ECB  1803               	btfsc	3,0
 12931  2ECC  2EFD               	goto	l8290
 12932                           
 12933                           ;ltc6804.c: 81: total += voltages[i];
 12934  2ECD  0021               	movlb	1	; select bank1
 12935  2ECE  0860               	movf	sumVoltages@i^(0+128),w
 12936  2ECF  00D9               	movwf	??_sumVoltages^(0+128)
 12937  2ED0  3001               	movlw	1
 12938  2ED1                     u11665:	
 12939  2ED1  35D9               	lslf	??_sumVoltages^(0+128),f
 12940  2ED2  3EFF               	addlw	-1
 12941  2ED3  1D03               	skipz
 12942  2ED4  2ED1               	goto	u11665
 12943  2ED5  3559               	lslf	??_sumVoltages^(0+128),w
 12944  2ED6  075B               	addwf	sumVoltages@voltages^(0+128),w
 12945  2ED7  00DA               	movwf	(??_sumVoltages+1)^(0+128)
 12946  2ED8  085A               	movf	(??_sumVoltages+1)^(0+128),w
 12947  2ED9  0086               	movwf	6
 12948  2EDA  3002               	movlw	2	; select bank4/5
 12949  2EDB  0087               	movwf	7
 12950  2EDC  3F40               	moviw [0]fsr1
 12951  2EDD  00BD               	movwf	___fladd@b^(0+128)
 12952  2EDE  3F41               	moviw [1]fsr1
 12953  2EDF  00BE               	movwf	(___fladd@b+1)^(0+128)
 12954  2EE0  3F42               	moviw [2]fsr1
 12955  2EE1  00BF               	movwf	(___fladd@b+2)^(0+128)
 12956  2EE2  3F43               	moviw [3]fsr1
 12957  2EE3  00C0               	movwf	(___fladd@b+3)^(0+128)
 12958  2EE4  085F               	movf	(sumVoltages@total+3)^(0+128),w
 12959  2EE5  00C4               	movwf	(___fladd@a+3)^(0+128)
 12960  2EE6  085E               	movf	(sumVoltages@total+2)^(0+128),w
 12961  2EE7  00C3               	movwf	(___fladd@a+2)^(0+128)
 12962  2EE8  085D               	movf	(sumVoltages@total+1)^(0+128),w
 12963  2EE9  00C2               	movwf	(___fladd@a+1)^(0+128)
 12964  2EEA  085C               	movf	sumVoltages@total^(0+128),w
 12965  2EEB  00C1               	movwf	___fladd@a^(0+128)
 12966  2EEC  3185  25FC  31AE   	fcall	___fladd
 12967  2EEF  0021               	movlb	1	; select bank1
 12968  2EF0  0840               	movf	(?___fladd+3)^(0+128),w
 12969  2EF1  00DF               	movwf	(sumVoltages@total+3)^(0+128)
 12970  2EF2  083F               	movf	(?___fladd+2)^(0+128),w
 12971  2EF3  00DE               	movwf	(sumVoltages@total+2)^(0+128)
 12972  2EF4  083E               	movf	(?___fladd+1)^(0+128),w
 12973  2EF5  00DD               	movwf	(sumVoltages@total+1)^(0+128)
 12974  2EF6  083D               	movf	?___fladd^(0+128),w
 12975  2EF7  00DC               	movwf	sumVoltages@total^(0+128)
 12976  2EF8  3001               	movlw	1
 12977  2EF9  07E0               	addwf	sumVoltages@i^(0+128),f
 12978  2EFA  3000               	movlw	0
 12979  2EFB  3DE1               	addwfc	(sumVoltages@i+1)^(0+128),f
 12980  2EFC  2EC1               	goto	l8288
 12981  2EFD                     l8290:	
 12982                           
 12983                           ;ltc6804.c: 82: }
 12984                           ;ltc6804.c: 83: return total;
 12985  2EFD  0021               	movlb	1	; select bank1
 12986  2EFE  085F               	movf	(sumVoltages@total+3)^(0+128),w
 12987  2EFF  00D8               	movwf	(?_sumVoltages+3)^(0+128)
 12988  2F00  085E               	movf	(sumVoltages@total+2)^(0+128),w
 12989  2F01  00D7               	movwf	(?_sumVoltages+2)^(0+128)
 12990  2F02  085D               	movf	(sumVoltages@total+1)^(0+128),w
 12991  2F03  00D6               	movwf	(?_sumVoltages+1)^(0+128)
 12992  2F04  085C               	movf	sumVoltages@total^(0+128),w
 12993  2F05  00D5               	movwf	?_sumVoltages^(0+128)
 12994  2F06  0008               	return
 12995  2F07                     __end_of_sumVoltages:	
 12996                           
 12997                           	psect	text20
 12998  2C61                     __ptext20:	
 12999 ;; *************** function _setup *****************
 13000 ;; Defined at:
 13001 ;;		line 192 in file "main.c"
 13002 ;; Parameters:    Size  Location     Type
 13003 ;;		None
 13004 ;; Auto vars:     Size  Location     Type
 13005 ;;		None
 13006 ;; Return value:  Size  Location     Type
 13007 ;;                  1    wreg      void 
 13008 ;; Registers used:
 13009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13010 ;; Tracked objects:
 13011 ;;		On entry : 0/0
 13012 ;;		On exit  : 0/0
 13013 ;;		Unchanged: 0/0
 13014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13019 ;;Total ram usage:        0 bytes
 13020 ;; Hardware stack levels used:    1
 13021 ;; Hardware stack levels required when called:    6
 13022 ;; This function calls:
 13023 ;;		_LTC6804_initialize
 13024 ;;		_adcSetup
 13025 ;;		_i2cSetup
 13026 ;;		_spiSetup
 13027 ;;		_timerSetup
 13028 ;;		_uartSetup
 13029 ;; This function is called by:
 13030 ;;		_main
 13031 ;; This function uses a non-reentrant model
 13032 ;;
 13033                           
 13034                           
 13035                           ;psect for function _setup
 13036  2C61                     _setup:	
 13037                           
 13038                           ;main.c: 194: TRISDbits.TRISD4 = 0;
 13039                           
 13040                           ;incstack = 0
 13041                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13042  2C61  0021               	movlb	1	; select bank1
 13043  2C62  120F               	bcf	15,4	;volatile
 13044                           
 13045                           ;main.c: 195: TRISDbits.TRISD5 = 0;
 13046  2C63  128F               	bcf	15,5	;volatile
 13047                           
 13048                           ;main.c: 196: TRISAbits.TRISA0 = 1;
 13049  2C64  140C               	bsf	12,0	;volatile
 13050                           
 13051                           ;main.c: 199: INTCONbits.GIE = 1;
 13052  2C65  178B               	bsf	11,7	;volatile
 13053                           
 13054                           ;main.c: 200: INTCONbits.PEIE = 1;
 13055  2C66  170B               	bsf	11,6	;volatile
 13056                           
 13057                           ;main.c: 203: timerSetup();
 13058  2C67  31AB  2322  31AC   	fcall	_timerSetup
 13059                           
 13060                           ;main.c: 206: TRISAbits.TRISA5 = 0;
 13061  2C6A  0021               	movlb	1	; select bank1
 13062  2C6B  128C               	bcf	12,5	;volatile
 13063                           
 13064                           ;main.c: 207: LATAbits.LATA5 = 1;
 13065  2C6C  0022               	movlb	2	; select bank2
 13066  2C6D  168C               	bsf	12,5	;volatile
 13067                           
 13068                           ;main.c: 210: TRISAbits.TRISA4 = 0;
 13069  2C6E  0021               	movlb	1	; select bank1
 13070  2C6F  120C               	bcf	12,4	;volatile
 13071                           
 13072                           ;main.c: 213: adcSetup();
 13073  2C70  31AB  23E4  31AC   	fcall	_adcSetup
 13074                           
 13075                           ;main.c: 216: uartSetup();
 13076  2C73  31AB  235C  31AC   	fcall	_uartSetup
 13077                           
 13078                           ;main.c: 219: TRISBbits.TRISB6 = 1;
 13079  2C76  0021               	movlb	1	; select bank1
 13080  2C77  170D               	bsf	13,6	;volatile
 13081                           
 13082                           ;main.c: 220: TRISBbits.TRISB7 = 1;
 13083  2C78  178D               	bsf	13,7	;volatile
 13084                           
 13085                           ;main.c: 221: i2cSetup();
 13086  2C79  31AB  2399  31AC   	fcall	_i2cSetup
 13087                           
 13088                           ;main.c: 224: TRISCbits.TRISC5 = 0;
 13089  2C7C  0021               	movlb	1	; select bank1
 13090  2C7D  128E               	bcf	14,5	;volatile
 13091                           
 13092                           ;main.c: 225: TRISCbits.TRISC4 = 1;
 13093  2C7E  160E               	bsf	14,4	;volatile
 13094                           
 13095                           ;main.c: 226: TRISCbits.TRISC3 = 0;
 13096  2C7F  118E               	bcf	14,3	;volatile
 13097                           
 13098                           ;main.c: 227: TRISDbits.TRISD3 = 0;
 13099  2C80  118F               	bcf	15,3	;volatile
 13100                           
 13101                           ;main.c: 228: spiSetup();
 13102  2C81  31AB  23AA  31AC   	fcall	_spiSetup
 13103                           
 13104                           ;main.c: 231: LTC6804_initialize();
 13105  2C84  31AB  2388         	fcall	_LTC6804_initialize
 13106  2C86  0008               	return
 13107  2C87                     __end_of_setup:	
 13108                           
 13109                           	psect	text21
 13110  2B5C                     __ptext21:	
 13111 ;; *************** function _uartSetup *****************
 13112 ;; Defined at:
 13113 ;;		line 83 in file "uart.c"
 13114 ;; Parameters:    Size  Location     Type
 13115 ;;		None
 13116 ;; Auto vars:     Size  Location     Type
 13117 ;;		None
 13118 ;; Return value:  Size  Location     Type
 13119 ;;                  1    wreg      void 
 13120 ;; Registers used:
 13121 ;;		wreg, status,2
 13122 ;; Tracked objects:
 13123 ;;		On entry : 0/0
 13124 ;;		On exit  : 0/0
 13125 ;;		Unchanged: 0/0
 13126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13131 ;;Total ram usage:        0 bytes
 13132 ;; Hardware stack levels used:    1
 13133 ;; Hardware stack levels required when called:    2
 13134 ;; This function calls:
 13135 ;;		Nothing
 13136 ;; This function is called by:
 13137 ;;		_setup
 13138 ;; This function uses a non-reentrant model
 13139 ;;
 13140                           
 13141                           
 13142                           ;psect for function _uartSetup
 13143  2B5C                     _uartSetup:	
 13144                           
 13145                           ;uart.c: 84: TXSTAbits.TX9 = 0;
 13146                           
 13147                           ;incstack = 0
 13148                           ; Regs used in _uartSetup: [wreg+status,2]
 13149  2B5C  0023               	movlb	3	; select bank3
 13150  2B5D  131E               	bcf	30,6	;volatile
 13151                           
 13152                           ;uart.c: 85: TXSTAbits.TXEN = 1;
 13153  2B5E  169E               	bsf	30,5	;volatile
 13154                           
 13155                           ;uart.c: 86: TXSTAbits.SYNC = 0;
 13156  2B5F  121E               	bcf	30,4	;volatile
 13157                           
 13158                           ;uart.c: 87: TXSTAbits.BRGH = 0;
 13159  2B60  111E               	bcf	30,2	;volatile
 13160                           
 13161                           ;uart.c: 88: RCSTAbits.RX9 = 0;
 13162  2B61  131D               	bcf	29,6	;volatile
 13163                           
 13164                           ;uart.c: 89: RCSTAbits.SPEN = 1;
 13165  2B62  179D               	bsf	29,7	;volatile
 13166                           
 13167                           ;uart.c: 90: SPBRGH = 0;
 13168  2B63  019C               	clrf	28	;volatile
 13169                           
 13170                           ;uart.c: 91: SPBRGL = 2;
 13171  2B64  3002               	movlw	2
 13172  2B65  009B               	movwf	27	;volatile
 13173                           
 13174                           ;uart.c: 92: PIR1bits.TXIF = 0;
 13175  2B66  0020               	movlb	0	; select bank0
 13176  2B67  1211               	bcf	17,4	;volatile
 13177  2B68  0008               	return
 13178  2B69                     __end_of_uartSetup:	
 13179                           
 13180                           	psect	text22
 13181  2B22                     __ptext22:	
 13182 ;; *************** function _timerSetup *****************
 13183 ;; Defined at:
 13184 ;;		line 10 in file "timer.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;		None
 13187 ;; Auto vars:     Size  Location     Type
 13188 ;;		None
 13189 ;; Return value:  Size  Location     Type
 13190 ;;                  1    wreg      void 
 13191 ;; Registers used:
 13192 ;;		wreg, status,2, status,0, pclath, cstack
 13193 ;; Tracked objects:
 13194 ;;		On entry : 0/0
 13195 ;;		On exit  : 0/0
 13196 ;;		Unchanged: 0/0
 13197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13202 ;;Total ram usage:        0 bytes
 13203 ;; Hardware stack levels used:    1
 13204 ;; Hardware stack levels required when called:    3
 13205 ;; This function calls:
 13206 ;;		_timer0Setup
 13207 ;;		_timer2Setup
 13208 ;; This function is called by:
 13209 ;;		_setup
 13210 ;; This function uses a non-reentrant model
 13211 ;;
 13212                           
 13213                           
 13214                           ;psect for function _timerSetup
 13215  2B22                     _timerSetup:	
 13216                           
 13217                           ;timer.c: 11: timer0Setup();
 13218                           
 13219                           ;incstack = 0
 13220                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 13221  2B22  3188  2000  31AB   	fcall	_timer0Setup
 13222                           
 13223                           ;timer.c: 12: timer2Setup();
 13224  2B25  31AB  2345         	fcall	_timer2Setup
 13225  2B27  0008               	return
 13226  2B28                     __end_of_timerSetup:	
 13227                           
 13228                           	psect	text23
 13229  2B45                     __ptext23:	
 13230 ;; *************** function _timer2Setup *****************
 13231 ;; Defined at:
 13232 ;;		line 15 in file "timer.c"
 13233 ;; Parameters:    Size  Location     Type
 13234 ;;		None
 13235 ;; Auto vars:     Size  Location     Type
 13236 ;;		None
 13237 ;; Return value:  Size  Location     Type
 13238 ;;                  1    wreg      void 
 13239 ;; Registers used:
 13240 ;;		wreg
 13241 ;; Tracked objects:
 13242 ;;		On entry : 0/0
 13243 ;;		On exit  : 0/0
 13244 ;;		Unchanged: 0/0
 13245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13250 ;;Total ram usage:        0 bytes
 13251 ;; Hardware stack levels used:    1
 13252 ;; Hardware stack levels required when called:    2
 13253 ;; This function calls:
 13254 ;;		Nothing
 13255 ;; This function is called by:
 13256 ;;		_timerSetup
 13257 ;; This function uses a non-reentrant model
 13258 ;;
 13259                           
 13260                           
 13261                           ;psect for function _timer2Setup
 13262  2B45                     _timer2Setup:	
 13263                           
 13264                           ;timer.c: 16: CCP2CON = 0x06;
 13265                           
 13266                           ;incstack = 0
 13267                           ; Regs used in _timer2Setup: [wreg]
 13268  2B45  3006               	movlw	6
 13269  2B46  0025               	movlb	5	; select bank5
 13270  2B47  009A               	movwf	26	;volatile
 13271                           
 13272                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 13273  2B48  0021               	movlb	1	; select bank1
 13274  2B49  1491               	bsf	17,1	;volatile
 13275                           
 13276                           ;timer.c: 18: PR2 = 254;
 13277  2B4A  30FE               	movlw	254
 13278  2B4B  0020               	movlb	0	; select bank0
 13279  2B4C  009B               	movwf	27	;volatile
 13280                           
 13281                           ;timer.c: 19: T2CON = 0x4F;
 13282  2B4D  304F               	movlw	79
 13283  2B4E  009C               	movwf	28	;volatile
 13284  2B4F  0008               	return
 13285  2B50                     __end_of_timer2Setup:	
 13286                           
 13287                           	psect	text24
 13288  0800                     __ptext24:	
 13289 ;; *************** function _timer0Setup *****************
 13290 ;; Defined at:
 13291 ;;		line 22 in file "timer.c"
 13292 ;; Parameters:    Size  Location     Type
 13293 ;;		None
 13294 ;; Auto vars:     Size  Location     Type
 13295 ;;		None
 13296 ;; Return value:  Size  Location     Type
 13297 ;;                  1    wreg      void 
 13298 ;; Registers used:
 13299 ;;		wreg
 13300 ;; Tracked objects:
 13301 ;;		On entry : 0/0
 13302 ;;		On exit  : 0/0
 13303 ;;		Unchanged: 0/0
 13304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13309 ;;Total ram usage:        0 bytes
 13310 ;; Hardware stack levels used:    1
 13311 ;; Hardware stack levels required when called:    2
 13312 ;; This function calls:
 13313 ;;		Nothing
 13314 ;; This function is called by:
 13315 ;;		_timerSetup
 13316 ;; This function uses a non-reentrant model
 13317 ;;
 13318                           
 13319                           
 13320                           ;psect for function _timer0Setup
 13321  0800                     _timer0Setup:	
 13322                           
 13323                           ;timer.c: 23: OPTION_REG = 0b10001110;
 13324                           
 13325                           ;incstack = 0
 13326                           ; Regs used in _timer0Setup: [wreg]
 13327  0800  308E               	movlw	142
 13328  0801  0021               	movlb	1	; select bank1
 13329  0802  0095               	movwf	21	;volatile
 13330                           
 13331                           ;timer.c: 24: INTCONbits.TMR0IE = 1;
 13332  0803  168B               	bsf	11,5	;volatile
 13333  0804  0008               	return
 13334  0805                     __end_of_timer0Setup:	
 13335                           
 13336                           	psect	text25
 13337  2BAA                     __ptext25:	
 13338 ;; *************** function _spiSetup *****************
 13339 ;; Defined at:
 13340 ;;		line 12 in file "spi.c"
 13341 ;; Parameters:    Size  Location     Type
 13342 ;;		None
 13343 ;; Auto vars:     Size  Location     Type
 13344 ;;		None
 13345 ;; Return value:  Size  Location     Type
 13346 ;;                  1    wreg      void 
 13347 ;; Registers used:
 13348 ;;		wreg
 13349 ;; Tracked objects:
 13350 ;;		On entry : 0/0
 13351 ;;		On exit  : 0/0
 13352 ;;		Unchanged: 0/0
 13353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13358 ;;Total ram usage:        0 bytes
 13359 ;; Hardware stack levels used:    1
 13360 ;; Hardware stack levels required when called:    2
 13361 ;; This function calls:
 13362 ;;		Nothing
 13363 ;; This function is called by:
 13364 ;;		_setup
 13365 ;; This function uses a non-reentrant model
 13366 ;;
 13367                           
 13368                           
 13369                           ;psect for function _spiSetup
 13370  2BAA                     _spiSetup:	
 13371                           
 13372                           ;spi.c: 15: LATDbits.LATD3 = 1;
 13373                           
 13374                           ;incstack = 0
 13375                           ; Regs used in _spiSetup: [wreg]
 13376  2BAA  0022               	movlb	2	; select bank2
 13377  2BAB  158F               	bsf	15,3	;volatile
 13378                           
 13379                           ;spi.c: 17: APFCON1bits.SDOSEL = 0;
 13380  2BAC  129D               	bcf	29,5	;volatile
 13381                           
 13382                           ;spi.c: 18: APFCON1bits.SCKSEL = 0;
 13383  2BAD  121D               	bcf	29,4	;volatile
 13384                           
 13385                           ;spi.c: 19: APFCON1bits.SDISEL = 0;
 13386  2BAE  119D               	bcf	29,3	;volatile
 13387                           
 13388                           ;spi.c: 21: SSP1CON3bits.BOEN = 0;
 13389  2BAF  0024               	movlb	4	; select bank4
 13390  2BB0  1217               	bcf	23,4	;volatile
 13391                           
 13392                           ;spi.c: 25: SSP1STATbits.SMP = 1;
 13393  2BB1  1794               	bsf	20,7	;volatile
 13394                           
 13395                           ;spi.c: 26: SSP1STATbits.CKE = 1;
 13396  2BB2  1714               	bsf	20,6	;volatile
 13397                           
 13398                           ;spi.c: 28: SSP1CON1 = 0x12;
 13399  2BB3  3012               	movlw	18
 13400  2BB4  0095               	movwf	21	;volatile
 13401                           
 13402                           ;spi.c: 30: PIE1bits.SSP1IE = 1;
 13403  2BB5  0021               	movlb	1	; select bank1
 13404  2BB6  1591               	bsf	17,3	;volatile
 13405                           
 13406                           ;spi.c: 31: PIR1bits.SSP1IF = 0;
 13407  2BB7  0020               	movlb	0	; select bank0
 13408  2BB8  1191               	bcf	17,3	;volatile
 13409                           
 13410                           ;spi.c: 33: SSP1CON1bits.SSPEN = 1;
 13411  2BB9  0024               	movlb	4	; select bank4
 13412  2BBA  1695               	bsf	21,5	;volatile
 13413  2BBB  0008               	return
 13414  2BBC                     __end_of_spiSetup:	
 13415                           
 13416                           	psect	text26
 13417  2B99                     __ptext26:	
 13418 ;; *************** function _i2cSetup *****************
 13419 ;; Defined at:
 13420 ;;		line 40 in file "i2c.c"
 13421 ;; Parameters:    Size  Location     Type
 13422 ;;		None
 13423 ;; Auto vars:     Size  Location     Type
 13424 ;;		None
 13425 ;; Return value:  Size  Location     Type
 13426 ;;                  1    wreg      void 
 13427 ;; Registers used:
 13428 ;;		wreg
 13429 ;; Tracked objects:
 13430 ;;		On entry : 0/0
 13431 ;;		On exit  : 0/0
 13432 ;;		Unchanged: 0/0
 13433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13438 ;;Total ram usage:        0 bytes
 13439 ;; Hardware stack levels used:    1
 13440 ;; Hardware stack levels required when called:    2
 13441 ;; This function calls:
 13442 ;;		Nothing
 13443 ;; This function is called by:
 13444 ;;		_setup
 13445 ;; This function uses a non-reentrant model
 13446 ;;
 13447                           
 13448                           
 13449                           ;psect for function _i2cSetup
 13450  2B99                     _i2cSetup:	
 13451                           
 13452                           ;i2c.c: 41: APFCON1bits.SDISEL = 1;
 13453                           
 13454                           ;incstack = 0
 13455                           ; Regs used in _i2cSetup: [wreg]
 13456  2B99  0022               	movlb	2	; select bank2
 13457  2B9A  159D               	bsf	29,3	;volatile
 13458                           
 13459                           ;i2c.c: 42: APFCON1bits.SCKSEL = 1;
 13460  2B9B  161D               	bsf	29,4	;volatile
 13461                           
 13462                           ;i2c.c: 43: PIE1bits.SSP1IE = 0;
 13463  2B9C  0021               	movlb	1	; select bank1
 13464  2B9D  1191               	bcf	17,3	;volatile
 13465                           
 13466                           ;i2c.c: 44: PIE2bits.BCL1IE = 0;
 13467  2B9E  1192               	bcf	18,3	;volatile
 13468                           
 13469                           ;i2c.c: 45: PIR1bits.SSP1IF = 0;
 13470  2B9F  0020               	movlb	0	; select bank0
 13471  2BA0  1191               	bcf	17,3	;volatile
 13472                           
 13473                           ;i2c.c: 46: PIR2bits.BCL1IF = 0;
 13474  2BA1  1192               	bcf	18,3	;volatile
 13475                           
 13476                           ;i2c.c: 47: SSPADD = 0x4F;
 13477  2BA2  304F               	movlw	79
 13478  2BA3  0024               	movlb	4	; select bank4
 13479  2BA4  0092               	movwf	18	;volatile
 13480                           
 13481                           ;i2c.c: 48: SSPCON1 = 0x28;
 13482  2BA5  3028               	movlw	40
 13483  2BA6  0095               	movwf	21	;volatile
 13484                           
 13485                           ;i2c.c: 49: SSPSTAT = 0xC0;
 13486  2BA7  30C0               	movlw	192
 13487  2BA8  0094               	movwf	20	;volatile
 13488  2BA9  0008               	return
 13489  2BAA                     __end_of_i2cSetup:	
 13490                           
 13491                           	psect	text27
 13492  2BE4                     __ptext27:	
 13493 ;; *************** function _adcSetup *****************
 13494 ;; Defined at:
 13495 ;;		line 78 in file "adc.c"
 13496 ;; Parameters:    Size  Location     Type
 13497 ;;		None
 13498 ;; Auto vars:     Size  Location     Type
 13499 ;;		None
 13500 ;; Return value:  Size  Location     Type
 13501 ;;                  1    wreg      void 
 13502 ;; Registers used:
 13503 ;;		wreg, status,2
 13504 ;; Tracked objects:
 13505 ;;		On entry : 0/0
 13506 ;;		On exit  : 0/0
 13507 ;;		Unchanged: 0/0
 13508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13512 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13513 ;;Total ram usage:        0 bytes
 13514 ;; Hardware stack levels used:    1
 13515 ;; Hardware stack levels required when called:    2
 13516 ;; This function calls:
 13517 ;;		Nothing
 13518 ;; This function is called by:
 13519 ;;		_setup
 13520 ;; This function uses a non-reentrant model
 13521 ;;
 13522                           
 13523                           
 13524                           ;psect for function _adcSetup
 13525  2BE4                     _adcSetup:	
 13526                           
 13527                           ;adc.c: 80: TRISBbits.TRISB5 = 0;
 13528                           
 13529                           ;incstack = 0
 13530                           ; Regs used in _adcSetup: [wreg+status,2]
 13531  2BE4  0021               	movlb	1	; select bank1
 13532  2BE5  128D               	bcf	13,5	;volatile
 13533                           
 13534                           ;adc.c: 83: TRISAbits.TRISA0 = 1;
 13535  2BE6  140C               	bsf	12,0	;volatile
 13536                           
 13537                           ;adc.c: 84: TRISAbits.TRISA1 = 1;
 13538  2BE7  148C               	bsf	12,1	;volatile
 13539                           
 13540                           ;adc.c: 85: TRISAbits.TRISA2 = 1;
 13541  2BE8  150C               	bsf	12,2	;volatile
 13542                           
 13543                           ;adc.c: 86: TRISAbits.TRISA3 = 1;
 13544  2BE9  158C               	bsf	12,3	;volatile
 13545                           
 13546                           ;adc.c: 89: TRISBbits.TRISB0 = 1;
 13547  2BEA  140D               	bsf	13,0	;volatile
 13548                           
 13549                           ;adc.c: 90: TRISBbits.TRISB1 = 1;
 13550  2BEB  148D               	bsf	13,1	;volatile
 13551                           
 13552                           ;adc.c: 91: TRISBbits.TRISB2 = 1;
 13553  2BEC  150D               	bsf	13,2	;volatile
 13554                           
 13555                           ;adc.c: 92: TRISBbits.TRISB3 = 1;
 13556  2BED  158D               	bsf	13,3	;volatile
 13557                           
 13558                           ;adc.c: 93: TRISBbits.TRISB4 = 1;
 13559  2BEE  160D               	bsf	13,4	;volatile
 13560                           
 13561                           ;adc.c: 96: TRISDbits.TRISD1 = 1;
 13562  2BEF  148F               	bsf	15,1	;volatile
 13563                           
 13564                           ;adc.c: 99: ANSELA = 0x0F;
 13565  2BF0  300F               	movlw	15
 13566  2BF1  0023               	movlb	3	; select bank3
 13567  2BF2  008C               	movwf	12	;volatile
 13568                           
 13569                           ;adc.c: 100: ANSELB = 0x1F;
 13570  2BF3  301F               	movlw	31
 13571  2BF4  008D               	movwf	13	;volatile
 13572                           
 13573                           ;adc.c: 101: ANSELD = 0x01;
 13574  2BF5  3001               	movlw	1
 13575  2BF6  008F               	movwf	15	;volatile
 13576                           
 13577                           ;adc.c: 102: TRISDbits.TRISD1 = 1;
 13578  2BF7  0021               	movlb	1	; select bank1
 13579  2BF8  148F               	bsf	15,1	;volatile
 13580                           
 13581                           ;adc.c: 103: WPUD = 0x00;
 13582  2BF9  0024               	movlb	4	; select bank4
 13583  2BFA  018F               	clrf	15	;volatile
 13584                           
 13585                           ;adc.c: 106: ADCON0 = 0x00;
 13586  2BFB  0021               	movlb	1	; select bank1
 13587  2BFC  019D               	clrf	29	;volatile
 13588                           
 13589                           ;adc.c: 107: ADCON1 = 0x60;
 13590  2BFD  3060               	movlw	96
 13591  2BFE  009E               	movwf	30	;volatile
 13592                           
 13593                           ;adc.c: 108: ADCON2 = 0x0F;
 13594  2BFF  300F               	movlw	15
 13595  2C00  009F               	movwf	31	;volatile
 13596  2C01  0008               	return
 13597  2C02                     __end_of_adcSetup:	
 13598                           
 13599                           	psect	text28
 13600  2B88                     __ptext28:	
 13601 ;; *************** function _LTC6804_initialize *****************
 13602 ;; Defined at:
 13603 ;;		line 228 in file "ltc6804.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;  configReg       2   41[BANK0 ] int 
 13606 ;; Auto vars:     Size  Location     Type
 13607 ;;		None
 13608 ;; Return value:  Size  Location     Type
 13609 ;;                  1    wreg      void 
 13610 ;; Registers used:
 13611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13612 ;; Tracked objects:
 13613 ;;		On entry : 0/0
 13614 ;;		On exit  : 0/0
 13615 ;;		Unchanged: 0/0
 13616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13617 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13620 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13621 ;;Total ram usage:        2 bytes
 13622 ;; Hardware stack levels used:    1
 13623 ;; Hardware stack levels required when called:    5
 13624 ;; This function calls:
 13625 ;;		_LTC6804_wrcfg
 13626 ;;		_set_adc
 13627 ;; This function is called by:
 13628 ;;		_setup
 13629 ;; This function uses a non-reentrant model
 13630 ;;
 13631                           
 13632                           
 13633                           ;psect for function _LTC6804_initialize
 13634  2B88                     _LTC6804_initialize:	
 13635                           
 13636                           ;ltc6804.c: 230: set_adc(2,1,0,0);
 13637                           
 13638                           ;incstack = 0
 13639                           ; Regs used in _LTC6804_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13640  2B88  01F2               	clrf	set_adc@DCP
 13641  2B89  0AF2               	incf	set_adc@DCP,f
 13642  2B8A  01F3               	clrf	set_adc@CH
 13643  2B8B  01F4               	clrf	set_adc@CHG
 13644  2B8C  3002               	movlw	2
 13645  2B8D  31AD  259B  31AB   	fcall	_set_adc
 13646                           
 13647                           ;ltc6804.c: 231: LTC6804_wrcfg(1, configReg);
 13648  2B90  0020               	movlb	0	; select bank0
 13649  2B91  084A               	movf	LTC6804_initialize@configReg+1,w
 13650  2B92  00B0               	movwf	LTC6804_wrcfg@config+1
 13651  2B93  0849               	movf	LTC6804_initialize@configReg,w
 13652  2B94  00AF               	movwf	LTC6804_wrcfg@config
 13653  2B95  3001               	movlw	1
 13654  2B96  31A3  23F2         	fcall	_LTC6804_wrcfg
 13655  2B98  0008               	return
 13656  2B99                     __end_of_LTC6804_initialize:	
 13657                           
 13658                           	psect	text29
 13659  2D9B                     __ptext29:	
 13660 ;; *************** function _set_adc *****************
 13661 ;; Defined at:
 13662 ;;		line 251 in file "ltc6804.c"
 13663 ;; Parameters:    Size  Location     Type
 13664 ;;  MD              1    wreg     unsigned char 
 13665 ;;  DCP             1    2[COMMON] unsigned char 
 13666 ;;  CH              1    3[COMMON] unsigned char 
 13667 ;;  CHG             1    4[COMMON] unsigned char 
 13668 ;; Auto vars:     Size  Location     Type
 13669 ;;  MD              1    7[COMMON] unsigned char 
 13670 ;;  md_bits         1    8[COMMON] unsigned char 
 13671 ;; Return value:  Size  Location     Type
 13672 ;;                  1    wreg      void 
 13673 ;; Registers used:
 13674 ;;		wreg, status,2, status,0
 13675 ;; Tracked objects:
 13676 ;;		On entry : 0/0
 13677 ;;		On exit  : 0/0
 13678 ;;		Unchanged: 0/0
 13679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13682 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13683 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13684 ;;Total ram usage:        7 bytes
 13685 ;; Hardware stack levels used:    1
 13686 ;; Hardware stack levels required when called:    2
 13687 ;; This function calls:
 13688 ;;		Nothing
 13689 ;; This function is called by:
 13690 ;;		_LTC6804_initialize
 13691 ;; This function uses a non-reentrant model
 13692 ;;
 13693                           
 13694                           
 13695                           ;psect for function _set_adc
 13696  2D9B                     _set_adc:	
 13697                           
 13698                           ;incstack = 0
 13699                           ; Regs used in _set_adc: [wreg+status,2+status,0]
 13700                           ;set_adc@MD stored from wreg
 13701  2D9B  00F7               	movwf	set_adc@MD
 13702                           
 13703                           ;ltc6804.c: 257: char md_bits;
 13704                           ;ltc6804.c: 259: md_bits = (MD & 0x02) >> 1;
 13705  2D9C  3677               	lsrf	set_adc@MD,w
 13706  2D9D  3901               	andlw	1
 13707  2D9E  00F5               	movwf	??_set_adc
 13708  2D9F  0875               	movf	??_set_adc,w
 13709  2DA0  00F8               	movwf	set_adc@md_bits
 13710                           
 13711                           ;ltc6804.c: 260: ADCV[0] = md_bits + 0x02;
 13712  2DA1  0878               	movf	set_adc@md_bits,w
 13713  2DA2  3E02               	addlw	2
 13714  2DA3  00F5               	movwf	??_set_adc
 13715  2DA4  0875               	movf	??_set_adc,w
 13716  2DA5  0023               	movlb	3	; select bank3
 13717  2DA6  00CB               	movwf	_ADCV^(0+384)
 13718                           
 13719                           ;ltc6804.c: 261: md_bits = (MD & 0x01) << 7;
 13720  2DA7  0877               	movf	set_adc@MD,w
 13721  2DA8  3901               	andlw	1
 13722  2DA9  00F5               	movwf	??_set_adc
 13723  2DAA  3006               	movlw	6
 13724  2DAB                     u10765:	
 13725  2DAB  35F5               	lslf	??_set_adc,f
 13726  2DAC  3EFF               	addlw	-1
 13727  2DAD  1D03               	skipz
 13728  2DAE  2DAB               	goto	u10765
 13729  2DAF  3575               	lslf	??_set_adc,w
 13730  2DB0  00F6               	movwf	??_set_adc+1
 13731  2DB1  0876               	movf	??_set_adc+1,w
 13732  2DB2  00F8               	movwf	set_adc@md_bits
 13733                           
 13734                           ;ltc6804.c: 262: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 13735  2DB3  0872               	movf	set_adc@DCP,w
 13736  2DB4  00F5               	movwf	??_set_adc
 13737  2DB5  3003               	movlw	3
 13738  2DB6                     u10775:	
 13739  2DB6  35F5               	lslf	??_set_adc,f
 13740  2DB7  3EFF               	addlw	-1
 13741  2DB8  1D03               	skipz
 13742  2DB9  2DB6               	goto	u10775
 13743  2DBA  3575               	lslf	??_set_adc,w
 13744  2DBB  0778               	addwf	set_adc@md_bits,w
 13745  2DBC  0773               	addwf	set_adc@CH,w
 13746  2DBD  3E60               	addlw	96
 13747  2DBE  00F6               	movwf	??_set_adc+1
 13748  2DBF  0876               	movf	??_set_adc+1,w
 13749  2DC0  00CC               	movwf	(_ADCV^(0+384)+1)
 13750                           
 13751                           ;ltc6804.c: 264: md_bits = (MD & 0x02) >> 1;
 13752  2DC1  3677               	lsrf	set_adc@MD,w
 13753  2DC2  3901               	andlw	1
 13754  2DC3  00F5               	movwf	??_set_adc
 13755  2DC4  0875               	movf	??_set_adc,w
 13756  2DC5  00F8               	movwf	set_adc@md_bits
 13757                           
 13758                           ;ltc6804.c: 265: ADAX[0] = md_bits + 0x04;
 13759  2DC6  0878               	movf	set_adc@md_bits,w
 13760  2DC7  3E04               	addlw	4
 13761  2DC8  00F5               	movwf	??_set_adc
 13762  2DC9  0875               	movf	??_set_adc,w
 13763  2DCA  00C9               	movwf	_ADAX^(0+384)
 13764                           
 13765                           ;ltc6804.c: 266: md_bits = (MD & 0x01) << 7;
 13766  2DCB  0877               	movf	set_adc@MD,w
 13767  2DCC  3901               	andlw	1
 13768  2DCD  00F5               	movwf	??_set_adc
 13769  2DCE  3006               	movlw	6
 13770  2DCF                     u10785:	
 13771  2DCF  35F5               	lslf	??_set_adc,f
 13772  2DD0  3EFF               	addlw	-1
 13773  2DD1  1D03               	skipz
 13774  2DD2  2DCF               	goto	u10785
 13775  2DD3  3575               	lslf	??_set_adc,w
 13776  2DD4  00F6               	movwf	??_set_adc+1
 13777  2DD5  0876               	movf	??_set_adc+1,w
 13778  2DD6  00F8               	movwf	set_adc@md_bits
 13779                           
 13780                           ;ltc6804.c: 267: ADAX[1] = md_bits + 0x60 + CHG ;
 13781  2DD7  0878               	movf	set_adc@md_bits,w
 13782  2DD8  0774               	addwf	set_adc@CHG,w
 13783  2DD9  3E60               	addlw	96
 13784  2DDA  00F5               	movwf	??_set_adc
 13785  2DDB  0875               	movf	??_set_adc,w
 13786  2DDC  00CA               	movwf	(_ADAX^(0+384)+1)
 13787  2DDD  0008               	return
 13788  2DDE                     __end_of_set_adc:	
 13789                           
 13790                           	psect	text30
 13791  26FB                     __ptext30:	
 13792 ;; *************** function _measureVoltages *****************
 13793 ;; Defined at:
 13794 ;;		line 86 in file "ltc6804.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  voltages        1    wreg     PTR float 
 13797 ;;		 -> voltages(48), 
 13798 ;;  numVoltages     2   69[BANK1 ] int 
 13799 ;; Auto vars:     Size  Location     Type
 13800 ;;  voltages        1   31[BANK2 ] PTR float 
 13801 ;;		 -> voltages(48), 
 13802 ;;  i               2   32[BANK2 ] int 
 13803 ;;  ltcData        24    0[BANK2 ] unsigned int [12][1]
 13804 ;;  tempConfig      6   24[BANK2 ] unsigned char [6][1]
 13805 ;;  pecError        1   30[BANK2 ] unsigned char 
 13806 ;; Return value:  Size  Location     Type
 13807 ;;                  1    wreg      void 
 13808 ;; Registers used:
 13809 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13810 ;; Tracked objects:
 13811 ;;		On entry : 0/0
 13812 ;;		On exit  : 0/0
 13813 ;;		Unchanged: 0/0
 13814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13815 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13816 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13817 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13818 ;;      Totals:         0       0       6      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13819 ;;Total ram usage:       40 bytes
 13820 ;; Hardware stack levels used:    1
 13821 ;; Hardware stack levels required when called:    6
 13822 ;; This function calls:
 13823 ;;		_LTC6804_adcv
 13824 ;;		_LTC6804_rdcv
 13825 ;;		_LTC6804_wrcfg
 13826 ;;		___fldiv
 13827 ;;		___flge
 13828 ;;		___flmul
 13829 ;;		___xxtofl
 13830 ;; This function is called by:
 13831 ;;		_main
 13832 ;;		_startUp
 13833 ;; This function uses a non-reentrant model
 13834 ;;
 13835                           
 13836                           
 13837                           ;psect for function _measureVoltages
 13838  26FB                     _measureVoltages:	
 13839                           
 13840                           ;incstack = 0
 13841                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13842                           ;measureVoltages@voltages stored from wreg
 13843  26FB  0022               	movlb	2	; select bank2
 13844  26FC  00BF               	movwf	measureVoltages@voltages^(0+256)
 13845                           
 13846                           ;ltc6804.c: 87: char pecError = -1;
 13847  26FD  30FF               	movlw	255
 13848  26FE  0021               	movlb	1	; select bank1
 13849  26FF  00E7               	movwf	??_measureVoltages^(0+128)
 13850  2700  0867               	movf	??_measureVoltages^(0+128),w
 13851  2701  0022               	movlb	2	; select bank2
 13852  2702  00BE               	movwf	measureVoltages@pecError^(0+256)
 13853                           
 13854                           ;ltc6804.c: 88: unsigned int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 13855  2703  3020               	movlw	low measureVoltages@F7584
 13856  2704  0086               	movwf	6
 13857  2705  3002               	movlw	high measureVoltages@F7584
 13858  2706  0087               	movwf	7
 13859  2707  3020               	movlw	low measureVoltages@ltcData
 13860  2708  0084               	movwf	4
 13861  2709  3001               	movlw	high measureVoltages@ltcData
 13862  270A  0085               	movwf	5
 13863  270B  3018               	movlw	24
 13864  270C  0021               	movlb	1	; select bank1
 13865  270D  00E7               	movwf	??_measureVoltages^(0+128)
 13866  270E                     u11570:	
 13867  270E  0016               	moviw fsr1++
 13868  270F  001A               	movwi fsr0++
 13869  2710  0BE7               	decfsz	??_measureVoltages^(0+128),f
 13870  2711  2F0E               	goto	u11570
 13871                           
 13872                           ;ltc6804.c: 90: char tempConfig[1][6] = {0x00, 0x90, 0x1F, 0xC4, 0x00, 0x90};
 13873  2712  30CD               	movlw	low measureVoltages@F7587
 13874  2713  0086               	movwf	6
 13875  2714  3001               	movlw	high measureVoltages@F7587
 13876  2715  0087               	movwf	7
 13877  2716  3038               	movlw	low measureVoltages@tempConfig
 13878  2717  0084               	movwf	4
 13879  2718  3001               	movlw	high measureVoltages@tempConfig
 13880  2719  0085               	movwf	5
 13881  271A  3006               	movlw	6
 13882  271B  00E7               	movwf	??_measureVoltages^(0+128)
 13883  271C                     u11580:	
 13884  271C  0016               	moviw fsr1++
 13885  271D  001A               	movwi fsr0++
 13886  271E  0BE7               	decfsz	??_measureVoltages^(0+128),f
 13887  271F  2F1C               	goto	u11580
 13888                           
 13889                           ;ltc6804.c: 92: LTC6804_wrcfg(1, tempConfig);
 13890  2720  3038               	movlw	low measureVoltages@tempConfig
 13891  2721  0020               	movlb	0	; select bank0
 13892  2722  00AF               	movwf	LTC6804_wrcfg@config
 13893  2723  3001               	movlw	high measureVoltages@tempConfig
 13894  2724  00B0               	movwf	LTC6804_wrcfg@config+1
 13895  2725  3001               	movlw	1
 13896  2726  31A3  23F2  31A6   	fcall	_LTC6804_wrcfg
 13897                           
 13898                           ;ltc6804.c: 93: _delay((unsigned long)((10)*(32000000/4000000.0)));
 13899  2729  301A               	movlw	26
 13900  272A                     u12227:	
 13901  272A  0B89               	decfsz	9,f
 13902  272B  2F2A               	goto	u12227
 13903  272C  3200               	nop2
 13904                           
 13905                           ;ltc6804.c: 94: LTC6804_adcv();
 13906  272D  31AC  2487  31A6   	fcall	_LTC6804_adcv
 13907                           
 13908                           ;ltc6804.c: 95: LTC6804_wrcfg(1, configReg);
 13909  2730  30DA               	movlw	low _configReg
 13910  2731  0020               	movlb	0	; select bank0
 13911  2732  00AF               	movwf	LTC6804_wrcfg@config
 13912  2733  3001               	movlw	high _configReg
 13913  2734  00B0               	movwf	LTC6804_wrcfg@config+1
 13914  2735  3001               	movlw	1
 13915  2736  31A3  23F2  31A6   	fcall	_LTC6804_wrcfg
 13916  2739                     l573:	
 13917                           ;ltc6804.c: 98: do{
 13918                           
 13919                           
 13920                           ;ltc6804.c: 99: pecError = LTC6804_rdcv(0, 1, ltcData);
 13921  2739  0020               	movlb	0	; select bank0
 13922  273A  01BB               	clrf	LTC6804_rdcv@total_ic
 13923  273B  0ABB               	incf	LTC6804_rdcv@total_ic,f
 13924  273C  3020               	movlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13925  273D  0021               	movlb	1	; select bank1
 13926  273E  00E7               	movwf	??_measureVoltages^(0+128)
 13927  273F  0867               	movf	??_measureVoltages^(0+128),w
 13928  2740  0020               	movlb	0	; select bank0
 13929  2741  00BC               	movwf	LTC6804_rdcv@cell_codes
 13930  2742  3000               	movlw	0
 13931  2743  319E  2675  31A6   	fcall	_LTC6804_rdcv
 13932  2746  0021               	movlb	1	; select bank1
 13933  2747  00E8               	movwf	(??_measureVoltages+1)^(0+128)
 13934  2748  0868               	movf	(??_measureVoltages+1)^(0+128),w
 13935  2749  0022               	movlb	2	; select bank2
 13936  274A  00BE               	movwf	measureVoltages@pecError^(0+256)
 13937                           
 13938                           ;ltc6804.c: 100: }while(pecError != 0);
 13939  274B  083E               	movf	measureVoltages@pecError^(0+256),w
 13940  274C  1D03               	btfss	3,2
 13941  274D  2F39               	goto	l573
 13942                           
 13943                           ;ltc6804.c: 102: for(int i = 0; i< 12; i ++){
 13944  274E  01C0               	clrf	measureVoltages@i^(0+256)
 13945  274F  01C1               	clrf	(measureVoltages@i+1)^(0+256)
 13946  2750                     L9:	
 13947  2750  0841               	movf	(measureVoltages@i+1)^(0+256),w
 13948  2751  3A80               	xorlw	128
 13949  2752  0021               	movlb	1	; select bank1
 13950  2753  00E7               	movwf	??_measureVoltages^(0+128)
 13951  2754  3080               	movlw	128
 13952  2755  0267               	subwf	??_measureVoltages^(0+128),w
 13953  2756  1D03               	skipz
 13954  2757  2F5B               	goto	u11605
 13955  2758  300C               	movlw	12
 13956  2759  0022               	movlb	2	; select bank2
 13957  275A  0240               	subwf	measureVoltages@i^(0+256),w
 13958  275B                     u11605:	
 13959  275B  1803               	btfsc	3,0
 13960  275C  0008               	return
 13961                           
 13962                           ;ltc6804.c: 103: voltages[i] = 1.0*((float)ltcData[0][i]/10000.0);
 13963  275D  303F               	movlw	63
 13964  275E  0020               	movlb	0	; select bank0
 13965  275F  00D5               	movwf	___flmul@b+3
 13966  2760  3080               	movlw	128
 13967  2761  00D4               	movwf	___flmul@b+2
 13968  2762  3000               	movlw	0
 13969  2763  00D3               	movwf	___flmul@b+1
 13970  2764  3000               	movlw	0
 13971  2765  00D2               	movwf	___flmul@b
 13972  2766  3046               	movlw	70
 13973  2767  00BB               	movwf	___fldiv@a+3
 13974  2768  301C               	movlw	28
 13975  2769  00BA               	movwf	___fldiv@a+2
 13976  276A  3040               	movlw	64
 13977  276B  00B9               	movwf	___fldiv@a+1
 13978  276C  3000               	movlw	0
 13979  276D  00B8               	movwf	___fldiv@a
 13980  276E  0022               	movlb	2	; select bank2
 13981  276F  3540               	lslf	measureVoltages@i^(0+256),w
 13982  2770  3E20               	addlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13983  2771  0086               	movwf	6
 13984  2772  3001               	movlw	1	; select bank2/3
 13985  2773  0087               	movwf	7
 13986  2774  3F40               	moviw [0]fsr1
 13987  2775  0021               	movlb	1	; select bank1
 13988  2776  00E7               	movwf	??_measureVoltages^(0+128)
 13989  2777  3F41               	moviw [1]fsr1
 13990  2778  00E8               	movwf	(??_measureVoltages^(0+128)+1)
 13991  2779  0867               	movf	??_measureVoltages^(0+128),w
 13992  277A  0020               	movlb	0	; select bank0
 13993  277B  00AE               	movwf	___xxtofl@val
 13994  277C  0021               	movlb	1	; select bank1
 13995  277D  0868               	movf	(??_measureVoltages+1)^(0+128),w
 13996  277E  0020               	movlb	0	; select bank0
 13997  277F  00AF               	movwf	___xxtofl@val+1
 13998  2780  01B0               	clrf	___xxtofl@val+2
 13999  2781  01B1               	clrf	___xxtofl@val+3
 14000  2782  3000               	movlw	0
 14001  2783  31A3  235C  31A6   	fcall	___xxtofl
 14002  2786  0020               	movlb	0	; select bank0
 14003  2787  0831               	movf	?___xxtofl+3,w
 14004  2788  00BF               	movwf	___fldiv@b+3
 14005  2789  0830               	movf	?___xxtofl+2,w
 14006  278A  00BE               	movwf	___fldiv@b+2
 14007  278B  082F               	movf	?___xxtofl+1,w
 14008  278C  00BD               	movwf	___fldiv@b+1
 14009  278D  082E               	movf	?___xxtofl,w
 14010  278E  00BC               	movwf	___fldiv@b
 14011  278F  3194  2468  31A6   	fcall	___fldiv
 14012  2792  0020               	movlb	0	; select bank0
 14013  2793  083B               	movf	?___fldiv+3,w
 14014  2794  00D9               	movwf	___flmul@a+3
 14015  2795  083A               	movf	?___fldiv+2,w
 14016  2796  00D8               	movwf	___flmul@a+2
 14017  2797  0839               	movf	?___fldiv+1,w
 14018  2798  00D7               	movwf	___flmul@a+1
 14019  2799  0838               	movf	?___fldiv,w
 14020  279A  00D6               	movwf	___flmul@a
 14021  279B  3183  23D0  31A6   	fcall	___flmul
 14022  279E  0022               	movlb	2	; select bank2
 14023  279F  0840               	movf	measureVoltages@i^(0+256),w
 14024  27A0  0021               	movlb	1	; select bank1
 14025  27A1  00E9               	movwf	(??_measureVoltages+2)^(0+128)
 14026  27A2  3001               	movlw	1
 14027  27A3                     u11615:	
 14028  27A3  35E9               	lslf	(??_measureVoltages+2)^(0+128),f
 14029  27A4  3EFF               	addlw	-1
 14030  27A5  1D03               	skipz
 14031  27A6  2FA3               	goto	u11615
 14032  27A7  3569               	lslf	(??_measureVoltages+2)^(0+128),w
 14033  27A8  0022               	movlb	2	; select bank2
 14034  27A9  073F               	addwf	measureVoltages@voltages^(0+256),w
 14035  27AA  0021               	movlb	1	; select bank1
 14036  27AB  00EA               	movwf	(??_measureVoltages+3)^(0+128)
 14037  27AC  086A               	movf	(??_measureVoltages+3)^(0+128),w
 14038  27AD  0086               	movwf	6
 14039  27AE  3002               	movlw	2	; select bank4/5
 14040  27AF  0087               	movwf	7
 14041  27B0  0020               	movlb	0	; select bank0
 14042  27B1  0852               	movf	?___flmul,w
 14043  27B2  3FC0               	movwi [0]fsr1
 14044  27B3  0853               	movf	?___flmul+1,w
 14045  27B4  3FC1               	movwi [1]fsr1
 14046  27B5  0854               	movf	?___flmul+2,w
 14047  27B6  3FC2               	movwi [2]fsr1
 14048  27B7  0855               	movf	?___flmul+3,w
 14049  27B8  3FC3               	movwi [3]fsr1
 14050                           
 14051                           ;ltc6804.c: 105: if(voltages[i] < 0.1){
 14052  27B9  0022               	movlb	2	; select bank2
 14053  27BA  0840               	movf	measureVoltages@i^(0+256),w
 14054  27BB  0021               	movlb	1	; select bank1
 14055  27BC  00E7               	movwf	??_measureVoltages^(0+128)
 14056  27BD  3001               	movlw	1
 14057  27BE                     u11625:	
 14058  27BE  35E7               	lslf	??_measureVoltages^(0+128),f
 14059  27BF  3EFF               	addlw	-1
 14060  27C0  1D03               	skipz
 14061  27C1  2FBE               	goto	u11625
 14062  27C2  3567               	lslf	??_measureVoltages^(0+128),w
 14063  27C3  0022               	movlb	2	; select bank2
 14064  27C4  073F               	addwf	measureVoltages@voltages^(0+256),w
 14065  27C5  0021               	movlb	1	; select bank1
 14066  27C6  00E8               	movwf	(??_measureVoltages+1)^(0+128)
 14067  27C7  0868               	movf	(??_measureVoltages+1)^(0+128),w
 14068  27C8  0086               	movwf	6
 14069  27C9  3002               	movlw	2	; select bank4/5
 14070  27CA  0087               	movwf	7
 14071  27CB  3F40               	moviw [0]fsr1
 14072  27CC  00D5               	movwf	___flge@ff1^(0+128)
 14073  27CD  3F41               	moviw [1]fsr1
 14074  27CE  00D6               	movwf	(___flge@ff1+1)^(0+128)
 14075  27CF  3F42               	moviw [2]fsr1
 14076  27D0  00D7               	movwf	(___flge@ff1+2)^(0+128)
 14077  27D1  3F43               	moviw [3]fsr1
 14078  27D2  00D8               	movwf	(___flge@ff1+3)^(0+128)
 14079  27D3  303D               	movlw	61
 14080  27D4  00DC               	movwf	(___flge@ff2+3)^(0+128)
 14081  27D5  30CC               	movlw	204
 14082  27D6  00DB               	movwf	(___flge@ff2+2)^(0+128)
 14083  27D7  30CC               	movlw	204
 14084  27D8  00DA               	movwf	(___flge@ff2+1)^(0+128)
 14085  27D9  30CD               	movlw	205
 14086  27DA  00D9               	movwf	___flge@ff2^(0+128)
 14087  27DB  3188  2005  31A6   	fcall	___flge
 14088  27DE  1803               	btfsc	3,0
 14089  27DF  2FFA               	goto	l8276
 14090                           
 14091                           ;ltc6804.c: 106: voltages[i] = 0.0;
 14092  27E0  0022               	movlb	2	; select bank2
 14093  27E1  0840               	movf	measureVoltages@i^(0+256),w
 14094  27E2  0021               	movlb	1	; select bank1
 14095  27E3  00E7               	movwf	??_measureVoltages^(0+128)
 14096  27E4  3001               	movlw	1
 14097  27E5                     u11645:	
 14098  27E5  35E7               	lslf	??_measureVoltages^(0+128),f
 14099  27E6  3EFF               	addlw	-1
 14100  27E7  1D03               	skipz
 14101  27E8  2FE5               	goto	u11645
 14102  27E9  3567               	lslf	??_measureVoltages^(0+128),w
 14103  27EA  0022               	movlb	2	; select bank2
 14104  27EB  073F               	addwf	measureVoltages@voltages^(0+256),w
 14105  27EC  0021               	movlb	1	; select bank1
 14106  27ED  00E8               	movwf	(??_measureVoltages+1)^(0+128)
 14107  27EE  0868               	movf	(??_measureVoltages+1)^(0+128),w
 14108  27EF  0086               	movwf	6
 14109  27F0  3002               	movlw	2	; select bank4/5
 14110  27F1  0087               	movwf	7
 14111  27F2  3000               	movlw	0
 14112  27F3  3FC0               	movwi [0]fsr1
 14113  27F4  3000               	movlw	0
 14114  27F5  3FC1               	movwi [1]fsr1
 14115  27F6  3000               	movlw	0
 14116  27F7  3FC2               	movwi [2]fsr1
 14117  27F8  3000               	movlw	0
 14118  27F9  3FC3               	movwi [3]fsr1
 14119  27FA                     l8276:	
 14120  27FA  3001               	movlw	1
 14121  27FB  0022               	movlb	2	; select bank2
 14122  27FC  07C0               	addwf	measureVoltages@i^(0+256),f
 14123  27FD  3000               	movlw	0
 14124  27FE  3DC1               	addwfc	(measureVoltages@i+1)^(0+256),f
 14125  27FF  2F50               	goto	L9
 14126  2800                     __end_of_measureVoltages:	
 14127                           
 14128                           	psect	text31
 14129  1E75                     __ptext31:	
 14130 ;; *************** function _LTC6804_rdcv *****************
 14131 ;; Defined at:
 14132 ;;		line 404 in file "ltc6804.c"
 14133 ;; Parameters:    Size  Location     Type
 14134 ;;  reg             1    wreg     unsigned char 
 14135 ;;  total_ic        1   27[BANK0 ] unsigned char 
 14136 ;;  cell_codes      1   28[BANK0 ] PTR unsigned int [12]
 14137 ;;		 -> measureVoltages@ltcData(24), 
 14138 ;; Auto vars:     Size  Location     Type
 14139 ;;  reg             1   49[BANK0 ] unsigned char 
 14140 ;;  current_cell    1   51[BANK0 ] unsigned char 
 14141 ;;  current_cell    1   53[BANK0 ] unsigned char 
 14142 ;;  current_ic      1   50[BANK0 ] unsigned char 
 14143 ;;  current_ic      1   52[BANK0 ] unsigned char 
 14144 ;;  cell_reg        1   54[BANK0 ] unsigned char 
 14145 ;;  cell_data       8   34[BANK0 ] unsigned char [8]
 14146 ;;  data_pec        2   47[BANK0 ] int 
 14147 ;;  received_pec    2   45[BANK0 ] int 
 14148 ;;  parsed_cell     2   43[BANK0 ] int 
 14149 ;;  data_counter    1   55[BANK0 ] unsigned char 
 14150 ;;  pec_error       1   42[BANK0 ] unsigned char 
 14151 ;; Return value:  Size  Location     Type
 14152 ;;                  1    wreg      unsigned char 
 14153 ;; Registers used:
 14154 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14155 ;; Tracked objects:
 14156 ;;		On entry : 0/0
 14157 ;;		On exit  : 0/0
 14158 ;;		Unchanged: 0/0
 14159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14160 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14161 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14162 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14163 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14164 ;;Total ram usage:       29 bytes
 14165 ;; Hardware stack levels used:    1
 14166 ;; Hardware stack levels required when called:    5
 14167 ;; This function calls:
 14168 ;;		_LTC6804_rdcv_reg
 14169 ;;		___bmul
 14170 ;;		___wmul
 14171 ;;		_pec15_calc
 14172 ;; This function is called by:
 14173 ;;		_measureVoltages
 14174 ;; This function uses a non-reentrant model
 14175 ;;
 14176                           
 14177                           
 14178                           ;psect for function _LTC6804_rdcv
 14179  1E75                     _LTC6804_rdcv:	
 14180                           
 14181                           ;incstack = 0
 14182                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14183                           ;LTC6804_rdcv@reg stored from wreg
 14184  1E75  0020               	movlb	0	; select bank0
 14185  1E76  00D1               	movwf	LTC6804_rdcv@reg
 14186                           
 14187                           ;ltc6804.c: 410: const char NUM_RX_BYT = 8;
 14188                           ;ltc6804.c: 411: const char BYT_IN_REG = 6;
 14189                           ;ltc6804.c: 412: const char CELL_IN_REG = 3;
 14190                           ;ltc6804.c: 414: char cell_data[8];
 14191                           ;ltc6804.c: 415: char pec_error = 0;
 14192  1E77  01CA               	clrf	LTC6804_rdcv@pec_error
 14193                           
 14194                           ;ltc6804.c: 416: int parsed_cell;
 14195                           ;ltc6804.c: 417: int received_pec;
 14196                           ;ltc6804.c: 418: int data_pec;
 14197                           ;ltc6804.c: 419: char data_counter=0;
 14198  1E78  01D7               	clrf	LTC6804_rdcv@data_counter
 14199                           
 14200                           ;ltc6804.c: 422: if (reg == 0)
 14201  1E79  0851               	movf	LTC6804_rdcv@reg,w
 14202  1E7A  1D03               	btfss	3,2
 14203  1E7B  2F43               	goto	l8108
 14204                           
 14205                           ;ltc6804.c: 423: {
 14206                           ;ltc6804.c: 425: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 14207  1E7C  01D6               	clrf	LTC6804_rdcv@cell_reg
 14208  1E7D  0AD6               	incf	LTC6804_rdcv@cell_reg,f
 14209  1E7E                     L10:	
 14210  1E7E  3005               	movlw	5
 14211  1E7F  0256               	subwf	LTC6804_rdcv@cell_reg,w
 14212  1E80  1803               	btfsc	3,0
 14213  1E81  2FFE               	goto	l8140
 14214                           
 14215                           ;ltc6804.c: 426: {
 14216                           ;ltc6804.c: 427: data_counter = 0;
 14217  1E82  01D7               	clrf	LTC6804_rdcv@data_counter
 14218                           
 14219                           ;ltc6804.c: 428: LTC6804_rdcv_reg(cell_reg, total_ic,cell_data );
 14220  1E83  083B               	movf	LTC6804_rdcv@total_ic,w
 14221  1E84  00BD               	movwf	??_LTC6804_rdcv
 14222  1E85  083D               	movf	??_LTC6804_rdcv,w
 14223  1E86  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 14224  1E87  3042               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14225  1E88  00BE               	movwf	??_LTC6804_rdcv+1
 14226  1E89  083E               	movf	??_LTC6804_rdcv+1,w
 14227  1E8A  00B0               	movwf	LTC6804_rdcv_reg@data
 14228  1E8B  0856               	movf	LTC6804_rdcv@cell_reg,w
 14229  1E8C  31A0  2018  319E   	fcall	_LTC6804_rdcv_reg
 14230                           
 14231                           ;ltc6804.c: 430: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14232  1E8F  0020               	movlb	0	; select bank0
 14233  1E90  01D2               	clrf	LTC6804_rdcv@current_ic
 14234  1E91                     l654:	
 14235  1E91  083B               	movf	LTC6804_rdcv@total_ic,w
 14236  1E92  0252               	subwf	LTC6804_rdcv@current_ic,w
 14237  1E93  1803               	btfsc	3,0
 14238  1E94  2F3E               	goto	l8104
 14239                           
 14240                           ;ltc6804.c: 431: {
 14241                           ;ltc6804.c: 434: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 14242  1E95  01D3               	clrf	LTC6804_rdcv@current_cell
 14243  1E96  3068               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14244  1E97  0084               	movwf	4
 14245  1E98  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14246  1E99  0085               	movwf	5
 14247  1E9A  0800               	movf	0,w	;code access
 14248  1E9B  0253               	subwf	LTC6804_rdcv@current_cell,w
 14249  1E9C  1803               	btfsc	3,0
 14250  1E9D  2EF3               	goto	l8092
 14251  1E9E                     l8082:	
 14252                           
 14253                           ;ltc6804.c: 435: {
 14254                           ;ltc6804.c: 437: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 14255  1E9E  0857               	movf	LTC6804_rdcv@data_counter,w
 14256  1E9F  3E01               	addlw	1
 14257  1EA0  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14258  1EA1  0086               	movwf	6
 14259  1EA2  0187               	clrf	7
 14260  1EA3  0801               	movf	1,w
 14261  1EA4  00BD               	movwf	??_LTC6804_rdcv
 14262  1EA5  01BE               	clrf	??_LTC6804_rdcv+1
 14263  1EA6  083D               	movf	??_LTC6804_rdcv,w
 14264  1EA7  00BE               	movwf	??_LTC6804_rdcv+1
 14265  1EA8  01BD               	clrf	??_LTC6804_rdcv
 14266  1EA9  0857               	movf	LTC6804_rdcv@data_counter,w
 14267  1EAA  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14268  1EAB  0086               	movwf	6
 14269  1EAC  0187               	clrf	7
 14270  1EAD  0801               	movf	1,w
 14271  1EAE  073D               	addwf	??_LTC6804_rdcv,w
 14272  1EAF  00CB               	movwf	LTC6804_rdcv@parsed_cell
 14273  1EB0  083E               	movf	??_LTC6804_rdcv+1,w
 14274  1EB1  1803               	skipnc
 14275  1EB2  0A3E               	incf	??_LTC6804_rdcv+1,w
 14276  1EB3  00CC               	movwf	LTC6804_rdcv@parsed_cell+1
 14277                           
 14278                           ;ltc6804.c: 440: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 14279  1EB4  3018               	movlw	24
 14280  1EB5  00BD               	movwf	??_LTC6804_rdcv
 14281  1EB6  083D               	movf	??_LTC6804_rdcv,w
 14282  1EB7  00F2               	movwf	___bmul@multiplicand
 14283  1EB8  0852               	movf	LTC6804_rdcv@current_ic,w
 14284  1EB9  31AB  2377  319E   	fcall	___bmul
 14285  1EBC  0020               	movlb	0	; select bank0
 14286  1EBD  073C               	addwf	LTC6804_rdcv@cell_codes,w
 14287  1EBE  00BE               	movwf	??_LTC6804_rdcv+1
 14288  1EBF  0856               	movf	LTC6804_rdcv@cell_reg,w
 14289  1EC0  3EFF               	addlw	255
 14290  1EC1  00F2               	movwf	___wmul@multiplier
 14291  1EC2  30FF               	movlw	255
 14292  1EC3  1803               	skipnc
 14293  1EC4  3000               	movlw	0
 14294  1EC5  00F3               	movwf	___wmul@multiplier+1
 14295  1EC6  3068               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14296  1EC7  0084               	movwf	4
 14297  1EC8  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14298  1EC9  0085               	movwf	5
 14299  1ECA  0800               	movf	0,w	;code access
 14300  1ECB  00BF               	movwf	??_LTC6804_rdcv+2
 14301  1ECC  01C0               	clrf	??_LTC6804_rdcv+3
 14302  1ECD  083F               	movf	??_LTC6804_rdcv+2,w
 14303  1ECE  00F4               	movwf	___wmul@multiplicand
 14304  1ECF  0840               	movf	??_LTC6804_rdcv+3,w
 14305  1ED0  00F5               	movwf	___wmul@multiplicand+1
 14306  1ED1  319C  2401  319E   	fcall	___wmul
 14307  1ED4  0872               	movf	?___wmul,w
 14308  1ED5  0020               	movlb	0	; select bank0
 14309  1ED6  0753               	addwf	LTC6804_rdcv@current_cell,w
 14310  1ED7  0709               	addwf	9,w
 14311  1ED8  073E               	addwf	??_LTC6804_rdcv+1,w
 14312  1ED9  00C1               	movwf	??_LTC6804_rdcv+4
 14313  1EDA  0841               	movf	??_LTC6804_rdcv+4,w
 14314  1EDB  0086               	movwf	6
 14315  1EDC  3001               	movlw	1	; select bank2/3
 14316  1EDD  0087               	movwf	7
 14317  1EDE  084B               	movf	LTC6804_rdcv@parsed_cell,w
 14318  1EDF  3FC0               	movwi [0]fsr1
 14319  1EE0  084C               	movf	LTC6804_rdcv@parsed_cell+1,w
 14320  1EE1  3FC1               	movwi [1]fsr1
 14321                           
 14322                           ;ltc6804.c: 441: data_counter = data_counter + 2;
 14323  1EE2  0857               	movf	LTC6804_rdcv@data_counter,w
 14324  1EE3  3E02               	addlw	2
 14325  1EE4  00BD               	movwf	??_LTC6804_rdcv
 14326  1EE5  083D               	movf	??_LTC6804_rdcv,w
 14327  1EE6  00D7               	movwf	LTC6804_rdcv@data_counter
 14328  1EE7  3001               	movlw	1
 14329  1EE8  00BD               	movwf	??_LTC6804_rdcv
 14330  1EE9  083D               	movf	??_LTC6804_rdcv,w
 14331  1EEA  07D3               	addwf	LTC6804_rdcv@current_cell,f
 14332  1EEB  3068               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14333  1EEC  0084               	movwf	4
 14334  1EED  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14335  1EEE  0085               	movwf	5
 14336  1EEF  0800               	movf	0,w	;code access
 14337  1EF0  0253               	subwf	LTC6804_rdcv@current_cell,w
 14338  1EF1  1C03               	skipc
 14339  1EF2  2E9E               	goto	l8082
 14340  1EF3                     l8092:	
 14341                           
 14342                           ;ltc6804.c: 443: }
 14343                           ;ltc6804.c: 445: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 14344  1EF3  0857               	movf	LTC6804_rdcv@data_counter,w
 14345  1EF4  3E01               	addlw	1
 14346  1EF5  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14347  1EF6  0086               	movwf	6
 14348  1EF7  0187               	clrf	7
 14349  1EF8  0801               	movf	1,w
 14350  1EF9  00BD               	movwf	??_LTC6804_rdcv
 14351  1EFA  01BE               	clrf	??_LTC6804_rdcv+1
 14352  1EFB  0857               	movf	LTC6804_rdcv@data_counter,w
 14353  1EFC  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14354  1EFD  0086               	movwf	6
 14355  1EFE  0187               	clrf	7
 14356  1EFF  0801               	movf	1,w
 14357  1F00  00BF               	movwf	??_LTC6804_rdcv+2
 14358  1F01  01C0               	clrf	??_LTC6804_rdcv+3
 14359  1F02  083F               	movf	??_LTC6804_rdcv+2,w
 14360  1F03  00C0               	movwf	??_LTC6804_rdcv+3
 14361  1F04  01BF               	clrf	??_LTC6804_rdcv+2
 14362  1F05  083D               	movf	??_LTC6804_rdcv,w
 14363  1F06  073F               	addwf	??_LTC6804_rdcv+2,w
 14364  1F07  00CD               	movwf	LTC6804_rdcv@received_pec
 14365  1F08  083E               	movf	??_LTC6804_rdcv+1,w
 14366  1F09  3D40               	addwfc	??_LTC6804_rdcv+3,w
 14367  1F0A  00CE               	movwf	LTC6804_rdcv@received_pec+1
 14368                           
 14369                           ;ltc6804.c: 447: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14370  1F0B  30C2               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14371  1F0C  0084               	movwf	4
 14372  1F0D  30B0               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14373  1F0E  0085               	movwf	5
 14374  1F0F  0800               	movf	0,w	;code access
 14375  1F10  00BD               	movwf	??_LTC6804_rdcv
 14376  1F11  083D               	movf	??_LTC6804_rdcv,w
 14377  1F12  00F2               	movwf	___bmul@multiplicand
 14378  1F13  0852               	movf	LTC6804_rdcv@current_ic,w
 14379  1F14  31AB  2377  319E   	fcall	___bmul
 14380  1F17  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14381  1F18  00F8               	movwf	pec15_calc@data
 14382  1F19  3000               	movlw	0
 14383  1F1A  00F9               	movwf	pec15_calc@data+1
 14384  1F1B  3069               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14385  1F1C  0084               	movwf	4
 14386  1F1D  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14387  1F1E  0085               	movwf	5
 14388  1F1F  0800               	movf	0,w	;code access
 14389  1F20  31AE  2666  319E   	fcall	_pec15_calc
 14390  1F23  0879               	movf	?_pec15_calc+1,w
 14391  1F24  0020               	movlb	0	; select bank0
 14392  1F25  00D0               	movwf	LTC6804_rdcv@data_pec+1
 14393  1F26  0878               	movf	?_pec15_calc,w
 14394  1F27  00CF               	movwf	LTC6804_rdcv@data_pec
 14395                           
 14396                           ;ltc6804.c: 448: if(received_pec != data_pec)
 14397  1F28  0850               	movf	LTC6804_rdcv@data_pec+1,w
 14398  1F29  064E               	xorwf	LTC6804_rdcv@received_pec+1,w
 14399  1F2A  1D03               	skipz
 14400  1F2B  2F2E               	goto	u11385
 14401  1F2C  084F               	movf	LTC6804_rdcv@data_pec,w
 14402  1F2D  064D               	xorwf	LTC6804_rdcv@received_pec,w
 14403  1F2E                     u11385:	
 14404  1F2E  1903               	skipnz
 14405  1F2F  2F34               	goto	l8100
 14406                           
 14407                           ;ltc6804.c: 449: {
 14408                           ;ltc6804.c: 450: pec_error = -1;
 14409  1F30  30FF               	movlw	255
 14410  1F31  00BD               	movwf	??_LTC6804_rdcv
 14411  1F32  083D               	movf	??_LTC6804_rdcv,w
 14412  1F33  00CA               	movwf	LTC6804_rdcv@pec_error
 14413  1F34                     l8100:	
 14414                           
 14415                           ;ltc6804.c: 452: }
 14416                           ;ltc6804.c: 453: data_counter=data_counter+2;
 14417  1F34  0857               	movf	LTC6804_rdcv@data_counter,w
 14418  1F35  3E02               	addlw	2
 14419  1F36  00BD               	movwf	??_LTC6804_rdcv
 14420  1F37  083D               	movf	??_LTC6804_rdcv,w
 14421  1F38  00D7               	movwf	LTC6804_rdcv@data_counter
 14422  1F39  3001               	movlw	1
 14423  1F3A  00BD               	movwf	??_LTC6804_rdcv
 14424  1F3B  083D               	movf	??_LTC6804_rdcv,w
 14425  1F3C  07D2               	addwf	LTC6804_rdcv@current_ic,f
 14426  1F3D  2E91               	goto	l654
 14427  1F3E                     l8104:	
 14428  1F3E  3001               	movlw	1
 14429  1F3F  00BD               	movwf	??_LTC6804_rdcv
 14430  1F40  083D               	movf	??_LTC6804_rdcv,w
 14431  1F41  07D6               	addwf	LTC6804_rdcv@cell_reg,f
 14432  1F42  2E7E               	goto	L10
 14433  1F43                     l8108:	
 14434                           ;ltc6804.c: 455: }
 14435                           ;ltc6804.c: 456: }
 14436                           ;ltc6804.c: 457: }
 14437                           
 14438                           
 14439                           ;ltc6804.c: 459: else
 14440                           ;ltc6804.c: 460: {
 14441                           ;ltc6804.c: 462: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 14442  1F43  083B               	movf	LTC6804_rdcv@total_ic,w
 14443  1F44  00BD               	movwf	??_LTC6804_rdcv
 14444  1F45  083D               	movf	??_LTC6804_rdcv,w
 14445  1F46  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 14446  1F47  3042               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14447  1F48  00BE               	movwf	??_LTC6804_rdcv+1
 14448  1F49  083E               	movf	??_LTC6804_rdcv+1,w
 14449  1F4A  00B0               	movwf	LTC6804_rdcv_reg@data
 14450  1F4B  0851               	movf	LTC6804_rdcv@reg,w
 14451  1F4C  31A0  2018  319E   	fcall	_LTC6804_rdcv_reg
 14452                           
 14453                           ;ltc6804.c: 463: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14454  1F4F  0020               	movlb	0	; select bank0
 14455  1F50  01D4               	clrf	LTC6804_rdcv@current_ic_1329
 14456  1F51                     l661:	
 14457  1F51  083B               	movf	LTC6804_rdcv@total_ic,w
 14458  1F52  0254               	subwf	LTC6804_rdcv@current_ic_1329,w
 14459  1F53  1803               	btfsc	3,0
 14460  1F54  2FFE               	goto	l8140
 14461                           
 14462                           ;ltc6804.c: 464: {
 14463                           ;ltc6804.c: 466: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 14464  1F55  01D5               	clrf	LTC6804_rdcv@current_cell_1330
 14465  1F56  3068               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14466  1F57  0084               	movwf	4
 14467  1F58  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14468  1F59  0085               	movwf	5
 14469  1F5A  0800               	movf	0,w	;code access
 14470  1F5B  0255               	subwf	LTC6804_rdcv@current_cell_1330,w
 14471  1F5C  1803               	btfsc	3,0
 14472  1F5D  2FB3               	goto	l8128
 14473  1F5E                     l8118:	
 14474                           
 14475                           ;ltc6804.c: 467: {
 14476                           ;ltc6804.c: 469: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 14477  1F5E  0857               	movf	LTC6804_rdcv@data_counter,w
 14478  1F5F  3E01               	addlw	1
 14479  1F60  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14480  1F61  0086               	movwf	6
 14481  1F62  0187               	clrf	7
 14482  1F63  0801               	movf	1,w
 14483  1F64  00BD               	movwf	??_LTC6804_rdcv
 14484  1F65  01BE               	clrf	??_LTC6804_rdcv+1
 14485  1F66  083D               	movf	??_LTC6804_rdcv,w
 14486  1F67  00BE               	movwf	??_LTC6804_rdcv+1
 14487  1F68  01BD               	clrf	??_LTC6804_rdcv
 14488  1F69  0857               	movf	LTC6804_rdcv@data_counter,w
 14489  1F6A  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14490  1F6B  0086               	movwf	6
 14491  1F6C  0187               	clrf	7
 14492  1F6D  0801               	movf	1,w
 14493  1F6E  073D               	addwf	??_LTC6804_rdcv,w
 14494  1F6F  00CB               	movwf	LTC6804_rdcv@parsed_cell
 14495  1F70  083E               	movf	??_LTC6804_rdcv+1,w
 14496  1F71  1803               	skipnc
 14497  1F72  0A3E               	incf	??_LTC6804_rdcv+1,w
 14498  1F73  00CC               	movwf	LTC6804_rdcv@parsed_cell+1
 14499                           
 14500                           ;ltc6804.c: 472: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 14501  1F74  3018               	movlw	24
 14502  1F75  00BD               	movwf	??_LTC6804_rdcv
 14503  1F76  083D               	movf	??_LTC6804_rdcv,w
 14504  1F77  00F2               	movwf	___bmul@multiplicand
 14505  1F78  0854               	movf	LTC6804_rdcv@current_ic_1329,w
 14506  1F79  31AB  2377  319E   	fcall	___bmul
 14507  1F7C  0020               	movlb	0	; select bank0
 14508  1F7D  073C               	addwf	LTC6804_rdcv@cell_codes,w
 14509  1F7E  00BE               	movwf	??_LTC6804_rdcv+1
 14510  1F7F  0851               	movf	LTC6804_rdcv@reg,w
 14511  1F80  3EFF               	addlw	255
 14512  1F81  00F2               	movwf	___wmul@multiplier
 14513  1F82  30FF               	movlw	255
 14514  1F83  1803               	skipnc
 14515  1F84  3000               	movlw	0
 14516  1F85  00F3               	movwf	___wmul@multiplier+1
 14517  1F86  3068               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14518  1F87  0084               	movwf	4
 14519  1F88  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14520  1F89  0085               	movwf	5
 14521  1F8A  0800               	movf	0,w	;code access
 14522  1F8B  00BF               	movwf	??_LTC6804_rdcv+2
 14523  1F8C  01C0               	clrf	??_LTC6804_rdcv+3
 14524  1F8D  083F               	movf	??_LTC6804_rdcv+2,w
 14525  1F8E  00F4               	movwf	___wmul@multiplicand
 14526  1F8F  0840               	movf	??_LTC6804_rdcv+3,w
 14527  1F90  00F5               	movwf	___wmul@multiplicand+1
 14528  1F91  319C  2401  319E   	fcall	___wmul
 14529  1F94  0872               	movf	?___wmul,w
 14530  1F95  0020               	movlb	0	; select bank0
 14531  1F96  0755               	addwf	LTC6804_rdcv@current_cell_1330,w
 14532  1F97  0709               	addwf	9,w
 14533  1F98  073E               	addwf	??_LTC6804_rdcv+1,w
 14534  1F99  00C1               	movwf	??_LTC6804_rdcv+4
 14535  1F9A  0841               	movf	??_LTC6804_rdcv+4,w
 14536  1F9B  0086               	movwf	6
 14537  1F9C  3001               	movlw	1	; select bank2/3
 14538  1F9D  0087               	movwf	7
 14539  1F9E  084B               	movf	LTC6804_rdcv@parsed_cell,w
 14540  1F9F  3FC0               	movwi [0]fsr1
 14541  1FA0  084C               	movf	LTC6804_rdcv@parsed_cell+1,w
 14542  1FA1  3FC1               	movwi [1]fsr1
 14543                           
 14544                           ;ltc6804.c: 473: data_counter= data_counter + 2;
 14545  1FA2  0857               	movf	LTC6804_rdcv@data_counter,w
 14546  1FA3  3E02               	addlw	2
 14547  1FA4  00BD               	movwf	??_LTC6804_rdcv
 14548  1FA5  083D               	movf	??_LTC6804_rdcv,w
 14549  1FA6  00D7               	movwf	LTC6804_rdcv@data_counter
 14550  1FA7  3001               	movlw	1
 14551  1FA8  00BD               	movwf	??_LTC6804_rdcv
 14552  1FA9  083D               	movf	??_LTC6804_rdcv,w
 14553  1FAA  07D5               	addwf	LTC6804_rdcv@current_cell_1330,f
 14554  1FAB  3068               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14555  1FAC  0084               	movwf	4
 14556  1FAD  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14557  1FAE  0085               	movwf	5
 14558  1FAF  0800               	movf	0,w	;code access
 14559  1FB0  0255               	subwf	LTC6804_rdcv@current_cell_1330,w
 14560  1FB1  1C03               	skipc
 14561  1FB2  2F5E               	goto	l8118
 14562  1FB3                     l8128:	
 14563                           
 14564                           ;ltc6804.c: 475: }
 14565                           ;ltc6804.c: 477: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 14566  1FB3  0857               	movf	LTC6804_rdcv@data_counter,w
 14567  1FB4  3E01               	addlw	1
 14568  1FB5  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14569  1FB6  0086               	movwf	6
 14570  1FB7  0187               	clrf	7
 14571  1FB8  0801               	movf	1,w
 14572  1FB9  00BD               	movwf	??_LTC6804_rdcv
 14573  1FBA  01BE               	clrf	??_LTC6804_rdcv+1
 14574  1FBB  0857               	movf	LTC6804_rdcv@data_counter,w
 14575  1FBC  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14576  1FBD  0086               	movwf	6
 14577  1FBE  0187               	clrf	7
 14578  1FBF  0801               	movf	1,w
 14579  1FC0  00BF               	movwf	??_LTC6804_rdcv+2
 14580  1FC1  01C0               	clrf	??_LTC6804_rdcv+3
 14581  1FC2  083F               	movf	??_LTC6804_rdcv+2,w
 14582  1FC3  00C0               	movwf	??_LTC6804_rdcv+3
 14583  1FC4  01BF               	clrf	??_LTC6804_rdcv+2
 14584  1FC5  083D               	movf	??_LTC6804_rdcv,w
 14585  1FC6  073F               	addwf	??_LTC6804_rdcv+2,w
 14586  1FC7  00CD               	movwf	LTC6804_rdcv@received_pec
 14587  1FC8  083E               	movf	??_LTC6804_rdcv+1,w
 14588  1FC9  3D40               	addwfc	??_LTC6804_rdcv+3,w
 14589  1FCA  00CE               	movwf	LTC6804_rdcv@received_pec+1
 14590                           
 14591                           ;ltc6804.c: 479: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14592  1FCB  30C2               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14593  1FCC  0084               	movwf	4
 14594  1FCD  30B0               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14595  1FCE  0085               	movwf	5
 14596  1FCF  0800               	movf	0,w	;code access
 14597  1FD0  00BD               	movwf	??_LTC6804_rdcv
 14598  1FD1  083D               	movf	??_LTC6804_rdcv,w
 14599  1FD2  00F2               	movwf	___bmul@multiplicand
 14600  1FD3  0854               	movf	LTC6804_rdcv@current_ic_1329,w
 14601  1FD4  31AB  2377  319E   	fcall	___bmul
 14602  1FD7  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14603  1FD8  00F8               	movwf	pec15_calc@data
 14604  1FD9  3000               	movlw	0
 14605  1FDA  00F9               	movwf	pec15_calc@data+1
 14606  1FDB  3069               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14607  1FDC  0084               	movwf	4
 14608  1FDD  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14609  1FDE  0085               	movwf	5
 14610  1FDF  0800               	movf	0,w	;code access
 14611  1FE0  31AE  2666  319E   	fcall	_pec15_calc
 14612  1FE3  0879               	movf	?_pec15_calc+1,w
 14613  1FE4  0020               	movlb	0	; select bank0
 14614  1FE5  00D0               	movwf	LTC6804_rdcv@data_pec+1
 14615  1FE6  0878               	movf	?_pec15_calc,w
 14616  1FE7  00CF               	movwf	LTC6804_rdcv@data_pec
 14617                           
 14618                           ;ltc6804.c: 480: if(received_pec != data_pec)
 14619  1FE8  0850               	movf	LTC6804_rdcv@data_pec+1,w
 14620  1FE9  064E               	xorwf	LTC6804_rdcv@received_pec+1,w
 14621  1FEA  1D03               	skipz
 14622  1FEB  2FEE               	goto	u11435
 14623  1FEC  084F               	movf	LTC6804_rdcv@data_pec,w
 14624  1FED  064D               	xorwf	LTC6804_rdcv@received_pec,w
 14625  1FEE                     u11435:	
 14626  1FEE  1903               	skipnz
 14627  1FEF  2FF4               	goto	l8136
 14628                           
 14629                           ;ltc6804.c: 481: {
 14630                           ;ltc6804.c: 482: pec_error = -1;
 14631  1FF0  30FF               	movlw	255
 14632  1FF1  00BD               	movwf	??_LTC6804_rdcv
 14633  1FF2  083D               	movf	??_LTC6804_rdcv,w
 14634  1FF3  00CA               	movwf	LTC6804_rdcv@pec_error
 14635  1FF4                     l8136:	
 14636                           
 14637                           ;ltc6804.c: 484: }
 14638                           ;ltc6804.c: 485: data_counter= data_counter + 2;
 14639  1FF4  0857               	movf	LTC6804_rdcv@data_counter,w
 14640  1FF5  3E02               	addlw	2
 14641  1FF6  00BD               	movwf	??_LTC6804_rdcv
 14642  1FF7  083D               	movf	??_LTC6804_rdcv,w
 14643  1FF8  00D7               	movwf	LTC6804_rdcv@data_counter
 14644  1FF9  3001               	movlw	1
 14645  1FFA  00BD               	movwf	??_LTC6804_rdcv
 14646  1FFB  083D               	movf	??_LTC6804_rdcv,w
 14647  1FFC  07D4               	addwf	LTC6804_rdcv@current_ic_1329,f
 14648  1FFD  2F51               	goto	l661
 14649  1FFE                     l8140:	
 14650                           
 14651                           ;ltc6804.c: 487: }
 14652                           ;ltc6804.c: 488: }
 14653                           ;ltc6804.c: 492: return(pec_error);
 14654  1FFE  084A               	movf	LTC6804_rdcv@pec_error,w
 14655  1FFF  0008               	return
 14656  2000                     __end_of_LTC6804_rdcv:	
 14657                           
 14658                           	psect	text32
 14659  2018                     __ptext32:	
 14660 ;; *************** function _LTC6804_rdcv_reg *****************
 14661 ;; Defined at:
 14662 ;;		line 542 in file "ltc6804.c"
 14663 ;; Parameters:    Size  Location     Type
 14664 ;;  reg             1    wreg     unsigned char 
 14665 ;;  total_ic        1   15[BANK0 ] unsigned char 
 14666 ;;  data            1   16[BANK0 ] PTR unsigned char 
 14667 ;;		 -> LTC6804_rdcv@cell_data(8), 
 14668 ;; Auto vars:     Size  Location     Type
 14669 ;;  reg             1   26[BANK0 ] unsigned char 
 14670 ;;  cmd             4   22[BANK0 ] unsigned char [4]
 14671 ;;  cmd_pec         2   20[BANK0 ] int 
 14672 ;; Return value:  Size  Location     Type
 14673 ;;                  1    wreg      void 
 14674 ;; Registers used:
 14675 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14676 ;; Tracked objects:
 14677 ;;		On entry : 0/0
 14678 ;;		On exit  : 0/0
 14679 ;;		Unchanged: 0/0
 14680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14681 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14682 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14683 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14684 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14685 ;;Total ram usage:       12 bytes
 14686 ;; Hardware stack levels used:    1
 14687 ;; Hardware stack levels required when called:    4
 14688 ;; This function calls:
 14689 ;;		___bmul
 14690 ;;		_pec15_calc
 14691 ;;		_spi_write_read
 14692 ;;		_wakeup_idle
 14693 ;; This function is called by:
 14694 ;;		_LTC6804_rdcv
 14695 ;; This function uses a non-reentrant model
 14696 ;;
 14697                           
 14698                           
 14699                           ;psect for function _LTC6804_rdcv_reg
 14700  2018                     _LTC6804_rdcv_reg:	
 14701                           
 14702                           ;incstack = 0
 14703                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14704                           ;LTC6804_rdcv_reg@reg stored from wreg
 14705  2018  0020               	movlb	0	; select bank0
 14706  2019  00BA               	movwf	LTC6804_rdcv_reg@reg
 14707                           
 14708                           ;ltc6804.c: 547: const char REG_LEN = 8;
 14709                           ;ltc6804.c: 548: char cmd[4];
 14710                           ;ltc6804.c: 549: int cmd_pec;
 14711                           ;ltc6804.c: 552: if (reg == 1)
 14712  201A  033A               	decf	LTC6804_rdcv_reg@reg,w
 14713  201B  1D03               	btfss	3,2
 14714  201C  281F               	goto	l7752
 14715                           
 14716                           ;ltc6804.c: 553: {
 14717                           ;ltc6804.c: 554: cmd[1] = 0x04;
 14718  201D  3004               	movlw	4
 14719  201E  2830               	goto	L11
 14720  201F                     l7752:	
 14721                           ;ltc6804.c: 556: }
 14722                           
 14723                           ;ltc6804.c: 555: cmd[0] = 0x00;
 14724                           
 14725                           
 14726                           ;ltc6804.c: 557: else if(reg == 2)
 14727  201F  3002               	movlw	2
 14728  2020  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 14729  2021  1D03               	btfss	3,2
 14730  2022  2825               	goto	l7758
 14731                           
 14732                           ;ltc6804.c: 558: {
 14733                           ;ltc6804.c: 559: cmd[1] = 0x06;
 14734  2023  3006               	movlw	6
 14735  2024  2830               	goto	L11
 14736  2025                     l7758:	
 14737                           ;ltc6804.c: 561: }
 14738                           
 14739                           ;ltc6804.c: 560: cmd[0] = 0x00;
 14740                           
 14741                           
 14742                           ;ltc6804.c: 562: else if(reg == 3)
 14743  2025  3003               	movlw	3
 14744  2026  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 14745  2027  1D03               	btfss	3,2
 14746  2028  282B               	goto	l7764
 14747                           
 14748                           ;ltc6804.c: 563: {
 14749                           ;ltc6804.c: 564: cmd[1] = 0x08;
 14750  2029  3008               	movlw	8
 14751  202A  2830               	goto	L11
 14752  202B                     l7764:	
 14753                           ;ltc6804.c: 566: }
 14754                           
 14755                           ;ltc6804.c: 565: cmd[0] = 0x00;
 14756                           
 14757                           
 14758                           ;ltc6804.c: 567: else if(reg == 4)
 14759  202B  3004               	movlw	4
 14760  202C  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 14761  202D  1D03               	btfss	3,2
 14762  202E  2834               	goto	l7770
 14763                           
 14764                           ;ltc6804.c: 568: {
 14765                           ;ltc6804.c: 569: cmd[1] = 0x0A;
 14766  202F  300A               	movlw	10
 14767  2030                     L11:	
 14768  2030  00B1               	movwf	??_LTC6804_rdcv_reg
 14769  2031  0831               	movf	??_LTC6804_rdcv_reg,w
 14770  2032  00B7               	movwf	LTC6804_rdcv_reg@cmd+1
 14771                           
 14772                           ;ltc6804.c: 570: cmd[0] = 0x00;
 14773  2033  01B6               	clrf	LTC6804_rdcv_reg@cmd
 14774  2034                     l7770:	
 14775                           
 14776                           ;ltc6804.c: 571: }
 14777                           ;ltc6804.c: 574: cmd_pec = pec15_calc(2, cmd);
 14778  2034  3036               	movlw	low LTC6804_rdcv_reg@cmd
 14779  2035  00F8               	movwf	pec15_calc@data
 14780  2036  3000               	movlw	high LTC6804_rdcv_reg@cmd
 14781  2037  00F9               	movwf	pec15_calc@data+1
 14782  2038  3002               	movlw	2
 14783  2039  31AE  2666  31A0   	fcall	_pec15_calc
 14784  203C  0879               	movf	?_pec15_calc+1,w
 14785  203D  0020               	movlb	0	; select bank0
 14786  203E  00B5               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 14787  203F  0878               	movf	?_pec15_calc,w
 14788  2040  00B4               	movwf	LTC6804_rdcv_reg@cmd_pec
 14789                           
 14790                           ;ltc6804.c: 575: cmd[2] = (char)(cmd_pec >> 8);
 14791  2041  0835               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 14792  2042  00B1               	movwf	??_LTC6804_rdcv_reg
 14793  2043  0831               	movf	??_LTC6804_rdcv_reg,w
 14794  2044  00B8               	movwf	LTC6804_rdcv_reg@cmd+2
 14795                           
 14796                           ;ltc6804.c: 576: cmd[3] = (char)(cmd_pec);
 14797  2045  0834               	movf	LTC6804_rdcv_reg@cmd_pec,w
 14798  2046  00B1               	movwf	??_LTC6804_rdcv_reg
 14799  2047  0831               	movf	??_LTC6804_rdcv_reg,w
 14800  2048  00B9               	movwf	LTC6804_rdcv_reg@cmd+3
 14801                           
 14802                           ;ltc6804.c: 579: wakeup_idle ();
 14803  2049  31AB  2328  31A0   	fcall	_wakeup_idle
 14804                           
 14805                           ;ltc6804.c: 582: LATDbits.LATD3 = 0;
 14806  204C  0022               	movlb	2	; select bank2
 14807  204D  118F               	bcf	15,3	;volatile
 14808                           
 14809                           ;ltc6804.c: 583: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 14810  204E  3004               	movlw	4
 14811  204F  0020               	movlb	0	; select bank0
 14812  2050  00B1               	movwf	??_LTC6804_rdcv_reg
 14813  2051  0831               	movf	??_LTC6804_rdcv_reg,w
 14814  2052  00F6               	movwf	spi_write_read@tx_len
 14815  2053  0830               	movf	LTC6804_rdcv_reg@data,w
 14816  2054  00F7               	movwf	spi_write_read@rx_data
 14817  2055  3000               	movlw	0
 14818  2056  00F8               	movwf	spi_write_read@rx_data+1
 14819  2057  082F               	movf	LTC6804_rdcv_reg@total_ic,w
 14820  2058  00B2               	movwf	??_LTC6804_rdcv_reg+1
 14821  2059  0832               	movf	??_LTC6804_rdcv_reg+1,w
 14822  205A  00F2               	movwf	___bmul@multiplicand
 14823  205B  3067               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 14824  205C  0084               	movwf	4
 14825  205D  30B1               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 14826  205E  0085               	movwf	5
 14827  205F  0800               	movf	0,w	;code access
 14828  2060  31AB  2377  31A0   	fcall	___bmul
 14829  2063  0020               	movlb	0	; select bank0
 14830  2064  00B3               	movwf	??_LTC6804_rdcv_reg+2
 14831  2065  0833               	movf	??_LTC6804_rdcv_reg+2,w
 14832  2066  00F9               	movwf	spi_write_read@rx_len
 14833  2067  3036               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 14834  2068  31AC  24EB         	fcall	_spi_write_read
 14835                           
 14836                           ;ltc6804.c: 584: LATDbits.LATD3 = 1;
 14837  206A  0022               	movlb	2	; select bank2
 14838  206B  158F               	bsf	15,3	;volatile
 14839  206C  0008               	return
 14840  206D                     __end_of_LTC6804_rdcv_reg:	
 14841                           
 14842                           	psect	text33
 14843  2CEB                     __ptext33:	
 14844 ;; *************** function _spi_write_read *****************
 14845 ;; Defined at:
 14846 ;;		line 1155 in file "ltc6804.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  tx_Data         1    wreg     PTR unsigned char 
 14849 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 14850 ;;		 -> LTC6804_rdcv_reg@cmd(4), 
 14851 ;;  tx_len          1    6[COMMON] unsigned char 
 14852 ;;  rx_data         2    7[COMMON] PTR unsigned char 
 14853 ;;		 -> LTC6804_rdcv@cell_data(8), RAM(4096), NULL(0), 
 14854 ;;  rx_len          1    9[COMMON] unsigned char 
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;  tx_Data         1    5[BANK0 ] PTR unsigned char 
 14857 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 14858 ;;		 -> LTC6804_rdcv_reg@cmd(4), 
 14859 ;;  i               1    7[BANK0 ] unsigned char 
 14860 ;;  i               1    6[BANK0 ] unsigned char 
 14861 ;; Return value:  Size  Location     Type
 14862 ;;                  1    wreg      void 
 14863 ;; Registers used:
 14864 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14865 ;; Tracked objects:
 14866 ;;		On entry : 0/0
 14867 ;;		On exit  : 0/0
 14868 ;;		Unchanged: 0/0
 14869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14870 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14871 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14872 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14873 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14874 ;;Total ram usage:       12 bytes
 14875 ;; Hardware stack levels used:    1
 14876 ;; Hardware stack levels required when called:    3
 14877 ;; This function calls:
 14878 ;;		_spi_read
 14879 ;;		_spi_write
 14880 ;; This function is called by:
 14881 ;;		_LTC6804_rdcv_reg
 14882 ;;		_LTC6804_rdaux_reg
 14883 ;;		_LTC6804_clrcell
 14884 ;;		_LTC6804_clraux
 14885 ;;		_LTC6804_rdcfg
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           
 14890                           ;psect for function _spi_write_read
 14891  2CEB                     _spi_write_read:	
 14892                           
 14893                           ;incstack = 0
 14894                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14895                           ;spi_write_read@tx_Data stored from wreg
 14896  2CEB  0020               	movlb	0	; select bank0
 14897  2CEC  00A5               	movwf	spi_write_read@tx_Data
 14898                           
 14899                           ;ltc6804.c: 1161: for(char i = 0; i < tx_len; i++)
 14900  2CED  01A6               	clrf	spi_write_read@i
 14901  2CEE                     l6978:	
 14902  2CEE  0876               	movf	spi_write_read@tx_len,w
 14903  2CEF  0226               	subwf	spi_write_read@i,w
 14904  2CF0  1803               	btfsc	3,0
 14905  2CF1  2D02               	goto	l6980
 14906                           
 14907                           ;ltc6804.c: 1162: {
 14908                           ;ltc6804.c: 1163: spi_write(tx_Data[i]);
 14909  2CF2  0826               	movf	spi_write_read@i,w
 14910  2CF3  0725               	addwf	spi_write_read@tx_Data,w
 14911  2CF4  00A0               	movwf	??_spi_write_read
 14912  2CF5  0820               	movf	??_spi_write_read,w
 14913  2CF6  0086               	movwf	6
 14914  2CF7  0187               	clrf	7
 14915  2CF8  0801               	movf	1,w
 14916  2CF9  31AB  233A  31AC   	fcall	_spi_write
 14917  2CFC  3001               	movlw	1
 14918  2CFD  0020               	movlb	0	; select bank0
 14919  2CFE  00A0               	movwf	??_spi_write_read
 14920  2CFF  0820               	movf	??_spi_write_read,w
 14921  2D00  07A6               	addwf	spi_write_read@i,f
 14922  2D01  2CEE               	goto	l6978
 14923  2D02                     l6980:	
 14924                           
 14925                           ;ltc6804.c: 1165: }
 14926                           ;ltc6804.c: 1167: for(char i = 0; i < rx_len; i++)
 14927  2D02  01A7               	clrf	spi_write_read@i_1411
 14928  2D03                     l6986:	
 14929  2D03  0879               	movf	spi_write_read@rx_len,w
 14930  2D04  0227               	subwf	spi_write_read@i_1411,w
 14931  2D05  1803               	btfsc	3,0
 14932  2D06  0008               	return
 14933                           
 14934                           ;ltc6804.c: 1168: {
 14935                           ;ltc6804.c: 1169: rx_data[i] = (char)spi_read(0xFF);
 14936  2D07  30FF               	movlw	255
 14937  2D08  31AB  2350  31AC   	fcall	_spi_read
 14938  2D0B  0020               	movlb	0	; select bank0
 14939  2D0C  00A0               	movwf	??_spi_write_read
 14940  2D0D  0827               	movf	spi_write_read@i_1411,w
 14941  2D0E  00A1               	movwf	??_spi_write_read+1
 14942  2D0F  01A2               	clrf	??_spi_write_read+2
 14943  2D10  0821               	movf	??_spi_write_read+1,w
 14944  2D11  0777               	addwf	spi_write_read@rx_data,w
 14945  2D12  00A3               	movwf	??_spi_write_read+3
 14946  2D13  0822               	movf	??_spi_write_read+2,w
 14947  2D14  3D78               	addwfc	spi_write_read@rx_data+1,w
 14948  2D15  00A4               	movwf	??_spi_write_read+4
 14949  2D16  0823               	movf	??_spi_write_read+3,w
 14950  2D17  0086               	movwf	6
 14951  2D18  0824               	movf	??_spi_write_read+4,w
 14952  2D19  0087               	movwf	7
 14953  2D1A  0820               	movf	??_spi_write_read,w
 14954  2D1B  0081               	movwf	1
 14955  2D1C  3001               	movlw	1
 14956  2D1D  00A0               	movwf	??_spi_write_read
 14957  2D1E  0820               	movf	??_spi_write_read,w
 14958  2D1F  07A7               	addwf	spi_write_read@i_1411,f
 14959  2D20  2D03               	goto	l6986
 14960  2D21                     __end_of_spi_write_read:	
 14961                           
 14962                           	psect	text34
 14963  2B50                     __ptext34:	
 14964 ;; *************** function _spi_read *****************
 14965 ;; Defined at:
 14966 ;;		line 42 in file "spi.c"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;  data            1    wreg     unsigned char 
 14969 ;; Auto vars:     Size  Location     Type
 14970 ;;  data            1    3[COMMON] unsigned char 
 14971 ;;  readData        1    4[COMMON] unsigned char 
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      unsigned char 
 14974 ;; Registers used:
 14975 ;;		wreg
 14976 ;; Tracked objects:
 14977 ;;		On entry : 0/0
 14978 ;;		On exit  : 0/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14983 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14984 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;Total ram usage:        3 bytes
 14986 ;; Hardware stack levels used:    1
 14987 ;; Hardware stack levels required when called:    2
 14988 ;; This function calls:
 14989 ;;		Nothing
 14990 ;; This function is called by:
 14991 ;;		_spi_write_read
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           
 14996                           ;psect for function _spi_read
 14997  2B50                     _spi_read:	
 14998                           
 14999                           ;incstack = 0
 15000                           ; Regs used in _spi_read: [wreg]
 15001                           ;spi_read@data stored from wreg
 15002  2B50  00F3               	movwf	spi_read@data
 15003                           
 15004                           ;spi.c: 43: SSP1BUF = data;
 15005  2B51  0873               	movf	spi_read@data,w
 15006  2B52  0024               	movlb	4	; select bank4
 15007  2B53  0091               	movwf	17	;volatile
 15008  2B54                     l796:	
 15009                           ;spi.c: 44: while(SSP1STATbits.BF == 0);
 15010                           
 15011  2B54  1C14               	btfss	20,0	;volatile
 15012  2B55  2B54               	goto	l796
 15013                           
 15014                           ;spi.c: 45: char readData = SSP1BUF;
 15015  2B56  0811               	movf	17,w	;volatile
 15016  2B57  00F2               	movwf	??_spi_read
 15017  2B58  0872               	movf	??_spi_read,w
 15018  2B59  00F4               	movwf	spi_read@readData
 15019                           
 15020                           ;spi.c: 46: return readData;
 15021  2B5A  0874               	movf	spi_read@readData,w
 15022  2B5B  0008               	return
 15023  2B5C                     __end_of_spi_read:	
 15024                           
 15025                           	psect	text35
 15026  2B77                     __ptext35:	
 15027 ;; *************** function ___bmul *****************
 15028 ;; Defined at:
 15029 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 15030 ;; Parameters:    Size  Location     Type
 15031 ;;  multiplier      1    wreg     unsigned char 
 15032 ;;  multiplicand    1    2[COMMON] unsigned char 
 15033 ;; Auto vars:     Size  Location     Type
 15034 ;;  multiplier      1    5[COMMON] unsigned char 
 15035 ;;  product         1    4[COMMON] unsigned char 
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      unsigned char 
 15038 ;; Registers used:
 15039 ;;		wreg, status,2, status,0
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15045 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15049 ;;Total ram usage:        4 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:    2
 15052 ;; This function calls:
 15053 ;;		Nothing
 15054 ;; This function is called by:
 15055 ;;		_LTC6804_rdcv
 15056 ;;		_LTC6804_rdcv_reg
 15057 ;;		_LTC6804_rdaux
 15058 ;;		_LTC6804_rdaux_reg
 15059 ;;		_LTC6804_rdcfg
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063                           
 15064                           ;psect for function ___bmul
 15065  2B77                     ___bmul:	
 15066                           
 15067                           ;incstack = 0
 15068                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 15069                           ;___bmul@multiplier stored from wreg
 15070  2B77  00F5               	movwf	___bmul@multiplier
 15071  2B78  01F4               	clrf	___bmul@product
 15072  2B79                     l7182:	
 15073  2B79  1C75               	btfss	___bmul@multiplier,0
 15074  2B7A  2B7F               	goto	l7186
 15075  2B7B  0872               	movf	___bmul@multiplicand,w
 15076  2B7C  00F3               	movwf	??___bmul
 15077  2B7D  0873               	movf	??___bmul,w
 15078  2B7E  07F4               	addwf	___bmul@product,f
 15079  2B7F                     l7186:	
 15080  2B7F  1003               	clrc
 15081  2B80  0DF2               	rlf	___bmul@multiplicand,f
 15082  2B81  1003               	clrc
 15083  2B82  0CF5               	rrf	___bmul@multiplier,f
 15084  2B83  0875               	movf	___bmul@multiplier,w
 15085  2B84  1D03               	btfss	3,2
 15086  2B85  2B79               	goto	l7182
 15087  2B86  0874               	movf	___bmul@product,w
 15088  2B87  0008               	return
 15089  2B88                     __end_of___bmul:	
 15090                           
 15091                           	psect	text36
 15092  2C87                     __ptext36:	
 15093 ;; *************** function _LTC6804_adcv *****************
 15094 ;; Defined at:
 15095 ;;		line 290 in file "ltc6804.c"
 15096 ;; Parameters:    Size  Location     Type
 15097 ;;		None
 15098 ;; Auto vars:     Size  Location     Type
 15099 ;;  cmd             4   16[BANK0 ] unsigned char [4]
 15100 ;;  cmd_pec         2   20[BANK0 ] int 
 15101 ;; Return value:  Size  Location     Type
 15102 ;;                  1    wreg      void 
 15103 ;; Registers used:
 15104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15105 ;; Tracked objects:
 15106 ;;		On entry : 0/0
 15107 ;;		On exit  : 0/0
 15108 ;;		Unchanged: 0/0
 15109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15111 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15112 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15113 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15114 ;;Total ram usage:        7 bytes
 15115 ;; Hardware stack levels used:    1
 15116 ;; Hardware stack levels required when called:    4
 15117 ;; This function calls:
 15118 ;;		_pec15_calc
 15119 ;;		_spi_write_array
 15120 ;;		_wakeup_idle
 15121 ;; This function is called by:
 15122 ;;		_measureVoltages
 15123 ;; This function uses a non-reentrant model
 15124 ;;
 15125                           
 15126                           
 15127                           ;psect for function _LTC6804_adcv
 15128  2C87                     _LTC6804_adcv:	
 15129                           
 15130                           ;ltc6804.c: 293: char cmd[4];
 15131                           ;ltc6804.c: 294: int cmd_pec;
 15132                           ;ltc6804.c: 297: cmd[0] = ADCV[0];
 15133                           
 15134                           ;incstack = 0
 15135                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15136  2C87  0023               	movlb	3	; select bank3
 15137  2C88  084B               	movf	_ADCV^(0+384),w
 15138  2C89  0020               	movlb	0	; select bank0
 15139  2C8A  00AF               	movwf	??_LTC6804_adcv
 15140  2C8B  082F               	movf	??_LTC6804_adcv,w
 15141  2C8C  00B0               	movwf	LTC6804_adcv@cmd
 15142                           
 15143                           ;ltc6804.c: 298: cmd[1] = ADCV[1];
 15144  2C8D  0023               	movlb	3	; select bank3
 15145  2C8E  084C               	movf	(_ADCV^(0+384)+1),w
 15146  2C8F  0020               	movlb	0	; select bank0
 15147  2C90  00AF               	movwf	??_LTC6804_adcv
 15148  2C91  082F               	movf	??_LTC6804_adcv,w
 15149  2C92  00B1               	movwf	LTC6804_adcv@cmd+1
 15150                           
 15151                           ;ltc6804.c: 301: cmd_pec = pec15_calc(2, ADCV);
 15152  2C93  30CB               	movlw	low _ADCV
 15153  2C94  00F8               	movwf	pec15_calc@data
 15154  2C95  3001               	movlw	high _ADCV
 15155  2C96  00F9               	movwf	pec15_calc@data+1
 15156  2C97  3002               	movlw	2
 15157  2C98  31AE  2666  31AC   	fcall	_pec15_calc
 15158  2C9B  0879               	movf	?_pec15_calc+1,w
 15159  2C9C  0020               	movlb	0	; select bank0
 15160  2C9D  00B5               	movwf	LTC6804_adcv@cmd_pec+1
 15161  2C9E  0878               	movf	?_pec15_calc,w
 15162  2C9F  00B4               	movwf	LTC6804_adcv@cmd_pec
 15163                           
 15164                           ;ltc6804.c: 302: cmd[2] = (char)(cmd_pec >> 8);
 15165  2CA0  0835               	movf	LTC6804_adcv@cmd_pec+1,w
 15166  2CA1  00AF               	movwf	??_LTC6804_adcv
 15167  2CA2  082F               	movf	??_LTC6804_adcv,w
 15168  2CA3  00B2               	movwf	LTC6804_adcv@cmd+2
 15169                           
 15170                           ;ltc6804.c: 303: cmd[3] = (char)(cmd_pec);
 15171  2CA4  0834               	movf	LTC6804_adcv@cmd_pec,w
 15172  2CA5  00AF               	movwf	??_LTC6804_adcv
 15173  2CA6  082F               	movf	??_LTC6804_adcv,w
 15174  2CA7  00B3               	movwf	LTC6804_adcv@cmd+3
 15175                           
 15176                           ;ltc6804.c: 306: wakeup_idle ();
 15177  2CA8  31AB  2328  31AC   	fcall	_wakeup_idle
 15178                           
 15179                           ;ltc6804.c: 309: LATDbits.LATD3 = 0;
 15180  2CAB  0022               	movlb	2	; select bank2
 15181  2CAC  118F               	bcf	15,3	;volatile
 15182                           
 15183                           ;ltc6804.c: 310: spi_write_array(4,cmd);
 15184  2CAD  3030               	movlw	(low (LTC6804_adcv@cmd| 0))& (0+255)
 15185  2CAE  0020               	movlb	0	; select bank0
 15186  2CAF  00AF               	movwf	??_LTC6804_adcv
 15187  2CB0  082F               	movf	??_LTC6804_adcv,w
 15188  2CB1  00F5               	movwf	spi_write_array@data
 15189  2CB2  3004               	movlw	4
 15190  2CB3  31AB  23CF         	fcall	_spi_write_array
 15191                           
 15192                           ;ltc6804.c: 311: LATDbits.LATD3 = 1;
 15193  2CB5  0022               	movlb	2	; select bank2
 15194  2CB6  158F               	bsf	15,3	;volatile
 15195  2CB7  0008               	return
 15196  2CB8                     __end_of_LTC6804_adcv:	
 15197                           
 15198                           	psect	text37
 15199  2146                     __ptext37:	
 15200 ;; *************** function _getTemps *****************
 15201 ;; Defined at:
 15202 ;;		line 32 in file "adc.c"
 15203 ;; Parameters:    Size  Location     Type
 15204 ;;  temperatures    1    wreg     PTR int 
 15205 ;;		 -> temps(10), 
 15206 ;;  numTemps        2   40[BANK1 ] int 
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;  temperatures    1   48[BANK1 ] PTR int 
 15209 ;;		 -> temps(10), 
 15210 ;;  inc             2   49[BANK1 ] int 
 15211 ;;  highestTemp     2   46[BANK1 ] int 
 15212 ;; Return value:  Size  Location     Type
 15213 ;;                  2   40[BANK1 ] int 
 15214 ;; Registers used:
 15215 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15216 ;; Tracked objects:
 15217 ;;		On entry : 0/0
 15218 ;;		On exit  : 0/0
 15219 ;;		Unchanged: 0/0
 15220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15221 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15222 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15223 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15224 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;Total ram usage:       11 bytes
 15226 ;; Hardware stack levels used:    1
 15227 ;; Hardware stack levels required when called:    5
 15228 ;; This function calls:
 15229 ;;		_adcRead
 15230 ;;		_calculateTemp
 15231 ;; This function is called by:
 15232 ;;		_main
 15233 ;;		_startUp
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           
 15238                           ;psect for function _getTemps
 15239  2146                     _getTemps:	
 15240                           
 15241                           ;incstack = 0
 15242                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15243                           ;getTemps@temperatures stored from wreg
 15244  2146  0021               	movlb	1	; select bank1
 15245  2147  00D0               	movwf	getTemps@temperatures^(0+128)
 15246                           
 15247                           ;adc.c: 33: int highestTemp = 0;
 15248  2148  01CE               	clrf	getTemps@highestTemp^(0+128)
 15249  2149  01CF               	clrf	(getTemps@highestTemp+1)^(0+128)
 15250                           
 15251                           ;adc.c: 35: LATBbits.LATB5 = 0;
 15252  214A  0022               	movlb	2	; select bank2
 15253  214B  128D               	bcf	13,5	;volatile
 15254                           
 15255                           ;adc.c: 36: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 15256  214C  0023               	movlb	3	; select bank3
 15257  214D  0853               	movf	_tempChannels^(0+384),w
 15258  214E  31AF  27AC  31A1   	fcall	_adcRead
 15259  2151  0873               	movf	?_adcRead+1,w
 15260  2152  0021               	movlb	1	; select bank1
 15261  2153  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15262  2154  0872               	movf	?_adcRead,w
 15263  2155  00C0               	movwf	calculateTemp@adcValue^(0+128)
 15264  2156  31A2  224C  31A1   	fcall	_calculateTemp
 15265  2159  0021               	movlb	1	; select bank1
 15266  215A  0841               	movf	(?_calculateTemp+1)^(0+128),w
 15267  215B  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 15268  215C  0840               	movf	?_calculateTemp^(0+128),w
 15269  215D  00CE               	movwf	getTemps@highestTemp^(0+128)
 15270                           
 15271                           ;adc.c: 37: temperatures[0] = highestTemp;
 15272  215E  0850               	movf	getTemps@temperatures^(0+128),w
 15273  215F  0086               	movwf	6
 15274  2160  3001               	movlw	1	; select bank2/3
 15275  2161  0087               	movwf	7
 15276  2162  084E               	movf	getTemps@highestTemp^(0+128),w
 15277  2163  3FC0               	movwi [0]fsr1
 15278  2164  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15279  2165  3FC1               	movwi [1]fsr1
 15280                           
 15281                           ;adc.c: 38: for(int inc = 1; inc < numTemps; inc ++){
 15282  2166  3001               	movlw	1
 15283  2167  00D1               	movwf	getTemps@inc^(0+128)
 15284  2168  3000               	movlw	0
 15285  2169  00D2               	movwf	(getTemps@inc^(0+128)+1)
 15286  216A                     l8312:	
 15287  216A  0852               	movf	(getTemps@inc+1)^(0+128),w
 15288  216B  3A80               	xorlw	128
 15289  216C  00CA               	movwf	??_getTemps^(0+128)
 15290  216D  0849               	movf	(getTemps@numTemps+1)^(0+128),w
 15291  216E  3A80               	xorlw	128
 15292  216F  024A               	subwf	??_getTemps^(0+128),w
 15293  2170  1D03               	skipz
 15294  2171  2974               	goto	u11695
 15295  2172  0848               	movf	getTemps@numTemps^(0+128),w
 15296  2173  0251               	subwf	getTemps@inc^(0+128),w
 15297  2174                     u11695:	
 15298  2174  1803               	btfsc	3,0
 15299  2175  29BD               	goto	l203
 15300                           
 15301                           ;adc.c: 39: temperatures[inc] = calculateTemp(adcRead(tempChannels[inc]));
 15302  2176  0021               	movlb	1	; select bank1
 15303  2177  0851               	movf	getTemps@inc^(0+128),w
 15304  2178  3ED3               	addlw	(low (_tempChannels| (0+256)))& (0+255)
 15305  2179  0086               	movwf	6
 15306  217A  3001               	movlw	1	; select bank3/4
 15307  217B  0087               	movwf	7
 15308  217C  0801               	movf	1,w
 15309  217D  31AF  27AC  31A1   	fcall	_adcRead
 15310  2180  0873               	movf	?_adcRead+1,w
 15311  2181  0021               	movlb	1	; select bank1
 15312  2182  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15313  2183  0872               	movf	?_adcRead,w
 15314  2184  00C0               	movwf	calculateTemp@adcValue^(0+128)
 15315  2185  31A2  224C  31A1   	fcall	_calculateTemp
 15316  2188  0021               	movlb	1	; select bank1
 15317  2189  3551               	lslf	getTemps@inc^(0+128),w
 15318  218A  0750               	addwf	getTemps@temperatures^(0+128),w
 15319  218B  00CA               	movwf	??_getTemps^(0+128)
 15320  218C  084A               	movf	??_getTemps^(0+128),w
 15321  218D  0086               	movwf	6
 15322  218E  3001               	movlw	1	; select bank2/3
 15323  218F  0087               	movwf	7
 15324  2190  0840               	movf	?_calculateTemp^(0+128),w
 15325  2191  3FC0               	movwi [0]fsr1
 15326  2192  0841               	movf	(?_calculateTemp+1)^(0+128),w
 15327  2193  3FC1               	movwi [1]fsr1
 15328                           
 15329                           ;adc.c: 40: if(temperatures[inc] > highestTemp){
 15330  2194  3551               	lslf	getTemps@inc^(0+128),w
 15331  2195  0750               	addwf	getTemps@temperatures^(0+128),w
 15332  2196  00CA               	movwf	??_getTemps^(0+128)
 15333  2197  084A               	movf	??_getTemps^(0+128),w
 15334  2198  0086               	movwf	6
 15335  2199  3001               	movlw	1	; select bank2/3
 15336  219A  0087               	movwf	7
 15337  219B  3F40               	moviw [0]fsr1
 15338  219C  00CB               	movwf	(??_getTemps+1)^(0+128)
 15339  219D  3F41               	moviw [1]fsr1
 15340  219E  00CC               	movwf	((??_getTemps+1)^(0+128)+1)
 15341  219F  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15342  21A0  3A80               	xorlw	128
 15343  21A1  00CD               	movwf	(??_getTemps+3)^(0+128)
 15344  21A2  084C               	movf	(??_getTemps+2)^(0+128),w
 15345  21A3  3A80               	xorlw	128
 15346  21A4  024D               	subwf	(??_getTemps+3)^(0+128),w
 15347  21A5  1D03               	skipz
 15348  21A6  29A9               	goto	u11685
 15349  21A7  084B               	movf	(??_getTemps+1)^(0+128),w
 15350  21A8  024E               	subwf	getTemps@highestTemp^(0+128),w
 15351  21A9                     u11685:	
 15352  21A9  1803               	skipnc
 15353  21AA  29B7               	goto	l8310
 15354                           
 15355                           ;adc.c: 41: highestTemp = temperatures[inc];
 15356  21AB  0021               	movlb	1	; select bank1
 15357  21AC  3551               	lslf	getTemps@inc^(0+128),w
 15358  21AD  0750               	addwf	getTemps@temperatures^(0+128),w
 15359  21AE  00CA               	movwf	??_getTemps^(0+128)
 15360  21AF  084A               	movf	??_getTemps^(0+128),w
 15361  21B0  0086               	movwf	6
 15362  21B1  3001               	movlw	1	; select bank2/3
 15363  21B2  0087               	movwf	7
 15364  21B3  3F40               	moviw [0]fsr1
 15365  21B4  00CE               	movwf	getTemps@highestTemp^(0+128)
 15366  21B5  3F41               	moviw [1]fsr1
 15367  21B6  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 15368  21B7                     l8310:	
 15369  21B7  3001               	movlw	1
 15370  21B8  0021               	movlb	1	; select bank1
 15371  21B9  07D1               	addwf	getTemps@inc^(0+128),f
 15372  21BA  3000               	movlw	0
 15373  21BB  3DD2               	addwfc	(getTemps@inc+1)^(0+128),f
 15374  21BC  296A               	goto	l8312
 15375  21BD                     l203:	
 15376                           
 15377                           ;adc.c: 42: }
 15378                           ;adc.c: 43: }
 15379                           ;adc.c: 45: LATBbits.LATB5 = 1;
 15380  21BD  0022               	movlb	2	; select bank2
 15381  21BE  168D               	bsf	13,5	;volatile
 15382                           
 15383                           ;adc.c: 46: return highestTemp;
 15384  21BF  0021               	movlb	1	; select bank1
 15385  21C0  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15386  21C1  00C9               	movwf	(?_getTemps+1)^(0+128)
 15387  21C2  084E               	movf	getTemps@highestTemp^(0+128),w
 15388  21C3  00C8               	movwf	?_getTemps^(0+128)
 15389  21C4  0008               	return
 15390  21C5                     __end_of_getTemps:	
 15391                           
 15392                           	psect	text38
 15393  224C                     __ptext38:	
 15394 ;; *************** function _calculateTemp *****************
 15395 ;; Defined at:
 15396 ;;		line 12 in file "adc.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;  adcValue        2   32[BANK1 ] int 
 15399 ;; Auto vars:     Size  Location     Type
 15400 ;;  voltage         4   36[BANK1 ] float 
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  2   32[BANK1 ] int 
 15403 ;; Registers used:
 15404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15405 ;; Tracked objects:
 15406 ;;		On entry : 0/0
 15407 ;;		On exit  : 0/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15410 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15411 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15412 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15413 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15414 ;;Total ram usage:        8 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; Hardware stack levels required when called:    4
 15417 ;; This function calls:
 15418 ;;		___fldiv
 15419 ;;		___flmul
 15420 ;;		___fltol
 15421 ;;		___xxtofl
 15422 ;; This function is called by:
 15423 ;;		_getTemps
 15424 ;; This function uses a non-reentrant model
 15425 ;;
 15426                           
 15427                           
 15428                           ;psect for function _calculateTemp
 15429  224C                     _calculateTemp:	
 15430                           
 15431                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 15432                           
 15433                           ;incstack = 0
 15434                           ; Regs used in _calculateTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15435  224C  3040               	movlw	64
 15436  224D  0020               	movlb	0	; select bank0
 15437  224E  00D5               	movwf	___flmul@b+3
 15438  224F  30A0               	movlw	160
 15439  2250  00D4               	movwf	___flmul@b+2
 15440  2251  3000               	movlw	0
 15441  2252  00D3               	movwf	___flmul@b+1
 15442  2253  3000               	movlw	0
 15443  2254  00D2               	movwf	___flmul@b
 15444  2255  3045               	movlw	69
 15445  2256  00BB               	movwf	___fldiv@a+3
 15446  2257  3080               	movlw	128
 15447  2258  00BA               	movwf	___fldiv@a+2
 15448  2259  3000               	movlw	0
 15449  225A  00B9               	movwf	___fldiv@a+1
 15450  225B  3000               	movlw	0
 15451  225C  00B8               	movwf	___fldiv@a
 15452  225D  0021               	movlb	1	; select bank1
 15453  225E  0840               	movf	calculateTemp@adcValue^(0+128),w
 15454  225F  0020               	movlb	0	; select bank0
 15455  2260  00AE               	movwf	___xxtofl@val
 15456  2261  0021               	movlb	1	; select bank1
 15457  2262  0841               	movf	(calculateTemp@adcValue+1)^(0+128),w
 15458  2263  0020               	movlb	0	; select bank0
 15459  2264  00AF               	movwf	___xxtofl@val+1
 15460  2265  0D89               	rlf	9,f
 15461  2266  3B89               	subwfb	9,f
 15462  2267  0989               	comf	9,f
 15463  2268  00B0               	movwf	___xxtofl@val+2
 15464  2269  00B1               	movwf	___xxtofl@val+3
 15465  226A  3001               	movlw	1
 15466  226B  31A3  235C  31A2   	fcall	___xxtofl
 15467  226E  0020               	movlb	0	; select bank0
 15468  226F  0831               	movf	?___xxtofl+3,w
 15469  2270  00BF               	movwf	___fldiv@b+3
 15470  2271  0830               	movf	?___xxtofl+2,w
 15471  2272  00BE               	movwf	___fldiv@b+2
 15472  2273  082F               	movf	?___xxtofl+1,w
 15473  2274  00BD               	movwf	___fldiv@b+1
 15474  2275  082E               	movf	?___xxtofl,w
 15475  2276  00BC               	movwf	___fldiv@b
 15476  2277  3194  2468  31A2   	fcall	___fldiv
 15477  227A  0020               	movlb	0	; select bank0
 15478  227B  083B               	movf	?___fldiv+3,w
 15479  227C  00D9               	movwf	___flmul@a+3
 15480  227D  083A               	movf	?___fldiv+2,w
 15481  227E  00D8               	movwf	___flmul@a+2
 15482  227F  0839               	movf	?___fldiv+1,w
 15483  2280  00D7               	movwf	___flmul@a+1
 15484  2281  0838               	movf	?___fldiv,w
 15485  2282  00D6               	movwf	___flmul@a
 15486  2283  3183  23D0  31A2   	fcall	___flmul
 15487  2286  0020               	movlb	0	; select bank0
 15488  2287  0855               	movf	?___flmul+3,w
 15489  2288  0021               	movlb	1	; select bank1
 15490  2289  00C7               	movwf	(calculateTemp@voltage+3)^(0+128)
 15491  228A  0020               	movlb	0	; select bank0
 15492  228B  0854               	movf	?___flmul+2,w
 15493  228C  0021               	movlb	1	; select bank1
 15494  228D  00C6               	movwf	(calculateTemp@voltage+2)^(0+128)
 15495  228E  0020               	movlb	0	; select bank0
 15496  228F  0853               	movf	?___flmul+1,w
 15497  2290  0021               	movlb	1	; select bank1
 15498  2291  00C5               	movwf	(calculateTemp@voltage+1)^(0+128)
 15499  2292  0020               	movlb	0	; select bank0
 15500  2293  0852               	movf	?___flmul,w
 15501  2294  0021               	movlb	1	; select bank1
 15502  2295  00C4               	movwf	calculateTemp@voltage^(0+128)
 15503                           
 15504                           ;adc.c: 14: return temperatures[(int)(voltage*10)];
 15505  2296  0847               	movf	(calculateTemp@voltage+3)^(0+128),w
 15506  2297  0020               	movlb	0	; select bank0
 15507  2298  00D9               	movwf	___flmul@a+3
 15508  2299  0021               	movlb	1	; select bank1
 15509  229A  0846               	movf	(calculateTemp@voltage+2)^(0+128),w
 15510  229B  0020               	movlb	0	; select bank0
 15511  229C  00D8               	movwf	___flmul@a+2
 15512  229D  0021               	movlb	1	; select bank1
 15513  229E  0845               	movf	(calculateTemp@voltage+1)^(0+128),w
 15514  229F  0020               	movlb	0	; select bank0
 15515  22A0  00D7               	movwf	___flmul@a+1
 15516  22A1  0021               	movlb	1	; select bank1
 15517  22A2  0844               	movf	calculateTemp@voltage^(0+128),w
 15518  22A3  0020               	movlb	0	; select bank0
 15519  22A4  00D6               	movwf	___flmul@a
 15520  22A5  3041               	movlw	65
 15521  22A6  00D5               	movwf	___flmul@b+3
 15522  22A7  3020               	movlw	32
 15523  22A8  00D4               	movwf	___flmul@b+2
 15524  22A9  3000               	movlw	0
 15525  22AA  00D3               	movwf	___flmul@b+1
 15526  22AB  3000               	movlw	0
 15527  22AC  00D2               	movwf	___flmul@b
 15528  22AD  3183  23D0  31A2   	fcall	___flmul
 15529  22B0  0020               	movlb	0	; select bank0
 15530  22B1  0855               	movf	?___flmul+3,w
 15531  22B2  0021               	movlb	1	; select bank1
 15532  22B3  00B8               	movwf	(___fltol@f1+3)^(0+128)
 15533  22B4  0020               	movlb	0	; select bank0
 15534  22B5  0854               	movf	?___flmul+2,w
 15535  22B6  0021               	movlb	1	; select bank1
 15536  22B7  00B7               	movwf	(___fltol@f1+2)^(0+128)
 15537  22B8  0020               	movlb	0	; select bank0
 15538  22B9  0853               	movf	?___flmul+1,w
 15539  22BA  0021               	movlb	1	; select bank1
 15540  22BB  00B6               	movwf	(___fltol@f1+1)^(0+128)
 15541  22BC  0020               	movlb	0	; select bank0
 15542  22BD  0852               	movf	?___flmul,w
 15543  22BE  0021               	movlb	1	; select bank1
 15544  22BF  00B5               	movwf	___fltol@f1^(0+128)
 15545  22C0  31A0  20C7         	fcall	___fltol
 15546  22C2  0021               	movlb	1	; select bank1
 15547  22C3  0836               	movf	(?___fltol+1)^(0+128),w
 15548  22C4  0085               	movwf	5
 15549  22C5  0835               	movf	?___fltol^(0+128),w
 15550  22C6  0084               	movwf	4
 15551  22C7  3068               	movlw	low (_temperatures| (0+32768))
 15552  22C8  0784               	addwf	4,f
 15553  22C9  30B0               	movlw	high (_temperatures| (0+32768))
 15554  22CA  3D85               	addwfc	5,f
 15555  22CB  0800               	movf	0,w	;code access
 15556  22CC  00C2               	movwf	??_calculateTemp^(0+128)
 15557  22CD  01C3               	clrf	(??_calculateTemp^(0+128)+1)
 15558  22CE  0842               	movf	??_calculateTemp^(0+128),w
 15559  22CF  00C0               	movwf	?_calculateTemp^(0+128)
 15560  22D0  0843               	movf	(??_calculateTemp+1)^(0+128),w
 15561  22D1  00C1               	movwf	(?_calculateTemp+1)^(0+128)
 15562  22D2  0008               	return
 15563  22D3                     __end_of_calculateTemp:	
 15564                           
 15565                           	psect	text39
 15566  20C7                     __ptext39:	
 15567 ;; *************** function ___fltol *****************
 15568 ;; Defined at:
 15569 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 15570 ;; Parameters:    Size  Location     Type
 15571 ;;  f1              4   21[BANK1 ] int 
 15572 ;; Auto vars:     Size  Location     Type
 15573 ;;  exp1            1   31[BANK1 ] unsigned char 
 15574 ;;  sign1           1   30[BANK1 ] unsigned char 
 15575 ;; Return value:  Size  Location     Type
 15576 ;;                  4   21[BANK1 ] long 
 15577 ;; Registers used:
 15578 ;;		wreg, status,2, status,0
 15579 ;; Tracked objects:
 15580 ;;		On entry : 0/0
 15581 ;;		On exit  : 0/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15584 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15585 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15586 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15587 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15588 ;;Total ram usage:       11 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    2
 15591 ;; This function calls:
 15592 ;;		Nothing
 15593 ;; This function is called by:
 15594 ;;		_calculateTemp
 15595 ;;		_sprintf
 15596 ;;		_startUp
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           
 15601                           ;psect for function ___fltol
 15602  20C7                     ___fltol:	
 15603                           
 15604                           ;incstack = 0
 15605                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15606  20C7  0021               	movlb	1	; select bank1
 15607  20C8  0835               	movf	___fltol@f1^(0+128),w
 15608  20C9  00B9               	movwf	??___fltol^(0+128)
 15609  20CA  0836               	movf	(___fltol@f1+1)^(0+128),w
 15610  20CB  00BA               	movwf	(??___fltol^(0+128)+1)
 15611  20CC  0837               	movf	(___fltol@f1+2)^(0+128),w
 15612  20CD  00BB               	movwf	(??___fltol^(0+128)+2)
 15613  20CE  0838               	movf	(___fltol@f1+3)^(0+128),w
 15614  20CF  00BC               	movwf	(??___fltol^(0+128)+3)
 15615  20D0  1003               	clrc
 15616  20D1  0D3B               	rlf	(??___fltol^(0+128)+2),w
 15617  20D2  0D3C               	rlf	(??___fltol^(0+128)+3),w
 15618  20D3  00BD               	movwf	(??___fltol+4)^(0+128)
 15619  20D4  083D               	movf	(??___fltol+4)^(0+128),w
 15620  20D5  00BF               	movwf	___fltol@exp1^(0+128)
 15621  20D6  083F               	movf	___fltol@exp1^(0+128),w
 15622  20D7  1D03               	btfss	3,2
 15623  20D8  28E2               	goto	l7234
 15624  20D9  3000               	movlw	0
 15625  20DA  00B8               	movwf	(?___fltol+3)^(0+128)
 15626  20DB  3000               	movlw	0
 15627  20DC  00B7               	movwf	(?___fltol+2)^(0+128)
 15628  20DD  3000               	movlw	0
 15629  20DE  00B6               	movwf	(?___fltol+1)^(0+128)
 15630  20DF  3000               	movlw	0
 15631  20E0  00B5               	movwf	?___fltol^(0+128)
 15632  20E1  0008               	return
 15633  20E2                     l7234:	
 15634  20E2  0835               	movf	___fltol@f1^(0+128),w
 15635  20E3  00B9               	movwf	??___fltol^(0+128)
 15636  20E4  0836               	movf	(___fltol@f1+1)^(0+128),w
 15637  20E5  00BA               	movwf	(??___fltol^(0+128)+1)
 15638  20E6  0837               	movf	(___fltol@f1+2)^(0+128),w
 15639  20E7  00BB               	movwf	(??___fltol^(0+128)+2)
 15640  20E8  0838               	movf	(___fltol@f1+3)^(0+128),w
 15641  20E9  00BC               	movwf	(??___fltol^(0+128)+3)
 15642  20EA  301F               	movlw	31
 15643  20EB                     u9795:	
 15644  20EB  36BC               	lsrf	(??___fltol^(0+128)+3),f
 15645  20EC  0CBB               	rrf	(??___fltol^(0+128)+2),f
 15646  20ED  0CBA               	rrf	(??___fltol^(0+128)+1),f
 15647  20EE  0CB9               	rrf	??___fltol^(0+128),f
 15648  20EF  0B89               	decfsz	9,f
 15649  20F0  28EB               	goto	u9795
 15650  20F1  0839               	movf	??___fltol^(0+128),w
 15651  20F2  00BD               	movwf	(??___fltol+4)^(0+128)
 15652  20F3  083D               	movf	(??___fltol+4)^(0+128),w
 15653  20F4  00BE               	movwf	___fltol@sign1^(0+128)
 15654  20F5  17B7               	bsf	(___fltol@f1^(0+128)+2),7
 15655  20F6  30FF               	movlw	255
 15656  20F7  05B5               	andwf	___fltol@f1^(0+128),f
 15657  20F8  30FF               	movlw	255
 15658  20F9  05B6               	andwf	(___fltol@f1+1)^(0+128),f
 15659  20FA  30FF               	movlw	255
 15660  20FB  05B7               	andwf	(___fltol@f1+2)^(0+128),f
 15661  20FC  3000               	movlw	0
 15662  20FD  05B8               	andwf	(___fltol@f1+3)^(0+128),f
 15663  20FE  3096               	movlw	150
 15664  20FF  02BF               	subwf	___fltol@exp1^(0+128),f
 15665  2100  1FBF               	btfss	___fltol@exp1^(0+128),7
 15666  2101  291E               	goto	l7252
 15667  2102  083F               	movf	___fltol@exp1^(0+128),w
 15668  2103  3A80               	xorlw	128
 15669  2104  3E97               	addlw	151
 15670  2105  1803               	skipnc
 15671  2106  2910               	goto	l7250
 15672  2107  3000               	movlw	0
 15673  2108  00B8               	movwf	(?___fltol+3)^(0+128)
 15674  2109  3000               	movlw	0
 15675  210A  00B7               	movwf	(?___fltol+2)^(0+128)
 15676  210B  3000               	movlw	0
 15677  210C  00B6               	movwf	(?___fltol+1)^(0+128)
 15678  210D  3000               	movlw	0
 15679  210E  00B5               	movwf	?___fltol^(0+128)
 15680  210F  0008               	return
 15681  2110                     l7250:	
 15682  2110  3001               	movlw	1
 15683  2111                     u9825:	
 15684  2111  36B8               	lsrf	(___fltol@f1+3)^(0+128),f
 15685  2112  0CB7               	rrf	(___fltol@f1+2)^(0+128),f
 15686  2113  0CB6               	rrf	(___fltol@f1+1)^(0+128),f
 15687  2114  0CB5               	rrf	___fltol@f1^(0+128),f
 15688  2115  0B89               	decfsz	9,f
 15689  2116  2911               	goto	u9825
 15690  2117  3001               	movlw	1
 15691  2118  00B9               	movwf	??___fltol^(0+128)
 15692  2119  0839               	movf	??___fltol^(0+128),w
 15693  211A  07BF               	addwf	___fltol@exp1^(0+128),f
 15694  211B  1903               	btfsc	3,2
 15695  211C  2937               	goto	l7260
 15696  211D  2910               	goto	l7250
 15697  211E                     l7252:	
 15698  211E  3020               	movlw	32
 15699  211F  023F               	subwf	___fltol@exp1^(0+128),w
 15700  2120  1C03               	skipc
 15701  2121  2934               	goto	l1186
 15702  2122  3000               	movlw	0
 15703  2123  00B8               	movwf	(?___fltol+3)^(0+128)
 15704  2124  3000               	movlw	0
 15705  2125  00B7               	movwf	(?___fltol+2)^(0+128)
 15706  2126  3000               	movlw	0
 15707  2127  00B6               	movwf	(?___fltol+1)^(0+128)
 15708  2128  3000               	movlw	0
 15709  2129  00B5               	movwf	?___fltol^(0+128)
 15710  212A  0008               	return
 15711  212B                     l7258:	
 15712  212B  3001               	movlw	1
 15713  212C                     u9855:	
 15714  212C  35B5               	lslf	___fltol@f1^(0+128),f
 15715  212D  0DB6               	rlf	(___fltol@f1+1)^(0+128),f
 15716  212E  0DB7               	rlf	(___fltol@f1+2)^(0+128),f
 15717  212F  0DB8               	rlf	(___fltol@f1+3)^(0+128),f
 15718  2130  0B89               	decfsz	9,f
 15719  2131  292C               	goto	u9855
 15720  2132  3001               	movlw	1
 15721  2133  02BF               	subwf	___fltol@exp1^(0+128),f
 15722  2134                     l1186:	
 15723  2134  083F               	movf	___fltol@exp1^(0+128),w
 15724  2135  1D03               	btfss	3,2
 15725  2136  292B               	goto	l7258
 15726  2137                     l7260:	
 15727  2137  083E               	movf	___fltol@sign1^(0+128),w
 15728  2138  1903               	btfsc	3,2
 15729  2139  0008               	return
 15730  213A  09B5               	comf	___fltol@f1^(0+128),f
 15731  213B  09B6               	comf	(___fltol@f1+1)^(0+128),f
 15732  213C  09B7               	comf	(___fltol@f1+2)^(0+128),f
 15733  213D  09B8               	comf	(___fltol@f1+3)^(0+128),f
 15734  213E  0AB5               	incf	___fltol@f1^(0+128),f
 15735  213F  1903               	skipnz
 15736  2140  0AB6               	incf	(___fltol@f1+1)^(0+128),f
 15737  2141  1903               	skipnz
 15738  2142  0AB7               	incf	(___fltol@f1+2)^(0+128),f
 15739  2143  1903               	skipnz
 15740  2144  0AB8               	incf	(___fltol@f1+3)^(0+128),f
 15741  2145  0008               	return
 15742  2146                     __end_of___fltol:	
 15743                           
 15744                           	psect	text40
 15745  2D5D                     __ptext40:	
 15746 ;; *************** function _getCurrent *****************
 15747 ;; Defined at:
 15748 ;;		line 24 in file "adc.c"
 15749 ;; Parameters:    Size  Location     Type
 15750 ;;		None
 15751 ;; Auto vars:     Size  Location     Type
 15752 ;;  currentValue    4   69[BANK1 ] float 
 15753 ;; Return value:  Size  Location     Type
 15754 ;;                  4   65[BANK1 ] float 
 15755 ;; Registers used:
 15756 ;;		wreg, status,2, status,0, pclath, cstack
 15757 ;; Tracked objects:
 15758 ;;		On entry : 0/0
 15759 ;;		On exit  : 0/0
 15760 ;;		Unchanged: 0/0
 15761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15762 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15763 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15765 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15766 ;;Total ram usage:        8 bytes
 15767 ;; Hardware stack levels used:    1
 15768 ;; Hardware stack levels required when called:    5
 15769 ;; This function calls:
 15770 ;;		___xxtofl
 15771 ;;		_adcRead
 15772 ;;		_calculateCurrent
 15773 ;; This function is called by:
 15774 ;;		_main
 15775 ;;		_startUp
 15776 ;; This function uses a non-reentrant model
 15777 ;;
 15778                           
 15779                           
 15780                           ;psect for function _getCurrent
 15781  2D5D                     _getCurrent:	
 15782                           
 15783                           ;adc.c: 25: float currentValue = (float)adcRead((char)10101);
 15784                           
 15785                           ;incstack = 0
 15786                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 15787  2D5D  3075               	movlw	117
 15788  2D5E  31AF  27AC  31AD   	fcall	_adcRead
 15789  2D61  0872               	movf	?_adcRead,w
 15790  2D62  0020               	movlb	0	; select bank0
 15791  2D63  00AE               	movwf	___xxtofl@val
 15792  2D64  0873               	movf	?_adcRead+1,w
 15793  2D65  00AF               	movwf	___xxtofl@val+1
 15794  2D66  0D89               	rlf	9,f
 15795  2D67  3B89               	subwfb	9,f
 15796  2D68  0989               	comf	9,f
 15797  2D69  00B0               	movwf	___xxtofl@val+2
 15798  2D6A  00B1               	movwf	___xxtofl@val+3
 15799  2D6B  3001               	movlw	1
 15800  2D6C  31A3  235C  31AD   	fcall	___xxtofl
 15801  2D6F  0020               	movlb	0	; select bank0
 15802  2D70  0831               	movf	?___xxtofl+3,w
 15803  2D71  0021               	movlb	1	; select bank1
 15804  2D72  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 15805  2D73  0020               	movlb	0	; select bank0
 15806  2D74  0830               	movf	?___xxtofl+2,w
 15807  2D75  0021               	movlb	1	; select bank1
 15808  2D76  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 15809  2D77  0020               	movlb	0	; select bank0
 15810  2D78  082F               	movf	?___xxtofl+1,w
 15811  2D79  0021               	movlb	1	; select bank1
 15812  2D7A  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 15813  2D7B  0020               	movlb	0	; select bank0
 15814  2D7C  082E               	movf	?___xxtofl,w
 15815  2D7D  0021               	movlb	1	; select bank1
 15816  2D7E  00E5               	movwf	getCurrent@currentValue^(0+128)
 15817                           
 15818                           ;adc.c: 26: currentValue = calculateCurrent(currentValue);
 15819  2D7F  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 15820  2D80  00D8               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 15821  2D81  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 15822  2D82  00D7               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 15823  2D83  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 15824  2D84  00D6               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 15825  2D85  0865               	movf	getCurrent@currentValue^(0+128),w
 15826  2D86  00D5               	movwf	calculateCurrent@adcValue^(0+128)
 15827  2D87  31A2  22D3         	fcall	_calculateCurrent
 15828  2D89  0021               	movlb	1	; select bank1
 15829  2D8A  0858               	movf	(?_calculateCurrent+3)^(0+128),w
 15830  2D8B  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 15831  2D8C  0857               	movf	(?_calculateCurrent+2)^(0+128),w
 15832  2D8D  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 15833  2D8E  0856               	movf	(?_calculateCurrent+1)^(0+128),w
 15834  2D8F  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 15835  2D90  0855               	movf	?_calculateCurrent^(0+128),w
 15836  2D91  00E5               	movwf	getCurrent@currentValue^(0+128)
 15837                           
 15838                           ;adc.c: 28: return currentValue;
 15839  2D92  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 15840  2D93  00E4               	movwf	(?_getCurrent+3)^(0+128)
 15841  2D94  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 15842  2D95  00E3               	movwf	(?_getCurrent+2)^(0+128)
 15843  2D96  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 15844  2D97  00E2               	movwf	(?_getCurrent+1)^(0+128)
 15845  2D98  0865               	movf	getCurrent@currentValue^(0+128),w
 15846  2D99  00E1               	movwf	?_getCurrent^(0+128)
 15847  2D9A  0008               	return
 15848  2D9B                     __end_of_getCurrent:	
 15849                           
 15850                           	psect	text41
 15851  22D3                     __ptext41:	
 15852 ;; *************** function _calculateCurrent *****************
 15853 ;; Defined at:
 15854 ;;		line 19 in file "adc.c"
 15855 ;; Parameters:    Size  Location     Type
 15856 ;;  adcValue        4   53[BANK1 ] float 
 15857 ;; Auto vars:     Size  Location     Type
 15858 ;;  curr            4   57[BANK1 ] float 
 15859 ;; Return value:  Size  Location     Type
 15860 ;;                  4   53[BANK1 ] float 
 15861 ;; Registers used:
 15862 ;;		wreg, status,2, status,0, pclath, cstack
 15863 ;; Tracked objects:
 15864 ;;		On entry : 0/0
 15865 ;;		On exit  : 0/0
 15866 ;;		Unchanged: 0/0
 15867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15868 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15869 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15871 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15872 ;;Total ram usage:       12 bytes
 15873 ;; Hardware stack levels used:    1
 15874 ;; Hardware stack levels required when called:    4
 15875 ;; This function calls:
 15876 ;;		___fladd
 15877 ;;		___fldiv
 15878 ;;		___flmul
 15879 ;; This function is called by:
 15880 ;;		_getCurrent
 15881 ;; This function uses a non-reentrant model
 15882 ;;
 15883                           
 15884                           
 15885                           ;psect for function _calculateCurrent
 15886  22D3                     _calculateCurrent:	
 15887                           
 15888                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 15889                           
 15890                           ;incstack = 0
 15891                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 15892  22D3  30C0               	movlw	192
 15893  22D4  0021               	movlb	1	; select bank1
 15894  22D5  00C0               	movwf	(___fladd@b+3)^(0+128)
 15895  22D6  3020               	movlw	32
 15896  22D7  00BF               	movwf	(___fladd@b+2)^(0+128)
 15897  22D8  3000               	movlw	0
 15898  22D9  00BE               	movwf	(___fladd@b+1)^(0+128)
 15899  22DA  3000               	movlw	0
 15900  22DB  00BD               	movwf	___fladd@b^(0+128)
 15901  22DC  3040               	movlw	64
 15902  22DD  0020               	movlb	0	; select bank0
 15903  22DE  00D5               	movwf	___flmul@b+3
 15904  22DF  30A0               	movlw	160
 15905  22E0  00D4               	movwf	___flmul@b+2
 15906  22E1  3000               	movlw	0
 15907  22E2  00D3               	movwf	___flmul@b+1
 15908  22E3  3000               	movlw	0
 15909  22E4  00D2               	movwf	___flmul@b
 15910  22E5  3045               	movlw	69
 15911  22E6  00BB               	movwf	___fldiv@a+3
 15912  22E7  307F               	movlw	127
 15913  22E8  00BA               	movwf	___fldiv@a+2
 15914  22E9  30F0               	movlw	240
 15915  22EA  00B9               	movwf	___fldiv@a+1
 15916  22EB  3000               	movlw	0
 15917  22EC  00B8               	movwf	___fldiv@a
 15918  22ED  0021               	movlb	1	; select bank1
 15919  22EE  0858               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 15920  22EF  0020               	movlb	0	; select bank0
 15921  22F0  00BF               	movwf	___fldiv@b+3
 15922  22F1  0021               	movlb	1	; select bank1
 15923  22F2  0857               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 15924  22F3  0020               	movlb	0	; select bank0
 15925  22F4  00BE               	movwf	___fldiv@b+2
 15926  22F5  0021               	movlb	1	; select bank1
 15927  22F6  0856               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 15928  22F7  0020               	movlb	0	; select bank0
 15929  22F8  00BD               	movwf	___fldiv@b+1
 15930  22F9  0021               	movlb	1	; select bank1
 15931  22FA  0855               	movf	calculateCurrent@adcValue^(0+128),w
 15932  22FB  0020               	movlb	0	; select bank0
 15933  22FC  00BC               	movwf	___fldiv@b
 15934  22FD  3194  2468  31A2   	fcall	___fldiv
 15935  2300  0020               	movlb	0	; select bank0
 15936  2301  083B               	movf	?___fldiv+3,w
 15937  2302  00D9               	movwf	___flmul@a+3
 15938  2303  083A               	movf	?___fldiv+2,w
 15939  2304  00D8               	movwf	___flmul@a+2
 15940  2305  0839               	movf	?___fldiv+1,w
 15941  2306  00D7               	movwf	___flmul@a+1
 15942  2307  0838               	movf	?___fldiv,w
 15943  2308  00D6               	movwf	___flmul@a
 15944  2309  3183  23D0  31A2   	fcall	___flmul
 15945  230C  0020               	movlb	0	; select bank0
 15946  230D  0855               	movf	?___flmul+3,w
 15947  230E  0021               	movlb	1	; select bank1
 15948  230F  00C4               	movwf	(___fladd@a+3)^(0+128)
 15949  2310  0020               	movlb	0	; select bank0
 15950  2311  0854               	movf	?___flmul+2,w
 15951  2312  0021               	movlb	1	; select bank1
 15952  2313  00C3               	movwf	(___fladd@a+2)^(0+128)
 15953  2314  0020               	movlb	0	; select bank0
 15954  2315  0853               	movf	?___flmul+1,w
 15955  2316  0021               	movlb	1	; select bank1
 15956  2317  00C2               	movwf	(___fladd@a+1)^(0+128)
 15957  2318  0020               	movlb	0	; select bank0
 15958  2319  0852               	movf	?___flmul,w
 15959  231A  0021               	movlb	1	; select bank1
 15960  231B  00C1               	movwf	___fladd@a^(0+128)
 15961  231C  3185  25FC  31A2   	fcall	___fladd
 15962  231F  0021               	movlb	1	; select bank1
 15963  2320  0840               	movf	(?___fladd+3)^(0+128),w
 15964  2321  00E0               	movwf	(_calculateCurrent$2146+3)^(0+128)
 15965  2322  083F               	movf	(?___fladd+2)^(0+128),w
 15966  2323  00DF               	movwf	(_calculateCurrent$2146+2)^(0+128)
 15967  2324  083E               	movf	(?___fladd+1)^(0+128),w
 15968  2325  00DE               	movwf	(_calculateCurrent$2146+1)^(0+128)
 15969  2326  083D               	movf	?___fladd^(0+128),w
 15970  2327  00DD               	movwf	_calculateCurrent$2146^(0+128)
 15971                           
 15972                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 15973  2328  303D               	movlw	61
 15974  2329  0020               	movlb	0	; select bank0
 15975  232A  00BB               	movwf	___fldiv@a+3
 15976  232B  3021               	movlw	33
 15977  232C  00BA               	movwf	___fldiv@a+2
 15978  232D  3061               	movlw	97
 15979  232E  00B9               	movwf	___fldiv@a+1
 15980  232F  30E5               	movlw	229
 15981  2330  00B8               	movwf	___fldiv@a
 15982  2331  0021               	movlb	1	; select bank1
 15983  2332  0860               	movf	(_calculateCurrent$2146+3)^(0+128),w
 15984  2333  0020               	movlb	0	; select bank0
 15985  2334  00BF               	movwf	___fldiv@b+3
 15986  2335  0021               	movlb	1	; select bank1
 15987  2336  085F               	movf	(_calculateCurrent$2146+2)^(0+128),w
 15988  2337  0020               	movlb	0	; select bank0
 15989  2338  00BE               	movwf	___fldiv@b+2
 15990  2339  0021               	movlb	1	; select bank1
 15991  233A  085E               	movf	(_calculateCurrent$2146+1)^(0+128),w
 15992  233B  0020               	movlb	0	; select bank0
 15993  233C  00BD               	movwf	___fldiv@b+1
 15994  233D  0021               	movlb	1	; select bank1
 15995  233E  085D               	movf	_calculateCurrent$2146^(0+128),w
 15996  233F  0020               	movlb	0	; select bank0
 15997  2340  00BC               	movwf	___fldiv@b
 15998  2341  3194  2468         	fcall	___fldiv
 15999  2343  0020               	movlb	0	; select bank0
 16000  2344  083B               	movf	?___fldiv+3,w
 16001  2345  0021               	movlb	1	; select bank1
 16002  2346  00DC               	movwf	(calculateCurrent@curr+3)^(0+128)
 16003  2347  0020               	movlb	0	; select bank0
 16004  2348  083A               	movf	?___fldiv+2,w
 16005  2349  0021               	movlb	1	; select bank1
 16006  234A  00DB               	movwf	(calculateCurrent@curr+2)^(0+128)
 16007  234B  0020               	movlb	0	; select bank0
 16008  234C  0839               	movf	?___fldiv+1,w
 16009  234D  0021               	movlb	1	; select bank1
 16010  234E  00DA               	movwf	(calculateCurrent@curr+1)^(0+128)
 16011  234F  0020               	movlb	0	; select bank0
 16012  2350  0838               	movf	?___fldiv,w
 16013  2351  0021               	movlb	1	; select bank1
 16014  2352  00D9               	movwf	calculateCurrent@curr^(0+128)
 16015                           
 16016                           ;adc.c: 21: return curr;
 16017  2353  085C               	movf	(calculateCurrent@curr+3)^(0+128),w
 16018  2354  00D8               	movwf	(?_calculateCurrent+3)^(0+128)
 16019  2355  085B               	movf	(calculateCurrent@curr+2)^(0+128),w
 16020  2356  00D7               	movwf	(?_calculateCurrent+2)^(0+128)
 16021  2357  085A               	movf	(calculateCurrent@curr+1)^(0+128),w
 16022  2358  00D6               	movwf	(?_calculateCurrent+1)^(0+128)
 16023  2359  0859               	movf	calculateCurrent@curr^(0+128),w
 16024  235A  00D5               	movwf	?_calculateCurrent^(0+128)
 16025  235B  0008               	return
 16026  235C                     __end_of_calculateCurrent:	
 16027                           
 16028                           	psect	text42
 16029  03D0                     __ptext42:	
 16030 ;; *************** function ___flmul *****************
 16031 ;; Defined at:
 16032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;  b               4   50[BANK0 ] float 
 16035 ;;  a               4   54[BANK0 ] float 
 16036 ;; Auto vars:     Size  Location     Type
 16037 ;;  prod            4   70[BANK0 ] struct .
 16038 ;;  grs             4   65[BANK0 ] unsigned long 
 16039 ;;  temp            2   74[BANK0 ] struct .
 16040 ;;  bexp            1   69[BANK0 ] unsigned char 
 16041 ;;  aexp            1   64[BANK0 ] unsigned char 
 16042 ;;  sign            1   63[BANK0 ] unsigned char 
 16043 ;; Return value:  Size  Location     Type
 16044 ;;                  4   50[BANK0 ] unsigned char 
 16045 ;; Registers used:
 16046 ;;		wreg, status,2, status,0, pclath, cstack
 16047 ;; Tracked objects:
 16048 ;;		On entry : 0/0
 16049 ;;		On exit  : 0/0
 16050 ;;		Unchanged: 0/0
 16051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16052 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16053 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16054 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16055 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16056 ;;Total ram usage:       26 bytes
 16057 ;; Hardware stack levels used:    1
 16058 ;; Hardware stack levels required when called:    3
 16059 ;; This function calls:
 16060 ;;		__Umul8_16
 16061 ;; This function is called by:
 16062 ;;		_calculateTemp
 16063 ;;		_calculateCurrent
 16064 ;;		_measureVoltages
 16065 ;;		_fround
 16066 ;;		_scale
 16067 ;;		_sprintf
 16068 ;;		_startUp
 16069 ;; This function uses a non-reentrant model
 16070 ;;
 16071                           
 16072                           
 16073                           ;psect for function ___flmul
 16074  03D0                     ___flmul:	
 16075                           
 16076                           ;incstack = 0
 16077                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16078  03D0  0020               	movlb	0	; select bank0
 16079  03D1  0855               	movf	___flmul@b+3,w
 16080  03D2  3980               	andlw	128
 16081  03D3  00DA               	movwf	??___flmul
 16082  03D4  085A               	movf	??___flmul,w
 16083  03D5  00DF               	movwf	___flmul@sign
 16084  03D6  3555               	lslf	___flmul@b+3,w
 16085  03D7  00DA               	movwf	??___flmul
 16086  03D8  085A               	movf	??___flmul,w
 16087  03D9  00E5               	movwf	___flmul@bexp
 16088  03DA  1BD4               	btfsc	___flmul@b+2,7
 16089  03DB  1465               	bsf	___flmul@bexp,0
 16090  03DC  0865               	movf	___flmul@bexp,w
 16091  03DD  1903               	btfsc	3,2
 16092  03DE  2BEC               	goto	l6818
 16093  03DF  0A65               	incf	___flmul@bexp,w
 16094  03E0  1D03               	btfss	3,2
 16095  03E1  2BEA               	goto	l6816
 16096  03E2  3000               	movlw	0
 16097  03E3  00D5               	movwf	___flmul@b+3
 16098  03E4  3000               	movlw	0
 16099  03E5  00D4               	movwf	___flmul@b+2
 16100  03E6  3000               	movlw	0
 16101  03E7  00D3               	movwf	___flmul@b+1
 16102  03E8  3000               	movlw	0
 16103  03E9  00D2               	movwf	___flmul@b
 16104  03EA                     l6816:	
 16105  03EA  17D4               	bsf	___flmul@b+2,7
 16106  03EB  2BF4               	goto	l6820
 16107  03EC                     l6818:	
 16108  03EC  3000               	movlw	0
 16109  03ED  00D5               	movwf	___flmul@b+3
 16110  03EE  3000               	movlw	0
 16111  03EF  00D4               	movwf	___flmul@b+2
 16112  03F0  3000               	movlw	0
 16113  03F1  00D3               	movwf	___flmul@b+1
 16114  03F2  3000               	movlw	0
 16115  03F3  00D2               	movwf	___flmul@b
 16116  03F4                     l6820:	
 16117  03F4  0859               	movf	___flmul@a+3,w
 16118  03F5  3980               	andlw	128
 16119  03F6  00DA               	movwf	??___flmul
 16120  03F7  085A               	movf	??___flmul,w
 16121  03F8  06DF               	xorwf	___flmul@sign,f
 16122  03F9  3559               	lslf	___flmul@a+3,w
 16123  03FA  00DA               	movwf	??___flmul
 16124  03FB  085A               	movf	??___flmul,w
 16125  03FC  00E0               	movwf	___flmul@aexp
 16126  03FD  1BD8               	btfsc	___flmul@a+2,7
 16127  03FE  1460               	bsf	___flmul@aexp,0
 16128  03FF  0860               	movf	___flmul@aexp,w
 16129  0400  1903               	btfsc	3,2
 16130  0401  2C0F               	goto	l6836
 16131  0402  0A60               	incf	___flmul@aexp,w
 16132  0403  1D03               	btfss	3,2
 16133  0404  2C0D               	goto	l6834
 16134  0405  3000               	movlw	0
 16135  0406  00D9               	movwf	___flmul@a+3
 16136  0407  3000               	movlw	0
 16137  0408  00D8               	movwf	___flmul@a+2
 16138  0409  3000               	movlw	0
 16139  040A  00D7               	movwf	___flmul@a+1
 16140  040B  3000               	movlw	0
 16141  040C  00D6               	movwf	___flmul@a
 16142  040D                     l6834:	
 16143  040D  17D8               	bsf	___flmul@a+2,7
 16144  040E  2C17               	goto	l6838
 16145  040F                     l6836:	
 16146  040F  3000               	movlw	0
 16147  0410  00D9               	movwf	___flmul@a+3
 16148  0411  3000               	movlw	0
 16149  0412  00D8               	movwf	___flmul@a+2
 16150  0413  3000               	movlw	0
 16151  0414  00D7               	movwf	___flmul@a+1
 16152  0415  3000               	movlw	0
 16153  0416  00D6               	movwf	___flmul@a
 16154  0417                     l6838:	
 16155  0417  0860               	movf	___flmul@aexp,w
 16156  0418  1D03               	btfss	3,2
 16157  0419  0865               	movf	___flmul@bexp,w
 16158  041A  1D03               	btfss	3,2
 16159  041B  2C25               	goto	l6846
 16160  041C  3000               	movlw	0
 16161  041D  00D5               	movwf	?___flmul+3
 16162  041E  3000               	movlw	0
 16163  041F  00D4               	movwf	?___flmul+2
 16164  0420  3000               	movlw	0
 16165  0421  00D3               	movwf	?___flmul+1
 16166  0422  3000               	movlw	0
 16167  0423  00D2               	movwf	?___flmul
 16168  0424  0008               	return
 16169  0425                     l6846:	
 16170  0425  0852               	movf	___flmul@b,w
 16171  0426  00DA               	movwf	??___flmul
 16172  0427  085A               	movf	??___flmul,w
 16173  0428  00F2               	movwf	__Umul8_16@multiplicand
 16174  0429  0858               	movf	___flmul@a+2,w
 16175  042A  31AC  2421  3183   	fcall	__Umul8_16
 16176  042D  0873               	movf	?__Umul8_16+1,w
 16177  042E  0020               	movlb	0	; select bank0
 16178  042F  00EB               	movwf	___flmul@temp+1
 16179  0430  0872               	movf	?__Umul8_16,w
 16180  0431  00EA               	movwf	___flmul@temp
 16181  0432  086A               	movf	___flmul@temp,w
 16182  0433  00DA               	movwf	??___flmul
 16183  0434  01DB               	clrf	??___flmul+1
 16184  0435  01DC               	clrf	??___flmul+2
 16185  0436  01DD               	clrf	??___flmul+3
 16186  0437  085D               	movf	??___flmul+3,w
 16187  0438  00E4               	movwf	___flmul@grs+3
 16188  0439  085C               	movf	??___flmul+2,w
 16189  043A  00E3               	movwf	___flmul@grs+2
 16190  043B  085B               	movf	??___flmul+1,w
 16191  043C  00E2               	movwf	___flmul@grs+1
 16192  043D  085A               	movf	??___flmul,w
 16193  043E  00E1               	movwf	___flmul@grs
 16194  043F  086B               	movf	___flmul@temp+1,w
 16195  0440  00DA               	movwf	??___flmul
 16196  0441  01DB               	clrf	??___flmul+1
 16197  0442  01DC               	clrf	??___flmul+2
 16198  0443  01DD               	clrf	??___flmul+3
 16199  0444  085D               	movf	??___flmul+3,w
 16200  0445  00E9               	movwf	___flmul@prod+3
 16201  0446  085C               	movf	??___flmul+2,w
 16202  0447  00E8               	movwf	___flmul@prod+2
 16203  0448  085B               	movf	??___flmul+1,w
 16204  0449  00E7               	movwf	___flmul@prod+1
 16205  044A  085A               	movf	??___flmul,w
 16206  044B  00E6               	movwf	___flmul@prod
 16207  044C  0853               	movf	___flmul@b+1,w
 16208  044D  00DA               	movwf	??___flmul
 16209  044E  085A               	movf	??___flmul,w
 16210  044F  00F2               	movwf	__Umul8_16@multiplicand
 16211  0450  0857               	movf	___flmul@a+1,w
 16212  0451  31AC  2421  3183   	fcall	__Umul8_16
 16213  0454  0873               	movf	?__Umul8_16+1,w
 16214  0455  0020               	movlb	0	; select bank0
 16215  0456  00EB               	movwf	___flmul@temp+1
 16216  0457  0872               	movf	?__Umul8_16,w
 16217  0458  00EA               	movwf	___flmul@temp
 16218  0459  086A               	movf	___flmul@temp,w
 16219  045A  00DA               	movwf	??___flmul
 16220  045B  01DB               	clrf	??___flmul+1
 16221  045C  01DC               	clrf	??___flmul+2
 16222  045D  01DD               	clrf	??___flmul+3
 16223  045E  085A               	movf	??___flmul,w
 16224  045F  07E1               	addwf	___flmul@grs,f
 16225  0460  085B               	movf	??___flmul+1,w
 16226  0461  3DE2               	addwfc	___flmul@grs+1,f
 16227  0462  085C               	movf	??___flmul+2,w
 16228  0463  3DE3               	addwfc	___flmul@grs+2,f
 16229  0464  085D               	movf	??___flmul+3,w
 16230  0465  3DE4               	addwfc	___flmul@grs+3,f
 16231  0466  086B               	movf	___flmul@temp+1,w
 16232  0467  00DA               	movwf	??___flmul
 16233  0468  01DB               	clrf	??___flmul+1
 16234  0469  01DC               	clrf	??___flmul+2
 16235  046A  01DD               	clrf	??___flmul+3
 16236  046B  085A               	movf	??___flmul,w
 16237  046C  07E6               	addwf	___flmul@prod,f
 16238  046D  085B               	movf	??___flmul+1,w
 16239  046E  3DE7               	addwfc	___flmul@prod+1,f
 16240  046F  085C               	movf	??___flmul+2,w
 16241  0470  3DE8               	addwfc	___flmul@prod+2,f
 16242  0471  085D               	movf	??___flmul+3,w
 16243  0472  3DE9               	addwfc	___flmul@prod+3,f
 16244  0473  0854               	movf	___flmul@b+2,w
 16245  0474  00DA               	movwf	??___flmul
 16246  0475  085A               	movf	??___flmul,w
 16247  0476  00F2               	movwf	__Umul8_16@multiplicand
 16248  0477  0856               	movf	___flmul@a,w
 16249  0478  31AC  2421  3183   	fcall	__Umul8_16
 16250  047B  0873               	movf	?__Umul8_16+1,w
 16251  047C  0020               	movlb	0	; select bank0
 16252  047D  00EB               	movwf	___flmul@temp+1
 16253  047E  0872               	movf	?__Umul8_16,w
 16254  047F  00EA               	movwf	___flmul@temp
 16255  0480  086A               	movf	___flmul@temp,w
 16256  0481  00DA               	movwf	??___flmul
 16257  0482  01DB               	clrf	??___flmul+1
 16258  0483  01DC               	clrf	??___flmul+2
 16259  0484  01DD               	clrf	??___flmul+3
 16260  0485  085A               	movf	??___flmul,w
 16261  0486  07E1               	addwf	___flmul@grs,f
 16262  0487  085B               	movf	??___flmul+1,w
 16263  0488  3DE2               	addwfc	___flmul@grs+1,f
 16264  0489  085C               	movf	??___flmul+2,w
 16265  048A  3DE3               	addwfc	___flmul@grs+2,f
 16266  048B  085D               	movf	??___flmul+3,w
 16267  048C  3DE4               	addwfc	___flmul@grs+3,f
 16268  048D  086B               	movf	___flmul@temp+1,w
 16269  048E  00DA               	movwf	??___flmul
 16270  048F  01DB               	clrf	??___flmul+1
 16271  0490  01DC               	clrf	??___flmul+2
 16272  0491  01DD               	clrf	??___flmul+3
 16273  0492  085A               	movf	??___flmul,w
 16274  0493  07E6               	addwf	___flmul@prod,f
 16275  0494  085B               	movf	??___flmul+1,w
 16276  0495  3DE7               	addwfc	___flmul@prod+1,f
 16277  0496  085C               	movf	??___flmul+2,w
 16278  0497  3DE8               	addwfc	___flmul@prod+2,f
 16279  0498  085D               	movf	??___flmul+3,w
 16280  0499  3DE9               	addwfc	___flmul@prod+3,f
 16281  049A  3008               	movlw	8
 16282  049B                     u9085:	
 16283  049B  35E1               	lslf	___flmul@grs,f
 16284  049C  0DE2               	rlf	___flmul@grs+1,f
 16285  049D  0DE3               	rlf	___flmul@grs+2,f
 16286  049E  0DE4               	rlf	___flmul@grs+3,f
 16287  049F  0B89               	decfsz	9,f
 16288  04A0  2C9B               	goto	u9085
 16289  04A1  0853               	movf	___flmul@b+1,w
 16290  04A2  00DA               	movwf	??___flmul
 16291  04A3  085A               	movf	??___flmul,w
 16292  04A4  00F2               	movwf	__Umul8_16@multiplicand
 16293  04A5  0856               	movf	___flmul@a,w
 16294  04A6  31AC  2421  3183   	fcall	__Umul8_16
 16295  04A9  0873               	movf	?__Umul8_16+1,w
 16296  04AA  0020               	movlb	0	; select bank0
 16297  04AB  00EB               	movwf	___flmul@temp+1
 16298  04AC  0872               	movf	?__Umul8_16,w
 16299  04AD  00EA               	movwf	___flmul@temp
 16300  04AE  086A               	movf	___flmul@temp,w
 16301  04AF  07E1               	addwf	___flmul@grs,f
 16302  04B0  086B               	movf	___flmul@temp+1,w
 16303  04B1  3DE2               	addwfc	___flmul@grs+1,f
 16304  04B2  3000               	movlw	0
 16305  04B3  3DE3               	addwfc	___flmul@grs+2,f
 16306  04B4  3DE4               	addwfc	___flmul@grs+3,f
 16307  04B5  0852               	movf	___flmul@b,w
 16308  04B6  00DA               	movwf	??___flmul
 16309  04B7  085A               	movf	??___flmul,w
 16310  04B8  00F2               	movwf	__Umul8_16@multiplicand
 16311  04B9  0857               	movf	___flmul@a+1,w
 16312  04BA  31AC  2421  3183   	fcall	__Umul8_16
 16313  04BD  0873               	movf	?__Umul8_16+1,w
 16314  04BE  0020               	movlb	0	; select bank0
 16315  04BF  00EB               	movwf	___flmul@temp+1
 16316  04C0  0872               	movf	?__Umul8_16,w
 16317  04C1  00EA               	movwf	___flmul@temp
 16318  04C2  086A               	movf	___flmul@temp,w
 16319  04C3  07E1               	addwf	___flmul@grs,f
 16320  04C4  086B               	movf	___flmul@temp+1,w
 16321  04C5  3DE2               	addwfc	___flmul@grs+1,f
 16322  04C6  3000               	movlw	0
 16323  04C7  3DE3               	addwfc	___flmul@grs+2,f
 16324  04C8  3DE4               	addwfc	___flmul@grs+3,f
 16325  04C9  3008               	movlw	8
 16326  04CA                     u9095:	
 16327  04CA  35E1               	lslf	___flmul@grs,f
 16328  04CB  0DE2               	rlf	___flmul@grs+1,f
 16329  04CC  0DE3               	rlf	___flmul@grs+2,f
 16330  04CD  0DE4               	rlf	___flmul@grs+3,f
 16331  04CE  0B89               	decfsz	9,f
 16332  04CF  2CCA               	goto	u9095
 16333  04D0  0852               	movf	___flmul@b,w
 16334  04D1  00DA               	movwf	??___flmul
 16335  04D2  085A               	movf	??___flmul,w
 16336  04D3  00F2               	movwf	__Umul8_16@multiplicand
 16337  04D4  0856               	movf	___flmul@a,w
 16338  04D5  31AC  2421  3183   	fcall	__Umul8_16
 16339  04D8  0873               	movf	?__Umul8_16+1,w
 16340  04D9  0020               	movlb	0	; select bank0
 16341  04DA  00EB               	movwf	___flmul@temp+1
 16342  04DB  0872               	movf	?__Umul8_16,w
 16343  04DC  00EA               	movwf	___flmul@temp
 16344  04DD  086A               	movf	___flmul@temp,w
 16345  04DE  07E1               	addwf	___flmul@grs,f
 16346  04DF  086B               	movf	___flmul@temp+1,w
 16347  04E0  3DE2               	addwfc	___flmul@grs+1,f
 16348  04E1  3000               	movlw	0
 16349  04E2  3DE3               	addwfc	___flmul@grs+2,f
 16350  04E3  3DE4               	addwfc	___flmul@grs+3,f
 16351  04E4  0853               	movf	___flmul@b+1,w
 16352  04E5  00DA               	movwf	??___flmul
 16353  04E6  085A               	movf	??___flmul,w
 16354  04E7  00F2               	movwf	__Umul8_16@multiplicand
 16355  04E8  0858               	movf	___flmul@a+2,w
 16356  04E9  31AC  2421  3183   	fcall	__Umul8_16
 16357  04EC  0873               	movf	?__Umul8_16+1,w
 16358  04ED  0020               	movlb	0	; select bank0
 16359  04EE  00EB               	movwf	___flmul@temp+1
 16360  04EF  0872               	movf	?__Umul8_16,w
 16361  04F0  00EA               	movwf	___flmul@temp
 16362  04F1  086A               	movf	___flmul@temp,w
 16363  04F2  07E6               	addwf	___flmul@prod,f
 16364  04F3  086B               	movf	___flmul@temp+1,w
 16365  04F4  3DE7               	addwfc	___flmul@prod+1,f
 16366  04F5  3000               	movlw	0
 16367  04F6  3DE8               	addwfc	___flmul@prod+2,f
 16368  04F7  3DE9               	addwfc	___flmul@prod+3,f
 16369  04F8  0854               	movf	___flmul@b+2,w
 16370  04F9  00DA               	movwf	??___flmul
 16371  04FA  085A               	movf	??___flmul,w
 16372  04FB  00F2               	movwf	__Umul8_16@multiplicand
 16373  04FC  0857               	movf	___flmul@a+1,w
 16374  04FD  31AC  2421  3183   	fcall	__Umul8_16
 16375  0500  0873               	movf	?__Umul8_16+1,w
 16376  0501  0020               	movlb	0	; select bank0
 16377  0502  00EB               	movwf	___flmul@temp+1
 16378  0503  0872               	movf	?__Umul8_16,w
 16379  0504  00EA               	movwf	___flmul@temp
 16380  0505  086A               	movf	___flmul@temp,w
 16381  0506  07E6               	addwf	___flmul@prod,f
 16382  0507  086B               	movf	___flmul@temp+1,w
 16383  0508  3DE7               	addwfc	___flmul@prod+1,f
 16384  0509  3000               	movlw	0
 16385  050A  3DE8               	addwfc	___flmul@prod+2,f
 16386  050B  3DE9               	addwfc	___flmul@prod+3,f
 16387  050C  0854               	movf	___flmul@b+2,w
 16388  050D  00DA               	movwf	??___flmul
 16389  050E  085A               	movf	??___flmul,w
 16390  050F  00F2               	movwf	__Umul8_16@multiplicand
 16391  0510  0858               	movf	___flmul@a+2,w
 16392  0511  31AC  2421  3183   	fcall	__Umul8_16
 16393  0514  0873               	movf	?__Umul8_16+1,w
 16394  0515  0020               	movlb	0	; select bank0
 16395  0516  00EB               	movwf	___flmul@temp+1
 16396  0517  0872               	movf	?__Umul8_16,w
 16397  0518  00EA               	movwf	___flmul@temp
 16398  0519  086A               	movf	___flmul@temp,w
 16399  051A  00DA               	movwf	??___flmul
 16400  051B  086B               	movf	___flmul@temp+1,w
 16401  051C  00DB               	movwf	??___flmul+1
 16402  051D  01DC               	clrf	??___flmul+2
 16403  051E  01DD               	clrf	??___flmul+3
 16404  051F  3008               	movlw	8
 16405  0520                     u9105:	
 16406  0520  35DA               	lslf	??___flmul,f
 16407  0521  0DDB               	rlf	??___flmul+1,f
 16408  0522  0DDC               	rlf	??___flmul+2,f
 16409  0523  0DDD               	rlf	??___flmul+3,f
 16410  0524  0B89               	decfsz	9,f
 16411  0525  2D20               	goto	u9105
 16412  0526  085A               	movf	??___flmul,w
 16413  0527  07E6               	addwf	___flmul@prod,f
 16414  0528  085B               	movf	??___flmul+1,w
 16415  0529  3DE7               	addwfc	___flmul@prod+1,f
 16416  052A  085C               	movf	??___flmul+2,w
 16417  052B  3DE8               	addwfc	___flmul@prod+2,f
 16418  052C  085D               	movf	??___flmul+3,w
 16419  052D  3DE9               	addwfc	___flmul@prod+3,f
 16420  052E  0861               	movf	___flmul@grs,w
 16421  052F  00DA               	movwf	??___flmul
 16422  0530  0862               	movf	___flmul@grs+1,w
 16423  0531  00DB               	movwf	??___flmul+1
 16424  0532  0863               	movf	___flmul@grs+2,w
 16425  0533  00DC               	movwf	??___flmul+2
 16426  0534  0864               	movf	___flmul@grs+3,w
 16427  0535  00DD               	movwf	??___flmul+3
 16428  0536  3018               	movlw	24
 16429  0537                     u9115:	
 16430  0537  36DD               	lsrf	??___flmul+3,f
 16431  0538  0CDC               	rrf	??___flmul+2,f
 16432  0539  0CDB               	rrf	??___flmul+1,f
 16433  053A  0CDA               	rrf	??___flmul,f
 16434  053B  0B89               	decfsz	9,f
 16435  053C  2D37               	goto	u9115
 16436  053D  085A               	movf	??___flmul,w
 16437  053E  07E6               	addwf	___flmul@prod,f
 16438  053F  085B               	movf	??___flmul+1,w
 16439  0540  3DE7               	addwfc	___flmul@prod+1,f
 16440  0541  085C               	movf	??___flmul+2,w
 16441  0542  3DE8               	addwfc	___flmul@prod+2,f
 16442  0543  085D               	movf	??___flmul+3,w
 16443  0544  3DE9               	addwfc	___flmul@prod+3,f
 16444  0545  3008               	movlw	8
 16445  0546                     u9125:	
 16446  0546  35E1               	lslf	___flmul@grs,f
 16447  0547  0DE2               	rlf	___flmul@grs+1,f
 16448  0548  0DE3               	rlf	___flmul@grs+2,f
 16449  0549  0DE4               	rlf	___flmul@grs+3,f
 16450  054A  0B89               	decfsz	9,f
 16451  054B  2D46               	goto	u9125
 16452  054C  0865               	movf	___flmul@bexp,w
 16453  054D  0760               	addwf	___flmul@aexp,w
 16454  054E  00DA               	movwf	??___flmul
 16455  054F  01DB               	clrf	??___flmul+1
 16456  0550  0DDB               	rlf	??___flmul+1,f
 16457  0551  085A               	movf	??___flmul,w
 16458  0552  3E82               	addlw	130
 16459  0553  00EA               	movwf	___flmul@temp
 16460  0554  30FF               	movlw	255
 16461  0555  3D5B               	addwfc	??___flmul+1,w
 16462  0556  00EB               	movwf	___flmul@temp+1
 16463  0557                     l6898:	
 16464  0557  1BE8               	btfsc	___flmul@prod+2,7
 16465  0558  2D6E               	goto	l6900
 16466  0559  3001               	movlw	1
 16467  055A                     u9135:	
 16468  055A  35E6               	lslf	___flmul@prod,f
 16469  055B  0DE7               	rlf	___flmul@prod+1,f
 16470  055C  0DE8               	rlf	___flmul@prod+2,f
 16471  055D  0DE9               	rlf	___flmul@prod+3,f
 16472  055E  0B89               	decfsz	9,f
 16473  055F  2D5A               	goto	u9135
 16474  0560  1BE4               	btfsc	___flmul@grs+3,7
 16475  0561  1466               	bsf	___flmul@prod,0
 16476  0562  3001               	movlw	1
 16477  0563                     u9155:	
 16478  0563  35E1               	lslf	___flmul@grs,f
 16479  0564  0DE2               	rlf	___flmul@grs+1,f
 16480  0565  0DE3               	rlf	___flmul@grs+2,f
 16481  0566  0DE4               	rlf	___flmul@grs+3,f
 16482  0567  0B89               	decfsz	9,f
 16483  0568  2D63               	goto	u9155
 16484  0569  30FF               	movlw	255
 16485  056A  07EA               	addwf	___flmul@temp,f
 16486  056B  30FF               	movlw	255
 16487  056C  3DEB               	addwfc	___flmul@temp+1,f
 16488  056D  2D57               	goto	l6898
 16489  056E                     l6900:	
 16490  056E  01E0               	clrf	___flmul@aexp
 16491  056F  1FE4               	btfss	___flmul@grs+3,7
 16492  0570  2D87               	goto	l6910
 16493  0571  30FF               	movlw	255
 16494  0572  0561               	andwf	___flmul@grs,w
 16495  0573  00DA               	movwf	??___flmul
 16496  0574  30FF               	movlw	255
 16497  0575  0562               	andwf	___flmul@grs+1,w
 16498  0576  00DB               	movwf	??___flmul+1
 16499  0577  30FF               	movlw	255
 16500  0578  0563               	andwf	___flmul@grs+2,w
 16501  0579  00DC               	movwf	??___flmul+2
 16502  057A  307F               	movlw	127
 16503  057B  0564               	andwf	___flmul@grs+3,w
 16504  057C  00DD               	movwf	??___flmul+3
 16505  057D  085D               	movf	??___flmul+3,w
 16506  057E  045C               	iorwf	??___flmul+2,w
 16507  057F  045B               	iorwf	??___flmul+1,w
 16508  0580  045A               	iorwf	??___flmul,w
 16509  0581  1D03               	btfss	3,2
 16510  0582  2D85               	goto	l6908
 16511  0583  1C66               	btfss	___flmul@prod,0
 16512  0584  2D87               	goto	l6910
 16513  0585                     l6908:	
 16514  0585  01E0               	clrf	___flmul@aexp
 16515  0586  0AE0               	incf	___flmul@aexp,f
 16516  0587                     l6910:	
 16517  0587  0860               	movf	___flmul@aexp,w
 16518  0588  1903               	btfsc	3,2
 16519  0589  2DB0               	goto	l6920
 16520  058A  3001               	movlw	1
 16521  058B  07E6               	addwf	___flmul@prod,f
 16522  058C  3000               	movlw	0
 16523  058D  3DE7               	addwfc	___flmul@prod+1,f
 16524  058E  3000               	movlw	0
 16525  058F  3DE8               	addwfc	___flmul@prod+2,f
 16526  0590  3000               	movlw	0
 16527  0591  3DE9               	addwfc	___flmul@prod+3,f
 16528  0592  1C69               	btfss	___flmul@prod+3,0
 16529  0593  2DB0               	goto	l6920
 16530  0594  0866               	movf	___flmul@prod,w
 16531  0595  00DA               	movwf	??___flmul
 16532  0596  0867               	movf	___flmul@prod+1,w
 16533  0597  00DB               	movwf	??___flmul+1
 16534  0598  0868               	movf	___flmul@prod+2,w
 16535  0599  00DC               	movwf	??___flmul+2
 16536  059A  0869               	movf	___flmul@prod+3,w
 16537  059B  00DD               	movwf	??___flmul+3
 16538  059C  3001               	movlw	1
 16539  059D  00DE               	movwf	??___flmul+4
 16540  059E                     u9225:	
 16541  059E  37DD               	asrf	??___flmul+3,f
 16542  059F  0CDC               	rrf	??___flmul+2,f
 16543  05A0  0CDB               	rrf	??___flmul+1,f
 16544  05A1  0CDA               	rrf	??___flmul,f
 16545  05A2  0BDE               	decfsz	??___flmul+4,f
 16546  05A3  2D9E               	goto	u9225
 16547  05A4  085D               	movf	??___flmul+3,w
 16548  05A5  00E9               	movwf	___flmul@prod+3
 16549  05A6  085C               	movf	??___flmul+2,w
 16550  05A7  00E8               	movwf	___flmul@prod+2
 16551  05A8  085B               	movf	??___flmul+1,w
 16552  05A9  00E7               	movwf	___flmul@prod+1
 16553  05AA  085A               	movf	??___flmul,w
 16554  05AB  00E6               	movwf	___flmul@prod
 16555  05AC  3001               	movlw	1
 16556  05AD  07EA               	addwf	___flmul@temp,f
 16557  05AE  3000               	movlw	0
 16558  05AF  3DEB               	addwfc	___flmul@temp+1,f
 16559  05B0                     l6920:	
 16560  05B0  086B               	movf	___flmul@temp+1,w
 16561  05B1  3A80               	xorlw	128
 16562  05B2  00DA               	movwf	??___flmul
 16563  05B3  3080               	movlw	128
 16564  05B4  025A               	subwf	??___flmul,w
 16565  05B5  1D03               	skipz
 16566  05B6  2DB9               	goto	u9235
 16567  05B7  30FF               	movlw	255
 16568  05B8  026A               	subwf	___flmul@temp,w
 16569  05B9                     u9235:	
 16570  05B9  1C03               	skipc
 16571  05BA  2DC5               	goto	l6924
 16572  05BB  307F               	movlw	127
 16573  05BC  0020               	movlb	0	; select bank0
 16574  05BD  00E9               	movwf	___flmul@prod+3
 16575  05BE  3080               	movlw	128
 16576  05BF  00E8               	movwf	___flmul@prod+2
 16577  05C0  3000               	movlw	0
 16578  05C1  00E7               	movwf	___flmul@prod+1
 16579  05C2  3000               	movlw	0
 16580  05C3  00E6               	movwf	___flmul@prod
 16581  05C4  2DEF               	goto	l1410
 16582  05C5                     l6924:	
 16583  05C5  0020               	movlb	0	; select bank0
 16584  05C6  086B               	movf	___flmul@temp+1,w
 16585  05C7  3A80               	xorlw	128
 16586  05C8  00DA               	movwf	??___flmul
 16587  05C9  3080               	movlw	128
 16588  05CA  025A               	subwf	??___flmul,w
 16589  05CB  1D03               	skipz
 16590  05CC  2DCF               	goto	u9245
 16591  05CD  3001               	movlw	1
 16592  05CE  026A               	subwf	___flmul@temp,w
 16593  05CF                     u9245:	
 16594  05CF  1803               	skipnc
 16595  05D0  2DDC               	goto	l6930
 16596  05D1  3000               	movlw	0
 16597  05D2  0020               	movlb	0	; select bank0
 16598  05D3  00E9               	movwf	___flmul@prod+3
 16599  05D4  3000               	movlw	0
 16600  05D5  00E8               	movwf	___flmul@prod+2
 16601  05D6  3000               	movlw	0
 16602  05D7  00E7               	movwf	___flmul@prod+1
 16603  05D8  3000               	movlw	0
 16604  05D9  00E6               	movwf	___flmul@prod
 16605  05DA  01DF               	clrf	___flmul@sign
 16606  05DB  2DEF               	goto	l1410
 16607  05DC                     l6930:	
 16608  05DC  0020               	movlb	0	; select bank0
 16609  05DD  086A               	movf	___flmul@temp,w
 16610  05DE  00DA               	movwf	??___flmul
 16611  05DF  085A               	movf	??___flmul,w
 16612  05E0  00E5               	movwf	___flmul@bexp
 16613  05E1  30FF               	movlw	255
 16614  05E2  05E6               	andwf	___flmul@prod,f
 16615  05E3  30FF               	movlw	255
 16616  05E4  05E7               	andwf	___flmul@prod+1,f
 16617  05E5  307F               	movlw	127
 16618  05E6  05E8               	andwf	___flmul@prod+2,f
 16619  05E7  3000               	movlw	0
 16620  05E8  05E9               	andwf	___flmul@prod+3,f
 16621  05E9  1865               	btfsc	___flmul@bexp,0
 16622  05EA  17E8               	bsf	___flmul@prod+2,7
 16623  05EB  3665               	lsrf	___flmul@bexp,w
 16624  05EC  00DA               	movwf	??___flmul
 16625  05ED  085A               	movf	??___flmul,w
 16626  05EE  00E9               	movwf	___flmul@prod+3
 16627  05EF                     l1410:	
 16628  05EF  085F               	movf	___flmul@sign,w
 16629  05F0  00DA               	movwf	??___flmul
 16630  05F1  085A               	movf	??___flmul,w
 16631  05F2  04E9               	iorwf	___flmul@prod+3,f
 16632  05F3  0869               	movf	___flmul@prod+3,w
 16633  05F4  00D5               	movwf	?___flmul+3
 16634  05F5  0868               	movf	___flmul@prod+2,w
 16635  05F6  00D4               	movwf	?___flmul+2
 16636  05F7  0867               	movf	___flmul@prod+1,w
 16637  05F8  00D3               	movwf	?___flmul+1
 16638  05F9  0866               	movf	___flmul@prod,w
 16639  05FA  00D2               	movwf	?___flmul
 16640  05FB  0008               	return
 16641  05FC                     __end_of___flmul:	
 16642                           
 16643                           	psect	text43
 16644  2C21                     __ptext43:	
 16645 ;; *************** function __Umul8_16 *****************
 16646 ;; Defined at:
 16647 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 16648 ;; Parameters:    Size  Location     Type
 16649 ;;  multiplier      1    wreg     unsigned char 
 16650 ;;  multiplicand    1    2[COMMON] unsigned char 
 16651 ;; Auto vars:     Size  Location     Type
 16652 ;;  multiplier      1    4[BANK0 ] unsigned char 
 16653 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 16654 ;;  product         2    0[BANK0 ] unsigned int 
 16655 ;; Return value:  Size  Location     Type
 16656 ;;                  2    2[COMMON] unsigned int 
 16657 ;; Registers used:
 16658 ;;		wreg, status,2, status,0
 16659 ;; Tracked objects:
 16660 ;;		On entry : 0/0
 16661 ;;		On exit  : 0/0
 16662 ;;		Unchanged: 0/0
 16663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16665 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16667 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16668 ;;Total ram usage:        9 bytes
 16669 ;; Hardware stack levels used:    1
 16670 ;; Hardware stack levels required when called:    2
 16671 ;; This function calls:
 16672 ;;		Nothing
 16673 ;; This function is called by:
 16674 ;;		___flmul
 16675 ;; This function uses a non-reentrant model
 16676 ;;
 16677                           
 16678                           
 16679                           ;psect for function __Umul8_16
 16680  2C21                     __Umul8_16:	
 16681                           
 16682                           ;incstack = 0
 16683                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16684                           ;__Umul8_16@multiplier stored from wreg
 16685  2C21  0020               	movlb	0	; select bank0
 16686  2C22  00A4               	movwf	__Umul8_16@multiplier
 16687  2C23  01A0               	clrf	__Umul8_16@product
 16688  2C24  01A1               	clrf	__Umul8_16@product+1
 16689  2C25  0872               	movf	__Umul8_16@multiplicand,w
 16690  2C26  00F4               	movwf	??__Umul8_16
 16691  2C27  01F5               	clrf	??__Umul8_16+1
 16692  2C28  0874               	movf	??__Umul8_16,w
 16693  2C29  00A2               	movwf	__Umul8_16@word_mpld
 16694  2C2A  0875               	movf	??__Umul8_16+1,w
 16695  2C2B  00A3               	movwf	__Umul8_16@word_mpld+1
 16696  2C2C                     l6506:	
 16697  2C2C  1C24               	btfss	__Umul8_16@multiplier,0
 16698  2C2D  2C32               	goto	l1436
 16699  2C2E  0822               	movf	__Umul8_16@word_mpld,w
 16700  2C2F  07A0               	addwf	__Umul8_16@product,f
 16701  2C30  0823               	movf	__Umul8_16@word_mpld+1,w
 16702  2C31  3DA1               	addwfc	__Umul8_16@product+1,f
 16703  2C32                     l1436:	
 16704  2C32  3001               	movlw	1
 16705  2C33                     u8345:	
 16706  2C33  35A2               	lslf	__Umul8_16@word_mpld,f
 16707  2C34  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 16708  2C35  0B89               	decfsz	9,f
 16709  2C36  2C33               	goto	u8345
 16710  2C37  1003               	clrc
 16711  2C38  0CA4               	rrf	__Umul8_16@multiplier,f
 16712  2C39  0824               	movf	__Umul8_16@multiplier,w
 16713  2C3A  1D03               	btfss	3,2
 16714  2C3B  2C2C               	goto	l6506
 16715  2C3C  0821               	movf	__Umul8_16@product+1,w
 16716  2C3D  00F3               	movwf	?__Umul8_16+1
 16717  2C3E  0820               	movf	__Umul8_16@product,w
 16718  2C3F  00F2               	movwf	?__Umul8_16
 16719  2C40  0008               	return
 16720  2C41                     __end_of__Umul8_16:	
 16721                           
 16722                           	psect	text44
 16723  2FAC                     __ptext44:	
 16724 ;; *************** function _adcRead *****************
 16725 ;; Defined at:
 16726 ;;		line 50 in file "adc.c"
 16727 ;; Parameters:    Size  Location     Type
 16728 ;;  ch              1    wreg     unsigned char 
 16729 ;; Auto vars:     Size  Location     Type
 16730 ;;  ch              1    7[BANK0 ] unsigned char 
 16731 ;;  total           2   12[BANK0 ] int 
 16732 ;;  ansLow          2   10[BANK0 ] int 
 16733 ;;  ansHigh         2    8[BANK0 ] int 
 16734 ;; Return value:  Size  Location     Type
 16735 ;;                  2    2[COMMON] int 
 16736 ;; Registers used:
 16737 ;;		wreg, status,2, status,0
 16738 ;; Tracked objects:
 16739 ;;		On entry : 0/0
 16740 ;;		On exit  : 0/0
 16741 ;;		Unchanged: 0/0
 16742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16744 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16745 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16746 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16747 ;;Total ram usage:       16 bytes
 16748 ;; Hardware stack levels used:    1
 16749 ;; Hardware stack levels required when called:    2
 16750 ;; This function calls:
 16751 ;;		Nothing
 16752 ;; This function is called by:
 16753 ;;		_getCurrent
 16754 ;;		_getTemps
 16755 ;; This function uses a non-reentrant model
 16756 ;;
 16757                           
 16758                           
 16759                           ;psect for function _adcRead
 16760  2FAC                     _adcRead:	
 16761                           
 16762                           ;incstack = 0
 16763                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 16764                           ;adcRead@ch stored from wreg
 16765  2FAC  0020               	movlb	0	; select bank0
 16766  2FAD  00A7               	movwf	adcRead@ch
 16767                           
 16768                           ;adc.c: 51: ADCON0bits.CHS = ch;
 16769  2FAE  0827               	movf	adcRead@ch,w
 16770  2FAF  00A0               	movwf	??_adcRead
 16771  2FB0  0DA0               	rlf	??_adcRead,f
 16772  2FB1  0DA0               	rlf	??_adcRead,f
 16773  2FB2  0021               	movlb	1	; select bank1
 16774  2FB3  081D               	movf	29,w	;volatile
 16775  2FB4  0020               	movlb	0	; select bank0
 16776  2FB5  0620               	xorwf	??_adcRead,w
 16777  2FB6  3983               	andlw	-125
 16778  2FB7  0620               	xorwf	??_adcRead,w
 16779  2FB8  0021               	movlb	1	; select bank1
 16780  2FB9  009D               	movwf	29	;volatile
 16781                           
 16782                           ;adc.c: 52: ADCON0bits.ADON = 1;
 16783  2FBA  141D               	bsf	29,0	;volatile
 16784                           
 16785                           ;adc.c: 54: _delay((unsigned long)((100)*(32000000/4000000.0)));
 16786  2FBB  30A0               	movlw	160
 16787  2FBC                     u12237:	
 16788  2FBC  3200               	nop2
 16789  2FBD  0B89               	decfsz	9,f
 16790  2FBE  2FBC               	goto	u12237
 16791                           
 16792                           ;adc.c: 55: ADCON0bits.GO = 1;
 16793  2FBF  0021               	movlb	1	; select bank1
 16794  2FC0  149D               	bsf	29,1	;volatile
 16795  2FC1                     l207:	
 16796                           ;adc.c: 57: while(ADCON0bits.DONE == 1);
 16797                           
 16798  2FC1  189D               	btfsc	29,1	;volatile
 16799  2FC2  2FC1               	goto	l207
 16800                           
 16801                           ;adc.c: 59: int ansHigh = ADRESH;
 16802  2FC3  081C               	movf	28,w	;volatile
 16803  2FC4  0020               	movlb	0	; select bank0
 16804  2FC5  00A0               	movwf	??_adcRead
 16805  2FC6  01A1               	clrf	??_adcRead+1
 16806  2FC7  0820               	movf	??_adcRead,w
 16807  2FC8  00A8               	movwf	adcRead@ansHigh
 16808  2FC9  0821               	movf	??_adcRead+1,w
 16809  2FCA  00A9               	movwf	adcRead@ansHigh+1
 16810                           
 16811                           ;adc.c: 60: int ansLow = ADRESL;
 16812  2FCB  0021               	movlb	1	; select bank1
 16813  2FCC  081B               	movf	27,w	;volatile
 16814  2FCD  0020               	movlb	0	; select bank0
 16815  2FCE  00A0               	movwf	??_adcRead
 16816  2FCF  01A1               	clrf	??_adcRead+1
 16817  2FD0  0820               	movf	??_adcRead,w
 16818  2FD1  00AA               	movwf	adcRead@ansLow
 16819  2FD2  0821               	movf	??_adcRead+1,w
 16820  2FD3  00AB               	movwf	adcRead@ansLow+1
 16821                           
 16822                           ;adc.c: 62: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 16823  2FD4  082B               	movf	adcRead@ansLow+1,w
 16824  2FD5  00A1               	movwf	??_adcRead+1
 16825  2FD6  082A               	movf	adcRead@ansLow,w
 16826  2FD7  00A0               	movwf	??_adcRead
 16827  2FD8  3004               	movlw	4
 16828  2FD9  00A2               	movwf	??_adcRead+2
 16829  2FDA                     u11135:	
 16830  2FDA  0D21               	rlf	??_adcRead+1,w
 16831  2FDB  0CA1               	rrf	??_adcRead+1,f
 16832  2FDC  0CA0               	rrf	??_adcRead,f
 16833  2FDD  0BA2               	decfsz	??_adcRead+2,f
 16834  2FDE  2FDA               	goto	u11135
 16835  2FDF  30FF               	movlw	255
 16836  2FE0  0520               	andwf	??_adcRead,w
 16837  2FE1  00A3               	movwf	??_adcRead+3
 16838  2FE2  300F               	movlw	15
 16839  2FE3  0521               	andwf	??_adcRead+1,w
 16840  2FE4  00A4               	movwf	??_adcRead+4
 16841  2FE5  0829               	movf	adcRead@ansHigh+1,w
 16842  2FE6  00A6               	movwf	??_adcRead+6
 16843  2FE7  0828               	movf	adcRead@ansHigh,w
 16844  2FE8  00A5               	movwf	??_adcRead+5
 16845  2FE9  0EA5               	swapf	??_adcRead+5,f
 16846  2FEA  0EA6               	swapf	??_adcRead+6,f
 16847  2FEB  30F0               	movlw	240
 16848  2FEC  05A6               	andwf	??_adcRead+6,f
 16849  2FED  0825               	movf	??_adcRead+5,w
 16850  2FEE  390F               	andlw	15
 16851  2FEF  04A6               	iorwf	??_adcRead+6,f
 16852  2FF0  30F0               	movlw	240
 16853  2FF1  05A5               	andwf	??_adcRead+5,f
 16854  2FF2  0823               	movf	??_adcRead+3,w
 16855  2FF3  0425               	iorwf	??_adcRead+5,w
 16856  2FF4  00AC               	movwf	adcRead@total
 16857  2FF5  0824               	movf	??_adcRead+4,w
 16858  2FF6  0426               	iorwf	??_adcRead+6,w
 16859  2FF7  00AD               	movwf	adcRead@total+1
 16860                           
 16861                           ;adc.c: 63: ADCON0bits.ADON = 0;
 16862  2FF8  0021               	movlb	1	; select bank1
 16863  2FF9  101D               	bcf	29,0	;volatile
 16864                           
 16865                           ;adc.c: 64: return total;
 16866  2FFA  0020               	movlb	0	; select bank0
 16867  2FFB  082D               	movf	adcRead@total+1,w
 16868  2FFC  00F3               	movwf	?_adcRead+1
 16869  2FFD  082C               	movf	adcRead@total,w
 16870  2FFE  00F2               	movwf	?_adcRead
 16871  2FFF  0008               	return
 16872  3000                     __end_of_adcRead:	
 16873                           
 16874                           	psect	text45
 16875  1C1C                     __ptext45:	
 16876 ;; *************** function _cellBalancing *****************
 16877 ;; Defined at:
 16878 ;;		line 111 in file "ltc6804.c"
 16879 ;; Parameters:    Size  Location     Type
 16880 ;;  voltages        1    wreg     PTR float 
 16881 ;;		 -> voltages(48), 
 16882 ;;  numVoltages     2   69[BANK1 ] int 
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;  voltages        1    9[BANK2 ] PTR float 
 16885 ;;		 -> voltages(48), 
 16886 ;;  i               2    7[BANK2 ] int 
 16887 ;;  i               2    5[BANK2 ] int 
 16888 ;;  minVoltage      4    1[BANK2 ] float 
 16889 ;;  boolean         1    0[BANK2 ] unsigned char 
 16890 ;; Return value:  Size  Location     Type
 16891 ;;                  1    wreg      void 
 16892 ;; Registers used:
 16893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16894 ;; Tracked objects:
 16895 ;;		On entry : 0/0
 16896 ;;		On exit  : 0/0
 16897 ;;		Unchanged: 0/0
 16898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16899 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16900 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16901 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16902 ;;      Totals:         0       0       4      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16903 ;;Total ram usage:       14 bytes
 16904 ;; Hardware stack levels used:    1
 16905 ;; Hardware stack levels required when called:    5
 16906 ;; This function calls:
 16907 ;;		_LTC6804_wrcfg
 16908 ;;		___fladd
 16909 ;;		___flge
 16910 ;;		_setDischarge
 16911 ;; This function is called by:
 16912 ;;		_main
 16913 ;; This function uses a non-reentrant model
 16914 ;;
 16915                           
 16916                           
 16917                           ;psect for function _cellBalancing
 16918  1C1C                     _cellBalancing:	
 16919                           
 16920                           ;incstack = 0
 16921                           ; Regs used in _cellBalancing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16922                           ;cellBalancing@voltages stored from wreg
 16923  1C1C  0022               	movlb	2	; select bank2
 16924  1C1D  00A9               	movwf	cellBalancing@voltages^(0+256)
 16925                           
 16926                           ;ltc6804.c: 112: float minVoltage = voltages[0];
 16927  1C1E  0829               	movf	cellBalancing@voltages^(0+256),w
 16928  1C1F  0086               	movwf	6
 16929  1C20  3002               	movlw	2	; select bank4/5
 16930  1C21  0087               	movwf	7
 16931  1C22  3F40               	moviw [0]fsr1
 16932  1C23  00A1               	movwf	cellBalancing@minVoltage^(0+256)
 16933  1C24  3F41               	moviw [1]fsr1
 16934  1C25  00A2               	movwf	(cellBalancing@minVoltage+1)^(0+256)
 16935  1C26  3F42               	moviw [2]fsr1
 16936  1C27  00A3               	movwf	(cellBalancing@minVoltage+2)^(0+256)
 16937  1C28  3F43               	moviw [3]fsr1
 16938  1C29  00A4               	movwf	(cellBalancing@minVoltage+3)^(0+256)
 16939                           
 16940                           ;ltc6804.c: 114: for(int i = 0; i < numVoltages; i++){
 16941  1C2A  01A5               	clrf	cellBalancing@i^(0+256)
 16942  1C2B  01A6               	clrf	(cellBalancing@i+1)^(0+256)
 16943  1C2C                     l8334:	
 16944  1C2C  0826               	movf	(cellBalancing@i+1)^(0+256),w
 16945  1C2D  3A80               	xorlw	128
 16946  1C2E  0021               	movlb	1	; select bank1
 16947  1C2F  00E7               	movwf	??_cellBalancing^(0+128)
 16948  1C30  0866               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 16949  1C31  3A80               	xorlw	128
 16950  1C32  0267               	subwf	??_cellBalancing^(0+128),w
 16951  1C33  1D03               	skipz
 16952  1C34  2C38               	goto	u11735
 16953  1C35  0865               	movf	cellBalancing@numVoltages^(0+128),w
 16954  1C36  0022               	movlb	2	; select bank2
 16955  1C37  0225               	subwf	cellBalancing@i^(0+256),w
 16956  1C38                     u11735:	
 16957  1C38  1803               	btfsc	3,0
 16958  1C39  2C8A               	goto	l8336
 16959                           
 16960                           ;ltc6804.c: 115: if(voltages[i] < minVoltage){
 16961  1C3A  0022               	movlb	2	; select bank2
 16962  1C3B  0825               	movf	cellBalancing@i^(0+256),w
 16963  1C3C  0021               	movlb	1	; select bank1
 16964  1C3D  00E7               	movwf	??_cellBalancing^(0+128)
 16965  1C3E  3001               	movlw	1
 16966  1C3F                     u11705:	
 16967  1C3F  35E7               	lslf	??_cellBalancing^(0+128),f
 16968  1C40  3EFF               	addlw	-1
 16969  1C41  1D03               	skipz
 16970  1C42  2C3F               	goto	u11705
 16971  1C43  3567               	lslf	??_cellBalancing^(0+128),w
 16972  1C44  0022               	movlb	2	; select bank2
 16973  1C45  0729               	addwf	cellBalancing@voltages^(0+256),w
 16974  1C46  0021               	movlb	1	; select bank1
 16975  1C47  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 16976  1C48  0868               	movf	(??_cellBalancing+1)^(0+128),w
 16977  1C49  0086               	movwf	6
 16978  1C4A  3002               	movlw	2	; select bank4/5
 16979  1C4B  0087               	movwf	7
 16980  1C4C  3F40               	moviw [0]fsr1
 16981  1C4D  00D5               	movwf	___flge@ff1^(0+128)
 16982  1C4E  3F41               	moviw [1]fsr1
 16983  1C4F  00D6               	movwf	(___flge@ff1+1)^(0+128)
 16984  1C50  3F42               	moviw [2]fsr1
 16985  1C51  00D7               	movwf	(___flge@ff1+2)^(0+128)
 16986  1C52  3F43               	moviw [3]fsr1
 16987  1C53  00D8               	movwf	(___flge@ff1+3)^(0+128)
 16988  1C54  0022               	movlb	2	; select bank2
 16989  1C55  0824               	movf	(cellBalancing@minVoltage+3)^(0+256),w
 16990  1C56  0021               	movlb	1	; select bank1
 16991  1C57  00DC               	movwf	(___flge@ff2+3)^(0+128)
 16992  1C58  0022               	movlb	2	; select bank2
 16993  1C59  0823               	movf	(cellBalancing@minVoltage+2)^(0+256),w
 16994  1C5A  0021               	movlb	1	; select bank1
 16995  1C5B  00DB               	movwf	(___flge@ff2+2)^(0+128)
 16996  1C5C  0022               	movlb	2	; select bank2
 16997  1C5D  0822               	movf	(cellBalancing@minVoltage+1)^(0+256),w
 16998  1C5E  0021               	movlb	1	; select bank1
 16999  1C5F  00DA               	movwf	(___flge@ff2+1)^(0+128)
 17000  1C60  0022               	movlb	2	; select bank2
 17001  1C61  0821               	movf	cellBalancing@minVoltage^(0+256),w
 17002  1C62  0021               	movlb	1	; select bank1
 17003  1C63  00D9               	movwf	___flge@ff2^(0+128)
 17004  1C64  3188  2005  319C   	fcall	___flge
 17005  1C67  1803               	btfsc	3,0
 17006  1C68  2C84               	goto	l8332
 17007                           
 17008                           ;ltc6804.c: 116: minVoltage = voltages[i];
 17009  1C69  0022               	movlb	2	; select bank2
 17010  1C6A  0825               	movf	cellBalancing@i^(0+256),w
 17011  1C6B  0021               	movlb	1	; select bank1
 17012  1C6C  00E7               	movwf	??_cellBalancing^(0+128)
 17013  1C6D  3001               	movlw	1
 17014  1C6E                     u11725:	
 17015  1C6E  35E7               	lslf	??_cellBalancing^(0+128),f
 17016  1C6F  3EFF               	addlw	-1
 17017  1C70  1D03               	skipz
 17018  1C71  2C6E               	goto	u11725
 17019  1C72  3567               	lslf	??_cellBalancing^(0+128),w
 17020  1C73  0022               	movlb	2	; select bank2
 17021  1C74  0729               	addwf	cellBalancing@voltages^(0+256),w
 17022  1C75  0021               	movlb	1	; select bank1
 17023  1C76  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 17024  1C77  0868               	movf	(??_cellBalancing+1)^(0+128),w
 17025  1C78  0086               	movwf	6
 17026  1C79  3002               	movlw	2	; select bank4/5
 17027  1C7A  0087               	movwf	7
 17028  1C7B  3F40               	moviw [0]fsr1
 17029  1C7C  0022               	movlb	2	; select bank2
 17030  1C7D  00A1               	movwf	cellBalancing@minVoltage^(0+256)
 17031  1C7E  3F41               	moviw [1]fsr1
 17032  1C7F  00A2               	movwf	(cellBalancing@minVoltage+1)^(0+256)
 17033  1C80  3F42               	moviw [2]fsr1
 17034  1C81  00A3               	movwf	(cellBalancing@minVoltage+2)^(0+256)
 17035  1C82  3F43               	moviw [3]fsr1
 17036  1C83  00A4               	movwf	(cellBalancing@minVoltage+3)^(0+256)
 17037  1C84                     l8332:	
 17038  1C84  3001               	movlw	1
 17039  1C85  0022               	movlb	2	; select bank2
 17040  1C86  07A5               	addwf	cellBalancing@i^(0+256),f
 17041  1C87  3000               	movlw	0
 17042  1C88  3DA6               	addwfc	(cellBalancing@i+1)^(0+256),f
 17043  1C89  2C2C               	goto	l8334
 17044  1C8A                     l8336:	
 17045                           
 17046                           ;ltc6804.c: 117: }
 17047                           ;ltc6804.c: 118: }
 17048                           ;ltc6804.c: 119: char boolean;
 17049                           ;ltc6804.c: 120: for(int i = 0; i < numVoltages; i++){
 17050  1C8A  0022               	movlb	2	; select bank2
 17051  1C8B  01A7               	clrf	cellBalancing@i_1293^(0+256)
 17052  1C8C  01A8               	clrf	(cellBalancing@i_1293+1)^(0+256)
 17053  1C8D                     l8344:	
 17054  1C8D  0828               	movf	(cellBalancing@i_1293+1)^(0+256),w
 17055  1C8E  3A80               	xorlw	128
 17056  1C8F  0021               	movlb	1	; select bank1
 17057  1C90  00E7               	movwf	??_cellBalancing^(0+128)
 17058  1C91  0866               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 17059  1C92  3A80               	xorlw	128
 17060  1C93  0267               	subwf	??_cellBalancing^(0+128),w
 17061  1C94  1D03               	skipz
 17062  1C95  2C99               	goto	u11755
 17063  1C96  0865               	movf	cellBalancing@numVoltages^(0+128),w
 17064  1C97  0022               	movlb	2	; select bank2
 17065  1C98  0227               	subwf	cellBalancing@i_1293^(0+256),w
 17066  1C99                     u11755:	
 17067  1C99  1803               	btfsc	3,0
 17068  1C9A  2CF3               	goto	l8346
 17069                           
 17070                           ;ltc6804.c: 121: boolean = (voltages[i] >= (minVoltage + 0.02));
 17071  1C9B  0022               	movlb	2	; select bank2
 17072  1C9C  0827               	movf	cellBalancing@i_1293^(0+256),w
 17073  1C9D  0021               	movlb	1	; select bank1
 17074  1C9E  00E7               	movwf	??_cellBalancing^(0+128)
 17075  1C9F  3001               	movlw	1
 17076  1CA0                     u11745:	
 17077  1CA0  35E7               	lslf	??_cellBalancing^(0+128),f
 17078  1CA1  3EFF               	addlw	-1
 17079  1CA2  1D03               	skipz
 17080  1CA3  2CA0               	goto	u11745
 17081  1CA4  3567               	lslf	??_cellBalancing^(0+128),w
 17082  1CA5  0022               	movlb	2	; select bank2
 17083  1CA6  0729               	addwf	cellBalancing@voltages^(0+256),w
 17084  1CA7  0021               	movlb	1	; select bank1
 17085  1CA8  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 17086  1CA9  0868               	movf	(??_cellBalancing+1)^(0+128),w
 17087  1CAA  0086               	movwf	6
 17088  1CAB  3002               	movlw	2	; select bank4/5
 17089  1CAC  0087               	movwf	7
 17090  1CAD  3F40               	moviw [0]fsr1
 17091  1CAE  00D5               	movwf	___flge@ff1^(0+128)
 17092  1CAF  3F41               	moviw [1]fsr1
 17093  1CB0  00D6               	movwf	(___flge@ff1+1)^(0+128)
 17094  1CB1  3F42               	moviw [2]fsr1
 17095  1CB2  00D7               	movwf	(___flge@ff1+2)^(0+128)
 17096  1CB3  3F43               	moviw [3]fsr1
 17097  1CB4  00D8               	movwf	(___flge@ff1+3)^(0+128)
 17098  1CB5  303C               	movlw	60
 17099  1CB6  00C0               	movwf	(___fladd@b+3)^(0+128)
 17100  1CB7  30A3               	movlw	163
 17101  1CB8  00BF               	movwf	(___fladd@b+2)^(0+128)
 17102  1CB9  30D7               	movlw	215
 17103  1CBA  00BE               	movwf	(___fladd@b+1)^(0+128)
 17104  1CBB  300A               	movlw	10
 17105  1CBC  00BD               	movwf	___fladd@b^(0+128)
 17106  1CBD  0022               	movlb	2	; select bank2
 17107  1CBE  0824               	movf	(cellBalancing@minVoltage+3)^(0+256),w
 17108  1CBF  0021               	movlb	1	; select bank1
 17109  1CC0  00C4               	movwf	(___fladd@a+3)^(0+128)
 17110  1CC1  0022               	movlb	2	; select bank2
 17111  1CC2  0823               	movf	(cellBalancing@minVoltage+2)^(0+256),w
 17112  1CC3  0021               	movlb	1	; select bank1
 17113  1CC4  00C3               	movwf	(___fladd@a+2)^(0+128)
 17114  1CC5  0022               	movlb	2	; select bank2
 17115  1CC6  0822               	movf	(cellBalancing@minVoltage+1)^(0+256),w
 17116  1CC7  0021               	movlb	1	; select bank1
 17117  1CC8  00C2               	movwf	(___fladd@a+1)^(0+128)
 17118  1CC9  0022               	movlb	2	; select bank2
 17119  1CCA  0821               	movf	cellBalancing@minVoltage^(0+256),w
 17120  1CCB  0021               	movlb	1	; select bank1
 17121  1CCC  00C1               	movwf	___fladd@a^(0+128)
 17122  1CCD  3185  25FC  319C   	fcall	___fladd
 17123  1CD0  0021               	movlb	1	; select bank1
 17124  1CD1  0840               	movf	(?___fladd+3)^(0+128),w
 17125  1CD2  00DC               	movwf	(___flge@ff2+3)^(0+128)
 17126  1CD3  083F               	movf	(?___fladd+2)^(0+128),w
 17127  1CD4  00DB               	movwf	(___flge@ff2+2)^(0+128)
 17128  1CD5  083E               	movf	(?___fladd+1)^(0+128),w
 17129  1CD6  00DA               	movwf	(___flge@ff2+1)^(0+128)
 17130  1CD7  083D               	movf	?___fladd^(0+128),w
 17131  1CD8  00D9               	movwf	___flge@ff2^(0+128)
 17132  1CD9  3188  2005  319C   	fcall	___flge
 17133  1CDC  3000               	movlw	0
 17134  1CDD  1803               	btfsc	3,0
 17135  1CDE  3001               	movlw	1
 17136  1CDF  0022               	movlb	2	; select bank2
 17137  1CE0  00A0               	movwf	cellBalancing@boolean^(0+256)
 17138                           
 17139                           ;ltc6804.c: 122: setDischarge(i, boolean);
 17140  1CE1  0828               	movf	(cellBalancing@i_1293+1)^(0+256),w
 17141  1CE2  00F3               	movwf	setDischarge@index+1
 17142  1CE3  0827               	movf	cellBalancing@i_1293^(0+256),w
 17143  1CE4  00F2               	movwf	setDischarge@index
 17144  1CE5  0820               	movf	cellBalancing@boolean^(0+256),w
 17145  1CE6  0021               	movlb	1	; select bank1
 17146  1CE7  00E7               	movwf	??_cellBalancing^(0+128)
 17147  1CE8  0867               	movf	??_cellBalancing^(0+128),w
 17148  1CE9  00F4               	movwf	setDischarge@boolean
 17149  1CEA  31A6  261E  319C   	fcall	_setDischarge
 17150  1CED  3001               	movlw	1
 17151  1CEE  0022               	movlb	2	; select bank2
 17152  1CEF  07A7               	addwf	cellBalancing@i_1293^(0+256),f
 17153  1CF0  3000               	movlw	0
 17154  1CF1  3DA8               	addwfc	(cellBalancing@i_1293+1)^(0+256),f
 17155  1CF2  2C8D               	goto	l8344
 17156  1CF3                     l8346:	
 17157                           
 17158                           ;ltc6804.c: 123: }
 17159                           ;ltc6804.c: 124: LTC6804_wrcfg(1, configReg);
 17160  1CF3  30DA               	movlw	low _configReg
 17161  1CF4  0020               	movlb	0	; select bank0
 17162  1CF5  00AF               	movwf	LTC6804_wrcfg@config
 17163  1CF6  3001               	movlw	high _configReg
 17164  1CF7  00B0               	movwf	LTC6804_wrcfg@config+1
 17165  1CF8  3001               	movlw	1
 17166  1CF9  31A3  23F2         	fcall	_LTC6804_wrcfg
 17167  1CFB  0008               	return
 17168  1CFC                     __end_of_cellBalancing:	
 17169                           
 17170                           	psect	text46
 17171  261E                     __ptext46:	
 17172 ;; *************** function _setDischarge *****************
 17173 ;; Defined at:
 17174 ;;		line 127 in file "ltc6804.c"
 17175 ;; Parameters:    Size  Location     Type
 17176 ;;  index           2    2[COMMON] int 
 17177 ;;  boolean         1    4[COMMON] unsigned char 
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;		None
 17180 ;; Return value:  Size  Location     Type
 17181 ;;                  1    wreg      void 
 17182 ;; Registers used:
 17183 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 17184 ;; Tracked objects:
 17185 ;;		On entry : 0/0
 17186 ;;		On exit  : 0/0
 17187 ;;		Unchanged: 0/0
 17188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17189 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17192 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17193 ;;Total ram usage:        4 bytes
 17194 ;; Hardware stack levels used:    1
 17195 ;; Hardware stack levels required when called:    2
 17196 ;; This function calls:
 17197 ;;		Nothing
 17198 ;; This function is called by:
 17199 ;;		_cellBalancing
 17200 ;; This function uses a non-reentrant model
 17201 ;;
 17202                           
 17203                           
 17204                           ;psect for function _setDischarge
 17205  261E                     _setDischarge:	
 17206                           
 17207                           ;ltc6804.c: 128: switch(index){
 17208                           
 17209                           ;incstack = 0
 17210                           ; Regs used in _setDischarge: [wreg-fsr0h+status,2+status,0]
 17211  261E  2EEB               	goto	l8220
 17212  261F                     l8146:	
 17213                           ;ltc6804.c: 129: case 0:
 17214                           
 17215                           
 17216                           ;ltc6804.c: 130: if(boolean){
 17217  261F  0874               	movf	setDischarge@boolean,w
 17218  2620  1903               	btfsc	3,2
 17219  2621  2E29               	goto	l8150
 17220                           
 17221                           ;ltc6804.c: 131: configReg[0][4]= configReg[0][4] | 0x01;
 17222  2622  0023               	movlb	3	; select bank3
 17223  2623  085E               	movf	(_configReg^(0+384)+4),w
 17224  2624  3801               	iorlw	1
 17225  2625  00F5               	movwf	??_setDischarge
 17226  2626  0875               	movf	??_setDischarge,w
 17227  2627  00DE               	movwf	(_configReg^(0+384)+4)
 17228                           
 17229                           ;ltc6804.c: 132: }else{
 17230  2628  0008               	return
 17231  2629                     l8150:	
 17232                           
 17233                           ;ltc6804.c: 133: configReg[0][4]= configReg[0][4] & (~0x01);
 17234  2629  0023               	movlb	3	; select bank3
 17235  262A  085E               	movf	(_configReg^(0+384)+4),w
 17236  262B  39FE               	andlw	254
 17237  262C  00F5               	movwf	??_setDischarge
 17238  262D  0875               	movf	??_setDischarge,w
 17239  262E  00DE               	movwf	(_configReg^(0+384)+4)
 17240                           
 17241                           ;ltc6804.c: 134: }
 17242                           ;ltc6804.c: 135: break;
 17243  262F  0008               	return
 17244  2630                     l8152:	
 17245                           ;ltc6804.c: 136: case 1:
 17246                           
 17247                           
 17248                           ;ltc6804.c: 137: if(boolean){
 17249  2630  0874               	movf	setDischarge@boolean,w
 17250  2631  1903               	btfsc	3,2
 17251  2632  2E3A               	goto	l8156
 17252                           
 17253                           ;ltc6804.c: 138: configReg[0][4]= configReg[0][4] | 0x02;
 17254  2633  0023               	movlb	3	; select bank3
 17255  2634  085E               	movf	(_configReg^(0+384)+4),w
 17256  2635  3802               	iorlw	2
 17257  2636  00F5               	movwf	??_setDischarge
 17258  2637  0875               	movf	??_setDischarge,w
 17259  2638  00DE               	movwf	(_configReg^(0+384)+4)
 17260                           
 17261                           ;ltc6804.c: 139: }else{
 17262  2639  0008               	return
 17263  263A                     l8156:	
 17264                           
 17265                           ;ltc6804.c: 140: configReg[0][4]= configReg[0][4] & (~0x02);
 17266  263A  0023               	movlb	3	; select bank3
 17267  263B  085E               	movf	(_configReg^(0+384)+4),w
 17268  263C  39FD               	andlw	253
 17269  263D  00F5               	movwf	??_setDischarge
 17270  263E  0875               	movf	??_setDischarge,w
 17271  263F  00DE               	movwf	(_configReg^(0+384)+4)
 17272                           
 17273                           ;ltc6804.c: 141: }
 17274                           ;ltc6804.c: 142: break;
 17275  2640  0008               	return
 17276  2641                     l8158:	
 17277                           ;ltc6804.c: 143: case 2:
 17278                           
 17279                           
 17280                           ;ltc6804.c: 144: if(boolean){
 17281  2641  0874               	movf	setDischarge@boolean,w
 17282  2642  1903               	btfsc	3,2
 17283  2643  2E4B               	goto	l8162
 17284                           
 17285                           ;ltc6804.c: 145: configReg[0][4]= configReg[0][4] | 0x04;
 17286  2644  0023               	movlb	3	; select bank3
 17287  2645  085E               	movf	(_configReg^(0+384)+4),w
 17288  2646  3804               	iorlw	4
 17289  2647  00F5               	movwf	??_setDischarge
 17290  2648  0875               	movf	??_setDischarge,w
 17291  2649  00DE               	movwf	(_configReg^(0+384)+4)
 17292                           
 17293                           ;ltc6804.c: 146: }else{
 17294  264A  0008               	return
 17295  264B                     l8162:	
 17296                           
 17297                           ;ltc6804.c: 147: configReg[0][4]= configReg[0][4] & (~0x04);
 17298  264B  0023               	movlb	3	; select bank3
 17299  264C  085E               	movf	(_configReg^(0+384)+4),w
 17300  264D  39FB               	andlw	251
 17301  264E  00F5               	movwf	??_setDischarge
 17302  264F  0875               	movf	??_setDischarge,w
 17303  2650  00DE               	movwf	(_configReg^(0+384)+4)
 17304                           
 17305                           ;ltc6804.c: 148: }
 17306                           ;ltc6804.c: 149: break;
 17307  2651  0008               	return
 17308  2652                     l8164:	
 17309                           ;ltc6804.c: 150: case 3:
 17310                           
 17311                           
 17312                           ;ltc6804.c: 151: if(boolean){
 17313  2652  0874               	movf	setDischarge@boolean,w
 17314  2653  1903               	btfsc	3,2
 17315  2654  2E5C               	goto	l8168
 17316                           
 17317                           ;ltc6804.c: 152: configReg[0][4]= configReg[0][4] | 0x08;
 17318  2655  0023               	movlb	3	; select bank3
 17319  2656  085E               	movf	(_configReg^(0+384)+4),w
 17320  2657  3808               	iorlw	8
 17321  2658  00F5               	movwf	??_setDischarge
 17322  2659  0875               	movf	??_setDischarge,w
 17323  265A  00DE               	movwf	(_configReg^(0+384)+4)
 17324                           
 17325                           ;ltc6804.c: 153: }else{
 17326  265B  0008               	return
 17327  265C                     l8168:	
 17328                           
 17329                           ;ltc6804.c: 154: configReg[0][4]= configReg[0][4] & (~0x08);
 17330  265C  0023               	movlb	3	; select bank3
 17331  265D  085E               	movf	(_configReg^(0+384)+4),w
 17332  265E  39F7               	andlw	247
 17333  265F  00F5               	movwf	??_setDischarge
 17334  2660  0875               	movf	??_setDischarge,w
 17335  2661  00DE               	movwf	(_configReg^(0+384)+4)
 17336                           
 17337                           ;ltc6804.c: 155: }
 17338                           ;ltc6804.c: 156: break;
 17339  2662  0008               	return
 17340  2663                     l8170:	
 17341                           ;ltc6804.c: 157: case 4:
 17342                           
 17343                           
 17344                           ;ltc6804.c: 158: if(boolean){
 17345  2663  0874               	movf	setDischarge@boolean,w
 17346  2664  1903               	btfsc	3,2
 17347  2665  2E6D               	goto	l8174
 17348                           
 17349                           ;ltc6804.c: 159: configReg[0][4]= configReg[0][4] | 0x10;
 17350  2666  0023               	movlb	3	; select bank3
 17351  2667  085E               	movf	(_configReg^(0+384)+4),w
 17352  2668  3810               	iorlw	16
 17353  2669  00F5               	movwf	??_setDischarge
 17354  266A  0875               	movf	??_setDischarge,w
 17355  266B  00DE               	movwf	(_configReg^(0+384)+4)
 17356                           
 17357                           ;ltc6804.c: 160: }else{
 17358  266C  0008               	return
 17359  266D                     l8174:	
 17360                           
 17361                           ;ltc6804.c: 161: configReg[0][4]= configReg[0][4] & (~0x10);
 17362  266D  0023               	movlb	3	; select bank3
 17363  266E  085E               	movf	(_configReg^(0+384)+4),w
 17364  266F  39EF               	andlw	239
 17365  2670  00F5               	movwf	??_setDischarge
 17366  2671  0875               	movf	??_setDischarge,w
 17367  2672  00DE               	movwf	(_configReg^(0+384)+4)
 17368                           
 17369                           ;ltc6804.c: 162: }
 17370                           ;ltc6804.c: 163: break;
 17371  2673  0008               	return
 17372  2674                     l8176:	
 17373                           ;ltc6804.c: 164: case 5:
 17374                           
 17375                           
 17376                           ;ltc6804.c: 165: if(boolean){
 17377  2674  0874               	movf	setDischarge@boolean,w
 17378  2675  1903               	btfsc	3,2
 17379  2676  2E7E               	goto	l8180
 17380                           
 17381                           ;ltc6804.c: 166: configReg[0][4]= configReg[0][4] | 0x20;
 17382  2677  0023               	movlb	3	; select bank3
 17383  2678  085E               	movf	(_configReg^(0+384)+4),w
 17384  2679  3820               	iorlw	32
 17385  267A  00F5               	movwf	??_setDischarge
 17386  267B  0875               	movf	??_setDischarge,w
 17387  267C  00DE               	movwf	(_configReg^(0+384)+4)
 17388                           
 17389                           ;ltc6804.c: 167: }else{
 17390  267D  0008               	return
 17391  267E                     l8180:	
 17392                           
 17393                           ;ltc6804.c: 168: configReg[0][4]= configReg[0][4] & (~0x20);
 17394  267E  0023               	movlb	3	; select bank3
 17395  267F  085E               	movf	(_configReg^(0+384)+4),w
 17396  2680  39DF               	andlw	223
 17397  2681  00F5               	movwf	??_setDischarge
 17398  2682  0875               	movf	??_setDischarge,w
 17399  2683  00DE               	movwf	(_configReg^(0+384)+4)
 17400                           
 17401                           ;ltc6804.c: 169: }
 17402                           ;ltc6804.c: 170: break;
 17403  2684  0008               	return
 17404  2685                     l8182:	
 17405                           ;ltc6804.c: 171: case 6:
 17406                           
 17407                           
 17408                           ;ltc6804.c: 172: if(boolean){
 17409  2685  0874               	movf	setDischarge@boolean,w
 17410  2686  1903               	btfsc	3,2
 17411  2687  2E8F               	goto	l8186
 17412                           
 17413                           ;ltc6804.c: 173: configReg[0][4]= configReg[0][4] | 0x40;
 17414  2688  0023               	movlb	3	; select bank3
 17415  2689  085E               	movf	(_configReg^(0+384)+4),w
 17416  268A  3840               	iorlw	64
 17417  268B  00F5               	movwf	??_setDischarge
 17418  268C  0875               	movf	??_setDischarge,w
 17419  268D  00DE               	movwf	(_configReg^(0+384)+4)
 17420                           
 17421                           ;ltc6804.c: 174: }else{
 17422  268E  0008               	return
 17423  268F                     l8186:	
 17424                           
 17425                           ;ltc6804.c: 175: configReg[0][4]= configReg[0][4] & (~0x40);
 17426  268F  0023               	movlb	3	; select bank3
 17427  2690  085E               	movf	(_configReg^(0+384)+4),w
 17428  2691  39BF               	andlw	191
 17429  2692  00F5               	movwf	??_setDischarge
 17430  2693  0875               	movf	??_setDischarge,w
 17431  2694  00DE               	movwf	(_configReg^(0+384)+4)
 17432                           
 17433                           ;ltc6804.c: 176: }
 17434                           ;ltc6804.c: 177: break;
 17435  2695  0008               	return
 17436  2696                     l8188:	
 17437                           ;ltc6804.c: 178: case 7:
 17438                           
 17439                           
 17440                           ;ltc6804.c: 179: if(boolean){
 17441  2696  0874               	movf	setDischarge@boolean,w
 17442  2697  1903               	btfsc	3,2
 17443  2698  2EA0               	goto	l8192
 17444                           
 17445                           ;ltc6804.c: 180: configReg[0][4]= configReg[0][4] | 0x80;
 17446  2699  0023               	movlb	3	; select bank3
 17447  269A  085E               	movf	(_configReg^(0+384)+4),w
 17448  269B  3880               	iorlw	128
 17449  269C  00F5               	movwf	??_setDischarge
 17450  269D  0875               	movf	??_setDischarge,w
 17451  269E  00DE               	movwf	(_configReg^(0+384)+4)
 17452                           
 17453                           ;ltc6804.c: 181: }else{
 17454  269F  0008               	return
 17455  26A0                     l8192:	
 17456                           
 17457                           ;ltc6804.c: 182: configReg[0][4]= configReg[0][4] & (~0x80);
 17458  26A0  0023               	movlb	3	; select bank3
 17459  26A1  085E               	movf	(_configReg^(0+384)+4),w
 17460  26A2  397F               	andlw	127
 17461  26A3  00F5               	movwf	??_setDischarge
 17462  26A4  0875               	movf	??_setDischarge,w
 17463  26A5  00DE               	movwf	(_configReg^(0+384)+4)
 17464                           
 17465                           ;ltc6804.c: 183: }
 17466                           ;ltc6804.c: 184: break;
 17467  26A6  0008               	return
 17468  26A7                     l8194:	
 17469                           ;ltc6804.c: 185: case 8:
 17470                           
 17471                           
 17472                           ;ltc6804.c: 186: if(boolean){
 17473  26A7  0874               	movf	setDischarge@boolean,w
 17474  26A8  1903               	btfsc	3,2
 17475  26A9  2EB1               	goto	l8198
 17476                           
 17477                           ;ltc6804.c: 187: configReg[0][5]= configReg[0][5] | 0x01;
 17478  26AA  0023               	movlb	3	; select bank3
 17479  26AB  085F               	movf	(_configReg^(0+384)+5),w
 17480  26AC  3801               	iorlw	1
 17481  26AD  00F5               	movwf	??_setDischarge
 17482  26AE  0875               	movf	??_setDischarge,w
 17483  26AF  00DF               	movwf	(_configReg^(0+384)+5)
 17484                           
 17485                           ;ltc6804.c: 188: }else{
 17486  26B0  0008               	return
 17487  26B1                     l8198:	
 17488                           
 17489                           ;ltc6804.c: 189: configReg[0][5]= configReg[0][5] & (~0x01);
 17490  26B1  0023               	movlb	3	; select bank3
 17491  26B2  085F               	movf	(_configReg^(0+384)+5),w
 17492  26B3  39FE               	andlw	254
 17493  26B4  00F5               	movwf	??_setDischarge
 17494  26B5  0875               	movf	??_setDischarge,w
 17495  26B6  00DF               	movwf	(_configReg^(0+384)+5)
 17496                           
 17497                           ;ltc6804.c: 190: }
 17498                           ;ltc6804.c: 191: break;
 17499  26B7  0008               	return
 17500  26B8                     l8200:	
 17501                           ;ltc6804.c: 192: case 9:
 17502                           
 17503                           
 17504                           ;ltc6804.c: 193: if(boolean){
 17505  26B8  0874               	movf	setDischarge@boolean,w
 17506  26B9  1903               	btfsc	3,2
 17507  26BA  2EC2               	goto	l8204
 17508                           
 17509                           ;ltc6804.c: 194: configReg[0][5]= configReg[0][5] | 0x02;
 17510  26BB  0023               	movlb	3	; select bank3
 17511  26BC  085F               	movf	(_configReg^(0+384)+5),w
 17512  26BD  3802               	iorlw	2
 17513  26BE  00F5               	movwf	??_setDischarge
 17514  26BF  0875               	movf	??_setDischarge,w
 17515  26C0  00DF               	movwf	(_configReg^(0+384)+5)
 17516                           
 17517                           ;ltc6804.c: 195: }else{
 17518  26C1  0008               	return
 17519  26C2                     l8204:	
 17520                           
 17521                           ;ltc6804.c: 196: configReg[0][5]= configReg[0][5] & (~0x02);
 17522  26C2  0023               	movlb	3	; select bank3
 17523  26C3  085F               	movf	(_configReg^(0+384)+5),w
 17524  26C4  39FD               	andlw	253
 17525  26C5  00F5               	movwf	??_setDischarge
 17526  26C6  0875               	movf	??_setDischarge,w
 17527  26C7  00DF               	movwf	(_configReg^(0+384)+5)
 17528                           
 17529                           ;ltc6804.c: 197: }
 17530                           ;ltc6804.c: 198: break;
 17531  26C8  0008               	return
 17532  26C9                     l8206:	
 17533                           ;ltc6804.c: 199: case 10:
 17534                           
 17535                           
 17536                           ;ltc6804.c: 200: if(boolean){
 17537  26C9  0874               	movf	setDischarge@boolean,w
 17538  26CA  1903               	btfsc	3,2
 17539  26CB  2ED3               	goto	l8210
 17540                           
 17541                           ;ltc6804.c: 201: configReg[0][5]= configReg[0][5] | 0x04;
 17542  26CC  0023               	movlb	3	; select bank3
 17543  26CD  085F               	movf	(_configReg^(0+384)+5),w
 17544  26CE  3804               	iorlw	4
 17545  26CF  00F5               	movwf	??_setDischarge
 17546  26D0  0875               	movf	??_setDischarge,w
 17547  26D1  00DF               	movwf	(_configReg^(0+384)+5)
 17548                           
 17549                           ;ltc6804.c: 202: }else{
 17550  26D2  0008               	return
 17551  26D3                     l8210:	
 17552                           
 17553                           ;ltc6804.c: 203: configReg[0][5]= configReg[0][5] & (~0x04);
 17554  26D3  0023               	movlb	3	; select bank3
 17555  26D4  085F               	movf	(_configReg^(0+384)+5),w
 17556  26D5  39FB               	andlw	251
 17557  26D6  00F5               	movwf	??_setDischarge
 17558  26D7  0875               	movf	??_setDischarge,w
 17559  26D8  00DF               	movwf	(_configReg^(0+384)+5)
 17560                           
 17561                           ;ltc6804.c: 204: }
 17562                           ;ltc6804.c: 205: break;
 17563  26D9  0008               	return
 17564  26DA                     l8212:	
 17565                           ;ltc6804.c: 206: case 11:
 17566                           
 17567                           
 17568                           ;ltc6804.c: 207: if(boolean){
 17569  26DA  0874               	movf	setDischarge@boolean,w
 17570  26DB  1903               	btfsc	3,2
 17571  26DC  2EE4               	goto	l8216
 17572                           
 17573                           ;ltc6804.c: 208: configReg[0][5]= configReg[0][5] | 0x08;
 17574  26DD  0023               	movlb	3	; select bank3
 17575  26DE  085F               	movf	(_configReg^(0+384)+5),w
 17576  26DF  3808               	iorlw	8
 17577  26E0  00F5               	movwf	??_setDischarge
 17578  26E1  0875               	movf	??_setDischarge,w
 17579  26E2  00DF               	movwf	(_configReg^(0+384)+5)
 17580                           
 17581                           ;ltc6804.c: 209: }else{
 17582  26E3  0008               	return
 17583  26E4                     l8216:	
 17584                           
 17585                           ;ltc6804.c: 210: configReg[0][5]= configReg[0][5] & (~0x08);
 17586  26E4  0023               	movlb	3	; select bank3
 17587  26E5  085F               	movf	(_configReg^(0+384)+5),w
 17588  26E6  39F7               	andlw	247
 17589  26E7  00F5               	movwf	??_setDischarge
 17590  26E8  0875               	movf	??_setDischarge,w
 17591  26E9  00DF               	movwf	(_configReg^(0+384)+5)
 17592                           
 17593                           ;ltc6804.c: 215: }
 17594                           
 17595                           ;ltc6804.c: 214: break;
 17596                           
 17597                           ;ltc6804.c: 213: default:
 17598                           
 17599                           ;ltc6804.c: 211: }
 17600                           ;ltc6804.c: 212: break;
 17601  26EA  0008               	return
 17602  26EB                     l8220:	
 17603                           
 17604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17605                           ; Switch size 1, requested type "space"
 17606                           ; Number of cases is 1, Range of values is 0 to 0
 17607                           ; switch strategies available:
 17608                           ; Name         Instructions Cycles
 17609                           ; simple_byte            4     3 (average)
 17610                           ; direct_byte            8     6 (fixed)
 17611                           ; jumptable            260     6 (fixed)
 17612                           ;	Chosen strategy is simple_byte
 17613  26EB  0873               	movf	setDischarge@index+1,w
 17614  26EC  3A00               	xorlw	0	; case 0
 17615  26ED  1903               	skipnz
 17616  26EE  2EF0               	goto	l8704
 17617  26EF  2EFA               	goto	l630
 17618  26F0                     l8704:	
 17619                           
 17620                           ; Switch size 1, requested type "space"
 17621                           ; Number of cases is 12, Range of values is 0 to 11
 17622                           ; switch strategies available:
 17623                           ; Name         Instructions Cycles
 17624                           ; direct_byte           30     6 (fixed)
 17625                           ; simple_byte           37    19 (average)
 17626                           ; jumptable            260     6 (fixed)
 17627                           ;	Chosen strategy is direct_byte
 17628  26F0  0872               	movf	setDischarge@index,w
 17629  26F1  0084               	movwf	4
 17630  26F2  300C               	movlw	12
 17631  26F3  0204               	subwf	4,w
 17632  26F4  1803               	skipnc
 17633  26F5  0008               	return
 17634  26F6  31A0               	movlp	high S8706
 17635  26F7  3504               	lslf	4,w
 17636  26F8  3E00               	addlw	low S8706
 17637  26F9  0082               	movwf	2
 17638  26FA                     l630:	
 17639  26FA  0008               	return
 17640  26FB                     __end_of_setDischarge:	
 17641                           
 17642                           	psect	swtext1
 17643  2000                     __pswtext1:	
 17644  2000                     S8706:	
 17645  2000  31A6  2E1F         	ljmp	l8146
 17646  2002  31A6  2E30         	ljmp	l8152
 17647  2004  31A6  2E41         	ljmp	l8158
 17648  2006  31A6  2E52         	ljmp	l8164
 17649  2008  31A6  2E63         	ljmp	l8170
 17650  200A  31A6  2E74         	ljmp	l8176
 17651  200C  31A6  2E85         	ljmp	l8182
 17652  200E  31A6  2E96         	ljmp	l8188
 17653  2010  31A6  2EA7         	ljmp	l8194
 17654  2012  31A6  2EB8         	ljmp	l8200
 17655  2014  31A6  2EC9         	ljmp	l8206
 17656  2016  31A6  2EDA         	ljmp	l8212
 17657                           
 17658                           	psect	text47
 17659  0805                     __ptext47:	
 17660 ;; *************** function ___flge *****************
 17661 ;; Defined at:
 17662 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 17663 ;; Parameters:    Size  Location     Type
 17664 ;;  ff1             4   53[BANK1 ] void 
 17665 ;;  ff2             4   57[BANK1 ] void 
 17666 ;; Auto vars:     Size  Location     Type
 17667 ;;		None
 17668 ;; Return value:  Size  Location     Type
 17669 ;;		None               void
 17670 ;; Registers used:
 17671 ;;		wreg, status,2, status,0
 17672 ;; Tracked objects:
 17673 ;;		On entry : 0/0
 17674 ;;		On exit  : 0/0
 17675 ;;		Unchanged: 0/0
 17676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17677 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17679 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17680 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17681 ;;Total ram usage:       16 bytes
 17682 ;; Hardware stack levels used:    1
 17683 ;; Hardware stack levels required when called:    2
 17684 ;; This function calls:
 17685 ;;		Nothing
 17686 ;; This function is called by:
 17687 ;;		_main
 17688 ;;		_writeVoltages
 17689 ;;		_measureVoltages
 17690 ;;		_cellBalancing
 17691 ;;		_sprintf
 17692 ;;		_startUp
 17693 ;; This function uses a non-reentrant model
 17694 ;;
 17695                           
 17696                           
 17697                           ;psect for function ___flge
 17698  0805                     ___flge:	
 17699                           
 17700                           ;incstack = 0
 17701                           ; Regs used in ___flge: [wreg+status,2+status,0]
 17702  0805  3000               	movlw	0
 17703  0806  0021               	movlb	1	; select bank1
 17704  0807  0555               	andwf	___flge@ff1^(0+128),w
 17705  0808  00DD               	movwf	??___flge^(0+128)
 17706  0809  3000               	movlw	0
 17707  080A  0556               	andwf	(___flge@ff1+1)^(0+128),w
 17708  080B  00DE               	movwf	(??___flge^(0+128)+1)
 17709  080C  3080               	movlw	128
 17710  080D  0557               	andwf	(___flge@ff1+2)^(0+128),w
 17711  080E  00DF               	movwf	(??___flge^(0+128)+2)
 17712  080F  307F               	movlw	127
 17713  0810  0558               	andwf	(___flge@ff1+3)^(0+128),w
 17714  0811  00E0               	movwf	(??___flge^(0+128)+3)
 17715  0812  0860               	movf	(??___flge+3)^(0+128),w
 17716  0813  045F               	iorwf	(??___flge+2)^(0+128),w
 17717  0814  045E               	iorwf	(??___flge+1)^(0+128),w
 17718  0815  045D               	iorwf	??___flge^(0+128),w
 17719  0816  1D03               	skipz
 17720  0817  2820               	goto	l1167
 17721  0818  3000               	movlw	0
 17722  0819  00D8               	movwf	(___flge@ff1+3)^(0+128)
 17723  081A  3000               	movlw	0
 17724  081B  00D7               	movwf	(___flge@ff1+2)^(0+128)
 17725  081C  3000               	movlw	0
 17726  081D  00D6               	movwf	(___flge@ff1+1)^(0+128)
 17727  081E  3000               	movlw	0
 17728  081F  00D5               	movwf	___flge@ff1^(0+128)
 17729  0820                     l1167:	
 17730  0820  3000               	movlw	0
 17731  0821  0559               	andwf	___flge@ff2^(0+128),w
 17732  0822  00DD               	movwf	??___flge^(0+128)
 17733  0823  3000               	movlw	0
 17734  0824  055A               	andwf	(___flge@ff2+1)^(0+128),w
 17735  0825  00DE               	movwf	(??___flge^(0+128)+1)
 17736  0826  3080               	movlw	128
 17737  0827  055B               	andwf	(___flge@ff2+2)^(0+128),w
 17738  0828  00DF               	movwf	(??___flge^(0+128)+2)
 17739  0829  307F               	movlw	127
 17740  082A  055C               	andwf	(___flge@ff2+3)^(0+128),w
 17741  082B  00E0               	movwf	(??___flge^(0+128)+3)
 17742  082C  0860               	movf	(??___flge+3)^(0+128),w
 17743  082D  045F               	iorwf	(??___flge+2)^(0+128),w
 17744  082E  045E               	iorwf	(??___flge+1)^(0+128),w
 17745  082F  045D               	iorwf	??___flge^(0+128),w
 17746  0830  1D03               	skipz
 17747  0831  283A               	goto	l7200
 17748  0832  3000               	movlw	0
 17749  0833  00DC               	movwf	(___flge@ff2+3)^(0+128)
 17750  0834  3000               	movlw	0
 17751  0835  00DB               	movwf	(___flge@ff2+2)^(0+128)
 17752  0836  3000               	movlw	0
 17753  0837  00DA               	movwf	(___flge@ff2+1)^(0+128)
 17754  0838  3000               	movlw	0
 17755  0839  00D9               	movwf	___flge@ff2^(0+128)
 17756  083A                     l7200:	
 17757  083A  1FD8               	btfss	(___flge@ff1+3)^(0+128),7
 17758  083B  2863               	goto	l7204
 17759  083C  3000               	movlw	0
 17760  083D  00DD               	movwf	??___flge^(0+128)
 17761  083E  3000               	movlw	0
 17762  083F  00DE               	movwf	(??___flge^(0+128)+1)
 17763  0840  3000               	movlw	0
 17764  0841  00DF               	movwf	(??___flge^(0+128)+2)
 17765  0842  3080               	movlw	128
 17766  0843  00E0               	movwf	(??___flge^(0+128)+3)
 17767  0844  0955               	comf	___flge@ff1^(0+128),w
 17768  0845  00E1               	movwf	(??___flge+4)^(0+128)
 17769  0846  0956               	comf	(___flge@ff1+1)^(0+128),w
 17770  0847  00E2               	movwf	((??___flge+4)^(0+128)+1)
 17771  0848  0957               	comf	(___flge@ff1+2)^(0+128),w
 17772  0849  00E3               	movwf	((??___flge+4)^(0+128)+2)
 17773  084A  0958               	comf	(___flge@ff1+3)^(0+128),w
 17774  084B  00E4               	movwf	((??___flge+4)^(0+128)+3)
 17775  084C  0AE1               	incf	(??___flge+4)^(0+128),f
 17776  084D  1903               	skipnz
 17777  084E  0AE2               	incf	((??___flge+4)^(0+128)+1),f
 17778  084F  1903               	skipnz
 17779  0850  0AE3               	incf	((??___flge+4)^(0+128)+2),f
 17780  0851  1903               	skipnz
 17781  0852  0AE4               	incf	((??___flge+4)^(0+128)+3),f
 17782  0853  0861               	movf	(??___flge+4)^(0+128),w
 17783  0854  07DD               	addwf	??___flge^(0+128),f
 17784  0855  0862               	movf	(??___flge+5)^(0+128),w
 17785  0856  3DDE               	addwfc	(??___flge^(0+128)+1),f
 17786  0857  0863               	movf	(??___flge+6)^(0+128),w
 17787  0858  3DDF               	addwfc	(??___flge^(0+128)+2),f
 17788  0859  0864               	movf	(??___flge+7)^(0+128),w
 17789  085A  3DE0               	addwfc	(??___flge^(0+128)+3),f
 17790  085B  0860               	movf	(??___flge+3)^(0+128),w
 17791  085C  00D8               	movwf	(___flge@ff1+3)^(0+128)
 17792  085D  085F               	movf	(??___flge+2)^(0+128),w
 17793  085E  00D7               	movwf	(___flge@ff1+2)^(0+128)
 17794  085F  085E               	movf	(??___flge+1)^(0+128),w
 17795  0860  00D6               	movwf	(___flge@ff1+1)^(0+128)
 17796  0861  085D               	movf	??___flge^(0+128),w
 17797  0862  00D5               	movwf	___flge@ff1^(0+128)
 17798  0863                     l7204:	
 17799  0863  1FDC               	btfss	(___flge@ff2+3)^(0+128),7
 17800  0864  288C               	goto	l7208
 17801  0865  3000               	movlw	0
 17802  0866  00DD               	movwf	??___flge^(0+128)
 17803  0867  3000               	movlw	0
 17804  0868  00DE               	movwf	(??___flge^(0+128)+1)
 17805  0869  3000               	movlw	0
 17806  086A  00DF               	movwf	(??___flge^(0+128)+2)
 17807  086B  3080               	movlw	128
 17808  086C  00E0               	movwf	(??___flge^(0+128)+3)
 17809  086D  0959               	comf	___flge@ff2^(0+128),w
 17810  086E  00E1               	movwf	(??___flge+4)^(0+128)
 17811  086F  095A               	comf	(___flge@ff2+1)^(0+128),w
 17812  0870  00E2               	movwf	((??___flge+4)^(0+128)+1)
 17813  0871  095B               	comf	(___flge@ff2+2)^(0+128),w
 17814  0872  00E3               	movwf	((??___flge+4)^(0+128)+2)
 17815  0873  095C               	comf	(___flge@ff2+3)^(0+128),w
 17816  0874  00E4               	movwf	((??___flge+4)^(0+128)+3)
 17817  0875  0AE1               	incf	(??___flge+4)^(0+128),f
 17818  0876  1903               	skipnz
 17819  0877  0AE2               	incf	((??___flge+4)^(0+128)+1),f
 17820  0878  1903               	skipnz
 17821  0879  0AE3               	incf	((??___flge+4)^(0+128)+2),f
 17822  087A  1903               	skipnz
 17823  087B  0AE4               	incf	((??___flge+4)^(0+128)+3),f
 17824  087C  0861               	movf	(??___flge+4)^(0+128),w
 17825  087D  07DD               	addwf	??___flge^(0+128),f
 17826  087E  0862               	movf	(??___flge+5)^(0+128),w
 17827  087F  3DDE               	addwfc	(??___flge^(0+128)+1),f
 17828  0880  0863               	movf	(??___flge+6)^(0+128),w
 17829  0881  3DDF               	addwfc	(??___flge^(0+128)+2),f
 17830  0882  0864               	movf	(??___flge+7)^(0+128),w
 17831  0883  3DE0               	addwfc	(??___flge^(0+128)+3),f
 17832  0884  0860               	movf	(??___flge+3)^(0+128),w
 17833  0885  00DC               	movwf	(___flge@ff2+3)^(0+128)
 17834  0886  085F               	movf	(??___flge+2)^(0+128),w
 17835  0887  00DB               	movwf	(___flge@ff2+2)^(0+128)
 17836  0888  085E               	movf	(??___flge+1)^(0+128),w
 17837  0889  00DA               	movwf	(___flge@ff2+1)^(0+128)
 17838  088A  085D               	movf	??___flge^(0+128),w
 17839  088B  00D9               	movwf	___flge@ff2^(0+128)
 17840  088C                     l7208:	
 17841  088C  3080               	movlw	128
 17842  088D  06D8               	xorwf	(___flge@ff1+3)^(0+128),f
 17843  088E  3080               	movlw	128
 17844  088F  06DC               	xorwf	(___flge@ff2+3)^(0+128),f
 17845  0890  085C               	movf	(___flge@ff2+3)^(0+128),w
 17846  0891  0258               	subwf	(___flge@ff1+3)^(0+128),w
 17847  0892  1D03               	skipz
 17848  0893  0008               	return
 17849  0894  085B               	movf	(___flge@ff2+2)^(0+128),w
 17850  0895  0257               	subwf	(___flge@ff1+2)^(0+128),w
 17851  0896  1D03               	skipz
 17852  0897  0008               	return
 17853  0898  085A               	movf	(___flge@ff2+1)^(0+128),w
 17854  0899  0256               	subwf	(___flge@ff1+1)^(0+128),w
 17855  089A  1D03               	skipz
 17856  089B  0008               	return
 17857  089C  0859               	movf	___flge@ff2^(0+128),w
 17858  089D  0255               	subwf	___flge@ff1^(0+128),w
 17859  089E  0008               	return
 17860  089F                     __end_of___flge:	
 17861                           
 17862                           	psect	text48
 17863  23F2                     __ptext48:	
 17864 ;; *************** function _LTC6804_wrcfg *****************
 17865 ;; Defined at:
 17866 ;;		line 933 in file "ltc6804.c"
 17867 ;; Parameters:    Size  Location     Type
 17868 ;;  total_ic        1    wreg     unsigned char 
 17869 ;;  config          2   15[BANK0 ] PTR unsigned char [6]
 17870 ;;		 -> RAM(4096), configReg(6), measureVoltages@tempConfig(6), 
 17871 ;; Auto vars:     Size  Location     Type
 17872 ;;  total_ic        1   35[BANK0 ] unsigned char 
 17873 ;;  current_byte    1   38[BANK0 ] unsigned char 
 17874 ;;  current_ic      1   39[BANK0 ] unsigned char 
 17875 ;;  cmd            12   22[BANK0 ] unsigned char [12]
 17876 ;;  cfg_pec         2   36[BANK0 ] int 
 17877 ;;  cmd_index       1   40[BANK0 ] unsigned char 
 17878 ;;  CMD_LEN         1   34[BANK0 ] unsigned char 
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      void 
 17881 ;; Registers used:
 17882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17883 ;; Tracked objects:
 17884 ;;		On entry : 0/0
 17885 ;;		On exit  : 0/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17889 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17890 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17891 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17892 ;;Total ram usage:       26 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:    4
 17895 ;; This function calls:
 17896 ;;		___wmul
 17897 ;;		_pec15_calc
 17898 ;;		_spi_write_array
 17899 ;;		_wakeup_idle
 17900 ;; This function is called by:
 17901 ;;		_measureVoltages
 17902 ;;		_cellBalancing
 17903 ;;		_LTC6804_initialize
 17904 ;; This function uses a non-reentrant model
 17905 ;;
 17906                           
 17907                           
 17908                           ;psect for function _LTC6804_wrcfg
 17909  23F2                     _LTC6804_wrcfg:	
 17910                           
 17911                           ;incstack = 0
 17912                           ; Regs used in _LTC6804_wrcfg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17913                           ;LTC6804_wrcfg@total_ic stored from wreg
 17914  23F2  0020               	movlb	0	; select bank0
 17915  23F3  00C3               	movwf	LTC6804_wrcfg@total_ic
 17916                           
 17917                           ;ltc6804.c: 937: const char BYTES_IN_REG = 6;
 17918                           ;ltc6804.c: 938: char CMD_LEN = 4+(8*total_ic);
 17919  23F4  0843               	movf	LTC6804_wrcfg@total_ic,w
 17920  23F5  00B1               	movwf	??_LTC6804_wrcfg
 17921  23F6  3002               	movlw	2
 17922  23F7                     u10715:	
 17923  23F7  35B1               	lslf	??_LTC6804_wrcfg,f
 17924  23F8  3EFF               	addlw	-1
 17925  23F9  1D03               	skipz
 17926  23FA  2BF7               	goto	u10715
 17927  23FB  3531               	lslf	??_LTC6804_wrcfg,w
 17928  23FC  3E04               	addlw	4
 17929  23FD  00B2               	movwf	??_LTC6804_wrcfg+1
 17930  23FE  0832               	movf	??_LTC6804_wrcfg+1,w
 17931  23FF  00C2               	movwf	LTC6804_wrcfg@CMD_LEN
 17932                           
 17933                           ;ltc6804.c: 939: char cmd[12];
 17934                           ;ltc6804.c: 940: int cfg_pec;
 17935                           ;ltc6804.c: 941: char cmd_index;
 17936                           ;ltc6804.c: 946: cmd[0] = 0x00;
 17937  2400  01B6               	clrf	LTC6804_wrcfg@cmd
 17938                           
 17939                           ;ltc6804.c: 947: cmd[1] = 0x01;
 17940  2401  01B7               	clrf	LTC6804_wrcfg@cmd+1
 17941  2402  0AB7               	incf	LTC6804_wrcfg@cmd+1,f
 17942                           
 17943                           ;ltc6804.c: 948: cmd[2] = 0x3d;
 17944  2403  303D               	movlw	61
 17945  2404  00B1               	movwf	??_LTC6804_wrcfg
 17946  2405  0831               	movf	??_LTC6804_wrcfg,w
 17947  2406  00B8               	movwf	LTC6804_wrcfg@cmd+2
 17948                           
 17949                           ;ltc6804.c: 949: cmd[3] = 0x6e;
 17950  2407  306E               	movlw	110
 17951  2408  00B1               	movwf	??_LTC6804_wrcfg
 17952  2409  0831               	movf	??_LTC6804_wrcfg,w
 17953  240A  00B9               	movwf	LTC6804_wrcfg@cmd+3
 17954                           
 17955                           ;ltc6804.c: 952: cmd_index = 4;
 17956  240B  3004               	movlw	4
 17957  240C  00B1               	movwf	??_LTC6804_wrcfg
 17958  240D  0831               	movf	??_LTC6804_wrcfg,w
 17959  240E  00C8               	movwf	LTC6804_wrcfg@cmd_index
 17960                           
 17961                           ;ltc6804.c: 953: for (char current_ic = total_ic; current_ic > 0; current_ic--)
 17962  240F  0843               	movf	LTC6804_wrcfg@total_ic,w
 17963  2410  00B1               	movwf	??_LTC6804_wrcfg
 17964  2411  0831               	movf	??_LTC6804_wrcfg,w
 17965  2412  00C7               	movwf	LTC6804_wrcfg@current_ic
 17966  2413  0847               	movf	LTC6804_wrcfg@current_ic,w
 17967  2414  1903               	btfsc	3,2
 17968  2415  2C93               	goto	l7736
 17969  2416                     l7710:	
 17970                           
 17971                           ;ltc6804.c: 954: {
 17972                           ;ltc6804.c: 957: for (char current_byte = 0; current_byte < BYTES_IN_REG; current_byte++
      +                          )
 17973  2416  01C6               	clrf	LTC6804_wrcfg@current_byte
 17974  2417  3062               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 17975  2418  0084               	movwf	4
 17976  2419  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 17977  241A  0085               	movwf	5
 17978  241B  0800               	movf	0,w	;code access
 17979  241C  0246               	subwf	LTC6804_wrcfg@current_byte,w
 17980  241D  1803               	btfsc	3,0
 17981  241E  2C56               	goto	l7724
 17982  241F                     l7716:	
 17983                           
 17984                           ;ltc6804.c: 958: {
 17985                           ;ltc6804.c: 960: cmd[cmd_index] = config[current_ic-1][current_byte];
 17986  241F  0846               	movf	LTC6804_wrcfg@current_byte,w
 17987  2420  00B1               	movwf	??_LTC6804_wrcfg
 17988  2421  01B2               	clrf	??_LTC6804_wrcfg+1
 17989  2422  0847               	movf	LTC6804_wrcfg@current_ic,w
 17990  2423  3EFF               	addlw	255
 17991  2424  00F2               	movwf	___wmul@multiplier
 17992  2425  30FF               	movlw	255
 17993  2426  1803               	skipnc
 17994  2427  3000               	movlw	0
 17995  2428  00F3               	movwf	___wmul@multiplier+1
 17996  2429  3006               	movlw	6
 17997  242A  00F4               	movwf	___wmul@multiplicand
 17998  242B  3000               	movlw	0
 17999  242C  00F5               	movwf	___wmul@multiplicand+1
 18000  242D  319C  2401  31A3   	fcall	___wmul
 18001  2430  0872               	movf	?___wmul,w
 18002  2431  0020               	movlb	0	; select bank0
 18003  2432  072F               	addwf	LTC6804_wrcfg@config,w
 18004  2433  00B3               	movwf	??_LTC6804_wrcfg+2
 18005  2434  0873               	movf	?___wmul+1,w
 18006  2435  3D30               	addwfc	LTC6804_wrcfg@config+1,w
 18007  2436  00B4               	movwf	??_LTC6804_wrcfg+3
 18008  2437  0831               	movf	??_LTC6804_wrcfg,w
 18009  2438  0733               	addwf	??_LTC6804_wrcfg+2,w
 18010  2439  0086               	movwf	6
 18011  243A  0832               	movf	??_LTC6804_wrcfg+1,w
 18012  243B  3D34               	addwfc	??_LTC6804_wrcfg+3,w
 18013  243C  0087               	movwf	7
 18014  243D  0801               	movf	1,w
 18015  243E  00B5               	movwf	??_LTC6804_wrcfg+4
 18016  243F  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18017  2440  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18018  2441  0086               	movwf	6
 18019  2442  0187               	clrf	7
 18020  2443  0835               	movf	??_LTC6804_wrcfg+4,w
 18021  2444  0081               	movwf	1
 18022                           
 18023                           ;ltc6804.c: 961: cmd_index = cmd_index + 1;
 18024  2445  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18025  2446  3E01               	addlw	1
 18026  2447  00B1               	movwf	??_LTC6804_wrcfg
 18027  2448  0831               	movf	??_LTC6804_wrcfg,w
 18028  2449  00C8               	movwf	LTC6804_wrcfg@cmd_index
 18029  244A  3001               	movlw	1
 18030  244B  00B1               	movwf	??_LTC6804_wrcfg
 18031  244C  0831               	movf	??_LTC6804_wrcfg,w
 18032  244D  07C6               	addwf	LTC6804_wrcfg@current_byte,f
 18033  244E  3062               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18034  244F  0084               	movwf	4
 18035  2450  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18036  2451  0085               	movwf	5
 18037  2452  0800               	movf	0,w	;code access
 18038  2453  0246               	subwf	LTC6804_wrcfg@current_byte,w
 18039  2454  1C03               	skipc
 18040  2455  2C1F               	goto	l7716
 18041  2456                     l7724:	
 18042                           
 18043                           ;ltc6804.c: 962: }
 18044                           ;ltc6804.c: 964: cfg_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
 18045  2456  0847               	movf	LTC6804_wrcfg@current_ic,w
 18046  2457  3EFF               	addlw	255
 18047  2458  00F2               	movwf	___wmul@multiplier
 18048  2459  30FF               	movlw	255
 18049  245A  1803               	skipnc
 18050  245B  3000               	movlw	0
 18051  245C  00F3               	movwf	___wmul@multiplier+1
 18052  245D  3006               	movlw	6
 18053  245E  00F4               	movwf	___wmul@multiplicand
 18054  245F  3000               	movlw	0
 18055  2460  00F5               	movwf	___wmul@multiplicand+1
 18056  2461  319C  2401  31A3   	fcall	___wmul
 18057  2464  0872               	movf	?___wmul,w
 18058  2465  0020               	movlb	0	; select bank0
 18059  2466  072F               	addwf	LTC6804_wrcfg@config,w
 18060  2467  00F8               	movwf	pec15_calc@data
 18061  2468  0873               	movf	?___wmul+1,w
 18062  2469  3D30               	addwfc	LTC6804_wrcfg@config+1,w
 18063  246A  00F9               	movwf	pec15_calc@data+1
 18064  246B  3062               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18065  246C  0084               	movwf	4
 18066  246D  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 18067  246E  0085               	movwf	5
 18068  246F  0800               	movf	0,w	;code access
 18069  2470  31AE  2666  31A3   	fcall	_pec15_calc
 18070  2473  0879               	movf	?_pec15_calc+1,w
 18071  2474  0020               	movlb	0	; select bank0
 18072  2475  00C5               	movwf	LTC6804_wrcfg@cfg_pec+1
 18073  2476  0878               	movf	?_pec15_calc,w
 18074  2477  00C4               	movwf	LTC6804_wrcfg@cfg_pec
 18075                           
 18076                           ;ltc6804.c: 965: cmd[cmd_index] = (char)(cfg_pec >> 8);
 18077  2478  0845               	movf	LTC6804_wrcfg@cfg_pec+1,w
 18078  2479  00B1               	movwf	??_LTC6804_wrcfg
 18079  247A  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18080  247B  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18081  247C  0086               	movwf	6
 18082  247D  0187               	clrf	7
 18083  247E  0831               	movf	??_LTC6804_wrcfg,w
 18084  247F  0081               	movwf	1
 18085                           
 18086                           ;ltc6804.c: 966: cmd[cmd_index + 1] = (char)cfg_pec;
 18087  2480  0844               	movf	LTC6804_wrcfg@cfg_pec,w
 18088  2481  00B1               	movwf	??_LTC6804_wrcfg
 18089  2482  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18090  2483  3E01               	addlw	1
 18091  2484  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18092  2485  0086               	movwf	6
 18093  2486  0187               	clrf	7
 18094  2487  0831               	movf	??_LTC6804_wrcfg,w
 18095  2488  0081               	movwf	1
 18096                           
 18097                           ;ltc6804.c: 967: cmd_index = cmd_index + 2;
 18098  2489  0848               	movf	LTC6804_wrcfg@cmd_index,w
 18099  248A  3E02               	addlw	2
 18100  248B  00B1               	movwf	??_LTC6804_wrcfg
 18101  248C  0831               	movf	??_LTC6804_wrcfg,w
 18102  248D  00C8               	movwf	LTC6804_wrcfg@cmd_index
 18103  248E  3001               	movlw	1
 18104  248F  02C7               	subwf	LTC6804_wrcfg@current_ic,f
 18105  2490  0847               	movf	LTC6804_wrcfg@current_ic,w
 18106  2491  1D03               	btfss	3,2
 18107  2492  2C16               	goto	l7710
 18108  2493                     l7736:	
 18109                           
 18110                           ;ltc6804.c: 968: }
 18111                           ;ltc6804.c: 971: wakeup_idle ();
 18112  2493  31AB  2328  31A3   	fcall	_wakeup_idle
 18113                           
 18114                           ;ltc6804.c: 973: LATDbits.LATD3 = 0;
 18115  2496  0022               	movlb	2	; select bank2
 18116  2497  118F               	bcf	15,3	;volatile
 18117                           
 18118                           ;ltc6804.c: 974: spi_write_array(CMD_LEN, cmd);
 18119  2498  3036               	movlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 18120  2499  0020               	movlb	0	; select bank0
 18121  249A  00B1               	movwf	??_LTC6804_wrcfg
 18122  249B  0831               	movf	??_LTC6804_wrcfg,w
 18123  249C  00F5               	movwf	spi_write_array@data
 18124  249D  0842               	movf	LTC6804_wrcfg@CMD_LEN,w
 18125  249E  31AB  23CF         	fcall	_spi_write_array
 18126                           
 18127                           ;ltc6804.c: 975: LATDbits.LATD3 = 1;
 18128  24A0  0022               	movlb	2	; select bank2
 18129  24A1  158F               	bsf	15,3	;volatile
 18130  24A2  0008               	return
 18131  24A3                     __end_of_LTC6804_wrcfg:	
 18132                           
 18133                           	psect	text49
 18134  2B28                     __ptext49:	
 18135 ;; *************** function _wakeup_idle *****************
 18136 ;; Defined at:
 18137 ;;		line 1084 in file "ltc6804.c"
 18138 ;; Parameters:    Size  Location     Type
 18139 ;;		None
 18140 ;; Auto vars:     Size  Location     Type
 18141 ;;		None
 18142 ;; Return value:  Size  Location     Type
 18143 ;;                  1    wreg      void 
 18144 ;; Registers used:
 18145 ;;		wreg
 18146 ;; Tracked objects:
 18147 ;;		On entry : 0/0
 18148 ;;		On exit  : 0/0
 18149 ;;		Unchanged: 0/0
 18150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18155 ;;Total ram usage:        0 bytes
 18156 ;; Hardware stack levels used:    1
 18157 ;; Hardware stack levels required when called:    2
 18158 ;; This function calls:
 18159 ;;		Nothing
 18160 ;; This function is called by:
 18161 ;;		_LTC6804_adcv
 18162 ;;		_LTC6804_rdcv_reg
 18163 ;;		_LTC6804_wrcfg
 18164 ;;		_LTC6804_adax
 18165 ;;		_LTC6804_rdaux_reg
 18166 ;;		_LTC6804_clrcell
 18167 ;;		_LTC6804_clraux
 18168 ;;		_LTC6804_rdcfg
 18169 ;; This function uses a non-reentrant model
 18170 ;;
 18171                           
 18172                           
 18173                           ;psect for function _wakeup_idle
 18174  2B28                     _wakeup_idle:	
 18175                           
 18176                           ;ltc6804.c: 1086: LATDbits.LATD3 = 0;
 18177                           
 18178                           ;incstack = 0
 18179                           ; Regs used in _wakeup_idle: [wreg]
 18180  2B28  0022               	movlb	2	; select bank2
 18181  2B29  118F               	bcf	15,3	;volatile
 18182                           
 18183                           ;ltc6804.c: 1087: _delay((unsigned long)((2)*(32000000/4000000.0)));
 18184  2B2A  3005               	movlw	5
 18185  2B2B                     u12247:	
 18186  2B2B  0B89               	decfsz	9,f
 18187  2B2C  2B2B               	goto	u12247
 18188  2B2D  0000               	nop
 18189                           
 18190                           ;ltc6804.c: 1088: LATDbits.LATD3 = 1;
 18191  2B2E  0022               	movlb	2	; select bank2
 18192  2B2F  158F               	bsf	15,3	;volatile
 18193  2B30  0008               	return
 18194  2B31                     __end_of_wakeup_idle:	
 18195                           
 18196                           	psect	text50
 18197  2BCF                     __ptext50:	
 18198 ;; *************** function _spi_write_array *****************
 18199 ;; Defined at:
 18200 ;;		line 1135 in file "ltc6804.c"
 18201 ;; Parameters:    Size  Location     Type
 18202 ;;  len             1    wreg     unsigned char 
 18203 ;;  data            1    5[COMMON] PTR unsigned char 
 18204 ;;		 -> LTC6804_wrcfg@cmd(12), LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), 
 18205 ;; Auto vars:     Size  Location     Type
 18206 ;;  len             1    7[COMMON] unsigned char 
 18207 ;;  i               1    8[COMMON] unsigned char 
 18208 ;; Return value:  Size  Location     Type
 18209 ;;                  1    wreg      void 
 18210 ;; Registers used:
 18211 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18212 ;; Tracked objects:
 18213 ;;		On entry : 0/0
 18214 ;;		On exit  : 0/0
 18215 ;;		Unchanged: 0/0
 18216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18217 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18218 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18219 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18220 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18221 ;;Total ram usage:        4 bytes
 18222 ;; Hardware stack levels used:    1
 18223 ;; Hardware stack levels required when called:    3
 18224 ;; This function calls:
 18225 ;;		_spi_write
 18226 ;; This function is called by:
 18227 ;;		_LTC6804_adcv
 18228 ;;		_LTC6804_wrcfg
 18229 ;;		_LTC6804_adax
 18230 ;; This function uses a non-reentrant model
 18231 ;;
 18232                           
 18233                           
 18234                           ;psect for function _spi_write_array
 18235  2BCF                     _spi_write_array:	
 18236                           
 18237                           ;incstack = 0
 18238                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18239                           ;spi_write_array@len stored from wreg
 18240  2BCF  00F7               	movwf	spi_write_array@len
 18241                           
 18242                           ;ltc6804.c: 1139: for(char i = 0; i < len; i++)
 18243  2BD0  01F8               	clrf	spi_write_array@i
 18244  2BD1                     l6970:	
 18245  2BD1  0877               	movf	spi_write_array@len,w
 18246  2BD2  0278               	subwf	spi_write_array@i,w
 18247  2BD3  1803               	btfsc	3,0
 18248  2BD4  0008               	return
 18249                           
 18250                           ;ltc6804.c: 1140: {
 18251                           ;ltc6804.c: 1141: spi_write((char)data[i]);
 18252  2BD5  0878               	movf	spi_write_array@i,w
 18253  2BD6  0775               	addwf	spi_write_array@data,w
 18254  2BD7  00F6               	movwf	??_spi_write_array
 18255  2BD8  0876               	movf	??_spi_write_array,w
 18256  2BD9  0086               	movwf	6
 18257  2BDA  0187               	clrf	7
 18258  2BDB  0801               	movf	1,w
 18259  2BDC  31AB  233A  31AB   	fcall	_spi_write
 18260  2BDF  3001               	movlw	1
 18261  2BE0  00F6               	movwf	??_spi_write_array
 18262  2BE1  0876               	movf	??_spi_write_array,w
 18263  2BE2  07F8               	addwf	spi_write_array@i,f
 18264  2BE3  2BD1               	goto	l6970
 18265  2BE4                     __end_of_spi_write_array:	
 18266                           
 18267                           	psect	text51
 18268  2B3A                     __ptext51:	
 18269 ;; *************** function _spi_write *****************
 18270 ;; Defined at:
 18271 ;;		line 36 in file "spi.c"
 18272 ;; Parameters:    Size  Location     Type
 18273 ;;  data            1    wreg     unsigned char 
 18274 ;; Auto vars:     Size  Location     Type
 18275 ;;  data            1    4[COMMON] unsigned char 
 18276 ;;  readData        1    3[COMMON] unsigned char 
 18277 ;; Return value:  Size  Location     Type
 18278 ;;                  1    wreg      void 
 18279 ;; Registers used:
 18280 ;;		wreg
 18281 ;; Tracked objects:
 18282 ;;		On entry : 0/0
 18283 ;;		On exit  : 0/0
 18284 ;;		Unchanged: 0/0
 18285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18288 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18289 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18290 ;;Total ram usage:        3 bytes
 18291 ;; Hardware stack levels used:    1
 18292 ;; Hardware stack levels required when called:    2
 18293 ;; This function calls:
 18294 ;;		Nothing
 18295 ;; This function is called by:
 18296 ;;		_spi_write_array
 18297 ;;		_spi_write_read
 18298 ;; This function uses a non-reentrant model
 18299 ;;
 18300                           
 18301                           
 18302                           ;psect for function _spi_write
 18303  2B3A                     _spi_write:	
 18304                           
 18305                           ;incstack = 0
 18306                           ; Regs used in _spi_write: [wreg]
 18307                           ;spi_write@data stored from wreg
 18308  2B3A  00F4               	movwf	spi_write@data
 18309                           
 18310                           ;spi.c: 37: SSP1BUF = data;
 18311  2B3B  0874               	movf	spi_write@data,w
 18312  2B3C  0024               	movlb	4	; select bank4
 18313  2B3D  0091               	movwf	17	;volatile
 18314  2B3E                     l790:	
 18315                           ;spi.c: 38: while(SSP1STATbits.BF == 0);
 18316                           
 18317  2B3E  1C14               	btfss	20,0	;volatile
 18318  2B3F  2B3E               	goto	l790
 18319                           
 18320                           ;spi.c: 39: char readData = SSP1BUF;
 18321  2B40  0811               	movf	17,w	;volatile
 18322  2B41  00F2               	movwf	??_spi_write
 18323  2B42  0872               	movf	??_spi_write,w
 18324  2B43  00F3               	movwf	spi_write@readData
 18325  2B44  0008               	return
 18326  2B45                     __end_of_spi_write:	
 18327                           
 18328                           	psect	text52
 18329  2E66                     __ptext52:	
 18330 ;; *************** function _pec15_calc *****************
 18331 ;; Defined at:
 18332 ;;		line 1112 in file "ltc6804.c"
 18333 ;; Parameters:    Size  Location     Type
 18334 ;;  len             1    wreg     unsigned char 
 18335 ;;  data            2    8[COMMON] PTR unsigned char 
 18336 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), LTC6804_rdcv_reg@cmd(4), 
 18337 ;;		 -> LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), RAM(4096), 
 18338 ;;		 -> configReg(6), measureVoltages@tempConfig(6), 
 18339 ;; Auto vars:     Size  Location     Type
 18340 ;;  len             1    9[BANK0 ] unsigned char 
 18341 ;;  i               1   12[BANK0 ] unsigned char 
 18342 ;;  remainder       2   13[BANK0 ] int 
 18343 ;;  addr            2   10[BANK0 ] int 
 18344 ;; Return value:  Size  Location     Type
 18345 ;;                  2    8[COMMON] int 
 18346 ;; Registers used:
 18347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 18348 ;; Tracked objects:
 18349 ;;		On entry : 0/0
 18350 ;;		On exit  : 0/0
 18351 ;;		Unchanged: 0/0
 18352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18354 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18355 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18356 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18357 ;;Total ram usage:       17 bytes
 18358 ;; Hardware stack levels used:    1
 18359 ;; Hardware stack levels required when called:    2
 18360 ;; This function calls:
 18361 ;;		Nothing
 18362 ;; This function is called by:
 18363 ;;		_LTC6804_adcv
 18364 ;;		_LTC6804_rdcv
 18365 ;;		_LTC6804_rdcv_reg
 18366 ;;		_LTC6804_wrcfg
 18367 ;;		_LTC6804_adax
 18368 ;;		_LTC6804_rdaux
 18369 ;;		_LTC6804_rdaux_reg
 18370 ;;		_LTC6804_clrcell
 18371 ;;		_LTC6804_clraux
 18372 ;;		_LTC6804_rdcfg
 18373 ;; This function uses a non-reentrant model
 18374 ;;
 18375                           
 18376                           
 18377                           ;psect for function _pec15_calc
 18378  2E66                     _pec15_calc:	
 18379                           
 18380                           ;incstack = 0
 18381                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 18382                           ;pec15_calc@len stored from wreg
 18383  2E66  0020               	movlb	0	; select bank0
 18384  2E67  00A9               	movwf	pec15_calc@len
 18385                           
 18386                           ;ltc6804.c: 1116: int remainder,addr;
 18387                           ;ltc6804.c: 1118: remainder = 16;
 18388  2E68  3010               	movlw	16
 18389  2E69  00AD               	movwf	pec15_calc@remainder
 18390  2E6A  3000               	movlw	0
 18391  2E6B  00AE               	movwf	pec15_calc@remainder+1
 18392                           
 18393                           ;ltc6804.c: 1119: for(char i = 0; i<len;i++)
 18394  2E6C  01AC               	clrf	pec15_calc@i
 18395  2E6D                     l6952:	
 18396  2E6D  0829               	movf	pec15_calc@len,w
 18397  2E6E  022C               	subwf	pec15_calc@i,w
 18398  2E6F  1803               	btfsc	3,0
 18399  2E70  2EB0               	goto	l6954
 18400                           
 18401                           ;ltc6804.c: 1120: {
 18402                           ;ltc6804.c: 1121: addr = ((remainder>>7)^data[i])&0xff;
 18403  2E71  082C               	movf	pec15_calc@i,w
 18404  2E72  00A0               	movwf	??_pec15_calc
 18405  2E73  01A1               	clrf	??_pec15_calc+1
 18406  2E74  0820               	movf	??_pec15_calc,w
 18407  2E75  0778               	addwf	pec15_calc@data,w
 18408  2E76  0086               	movwf	6
 18409  2E77  0821               	movf	??_pec15_calc+1,w
 18410  2E78  3D79               	addwfc	pec15_calc@data+1,w
 18411  2E79  0087               	movwf	7
 18412  2E7A  0801               	movf	1,w
 18413  2E7B  00A2               	movwf	??_pec15_calc+2
 18414  2E7C  01A3               	clrf	??_pec15_calc+3
 18415  2E7D  082E               	movf	pec15_calc@remainder+1,w
 18416  2E7E  00A5               	movwf	??_pec15_calc+5
 18417  2E7F  082D               	movf	pec15_calc@remainder,w
 18418  2E80  00A4               	movwf	??_pec15_calc+4
 18419  2E81  3007               	movlw	7
 18420  2E82  00A6               	movwf	??_pec15_calc+6
 18421  2E83                     u9265:	
 18422  2E83  0D25               	rlf	??_pec15_calc+5,w
 18423  2E84  0CA5               	rrf	??_pec15_calc+5,f
 18424  2E85  0CA4               	rrf	??_pec15_calc+4,f
 18425  2E86  0BA6               	decfsz	??_pec15_calc+6,f
 18426  2E87  2E83               	goto	u9265
 18427  2E88  0822               	movf	??_pec15_calc+2,w
 18428  2E89  0624               	xorwf	??_pec15_calc+4,w
 18429  2E8A  00A7               	movwf	??_pec15_calc+7
 18430  2E8B  0823               	movf	??_pec15_calc+3,w
 18431  2E8C  0625               	xorwf	??_pec15_calc+5,w
 18432  2E8D  00A8               	movwf	??_pec15_calc+8
 18433  2E8E  30FF               	movlw	255
 18434  2E8F  0527               	andwf	??_pec15_calc+7,w
 18435  2E90  00AA               	movwf	pec15_calc@addr
 18436  2E91  3000               	movlw	0
 18437  2E92  0528               	andwf	??_pec15_calc+8,w
 18438  2E93  00AB               	movwf	pec15_calc@addr+1
 18439                           
 18440                           ;ltc6804.c: 1122: remainder = (remainder<<8)^crc15Table[addr];
 18441  2E94  082B               	movf	pec15_calc@addr+1,w
 18442  2E95  0085               	movwf	5
 18443  2E96  082A               	movf	pec15_calc@addr,w
 18444  2E97  0084               	movwf	4
 18445  2E98  3584               	lslf	4,f
 18446  2E99  0D85               	rlf	5,f
 18447  2E9A  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 18448  2E9B  0784               	addwf	4,f
 18449  2E9C  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 18450  2E9D  3D85               	addwfc	5,f
 18451  2E9E  3F00               	moviw [0]fsr0
 18452  2E9F  00A0               	movwf	??_pec15_calc
 18453  2EA0  3F01               	moviw [1]fsr0
 18454  2EA1  00A1               	movwf	??_pec15_calc+1
 18455  2EA2  082D               	movf	pec15_calc@remainder,w
 18456  2EA3  00A3               	movwf	??_pec15_calc+3
 18457  2EA4  01A2               	clrf	??_pec15_calc+2
 18458  2EA5  0820               	movf	??_pec15_calc,w
 18459  2EA6  0622               	xorwf	??_pec15_calc+2,w
 18460  2EA7  00AD               	movwf	pec15_calc@remainder
 18461  2EA8  0821               	movf	??_pec15_calc+1,w
 18462  2EA9  0623               	xorwf	??_pec15_calc+3,w
 18463  2EAA  00AE               	movwf	pec15_calc@remainder+1
 18464  2EAB  3001               	movlw	1
 18465  2EAC  00A0               	movwf	??_pec15_calc
 18466  2EAD  0820               	movf	??_pec15_calc,w
 18467  2EAE  07AC               	addwf	pec15_calc@i,f
 18468  2EAF  2E6D               	goto	l6952
 18469  2EB0                     l6954:	
 18470                           
 18471                           ;ltc6804.c: 1123: }
 18472                           ;ltc6804.c: 1124: return(remainder*2);
 18473  2EB0  352D               	lslf	pec15_calc@remainder,w
 18474  2EB1  00F8               	movwf	?_pec15_calc
 18475  2EB2  0D2E               	rlf	pec15_calc@remainder+1,w
 18476  2EB3  00F9               	movwf	?_pec15_calc+1
 18477  2EB4  0008               	return
 18478  2EB5                     __end_of_pec15_calc:	
 18479                           
 18480                           	psect	text53
 18481  1C01                     __ptext53:	
 18482 ;; *************** function ___wmul *****************
 18483 ;; Defined at:
 18484 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 18485 ;; Parameters:    Size  Location     Type
 18486 ;;  multiplier      2    2[COMMON] unsigned int 
 18487 ;;  multiplicand    2    4[COMMON] unsigned int 
 18488 ;; Auto vars:     Size  Location     Type
 18489 ;;  product         2    6[COMMON] unsigned int 
 18490 ;; Return value:  Size  Location     Type
 18491 ;;                  2    2[COMMON] unsigned int 
 18492 ;; Registers used:
 18493 ;;		wreg, status,2, status,0
 18494 ;; Tracked objects:
 18495 ;;		On entry : 0/0
 18496 ;;		On exit  : 0/0
 18497 ;;		Unchanged: 0/0
 18498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18499 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18500 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18502 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18503 ;;Total ram usage:        6 bytes
 18504 ;; Hardware stack levels used:    1
 18505 ;; Hardware stack levels required when called:    2
 18506 ;; This function calls:
 18507 ;;		Nothing
 18508 ;; This function is called by:
 18509 ;;		_LTC6804_rdcv
 18510 ;;		_LTC6804_wrcfg
 18511 ;;		_sprintf
 18512 ;;		_LTC6804_rdaux
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           
 18517                           ;psect for function ___wmul
 18518  1C01                     ___wmul:	
 18519                           
 18520                           ;incstack = 0
 18521                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18522  1C01  01F6               	clrf	___wmul@product
 18523  1C02  01F7               	clrf	___wmul@product+1
 18524  1C03                     l7168:	
 18525  1C03  1C72               	btfss	___wmul@multiplier,0
 18526  1C04  2C09               	goto	l1023
 18527  1C05  0874               	movf	___wmul@multiplicand,w
 18528  1C06  07F6               	addwf	___wmul@product,f
 18529  1C07  0875               	movf	___wmul@multiplicand+1,w
 18530  1C08  3DF7               	addwfc	___wmul@product+1,f
 18531  1C09                     l1023:	
 18532  1C09  3001               	movlw	1
 18533  1C0A                     u9675:	
 18534  1C0A  35F4               	lslf	___wmul@multiplicand,f
 18535  1C0B  0DF5               	rlf	___wmul@multiplicand+1,f
 18536  1C0C  0B89               	decfsz	9,f
 18537  1C0D  2C0A               	goto	u9675
 18538  1C0E  3001               	movlw	1
 18539  1C0F                     u9685:	
 18540  1C0F  36F3               	lsrf	___wmul@multiplier+1,f
 18541  1C10  0CF2               	rrf	___wmul@multiplier,f
 18542  1C11  0B89               	decfsz	9,f
 18543  1C12  2C0F               	goto	u9685
 18544  1C13  0872               	movf	___wmul@multiplier,w
 18545  1C14  0473               	iorwf	___wmul@multiplier+1,w
 18546  1C15  1D03               	btfss	3,2
 18547  1C16  2C03               	goto	l7168
 18548  1C17  0877               	movf	___wmul@product+1,w
 18549  1C18  00F3               	movwf	?___wmul+1
 18550  1C19  0876               	movf	___wmul@product,w
 18551  1C1A  00F2               	movwf	?___wmul
 18552  1C1B  0008               	return
 18553  1C1C                     __end_of___wmul:	
 18554                           
 18555                           	psect	text54
 18556  21C5                     __ptext54:	
 18557 ;; *************** function _avgBuff *****************
 18558 ;; Defined at:
 18559 ;;		line 68 in file "adc.c"
 18560 ;; Parameters:    Size  Location     Type
 18561 ;;  buff            1    wreg     PTR float 
 18562 ;;		 -> currentBuff(80), 
 18563 ;;  size            2   53[BANK1 ] int 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;  buff            1   59[BANK1 ] PTR float 
 18566 ;;		 -> currentBuff(80), 
 18567 ;;  total           4   60[BANK1 ] float 
 18568 ;;  inc             2   64[BANK1 ] int 
 18569 ;; Return value:  Size  Location     Type
 18570 ;;                  4   53[BANK1 ] float 
 18571 ;; Registers used:
 18572 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18573 ;; Tracked objects:
 18574 ;;		On entry : 0/0
 18575 ;;		On exit  : 0/0
 18576 ;;		Unchanged: 0/0
 18577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18578 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18579 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18580 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18581 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18582 ;;Total ram usage:       13 bytes
 18583 ;; Hardware stack levels used:    1
 18584 ;; Hardware stack levels required when called:    3
 18585 ;; This function calls:
 18586 ;;		___fladd
 18587 ;;		___fldiv
 18588 ;;		___xxtofl
 18589 ;; This function is called by:
 18590 ;;		_main
 18591 ;; This function uses a non-reentrant model
 18592 ;;
 18593                           
 18594                           
 18595                           ;psect for function _avgBuff
 18596  21C5                     _avgBuff:	
 18597                           
 18598                           ;incstack = 0
 18599                           ; Regs used in _avgBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18600                           ;avgBuff@buff stored from wreg
 18601  21C5  0021               	movlb	1	; select bank1
 18602  21C6  00DB               	movwf	avgBuff@buff^(0+128)
 18603                           
 18604                           ;adc.c: 69: int inc = 0;
 18605  21C7  01E0               	clrf	avgBuff@inc^(0+128)
 18606  21C8  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 18607                           
 18608                           ;adc.c: 70: float total = 0;
 18609  21C9  3000               	movlw	0
 18610  21CA  00DF               	movwf	(avgBuff@total+3)^(0+128)
 18611  21CB  3000               	movlw	0
 18612  21CC  00DE               	movwf	(avgBuff@total+2)^(0+128)
 18613  21CD  3000               	movlw	0
 18614  21CE  00DD               	movwf	(avgBuff@total+1)^(0+128)
 18615  21CF  3000               	movlw	0
 18616  21D0  00DC               	movwf	avgBuff@total^(0+128)
 18617                           
 18618                           ;adc.c: 71: for(inc = 0; inc < size; inc++){
 18619  21D1  01E0               	clrf	avgBuff@inc^(0+128)
 18620  21D2  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 18621  21D3                     l8358:	
 18622  21D3  0861               	movf	(avgBuff@inc+1)^(0+128),w
 18623  21D4  3A80               	xorlw	128
 18624  21D5  00D9               	movwf	??_avgBuff^(0+128)
 18625  21D6  0856               	movf	(avgBuff@size+1)^(0+128),w
 18626  21D7  3A80               	xorlw	128
 18627  21D8  0259               	subwf	??_avgBuff^(0+128),w
 18628  21D9  1D03               	skipz
 18629  21DA  29DD               	goto	u11775
 18630  21DB  0855               	movf	avgBuff@size^(0+128),w
 18631  21DC  0260               	subwf	avgBuff@inc^(0+128),w
 18632  21DD                     u11775:	
 18633  21DD  1803               	btfsc	3,0
 18634  21DE  2A0F               	goto	l8360
 18635                           
 18636                           ;adc.c: 72: total += buff[inc];
 18637  21DF  0021               	movlb	1	; select bank1
 18638  21E0  0860               	movf	avgBuff@inc^(0+128),w
 18639  21E1  00D9               	movwf	??_avgBuff^(0+128)
 18640  21E2  3001               	movlw	1
 18641  21E3                     u11765:	
 18642  21E3  35D9               	lslf	??_avgBuff^(0+128),f
 18643  21E4  3EFF               	addlw	-1
 18644  21E5  1D03               	skipz
 18645  21E6  29E3               	goto	u11765
 18646  21E7  3559               	lslf	??_avgBuff^(0+128),w
 18647  21E8  075B               	addwf	avgBuff@buff^(0+128),w
 18648  21E9  00DA               	movwf	(??_avgBuff+1)^(0+128)
 18649  21EA  085A               	movf	(??_avgBuff+1)^(0+128),w
 18650  21EB  0086               	movwf	6
 18651  21EC  3003               	movlw	3	; select bank6/7
 18652  21ED  0087               	movwf	7
 18653  21EE  3F40               	moviw [0]fsr1
 18654  21EF  00BD               	movwf	___fladd@b^(0+128)
 18655  21F0  3F41               	moviw [1]fsr1
 18656  21F1  00BE               	movwf	(___fladd@b+1)^(0+128)
 18657  21F2  3F42               	moviw [2]fsr1
 18658  21F3  00BF               	movwf	(___fladd@b+2)^(0+128)
 18659  21F4  3F43               	moviw [3]fsr1
 18660  21F5  00C0               	movwf	(___fladd@b+3)^(0+128)
 18661  21F6  085F               	movf	(avgBuff@total+3)^(0+128),w
 18662  21F7  00C4               	movwf	(___fladd@a+3)^(0+128)
 18663  21F8  085E               	movf	(avgBuff@total+2)^(0+128),w
 18664  21F9  00C3               	movwf	(___fladd@a+2)^(0+128)
 18665  21FA  085D               	movf	(avgBuff@total+1)^(0+128),w
 18666  21FB  00C2               	movwf	(___fladd@a+1)^(0+128)
 18667  21FC  085C               	movf	avgBuff@total^(0+128),w
 18668  21FD  00C1               	movwf	___fladd@a^(0+128)
 18669  21FE  3185  25FC  31A1   	fcall	___fladd
 18670  2201  0021               	movlb	1	; select bank1
 18671  2202  0840               	movf	(?___fladd+3)^(0+128),w
 18672  2203  00DF               	movwf	(avgBuff@total+3)^(0+128)
 18673  2204  083F               	movf	(?___fladd+2)^(0+128),w
 18674  2205  00DE               	movwf	(avgBuff@total+2)^(0+128)
 18675  2206  083E               	movf	(?___fladd+1)^(0+128),w
 18676  2207  00DD               	movwf	(avgBuff@total+1)^(0+128)
 18677  2208  083D               	movf	?___fladd^(0+128),w
 18678  2209  00DC               	movwf	avgBuff@total^(0+128)
 18679  220A  3001               	movlw	1
 18680  220B  07E0               	addwf	avgBuff@inc^(0+128),f
 18681  220C  3000               	movlw	0
 18682  220D  3DE1               	addwfc	(avgBuff@inc+1)^(0+128),f
 18683  220E  29D3               	goto	l8358
 18684  220F                     l8360:	
 18685                           
 18686                           ;adc.c: 73: }
 18687                           ;adc.c: 75: return ((float) total)/((float) size);
 18688  220F  0021               	movlb	1	; select bank1
 18689  2210  0855               	movf	avgBuff@size^(0+128),w
 18690  2211  0020               	movlb	0	; select bank0
 18691  2212  00AE               	movwf	___xxtofl@val
 18692  2213  0021               	movlb	1	; select bank1
 18693  2214  0856               	movf	(avgBuff@size+1)^(0+128),w
 18694  2215  0020               	movlb	0	; select bank0
 18695  2216  00AF               	movwf	___xxtofl@val+1
 18696  2217  0D89               	rlf	9,f
 18697  2218  3B89               	subwfb	9,f
 18698  2219  0989               	comf	9,f
 18699  221A  00B0               	movwf	___xxtofl@val+2
 18700  221B  00B1               	movwf	___xxtofl@val+3
 18701  221C  3001               	movlw	1
 18702  221D  31A3  235C  31A1   	fcall	___xxtofl
 18703  2220  0020               	movlb	0	; select bank0
 18704  2221  0831               	movf	?___xxtofl+3,w
 18705  2222  00BB               	movwf	___fldiv@a+3
 18706  2223  0830               	movf	?___xxtofl+2,w
 18707  2224  00BA               	movwf	___fldiv@a+2
 18708  2225  082F               	movf	?___xxtofl+1,w
 18709  2226  00B9               	movwf	___fldiv@a+1
 18710  2227  082E               	movf	?___xxtofl,w
 18711  2228  00B8               	movwf	___fldiv@a
 18712  2229  0021               	movlb	1	; select bank1
 18713  222A  085F               	movf	(avgBuff@total+3)^(0+128),w
 18714  222B  0020               	movlb	0	; select bank0
 18715  222C  00BF               	movwf	___fldiv@b+3
 18716  222D  0021               	movlb	1	; select bank1
 18717  222E  085E               	movf	(avgBuff@total+2)^(0+128),w
 18718  222F  0020               	movlb	0	; select bank0
 18719  2230  00BE               	movwf	___fldiv@b+2
 18720  2231  0021               	movlb	1	; select bank1
 18721  2232  085D               	movf	(avgBuff@total+1)^(0+128),w
 18722  2233  0020               	movlb	0	; select bank0
 18723  2234  00BD               	movwf	___fldiv@b+1
 18724  2235  0021               	movlb	1	; select bank1
 18725  2236  085C               	movf	avgBuff@total^(0+128),w
 18726  2237  0020               	movlb	0	; select bank0
 18727  2238  00BC               	movwf	___fldiv@b
 18728  2239  3194  2468         	fcall	___fldiv
 18729  223B  0020               	movlb	0	; select bank0
 18730  223C  083B               	movf	?___fldiv+3,w
 18731  223D  0021               	movlb	1	; select bank1
 18732  223E  00D8               	movwf	(?_avgBuff+3)^(0+128)
 18733  223F  0020               	movlb	0	; select bank0
 18734  2240  083A               	movf	?___fldiv+2,w
 18735  2241  0021               	movlb	1	; select bank1
 18736  2242  00D7               	movwf	(?_avgBuff+2)^(0+128)
 18737  2243  0020               	movlb	0	; select bank0
 18738  2244  0839               	movf	?___fldiv+1,w
 18739  2245  0021               	movlb	1	; select bank1
 18740  2246  00D6               	movwf	(?_avgBuff+1)^(0+128)
 18741  2247  0020               	movlb	0	; select bank0
 18742  2248  0838               	movf	?___fldiv,w
 18743  2249  0021               	movlb	1	; select bank1
 18744  224A  00D5               	movwf	?_avgBuff^(0+128)
 18745  224B  0008               	return
 18746  224C                     __end_of_avgBuff:	
 18747                           
 18748                           	psect	text55
 18749  235C                     __ptext55:	
 18750 ;; *************** function ___xxtofl *****************
 18751 ;; Defined at:
 18752 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 18753 ;; Parameters:    Size  Location     Type
 18754 ;;  sign            1    wreg     unsigned char 
 18755 ;;  val             4   14[BANK0 ] long 
 18756 ;; Auto vars:     Size  Location     Type
 18757 ;;  sign            1   18[BANK0 ] unsigned char 
 18758 ;;  arg             4   20[BANK0 ] unsigned long 
 18759 ;;  exp             1   19[BANK0 ] unsigned char 
 18760 ;; Return value:  Size  Location     Type
 18761 ;;                  4   14[BANK0 ] unsigned char 
 18762 ;; Registers used:
 18763 ;;		wreg, status,2, status,0
 18764 ;; Tracked objects:
 18765 ;;		On entry : 0/0
 18766 ;;		On exit  : 0/0
 18767 ;;		Unchanged: 0/0
 18768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18770 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18771 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18772 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18773 ;;Total ram usage:       14 bytes
 18774 ;; Hardware stack levels used:    1
 18775 ;; Hardware stack levels required when called:    2
 18776 ;; This function calls:
 18777 ;;		Nothing
 18778 ;; This function is called by:
 18779 ;;		_calculateTemp
 18780 ;;		_getCurrent
 18781 ;;		_avgBuff
 18782 ;;		_measureVoltages
 18783 ;;		_sprintf
 18784 ;; This function uses a non-reentrant model
 18785 ;;
 18786                           
 18787                           
 18788                           ;psect for function ___xxtofl
 18789  235C                     ___xxtofl:	
 18790                           
 18791                           ;incstack = 0
 18792                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18793                           ;___xxtofl@sign stored from wreg
 18794  235C  0020               	movlb	0	; select bank0
 18795  235D  00B2               	movwf	___xxtofl@sign
 18796  235E  0832               	movf	___xxtofl@sign,w
 18797  235F  1D03               	btfss	3,2
 18798  2360  1FB1               	btfss	___xxtofl@val+3,7
 18799  2361  2B72               	goto	l7320
 18800  2362  092E               	comf	___xxtofl@val,w
 18801  2363  00B4               	movwf	___xxtofl@arg
 18802  2364  092F               	comf	___xxtofl@val+1,w
 18803  2365  00B5               	movwf	___xxtofl@arg+1
 18804  2366  0930               	comf	___xxtofl@val+2,w
 18805  2367  00B6               	movwf	___xxtofl@arg+2
 18806  2368  0931               	comf	___xxtofl@val+3,w
 18807  2369  00B7               	movwf	___xxtofl@arg+3
 18808  236A  0AB4               	incf	___xxtofl@arg,f
 18809  236B  1903               	skipnz
 18810  236C  0AB5               	incf	___xxtofl@arg+1,f
 18811  236D  1903               	skipnz
 18812  236E  0AB6               	incf	___xxtofl@arg+2,f
 18813  236F  1903               	skipnz
 18814  2370  0AB7               	incf	___xxtofl@arg+3,f
 18815  2371  2B7A               	goto	l1417
 18816  2372                     l7320:	
 18817  2372  0831               	movf	___xxtofl@val+3,w
 18818  2373  00B7               	movwf	___xxtofl@arg+3
 18819  2374  0830               	movf	___xxtofl@val+2,w
 18820  2375  00B6               	movwf	___xxtofl@arg+2
 18821  2376  082F               	movf	___xxtofl@val+1,w
 18822  2377  00B5               	movwf	___xxtofl@arg+1
 18823  2378  082E               	movf	___xxtofl@val,w
 18824  2379  00B4               	movwf	___xxtofl@arg
 18825  237A                     l1417:	
 18826  237A  0831               	movf	___xxtofl@val+3,w
 18827  237B  0430               	iorwf	___xxtofl@val+2,w
 18828  237C  042F               	iorwf	___xxtofl@val+1,w
 18829  237D  042E               	iorwf	___xxtofl@val,w
 18830  237E  1D03               	skipz
 18831  237F  2B89               	goto	l7326
 18832  2380  3000               	movlw	0
 18833  2381  00B1               	movwf	?___xxtofl+3
 18834  2382  3000               	movlw	0
 18835  2383  00B0               	movwf	?___xxtofl+2
 18836  2384  3000               	movlw	0
 18837  2385  00AF               	movwf	?___xxtofl+1
 18838  2386  3000               	movlw	0
 18839  2387  00AE               	movwf	?___xxtofl
 18840  2388  0008               	return
 18841  2389                     l7326:	
 18842  2389  3096               	movlw	150
 18843  238A  00F4               	movwf	??___xxtofl
 18844  238B  0874               	movf	??___xxtofl,w
 18845  238C  00B3               	movwf	___xxtofl@exp
 18846  238D                     l7330:	
 18847  238D  30FE               	movlw	254
 18848  238E  0537               	andwf	___xxtofl@arg+3,w
 18849  238F  1903               	btfsc	3,2
 18850  2390  2BB0               	goto	l1423
 18851  2391  3001               	movlw	1
 18852  2392  00F4               	movwf	??___xxtofl
 18853  2393  0874               	movf	??___xxtofl,w
 18854  2394  07B3               	addwf	___xxtofl@exp,f
 18855  2395  3001               	movlw	1
 18856  2396                     u10045:	
 18857  2396  36B7               	lsrf	___xxtofl@arg+3,f
 18858  2397  0CB6               	rrf	___xxtofl@arg+2,f
 18859  2398  0CB5               	rrf	___xxtofl@arg+1,f
 18860  2399  0CB4               	rrf	___xxtofl@arg,f
 18861  239A  0B89               	decfsz	9,f
 18862  239B  2B96               	goto	u10045
 18863  239C  2B8D               	goto	l7330
 18864  239D                     l7332:	
 18865  239D  3001               	movlw	1
 18866  239E  00F4               	movwf	??___xxtofl
 18867  239F  0874               	movf	??___xxtofl,w
 18868  23A0  07B3               	addwf	___xxtofl@exp,f
 18869  23A1  3001               	movlw	1
 18870  23A2  07B4               	addwf	___xxtofl@arg,f
 18871  23A3  3000               	movlw	0
 18872  23A4  3DB5               	addwfc	___xxtofl@arg+1,f
 18873  23A5  3000               	movlw	0
 18874  23A6  3DB6               	addwfc	___xxtofl@arg+2,f
 18875  23A7  3000               	movlw	0
 18876  23A8  3DB7               	addwfc	___xxtofl@arg+3,f
 18877  23A9  3001               	movlw	1
 18878  23AA                     u10065:	
 18879  23AA  36B7               	lsrf	___xxtofl@arg+3,f
 18880  23AB  0CB6               	rrf	___xxtofl@arg+2,f
 18881  23AC  0CB5               	rrf	___xxtofl@arg+1,f
 18882  23AD  0CB4               	rrf	___xxtofl@arg,f
 18883  23AE  0B89               	decfsz	9,f
 18884  23AF  2BAA               	goto	u10065
 18885  23B0                     l1423:	
 18886  23B0  30FF               	movlw	255
 18887  23B1  0537               	andwf	___xxtofl@arg+3,w
 18888  23B2  1903               	btfsc	3,2
 18889  23B3  2BBE               	goto	l7340
 18890  23B4  2B9D               	goto	l7332
 18891  23B5                     l7338:	
 18892  23B5  3001               	movlw	1
 18893  23B6  02B3               	subwf	___xxtofl@exp,f
 18894  23B7  3001               	movlw	1
 18895  23B8                     u10085:	
 18896  23B8  35B4               	lslf	___xxtofl@arg,f
 18897  23B9  0DB5               	rlf	___xxtofl@arg+1,f
 18898  23BA  0DB6               	rlf	___xxtofl@arg+2,f
 18899  23BB  0DB7               	rlf	___xxtofl@arg+3,f
 18900  23BC  0B89               	decfsz	9,f
 18901  23BD  2BB8               	goto	u10085
 18902  23BE                     l7340:	
 18903  23BE  1BB6               	btfsc	___xxtofl@arg+2,7
 18904  23BF  2BC4               	goto	l1430
 18905  23C0  3002               	movlw	2
 18906  23C1  0233               	subwf	___xxtofl@exp,w
 18907  23C2  1803               	skipnc
 18908  23C3  2BB5               	goto	l7338
 18909  23C4                     l1430:	
 18910  23C4  1833               	btfsc	___xxtofl@exp,0
 18911  23C5  2BCE               	goto	l1431
 18912  23C6  30FF               	movlw	255
 18913  23C7  05B4               	andwf	___xxtofl@arg,f
 18914  23C8  30FF               	movlw	255
 18915  23C9  05B5               	andwf	___xxtofl@arg+1,f
 18916  23CA  307F               	movlw	127
 18917  23CB  05B6               	andwf	___xxtofl@arg+2,f
 18918  23CC  30FF               	movlw	255
 18919  23CD  05B7               	andwf	___xxtofl@arg+3,f
 18920  23CE                     l1431:	
 18921  23CE  1003               	clrc
 18922  23CF  0CB3               	rrf	___xxtofl@exp,f
 18923  23D0  0833               	movf	___xxtofl@exp,w
 18924  23D1  00F4               	movwf	??___xxtofl
 18925  23D2  01F5               	clrf	??___xxtofl+1
 18926  23D3  01F6               	clrf	??___xxtofl+2
 18927  23D4  01F7               	clrf	??___xxtofl+3
 18928  23D5  3018               	movlw	24
 18929  23D6                     u10125:	
 18930  23D6  35F4               	lslf	??___xxtofl,f
 18931  23D7  0DF5               	rlf	??___xxtofl+1,f
 18932  23D8  0DF6               	rlf	??___xxtofl+2,f
 18933  23D9  0DF7               	rlf	??___xxtofl+3,f
 18934  23DA  0B89               	decfsz	9,f
 18935  23DB  2BD6               	goto	u10125
 18936  23DC  0874               	movf	??___xxtofl,w
 18937  23DD  04B4               	iorwf	___xxtofl@arg,f
 18938  23DE  0875               	movf	??___xxtofl+1,w
 18939  23DF  04B5               	iorwf	___xxtofl@arg+1,f
 18940  23E0  0876               	movf	??___xxtofl+2,w
 18941  23E1  04B6               	iorwf	___xxtofl@arg+2,f
 18942  23E2  0877               	movf	??___xxtofl+3,w
 18943  23E3  04B7               	iorwf	___xxtofl@arg+3,f
 18944  23E4  0832               	movf	___xxtofl@sign,w
 18945  23E5  1D03               	btfss	3,2
 18946  23E6  1FB1               	btfss	___xxtofl@val+3,7
 18947  23E7  2BE9               	goto	l7354
 18948  23E8  17B7               	bsf	___xxtofl@arg+3,7
 18949  23E9                     l7354:	
 18950  23E9  0837               	movf	___xxtofl@arg+3,w
 18951  23EA  00B1               	movwf	?___xxtofl+3
 18952  23EB  0836               	movf	___xxtofl@arg+2,w
 18953  23EC  00B0               	movwf	?___xxtofl+2
 18954  23ED  0835               	movf	___xxtofl@arg+1,w
 18955  23EE  00AF               	movwf	?___xxtofl+1
 18956  23EF  0834               	movf	___xxtofl@arg,w
 18957  23F0  00AE               	movwf	?___xxtofl
 18958  23F1  0008               	return
 18959  23F2                     __end_of___xxtofl:	
 18960                           
 18961                           	psect	text56
 18962  1468                     __ptext56:	
 18963 ;; *************** function ___fldiv *****************
 18964 ;; Defined at:
 18965 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 18966 ;; Parameters:    Size  Location     Type
 18967 ;;  a               4   24[BANK0 ] unsigned char 
 18968 ;;  b               4   28[BANK0 ] unsigned char 
 18969 ;; Auto vars:     Size  Location     Type
 18970 ;;  grs             4   44[BANK0 ] unsigned long 
 18971 ;;  rem             4   38[BANK0 ] unsigned long 
 18972 ;;  new_exp         2   42[BANK0 ] int 
 18973 ;;  aexp            1   49[BANK0 ] unsigned char 
 18974 ;;  bexp            1   48[BANK0 ] unsigned char 
 18975 ;;  sign            1   37[BANK0 ] unsigned char 
 18976 ;; Return value:  Size  Location     Type
 18977 ;;                  4   24[BANK0 ] unsigned char 
 18978 ;; Registers used:
 18979 ;;		wreg, status,2, status,0
 18980 ;; Tracked objects:
 18981 ;;		On entry : 0/0
 18982 ;;		On exit  : 0/0
 18983 ;;		Unchanged: 0/0
 18984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18985 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18986 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18987 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18988 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18989 ;;Total ram usage:       26 bytes
 18990 ;; Hardware stack levels used:    1
 18991 ;; Hardware stack levels required when called:    2
 18992 ;; This function calls:
 18993 ;;		Nothing
 18994 ;; This function is called by:
 18995 ;;		_calculateTemp
 18996 ;;		_calculateCurrent
 18997 ;;		_avgBuff
 18998 ;;		_measureVoltages
 18999 ;;		_startUp
 19000 ;; This function uses a non-reentrant model
 19001 ;;
 19002                           
 19003                           
 19004                           ;psect for function ___fldiv
 19005  1468                     ___fldiv:	
 19006                           
 19007                           ;incstack = 0
 19008                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19009  1468  0020               	movlb	0	; select bank0
 19010  1469  083F               	movf	___fldiv@b+3,w
 19011  146A  3980               	andlw	128
 19012  146B  00C0               	movwf	??___fldiv
 19013  146C  0840               	movf	??___fldiv,w
 19014  146D  00C5               	movwf	___fldiv@sign
 19015  146E  353F               	lslf	___fldiv@b+3,w
 19016  146F  00C0               	movwf	??___fldiv
 19017  1470  0840               	movf	??___fldiv,w
 19018  1471  00D0               	movwf	___fldiv@bexp
 19019  1472  1BBE               	btfsc	___fldiv@b+2,7
 19020  1473  1450               	bsf	___fldiv@bexp,0
 19021  1474  0850               	movf	___fldiv@bexp,w
 19022  1475  1903               	btfsc	3,2
 19023  1476  2C85               	goto	l7802
 19024  1477  0A50               	incf	___fldiv@bexp,w
 19025  1478  1D03               	btfss	3,2
 19026  1479  2C82               	goto	l7798
 19027  147A  3000               	movlw	0
 19028  147B  00BF               	movwf	___fldiv@b+3
 19029  147C  3000               	movlw	0
 19030  147D  00BE               	movwf	___fldiv@b+2
 19031  147E  3000               	movlw	0
 19032  147F  00BD               	movwf	___fldiv@b+1
 19033  1480  3000               	movlw	0
 19034  1481  00BC               	movwf	___fldiv@b
 19035  1482                     l7798:	
 19036  1482  17BE               	bsf	___fldiv@b+2,7
 19037  1483  01BF               	clrf	___fldiv@b+3
 19038  1484  2C8D               	goto	l7804
 19039  1485                     l7802:	
 19040  1485  3000               	movlw	0
 19041  1486  00BF               	movwf	___fldiv@b+3
 19042  1487  3000               	movlw	0
 19043  1488  00BE               	movwf	___fldiv@b+2
 19044  1489  3000               	movlw	0
 19045  148A  00BD               	movwf	___fldiv@b+1
 19046  148B  3000               	movlw	0
 19047  148C  00BC               	movwf	___fldiv@b
 19048  148D                     l7804:	
 19049  148D  083B               	movf	___fldiv@a+3,w
 19050  148E  3980               	andlw	128
 19051  148F  00C0               	movwf	??___fldiv
 19052  1490  0840               	movf	??___fldiv,w
 19053  1491  06C5               	xorwf	___fldiv@sign,f
 19054  1492  353B               	lslf	___fldiv@a+3,w
 19055  1493  00C0               	movwf	??___fldiv
 19056  1494  0840               	movf	??___fldiv,w
 19057  1495  00D1               	movwf	___fldiv@aexp
 19058  1496  1BBA               	btfsc	___fldiv@a+2,7
 19059  1497  1451               	bsf	___fldiv@aexp,0
 19060  1498  0851               	movf	___fldiv@aexp,w
 19061  1499  1903               	btfsc	3,2
 19062  149A  2CA9               	goto	l7822
 19063  149B  0A51               	incf	___fldiv@aexp,w
 19064  149C  1D03               	btfss	3,2
 19065  149D  2CA6               	goto	l7818
 19066  149E  3000               	movlw	0
 19067  149F  00BB               	movwf	___fldiv@a+3
 19068  14A0  3000               	movlw	0
 19069  14A1  00BA               	movwf	___fldiv@a+2
 19070  14A2  3000               	movlw	0
 19071  14A3  00B9               	movwf	___fldiv@a+1
 19072  14A4  3000               	movlw	0
 19073  14A5  00B8               	movwf	___fldiv@a
 19074  14A6                     l7818:	
 19075  14A6  17BA               	bsf	___fldiv@a+2,7
 19076  14A7  01BB               	clrf	___fldiv@a+3
 19077  14A8  2CB1               	goto	l1358
 19078  14A9                     l7822:	
 19079  14A9  3000               	movlw	0
 19080  14AA  00BB               	movwf	___fldiv@a+3
 19081  14AB  3000               	movlw	0
 19082  14AC  00BA               	movwf	___fldiv@a+2
 19083  14AD  3000               	movlw	0
 19084  14AE  00B9               	movwf	___fldiv@a+1
 19085  14AF  3000               	movlw	0
 19086  14B0  00B8               	movwf	___fldiv@a
 19087  14B1                     l1358:	
 19088  14B1  083B               	movf	___fldiv@a+3,w
 19089  14B2  043A               	iorwf	___fldiv@a+2,w
 19090  14B3  0439               	iorwf	___fldiv@a+1,w
 19091  14B4  0438               	iorwf	___fldiv@a,w
 19092  14B5  1D03               	skipz
 19093  14B6  2CCC               	goto	l7828
 19094  14B7  3000               	movlw	0
 19095  14B8  00BF               	movwf	___fldiv@b+3
 19096  14B9  3000               	movlw	0
 19097  14BA  00BE               	movwf	___fldiv@b+2
 19098  14BB  3000               	movlw	0
 19099  14BC  00BD               	movwf	___fldiv@b+1
 19100  14BD  3000               	movlw	0
 19101  14BE  00BC               	movwf	___fldiv@b
 19102  14BF  3080               	movlw	128
 19103  14C0  04BE               	iorwf	___fldiv@b+2,f
 19104  14C1  307F               	movlw	127
 19105  14C2  04BF               	iorwf	___fldiv@b+3,f
 19106  14C3  083F               	movf	___fldiv@b+3,w
 19107  14C4  00BB               	movwf	?___fldiv+3
 19108  14C5  083E               	movf	___fldiv@b+2,w
 19109  14C6  00BA               	movwf	?___fldiv+2
 19110  14C7  083D               	movf	___fldiv@b+1,w
 19111  14C8  00B9               	movwf	?___fldiv+1
 19112  14C9  083C               	movf	___fldiv@b,w
 19113  14CA  00B8               	movwf	?___fldiv
 19114  14CB  0008               	return
 19115  14CC                     l7828:	
 19116  14CC  0850               	movf	___fldiv@bexp,w
 19117  14CD  1D03               	btfss	3,2
 19118  14CE  2CE0               	goto	l7834
 19119  14CF  3000               	movlw	0
 19120  14D0  00BF               	movwf	___fldiv@b+3
 19121  14D1  3000               	movlw	0
 19122  14D2  00BE               	movwf	___fldiv@b+2
 19123  14D3  3000               	movlw	0
 19124  14D4  00BD               	movwf	___fldiv@b+1
 19125  14D5  3000               	movlw	0
 19126  14D6  00BC               	movwf	___fldiv@b
 19127  14D7  083F               	movf	___fldiv@b+3,w
 19128  14D8  00BB               	movwf	?___fldiv+3
 19129  14D9  083E               	movf	___fldiv@b+2,w
 19130  14DA  00BA               	movwf	?___fldiv+2
 19131  14DB  083D               	movf	___fldiv@b+1,w
 19132  14DC  00B9               	movwf	?___fldiv+1
 19133  14DD  083C               	movf	___fldiv@b,w
 19134  14DE  00B8               	movwf	?___fldiv
 19135  14DF  0008               	return
 19136  14E0                     l7834:	
 19137  14E0  0851               	movf	___fldiv@aexp,w
 19138  14E1  00C0               	movwf	??___fldiv
 19139  14E2  01C1               	clrf	??___fldiv+1
 19140  14E3  09C0               	comf	??___fldiv,f
 19141  14E4  09C1               	comf	??___fldiv+1,f
 19142  14E5  0AC0               	incf	??___fldiv,f
 19143  14E6  1903               	skipnz
 19144  14E7  0AC1               	incf	??___fldiv+1,f
 19145  14E8  0850               	movf	___fldiv@bexp,w
 19146  14E9  0740               	addwf	??___fldiv,w
 19147  14EA  00C2               	movwf	??___fldiv+2
 19148  14EB  0841               	movf	??___fldiv+1,w
 19149  14EC  1803               	skipnc
 19150  14ED  0A41               	incf	??___fldiv+1,w
 19151  14EE  00C3               	movwf	??___fldiv+3
 19152  14EF  0842               	movf	??___fldiv+2,w
 19153  14F0  3E7F               	addlw	127
 19154  14F1  00CA               	movwf	___fldiv@new_exp
 19155  14F2  3000               	movlw	0
 19156  14F3  3D43               	addwfc	??___fldiv+3,w
 19157  14F4  00CB               	movwf	___fldiv@new_exp+1
 19158  14F5  083F               	movf	___fldiv@b+3,w
 19159  14F6  00C9               	movwf	___fldiv@rem+3
 19160  14F7  083E               	movf	___fldiv@b+2,w
 19161  14F8  00C8               	movwf	___fldiv@rem+2
 19162  14F9  083D               	movf	___fldiv@b+1,w
 19163  14FA  00C7               	movwf	___fldiv@rem+1
 19164  14FB  083C               	movf	___fldiv@b,w
 19165  14FC  00C6               	movwf	___fldiv@rem
 19166  14FD  3000               	movlw	0
 19167  14FE  00BF               	movwf	___fldiv@b+3
 19168  14FF  3000               	movlw	0
 19169  1500  00BE               	movwf	___fldiv@b+2
 19170  1501  3000               	movlw	0
 19171  1502  00BD               	movwf	___fldiv@b+1
 19172  1503  3000               	movlw	0
 19173  1504  00BC               	movwf	___fldiv@b
 19174  1505  3000               	movlw	0
 19175  1506  00CF               	movwf	___fldiv@grs+3
 19176  1507  3000               	movlw	0
 19177  1508  00CE               	movwf	___fldiv@grs+2
 19178  1509  3000               	movlw	0
 19179  150A  00CD               	movwf	___fldiv@grs+1
 19180  150B  3000               	movlw	0
 19181  150C  00CC               	movwf	___fldiv@grs
 19182  150D  01D1               	clrf	___fldiv@aexp
 19183  150E                     l7862:	
 19184  150E  301A               	movlw	26
 19185  150F  0251               	subwf	___fldiv@aexp,w
 19186  1510  1803               	btfsc	3,0
 19187  1511  2D4A               	goto	l7864
 19188  1512  0851               	movf	___fldiv@aexp,w
 19189  1513  1903               	btfsc	3,2
 19190  1514  2D2C               	goto	l7854
 19191  1515  3001               	movlw	1
 19192  1516                     u10925:	
 19193  1516  35C6               	lslf	___fldiv@rem,f
 19194  1517  0DC7               	rlf	___fldiv@rem+1,f
 19195  1518  0DC8               	rlf	___fldiv@rem+2,f
 19196  1519  0DC9               	rlf	___fldiv@rem+3,f
 19197  151A  0B89               	decfsz	9,f
 19198  151B  2D16               	goto	u10925
 19199  151C  3001               	movlw	1
 19200  151D                     u10935:	
 19201  151D  35BC               	lslf	___fldiv@b,f
 19202  151E  0DBD               	rlf	___fldiv@b+1,f
 19203  151F  0DBE               	rlf	___fldiv@b+2,f
 19204  1520  0DBF               	rlf	___fldiv@b+3,f
 19205  1521  0B89               	decfsz	9,f
 19206  1522  2D1D               	goto	u10935
 19207  1523  1BCF               	btfsc	___fldiv@grs+3,7
 19208  1524  143C               	bsf	___fldiv@b,0
 19209  1525  3001               	movlw	1
 19210  1526                     u10955:	
 19211  1526  35CC               	lslf	___fldiv@grs,f
 19212  1527  0DCD               	rlf	___fldiv@grs+1,f
 19213  1528  0DCE               	rlf	___fldiv@grs+2,f
 19214  1529  0DCF               	rlf	___fldiv@grs+3,f
 19215  152A  0B89               	decfsz	9,f
 19216  152B  2D26               	goto	u10955
 19217  152C                     l7854:	
 19218  152C  083B               	movf	___fldiv@a+3,w
 19219  152D  0249               	subwf	___fldiv@rem+3,w
 19220  152E  1D03               	skipz
 19221  152F  2D3A               	goto	u10965
 19222  1530  083A               	movf	___fldiv@a+2,w
 19223  1531  0248               	subwf	___fldiv@rem+2,w
 19224  1532  1D03               	skipz
 19225  1533  2D3A               	goto	u10965
 19226  1534  0839               	movf	___fldiv@a+1,w
 19227  1535  0247               	subwf	___fldiv@rem+1,w
 19228  1536  1D03               	skipz
 19229  1537  2D3A               	goto	u10965
 19230  1538  0838               	movf	___fldiv@a,w
 19231  1539  0246               	subwf	___fldiv@rem,w
 19232  153A                     u10965:	
 19233  153A  1C03               	skipc
 19234  153B  2D45               	goto	l7860
 19235  153C  174F               	bsf	___fldiv@grs+3,6
 19236  153D  0838               	movf	___fldiv@a,w
 19237  153E  02C6               	subwf	___fldiv@rem,f
 19238  153F  0839               	movf	___fldiv@a+1,w
 19239  1540  3BC7               	subwfb	___fldiv@rem+1,f
 19240  1541  083A               	movf	___fldiv@a+2,w
 19241  1542  3BC8               	subwfb	___fldiv@rem+2,f
 19242  1543  083B               	movf	___fldiv@a+3,w
 19243  1544  3BC9               	subwfb	___fldiv@rem+3,f
 19244  1545                     l7860:	
 19245  1545  3001               	movlw	1
 19246  1546  00C0               	movwf	??___fldiv
 19247  1547  0840               	movf	??___fldiv,w
 19248  1548  07D1               	addwf	___fldiv@aexp,f
 19249  1549  2D0E               	goto	l7862
 19250  154A                     l7864:	
 19251  154A  0849               	movf	___fldiv@rem+3,w
 19252  154B  0448               	iorwf	___fldiv@rem+2,w
 19253  154C  0447               	iorwf	___fldiv@rem+1,w
 19254  154D  0446               	iorwf	___fldiv@rem,w
 19255  154E  1D03               	btfss	3,2
 19256  154F  144C               	bsf	___fldiv@grs,0
 19257  1550                     l7878:	
 19258  1550  1BBE               	btfsc	___fldiv@b+2,7
 19259  1551  2D67               	goto	l7880
 19260  1552  3001               	movlw	1
 19261  1553                     u10995:	
 19262  1553  35BC               	lslf	___fldiv@b,f
 19263  1554  0DBD               	rlf	___fldiv@b+1,f
 19264  1555  0DBE               	rlf	___fldiv@b+2,f
 19265  1556  0DBF               	rlf	___fldiv@b+3,f
 19266  1557  0B89               	decfsz	9,f
 19267  1558  2D53               	goto	u10995
 19268  1559  1BCF               	btfsc	___fldiv@grs+3,7
 19269  155A  143C               	bsf	___fldiv@b,0
 19270  155B  3001               	movlw	1
 19271  155C                     u11015:	
 19272  155C  35CC               	lslf	___fldiv@grs,f
 19273  155D  0DCD               	rlf	___fldiv@grs+1,f
 19274  155E  0DCE               	rlf	___fldiv@grs+2,f
 19275  155F  0DCF               	rlf	___fldiv@grs+3,f
 19276  1560  0B89               	decfsz	9,f
 19277  1561  2D5C               	goto	u11015
 19278  1562  30FF               	movlw	255
 19279  1563  07CA               	addwf	___fldiv@new_exp,f
 19280  1564  30FF               	movlw	255
 19281  1565  3DCB               	addwfc	___fldiv@new_exp+1,f
 19282  1566  2D50               	goto	l7878
 19283  1567                     l7880:	
 19284  1567  01D1               	clrf	___fldiv@aexp
 19285  1568  1FCF               	btfss	___fldiv@grs+3,7
 19286  1569  2D80               	goto	l7890
 19287  156A  30FF               	movlw	255
 19288  156B  054C               	andwf	___fldiv@grs,w
 19289  156C  00C0               	movwf	??___fldiv
 19290  156D  30FF               	movlw	255
 19291  156E  054D               	andwf	___fldiv@grs+1,w
 19292  156F  00C1               	movwf	??___fldiv+1
 19293  1570  30FF               	movlw	255
 19294  1571  054E               	andwf	___fldiv@grs+2,w
 19295  1572  00C2               	movwf	??___fldiv+2
 19296  1573  307F               	movlw	127
 19297  1574  054F               	andwf	___fldiv@grs+3,w
 19298  1575  00C3               	movwf	??___fldiv+3
 19299  1576  0843               	movf	??___fldiv+3,w
 19300  1577  0442               	iorwf	??___fldiv+2,w
 19301  1578  0441               	iorwf	??___fldiv+1,w
 19302  1579  0440               	iorwf	??___fldiv,w
 19303  157A  1D03               	btfss	3,2
 19304  157B  2D7E               	goto	l7888
 19305  157C  1C3C               	btfss	___fldiv@b,0
 19306  157D  2D80               	goto	l7890
 19307  157E                     l7888:	
 19308  157E  01D1               	clrf	___fldiv@aexp
 19309  157F  0AD1               	incf	___fldiv@aexp,f
 19310  1580                     l7890:	
 19311  1580  0851               	movf	___fldiv@aexp,w
 19312  1581  1903               	btfsc	3,2
 19313  1582  2DA9               	goto	l7900
 19314  1583  3001               	movlw	1
 19315  1584  07BC               	addwf	___fldiv@b,f
 19316  1585  3000               	movlw	0
 19317  1586  3DBD               	addwfc	___fldiv@b+1,f
 19318  1587  3000               	movlw	0
 19319  1588  3DBE               	addwfc	___fldiv@b+2,f
 19320  1589  3000               	movlw	0
 19321  158A  3DBF               	addwfc	___fldiv@b+3,f
 19322  158B  1C3F               	btfss	___fldiv@b+3,0
 19323  158C  2DA9               	goto	l7900
 19324  158D  083C               	movf	___fldiv@b,w
 19325  158E  00C0               	movwf	??___fldiv
 19326  158F  083D               	movf	___fldiv@b+1,w
 19327  1590  00C1               	movwf	??___fldiv+1
 19328  1591  083E               	movf	___fldiv@b+2,w
 19329  1592  00C2               	movwf	??___fldiv+2
 19330  1593  083F               	movf	___fldiv@b+3,w
 19331  1594  00C3               	movwf	??___fldiv+3
 19332  1595  3001               	movlw	1
 19333  1596  00C4               	movwf	??___fldiv+4
 19334  1597                     u11085:	
 19335  1597  37C3               	asrf	??___fldiv+3,f
 19336  1598  0CC2               	rrf	??___fldiv+2,f
 19337  1599  0CC1               	rrf	??___fldiv+1,f
 19338  159A  0CC0               	rrf	??___fldiv,f
 19339  159B  0BC4               	decfsz	??___fldiv+4,f
 19340  159C  2D97               	goto	u11085
 19341  159D  0843               	movf	??___fldiv+3,w
 19342  159E  00BF               	movwf	___fldiv@b+3
 19343  159F  0842               	movf	??___fldiv+2,w
 19344  15A0  00BE               	movwf	___fldiv@b+2
 19345  15A1  0841               	movf	??___fldiv+1,w
 19346  15A2  00BD               	movwf	___fldiv@b+1
 19347  15A3  0840               	movf	??___fldiv,w
 19348  15A4  00BC               	movwf	___fldiv@b
 19349  15A5  3001               	movlw	1
 19350  15A6  07CA               	addwf	___fldiv@new_exp,f
 19351  15A7  3000               	movlw	0
 19352  15A8  3DCB               	addwfc	___fldiv@new_exp+1,f
 19353  15A9                     l7900:	
 19354  15A9  084B               	movf	___fldiv@new_exp+1,w
 19355  15AA  3A80               	xorlw	128
 19356  15AB  00C0               	movwf	??___fldiv
 19357  15AC  3080               	movlw	128
 19358  15AD  0240               	subwf	??___fldiv,w
 19359  15AE  1D03               	skipz
 19360  15AF  2DB2               	goto	u11095
 19361  15B0  30FF               	movlw	255
 19362  15B1  024A               	subwf	___fldiv@new_exp,w
 19363  15B2                     u11095:	
 19364  15B2  1C03               	skipc
 19365  15B3  2DC1               	goto	l1379
 19366  15B4  30FF               	movlw	255
 19367  15B5  0020               	movlb	0	; select bank0
 19368  15B6  00CA               	movwf	___fldiv@new_exp
 19369  15B7  3000               	movlw	0
 19370  15B8  00CB               	movwf	___fldiv@new_exp+1
 19371  15B9  3000               	movlw	0
 19372  15BA  00BF               	movwf	___fldiv@b+3
 19373  15BB  3000               	movlw	0
 19374  15BC  00BE               	movwf	___fldiv@b+2
 19375  15BD  3000               	movlw	0
 19376  15BE  00BD               	movwf	___fldiv@b+1
 19377  15BF  3000               	movlw	0
 19378  15C0  00BC               	movwf	___fldiv@b
 19379  15C1                     l1379:	
 19380  15C1  0020               	movlb	0	; select bank0
 19381  15C2  084B               	movf	___fldiv@new_exp+1,w
 19382  15C3  3A80               	xorlw	128
 19383  15C4  00C0               	movwf	??___fldiv
 19384  15C5  3080               	movlw	128
 19385  15C6  0240               	subwf	??___fldiv,w
 19386  15C7  1D03               	skipz
 19387  15C8  2DCB               	goto	u11105
 19388  15C9  3001               	movlw	1
 19389  15CA  024A               	subwf	___fldiv@new_exp,w
 19390  15CB                     u11105:	
 19391  15CB  1803               	skipnc
 19392  15CC  2DD9               	goto	l1380
 19393  15CD  0020               	movlb	0	; select bank0
 19394  15CE  01CA               	clrf	___fldiv@new_exp
 19395  15CF  01CB               	clrf	___fldiv@new_exp+1
 19396  15D0  3000               	movlw	0
 19397  15D1  00BF               	movwf	___fldiv@b+3
 19398  15D2  3000               	movlw	0
 19399  15D3  00BE               	movwf	___fldiv@b+2
 19400  15D4  3000               	movlw	0
 19401  15D5  00BD               	movwf	___fldiv@b+1
 19402  15D6  3000               	movlw	0
 19403  15D7  00BC               	movwf	___fldiv@b
 19404  15D8  01C5               	clrf	___fldiv@sign
 19405  15D9                     l1380:	
 19406  15D9  0020               	movlb	0	; select bank0
 19407  15DA  084A               	movf	___fldiv@new_exp,w
 19408  15DB  00C0               	movwf	??___fldiv
 19409  15DC  0840               	movf	??___fldiv,w
 19410  15DD  00D0               	movwf	___fldiv@bexp
 19411  15DE  1C50               	btfss	___fldiv@bexp,0
 19412  15DF  2DE2               	goto	l7914
 19413  15E0  17BE               	bsf	___fldiv@b+2,7
 19414  15E1  2DE6               	goto	l1382
 19415  15E2                     l7914:	
 19416  15E2  307F               	movlw	127
 19417  15E3  00C0               	movwf	??___fldiv
 19418  15E4  0840               	movf	??___fldiv,w
 19419  15E5  05BE               	andwf	___fldiv@b+2,f
 19420  15E6                     l1382:	
 19421  15E6  3650               	lsrf	___fldiv@bexp,w
 19422  15E7  00C0               	movwf	??___fldiv
 19423  15E8  0840               	movf	??___fldiv,w
 19424  15E9  00BF               	movwf	___fldiv@b+3
 19425  15EA  0845               	movf	___fldiv@sign,w
 19426  15EB  00C0               	movwf	??___fldiv
 19427  15EC  0840               	movf	??___fldiv,w
 19428  15ED  04BF               	iorwf	___fldiv@b+3,f
 19429  15EE  083F               	movf	___fldiv@b+3,w
 19430  15EF  00BB               	movwf	?___fldiv+3
 19431  15F0  083E               	movf	___fldiv@b+2,w
 19432  15F1  00BA               	movwf	?___fldiv+2
 19433  15F2  083D               	movf	___fldiv@b+1,w
 19434  15F3  00B9               	movwf	?___fldiv+1
 19435  15F4  083C               	movf	___fldiv@b,w
 19436  15F5  00B8               	movwf	?___fldiv
 19437  15F6  0008               	return
 19438  15F7                     __end_of___fldiv:	
 19439                           
 19440                           	psect	text57
 19441  05FC                     __ptext57:	
 19442 ;; *************** function ___fladd *****************
 19443 ;; Defined at:
 19444 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19445 ;; Parameters:    Size  Location     Type
 19446 ;;  b               4   29[BANK1 ] unsigned char 
 19447 ;;  a               4   33[BANK1 ] unsigned char 
 19448 ;; Auto vars:     Size  Location     Type
 19449 ;;  grs             1   52[BANK1 ] unsigned char 
 19450 ;;  bexp            1   51[BANK1 ] unsigned char 
 19451 ;;  aexp            1   50[BANK1 ] unsigned char 
 19452 ;;  signs           1   49[BANK1 ] unsigned char 
 19453 ;; Return value:  Size  Location     Type
 19454 ;;                  4   29[BANK1 ] unsigned char 
 19455 ;; Registers used:
 19456 ;;		wreg, status,2, status,0
 19457 ;; Tracked objects:
 19458 ;;		On entry : 0/0
 19459 ;;		On exit  : 0/0
 19460 ;;		Unchanged: 0/0
 19461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19462 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19463 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19464 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19465 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19466 ;;Total ram usage:       24 bytes
 19467 ;; Hardware stack levels used:    1
 19468 ;; Hardware stack levels required when called:    2
 19469 ;; This function calls:
 19470 ;;		Nothing
 19471 ;; This function is called by:
 19472 ;;		_calculateCurrent
 19473 ;;		_avgBuff
 19474 ;;		_writeVoltages
 19475 ;;		_sumVoltages
 19476 ;;		_cellBalancing
 19477 ;;		_sprintf
 19478 ;;		___flsub
 19479 ;; This function uses a non-reentrant model
 19480 ;;
 19481                           
 19482                           
 19483                           ;psect for function ___fladd
 19484  05FC                     ___fladd:	
 19485                           
 19486                           ;incstack = 0
 19487                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19488  05FC  0021               	movlb	1	; select bank1
 19489  05FD  0840               	movf	(___fladd@b^(0+128)+3),w
 19490  05FE  3980               	andlw	128
 19491  05FF  00C5               	movwf	??___fladd^(0+128)
 19492  0600  0845               	movf	??___fladd^(0+128),w
 19493  0601  00D1               	movwf	___fladd@signs^(0+128)
 19494  0602  3540               	lslf	(___fladd@b^(0+128)+3),w
 19495  0603  00C5               	movwf	??___fladd^(0+128)
 19496  0604  0845               	movf	??___fladd^(0+128),w
 19497  0605  00D3               	movwf	___fladd@bexp^(0+128)
 19498  0606  1BBF               	btfsc	(___fladd@b^(0+128)+2),7
 19499  0607  1453               	bsf	___fladd@bexp^(0+128),0
 19500  0608  0853               	movf	___fladd@bexp^(0+128),w
 19501  0609  1903               	btfsc	3,2
 19502  060A  2E19               	goto	l6626
 19503  060B  0A53               	incf	___fladd@bexp^(0+128),w
 19504  060C  1D03               	btfss	3,2
 19505  060D  2E16               	goto	l6622
 19506  060E  3000               	movlw	0
 19507  060F  00C0               	movwf	(___fladd@b+3)^(0+128)
 19508  0610  3000               	movlw	0
 19509  0611  00BF               	movwf	(___fladd@b+2)^(0+128)
 19510  0612  3000               	movlw	0
 19511  0613  00BE               	movwf	(___fladd@b+1)^(0+128)
 19512  0614  3000               	movlw	0
 19513  0615  00BD               	movwf	___fladd@b^(0+128)
 19514  0616                     l6622:	
 19515  0616  17BF               	bsf	(___fladd@b^(0+128)+2),7
 19516  0617  01C0               	clrf	(___fladd@b^(0+128)+3)
 19517  0618  2E21               	goto	l6628
 19518  0619                     l6626:	
 19519  0619  3000               	movlw	0
 19520  061A  00C0               	movwf	(___fladd@b+3)^(0+128)
 19521  061B  3000               	movlw	0
 19522  061C  00BF               	movwf	(___fladd@b+2)^(0+128)
 19523  061D  3000               	movlw	0
 19524  061E  00BE               	movwf	(___fladd@b+1)^(0+128)
 19525  061F  3000               	movlw	0
 19526  0620  00BD               	movwf	___fladd@b^(0+128)
 19527  0621                     l6628:	
 19528  0621  0844               	movf	(___fladd@a^(0+128)+3),w
 19529  0622  3980               	andlw	128
 19530  0623  00C5               	movwf	??___fladd^(0+128)
 19531  0624  0845               	movf	??___fladd^(0+128),w
 19532  0625  00D2               	movwf	___fladd@aexp^(0+128)
 19533  0626  0852               	movf	___fladd@aexp^(0+128),w
 19534  0627  0651               	xorwf	___fladd@signs^(0+128),w
 19535  0628  1D03               	btfss	3,2
 19536  0629  1751               	bsf	___fladd@signs^(0+128),6
 19537  062A  3544               	lslf	(___fladd@a^(0+128)+3),w
 19538  062B  00C5               	movwf	??___fladd^(0+128)
 19539  062C  0845               	movf	??___fladd^(0+128),w
 19540  062D  00D2               	movwf	___fladd@aexp^(0+128)
 19541  062E  1BC3               	btfsc	(___fladd@a^(0+128)+2),7
 19542  062F  1452               	bsf	___fladd@aexp^(0+128),0
 19543  0630  0852               	movf	___fladd@aexp^(0+128),w
 19544  0631  1903               	btfsc	3,2
 19545  0632  2E41               	goto	l6650
 19546  0633  0A52               	incf	___fladd@aexp^(0+128),w
 19547  0634  1D03               	btfss	3,2
 19548  0635  2E3E               	goto	l6646
 19549  0636  3000               	movlw	0
 19550  0637  00C4               	movwf	(___fladd@a+3)^(0+128)
 19551  0638  3000               	movlw	0
 19552  0639  00C3               	movwf	(___fladd@a+2)^(0+128)
 19553  063A  3000               	movlw	0
 19554  063B  00C2               	movwf	(___fladd@a+1)^(0+128)
 19555  063C  3000               	movlw	0
 19556  063D  00C1               	movwf	___fladd@a^(0+128)
 19557  063E                     l6646:	
 19558  063E  17C3               	bsf	(___fladd@a^(0+128)+2),7
 19559  063F  01C4               	clrf	(___fladd@a^(0+128)+3)
 19560  0640  2E49               	goto	l1302
 19561  0641                     l6650:	
 19562  0641  3000               	movlw	0
 19563  0642  00C4               	movwf	(___fladd@a+3)^(0+128)
 19564  0643  3000               	movlw	0
 19565  0644  00C3               	movwf	(___fladd@a+2)^(0+128)
 19566  0645  3000               	movlw	0
 19567  0646  00C2               	movwf	(___fladd@a+1)^(0+128)
 19568  0647  3000               	movlw	0
 19569  0648  00C1               	movwf	___fladd@a^(0+128)
 19570  0649                     l1302:	
 19571  0649  0853               	movf	___fladd@bexp^(0+128),w
 19572  064A  0252               	subwf	___fladd@aexp^(0+128),w
 19573  064B  1803               	skipnc
 19574  064C  2E8F               	goto	l6686
 19575  064D  1F51               	btfss	___fladd@signs^(0+128),6
 19576  064E  2E53               	goto	l6656
 19577  064F  3080               	movlw	128
 19578  0650  00C5               	movwf	??___fladd^(0+128)
 19579  0651  0845               	movf	??___fladd^(0+128),w
 19580  0652  06D1               	xorwf	___fladd@signs^(0+128),f
 19581  0653                     l6656:	
 19582  0653  0853               	movf	___fladd@bexp^(0+128),w
 19583  0654  00C5               	movwf	??___fladd^(0+128)
 19584  0655  0845               	movf	??___fladd^(0+128),w
 19585  0656  00D4               	movwf	___fladd@grs^(0+128)
 19586  0657  0852               	movf	___fladd@aexp^(0+128),w
 19587  0658  00C5               	movwf	??___fladd^(0+128)
 19588  0659  0845               	movf	??___fladd^(0+128),w
 19589  065A  00D3               	movwf	___fladd@bexp^(0+128)
 19590  065B  0854               	movf	___fladd@grs^(0+128),w
 19591  065C  00C5               	movwf	??___fladd^(0+128)
 19592  065D  0845               	movf	??___fladd^(0+128),w
 19593  065E  00D2               	movwf	___fladd@aexp^(0+128)
 19594  065F  083D               	movf	___fladd@b^(0+128),w
 19595  0660  00C5               	movwf	??___fladd^(0+128)
 19596  0661  0845               	movf	??___fladd^(0+128),w
 19597  0662  00D4               	movwf	___fladd@grs^(0+128)
 19598  0663  0841               	movf	___fladd@a^(0+128),w
 19599  0664  00C5               	movwf	??___fladd^(0+128)
 19600  0665  0845               	movf	??___fladd^(0+128),w
 19601  0666  00BD               	movwf	___fladd@b^(0+128)
 19602  0667  0854               	movf	___fladd@grs^(0+128),w
 19603  0668  00C5               	movwf	??___fladd^(0+128)
 19604  0669  0845               	movf	??___fladd^(0+128),w
 19605  066A  00C1               	movwf	___fladd@a^(0+128)
 19606  066B  083E               	movf	(___fladd@b^(0+128)+1),w
 19607  066C  00C5               	movwf	??___fladd^(0+128)
 19608  066D  0845               	movf	??___fladd^(0+128),w
 19609  066E  00D4               	movwf	___fladd@grs^(0+128)
 19610  066F  0842               	movf	(___fladd@a^(0+128)+1),w
 19611  0670  00C5               	movwf	??___fladd^(0+128)
 19612  0671  0845               	movf	??___fladd^(0+128),w
 19613  0672  00BE               	movwf	(___fladd@b^(0+128)+1)
 19614  0673  0854               	movf	___fladd@grs^(0+128),w
 19615  0674  00C5               	movwf	??___fladd^(0+128)
 19616  0675  0845               	movf	??___fladd^(0+128),w
 19617  0676  00C2               	movwf	(___fladd@a^(0+128)+1)
 19618  0677  083F               	movf	(___fladd@b^(0+128)+2),w
 19619  0678  00C5               	movwf	??___fladd^(0+128)
 19620  0679  0845               	movf	??___fladd^(0+128),w
 19621  067A  00D4               	movwf	___fladd@grs^(0+128)
 19622  067B  0843               	movf	(___fladd@a^(0+128)+2),w
 19623  067C  00C5               	movwf	??___fladd^(0+128)
 19624  067D  0845               	movf	??___fladd^(0+128),w
 19625  067E  00BF               	movwf	(___fladd@b^(0+128)+2)
 19626  067F  0854               	movf	___fladd@grs^(0+128),w
 19627  0680  00C5               	movwf	??___fladd^(0+128)
 19628  0681  0845               	movf	??___fladd^(0+128),w
 19629  0682  00C3               	movwf	(___fladd@a^(0+128)+2)
 19630  0683  0840               	movf	(___fladd@b^(0+128)+3),w
 19631  0684  00C5               	movwf	??___fladd^(0+128)
 19632  0685  0845               	movf	??___fladd^(0+128),w
 19633  0686  00D4               	movwf	___fladd@grs^(0+128)
 19634  0687  0844               	movf	(___fladd@a^(0+128)+3),w
 19635  0688  00C5               	movwf	??___fladd^(0+128)
 19636  0689  0845               	movf	??___fladd^(0+128),w
 19637  068A  00C0               	movwf	(___fladd@b^(0+128)+3)
 19638  068B  0854               	movf	___fladd@grs^(0+128),w
 19639  068C  00C5               	movwf	??___fladd^(0+128)
 19640  068D  0845               	movf	??___fladd^(0+128),w
 19641  068E  00C4               	movwf	(___fladd@a^(0+128)+3)
 19642  068F                     l6686:	
 19643  068F  01D4               	clrf	___fladd@grs^(0+128)
 19644  0690  0853               	movf	___fladd@bexp^(0+128),w
 19645  0691  00C5               	movwf	??___fladd^(0+128)
 19646  0692  01C6               	clrf	(??___fladd^(0+128)+1)
 19647  0693  09C5               	comf	??___fladd^(0+128),f
 19648  0694  09C6               	comf	(??___fladd^(0+128)+1),f
 19649  0695  0AC5               	incf	??___fladd^(0+128),f
 19650  0696  1903               	skipnz
 19651  0697  0AC6               	incf	(??___fladd^(0+128)+1),f
 19652  0698  0852               	movf	___fladd@aexp^(0+128),w
 19653  0699  0745               	addwf	??___fladd^(0+128),w
 19654  069A  00C7               	movwf	(??___fladd+2)^(0+128)
 19655  069B  0846               	movf	(??___fladd+1)^(0+128),w
 19656  069C  1803               	skipnc
 19657  069D  0A46               	incf	(??___fladd+1)^(0+128),w
 19658  069E  00C8               	movwf	((??___fladd+2)^(0+128)+1)
 19659  069F  0848               	movf	(??___fladd+3)^(0+128),w
 19660  06A0  3A80               	xorlw	128
 19661  06A1  00C9               	movwf	(??___fladd+4)^(0+128)
 19662  06A2  3080               	movlw	128
 19663  06A3  0249               	subwf	(??___fladd+4)^(0+128),w
 19664  06A4  1D03               	skipz
 19665  06A5  2EA8               	goto	u8665
 19666  06A6  301A               	movlw	26
 19667  06A7  0247               	subwf	(??___fladd+2)^(0+128),w
 19668  06A8                     u8665:	
 19669  06A8  1C03               	skipc
 19670  06A9  2EDC               	goto	l6704
 19671  06AA  0021               	movlb	1	; select bank1
 19672  06AB  0840               	movf	(___fladd@b+3)^(0+128),w
 19673  06AC  043F               	iorwf	(___fladd@b+2)^(0+128),w
 19674  06AD  043E               	iorwf	(___fladd@b+1)^(0+128),w
 19675  06AE  043D               	iorwf	___fladd@b^(0+128),w
 19676  06AF  1903               	btfsc	3,2
 19677  06B0  2EB3               	goto	u8670
 19678  06B1  3001               	movlw	1
 19679  06B2  2EB4               	goto	u8680
 19680  06B3                     u8670:	
 19681  06B3  3000               	movlw	0
 19682  06B4                     u8680:	
 19683  06B4  00C5               	movwf	??___fladd^(0+128)
 19684  06B5  0845               	movf	??___fladd^(0+128),w
 19685  06B6  00D4               	movwf	___fladd@grs^(0+128)
 19686  06B7  3000               	movlw	0
 19687  06B8  00C0               	movwf	(___fladd@b+3)^(0+128)
 19688  06B9  3000               	movlw	0
 19689  06BA  00BF               	movwf	(___fladd@b+2)^(0+128)
 19690  06BB  3000               	movlw	0
 19691  06BC  00BE               	movwf	(___fladd@b+1)^(0+128)
 19692  06BD  3000               	movlw	0
 19693  06BE  00BD               	movwf	___fladd@b^(0+128)
 19694  06BF  0852               	movf	___fladd@aexp^(0+128),w
 19695  06C0  00C5               	movwf	??___fladd^(0+128)
 19696  06C1  0845               	movf	??___fladd^(0+128),w
 19697  06C2  00D3               	movwf	___fladd@bexp^(0+128)
 19698  06C3  2EE1               	goto	l1306
 19699  06C4                     l1308:	
 19700  06C4  1C54               	btfss	___fladd@grs^(0+128),0
 19701  06C5  2ECC               	goto	l6694
 19702  06C6  3654               	lsrf	___fladd@grs^(0+128),w
 19703  06C7  3801               	iorlw	1
 19704  06C8  00C5               	movwf	??___fladd^(0+128)
 19705  06C9  0845               	movf	??___fladd^(0+128),w
 19706  06CA  00D4               	movwf	___fladd@grs^(0+128)
 19707  06CB  2ECE               	goto	l6696
 19708  06CC                     l6694:	
 19709  06CC  1003               	clrc
 19710  06CD  0CD4               	rrf	___fladd@grs^(0+128),f
 19711  06CE                     l6696:	
 19712  06CE  183D               	btfsc	___fladd@b^(0+128),0
 19713  06CF  17D4               	bsf	___fladd@grs^(0+128),7
 19714  06D0  3001               	movlw	1
 19715  06D1  00C5               	movwf	??___fladd^(0+128)
 19716  06D2                     u8715:	
 19717  06D2  37C0               	asrf	(___fladd@b+3)^(0+128),f
 19718  06D3  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 19719  06D4  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 19720  06D5  0CBD               	rrf	___fladd@b^(0+128),f
 19721  06D6  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 19722  06D7  2ED2               	goto	u8715
 19723  06D8  3001               	movlw	1
 19724  06D9  00C5               	movwf	??___fladd^(0+128)
 19725  06DA  0845               	movf	??___fladd^(0+128),w
 19726  06DB  07D3               	addwf	___fladd@bexp^(0+128),f
 19727  06DC                     l6704:	
 19728  06DC  0021               	movlb	1	; select bank1
 19729  06DD  0852               	movf	___fladd@aexp^(0+128),w
 19730  06DE  0253               	subwf	___fladd@bexp^(0+128),w
 19731  06DF  1C03               	skipc
 19732  06E0  2EC4               	goto	l1308
 19733  06E1                     l1306:	
 19734  06E1  1B51               	btfsc	___fladd@signs^(0+128),6
 19735  06E2  2F14               	goto	l6730
 19736  06E3  0853               	movf	___fladd@bexp^(0+128),w
 19737  06E4  1D03               	btfss	3,2
 19738  06E5  2EEF               	goto	l6712
 19739  06E6  3000               	movlw	0
 19740  06E7  00C0               	movwf	(?___fladd+3)^(0+128)
 19741  06E8  3000               	movlw	0
 19742  06E9  00BF               	movwf	(?___fladd+2)^(0+128)
 19743  06EA  3000               	movlw	0
 19744  06EB  00BE               	movwf	(?___fladd+1)^(0+128)
 19745  06EC  3000               	movlw	0
 19746  06ED  00BD               	movwf	?___fladd^(0+128)
 19747  06EE  0008               	return
 19748  06EF                     l6712:	
 19749  06EF  0841               	movf	___fladd@a^(0+128),w
 19750  06F0  07BD               	addwf	___fladd@b^(0+128),f
 19751  06F1  0842               	movf	(___fladd@a+1)^(0+128),w
 19752  06F2  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 19753  06F3  0843               	movf	(___fladd@a+2)^(0+128),w
 19754  06F4  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 19755  06F5  0844               	movf	(___fladd@a+3)^(0+128),w
 19756  06F6  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 19757  06F7  1C40               	btfss	(___fladd@b+3)^(0+128),0
 19758  06F8  2FA1               	goto	l6764
 19759  06F9  1C54               	btfss	___fladd@grs^(0+128),0
 19760  06FA  2F03               	goto	l6720
 19761  06FB  1003               	clrc
 19762  06FC  0CD4               	rrf	___fladd@grs^(0+128),f
 19763  06FD  0854               	movf	___fladd@grs^(0+128),w
 19764  06FE  3801               	iorlw	1
 19765  06FF  00C5               	movwf	??___fladd^(0+128)
 19766  0700  0845               	movf	??___fladd^(0+128),w
 19767  0701  00D4               	movwf	___fladd@grs^(0+128)
 19768  0702  2F05               	goto	l6722
 19769  0703                     l6720:	
 19770  0703  1003               	clrc
 19771  0704  0CD4               	rrf	___fladd@grs^(0+128),f
 19772  0705                     l6722:	
 19773  0705  183D               	btfsc	___fladd@b^(0+128),0
 19774  0706  17D4               	bsf	___fladd@grs^(0+128),7
 19775  0707  3001               	movlw	1
 19776  0708  00C5               	movwf	??___fladd^(0+128)
 19777  0709                     u8785:	
 19778  0709  37C0               	asrf	(___fladd@b+3)^(0+128),f
 19779  070A  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 19780  070B  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 19781  070C  0CBD               	rrf	___fladd@b^(0+128),f
 19782  070D  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 19783  070E  2F09               	goto	u8785
 19784  070F  3001               	movlw	1
 19785  0710  00C5               	movwf	??___fladd^(0+128)
 19786  0711  0845               	movf	??___fladd^(0+128),w
 19787  0712  07D3               	addwf	___fladd@bexp^(0+128),f
 19788  0713  2FA1               	goto	l6764
 19789  0714                     l6730:	
 19790  0714  0840               	movf	(___fladd@b+3)^(0+128),w
 19791  0715  3A80               	xorlw	128
 19792  0716  00C5               	movwf	??___fladd^(0+128)
 19793  0717  0844               	movf	(___fladd@a+3)^(0+128),w
 19794  0718  3A80               	xorlw	128
 19795  0719  0245               	subwf	??___fladd^(0+128),w
 19796  071A  1D03               	skipz
 19797  071B  2F26               	goto	u8793
 19798  071C  0843               	movf	(___fladd@a+2)^(0+128),w
 19799  071D  023F               	subwf	(___fladd@b+2)^(0+128),w
 19800  071E  1D03               	skipz
 19801  071F  2F26               	goto	u8793
 19802  0720  0842               	movf	(___fladd@a+1)^(0+128),w
 19803  0721  023E               	subwf	(___fladd@b+1)^(0+128),w
 19804  0722  1D03               	skipz
 19805  0723  2F26               	goto	u8793
 19806  0724  0841               	movf	___fladd@a^(0+128),w
 19807  0725  023D               	subwf	___fladd@b^(0+128),w
 19808  0726                     u8793:	
 19809  0726  1803               	skipnc
 19810  0727  2F71               	goto	l6740
 19811  0728  30FF               	movlw	255
 19812  0729  00C5               	movwf	??___fladd^(0+128)
 19813  072A  30FF               	movlw	255
 19814  072B  00C6               	movwf	(??___fladd^(0+128)+1)
 19815  072C  30FF               	movlw	255
 19816  072D  00C7               	movwf	(??___fladd^(0+128)+2)
 19817  072E  30FF               	movlw	255
 19818  072F  00C8               	movwf	(??___fladd^(0+128)+3)
 19819  0730  0841               	movf	___fladd@a^(0+128),w
 19820  0731  00C9               	movwf	(??___fladd+4)^(0+128)
 19821  0732  0842               	movf	(___fladd@a+1)^(0+128),w
 19822  0733  00CA               	movwf	((??___fladd+4)^(0+128)+1)
 19823  0734  0843               	movf	(___fladd@a+2)^(0+128),w
 19824  0735  00CB               	movwf	((??___fladd+4)^(0+128)+2)
 19825  0736  0844               	movf	(___fladd@a+3)^(0+128),w
 19826  0737  00CC               	movwf	((??___fladd+4)^(0+128)+3)
 19827  0738  093D               	comf	___fladd@b^(0+128),w
 19828  0739  00CD               	movwf	(??___fladd+8)^(0+128)
 19829  073A  093E               	comf	(___fladd@b+1)^(0+128),w
 19830  073B  00CE               	movwf	((??___fladd+8)^(0+128)+1)
 19831  073C  093F               	comf	(___fladd@b+2)^(0+128),w
 19832  073D  00CF               	movwf	((??___fladd+8)^(0+128)+2)
 19833  073E  0940               	comf	(___fladd@b+3)^(0+128),w
 19834  073F  00D0               	movwf	((??___fladd+8)^(0+128)+3)
 19835  0740  0ACD               	incf	(??___fladd+8)^(0+128),f
 19836  0741  1903               	skipnz
 19837  0742  0ACE               	incf	((??___fladd+8)^(0+128)+1),f
 19838  0743  1903               	skipnz
 19839  0744  0ACF               	incf	((??___fladd+8)^(0+128)+2),f
 19840  0745  1903               	skipnz
 19841  0746  0AD0               	incf	((??___fladd+8)^(0+128)+3),f
 19842  0747  084D               	movf	(??___fladd+8)^(0+128),w
 19843  0748  07C9               	addwf	(??___fladd+4)^(0+128),f
 19844  0749  084E               	movf	(??___fladd+9)^(0+128),w
 19845  074A  3DCA               	addwfc	((??___fladd+4)^(0+128)+1),f
 19846  074B  084F               	movf	(??___fladd+10)^(0+128),w
 19847  074C  3DCB               	addwfc	((??___fladd+4)^(0+128)+2),f
 19848  074D  0850               	movf	(??___fladd+11)^(0+128),w
 19849  074E  3DCC               	addwfc	((??___fladd+4)^(0+128)+3),f
 19850  074F  0849               	movf	(??___fladd+4)^(0+128),w
 19851  0750  07C5               	addwf	??___fladd^(0+128),f
 19852  0751  084A               	movf	(??___fladd+5)^(0+128),w
 19853  0752  3DC6               	addwfc	(??___fladd^(0+128)+1),f
 19854  0753  084B               	movf	(??___fladd+6)^(0+128),w
 19855  0754  3DC7               	addwfc	(??___fladd^(0+128)+2),f
 19856  0755  084C               	movf	(??___fladd+7)^(0+128),w
 19857  0756  3DC8               	addwfc	(??___fladd^(0+128)+3),f
 19858  0757  0848               	movf	(??___fladd+3)^(0+128),w
 19859  0758  00C0               	movwf	(___fladd@b+3)^(0+128)
 19860  0759  0847               	movf	(??___fladd+2)^(0+128),w
 19861  075A  00BF               	movwf	(___fladd@b+2)^(0+128)
 19862  075B  0846               	movf	(??___fladd+1)^(0+128),w
 19863  075C  00BE               	movwf	(___fladd@b+1)^(0+128)
 19864  075D  0845               	movf	??___fladd^(0+128),w
 19865  075E  00BD               	movwf	___fladd@b^(0+128)
 19866  075F  3080               	movlw	128
 19867  0760  00C5               	movwf	??___fladd^(0+128)
 19868  0761  0845               	movf	??___fladd^(0+128),w
 19869  0762  06D1               	xorwf	___fladd@signs^(0+128),f
 19870  0763  09D4               	comf	___fladd@grs^(0+128),f
 19871  0764  0AD4               	incf	___fladd@grs^(0+128),f
 19872  0765  0854               	movf	___fladd@grs^(0+128),w
 19873  0766  1D03               	btfss	3,2
 19874  0767  2F79               	goto	l1323
 19875  0768  3001               	movlw	1
 19876  0769  07BD               	addwf	___fladd@b^(0+128),f
 19877  076A  3000               	movlw	0
 19878  076B  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 19879  076C  3000               	movlw	0
 19880  076D  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 19881  076E  3000               	movlw	0
 19882  076F  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 19883  0770  2F79               	goto	l1323
 19884  0771                     l6740:	
 19885  0771  0841               	movf	___fladd@a^(0+128),w
 19886  0772  02BD               	subwf	___fladd@b^(0+128),f
 19887  0773  0842               	movf	(___fladd@a+1)^(0+128),w
 19888  0774  3BBE               	subwfb	(___fladd@b+1)^(0+128),f
 19889  0775  0843               	movf	(___fladd@a+2)^(0+128),w
 19890  0776  3BBF               	subwfb	(___fladd@b+2)^(0+128),f
 19891  0777  0844               	movf	(___fladd@a+3)^(0+128),w
 19892  0778  3BC0               	subwfb	(___fladd@b+3)^(0+128),f
 19893  0779                     l1323:	
 19894  0779  0840               	movf	(___fladd@b+3)^(0+128),w
 19895  077A  043F               	iorwf	(___fladd@b+2)^(0+128),w
 19896  077B  043E               	iorwf	(___fladd@b+1)^(0+128),w
 19897  077C  043D               	iorwf	___fladd@b^(0+128),w
 19898  077D  1D03               	skipz
 19899  077E  2F9F               	goto	l6762
 19900  077F  0854               	movf	___fladd@grs^(0+128),w
 19901  0780  1D03               	btfss	3,2
 19902  0781  2F9F               	goto	l6762
 19903  0782  3000               	movlw	0
 19904  0783  00C0               	movwf	(?___fladd+3)^(0+128)
 19905  0784  3000               	movlw	0
 19906  0785  00BF               	movwf	(?___fladd+2)^(0+128)
 19907  0786  3000               	movlw	0
 19908  0787  00BE               	movwf	(?___fladd+1)^(0+128)
 19909  0788  3000               	movlw	0
 19910  0789  00BD               	movwf	?___fladd^(0+128)
 19911  078A  0008               	return
 19912  078B                     l6748:	
 19913  078B  3001               	movlw	1
 19914  078C                     u8835:	
 19915  078C  35BD               	lslf	___fladd@b^(0+128),f
 19916  078D  0DBE               	rlf	(___fladd@b+1)^(0+128),f
 19917  078E  0DBF               	rlf	(___fladd@b+2)^(0+128),f
 19918  078F  0DC0               	rlf	(___fladd@b+3)^(0+128),f
 19919  0790  0B89               	decfsz	9,f
 19920  0791  2F8C               	goto	u8835
 19921  0792  1BD4               	btfsc	___fladd@grs^(0+128),7
 19922  0793  143D               	bsf	___fladd@b^(0+128),0
 19923  0794  1C54               	btfss	___fladd@grs^(0+128),0
 19924  0795  2F98               	goto	l6756
 19925  0796  1403               	setc
 19926  0797  2F99               	goto	L13
 19927  0798                     l6756:	
 19928  0798  1003               	clrc
 19929  0799                     L13:	
 19930  0799  0DD4               	rlf	___fladd@grs^(0+128),f
 19931  079A  0853               	movf	___fladd@bexp^(0+128),w
 19932  079B  1903               	btfsc	3,2
 19933  079C  2F9F               	goto	l6762
 19934  079D  3001               	movlw	1
 19935  079E  02D3               	subwf	___fladd@bexp^(0+128),f
 19936  079F                     l6762:	
 19937  079F  1FBF               	btfss	(___fladd@b+2)^(0+128),7
 19938  07A0  2F8B               	goto	l6748
 19939  07A1                     l6764:	
 19940  07A1  01D2               	clrf	___fladd@aexp^(0+128)
 19941  07A2  1FD4               	btfss	___fladd@grs^(0+128),7
 19942  07A3  2FAC               	goto	l6774
 19943  07A4  0854               	movf	___fladd@grs^(0+128),w
 19944  07A5  397F               	andlw	127
 19945  07A6  1D03               	btfss	3,2
 19946  07A7  2FAA               	goto	l6772
 19947  07A8  1C3D               	btfss	___fladd@b^(0+128),0
 19948  07A9  2FAC               	goto	l6774
 19949  07AA                     l6772:	
 19950  07AA  01D2               	clrf	___fladd@aexp^(0+128)
 19951  07AB  0AD2               	incf	___fladd@aexp^(0+128),f
 19952  07AC                     l6774:	
 19953  07AC  0852               	movf	___fladd@aexp^(0+128),w
 19954  07AD  1903               	btfsc	3,2
 19955  07AE  2FD8               	goto	l1336
 19956  07AF  3001               	movlw	1
 19957  07B0  07BD               	addwf	___fladd@b^(0+128),f
 19958  07B1  3000               	movlw	0
 19959  07B2  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 19960  07B3  3000               	movlw	0
 19961  07B4  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 19962  07B5  3000               	movlw	0
 19963  07B6  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 19964  07B7  1C40               	btfss	(___fladd@b+3)^(0+128),0
 19965  07B8  2FD8               	goto	l1336
 19966  07B9  083D               	movf	___fladd@b^(0+128),w
 19967  07BA  00C5               	movwf	??___fladd^(0+128)
 19968  07BB  083E               	movf	(___fladd@b+1)^(0+128),w
 19969  07BC  00C6               	movwf	(??___fladd^(0+128)+1)
 19970  07BD  083F               	movf	(___fladd@b+2)^(0+128),w
 19971  07BE  00C7               	movwf	(??___fladd^(0+128)+2)
 19972  07BF  0840               	movf	(___fladd@b+3)^(0+128),w
 19973  07C0  00C8               	movwf	(??___fladd^(0+128)+3)
 19974  07C1  3001               	movlw	1
 19975  07C2  00C9               	movwf	(??___fladd+4)^(0+128)
 19976  07C3                     u8935:	
 19977  07C3  37C8               	asrf	(??___fladd^(0+128)+3),f
 19978  07C4  0CC7               	rrf	(??___fladd^(0+128)+2),f
 19979  07C5  0CC6               	rrf	(??___fladd^(0+128)+1),f
 19980  07C6  0CC5               	rrf	??___fladd^(0+128),f
 19981  07C7  0BC9               	decfsz	(??___fladd+4)^(0+128),f
 19982  07C8  2FC3               	goto	u8935
 19983  07C9  0848               	movf	(??___fladd+3)^(0+128),w
 19984  07CA  00C0               	movwf	(___fladd@b+3)^(0+128)
 19985  07CB  0847               	movf	(??___fladd+2)^(0+128),w
 19986  07CC  00BF               	movwf	(___fladd@b+2)^(0+128)
 19987  07CD  0846               	movf	(??___fladd+1)^(0+128),w
 19988  07CE  00BE               	movwf	(___fladd@b+1)^(0+128)
 19989  07CF  0845               	movf	??___fladd^(0+128),w
 19990  07D0  00BD               	movwf	___fladd@b^(0+128)
 19991  07D1  0A53               	incf	___fladd@bexp^(0+128),w
 19992  07D2  1903               	btfsc	3,2
 19993  07D3  2FD8               	goto	l1336
 19994  07D4  3001               	movlw	1
 19995  07D5  00C5               	movwf	??___fladd^(0+128)
 19996  07D6  0845               	movf	??___fladd^(0+128),w
 19997  07D7  07D3               	addwf	___fladd@bexp^(0+128),f
 19998  07D8                     l1336:	
 19999  07D8  0A53               	incf	___fladd@bexp^(0+128),w
 20000  07D9  1D03               	btfss	3,2
 20001  07DA  0853               	movf	___fladd@bexp^(0+128),w
 20002  07DB  1D03               	btfss	3,2
 20003  07DC  2FE8               	goto	l6792
 20004  07DD  3000               	movlw	0
 20005  07DE  00C0               	movwf	(___fladd@b+3)^(0+128)
 20006  07DF  3000               	movlw	0
 20007  07E0  00BF               	movwf	(___fladd@b+2)^(0+128)
 20008  07E1  3000               	movlw	0
 20009  07E2  00BE               	movwf	(___fladd@b+1)^(0+128)
 20010  07E3  3000               	movlw	0
 20011  07E4  00BD               	movwf	___fladd@b^(0+128)
 20012  07E5  0853               	movf	___fladd@bexp^(0+128),w
 20013  07E6  1903               	btfsc	3,2
 20014  07E7  01D1               	clrf	___fladd@signs^(0+128)
 20015  07E8                     l6792:	
 20016  07E8  1C53               	btfss	___fladd@bexp^(0+128),0
 20017  07E9  2FEC               	goto	l6796
 20018  07EA  17BF               	bsf	(___fladd@b^(0+128)+2),7
 20019  07EB  2FF0               	goto	l1344
 20020  07EC                     l6796:	
 20021  07EC  307F               	movlw	127
 20022  07ED  00C5               	movwf	??___fladd^(0+128)
 20023  07EE  0845               	movf	??___fladd^(0+128),w
 20024  07EF  05BF               	andwf	(___fladd@b^(0+128)+2),f
 20025  07F0                     l1344:	
 20026  07F0  3653               	lsrf	___fladd@bexp^(0+128),w
 20027  07F1  00C5               	movwf	??___fladd^(0+128)
 20028  07F2  0845               	movf	??___fladd^(0+128),w
 20029  07F3  00C0               	movwf	(___fladd@b^(0+128)+3)
 20030  07F4  1FD1               	btfss	___fladd@signs^(0+128),7
 20031  07F5  0008               	return
 20032  07F6  17C0               	bsf	(___fladd@b^(0+128)+3),7
 20033  07F7  0008               	return
 20034  07F8                     __end_of___fladd:	
 20035                           
 20036                           	psect	intentry
 20037  0004                     __pintentry:	
 20038 ;; *************** function _ISR *****************
 20039 ;; Defined at:
 20040 ;;		line 154 in file "main.c"
 20041 ;; Parameters:    Size  Location     Type
 20042 ;;		None
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;		None
 20045 ;; Return value:  Size  Location     Type
 20046 ;;                  1    wreg      void 
 20047 ;; Registers used:
 20048 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20049 ;; Tracked objects:
 20050 ;;		On entry : 0/0
 20051 ;;		On exit  : 0/0
 20052 ;;		Unchanged: 0/0
 20053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20058 ;;Total ram usage:        2 bytes
 20059 ;; Hardware stack levels used:    1
 20060 ;; Hardware stack levels required when called:    1
 20061 ;; This function calls:
 20062 ;;		_uartDisable
 20063 ;; This function is called by:
 20064 ;;		Interrupt level 1
 20065 ;; This function uses a non-reentrant model
 20066 ;;
 20067                           
 20068  0004                     _ISR:	
 20069                           
 20070                           ;incstack = 0
 20071  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20072                           
 20073                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20074  0005  3180               	pagesel	$
 20075  0006  0020               	movlb	0	; select bank0
 20076  0007  087F               	movf	127,w
 20077  0008  00F1               	movwf	??_ISR+1
 20078                           
 20079                           ;main.c: 156: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 20080  0009  190B               	btfsc	11,2	;volatile
 20081  000A  1E8B               	btfss	11,5	;volatile
 20082  000B  283B               	goto	i1l6062
 20083                           
 20084                           ;main.c: 157: k ++;
 20085  000C  3001               	movlw	1
 20086  000D  0023               	movlb	3	; select bank3
 20087  000E  07B2               	addwf	_k^(0+384),f
 20088  000F  3000               	movlw	0
 20089  0010  3DB3               	addwfc	(_k+1)^(0+384),f
 20090                           
 20091                           ;main.c: 158: if(k >= 3){
 20092  0011  0833               	movf	(_k+1)^(0+384),w
 20093  0012  3A80               	xorlw	128
 20094  0013  00F0               	movwf	??_ISR
 20095  0014  3080               	movlw	128
 20096  0015  0270               	subwf	??_ISR,w
 20097  0016  1D03               	skipz
 20098  0017  281A               	goto	u789_25
 20099  0018  3003               	movlw	3
 20100  0019  0232               	subwf	_k^(0+384),w
 20101  001A                     u789_25:	
 20102  001A  1C03               	skipc
 20103  001B  2827               	goto	i1l6054
 20104                           
 20105                           ;main.c: 159: currentBool = 1;
 20106  001C  3001               	movlw	1
 20107  001D  0023               	movlb	3	; select bank3
 20108  001E  00AE               	movwf	_currentBool^(0+384)
 20109  001F  3000               	movlw	0
 20110  0020  00AF               	movwf	(_currentBool^(0+384)+1)
 20111                           
 20112                           ;main.c: 160: k=0;
 20113  0021  01B2               	clrf	_k^(0+384)
 20114  0022  01B3               	clrf	(_k+1)^(0+384)
 20115                           
 20116                           ;main.c: 161: j++;
 20117  0023  3001               	movlw	1
 20118  0024  07B4               	addwf	_j^(0+384),f
 20119  0025  3000               	movlw	0
 20120  0026  3DB5               	addwfc	(_j+1)^(0+384),f
 20121  0027                     i1l6054:	
 20122                           
 20123                           ;main.c: 162: }
 20124                           ;main.c: 164: if(j>=10000){
 20125  0027  0023               	movlb	3	; select bank3
 20126  0028  0835               	movf	(_j+1)^(0+384),w
 20127  0029  3A80               	xorlw	128
 20128  002A  00F0               	movwf	??_ISR
 20129  002B  30A7               	movlw	167
 20130  002C  0270               	subwf	??_ISR,w
 20131  002D  1D03               	skipz
 20132  002E  2831               	goto	u790_25
 20133  002F  3010               	movlw	16
 20134  0030  0234               	subwf	_j^(0+384),w
 20135  0031                     u790_25:	
 20136  0031  1C03               	skipc
 20137  0032  283A               	goto	i1l6060
 20138                           
 20139                           ;main.c: 165: uartBool = 1;
 20140  0033  3001               	movlw	1
 20141  0034  0023               	movlb	3	; select bank3
 20142  0035  00B0               	movwf	_uartBool^(0+384)
 20143  0036  3000               	movlw	0
 20144  0037  00B1               	movwf	(_uartBool^(0+384)+1)
 20145                           
 20146                           ;main.c: 166: j = 0;
 20147  0038  01B4               	clrf	_j^(0+384)
 20148  0039  01B5               	clrf	(_j+1)^(0+384)
 20149  003A                     i1l6060:	
 20150                           
 20151                           ;main.c: 167: }
 20152                           ;main.c: 168: INTCONbits.TMR0IF = 0;
 20153  003A  110B               	bcf	11,2	;volatile
 20154  003B                     i1l6062:	
 20155                           
 20156                           ;main.c: 169: }
 20157                           ;main.c: 171: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 20158  003B  0021               	movlb	1	; select bank1
 20159  003C  1C91               	btfss	17,1	;volatile
 20160  003D  2848               	goto	i1l6070
 20161  003E  0020               	movlb	0	; select bank0
 20162  003F  1C91               	btfss	17,1	;volatile
 20163  0040  2848               	goto	i1l6070
 20164                           
 20165                           ;main.c: 172: currentBool = 1;
 20166  0041  3001               	movlw	1
 20167  0042  0023               	movlb	3	; select bank3
 20168  0043  00AE               	movwf	_currentBool^(0+384)
 20169  0044  3000               	movlw	0
 20170  0045  00AF               	movwf	(_currentBool^(0+384)+1)
 20171                           
 20172                           ;main.c: 173: PIR1bits.TMR2IF = 0;
 20173  0046  0020               	movlb	0	; select bank0
 20174  0047  1091               	bcf	17,1	;volatile
 20175  0048                     i1l6070:	
 20176                           
 20177                           ;main.c: 174: }
 20178                           ;main.c: 176: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 20179  0048  0020               	movlb	0	; select bank0
 20180  0049  1E11               	btfss	17,4	;volatile
 20181  004A  2868               	goto	i1l6084
 20182  004B  0021               	movlb	1	; select bank1
 20183  004C  1E11               	btfss	17,4	;volatile
 20184  004D  2868               	goto	i1l6084
 20185                           
 20186                           ;main.c: 177: if(str[z] != '\0'){
 20187  004E  087A               	movf	_z,w
 20188  004F  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
 20189  0050  0086               	movwf	6
 20190  0051  3002               	movlw	2	; select bank5/6
 20191  0052  0087               	movwf	7
 20192  0053  0801               	movf	1,w
 20193  0054  1903               	btfsc	3,2
 20194  0055  2863               	goto	i1l6080
 20195                           
 20196                           ;main.c: 178: TXREG = str[z];
 20197  0056  087A               	movf	_z,w
 20198  0057  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
 20199  0058  0086               	movwf	6
 20200  0059  3002               	movlw	2	; select bank5/6
 20201  005A  0087               	movwf	7
 20202  005B  0801               	movf	1,w
 20203  005C  0023               	movlb	3	; select bank3
 20204  005D  009A               	movwf	26	;volatile
 20205                           
 20206                           ;main.c: 179: z++;
 20207  005E  3001               	movlw	1
 20208  005F  07FA               	addwf	_z,f
 20209  0060  3000               	movlw	0
 20210  0061  3DFB               	addwfc	_z+1,f
 20211                           
 20212                           ;main.c: 180: }else{
 20213  0062  2868               	goto	i1l6084
 20214  0063                     i1l6080:	
 20215                           
 20216                           ;main.c: 181: z = 0;
 20217  0063  01FA               	clrf	_z
 20218  0064  01FB               	clrf	_z+1
 20219                           
 20220                           ;main.c: 182: uartDisable();
 20221  0065  31AB  231C  3180   	fcall	_uartDisable
 20222  0068                     i1l6084:	
 20223                           
 20224                           ;main.c: 183: }
 20225                           ;main.c: 184: }
 20226                           ;main.c: 186: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 20227  0068  0020               	movlb	0	; select bank0
 20228  0069  1D91               	btfss	17,3	;volatile
 20229  006A  2870               	goto	i1l145
 20230  006B  0021               	movlb	1	; select bank1
 20231  006C  1D91               	btfss	17,3	;volatile
 20232  006D  2870               	goto	i1l145
 20233                           
 20234                           ;main.c: 187: PIR1bits.SSP1IF = 0;
 20235  006E  0020               	movlb	0	; select bank0
 20236  006F  1191               	bcf	17,3	;volatile
 20237  0070                     i1l145:	
 20238  0070  0871               	movf	??_ISR+1,w
 20239  0071  0020               	movlb	0	; select bank0
 20240  0072  00FF               	movwf	127
 20241  0073  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20242  0074  0009               	retfie
 20243  0075                     __end_of_ISR:	
 20244                           
 20245                           	psect	text59
 20246  2B1C                     __ptext59:	
 20247 ;; *************** function _uartDisable *****************
 20248 ;; Defined at:
 20249 ;;		line 79 in file "uart.c"
 20250 ;; Parameters:    Size  Location     Type
 20251 ;;		None
 20252 ;; Auto vars:     Size  Location     Type
 20253 ;;		None
 20254 ;; Return value:  Size  Location     Type
 20255 ;;                  1    wreg      void 
 20256 ;; Registers used:
 20257 ;;		None
 20258 ;; Tracked objects:
 20259 ;;		On entry : 0/0
 20260 ;;		On exit  : 0/0
 20261 ;;		Unchanged: 0/0
 20262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20267 ;;Total ram usage:        0 bytes
 20268 ;; Hardware stack levels used:    1
 20269 ;; This function calls:
 20270 ;;		Nothing
 20271 ;; This function is called by:
 20272 ;;		_ISR
 20273 ;; This function uses a non-reentrant model
 20274 ;;
 20275                           
 20276                           
 20277                           ;psect for function _uartDisable
 20278  2B1C                     _uartDisable:	
 20279                           
 20280                           ;uart.c: 80: PIE1bits.TXIE = 0;
 20281                           
 20282                           ;incstack = 0
 20283                           ; Regs used in _uartDisable: []
 20284  2B1C  0021               	movlb	1	; select bank1
 20285  2B1D  1211               	bcf	17,4	;volatile
 20286  2B1E  0008               	return
 20287  2B1F                     __end_of_uartDisable:	
 20288  007E                     btemp	set	126	;btemp
 20289  007E                     int$flags	set	126
 20290  007E                     wtemp0	set	126


Data Sizes:
    Strings     150
    Constant    2004
    Data        19
    BSS         251
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     75      77
    BANK3            80      4      68
    BANK4            80      0      72
    BANK5            80      0      50
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[20]), STR_5(CODE[15]), 
		 -> STR_4(CODE[19]), STR_3(CODE[38]), STR_2(CODE[23]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> str(BANK5[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(2) Largest target is 4096
		 -> LTC6804_rdcv@cell_data(BANK0[8]), RAM(DATA[4096]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), 

    spi_write_array@data	PTR unsigned char  size(1) Largest target is 12
		 -> LTC6804_wrcfg@cmd(BANK0[12]), LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 4096
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), LTC6804_rdcv_reg@cmd(BANK0[4]), 
		 -> LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK3[2]), ADCV(BANK3[2]), RAM(DATA[4096]), 
		 -> configReg(BANK3[6]), measureVoltages@tempConfig(BANK2[6]), 

    LTC6804_wrcfg@config	PTR unsigned char [6] size(2) Largest target is 4096
		 -> RAM(DATA[4096]), configReg(BANK3[6]), measureVoltages@tempConfig(BANK2[6]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR unsigned int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK2[24]), 

    cellBalancing@voltages	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    measureVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    sumVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 10
		 -> temps(BANK3[10]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 10
		 -> temps(BANK3[10]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    avgBuff@buff	PTR float  size(1) Largest target is 80
		 -> currentBuff(BANK6[80]), 

    getTemps@temperatures	PTR int  size(1) Largest target is 10
		 -> temps(BANK3[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    _LTC6804_rdcv->_pec15_calc
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_rdcv_reg->_spi_write_read
    _spi_write_read->___bmul
    _LTC6804_adcv->_pec15_calc
    ___flmul->___awdiv
    _LTC6804_wrcfg->_pec15_calc
    _spi_write_array->_spi_write
    _pec15_calc->___wmul
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->_fround
    _sprintf->_scale
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    _setup->_LTC6804_initialize
    _LTC6804_initialize->_LTC6804_wrcfg
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    ___fltol->_scale
    ___flmul->___fldiv
    _LTC6804_wrcfg->_pec15_calc
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _writeValuesToUart->_writeTemps
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___flge
    ___flsub->___fladd
    _sumVoltages->___fladd
    _measureVoltages->___flge
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    ___fltol->_scale
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fladd
    _cellBalancing->___flge
    ___flge->___fladd
    _avgBuff->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0  332126
                                             72 BANK2      3     3      0
                                              0 BANK3      4     4      0
                             ___flge
                            _avgBuff
                      _cellBalancing
                         _getCurrent
                           _getTemps
                    _measureVoltages
                              _setup
                        _sumVoltages
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   18     1     17  235207
                                             54 BANK2     18     1     17
                        _clearScreen
                       _writeCurrent
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                       21    15      6   64538
                                             33 BANK2     21    15      6
                            ___fladd
                             ___flge
                            ___flneg
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                           8     4      4   56763
                                             79 BANK1      1     1      0
                                             33 BANK2      7     3      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         4     0      4   56476
                                             33 BANK2      4     0      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   56516
                                             33 BANK2      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (3) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             48    38     10   56355
                                             69 BANK1     10     0     10
                                              0 BANK2     33    33      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   11520
                                             76 BANK0      4     0      4
                                              0 BANK1     21    21      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4   11241
                                             76 BANK0      4     0      4
                                              0 BANK1     29    29      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4447
                                             53 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     245
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _sumVoltages                                         13     9      4    4652
                                             53 BANK1     13     9      4
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    6612
                 _LTC6804_initialize
                           _adcSetup
                           _i2cSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_initialize                                   2     0      2    6612
                                             41 BANK0      2     0      2
                      _LTC6804_wrcfg
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                              7     4      3     623
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _measureVoltages                                     40    38      2   33522
                                             69 BANK1      6     4      2
                                              0 BANK2     34    34      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                      _LTC6804_wrcfg
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _LTC6804_rdcv                                        29    27      2   11880
                                             27 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv_reg                                    12    10      2    4856
                                             15 BANK0     12    10      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                      12     8      4    1889
                                              6 COMMON     4     0      4
                                              0 BANK0      8     8      0
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_read                                             3     3      0      65
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     711
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _LTC6804_adcv                                         7     7      0    1990
                                             15 BANK0      7     7      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (1) _getTemps                                            11     9      2   12049
                                             40 BANK1     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                        8     6      2   11246
                                             32 BANK1      8     6      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     787
                                             21 BANK1     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCurrent                                           8     4      4   14806
                                             65 BANK1      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (2) _calculateCurrent                                    12     8      4   13679
                                             53 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    6593
                                             50 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _adcRead                                             16    14      2     133
                                              2 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _cellBalancing                                       14    12      2   14141
                                             69 BANK1      4     2      2
                                              0 BANK2     10    10      0
                      _LTC6804_wrcfg
                            ___fladd
                             ___flge
                       _setDischarge
 ---------------------------------------------------------------------------------
 (2) _setDischarge                                         4     1      3     583
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2786
                                             53 BANK1     16     8      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _LTC6804_wrcfg                                       26    24      2    5958
                                             15 BANK0     26    24      2
                             ___wmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (4) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _spi_write_array                                      4     3      1     434
                                              5 COMMON     4     3      1
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_write                                            3     3      0      34
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _pec15_calc                                          17    15      2    1343
                                              8 COMMON     2     0      2
                                              0 BANK0     15    15      0
                             ___bmul (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2946
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _avgBuff                                             13     9      4    8181
                                             53 BANK1     13     9      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     926
                                              4 COMMON     4     4      0
                                             14 BANK0     10     6      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2695
                                             24 BANK0     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    4202
                                             29 BANK1     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                        _uartDisable
 ---------------------------------------------------------------------------------
 (8) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fladd (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   _avgBuff
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _cellBalancing
     _LTC6804_wrcfg
       ___wmul
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _setDischarge
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
   _measureVoltages
     _LTC6804_adcv
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdcv
       _LTC6804_rdcv_reg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
           ___wmul (ARG)
         _spi_write_read
           ___bmul (ARG)
           _spi_read (ARG)
           _spi_write (ARG)
         _wakeup_idle
       ___bmul
       ___wmul
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
     _LTC6804_wrcfg
       ___wmul
       _pec15_calc
         ___bmul (ARG)
         ___wmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _setup
     _LTC6804_initialize
       _LTC6804_wrcfg
         ___wmul
         _pec15_calc
           ___bmul (ARG)
           ___wmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _set_adc
     _adcSetup
     _i2cSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _sumVoltages
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeVoltages
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flneg
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable

 _ISR (ROOT)
   _uartDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4B      4D       9       96.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      4      44      11       85.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      48      13       90.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     207      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      32      16       62.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     207      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Apr 11 21:02:20 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003B  
                         ___fldiv@aexp 0051                           ___fldiv@bexp 0050  
                                    _j 01B4                                      _k 01B2  
                                    _n 01B6                                      _z 007A  
                                    pc 0002                           ___fldiv@sign 0045  
                       ___bmul@product 0074                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0214                           ___awdiv@sign 0025  
                                   _t0 3159                         ?_LTC6804_wrcfg 002F  
                  ___wmul@multiplicand 0074                        writeTemps@temps 0145  
                  __Umul8_16@word_mpld 0022                                    l106 1D83  
                                  l203 21BD                                    l109 1DB7  
             writeValuesToUart@current 0161                                    l207 2FC1  
                                  l253 130F                                    l262 13E3  
                                  l271 2C5D                                    l265 1464  
                                  l258 13BE                                    l291 2D44  
                                  l283 20C3                                    l277 2071  
                                  l630 26FA                                    l295 2D59  
                                  l279 20A6                                    l661 1F51  
                                  l573 2739                                    l654 1E91  
                                  l842 08D3                                    l917 0F0F  
                                  l790 2B3E                                    l865 0AB8  
                                  l857 096C                                    l796 2B54  
                                  _PR2 001B                           __CFG_CPD$OFF 0000  
                                  _ISR 0004                                    _SOC 01AA  
              __end_of_measureVoltages 2800                                    _cmd 01C6  
                                  _str 02A0                      SSD1306_Test@F7528 01D8  
                          _sumVoltages 2EB5                           ___awmod@sign 0078  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                         __CFG_FOSC$HS 0000                           ___flmul@aexp 0060  
                         ___flmul@bexp 0065                           ___flmul@sign 005F  
                         ___flmul@temp 006A                           ___flmul@prod 0066  
                                 S8706 2000                           __CFG_LVP$OFF 0000  
                                 ?_ISR 0070                           ___fltol@exp1 00BF  
                                 l1023 1C09                                   l1204 254D  
                                 l1302 0649                                   l1152 258E  
                                 l1306 06E1                                   l1410 05EF  
                                 l1162 2612                                   l1323 0779  
                                 l1308 06C4                                   l1430 23C4  
                                 l1431 23CE                                   l1423 23B0  
                                 l1167 0820                                   l1344 07F0  
                                 l1336 07D8                                   l1417 237A  
                                 l1186 2134                                   l1194 24D4  
                                 l1380 15D9                                   l1436 2C32  
                                 l1382 15E6                                   l1358 14B1  
                                 l1379 15C1                                   l7100 2529  
                                 l7110 2550                                   l7102 2537  
                                 l7006 17C6                                   l7022 019B  
                                 l7200 083A                                   l7120 2574  
                                 l7040 032B                                   l7032 0240  
                                 l7204 0863                                   l8100 1F34  
                                 l7300 2E0D                                   l7108 2544  
                                 l7028 021A                                   l8012 1390  
                                 l7142 25D3                                   l7134 25B3  
                                 l7046 03AA                                   l7320 2372  
                                 l7208 088C                                   l8200 26B8  
                                 l8104 1F3E                                   l7304 2E18  
                                 l7160 2609                                   l7152 25EE  
                                 l6600 2E59                                   l7400 0967  
                                 l8008 1356                                   l7330 238D  
                                 l8210 26D3                                   l6506 2C2C  
                                 l7250 2110                                   l7234 20E2  
                                 l7162 2615                                   l7154 25FC  
                                 l7090 250F                                   l7082 24F5  
                                 l7058 2B75                                   l8018 13C7  
                                 l7340 23BE                                   l7332 239D  
                                 l8212 26DA                                   l8204 26C2  
                                 l8220 26EB                                   l7260 2137  
                                 l7252 211E                                   l8140 1FFE  
                                 l8108 1F43                                   l7068 24BC  
                                 l6540 2F1D                                   l6604 2E61  
                                 l7500 0C5A                                   l8036 20AF  
                                 l6622 0616                                   l7326 2389  
                                 l8206 26C9                                   l8150 2629  
                                 l8310 21B7                                   l7182 2B79  
                                 l8118 1F5E                                   l7270 2F6A  
                                 l6550 2F25                                   l6534 2F12  
                                 l7414 099E                                   l7406 096E  
                                 l6720 0703                                   l6712 06EF  
                                 l6704 06DC                                   l7168 1C03  
                                 l8216 26E4                                   l8152 2630  
                                 l8312 216A                                   l8136 1FF4  
                                 l8128 1FB3                                   l7280 2F98  
                                 l7272 2F78                                   l6552 2F31  
                                 l7600 0EAD                                   l7440 0A2E  
                                 l7424 09E2                                   l7408 098E  
                                 l6722 0705                                   l6730 0714  
                                 l6650 0641                                   l6626 0619  
                                 l7354 23E9                                   l7338 23B5  
                                 l8170 2663                                   l8162 264B  
                                 l8146 261F                                   l7258 212B  
                                 l7186 2B7F                                   l8082 1E9E  
                                 l6562 2F4C                                   l7514 0C72  
                                 l7522 0CA0                                   l8402 1DC7  
                                 _ADAX 01C9                                   l6740 0771  
                                 l6628 0621                                   l8180 267E  
                                 l8164 2652                                   l8156 263A  
                                 l8332 1C84                                   l6900 056E  
                                 l6820 03F4                                   l8092 1EF3  
                                 l7284 2FA3                                   l7612 0EE0  
                                 l7540 0D23                                   l7516 0C8F  
                                 l7372 08DA                                   l8420 1E30  
                                 _ADCV 01CB                                   l6646 063E  
                                 l7710 2416                                   l8182 2685  
                                 l8174 266D                                   l8158 2641  
                                 l8334 1C2C                                   l6910 0587  
                                 l7294 2DE7                                   l6566 2F54  
                                 l6558 2F43                                   l6590 2E38  
                                 l6582 2E32                                   l7630 0F36  
                                 l7606 0EB3                                   l7462 0B34  
                                 l7454 0AFC                                   l7374 08E4  
                                 l7366 08CE                                   l6656 0653  
                                 l8360 220F                                   l8192 26A0  
                                 l8176 2674                                   l8168 265C  
                                 l8344 1C8D                                   l8336 1C8A  
                                 l6920 05B0                                   l6816 03EA  
                                 l7296 2DF5                                   l6592 2E44  
                                 l7632 0F39                                   l7624 0F22  
                                 l7616 0EF7                                   l7560 0D6B  
                                 l7552 0D4E                                   l7480 0BFC  
                                 l7448 0A96                                   l6762 079F  
                                 l7802 1485                                   l8194 26A7  
                                 l8186 268F                                   l8346 1CF3  
                                 l6930 05DC                                   l6834 040D  
                                 l6818 03EC                                   l8290 2EFD  
                                 l6578 2E2B                                   l7546 0D34  
                                 l7538 0CC3                                   l7466 0B53  
                                 l7378 08F1                                   l7386 0922  
                                 l8418 1E2D                                   l6772 07AA  
                                 l6756 0798                                   l6748 078B  
                                 l6764 07A1                                   l7900 15A9  
                                 l7804 148D                                   l7724 2456  
                                 l7716 241F                                   l8188 2696  
                                 l6924 05C5                                   l6908 0585  
                                 l6836 040F                                   l8276 27FA  
                                 l6596 2E50                                   l7636 0F55  
                                 l7492 0C2F                                   l7476 0B91  
                      spi_write_read@i 0026                                   l6774 07AC  
                                 l6694 06CC                                   l6686 068F  
                                 l7822 14A9                                   l8358 21D3  
                                 l8198 26B1                                   l6846 0425  
                                 l6838 0417                                   l7662 0F9D  
                                 l7646 0F70                                   l7654 0F85  
                                 l7638 0F58                                   l7582 0E75  
                                 l7486 0C02                                   l7398 0935  
                                 l8390 1D52                                   l6792 07E8  
                                 l6696 06CE                                   l6952 2E6D  
                                 l7736 2493                                   l8704 26F0  
                                 l7752 201F                                   l8288 2EC1  
                                 l7656 0F89                                   l7576 0E65  
                                 l7496 0C4C                                   l7584 0E7A  
                                 l7914 15E2                                   l7834 14E0  
                                 l7818 14A6                                   l6954 2EB0  
                                 l6970 2BD1                                   l7770 2034  
                                 l7674 0FB3                                   l7594 0E9F  
                                 l8394 1D7E                                   l8378 1D12  
                                 l6796 07EC                                   l7860 1545  
                                 l7828 14CC                                   l6980 2D02  
                                 l7764 202B                                   l7676 08A5  
                                 l8396 1D95                                   l7854 152C  
                                 l7862 150E                                   l7758 2025  
                                 l7678 0FFA                                   l7880 1567  
                                 l7864 154A                      spi_write@readData 0073  
                                 l7890 1580                                   l6898 0557  
                                 l6986 2D03                                   l6978 2CEE  
                                 l7878 1550                                   l7798 1482  
                                 l6998 1716                                   l7888 157E  
                                 l7996 2D26                                   l7998 2D4D  
                                 STR_1 3136                                   STR_2 30E9  
                                 STR_3 30C3                                   STR_4 3114  
                                 STR_5 3127                                   STR_6 3100  
                                 STR_7 3150                                   STR_8 3145  
                                 u9105 0520                                   u9115 0537  
                                 u9125 0546                                   u9135 055A  
                                 u8415 2F28                                   u8345 2C33  
                                 u9225 059E                                   u9235 05B9  
                                 u9155 0563                                   u8435 2F32  
                                 u8515 2E3B                                   u9245 05CF  
                                 u9085 049B                                   u8445 2F3C  
                                 u9095 04CA                                   u8455 2F44  
                                 u8535 2E4A                                   u9265 2E83  
                                 u9425 24F6                                   u8545 2E51  
                                 u8715 06D2                                   u9515 2545  
                                 u9435 2506                                   u9445 2510  
                                 u8670 06B3                                   u9615 25EF  
                                 u8680 06B4                                   u8665 06A8  
                                 u8835 078C                                   u9555 25B4  
                                 u9645 260A                                   u9565 25C8  
                                 u9485 252A                                   u8935 07C3  
                                 u9575 25D4                                   u8793 0726  
                                 u8785 0709                                   u9825 2111  
                                 u9675 1C0A                                   u9915 2F79  
                                 u9685 1C0F                                   u9925 2F8D  
                                 u9855 212C                                   u9935 2F99  
                                 u9795 20EB                                   u9965 2DEA  
                                 u9895 2F6D                                   u9985 2E03  
                                 u9995 2E0E                                   _WPUD 020F  
                                 _Beta 315F                           __CFG_WRT$OFF 0000  
               __end_of_spi_write_read 2D21                          __CFG_FCMEN$ON 0000  
                                 _main 1CFC                                   _temp 01A0  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                           spi_read@data 0073  
                        __CFG_BOREN$ON 0000                                   start 0075  
                        __CFG_IESO$OFF 0000                        ___fldiv@new_exp 004A  
                         _sprintf$2151 0126                    cellBalancing@i_1293 0127  
                       ??_LTC6804_adcv 002F                      ___bmul@multiplier 0075  
                         _totalVoltage 01C2                          __CFG_MCLRE$ON 0000  
                       ??_LTC6804_rdcv 003D                         writeVoltages@k 0154  
                                ??_ISR 0070                      ?_LTC6804_rdcv_reg 002F  
                        __CFG_PLLEN$ON 0000                       spi_write_array@i 0078  
                        ___fltol@sign1 00BE        writeValuesToUart@temperatureArr 015C  
           __size_of_writeValuesToUart 0033                        __end_of___fladd 07F8  
                                ?_main 0070                        __end_of___fldiv 15F7  
                      __end_of_adcRead 3000                        __end_of___awdiv 2F59  
                      __end_of___flneg 2B3A                          __CFG_WDTE$OFF 0000  
                      __end_of___awmod 2E66                     ??_LTC6804_rdcv_reg 0031  
                      __end_of___flmul 05FC                        __end_of___flsub 2C21  
                      __end_of___fltol 2146                        __end_of___lldiv 2FAC  
                                u10125 23D6                                  u10045 2396  
                                u11015 155C                                  u11105 15CB  
                                u10065 23AA                                  u10315 0B32  
                                u10085 23B8                                  u10405 0C7B  
                                u11205 135A                                  u11135 2FDA  
                                u10415 0CAA                                  u11215 1372  
                                u10345 0C25                                  u10275 0AC2  
                                u11155 2D36                                  u11315 207F  
                                u11235 13A3                        ___awdiv@divisor 0020  
                                u11085 1597                                  u10605 0F2E  
                                u10445 0D3D                                  u10285 0B06  
                                u11095 15B2                                  u10615 0F48  
                                u10535 0ED6                                  u10455 0D49  
                                u11255 1319                                  u11175 131F  
                      __end_of___llmod 2E21                                  u11185 1337  
                                u12217 1D08                                  u10715 23F7  
                                u11435 1FEE                                  u12227 272A  
                                u10555 0EEF                                  u11275 13EA  
                                u12237 2FBC                                  u11605 275B  
                                u10565 0F07                                  u11285 1402  
                                u12247 2B2B                                  u11615 27A3  
                                _T2CON 001C                                  u11705 1C3F  
                                u11385 1F2E                                  u11625 27BE  
                                u11570 270E                                  u11580 271C  
                                u10925 1516                                  u11725 1C6E  
                                u11645 27E5                                  u10765 2DAB  
                                u11805 1D7C                                  u10935 151D  
                                u11735 1C38                                  u10775 2DB6  
                                u11815 1D93                                  u11745 1CA0  
                                u10785 2DCF                                  u11665 2ED1  
                                u10955 1526                                  u11755 1C99  
                                u11675 2ECB                                  u11835 1DC3  
                                u10965 153A                                  u11765 21E3  
                                u11685 21A9                                  u11775 21DD  
                                u11695 2174                                  u11855 1DE3  
                                u11865 1E03                                  u11785 1D50  
                                u10995 1553                                  u11795 1D66  
                                i1l145 0070                        ___awdiv@counter 0024  
                                _TXREG 019A              LTC6804_wrcfg@current_byte 0046  
                      __end_of_avgBuff 224C                __end_of_spi_write_array 2BE4  
                   writeVoltages@volts 0153                        __end_of_dpowers 30C2  
                                _scale 00AB                        __end_of_isdigit 2B77  
                                _temps 01B8                                  _setup 2C61  
                                main@i 01E2                        __end_of_set_adc 2DDE  
                  clearScreen@numLines 0141                        ?_spi_write_read 0076  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 1000            LTC6804_rdcv@current_ic_1329 0054  
                __size_of_writeCurrent 0020                           __end_of_Beta 3161  
                 __size_of_clearScreen 003C                        __initialization 0077  
                         __end_of_main 1E75                        ??_LTC6804_wrcfg 0031  
                     __end_of_i2cSetup 2BAA                     writeTemps@numTemps 0143  
                       __CFG_LPBOR$OFF 0000                       __end_of_OledFont 1300  
                               ??_main 0168                           adcRead@total 002C  
                    ?_calculateCurrent 00D5                         set_adc@md_bits 0078  
                     ?_measureVoltages 00E5                   __size_of__tdiv_to_l_ 00B6  
                 cellBalancing@boolean 0120                     ??_calculateCurrent 007A  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 3165       writeValuesToUart@temperatureHigh 015F  
                  pec15_calc@remainder 002D                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                     ___llmod@dividend 002A                                 ?_scale 006C  
                               _ADRESH 009C                                 _ADRESL 009B  
                     ___awdiv@dividend 0022  writeValuesToUart@temperatureArrLength 015D  
                               ?_setup 0070                       __end_of_adcSetup 2C02  
                         _writeCurrent 2C41                                 _ANSELA 018C  
                               _ANSELB 018D                                 _ANSELD 018F  
                               i1l6060 003A                                 i1l6070 0048  
                               i1l6054 0027                                 i1l6062 003B  
                               i1l6080 0063                                 i1l6084 0068  
                               u790_25 0031                                 _SPBRGH 019C  
                               _SPBRGL 019B                                 u789_25 001A  
              LTC6804_rdaux@BYT_IN_REG 3165                                 _SSPADD 0212  
                               _SSPBUF 0211                       __end_of___xxtofl 23F2  
                  writeVoltages@length 0141                         __CFG_PWRTE$OFF 0000  
                         ?_uartDisable 0070                       __end_of_getTemps 21C5  
                     __end_of__powers_ 3034       __end_ofLTC6804_rdaux_reg@REG_LEN 3164  
                               ___flge 0805                                 ___bmul 2B77  
                         ?_timer0Setup 0070                     _writeVoltages$2147 014B  
                            ??___fladd 00C5                                 ___wmul 1C01  
                            ??___fldiv 0040                              ??_adcRead 0020  
                            ??___awdiv 0079                           ?_timer2Setup 0070  
                            ??___flneg 0076                         __CFG_STVREN$ON 0000  
                            ??___awmod 0076                              ??___flmul 005A  
                            ??___flsub 007A                              ??___fltol 00B9  
                            ??___lldiv 0020                          main@numFaults 01E0  
                            ??___llmod 002E                                 _fround 15F7  
                     ___awdiv@quotient 0026                        ___awmod@divisor 0072  
                            ??_avgBuff 00D9                        ___awmod@counter 0077  
                         ?_wakeup_idle 0070                       getTemps@numTemps 00C8  
                            ??_isdigit 0072                     __size_of__Umul8_16 0020  
                     __end_of_spiSetup 2BBC                              ??_set_adc 0075  
                     ?_spi_write_array 0075                       __end_of_spi_read 2B5C  
                 __end_of_LTC6804_adcv 2CB8         __end_ofLTC6804_rdcv@BYT_IN_REG 316A  
                 __end_of_LTC6804_rdcv 2000                              ??_sprintf 0120  
                LTC6804_wrcfg@total_ic 0043                             ___flge@ff1 00D5  
                           ___flge@ff2 00D9                           sumVoltages@i 00E0  
                         ___xxtofl@arg 0034                           ___xxtofl@exp 0033  
                         ___xxtofl@val 002E                __end_of__initialization 00A7  
                        spi_write@data 0074                             ___flneg@f1 0072  
                calculateTemp@adcValue 00C0                             ___fltol@f1 00B5  
              LTC6804_rdaux@NUM_RX_BYT 3166                    ___bmul@multiplicand 0072  
      __end_ofLTC6804_rdcv@CELL_IN_REG 3169                      ltc6804@crc15Table 1800  
                           _crc15Table 1A00                         __pcstackCOMMON 0070  
                         __pidataBANK3 2BBC                          __end_of_scale 03D0  
                        __end_of_setup 2C87                     _LTC6804_initialize 2B88  
               __size_of_writeVoltages 0161                         cellBalancing@i 0125  
                           __end_of_t0 315D                          ?_setDischarge 0072  
                           __div_to_l_ 2559                           ?_sumVoltages 00D5  
                  ?_LTC6804_initialize 0049                          adcRead@ansLow 002A  
                      __div_to_l_@exp1 002A                        __div_to_l_@cntr 0029  
                              ??_scale 00A0                        __div_to_l_@quot 0025  
                         sprintf@width 0137                                ??_setup 007A  
                           __pbssBANK2 016B                             __pbssBANK3 01A0  
                           __pbssBANK4 0220                             __pbssBANK5 02A0  
                           __pbssBANK6 0320                              ?_i2cSetup 0070  
       __end_ofLTC6804_rdcv@NUM_RX_BYT 30C3               LTC6804_rdaux@GPIO_IN_REG 3164  
                      __CFG_VCAPEN$OFF 0000              __end_ofltc6804@crc15Table 1A00  
                           _pec15_calc 2E66                          __div_to_l_@f1 0072  
                        __div_to_l_@f2 0076                    writeCurrent@current 0141  
                 ??_LTC6804_initialize 007A                      __end_of__Umul8_16 2C41  
                   spi_write_array@len 0077                             __pmaintext 1CFC  
              cellBalancing@minVoltage 0121                                ?___flge 00D5  
                              ?___bmul 0072                 __size_of_cellBalancing 00E0  
               LTC6804_rdcv@cell_codes 003C                                ?___wmul 0072  
                           __pintentry 0004               LTC6804_rdcv@data_counter 0057  
                           _getCurrent 2D5D                                _CCP2CON 029A  
    writeValuesToUart@voltageArrLength 0156                                ?_fround 006C  
                            ?_adcSetup 0070                       LTC6804_wrcfg@cmd 0036  
                       ??_setDischarge 0075               LTC6804_rdaux_reg@REG_LEN 3163  
                   __size_of_uartSetup 000D                 __size_of_calculateTemp 0087  
                            ?___xxtofl 002E                  cellBalancing@voltages 0129  
               measureVoltages@ltcData 0120                     __size_of_spi_write 000B  
                     ??_spi_write_read 0020                                _SSP1BUF 0211  
                            ?_getTemps 00C8                                _SSPCON1 0215  
                              _SSPSTAT 0214              __size_of_LTC6804_rdcv_reg 0055  
                           ??_i2cSetup 0072                          _writeVoltages 1307  
                 spi_write_read@i_1411 0027                   writeVoltages@maxCell 014F  
                 writeVoltages@minCell 0151                      __end_of__npowers_ 3068  
               LTC6804_wrcfg@cmd_index 0048                             _scale$2150 00B0  
                            ?_spiSetup 0070                   __size_of_uartDisable 0003  
                      __size_of___flge 009A                        __size_of___bmul 0011  
                            ?_spi_read 0070                                ___fladd 05FC  
                 spi_write_read@rx_len 0079                                ___fldiv 1468  
                              _adcRead 2FAC                                ___awdiv 2F07  
                              ___flneg 2B31                                ___awmod 2E21  
                              ___flmul 03D0                   spi_write_read@tx_len 0076  
                              ___flsub 2C02                                ___fltol 20C7  
                              ___lldiv 2F59                        __size_of___wmul 001B  
                              ___llmod 2DDE              writeVoltages@totalVoltage 0143  
                           _minVoltage 01A8                   __size_of_timer0Setup 0005  
                           ??_adcSetup 0072                   __size_of_timer2Setup 000B  
                      __size_of_fround 0209                                _avgBuff 21C5  
                              __ptext1 2CB8                                __ptext2 1307  
                              __ptext3 206D                                __ptext4 2C41  
                              __ptext5 2D21                                __ptext6 2B1F  
                              __ptext7 089F                                __ptext8 00AB  
                              __ptext9 2B69                  __size_of_LTC6804_adcv 0031  
          writeValuesToUart@voltageArr 0167                           __size_of_ISR 0071  
                          ?__div_to_l_ 0072                  __size_of_LTC6804_rdcv 018B  
                              _dpowers 309A                                _current 01A4  
                              _isdigit 2B69                             ??___xxtofl 0074  
                     ___awmod@dividend 0074                   __size_of_wakeup_idle 0009  
               LTC6804_rdcv@current_ic 0052                                _set_adc 2D9B  
                        _cellBalancing 1C1C                             ??_getTemps 00CA  
                              _sprintf 089F                                clrloop0 1302  
                           avgBuff@inc 00E0                   end_of_initialization 00A7  
                       ?_writeVoltages 0141        __end_ofLTC6804_rdcv_reg@REG_LEN 3168  
                              init_ram 07F8                                initloop 07F9  
            __size_of_calculateCurrent 0089                          ??_clearScreen 0143  
                        pec15_calc@len 0029                            ?_pec15_calc 0078  
                    __end_of_uartSetup 2B69                          _calculateTemp 224C  
             calculateCurrent@adcValue 00D5                        ___lldiv@divisor 0072  
                      ___lldiv@counter 0025                             _uartEnable 2B1F  
                 calculateCurrent@curr 00D9                             ??_spiSetup 0072  
                            _RCSTAbits 019D                      __end_of_spi_write 2B45  
                         _LTC6804_adcv 2C87                             ??_spi_read 0072  
                         _LTC6804_rdcv 1E75                         __tdiv_to_l_@f1 0072  
                       __tdiv_to_l_@f2 0076                            ?_getCurrent 00E1  
                __end_of_LTC6804_wrcfg 24A3                          ??__tdiv_to_l_ 0020  
                           _timerSetup 2B22                    LTC6804_rdcv_reg@cmd 0036  
                  LTC6804_rdcv_reg@reg 003A                            ___fladd@grs 00D4  
                        ___xxtofl@sign 0032                              _TRISAbits 008C  
                            _TRISBbits 008D                         ?_cellBalancing 00E5  
                            _TRISCbits 008E                              _TRISDbits 008F  
                 __size_of_sumVoltages 0052                            ___fldiv@grs 004C  
                          ___fldiv@rem 0046               __size_of_measureVoltages 0105  
                          ___flmul@grs 0061                   __end_of_setDischarge 26FB  
                       ?_calculateTemp 00C0                              _TXSTAbits 019E  
                  __size_of__div_to_l_ 00C5                       _balanceThreshold 315D  
                 LTC6804_wrcfg@CMD_LEN 0042                    __end_of_clearScreen 2D5D  
                       __end_of___flge 089F                         __end_of___bmul 2B88  
                           _writeTemps 206D                         __end_of___wmul 1C1C  
                       __end_of_fround 1800                    __size_of_pec15_calc 004F  
                  start_initialization 0077                            __end_of_ISR 0075  
                  __end_of__tdiv_to_l_ 2559                   measureVoltages@F7584 0220  
                 measureVoltages@F7587 01CD                        ??_writeVoltages 0147  
                     _LTC6804_rdcv_reg 2018                    __size_of_getCurrent 003E  
            measureVoltages@tempConfig 0138               __size_of_spi_write_array 0015  
                      ___llmod@divisor 0026                      __size_of_i2cSetup 0011  
                      ___llmod@counter 002F                    getTemps@highestTemp 00CE  
                 LTC6804_wrcfg@cfg_pec 0044                            _APFCON1bits 011D  
                       adcRead@ansHigh 0028                            ?_uartEnable 0070  
                             ??___flge 00DD                               ??___bmul 0073  
                             ??___wmul 0076                              __Umul8_16 2C21  
                          __pdataBANK3 01CD                               ??_fround 00A0  
                 getTemps@temperatures 00D0                        LTC6804_adcv@cmd 0030  
                          ?_timerSetup 0070                          sprintf@tmpval 012B  
                            ___fladd@a 00C1                              ___fladd@b 00BD  
                           fround@prec 00BC                        ??_cellBalancing 00E7  
                    __size_of_adcSetup 001E                              ___fldiv@a 0038  
                            ___fldiv@b 003C                              ___flmul@a 0056  
                            ___flmul@b 0052                            __pbssCOMMON 007A  
                            ___flsub@a 00D5                              ___flsub@b 00D9  
                  sumVoltages@voltages 00DB                              ___latbits 0003  
        writeValuesToUart@totalVoltage 0158                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          __pcstackBANK2 0120  
                        __pcstackBANK3 01E0                LTC6804_rdcv@CELL_IN_REG 3168  
                    __size_of___xxtofl 0096                           _isdigit$1757 0072  
                            adcRead@ch 0027                        ??_calculateTemp 00C2  
                    __size_of_getTemps 007F                           _currentIndex 016B  
                      LTC6804_rdcv@reg 0051                            sprintf@flag 0135  
                          sprintf@fval 0139                       _calculateCurrent 22D3  
                          sprintf@prec 013D                            _clearScreen 2D21  
                  spi_write_array@data 0075                   calculateTemp@voltage 00C4  
                    ??_measureVoltages 00E7            __size_of_LTC6804_initialize 0011  
                LTC6804_rdcv@cell_data 0042                               ?___fladd 00BD  
                             ?___fldiv 0038                               ?_adcRead 0072  
                             ?___awdiv 0020                               ?___flneg 0072  
                             ?___awmod 0072                               ?___flmul 0052  
                             ?___flsub 00D5                               ?___fltol 00B5  
                             ?___lldiv 0072                               ?___llmod 0026  
                            __npowers_ 3034                             ?__Umul8_16 0072  
                 __end_of_temperatures 309A      __end_ofLTC6804_rdcfg@BYTES_IN_REG 3162  
    __end_ofLTC6804_wrcfg@BYTES_IN_REG 3163                 getCurrent@currentValue 00E5  
                          ?_writeTemps 0141                      __size_of_spiSetup 0012  
                            _configReg 01DA                      setDischarge@index 0072  
                    __size_of_spi_read 000C                               ?_avgBuff 00D5  
                          __tdiv_to_l_ 24A3                              __pswtext1 2000  
                         ??__div_to_l_ 0020                             set_adc@CHG 0074  
                           set_adc@DCP 0072                               ?_isdigit 0070  
                             ?_set_adc 0072                    __size_of_uartEnable 0003  
                __size_of_setDischarge 00DD                               ?_sprintf 00E5  
                   __end_of_crc15Table 1C00                          ?_writeCurrent 0141  
                       __size_of_scale 0325                         __size_of_setup 0026  
                LTC6804_rdcv@pec_error 004A          LTC6804_rdcv@current_cell_1330 0055  
                       ___wmul@product 0076                    __size_of_timerSetup 0006  
                             _LATAbits 010C                               _LATBbits 010D  
                             _LATDbits 010F               LTC6804_rdcv@current_cell 0053  
                         ??_pec15_calc 0020                              clear_ram0 1301  
                  setDischarge@boolean 0074                               _PIE1bits 0091  
                             _PIE2bits 0092                          ??_uartDisable 0070  
              measureVoltages@pecError 013E                               _PIR1bits 0011  
                   __end_of__div_to_l_ 261E                               _PIR2bits 0012  
                            _uartSetup 2B5C                      ??_spi_write_array 0076  
                        ??_timer0Setup 0072                          ??_timer2Setup 0072  
                             _SSP1CON1 0215                           ??_getCurrent 007A  
                          _highestTemp 01AC                              _spi_write 2B3A  
                          writeTemps@k 0146                          ??_wakeup_idle 0072  
                           _ADCON0bits 009D                      ___wmul@multiplier 0072  
                         _setDischarge 261E                     __end_of_pec15_calc 2EB5  
                         clearScreen@j 0146               __end_of_balanceThreshold 315F  
              measureVoltages@voltages 013F                         ??_writeCurrent 007A  
                         avgBuff@total 00DC                               _i2cSetup 2B99  
           measureVoltages@numVoltages 00E5                    __size_of_writeTemps 005A  
             cellBalancing@numVoltages 00E5                     __end_of_getCurrent 2D9B  
                     measureVoltages@i 0140               LTC6804_rdcv@received_pec 004D  
                             _OledFont 1000               LTC6804_rdcv_reg@total_ic 002F  
              __size_of_spi_write_read 0036                    LTC6804_wrcfg@config 002F  
                           ?_uartSetup 0070                            ??__Umul8_16 0074  
             __end_of_LTC6804_rdcv_reg 206D                  spi_write_read@tx_Data 0025  
                     __size_of___fladd 01FC                       __size_of___fldiv 018F  
                     __size_of_adcRead 0054                       __size_of___awdiv 0052  
                     __size_of___flneg 0009                    __end_of_uartDisable 2B1F  
                     __size_of___awmod 0045                  spi_write_read@rx_data 0077  
                     __size_of___flmul 022C                       __size_of___flsub 001F  
                     __size_of___fltol 007F                       __size_of___lldiv 0053  
                     __size_of___llmod 0043                               _adcSetup 2BE4  
                           ?_spi_write 0070        __end_ofLTC6804_rdaux@BYT_IN_REG 3166  
                          _fround$2148 00B8                            _fround$2149 00B4  
              LTC6804_rdcv_reg@REG_LEN 3167                       __size_of_avgBuff 0087  
                  __end_of_timer0Setup 0805                    __end_of_timer2Setup 2B50  
                          _currentBuff 0320                            _currentBool 01AE  
                        ??_sumVoltages 00D9                           _tempChannels 01D3  
                           sprintf@exp 0133                             sprintf@val 012F  
                             ___xxtofl 235C                       __size_of_isdigit 000E  
                 LTC6804_rdcv@data_pec 004F                   LTC6804_rdcv@cell_reg 0056  
                  __end_of_wakeup_idle 2B31                       __size_of_set_adc 0043  
                             __ptext10 15F7                               __ptext11 2E21  
                             __ptext20 2C61                               __ptext12 2F07  
                             __ptext21 2B5C                               __ptext13 24A3  
                             __ptext30 26FB                               __ptext22 2B22  
                             __ptext14 2559                               __ptext31 1E75  
                             __ptext23 2B45                               __ptext15 2DDE  
                             __ptext40 2D5D                               __ptext32 2018  
                             __ptext24 0800                               __ptext16 2F59  
                             __ptext41 22D3                               __ptext33 2CEB  
                             __ptext25 2BAA                               __ptext17 2C02  
                             __ptext50 2BCF                               __ptext42 03D0  
                             __ptext34 2B50                               __ptext26 2B99  
                             __ptext18 2B31                               __ptext51 2B3A  
                             __ptext43 2C21                               __ptext35 2B77  
                             __ptext27 2BE4                               __ptext19 2EB5  
                             __ptext52 2E66                               __ptext44 2FAC  
                             __ptext36 2C87                               __ptext28 2B88  
                             __ptext53 1C01                               __ptext45 1C1C  
                             __ptext37 2146                               __ptext29 2D9B  
                             __ptext54 21C5                               __ptext46 261E  
                             __ptext38 224C                               __ptext55 235C  
                             __ptext47 0805                               __ptext39 20C7  
                             __ptext56 1468                               __ptext48 23F2  
                             __ptext57 05FC                               __ptext49 2B28  
                             __ptext59 2B1C                               _getTemps 2146  
                         _SSP1CON1bits 0215                           _SSP1CON3bits 0217  
                             __powers_ 3000                    LTC6804_adcv@cmd_pec 0034  
                     __size_of_sprintf 0761                              set_adc@CH 0073  
                            set_adc@MD 0077                 __size_of_LTC6804_wrcfg 00B1  
                        __size_of_main 0179                           ??_uartEnable 0072  
                          pec15_calc@i 002C                               _uartBool 01B0  
                             _spiSetup 2BAA                LTC6804_rdcv_reg@cmd_pec 0034  
                             _spi_read 2B50                               int$flags 007E  
              LTC6804_wrcfg@current_ic 0047                  _calculateCurrent$2146 00DD  
                         _SSP1STATbits 0214                           ??_timerSetup 0072  
                 LTC6804_rdcv@total_ic 003B                               _voltages 0238  
           writeValuesToUart@uartLines 0165                            avgBuff@buff 00DB  
             __end_of_calculateCurrent 235C                            avgBuff@size 00D5  
      __end_ofLTC6804_rdaux@NUM_RX_BYT 3167                      _writeValuesToUart 2CB8  
                           _INTCONbits 000B                         __pstringtext10 315F  
                       __pstringtext11 3161                         __pstringtext20 30C2  
                       __pstringtext12 3162                         __pstringtext21 30E9  
                       __pstringtext13 3163                         __pstringtext22 3100  
                       __pstringtext14 3164                         __pstringtext23 3114  
                       __pstringtext15 3165                         __pstringtext24 3127  
                       __pstringtext16 3166                         __pstringtext25 3136  
                       __pstringtext17 3167                         __pstringtext26 3145  
                       __pstringtext18 3168                         __pstringtext27 3150  
                       __pstringtext19 3169                         __pstringtext28 0000  
                   ?_writeValuesToUart 0156                               isdigit@c 0073  
              LTC6804_rdcv@parsed_cell 004B                       spi_read@readData 0074  
                             scale@scl 00B4                     __end_of_uartEnable 2B22  
                      _measureVoltages 26FB                         pec15_calc@addr 002A  
                       pec15_calc@data 0078                    __end_of_sumVoltages 2F07  
                __end_of_writeVoltages 1468                               intlevel1 0000  
                         _temperatures 3068                              sprintf@ap 012A  
                     __tdiv_to_l_@exp1 0029                       __tdiv_to_l_@cntr 0028  
                            sprintf@sp 013F                       __tdiv_to_l_@quot 0024  
               sumVoltages@numVoltages 00D5                    ??_writeValuesToUart 007A  
                     ___lldiv@dividend 0076                 LTC6804_rdcv@BYT_IN_REG 3169  
                    __CFG_CLKOUTEN$OFF 0000                     __end_of_timerSetup 2B28  
                         ?_clearScreen 0141                            _uartDisable 2B1C  
                          ??_uartSetup 0072                            _timer0Setup 0800  
                 __end_of_writeCurrent 2C61                            _timer2Setup 2B45  
                writeTemps@highestTemp 0141                           ??_writeTemps 00EF  
                          ??_spi_write 0072                          _LTC6804_wrcfg 23F2  
                         ?__tdiv_to_l_ 0072                          __pstringtext1 1000  
                        __pstringtext2 1800                          __pstringtext3 1A00  
                        __pstringtext4 3000                          __pstringtext5 3034  
                        __pstringtext6 3068                          __pstringtext7 309A  
                        __pstringtext8 3159                          __pstringtext9 315D  
            __end_of_writeValuesToUart 2CEB                       sumVoltages@total 00DC  
                          _wakeup_idle 2B28                 __Umul8_16@multiplicand 0072  
                           _OPTION_REG 0095                               sprintf@c 0140  
                             sprintf@f 00E5                       ___lldiv@quotient 0021  
                __end_of_cellBalancing 1CFC                            _SSPCON2bits 0216  
            LTC6804_rdcfg@BYTES_IN_REG 3161              LTC6804_wrcfg@BYTES_IN_REG 3162  
                        ___fladd@signs 00D1                            getTemps@inc 00D1  
                      _spi_write_array 2BCF                   LTC6804_rdcv_reg@data 0030  
                         ___fladd@aexp 00D2                           ___fladd@bexp 00D3  
                __end_of_calculateTemp 22D3                     __end_of_writeTemps 20C7  
                 __Umul8_16@multiplier 0024             __end_of_LTC6804_initialize 2B99  
                       _spi_write_read 2CEB            LTC6804_initialize@configReg 0049  
               LTC6804_rdcv@NUM_RX_BYT 30C2                      __Umul8_16@product 0020  
