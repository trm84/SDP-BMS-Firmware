

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 19 10:34:49 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK5,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	stringtext28,global,class=STRCODE,delta=2
    33                           	psect	stringtext29,global,class=STRCODE,delta=2
    34                           	psect	stringtext30,global,class=STRCODE,delta=2
    35                           	psect	stringtext31,global,class=STRCODE,delta=2
    36                           	psect	cinit,global,class=CODE,merge=1,delta=2
    37                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    38                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    39                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    40                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    44                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    45                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    46                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    47                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    48                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    49                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    50                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    51                           	psect	text1,local,class=CODE,merge=1,delta=2
    52                           	psect	text2,local,class=CODE,merge=1,delta=2
    53                           	psect	text3,local,class=CODE,merge=1,delta=2
    54                           	psect	text4,local,class=CODE,merge=1,delta=2
    55                           	psect	text5,local,class=CODE,merge=1,delta=2
    56                           	psect	text6,local,class=CODE,merge=1,delta=2
    57                           	psect	text7,local,class=CODE,merge=1,delta=2
    58                           	psect	text8,local,class=CODE,merge=1,delta=2
    59                           	psect	text9,local,class=CODE,merge=1,delta=2
    60                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text11,local,class=CODE,merge=1,delta=2
    62                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    69                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    70                           	psect	text20,local,class=CODE,merge=1,delta=2
    71                           	psect	text21,local,class=CODE,merge=1,delta=2
    72                           	psect	text22,local,class=CODE,merge=1,delta=2
    73                           	psect	text23,local,class=CODE,merge=1,delta=2
    74                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    75                           	psect	text25,local,class=CODE,merge=1,delta=2
    76                           	psect	text26,local,class=CODE,merge=1,delta=2
    77                           	psect	text27,local,class=CODE,merge=1,delta=2
    78                           	psect	text28,local,class=CODE,merge=1,delta=2
    79                           	psect	text29,local,class=CODE,merge=1,delta=2
    80                           	psect	text30,local,class=CODE,merge=1,delta=2
    81                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text32,local,class=CODE,merge=1,delta=2
    83                           	psect	text33,local,class=CODE,merge=1,delta=2
    84                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text36,local,class=CODE,merge=1,delta=2
    87                           	psect	text37,local,class=CODE,merge=1,delta=2
    88                           	psect	text38,local,class=CODE,merge=1,delta=2
    89                           	psect	text39,local,class=CODE,merge=1,delta=2
    90                           	psect	text40,local,class=CODE,merge=1,delta=2
    91                           	psect	text41,local,class=CODE,merge=1,delta=2
    92                           	psect	text42,local,class=CODE,merge=1,delta=2
    93                           	psect	text43,local,class=CODE,merge=1,delta=2
    94                           	psect	text44,local,class=CODE,merge=1,delta=2
    95                           	psect	text45,local,class=CODE,merge=1,delta=2
    96                           	psect	text46,local,class=CODE,merge=1,delta=2
    97                           	psect	text47,local,class=CODE,merge=1,delta=2
    98                           	psect	text48,local,class=CODE,merge=1,delta=2
    99                           	psect	swtext1,local,class=CONST,delta=2
   100                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   101                           	psect	text50,local,class=CODE,merge=1,delta=2
   102                           	psect	text51,local,class=CODE,merge=1,delta=2
   103                           	psect	text52,local,class=CODE,merge=1,delta=2
   104                           	psect	text53,local,class=CODE,merge=1,delta=2
   105                           	psect	text54,local,class=CODE,merge=1,delta=2
   106                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text56,local,class=CODE,merge=1,delta=2
   108                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   109                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
   110                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
   111                           	psect	intentry,global,class=CODE,delta=2
   112                           	psect	text61,local,class=CODE,merge=1,delta=2
   113                           	psect	text8_split_1,local,class=CODE,merge=1,delta=2
   114                           	dabs	1,0xCA0,32
   115                           	dabs	1,0xC20,80
   116                           	dabs	1,0xBA0,80
   117                           	dabs	1,0xB20,80
   118                           	dabs	1,0xAA0,80
   119                           	dabs	1,0xA20,80
   120                           	dabs	1,0x9AC,68
   121                           	dabs	1,0x25FC,0,_str
   122                           	dabs	1,0x7E,2
   123  0000                     
   124                           ; Version 1.45
   125                           ; Generated 16/11/2017 GMT
   126                           ; 
   127                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC16F1789 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     	;# 
   159  0001                     	;# 
   160  0002                     	;# 
   161  0003                     	;# 
   162  0004                     	;# 
   163  0005                     	;# 
   164  0006                     	;# 
   165  0007                     	;# 
   166  0008                     	;# 
   167  0009                     	;# 
   168  000A                     	;# 
   169  000B                     	;# 
   170  000C                     	;# 
   171  000D                     	;# 
   172  000E                     	;# 
   173  000F                     	;# 
   174  0010                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0013                     	;# 
   178  0014                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0016                     	;# 
   182  0017                     	;# 
   183  0018                     	;# 
   184  0019                     	;# 
   185  001A                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  008C                     	;# 
   189  008D                     	;# 
   190  008E                     	;# 
   191  008F                     	;# 
   192  0090                     	;# 
   193  0091                     	;# 
   194  0092                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009B                     	;# 
   205  009C                     	;# 
   206  009D                     	;# 
   207  009E                     	;# 
   208  009F                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0110                     	;# 
   214  0111                     	;# 
   215  0112                     	;# 
   216  0113                     	;# 
   217  0114                     	;# 
   218  0115                     	;# 
   219  0116                     	;# 
   220  0117                     	;# 
   221  0118                     	;# 
   222  0119                     	;# 
   223  011A                     	;# 
   224  011B                     	;# 
   225  011C                     	;# 
   226  011D                     	;# 
   227  011D                     	;# 
   228  011D                     	;# 
   229  011E                     	;# 
   230  011F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  018E                     	;# 
   234  018F                     	;# 
   235  0190                     	;# 
   236  0191                     	;# 
   237  0191                     	;# 
   238  0192                     	;# 
   239  0193                     	;# 
   240  0193                     	;# 
   241  0193                     	;# 
   242  0194                     	;# 
   243  0195                     	;# 
   244  0196                     	;# 
   245  0197                     	;# 
   246  0199                     	;# 
   247  0199                     	;# 
   248  0199                     	;# 
   249  019A                     	;# 
   250  019A                     	;# 
   251  019A                     	;# 
   252  019B                     	;# 
   253  019B                     	;# 
   254  019B                     	;# 
   255  019B                     	;# 
   256  019B                     	;# 
   257  019C                     	;# 
   258  019C                     	;# 
   259  019C                     	;# 
   260  019D                     	;# 
   261  019D                     	;# 
   262  019D                     	;# 
   263  019E                     	;# 
   264  019E                     	;# 
   265  019E                     	;# 
   266  019F                     	;# 
   267  019F                     	;# 
   268  019F                     	;# 
   269  019F                     	;# 
   270  019F                     	;# 
   271  020C                     	;# 
   272  020D                     	;# 
   273  020E                     	;# 
   274  020F                     	;# 
   275  0210                     	;# 
   276  0211                     	;# 
   277  0211                     	;# 
   278  0212                     	;# 
   279  0212                     	;# 
   280  0213                     	;# 
   281  0213                     	;# 
   282  0214                     	;# 
   283  0214                     	;# 
   284  0215                     	;# 
   285  0215                     	;# 
   286  0215                     	;# 
   287  0215                     	;# 
   288  0216                     	;# 
   289  0216                     	;# 
   290  0217                     	;# 
   291  0217                     	;# 
   292  028C                     	;# 
   293  028D                     	;# 
   294  028E                     	;# 
   295  028F                     	;# 
   296  0290                     	;# 
   297  0291                     	;# 
   298  0291                     	;# 
   299  0292                     	;# 
   300  0293                     	;# 
   301  0298                     	;# 
   302  0298                     	;# 
   303  0299                     	;# 
   304  029A                     	;# 
   305  030C                     	;# 
   306  030D                     	;# 
   307  030E                     	;# 
   308  030F                     	;# 
   309  0310                     	;# 
   310  0311                     	;# 
   311  0311                     	;# 
   312  0312                     	;# 
   313  0313                     	;# 
   314  038C                     	;# 
   315  038D                     	;# 
   316  038E                     	;# 
   317  038F                     	;# 
   318  0390                     	;# 
   319  0391                     	;# 
   320  0392                     	;# 
   321  0393                     	;# 
   322  0394                     	;# 
   323  0395                     	;# 
   324  0396                     	;# 
   325  0397                     	;# 
   326  0398                     	;# 
   327  0399                     	;# 
   328  039D                     	;# 
   329  039E                     	;# 
   330  039F                     	;# 
   331  0511                     	;# 
   332  0513                     	;# 
   333  0515                     	;# 
   334  051A                     	;# 
   335  0591                     	;# 
   336  0592                     	;# 
   337  0592                     	;# 
   338  0593                     	;# 
   339  0594                     	;# 
   340  0594                     	;# 
   341  0595                     	;# 
   342  0596                     	;# 
   343  0596                     	;# 
   344  0E91                     	;# 
   345  0E92                     	;# 
   346  0E93                     	;# 
   347  0E94                     	;# 
   348  0E95                     	;# 
   349  0E96                     	;# 
   350  0E97                     	;# 
   351  0E98                     	;# 
   352  0E99                     	;# 
   353  0E9A                     	;# 
   354  0E9B                     	;# 
   355  0E9C                     	;# 
   356  0E9D                     	;# 
   357  0E9E                     	;# 
   358  0E9F                     	;# 
   359  0EA0                     	;# 
   360  0EA1                     	;# 
   361  0EA1                     	;# 
   362  0EA2                     	;# 
   363  0EA3                     	;# 
   364  0EA3                     	;# 
   365  0EA4                     	;# 
   366  0EA5                     	;# 
   367  0EA5                     	;# 
   368  0EA6                     	;# 
   369  0EA7                     	;# 
   370  0EA7                     	;# 
   371  0EA8                     	;# 
   372  0EA9                     	;# 
   373  0EAA                     	;# 
   374  0EAB                     	;# 
   375  0EAC                     	;# 
   376  0EAD                     	;# 
   377  0EAE                     	;# 
   378  0EAF                     	;# 
   379  0EB1                     	;# 
   380  0EB2                     	;# 
   381  0EB3                     	;# 
   382  0EB4                     	;# 
   383  0EB5                     	;# 
   384  0EB6                     	;# 
   385  0EB7                     	;# 
   386  0EB8                     	;# 
   387  0EB9                     	;# 
   388  0EBA                     	;# 
   389  0EBB                     	;# 
   390  0EBC                     	;# 
   391  0EBD                     	;# 
   392  0EBE                     	;# 
   393  0EBF                     	;# 
   394  0EC0                     	;# 
   395  0EC1                     	;# 
   396  0EC1                     	;# 
   397  0EC2                     	;# 
   398  0EC3                     	;# 
   399  0EC3                     	;# 
   400  0EC4                     	;# 
   401  0EC5                     	;# 
   402  0EC5                     	;# 
   403  0EC6                     	;# 
   404  0EC7                     	;# 
   405  0EC7                     	;# 
   406  0EC8                     	;# 
   407  0EC9                     	;# 
   408  0ECA                     	;# 
   409  0ECB                     	;# 
   410  0ECC                     	;# 
   411  0ECD                     	;# 
   412  0ECE                     	;# 
   413  0ECF                     	;# 
   414  0ED1                     	;# 
   415  0ED2                     	;# 
   416  0ED3                     	;# 
   417  0ED4                     	;# 
   418  0ED5                     	;# 
   419  0ED6                     	;# 
   420  0ED7                     	;# 
   421  0ED8                     	;# 
   422  0ED9                     	;# 
   423  0EDA                     	;# 
   424  0EDB                     	;# 
   425  0EDC                     	;# 
   426  0EDD                     	;# 
   427  0EDE                     	;# 
   428  0EDF                     	;# 
   429  0EE0                     	;# 
   430  0EE1                     	;# 
   431  0EE1                     	;# 
   432  0EE2                     	;# 
   433  0EE3                     	;# 
   434  0EE3                     	;# 
   435  0EE4                     	;# 
   436  0EE5                     	;# 
   437  0EE5                     	;# 
   438  0EE6                     	;# 
   439  0EE7                     	;# 
   440  0EE7                     	;# 
   441  0EE8                     	;# 
   442  0EE9                     	;# 
   443  0EEA                     	;# 
   444  0EEB                     	;# 
   445  0EEC                     	;# 
   446  0EED                     	;# 
   447  0EEE                     	;# 
   448  0EEF                     	;# 
   449  0F11                     	;# 
   450  0F12                     	;# 
   451  0F13                     	;# 
   452  0F14                     	;# 
   453  0F15                     	;# 
   454  0F16                     	;# 
   455  0F17                     	;# 
   456  0F18                     	;# 
   457  0F19                     	;# 
   458  0F1A                     	;# 
   459  0F1B                     	;# 
   460  0F1C                     	;# 
   461  0F1D                     	;# 
   462  0F1E                     	;# 
   463  0F1F                     	;# 
   464  0F20                     	;# 
   465  0F21                     	;# 
   466  0F21                     	;# 
   467  0F22                     	;# 
   468  0F23                     	;# 
   469  0F23                     	;# 
   470  0F24                     	;# 
   471  0F25                     	;# 
   472  0F25                     	;# 
   473  0F26                     	;# 
   474  0F27                     	;# 
   475  0F27                     	;# 
   476  0F28                     	;# 
   477  0F29                     	;# 
   478  0F2A                     	;# 
   479  0F2B                     	;# 
   480  0F2C                     	;# 
   481  0F2D                     	;# 
   482  0F2E                     	;# 
   483  0F2F                     	;# 
   484  0FE4                     	;# 
   485  0FE5                     	;# 
   486  0FE6                     	;# 
   487  0FE7                     	;# 
   488  0FE8                     	;# 
   489  0FE9                     	;# 
   490  0FEA                     	;# 
   491  0FEB                     	;# 
   492  0FED                     	;# 
   493  0FEE                     	;# 
   494  0FEF                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0008                     	;# 
   504  0009                     	;# 
   505  000A                     	;# 
   506  000B                     	;# 
   507  000C                     	;# 
   508  000D                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0016                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001B                     	;# 
   524  001C                     	;# 
   525  008C                     	;# 
   526  008D                     	;# 
   527  008E                     	;# 
   528  008F                     	;# 
   529  0090                     	;# 
   530  0091                     	;# 
   531  0092                     	;# 
   532  0093                     	;# 
   533  0094                     	;# 
   534  0095                     	;# 
   535  0096                     	;# 
   536  0097                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009A                     	;# 
   540  009B                     	;# 
   541  009B                     	;# 
   542  009C                     	;# 
   543  009D                     	;# 
   544  009E                     	;# 
   545  009F                     	;# 
   546  010C                     	;# 
   547  010D                     	;# 
   548  010E                     	;# 
   549  010F                     	;# 
   550  0110                     	;# 
   551  0111                     	;# 
   552  0112                     	;# 
   553  0113                     	;# 
   554  0114                     	;# 
   555  0115                     	;# 
   556  0116                     	;# 
   557  0117                     	;# 
   558  0118                     	;# 
   559  0119                     	;# 
   560  011A                     	;# 
   561  011B                     	;# 
   562  011C                     	;# 
   563  011D                     	;# 
   564  011D                     	;# 
   565  011D                     	;# 
   566  011E                     	;# 
   567  011F                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  018F                     	;# 
   572  0190                     	;# 
   573  0191                     	;# 
   574  0191                     	;# 
   575  0192                     	;# 
   576  0193                     	;# 
   577  0193                     	;# 
   578  0193                     	;# 
   579  0194                     	;# 
   580  0195                     	;# 
   581  0196                     	;# 
   582  0197                     	;# 
   583  0199                     	;# 
   584  0199                     	;# 
   585  0199                     	;# 
   586  019A                     	;# 
   587  019A                     	;# 
   588  019A                     	;# 
   589  019B                     	;# 
   590  019B                     	;# 
   591  019B                     	;# 
   592  019B                     	;# 
   593  019B                     	;# 
   594  019C                     	;# 
   595  019C                     	;# 
   596  019C                     	;# 
   597  019D                     	;# 
   598  019D                     	;# 
   599  019D                     	;# 
   600  019E                     	;# 
   601  019E                     	;# 
   602  019E                     	;# 
   603  019F                     	;# 
   604  019F                     	;# 
   605  019F                     	;# 
   606  019F                     	;# 
   607  019F                     	;# 
   608  020C                     	;# 
   609  020D                     	;# 
   610  020E                     	;# 
   611  020F                     	;# 
   612  0210                     	;# 
   613  0211                     	;# 
   614  0211                     	;# 
   615  0212                     	;# 
   616  0212                     	;# 
   617  0213                     	;# 
   618  0213                     	;# 
   619  0214                     	;# 
   620  0214                     	;# 
   621  0215                     	;# 
   622  0215                     	;# 
   623  0215                     	;# 
   624  0215                     	;# 
   625  0216                     	;# 
   626  0216                     	;# 
   627  0217                     	;# 
   628  0217                     	;# 
   629  028C                     	;# 
   630  028D                     	;# 
   631  028E                     	;# 
   632  028F                     	;# 
   633  0290                     	;# 
   634  0291                     	;# 
   635  0291                     	;# 
   636  0292                     	;# 
   637  0293                     	;# 
   638  0298                     	;# 
   639  0298                     	;# 
   640  0299                     	;# 
   641  029A                     	;# 
   642  030C                     	;# 
   643  030D                     	;# 
   644  030E                     	;# 
   645  030F                     	;# 
   646  0310                     	;# 
   647  0311                     	;# 
   648  0311                     	;# 
   649  0312                     	;# 
   650  0313                     	;# 
   651  038C                     	;# 
   652  038D                     	;# 
   653  038E                     	;# 
   654  038F                     	;# 
   655  0390                     	;# 
   656  0391                     	;# 
   657  0392                     	;# 
   658  0393                     	;# 
   659  0394                     	;# 
   660  0395                     	;# 
   661  0396                     	;# 
   662  0397                     	;# 
   663  0398                     	;# 
   664  0399                     	;# 
   665  039D                     	;# 
   666  039E                     	;# 
   667  039F                     	;# 
   668  0511                     	;# 
   669  0513                     	;# 
   670  0515                     	;# 
   671  051A                     	;# 
   672  0591                     	;# 
   673  0592                     	;# 
   674  0592                     	;# 
   675  0593                     	;# 
   676  0594                     	;# 
   677  0594                     	;# 
   678  0595                     	;# 
   679  0596                     	;# 
   680  0596                     	;# 
   681  0E91                     	;# 
   682  0E92                     	;# 
   683  0E93                     	;# 
   684  0E94                     	;# 
   685  0E95                     	;# 
   686  0E96                     	;# 
   687  0E97                     	;# 
   688  0E98                     	;# 
   689  0E99                     	;# 
   690  0E9A                     	;# 
   691  0E9B                     	;# 
   692  0E9C                     	;# 
   693  0E9D                     	;# 
   694  0E9E                     	;# 
   695  0E9F                     	;# 
   696  0EA0                     	;# 
   697  0EA1                     	;# 
   698  0EA1                     	;# 
   699  0EA2                     	;# 
   700  0EA3                     	;# 
   701  0EA3                     	;# 
   702  0EA4                     	;# 
   703  0EA5                     	;# 
   704  0EA5                     	;# 
   705  0EA6                     	;# 
   706  0EA7                     	;# 
   707  0EA7                     	;# 
   708  0EA8                     	;# 
   709  0EA9                     	;# 
   710  0EAA                     	;# 
   711  0EAB                     	;# 
   712  0EAC                     	;# 
   713  0EAD                     	;# 
   714  0EAE                     	;# 
   715  0EAF                     	;# 
   716  0EB1                     	;# 
   717  0EB2                     	;# 
   718  0EB3                     	;# 
   719  0EB4                     	;# 
   720  0EB5                     	;# 
   721  0EB6                     	;# 
   722  0EB7                     	;# 
   723  0EB8                     	;# 
   724  0EB9                     	;# 
   725  0EBA                     	;# 
   726  0EBB                     	;# 
   727  0EBC                     	;# 
   728  0EBD                     	;# 
   729  0EBE                     	;# 
   730  0EBF                     	;# 
   731  0EC0                     	;# 
   732  0EC1                     	;# 
   733  0EC1                     	;# 
   734  0EC2                     	;# 
   735  0EC3                     	;# 
   736  0EC3                     	;# 
   737  0EC4                     	;# 
   738  0EC5                     	;# 
   739  0EC5                     	;# 
   740  0EC6                     	;# 
   741  0EC7                     	;# 
   742  0EC7                     	;# 
   743  0EC8                     	;# 
   744  0EC9                     	;# 
   745  0ECA                     	;# 
   746  0ECB                     	;# 
   747  0ECC                     	;# 
   748  0ECD                     	;# 
   749  0ECE                     	;# 
   750  0ECF                     	;# 
   751  0ED1                     	;# 
   752  0ED2                     	;# 
   753  0ED3                     	;# 
   754  0ED4                     	;# 
   755  0ED5                     	;# 
   756  0ED6                     	;# 
   757  0ED7                     	;# 
   758  0ED8                     	;# 
   759  0ED9                     	;# 
   760  0EDA                     	;# 
   761  0EDB                     	;# 
   762  0EDC                     	;# 
   763  0EDD                     	;# 
   764  0EDE                     	;# 
   765  0EDF                     	;# 
   766  0EE0                     	;# 
   767  0EE1                     	;# 
   768  0EE1                     	;# 
   769  0EE2                     	;# 
   770  0EE3                     	;# 
   771  0EE3                     	;# 
   772  0EE4                     	;# 
   773  0EE5                     	;# 
   774  0EE5                     	;# 
   775  0EE6                     	;# 
   776  0EE7                     	;# 
   777  0EE7                     	;# 
   778  0EE8                     	;# 
   779  0EE9                     	;# 
   780  0EEA                     	;# 
   781  0EEB                     	;# 
   782  0EEC                     	;# 
   783  0EED                     	;# 
   784  0EEE                     	;# 
   785  0EEF                     	;# 
   786  0F11                     	;# 
   787  0F12                     	;# 
   788  0F13                     	;# 
   789  0F14                     	;# 
   790  0F15                     	;# 
   791  0F16                     	;# 
   792  0F17                     	;# 
   793  0F18                     	;# 
   794  0F19                     	;# 
   795  0F1A                     	;# 
   796  0F1B                     	;# 
   797  0F1C                     	;# 
   798  0F1D                     	;# 
   799  0F1E                     	;# 
   800  0F1F                     	;# 
   801  0F20                     	;# 
   802  0F21                     	;# 
   803  0F21                     	;# 
   804  0F22                     	;# 
   805  0F23                     	;# 
   806  0F23                     	;# 
   807  0F24                     	;# 
   808  0F25                     	;# 
   809  0F25                     	;# 
   810  0F26                     	;# 
   811  0F27                     	;# 
   812  0F27                     	;# 
   813  0F28                     	;# 
   814  0F29                     	;# 
   815  0F2A                     	;# 
   816  0F2B                     	;# 
   817  0F2C                     	;# 
   818  0F2D                     	;# 
   819  0F2E                     	;# 
   820  0F2F                     	;# 
   821  0FE4                     	;# 
   822  0FE5                     	;# 
   823  0FE6                     	;# 
   824  0FE7                     	;# 
   825  0FE8                     	;# 
   826  0FE9                     	;# 
   827  0FEA                     	;# 
   828  0FEB                     	;# 
   829  0FED                     	;# 
   830  0FEE                     	;# 
   831  0FEF                     	;# 
   832  0000                     	;# 
   833  0001                     	;# 
   834  0002                     	;# 
   835  0003                     	;# 
   836  0004                     	;# 
   837  0005                     	;# 
   838  0006                     	;# 
   839  0007                     	;# 
   840  0008                     	;# 
   841  0009                     	;# 
   842  000A                     	;# 
   843  000B                     	;# 
   844  000C                     	;# 
   845  000D                     	;# 
   846  000E                     	;# 
   847  000F                     	;# 
   848  0010                     	;# 
   849  0011                     	;# 
   850  0012                     	;# 
   851  0013                     	;# 
   852  0014                     	;# 
   853  0015                     	;# 
   854  0016                     	;# 
   855  0016                     	;# 
   856  0017                     	;# 
   857  0018                     	;# 
   858  0019                     	;# 
   859  001A                     	;# 
   860  001B                     	;# 
   861  001C                     	;# 
   862  008C                     	;# 
   863  008D                     	;# 
   864  008E                     	;# 
   865  008F                     	;# 
   866  0090                     	;# 
   867  0091                     	;# 
   868  0092                     	;# 
   869  0093                     	;# 
   870  0094                     	;# 
   871  0095                     	;# 
   872  0096                     	;# 
   873  0097                     	;# 
   874  0098                     	;# 
   875  0099                     	;# 
   876  009A                     	;# 
   877  009B                     	;# 
   878  009B                     	;# 
   879  009C                     	;# 
   880  009D                     	;# 
   881  009E                     	;# 
   882  009F                     	;# 
   883  010C                     	;# 
   884  010D                     	;# 
   885  010E                     	;# 
   886  010F                     	;# 
   887  0110                     	;# 
   888  0111                     	;# 
   889  0112                     	;# 
   890  0113                     	;# 
   891  0114                     	;# 
   892  0115                     	;# 
   893  0116                     	;# 
   894  0117                     	;# 
   895  0118                     	;# 
   896  0119                     	;# 
   897  011A                     	;# 
   898  011B                     	;# 
   899  011C                     	;# 
   900  011D                     	;# 
   901  011D                     	;# 
   902  011D                     	;# 
   903  011E                     	;# 
   904  011F                     	;# 
   905  018C                     	;# 
   906  018D                     	;# 
   907  018E                     	;# 
   908  018F                     	;# 
   909  0190                     	;# 
   910  0191                     	;# 
   911  0191                     	;# 
   912  0192                     	;# 
   913  0193                     	;# 
   914  0193                     	;# 
   915  0193                     	;# 
   916  0194                     	;# 
   917  0195                     	;# 
   918  0196                     	;# 
   919  0197                     	;# 
   920  0199                     	;# 
   921  0199                     	;# 
   922  0199                     	;# 
   923  019A                     	;# 
   924  019A                     	;# 
   925  019A                     	;# 
   926  019B                     	;# 
   927  019B                     	;# 
   928  019B                     	;# 
   929  019B                     	;# 
   930  019B                     	;# 
   931  019C                     	;# 
   932  019C                     	;# 
   933  019C                     	;# 
   934  019D                     	;# 
   935  019D                     	;# 
   936  019D                     	;# 
   937  019E                     	;# 
   938  019E                     	;# 
   939  019E                     	;# 
   940  019F                     	;# 
   941  019F                     	;# 
   942  019F                     	;# 
   943  019F                     	;# 
   944  019F                     	;# 
   945  020C                     	;# 
   946  020D                     	;# 
   947  020E                     	;# 
   948  020F                     	;# 
   949  0210                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0216                     	;# 
   963  0216                     	;# 
   964  0217                     	;# 
   965  0217                     	;# 
   966  028C                     	;# 
   967  028D                     	;# 
   968  028E                     	;# 
   969  028F                     	;# 
   970  0290                     	;# 
   971  0291                     	;# 
   972  0291                     	;# 
   973  0292                     	;# 
   974  0293                     	;# 
   975  0298                     	;# 
   976  0298                     	;# 
   977  0299                     	;# 
   978  029A                     	;# 
   979  030C                     	;# 
   980  030D                     	;# 
   981  030E                     	;# 
   982  030F                     	;# 
   983  0310                     	;# 
   984  0311                     	;# 
   985  0311                     	;# 
   986  0312                     	;# 
   987  0313                     	;# 
   988  038C                     	;# 
   989  038D                     	;# 
   990  038E                     	;# 
   991  038F                     	;# 
   992  0390                     	;# 
   993  0391                     	;# 
   994  0392                     	;# 
   995  0393                     	;# 
   996  0394                     	;# 
   997  0395                     	;# 
   998  0396                     	;# 
   999  0397                     	;# 
  1000  0398                     	;# 
  1001  0399                     	;# 
  1002  039D                     	;# 
  1003  039E                     	;# 
  1004  039F                     	;# 
  1005  0511                     	;# 
  1006  0513                     	;# 
  1007  0515                     	;# 
  1008  051A                     	;# 
  1009  0591                     	;# 
  1010  0592                     	;# 
  1011  0592                     	;# 
  1012  0593                     	;# 
  1013  0594                     	;# 
  1014  0594                     	;# 
  1015  0595                     	;# 
  1016  0596                     	;# 
  1017  0596                     	;# 
  1018  0E91                     	;# 
  1019  0E92                     	;# 
  1020  0E93                     	;# 
  1021  0E94                     	;# 
  1022  0E95                     	;# 
  1023  0E96                     	;# 
  1024  0E97                     	;# 
  1025  0E98                     	;# 
  1026  0E99                     	;# 
  1027  0E9A                     	;# 
  1028  0E9B                     	;# 
  1029  0E9C                     	;# 
  1030  0E9D                     	;# 
  1031  0E9E                     	;# 
  1032  0E9F                     	;# 
  1033  0EA0                     	;# 
  1034  0EA1                     	;# 
  1035  0EA1                     	;# 
  1036  0EA2                     	;# 
  1037  0EA3                     	;# 
  1038  0EA3                     	;# 
  1039  0EA4                     	;# 
  1040  0EA5                     	;# 
  1041  0EA5                     	;# 
  1042  0EA6                     	;# 
  1043  0EA7                     	;# 
  1044  0EA7                     	;# 
  1045  0EA8                     	;# 
  1046  0EA9                     	;# 
  1047  0EAA                     	;# 
  1048  0EAB                     	;# 
  1049  0EAC                     	;# 
  1050  0EAD                     	;# 
  1051  0EAE                     	;# 
  1052  0EAF                     	;# 
  1053  0EB1                     	;# 
  1054  0EB2                     	;# 
  1055  0EB3                     	;# 
  1056  0EB4                     	;# 
  1057  0EB5                     	;# 
  1058  0EB6                     	;# 
  1059  0EB7                     	;# 
  1060  0EB8                     	;# 
  1061  0EB9                     	;# 
  1062  0EBA                     	;# 
  1063  0EBB                     	;# 
  1064  0EBC                     	;# 
  1065  0EBD                     	;# 
  1066  0EBE                     	;# 
  1067  0EBF                     	;# 
  1068  0EC0                     	;# 
  1069  0EC1                     	;# 
  1070  0EC1                     	;# 
  1071  0EC2                     	;# 
  1072  0EC3                     	;# 
  1073  0EC3                     	;# 
  1074  0EC4                     	;# 
  1075  0EC5                     	;# 
  1076  0EC5                     	;# 
  1077  0EC6                     	;# 
  1078  0EC7                     	;# 
  1079  0EC7                     	;# 
  1080  0EC8                     	;# 
  1081  0EC9                     	;# 
  1082  0ECA                     	;# 
  1083  0ECB                     	;# 
  1084  0ECC                     	;# 
  1085  0ECD                     	;# 
  1086  0ECE                     	;# 
  1087  0ECF                     	;# 
  1088  0ED1                     	;# 
  1089  0ED2                     	;# 
  1090  0ED3                     	;# 
  1091  0ED4                     	;# 
  1092  0ED5                     	;# 
  1093  0ED6                     	;# 
  1094  0ED7                     	;# 
  1095  0ED8                     	;# 
  1096  0ED9                     	;# 
  1097  0EDA                     	;# 
  1098  0EDB                     	;# 
  1099  0EDC                     	;# 
  1100  0EDD                     	;# 
  1101  0EDE                     	;# 
  1102  0EDF                     	;# 
  1103  0EE0                     	;# 
  1104  0EE1                     	;# 
  1105  0EE1                     	;# 
  1106  0EE2                     	;# 
  1107  0EE3                     	;# 
  1108  0EE3                     	;# 
  1109  0EE4                     	;# 
  1110  0EE5                     	;# 
  1111  0EE5                     	;# 
  1112  0EE6                     	;# 
  1113  0EE7                     	;# 
  1114  0EE7                     	;# 
  1115  0EE8                     	;# 
  1116  0EE9                     	;# 
  1117  0EEA                     	;# 
  1118  0EEB                     	;# 
  1119  0EEC                     	;# 
  1120  0EED                     	;# 
  1121  0EEE                     	;# 
  1122  0EEF                     	;# 
  1123  0F11                     	;# 
  1124  0F12                     	;# 
  1125  0F13                     	;# 
  1126  0F14                     	;# 
  1127  0F15                     	;# 
  1128  0F16                     	;# 
  1129  0F17                     	;# 
  1130  0F18                     	;# 
  1131  0F19                     	;# 
  1132  0F1A                     	;# 
  1133  0F1B                     	;# 
  1134  0F1C                     	;# 
  1135  0F1D                     	;# 
  1136  0F1E                     	;# 
  1137  0F1F                     	;# 
  1138  0F20                     	;# 
  1139  0F21                     	;# 
  1140  0F21                     	;# 
  1141  0F22                     	;# 
  1142  0F23                     	;# 
  1143  0F23                     	;# 
  1144  0F24                     	;# 
  1145  0F25                     	;# 
  1146  0F25                     	;# 
  1147  0F26                     	;# 
  1148  0F27                     	;# 
  1149  0F27                     	;# 
  1150  0F28                     	;# 
  1151  0F29                     	;# 
  1152  0F2A                     	;# 
  1153  0F2B                     	;# 
  1154  0F2C                     	;# 
  1155  0F2D                     	;# 
  1156  0F2E                     	;# 
  1157  0F2F                     	;# 
  1158  0FE4                     	;# 
  1159  0FE5                     	;# 
  1160  0FE6                     	;# 
  1161  0FE7                     	;# 
  1162  0FE8                     	;# 
  1163  0FE9                     	;# 
  1164  0FEA                     	;# 
  1165  0FEB                     	;# 
  1166  0FED                     	;# 
  1167  0FEE                     	;# 
  1168  0FEF                     	;# 
  1169  0000                     	;# 
  1170  0001                     	;# 
  1171  0002                     	;# 
  1172  0003                     	;# 
  1173  0004                     	;# 
  1174  0005                     	;# 
  1175  0006                     	;# 
  1176  0007                     	;# 
  1177  0008                     	;# 
  1178  0009                     	;# 
  1179  000A                     	;# 
  1180  000B                     	;# 
  1181  000C                     	;# 
  1182  000D                     	;# 
  1183  000E                     	;# 
  1184  000F                     	;# 
  1185  0010                     	;# 
  1186  0011                     	;# 
  1187  0012                     	;# 
  1188  0013                     	;# 
  1189  0014                     	;# 
  1190  0015                     	;# 
  1191  0016                     	;# 
  1192  0016                     	;# 
  1193  0017                     	;# 
  1194  0018                     	;# 
  1195  0019                     	;# 
  1196  001A                     	;# 
  1197  001B                     	;# 
  1198  001C                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008F                     	;# 
  1203  0090                     	;# 
  1204  0091                     	;# 
  1205  0092                     	;# 
  1206  0093                     	;# 
  1207  0094                     	;# 
  1208  0095                     	;# 
  1209  0096                     	;# 
  1210  0097                     	;# 
  1211  0098                     	;# 
  1212  0099                     	;# 
  1213  009A                     	;# 
  1214  009B                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  009F                     	;# 
  1220  010C                     	;# 
  1221  010D                     	;# 
  1222  010E                     	;# 
  1223  010F                     	;# 
  1224  0110                     	;# 
  1225  0111                     	;# 
  1226  0112                     	;# 
  1227  0113                     	;# 
  1228  0114                     	;# 
  1229  0115                     	;# 
  1230  0116                     	;# 
  1231  0117                     	;# 
  1232  0118                     	;# 
  1233  0119                     	;# 
  1234  011A                     	;# 
  1235  011B                     	;# 
  1236  011C                     	;# 
  1237  011D                     	;# 
  1238  011D                     	;# 
  1239  011D                     	;# 
  1240  011E                     	;# 
  1241  011F                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  018E                     	;# 
  1245  018F                     	;# 
  1246  0190                     	;# 
  1247  0191                     	;# 
  1248  0191                     	;# 
  1249  0192                     	;# 
  1250  0193                     	;# 
  1251  0193                     	;# 
  1252  0193                     	;# 
  1253  0194                     	;# 
  1254  0195                     	;# 
  1255  0196                     	;# 
  1256  0197                     	;# 
  1257  0199                     	;# 
  1258  0199                     	;# 
  1259  0199                     	;# 
  1260  019A                     	;# 
  1261  019A                     	;# 
  1262  019A                     	;# 
  1263  019B                     	;# 
  1264  019B                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019C                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019D                     	;# 
  1273  019D                     	;# 
  1274  019E                     	;# 
  1275  019E                     	;# 
  1276  019E                     	;# 
  1277  019F                     	;# 
  1278  019F                     	;# 
  1279  019F                     	;# 
  1280  019F                     	;# 
  1281  019F                     	;# 
  1282  020C                     	;# 
  1283  020D                     	;# 
  1284  020E                     	;# 
  1285  020F                     	;# 
  1286  0210                     	;# 
  1287  0211                     	;# 
  1288  0211                     	;# 
  1289  0212                     	;# 
  1290  0212                     	;# 
  1291  0213                     	;# 
  1292  0213                     	;# 
  1293  0214                     	;# 
  1294  0214                     	;# 
  1295  0215                     	;# 
  1296  0215                     	;# 
  1297  0215                     	;# 
  1298  0215                     	;# 
  1299  0216                     	;# 
  1300  0216                     	;# 
  1301  0217                     	;# 
  1302  0217                     	;# 
  1303  028C                     	;# 
  1304  028D                     	;# 
  1305  028E                     	;# 
  1306  028F                     	;# 
  1307  0290                     	;# 
  1308  0291                     	;# 
  1309  0291                     	;# 
  1310  0292                     	;# 
  1311  0293                     	;# 
  1312  0298                     	;# 
  1313  0298                     	;# 
  1314  0299                     	;# 
  1315  029A                     	;# 
  1316  030C                     	;# 
  1317  030D                     	;# 
  1318  030E                     	;# 
  1319  030F                     	;# 
  1320  0310                     	;# 
  1321  0311                     	;# 
  1322  0311                     	;# 
  1323  0312                     	;# 
  1324  0313                     	;# 
  1325  038C                     	;# 
  1326  038D                     	;# 
  1327  038E                     	;# 
  1328  038F                     	;# 
  1329  0390                     	;# 
  1330  0391                     	;# 
  1331  0392                     	;# 
  1332  0393                     	;# 
  1333  0394                     	;# 
  1334  0395                     	;# 
  1335  0396                     	;# 
  1336  0397                     	;# 
  1337  0398                     	;# 
  1338  0399                     	;# 
  1339  039D                     	;# 
  1340  039E                     	;# 
  1341  039F                     	;# 
  1342  0511                     	;# 
  1343  0513                     	;# 
  1344  0515                     	;# 
  1345  051A                     	;# 
  1346  0591                     	;# 
  1347  0592                     	;# 
  1348  0592                     	;# 
  1349  0593                     	;# 
  1350  0594                     	;# 
  1351  0594                     	;# 
  1352  0595                     	;# 
  1353  0596                     	;# 
  1354  0596                     	;# 
  1355  0E91                     	;# 
  1356  0E92                     	;# 
  1357  0E93                     	;# 
  1358  0E94                     	;# 
  1359  0E95                     	;# 
  1360  0E96                     	;# 
  1361  0E97                     	;# 
  1362  0E98                     	;# 
  1363  0E99                     	;# 
  1364  0E9A                     	;# 
  1365  0E9B                     	;# 
  1366  0E9C                     	;# 
  1367  0E9D                     	;# 
  1368  0E9E                     	;# 
  1369  0E9F                     	;# 
  1370  0EA0                     	;# 
  1371  0EA1                     	;# 
  1372  0EA1                     	;# 
  1373  0EA2                     	;# 
  1374  0EA3                     	;# 
  1375  0EA3                     	;# 
  1376  0EA4                     	;# 
  1377  0EA5                     	;# 
  1378  0EA5                     	;# 
  1379  0EA6                     	;# 
  1380  0EA7                     	;# 
  1381  0EA7                     	;# 
  1382  0EA8                     	;# 
  1383  0EA9                     	;# 
  1384  0EAA                     	;# 
  1385  0EAB                     	;# 
  1386  0EAC                     	;# 
  1387  0EAD                     	;# 
  1388  0EAE                     	;# 
  1389  0EAF                     	;# 
  1390  0EB1                     	;# 
  1391  0EB2                     	;# 
  1392  0EB3                     	;# 
  1393  0EB4                     	;# 
  1394  0EB5                     	;# 
  1395  0EB6                     	;# 
  1396  0EB7                     	;# 
  1397  0EB8                     	;# 
  1398  0EB9                     	;# 
  1399  0EBA                     	;# 
  1400  0EBB                     	;# 
  1401  0EBC                     	;# 
  1402  0EBD                     	;# 
  1403  0EBE                     	;# 
  1404  0EBF                     	;# 
  1405  0EC0                     	;# 
  1406  0EC1                     	;# 
  1407  0EC1                     	;# 
  1408  0EC2                     	;# 
  1409  0EC3                     	;# 
  1410  0EC3                     	;# 
  1411  0EC4                     	;# 
  1412  0EC5                     	;# 
  1413  0EC5                     	;# 
  1414  0EC6                     	;# 
  1415  0EC7                     	;# 
  1416  0EC7                     	;# 
  1417  0EC8                     	;# 
  1418  0EC9                     	;# 
  1419  0ECA                     	;# 
  1420  0ECB                     	;# 
  1421  0ECC                     	;# 
  1422  0ECD                     	;# 
  1423  0ECE                     	;# 
  1424  0ECF                     	;# 
  1425  0ED1                     	;# 
  1426  0ED2                     	;# 
  1427  0ED3                     	;# 
  1428  0ED4                     	;# 
  1429  0ED5                     	;# 
  1430  0ED6                     	;# 
  1431  0ED7                     	;# 
  1432  0ED8                     	;# 
  1433  0ED9                     	;# 
  1434  0EDA                     	;# 
  1435  0EDB                     	;# 
  1436  0EDC                     	;# 
  1437  0EDD                     	;# 
  1438  0EDE                     	;# 
  1439  0EDF                     	;# 
  1440  0EE0                     	;# 
  1441  0EE1                     	;# 
  1442  0EE1                     	;# 
  1443  0EE2                     	;# 
  1444  0EE3                     	;# 
  1445  0EE3                     	;# 
  1446  0EE4                     	;# 
  1447  0EE5                     	;# 
  1448  0EE5                     	;# 
  1449  0EE6                     	;# 
  1450  0EE7                     	;# 
  1451  0EE7                     	;# 
  1452  0EE8                     	;# 
  1453  0EE9                     	;# 
  1454  0EEA                     	;# 
  1455  0EEB                     	;# 
  1456  0EEC                     	;# 
  1457  0EED                     	;# 
  1458  0EEE                     	;# 
  1459  0EEF                     	;# 
  1460  0F11                     	;# 
  1461  0F12                     	;# 
  1462  0F13                     	;# 
  1463  0F14                     	;# 
  1464  0F15                     	;# 
  1465  0F16                     	;# 
  1466  0F17                     	;# 
  1467  0F18                     	;# 
  1468  0F19                     	;# 
  1469  0F1A                     	;# 
  1470  0F1B                     	;# 
  1471  0F1C                     	;# 
  1472  0F1D                     	;# 
  1473  0F1E                     	;# 
  1474  0F1F                     	;# 
  1475  0F20                     	;# 
  1476  0F21                     	;# 
  1477  0F21                     	;# 
  1478  0F22                     	;# 
  1479  0F23                     	;# 
  1480  0F23                     	;# 
  1481  0F24                     	;# 
  1482  0F25                     	;# 
  1483  0F25                     	;# 
  1484  0F26                     	;# 
  1485  0F27                     	;# 
  1486  0F27                     	;# 
  1487  0F28                     	;# 
  1488  0F29                     	;# 
  1489  0F2A                     	;# 
  1490  0F2B                     	;# 
  1491  0F2C                     	;# 
  1492  0F2D                     	;# 
  1493  0F2E                     	;# 
  1494  0F2F                     	;# 
  1495  0FE4                     	;# 
  1496  0FE5                     	;# 
  1497  0FE6                     	;# 
  1498  0FE7                     	;# 
  1499  0FE8                     	;# 
  1500  0FE9                     	;# 
  1501  0FEA                     	;# 
  1502  0FEB                     	;# 
  1503  0FED                     	;# 
  1504  0FEE                     	;# 
  1505  0FEF                     	;# 
  1506  0000                     	;# 
  1507  0001                     	;# 
  1508  0002                     	;# 
  1509  0003                     	;# 
  1510  0004                     	;# 
  1511  0005                     	;# 
  1512  0006                     	;# 
  1513  0007                     	;# 
  1514  0008                     	;# 
  1515  0009                     	;# 
  1516  000A                     	;# 
  1517  000B                     	;# 
  1518  000C                     	;# 
  1519  000D                     	;# 
  1520  000E                     	;# 
  1521  000F                     	;# 
  1522  0010                     	;# 
  1523  0011                     	;# 
  1524  0012                     	;# 
  1525  0013                     	;# 
  1526  0014                     	;# 
  1527  0015                     	;# 
  1528  0016                     	;# 
  1529  0016                     	;# 
  1530  0017                     	;# 
  1531  0018                     	;# 
  1532  0019                     	;# 
  1533  001A                     	;# 
  1534  001B                     	;# 
  1535  001C                     	;# 
  1536  008C                     	;# 
  1537  008D                     	;# 
  1538  008E                     	;# 
  1539  008F                     	;# 
  1540  0090                     	;# 
  1541  0091                     	;# 
  1542  0092                     	;# 
  1543  0093                     	;# 
  1544  0094                     	;# 
  1545  0095                     	;# 
  1546  0096                     	;# 
  1547  0097                     	;# 
  1548  0098                     	;# 
  1549  0099                     	;# 
  1550  009A                     	;# 
  1551  009B                     	;# 
  1552  009B                     	;# 
  1553  009C                     	;# 
  1554  009D                     	;# 
  1555  009E                     	;# 
  1556  009F                     	;# 
  1557  010C                     	;# 
  1558  010D                     	;# 
  1559  010E                     	;# 
  1560  010F                     	;# 
  1561  0110                     	;# 
  1562  0111                     	;# 
  1563  0112                     	;# 
  1564  0113                     	;# 
  1565  0114                     	;# 
  1566  0115                     	;# 
  1567  0116                     	;# 
  1568  0117                     	;# 
  1569  0118                     	;# 
  1570  0119                     	;# 
  1571  011A                     	;# 
  1572  011B                     	;# 
  1573  011C                     	;# 
  1574  011D                     	;# 
  1575  011D                     	;# 
  1576  011D                     	;# 
  1577  011E                     	;# 
  1578  011F                     	;# 
  1579  018C                     	;# 
  1580  018D                     	;# 
  1581  018E                     	;# 
  1582  018F                     	;# 
  1583  0190                     	;# 
  1584  0191                     	;# 
  1585  0191                     	;# 
  1586  0192                     	;# 
  1587  0193                     	;# 
  1588  0193                     	;# 
  1589  0193                     	;# 
  1590  0194                     	;# 
  1591  0195                     	;# 
  1592  0196                     	;# 
  1593  0197                     	;# 
  1594  0199                     	;# 
  1595  0199                     	;# 
  1596  0199                     	;# 
  1597  019A                     	;# 
  1598  019A                     	;# 
  1599  019A                     	;# 
  1600  019B                     	;# 
  1601  019B                     	;# 
  1602  019B                     	;# 
  1603  019B                     	;# 
  1604  019B                     	;# 
  1605  019C                     	;# 
  1606  019C                     	;# 
  1607  019C                     	;# 
  1608  019D                     	;# 
  1609  019D                     	;# 
  1610  019D                     	;# 
  1611  019E                     	;# 
  1612  019E                     	;# 
  1613  019E                     	;# 
  1614  019F                     	;# 
  1615  019F                     	;# 
  1616  019F                     	;# 
  1617  019F                     	;# 
  1618  019F                     	;# 
  1619  020C                     	;# 
  1620  020D                     	;# 
  1621  020E                     	;# 
  1622  020F                     	;# 
  1623  0210                     	;# 
  1624  0211                     	;# 
  1625  0211                     	;# 
  1626  0212                     	;# 
  1627  0212                     	;# 
  1628  0213                     	;# 
  1629  0213                     	;# 
  1630  0214                     	;# 
  1631  0214                     	;# 
  1632  0215                     	;# 
  1633  0215                     	;# 
  1634  0215                     	;# 
  1635  0215                     	;# 
  1636  0216                     	;# 
  1637  0216                     	;# 
  1638  0217                     	;# 
  1639  0217                     	;# 
  1640  028C                     	;# 
  1641  028D                     	;# 
  1642  028E                     	;# 
  1643  028F                     	;# 
  1644  0290                     	;# 
  1645  0291                     	;# 
  1646  0291                     	;# 
  1647  0292                     	;# 
  1648  0293                     	;# 
  1649  0298                     	;# 
  1650  0298                     	;# 
  1651  0299                     	;# 
  1652  029A                     	;# 
  1653  030C                     	;# 
  1654  030D                     	;# 
  1655  030E                     	;# 
  1656  030F                     	;# 
  1657  0310                     	;# 
  1658  0311                     	;# 
  1659  0311                     	;# 
  1660  0312                     	;# 
  1661  0313                     	;# 
  1662  038C                     	;# 
  1663  038D                     	;# 
  1664  038E                     	;# 
  1665  038F                     	;# 
  1666  0390                     	;# 
  1667  0391                     	;# 
  1668  0392                     	;# 
  1669  0393                     	;# 
  1670  0394                     	;# 
  1671  0395                     	;# 
  1672  0396                     	;# 
  1673  0397                     	;# 
  1674  0398                     	;# 
  1675  0399                     	;# 
  1676  039D                     	;# 
  1677  039E                     	;# 
  1678  039F                     	;# 
  1679  0511                     	;# 
  1680  0513                     	;# 
  1681  0515                     	;# 
  1682  051A                     	;# 
  1683  0591                     	;# 
  1684  0592                     	;# 
  1685  0592                     	;# 
  1686  0593                     	;# 
  1687  0594                     	;# 
  1688  0594                     	;# 
  1689  0595                     	;# 
  1690  0596                     	;# 
  1691  0596                     	;# 
  1692  0E91                     	;# 
  1693  0E92                     	;# 
  1694  0E93                     	;# 
  1695  0E94                     	;# 
  1696  0E95                     	;# 
  1697  0E96                     	;# 
  1698  0E97                     	;# 
  1699  0E98                     	;# 
  1700  0E99                     	;# 
  1701  0E9A                     	;# 
  1702  0E9B                     	;# 
  1703  0E9C                     	;# 
  1704  0E9D                     	;# 
  1705  0E9E                     	;# 
  1706  0E9F                     	;# 
  1707  0EA0                     	;# 
  1708  0EA1                     	;# 
  1709  0EA1                     	;# 
  1710  0EA2                     	;# 
  1711  0EA3                     	;# 
  1712  0EA3                     	;# 
  1713  0EA4                     	;# 
  1714  0EA5                     	;# 
  1715  0EA5                     	;# 
  1716  0EA6                     	;# 
  1717  0EA7                     	;# 
  1718  0EA7                     	;# 
  1719  0EA8                     	;# 
  1720  0EA9                     	;# 
  1721  0EAA                     	;# 
  1722  0EAB                     	;# 
  1723  0EAC                     	;# 
  1724  0EAD                     	;# 
  1725  0EAE                     	;# 
  1726  0EAF                     	;# 
  1727  0EB1                     	;# 
  1728  0EB2                     	;# 
  1729  0EB3                     	;# 
  1730  0EB4                     	;# 
  1731  0EB5                     	;# 
  1732  0EB6                     	;# 
  1733  0EB7                     	;# 
  1734  0EB8                     	;# 
  1735  0EB9                     	;# 
  1736  0EBA                     	;# 
  1737  0EBB                     	;# 
  1738  0EBC                     	;# 
  1739  0EBD                     	;# 
  1740  0EBE                     	;# 
  1741  0EBF                     	;# 
  1742  0EC0                     	;# 
  1743  0EC1                     	;# 
  1744  0EC1                     	;# 
  1745  0EC2                     	;# 
  1746  0EC3                     	;# 
  1747  0EC3                     	;# 
  1748  0EC4                     	;# 
  1749  0EC5                     	;# 
  1750  0EC5                     	;# 
  1751  0EC6                     	;# 
  1752  0EC7                     	;# 
  1753  0EC7                     	;# 
  1754  0EC8                     	;# 
  1755  0EC9                     	;# 
  1756  0ECA                     	;# 
  1757  0ECB                     	;# 
  1758  0ECC                     	;# 
  1759  0ECD                     	;# 
  1760  0ECE                     	;# 
  1761  0ECF                     	;# 
  1762  0ED1                     	;# 
  1763  0ED2                     	;# 
  1764  0ED3                     	;# 
  1765  0ED4                     	;# 
  1766  0ED5                     	;# 
  1767  0ED6                     	;# 
  1768  0ED7                     	;# 
  1769  0ED8                     	;# 
  1770  0ED9                     	;# 
  1771  0EDA                     	;# 
  1772  0EDB                     	;# 
  1773  0EDC                     	;# 
  1774  0EDD                     	;# 
  1775  0EDE                     	;# 
  1776  0EDF                     	;# 
  1777  0EE0                     	;# 
  1778  0EE1                     	;# 
  1779  0EE1                     	;# 
  1780  0EE2                     	;# 
  1781  0EE3                     	;# 
  1782  0EE3                     	;# 
  1783  0EE4                     	;# 
  1784  0EE5                     	;# 
  1785  0EE5                     	;# 
  1786  0EE6                     	;# 
  1787  0EE7                     	;# 
  1788  0EE7                     	;# 
  1789  0EE8                     	;# 
  1790  0EE9                     	;# 
  1791  0EEA                     	;# 
  1792  0EEB                     	;# 
  1793  0EEC                     	;# 
  1794  0EED                     	;# 
  1795  0EEE                     	;# 
  1796  0EEF                     	;# 
  1797  0F11                     	;# 
  1798  0F12                     	;# 
  1799  0F13                     	;# 
  1800  0F14                     	;# 
  1801  0F15                     	;# 
  1802  0F16                     	;# 
  1803  0F17                     	;# 
  1804  0F18                     	;# 
  1805  0F19                     	;# 
  1806  0F1A                     	;# 
  1807  0F1B                     	;# 
  1808  0F1C                     	;# 
  1809  0F1D                     	;# 
  1810  0F1E                     	;# 
  1811  0F1F                     	;# 
  1812  0F20                     	;# 
  1813  0F21                     	;# 
  1814  0F21                     	;# 
  1815  0F22                     	;# 
  1816  0F23                     	;# 
  1817  0F23                     	;# 
  1818  0F24                     	;# 
  1819  0F25                     	;# 
  1820  0F25                     	;# 
  1821  0F26                     	;# 
  1822  0F27                     	;# 
  1823  0F27                     	;# 
  1824  0F28                     	;# 
  1825  0F29                     	;# 
  1826  0F2A                     	;# 
  1827  0F2B                     	;# 
  1828  0F2C                     	;# 
  1829  0F2D                     	;# 
  1830  0F2E                     	;# 
  1831  0F2F                     	;# 
  1832  0FE4                     	;# 
  1833  0FE5                     	;# 
  1834  0FE6                     	;# 
  1835  0FE7                     	;# 
  1836  0FE8                     	;# 
  1837  0FE9                     	;# 
  1838  0FEA                     	;# 
  1839  0FEB                     	;# 
  1840  0FED                     	;# 
  1841  0FEE                     	;# 
  1842  0FEF                     	;# 
  1843  0000                     	;# 
  1844  0001                     	;# 
  1845  0002                     	;# 
  1846  0003                     	;# 
  1847  0004                     	;# 
  1848  0005                     	;# 
  1849  0006                     	;# 
  1850  0007                     	;# 
  1851  0008                     	;# 
  1852  0009                     	;# 
  1853  000A                     	;# 
  1854  000B                     	;# 
  1855  000C                     	;# 
  1856  000D                     	;# 
  1857  000E                     	;# 
  1858  000F                     	;# 
  1859  0010                     	;# 
  1860  0011                     	;# 
  1861  0012                     	;# 
  1862  0013                     	;# 
  1863  0014                     	;# 
  1864  0015                     	;# 
  1865  0016                     	;# 
  1866  0016                     	;# 
  1867  0017                     	;# 
  1868  0018                     	;# 
  1869  0019                     	;# 
  1870  001A                     	;# 
  1871  001B                     	;# 
  1872  001C                     	;# 
  1873  008C                     	;# 
  1874  008D                     	;# 
  1875  008E                     	;# 
  1876  008F                     	;# 
  1877  0090                     	;# 
  1878  0091                     	;# 
  1879  0092                     	;# 
  1880  0093                     	;# 
  1881  0094                     	;# 
  1882  0095                     	;# 
  1883  0096                     	;# 
  1884  0097                     	;# 
  1885  0098                     	;# 
  1886  0099                     	;# 
  1887  009A                     	;# 
  1888  009B                     	;# 
  1889  009B                     	;# 
  1890  009C                     	;# 
  1891  009D                     	;# 
  1892  009E                     	;# 
  1893  009F                     	;# 
  1894  010C                     	;# 
  1895  010D                     	;# 
  1896  010E                     	;# 
  1897  010F                     	;# 
  1898  0110                     	;# 
  1899  0111                     	;# 
  1900  0112                     	;# 
  1901  0113                     	;# 
  1902  0114                     	;# 
  1903  0115                     	;# 
  1904  0116                     	;# 
  1905  0117                     	;# 
  1906  0118                     	;# 
  1907  0119                     	;# 
  1908  011A                     	;# 
  1909  011B                     	;# 
  1910  011C                     	;# 
  1911  011D                     	;# 
  1912  011D                     	;# 
  1913  011D                     	;# 
  1914  011E                     	;# 
  1915  011F                     	;# 
  1916  018C                     	;# 
  1917  018D                     	;# 
  1918  018E                     	;# 
  1919  018F                     	;# 
  1920  0190                     	;# 
  1921  0191                     	;# 
  1922  0191                     	;# 
  1923  0192                     	;# 
  1924  0193                     	;# 
  1925  0193                     	;# 
  1926  0193                     	;# 
  1927  0194                     	;# 
  1928  0195                     	;# 
  1929  0196                     	;# 
  1930  0197                     	;# 
  1931  0199                     	;# 
  1932  0199                     	;# 
  1933  0199                     	;# 
  1934  019A                     	;# 
  1935  019A                     	;# 
  1936  019A                     	;# 
  1937  019B                     	;# 
  1938  019B                     	;# 
  1939  019B                     	;# 
  1940  019B                     	;# 
  1941  019B                     	;# 
  1942  019C                     	;# 
  1943  019C                     	;# 
  1944  019C                     	;# 
  1945  019D                     	;# 
  1946  019D                     	;# 
  1947  019D                     	;# 
  1948  019E                     	;# 
  1949  019E                     	;# 
  1950  019E                     	;# 
  1951  019F                     	;# 
  1952  019F                     	;# 
  1953  019F                     	;# 
  1954  019F                     	;# 
  1955  019F                     	;# 
  1956  020C                     	;# 
  1957  020D                     	;# 
  1958  020E                     	;# 
  1959  020F                     	;# 
  1960  0210                     	;# 
  1961  0211                     	;# 
  1962  0211                     	;# 
  1963  0212                     	;# 
  1964  0212                     	;# 
  1965  0213                     	;# 
  1966  0213                     	;# 
  1967  0214                     	;# 
  1968  0214                     	;# 
  1969  0215                     	;# 
  1970  0215                     	;# 
  1971  0215                     	;# 
  1972  0215                     	;# 
  1973  0216                     	;# 
  1974  0216                     	;# 
  1975  0217                     	;# 
  1976  0217                     	;# 
  1977  028C                     	;# 
  1978  028D                     	;# 
  1979  028E                     	;# 
  1980  028F                     	;# 
  1981  0290                     	;# 
  1982  0291                     	;# 
  1983  0291                     	;# 
  1984  0292                     	;# 
  1985  0293                     	;# 
  1986  0298                     	;# 
  1987  0298                     	;# 
  1988  0299                     	;# 
  1989  029A                     	;# 
  1990  030C                     	;# 
  1991  030D                     	;# 
  1992  030E                     	;# 
  1993  030F                     	;# 
  1994  0310                     	;# 
  1995  0311                     	;# 
  1996  0311                     	;# 
  1997  0312                     	;# 
  1998  0313                     	;# 
  1999  038C                     	;# 
  2000  038D                     	;# 
  2001  038E                     	;# 
  2002  038F                     	;# 
  2003  0390                     	;# 
  2004  0391                     	;# 
  2005  0392                     	;# 
  2006  0393                     	;# 
  2007  0394                     	;# 
  2008  0395                     	;# 
  2009  0396                     	;# 
  2010  0397                     	;# 
  2011  0398                     	;# 
  2012  0399                     	;# 
  2013  039D                     	;# 
  2014  039E                     	;# 
  2015  039F                     	;# 
  2016  0511                     	;# 
  2017  0513                     	;# 
  2018  0515                     	;# 
  2019  051A                     	;# 
  2020  0591                     	;# 
  2021  0592                     	;# 
  2022  0592                     	;# 
  2023  0593                     	;# 
  2024  0594                     	;# 
  2025  0594                     	;# 
  2026  0595                     	;# 
  2027  0596                     	;# 
  2028  0596                     	;# 
  2029  0E91                     	;# 
  2030  0E92                     	;# 
  2031  0E93                     	;# 
  2032  0E94                     	;# 
  2033  0E95                     	;# 
  2034  0E96                     	;# 
  2035  0E97                     	;# 
  2036  0E98                     	;# 
  2037  0E99                     	;# 
  2038  0E9A                     	;# 
  2039  0E9B                     	;# 
  2040  0E9C                     	;# 
  2041  0E9D                     	;# 
  2042  0E9E                     	;# 
  2043  0E9F                     	;# 
  2044  0EA0                     	;# 
  2045  0EA1                     	;# 
  2046  0EA1                     	;# 
  2047  0EA2                     	;# 
  2048  0EA3                     	;# 
  2049  0EA3                     	;# 
  2050  0EA4                     	;# 
  2051  0EA5                     	;# 
  2052  0EA5                     	;# 
  2053  0EA6                     	;# 
  2054  0EA7                     	;# 
  2055  0EA7                     	;# 
  2056  0EA8                     	;# 
  2057  0EA9                     	;# 
  2058  0EAA                     	;# 
  2059  0EAB                     	;# 
  2060  0EAC                     	;# 
  2061  0EAD                     	;# 
  2062  0EAE                     	;# 
  2063  0EAF                     	;# 
  2064  0EB1                     	;# 
  2065  0EB2                     	;# 
  2066  0EB3                     	;# 
  2067  0EB4                     	;# 
  2068  0EB5                     	;# 
  2069  0EB6                     	;# 
  2070  0EB7                     	;# 
  2071  0EB8                     	;# 
  2072  0EB9                     	;# 
  2073  0EBA                     	;# 
  2074  0EBB                     	;# 
  2075  0EBC                     	;# 
  2076  0EBD                     	;# 
  2077  0EBE                     	;# 
  2078  0EBF                     	;# 
  2079  0EC0                     	;# 
  2080  0EC1                     	;# 
  2081  0EC1                     	;# 
  2082  0EC2                     	;# 
  2083  0EC3                     	;# 
  2084  0EC3                     	;# 
  2085  0EC4                     	;# 
  2086  0EC5                     	;# 
  2087  0EC5                     	;# 
  2088  0EC6                     	;# 
  2089  0EC7                     	;# 
  2090  0EC7                     	;# 
  2091  0EC8                     	;# 
  2092  0EC9                     	;# 
  2093  0ECA                     	;# 
  2094  0ECB                     	;# 
  2095  0ECC                     	;# 
  2096  0ECD                     	;# 
  2097  0ECE                     	;# 
  2098  0ECF                     	;# 
  2099  0ED1                     	;# 
  2100  0ED2                     	;# 
  2101  0ED3                     	;# 
  2102  0ED4                     	;# 
  2103  0ED5                     	;# 
  2104  0ED6                     	;# 
  2105  0ED7                     	;# 
  2106  0ED8                     	;# 
  2107  0ED9                     	;# 
  2108  0EDA                     	;# 
  2109  0EDB                     	;# 
  2110  0EDC                     	;# 
  2111  0EDD                     	;# 
  2112  0EDE                     	;# 
  2113  0EDF                     	;# 
  2114  0EE0                     	;# 
  2115  0EE1                     	;# 
  2116  0EE1                     	;# 
  2117  0EE2                     	;# 
  2118  0EE3                     	;# 
  2119  0EE3                     	;# 
  2120  0EE4                     	;# 
  2121  0EE5                     	;# 
  2122  0EE5                     	;# 
  2123  0EE6                     	;# 
  2124  0EE7                     	;# 
  2125  0EE7                     	;# 
  2126  0EE8                     	;# 
  2127  0EE9                     	;# 
  2128  0EEA                     	;# 
  2129  0EEB                     	;# 
  2130  0EEC                     	;# 
  2131  0EED                     	;# 
  2132  0EEE                     	;# 
  2133  0EEF                     	;# 
  2134  0F11                     	;# 
  2135  0F12                     	;# 
  2136  0F13                     	;# 
  2137  0F14                     	;# 
  2138  0F15                     	;# 
  2139  0F16                     	;# 
  2140  0F17                     	;# 
  2141  0F18                     	;# 
  2142  0F19                     	;# 
  2143  0F1A                     	;# 
  2144  0F1B                     	;# 
  2145  0F1C                     	;# 
  2146  0F1D                     	;# 
  2147  0F1E                     	;# 
  2148  0F1F                     	;# 
  2149  0F20                     	;# 
  2150  0F21                     	;# 
  2151  0F21                     	;# 
  2152  0F22                     	;# 
  2153  0F23                     	;# 
  2154  0F23                     	;# 
  2155  0F24                     	;# 
  2156  0F25                     	;# 
  2157  0F25                     	;# 
  2158  0F26                     	;# 
  2159  0F27                     	;# 
  2160  0F27                     	;# 
  2161  0F28                     	;# 
  2162  0F29                     	;# 
  2163  0F2A                     	;# 
  2164  0F2B                     	;# 
  2165  0F2C                     	;# 
  2166  0F2D                     	;# 
  2167  0F2E                     	;# 
  2168  0F2F                     	;# 
  2169  0FE4                     	;# 
  2170  0FE5                     	;# 
  2171  0FE6                     	;# 
  2172  0FE7                     	;# 
  2173  0FE8                     	;# 
  2174  0FE9                     	;# 
  2175  0FEA                     	;# 
  2176  0FEB                     	;# 
  2177  0FED                     	;# 
  2178  0FEE                     	;# 
  2179  0FEF                     	;# 
  2180  0000                     	;# 
  2181  0001                     	;# 
  2182  0002                     	;# 
  2183  0003                     	;# 
  2184  0004                     	;# 
  2185  0005                     	;# 
  2186  0006                     	;# 
  2187  0007                     	;# 
  2188  0008                     	;# 
  2189  0009                     	;# 
  2190  000A                     	;# 
  2191  000B                     	;# 
  2192  000C                     	;# 
  2193  000D                     	;# 
  2194  000E                     	;# 
  2195  000F                     	;# 
  2196  0010                     	;# 
  2197  0011                     	;# 
  2198  0012                     	;# 
  2199  0013                     	;# 
  2200  0014                     	;# 
  2201  0015                     	;# 
  2202  0016                     	;# 
  2203  0016                     	;# 
  2204  0017                     	;# 
  2205  0018                     	;# 
  2206  0019                     	;# 
  2207  001A                     	;# 
  2208  001B                     	;# 
  2209  001C                     	;# 
  2210  008C                     	;# 
  2211  008D                     	;# 
  2212  008E                     	;# 
  2213  008F                     	;# 
  2214  0090                     	;# 
  2215  0091                     	;# 
  2216  0092                     	;# 
  2217  0093                     	;# 
  2218  0094                     	;# 
  2219  0095                     	;# 
  2220  0096                     	;# 
  2221  0097                     	;# 
  2222  0098                     	;# 
  2223  0099                     	;# 
  2224  009A                     	;# 
  2225  009B                     	;# 
  2226  009B                     	;# 
  2227  009C                     	;# 
  2228  009D                     	;# 
  2229  009E                     	;# 
  2230  009F                     	;# 
  2231  010C                     	;# 
  2232  010D                     	;# 
  2233  010E                     	;# 
  2234  010F                     	;# 
  2235  0110                     	;# 
  2236  0111                     	;# 
  2237  0112                     	;# 
  2238  0113                     	;# 
  2239  0114                     	;# 
  2240  0115                     	;# 
  2241  0116                     	;# 
  2242  0117                     	;# 
  2243  0118                     	;# 
  2244  0119                     	;# 
  2245  011A                     	;# 
  2246  011B                     	;# 
  2247  011C                     	;# 
  2248  011D                     	;# 
  2249  011D                     	;# 
  2250  011D                     	;# 
  2251  011E                     	;# 
  2252  011F                     	;# 
  2253  018C                     	;# 
  2254  018D                     	;# 
  2255  018E                     	;# 
  2256  018F                     	;# 
  2257  0190                     	;# 
  2258  0191                     	;# 
  2259  0191                     	;# 
  2260  0192                     	;# 
  2261  0193                     	;# 
  2262  0193                     	;# 
  2263  0193                     	;# 
  2264  0194                     	;# 
  2265  0195                     	;# 
  2266  0196                     	;# 
  2267  0197                     	;# 
  2268  0199                     	;# 
  2269  0199                     	;# 
  2270  0199                     	;# 
  2271  019A                     	;# 
  2272  019A                     	;# 
  2273  019A                     	;# 
  2274  019B                     	;# 
  2275  019B                     	;# 
  2276  019B                     	;# 
  2277  019B                     	;# 
  2278  019B                     	;# 
  2279  019C                     	;# 
  2280  019C                     	;# 
  2281  019C                     	;# 
  2282  019D                     	;# 
  2283  019D                     	;# 
  2284  019D                     	;# 
  2285  019E                     	;# 
  2286  019E                     	;# 
  2287  019E                     	;# 
  2288  019F                     	;# 
  2289  019F                     	;# 
  2290  019F                     	;# 
  2291  019F                     	;# 
  2292  019F                     	;# 
  2293  020C                     	;# 
  2294  020D                     	;# 
  2295  020E                     	;# 
  2296  020F                     	;# 
  2297  0210                     	;# 
  2298  0211                     	;# 
  2299  0211                     	;# 
  2300  0212                     	;# 
  2301  0212                     	;# 
  2302  0213                     	;# 
  2303  0213                     	;# 
  2304  0214                     	;# 
  2305  0214                     	;# 
  2306  0215                     	;# 
  2307  0215                     	;# 
  2308  0215                     	;# 
  2309  0215                     	;# 
  2310  0216                     	;# 
  2311  0216                     	;# 
  2312  0217                     	;# 
  2313  0217                     	;# 
  2314  028C                     	;# 
  2315  028D                     	;# 
  2316  028E                     	;# 
  2317  028F                     	;# 
  2318  0290                     	;# 
  2319  0291                     	;# 
  2320  0291                     	;# 
  2321  0292                     	;# 
  2322  0293                     	;# 
  2323  0298                     	;# 
  2324  0298                     	;# 
  2325  0299                     	;# 
  2326  029A                     	;# 
  2327  030C                     	;# 
  2328  030D                     	;# 
  2329  030E                     	;# 
  2330  030F                     	;# 
  2331  0310                     	;# 
  2332  0311                     	;# 
  2333  0311                     	;# 
  2334  0312                     	;# 
  2335  0313                     	;# 
  2336  038C                     	;# 
  2337  038D                     	;# 
  2338  038E                     	;# 
  2339  038F                     	;# 
  2340  0390                     	;# 
  2341  0391                     	;# 
  2342  0392                     	;# 
  2343  0393                     	;# 
  2344  0394                     	;# 
  2345  0395                     	;# 
  2346  0396                     	;# 
  2347  0397                     	;# 
  2348  0398                     	;# 
  2349  0399                     	;# 
  2350  039D                     	;# 
  2351  039E                     	;# 
  2352  039F                     	;# 
  2353  0511                     	;# 
  2354  0513                     	;# 
  2355  0515                     	;# 
  2356  051A                     	;# 
  2357  0591                     	;# 
  2358  0592                     	;# 
  2359  0592                     	;# 
  2360  0593                     	;# 
  2361  0594                     	;# 
  2362  0594                     	;# 
  2363  0595                     	;# 
  2364  0596                     	;# 
  2365  0596                     	;# 
  2366  0E91                     	;# 
  2367  0E92                     	;# 
  2368  0E93                     	;# 
  2369  0E94                     	;# 
  2370  0E95                     	;# 
  2371  0E96                     	;# 
  2372  0E97                     	;# 
  2373  0E98                     	;# 
  2374  0E99                     	;# 
  2375  0E9A                     	;# 
  2376  0E9B                     	;# 
  2377  0E9C                     	;# 
  2378  0E9D                     	;# 
  2379  0E9E                     	;# 
  2380  0E9F                     	;# 
  2381  0EA0                     	;# 
  2382  0EA1                     	;# 
  2383  0EA1                     	;# 
  2384  0EA2                     	;# 
  2385  0EA3                     	;# 
  2386  0EA3                     	;# 
  2387  0EA4                     	;# 
  2388  0EA5                     	;# 
  2389  0EA5                     	;# 
  2390  0EA6                     	;# 
  2391  0EA7                     	;# 
  2392  0EA7                     	;# 
  2393  0EA8                     	;# 
  2394  0EA9                     	;# 
  2395  0EAA                     	;# 
  2396  0EAB                     	;# 
  2397  0EAC                     	;# 
  2398  0EAD                     	;# 
  2399  0EAE                     	;# 
  2400  0EAF                     	;# 
  2401  0EB1                     	;# 
  2402  0EB2                     	;# 
  2403  0EB3                     	;# 
  2404  0EB4                     	;# 
  2405  0EB5                     	;# 
  2406  0EB6                     	;# 
  2407  0EB7                     	;# 
  2408  0EB8                     	;# 
  2409  0EB9                     	;# 
  2410  0EBA                     	;# 
  2411  0EBB                     	;# 
  2412  0EBC                     	;# 
  2413  0EBD                     	;# 
  2414  0EBE                     	;# 
  2415  0EBF                     	;# 
  2416  0EC0                     	;# 
  2417  0EC1                     	;# 
  2418  0EC1                     	;# 
  2419  0EC2                     	;# 
  2420  0EC3                     	;# 
  2421  0EC3                     	;# 
  2422  0EC4                     	;# 
  2423  0EC5                     	;# 
  2424  0EC5                     	;# 
  2425  0EC6                     	;# 
  2426  0EC7                     	;# 
  2427  0EC7                     	;# 
  2428  0EC8                     	;# 
  2429  0EC9                     	;# 
  2430  0ECA                     	;# 
  2431  0ECB                     	;# 
  2432  0ECC                     	;# 
  2433  0ECD                     	;# 
  2434  0ECE                     	;# 
  2435  0ECF                     	;# 
  2436  0ED1                     	;# 
  2437  0ED2                     	;# 
  2438  0ED3                     	;# 
  2439  0ED4                     	;# 
  2440  0ED5                     	;# 
  2441  0ED6                     	;# 
  2442  0ED7                     	;# 
  2443  0ED8                     	;# 
  2444  0ED9                     	;# 
  2445  0EDA                     	;# 
  2446  0EDB                     	;# 
  2447  0EDC                     	;# 
  2448  0EDD                     	;# 
  2449  0EDE                     	;# 
  2450  0EDF                     	;# 
  2451  0EE0                     	;# 
  2452  0EE1                     	;# 
  2453  0EE1                     	;# 
  2454  0EE2                     	;# 
  2455  0EE3                     	;# 
  2456  0EE3                     	;# 
  2457  0EE4                     	;# 
  2458  0EE5                     	;# 
  2459  0EE5                     	;# 
  2460  0EE6                     	;# 
  2461  0EE7                     	;# 
  2462  0EE7                     	;# 
  2463  0EE8                     	;# 
  2464  0EE9                     	;# 
  2465  0EEA                     	;# 
  2466  0EEB                     	;# 
  2467  0EEC                     	;# 
  2468  0EED                     	;# 
  2469  0EEE                     	;# 
  2470  0EEF                     	;# 
  2471  0F11                     	;# 
  2472  0F12                     	;# 
  2473  0F13                     	;# 
  2474  0F14                     	;# 
  2475  0F15                     	;# 
  2476  0F16                     	;# 
  2477  0F17                     	;# 
  2478  0F18                     	;# 
  2479  0F19                     	;# 
  2480  0F1A                     	;# 
  2481  0F1B                     	;# 
  2482  0F1C                     	;# 
  2483  0F1D                     	;# 
  2484  0F1E                     	;# 
  2485  0F1F                     	;# 
  2486  0F20                     	;# 
  2487  0F21                     	;# 
  2488  0F21                     	;# 
  2489  0F22                     	;# 
  2490  0F23                     	;# 
  2491  0F23                     	;# 
  2492  0F24                     	;# 
  2493  0F25                     	;# 
  2494  0F25                     	;# 
  2495  0F26                     	;# 
  2496  0F27                     	;# 
  2497  0F27                     	;# 
  2498  0F28                     	;# 
  2499  0F29                     	;# 
  2500  0F2A                     	;# 
  2501  0F2B                     	;# 
  2502  0F2C                     	;# 
  2503  0F2D                     	;# 
  2504  0F2E                     	;# 
  2505  0F2F                     	;# 
  2506  0FE4                     	;# 
  2507  0FE5                     	;# 
  2508  0FE6                     	;# 
  2509  0FE7                     	;# 
  2510  0FE8                     	;# 
  2511  0FE9                     	;# 
  2512  0FEA                     	;# 
  2513  0FEB                     	;# 
  2514  0FED                     	;# 
  2515  0FEE                     	;# 
  2516  0FEF                     	;# 
  2517  0000                     	;# 
  2518  0001                     	;# 
  2519  0002                     	;# 
  2520  0003                     	;# 
  2521  0004                     	;# 
  2522  0005                     	;# 
  2523  0006                     	;# 
  2524  0007                     	;# 
  2525  0008                     	;# 
  2526  0009                     	;# 
  2527  000A                     	;# 
  2528  000B                     	;# 
  2529  000C                     	;# 
  2530  000D                     	;# 
  2531  000E                     	;# 
  2532  000F                     	;# 
  2533  0010                     	;# 
  2534  0011                     	;# 
  2535  0012                     	;# 
  2536  0013                     	;# 
  2537  0014                     	;# 
  2538  0015                     	;# 
  2539  0016                     	;# 
  2540  0016                     	;# 
  2541  0017                     	;# 
  2542  0018                     	;# 
  2543  0019                     	;# 
  2544  001A                     	;# 
  2545  001B                     	;# 
  2546  001C                     	;# 
  2547  008C                     	;# 
  2548  008D                     	;# 
  2549  008E                     	;# 
  2550  008F                     	;# 
  2551  0090                     	;# 
  2552  0091                     	;# 
  2553  0092                     	;# 
  2554  0093                     	;# 
  2555  0094                     	;# 
  2556  0095                     	;# 
  2557  0096                     	;# 
  2558  0097                     	;# 
  2559  0098                     	;# 
  2560  0099                     	;# 
  2561  009A                     	;# 
  2562  009B                     	;# 
  2563  009B                     	;# 
  2564  009C                     	;# 
  2565  009D                     	;# 
  2566  009E                     	;# 
  2567  009F                     	;# 
  2568  010C                     	;# 
  2569  010D                     	;# 
  2570  010E                     	;# 
  2571  010F                     	;# 
  2572  0110                     	;# 
  2573  0111                     	;# 
  2574  0112                     	;# 
  2575  0113                     	;# 
  2576  0114                     	;# 
  2577  0115                     	;# 
  2578  0116                     	;# 
  2579  0117                     	;# 
  2580  0118                     	;# 
  2581  0119                     	;# 
  2582  011A                     	;# 
  2583  011B                     	;# 
  2584  011C                     	;# 
  2585  011D                     	;# 
  2586  011D                     	;# 
  2587  011D                     	;# 
  2588  011E                     	;# 
  2589  011F                     	;# 
  2590  018C                     	;# 
  2591  018D                     	;# 
  2592  018E                     	;# 
  2593  018F                     	;# 
  2594  0190                     	;# 
  2595  0191                     	;# 
  2596  0191                     	;# 
  2597  0192                     	;# 
  2598  0193                     	;# 
  2599  0193                     	;# 
  2600  0193                     	;# 
  2601  0194                     	;# 
  2602  0195                     	;# 
  2603  0196                     	;# 
  2604  0197                     	;# 
  2605  0199                     	;# 
  2606  0199                     	;# 
  2607  0199                     	;# 
  2608  019A                     	;# 
  2609  019A                     	;# 
  2610  019A                     	;# 
  2611  019B                     	;# 
  2612  019B                     	;# 
  2613  019B                     	;# 
  2614  019B                     	;# 
  2615  019B                     	;# 
  2616  019C                     	;# 
  2617  019C                     	;# 
  2618  019C                     	;# 
  2619  019D                     	;# 
  2620  019D                     	;# 
  2621  019D                     	;# 
  2622  019E                     	;# 
  2623  019E                     	;# 
  2624  019E                     	;# 
  2625  019F                     	;# 
  2626  019F                     	;# 
  2627  019F                     	;# 
  2628  019F                     	;# 
  2629  019F                     	;# 
  2630  020C                     	;# 
  2631  020D                     	;# 
  2632  020E                     	;# 
  2633  020F                     	;# 
  2634  0210                     	;# 
  2635  0211                     	;# 
  2636  0211                     	;# 
  2637  0212                     	;# 
  2638  0212                     	;# 
  2639  0213                     	;# 
  2640  0213                     	;# 
  2641  0214                     	;# 
  2642  0214                     	;# 
  2643  0215                     	;# 
  2644  0215                     	;# 
  2645  0215                     	;# 
  2646  0215                     	;# 
  2647  0216                     	;# 
  2648  0216                     	;# 
  2649  0217                     	;# 
  2650  0217                     	;# 
  2651  028C                     	;# 
  2652  028D                     	;# 
  2653  028E                     	;# 
  2654  028F                     	;# 
  2655  0290                     	;# 
  2656  0291                     	;# 
  2657  0291                     	;# 
  2658  0292                     	;# 
  2659  0293                     	;# 
  2660  0298                     	;# 
  2661  0298                     	;# 
  2662  0299                     	;# 
  2663  029A                     	;# 
  2664  030C                     	;# 
  2665  030D                     	;# 
  2666  030E                     	;# 
  2667  030F                     	;# 
  2668  0310                     	;# 
  2669  0311                     	;# 
  2670  0311                     	;# 
  2671  0312                     	;# 
  2672  0313                     	;# 
  2673  038C                     	;# 
  2674  038D                     	;# 
  2675  038E                     	;# 
  2676  038F                     	;# 
  2677  0390                     	;# 
  2678  0391                     	;# 
  2679  0392                     	;# 
  2680  0393                     	;# 
  2681  0394                     	;# 
  2682  0395                     	;# 
  2683  0396                     	;# 
  2684  0397                     	;# 
  2685  0398                     	;# 
  2686  0399                     	;# 
  2687  039D                     	;# 
  2688  039E                     	;# 
  2689  039F                     	;# 
  2690  0511                     	;# 
  2691  0513                     	;# 
  2692  0515                     	;# 
  2693  051A                     	;# 
  2694  0591                     	;# 
  2695  0592                     	;# 
  2696  0592                     	;# 
  2697  0593                     	;# 
  2698  0594                     	;# 
  2699  0594                     	;# 
  2700  0595                     	;# 
  2701  0596                     	;# 
  2702  0596                     	;# 
  2703  0E91                     	;# 
  2704  0E92                     	;# 
  2705  0E93                     	;# 
  2706  0E94                     	;# 
  2707  0E95                     	;# 
  2708  0E96                     	;# 
  2709  0E97                     	;# 
  2710  0E98                     	;# 
  2711  0E99                     	;# 
  2712  0E9A                     	;# 
  2713  0E9B                     	;# 
  2714  0E9C                     	;# 
  2715  0E9D                     	;# 
  2716  0E9E                     	;# 
  2717  0E9F                     	;# 
  2718  0EA0                     	;# 
  2719  0EA1                     	;# 
  2720  0EA1                     	;# 
  2721  0EA2                     	;# 
  2722  0EA3                     	;# 
  2723  0EA3                     	;# 
  2724  0EA4                     	;# 
  2725  0EA5                     	;# 
  2726  0EA5                     	;# 
  2727  0EA6                     	;# 
  2728  0EA7                     	;# 
  2729  0EA7                     	;# 
  2730  0EA8                     	;# 
  2731  0EA9                     	;# 
  2732  0EAA                     	;# 
  2733  0EAB                     	;# 
  2734  0EAC                     	;# 
  2735  0EAD                     	;# 
  2736  0EAE                     	;# 
  2737  0EAF                     	;# 
  2738  0EB1                     	;# 
  2739  0EB2                     	;# 
  2740  0EB3                     	;# 
  2741  0EB4                     	;# 
  2742  0EB5                     	;# 
  2743  0EB6                     	;# 
  2744  0EB7                     	;# 
  2745  0EB8                     	;# 
  2746  0EB9                     	;# 
  2747  0EBA                     	;# 
  2748  0EBB                     	;# 
  2749  0EBC                     	;# 
  2750  0EBD                     	;# 
  2751  0EBE                     	;# 
  2752  0EBF                     	;# 
  2753  0EC0                     	;# 
  2754  0EC1                     	;# 
  2755  0EC1                     	;# 
  2756  0EC2                     	;# 
  2757  0EC3                     	;# 
  2758  0EC3                     	;# 
  2759  0EC4                     	;# 
  2760  0EC5                     	;# 
  2761  0EC5                     	;# 
  2762  0EC6                     	;# 
  2763  0EC7                     	;# 
  2764  0EC7                     	;# 
  2765  0EC8                     	;# 
  2766  0EC9                     	;# 
  2767  0ECA                     	;# 
  2768  0ECB                     	;# 
  2769  0ECC                     	;# 
  2770  0ECD                     	;# 
  2771  0ECE                     	;# 
  2772  0ECF                     	;# 
  2773  0ED1                     	;# 
  2774  0ED2                     	;# 
  2775  0ED3                     	;# 
  2776  0ED4                     	;# 
  2777  0ED5                     	;# 
  2778  0ED6                     	;# 
  2779  0ED7                     	;# 
  2780  0ED8                     	;# 
  2781  0ED9                     	;# 
  2782  0EDA                     	;# 
  2783  0EDB                     	;# 
  2784  0EDC                     	;# 
  2785  0EDD                     	;# 
  2786  0EDE                     	;# 
  2787  0EDF                     	;# 
  2788  0EE0                     	;# 
  2789  0EE1                     	;# 
  2790  0EE1                     	;# 
  2791  0EE2                     	;# 
  2792  0EE3                     	;# 
  2793  0EE3                     	;# 
  2794  0EE4                     	;# 
  2795  0EE5                     	;# 
  2796  0EE5                     	;# 
  2797  0EE6                     	;# 
  2798  0EE7                     	;# 
  2799  0EE7                     	;# 
  2800  0EE8                     	;# 
  2801  0EE9                     	;# 
  2802  0EEA                     	;# 
  2803  0EEB                     	;# 
  2804  0EEC                     	;# 
  2805  0EED                     	;# 
  2806  0EEE                     	;# 
  2807  0EEF                     	;# 
  2808  0F11                     	;# 
  2809  0F12                     	;# 
  2810  0F13                     	;# 
  2811  0F14                     	;# 
  2812  0F15                     	;# 
  2813  0F16                     	;# 
  2814  0F17                     	;# 
  2815  0F18                     	;# 
  2816  0F19                     	;# 
  2817  0F1A                     	;# 
  2818  0F1B                     	;# 
  2819  0F1C                     	;# 
  2820  0F1D                     	;# 
  2821  0F1E                     	;# 
  2822  0F1F                     	;# 
  2823  0F20                     	;# 
  2824  0F21                     	;# 
  2825  0F21                     	;# 
  2826  0F22                     	;# 
  2827  0F23                     	;# 
  2828  0F23                     	;# 
  2829  0F24                     	;# 
  2830  0F25                     	;# 
  2831  0F25                     	;# 
  2832  0F26                     	;# 
  2833  0F27                     	;# 
  2834  0F27                     	;# 
  2835  0F28                     	;# 
  2836  0F29                     	;# 
  2837  0F2A                     	;# 
  2838  0F2B                     	;# 
  2839  0F2C                     	;# 
  2840  0F2D                     	;# 
  2841  0F2E                     	;# 
  2842  0F2F                     	;# 
  2843  0FE4                     	;# 
  2844  0FE5                     	;# 
  2845  0FE6                     	;# 
  2846  0FE7                     	;# 
  2847  0FE8                     	;# 
  2848  0FE9                     	;# 
  2849  0FEA                     	;# 
  2850  0FEB                     	;# 
  2851  0FED                     	;# 
  2852  0FEE                     	;# 
  2853  0FEF                     	;_str
  2854                           
  2855                           	psect	idataBANK5
  2856  36A7                     __pidataBANK5:	
  2857                           
  2858                           ;initializer for main@F7728
  2859  36A7  3414               	retlw	20
  2860  36A8  3400               	retlw	0
  2861  36A9  3414               	retlw	20
  2862  36AA  3400               	retlw	0
  2863  36AB  3414               	retlw	20
  2864  36AC  3400               	retlw	0
  2865  36AD  3414               	retlw	20
  2866  36AE  3400               	retlw	0
  2867  36AF  3414               	retlw	20
  2868  36B0  3400               	retlw	0
  2869                           
  2870                           ;initializer for _tempChannels
  2871  36B1  340C               	retlw	12
  2872  36B2  340A               	retlw	10
  2873  36B3  3408               	retlw	8
  2874  36B4  3409               	retlw	9
  2875  36B5  340B               	retlw	11
  2876                           
  2877                           ;initializer for SSD1306_Test@F7528
  2878  36B6  348D               	retlw	141
  2879  36B7  3414               	retlw	20
  2880                           
  2881                           ;initializer for _configReg
  2882  36B8  3400               	retlw	0
  2883  36B9  3490               	retlw	144
  2884  36BA  341F               	retlw	31
  2885  36BB  34C4               	retlw	196
  2886  36BC  3400               	retlw	0
  2887  36BD  3490               	retlw	144
  2888                           
  2889                           	psect	stringtext1
  2890  07E3                     __pstringtext1:	
  2891  07E3                     _OledFont:	
  2892  07E3  3400               	retlw	0
  2893  07E4  3400               	retlw	0
  2894  07E5  3400               	retlw	0
  2895  07E6  3400               	retlw	0
  2896  07E7  3400               	retlw	0
  2897  07E8  3400               	retlw	0
  2898  07E9  3400               	retlw	0
  2899  07EA  3400               	retlw	0
  2900  07EB  3400               	retlw	0
  2901  07EC  3400               	retlw	0
  2902  07ED  345F               	retlw	95
  2903  07EE  3400               	retlw	0
  2904  07EF  3400               	retlw	0
  2905  07F0  3400               	retlw	0
  2906  07F1  3400               	retlw	0
  2907  07F2  3400               	retlw	0
  2908  07F3  3400               	retlw	0
  2909  07F4  3400               	retlw	0
  2910  07F5  3407               	retlw	7
  2911  07F6  3400               	retlw	0
  2912  07F7  3407               	retlw	7
  2913  07F8  3400               	retlw	0
  2914  07F9  3400               	retlw	0
  2915  07FA  3400               	retlw	0
  2916  07FB  3400               	retlw	0
  2917  07FC  3414               	retlw	20
  2918  07FD  347F               	retlw	127
  2919  07FE  3414               	retlw	20
  2920  07FF  347F               	retlw	127
  2921  0800  3414               	retlw	20
  2922  0801  3400               	retlw	0
  2923  0802  3400               	retlw	0
  2924  0803  3400               	retlw	0
  2925  0804  3424               	retlw	36
  2926  0805  342A               	retlw	42
  2927  0806  347F               	retlw	127
  2928  0807  342A               	retlw	42
  2929  0808  3412               	retlw	18
  2930  0809  3400               	retlw	0
  2931  080A  3400               	retlw	0
  2932  080B  3400               	retlw	0
  2933  080C  3423               	retlw	35
  2934  080D  3413               	retlw	19
  2935  080E  3408               	retlw	8
  2936  080F  3464               	retlw	100
  2937  0810  3462               	retlw	98
  2938  0811  3400               	retlw	0
  2939  0812  3400               	retlw	0
  2940  0813  3400               	retlw	0
  2941  0814  3436               	retlw	54
  2942  0815  3449               	retlw	73
  2943  0816  3455               	retlw	85
  2944  0817  3422               	retlw	34
  2945  0818  3450               	retlw	80
  2946  0819  3400               	retlw	0
  2947  081A  3400               	retlw	0
  2948  081B  3400               	retlw	0
  2949  081C  3400               	retlw	0
  2950  081D  3405               	retlw	5
  2951  081E  3403               	retlw	3
  2952  081F  3400               	retlw	0
  2953  0820  3400               	retlw	0
  2954  0821  3400               	retlw	0
  2955  0822  3400               	retlw	0
  2956  0823  3400               	retlw	0
  2957  0824  341C               	retlw	28
  2958  0825  3422               	retlw	34
  2959  0826  3441               	retlw	65
  2960  0827  3400               	retlw	0
  2961  0828  3400               	retlw	0
  2962  0829  3400               	retlw	0
  2963  082A  3400               	retlw	0
  2964  082B  3400               	retlw	0
  2965  082C  3441               	retlw	65
  2966  082D  3422               	retlw	34
  2967  082E  341C               	retlw	28
  2968  082F  3400               	retlw	0
  2969  0830  3400               	retlw	0
  2970  0831  3400               	retlw	0
  2971  0832  3400               	retlw	0
  2972  0833  3400               	retlw	0
  2973  0834  3408               	retlw	8
  2974  0835  342A               	retlw	42
  2975  0836  341C               	retlw	28
  2976  0837  342A               	retlw	42
  2977  0838  3408               	retlw	8
  2978  0839  3400               	retlw	0
  2979  083A  3400               	retlw	0
  2980  083B  3400               	retlw	0
  2981  083C  3408               	retlw	8
  2982  083D  3408               	retlw	8
  2983  083E  343E               	retlw	62
  2984  083F  3408               	retlw	8
  2985  0840  3408               	retlw	8
  2986  0841  3400               	retlw	0
  2987  0842  3400               	retlw	0
  2988  0843  3400               	retlw	0
  2989  0844  34A0               	retlw	160
  2990  0845  3460               	retlw	96
  2991  0846  3400               	retlw	0
  2992  0847  3400               	retlw	0
  2993  0848  3400               	retlw	0
  2994  0849  3400               	retlw	0
  2995  084A  3400               	retlw	0
  2996  084B  3400               	retlw	0
  2997  084C  3408               	retlw	8
  2998  084D  3408               	retlw	8
  2999  084E  3408               	retlw	8
  3000  084F  3408               	retlw	8
  3001  0850  3408               	retlw	8
  3002  0851  3400               	retlw	0
  3003  0852  3400               	retlw	0
  3004  0853  3400               	retlw	0
  3005  0854  3460               	retlw	96
  3006  0855  3460               	retlw	96
  3007  0856  3400               	retlw	0
  3008  0857  3400               	retlw	0
  3009  0858  3400               	retlw	0
  3010  0859  3400               	retlw	0
  3011  085A  3400               	retlw	0
  3012  085B  3400               	retlw	0
  3013  085C  3420               	retlw	32
  3014  085D  3410               	retlw	16
  3015  085E  3408               	retlw	8
  3016  085F  3404               	retlw	4
  3017  0860  3402               	retlw	2
  3018  0861  3400               	retlw	0
  3019  0862  3400               	retlw	0
  3020  0863  3400               	retlw	0
  3021  0864  343E               	retlw	62
  3022  0865  3451               	retlw	81
  3023  0866  3449               	retlw	73
  3024  0867  3445               	retlw	69
  3025  0868  343E               	retlw	62
  3026  0869  3400               	retlw	0
  3027  086A  3400               	retlw	0
  3028  086B  3400               	retlw	0
  3029  086C  3400               	retlw	0
  3030  086D  3442               	retlw	66
  3031  086E  347F               	retlw	127
  3032  086F  3440               	retlw	64
  3033  0870  3400               	retlw	0
  3034  0871  3400               	retlw	0
  3035  0872  3400               	retlw	0
  3036  0873  3400               	retlw	0
  3037  0874  3462               	retlw	98
  3038  0875  3451               	retlw	81
  3039  0876  3449               	retlw	73
  3040  0877  3449               	retlw	73
  3041  0878  3446               	retlw	70
  3042  0879  3400               	retlw	0
  3043  087A  3400               	retlw	0
  3044  087B  3400               	retlw	0
  3045  087C  3422               	retlw	34
  3046  087D  3441               	retlw	65
  3047  087E  3449               	retlw	73
  3048  087F  3449               	retlw	73
  3049  0880  3436               	retlw	54
  3050  0881  3400               	retlw	0
  3051  0882  3400               	retlw	0
  3052  0883  3400               	retlw	0
  3053  0884  3418               	retlw	24
  3054  0885  3414               	retlw	20
  3055  0886  3412               	retlw	18
  3056  0887  347F               	retlw	127
  3057  0888  3410               	retlw	16
  3058  0889  3400               	retlw	0
  3059  088A  3400               	retlw	0
  3060  088B  3400               	retlw	0
  3061  088C  3427               	retlw	39
  3062  088D  3445               	retlw	69
  3063  088E  3445               	retlw	69
  3064  088F  3445               	retlw	69
  3065  0890  3439               	retlw	57
  3066  0891  3400               	retlw	0
  3067  0892  3400               	retlw	0
  3068  0893  3400               	retlw	0
  3069  0894  343C               	retlw	60
  3070  0895  344A               	retlw	74
  3071  0896  3449               	retlw	73
  3072  0897  3449               	retlw	73
  3073  0898  3430               	retlw	48
  3074  0899  3400               	retlw	0
  3075  089A  3400               	retlw	0
  3076  089B  3400               	retlw	0
  3077  089C  3401               	retlw	1
  3078  089D  3471               	retlw	113
  3079  089E  3409               	retlw	9
  3080  089F  3405               	retlw	5
  3081  08A0  3403               	retlw	3
  3082  08A1  3400               	retlw	0
  3083  08A2  3400               	retlw	0
  3084  08A3  3400               	retlw	0
  3085  08A4  3436               	retlw	54
  3086  08A5  3449               	retlw	73
  3087  08A6  3449               	retlw	73
  3088  08A7  3449               	retlw	73
  3089  08A8  3436               	retlw	54
  3090  08A9  3400               	retlw	0
  3091  08AA  3400               	retlw	0
  3092  08AB  3400               	retlw	0
  3093  08AC  3406               	retlw	6
  3094  08AD  3449               	retlw	73
  3095  08AE  3449               	retlw	73
  3096  08AF  3429               	retlw	41
  3097  08B0  341E               	retlw	30
  3098  08B1  3400               	retlw	0
  3099  08B2  3400               	retlw	0
  3100  08B3  3400               	retlw	0
  3101  08B4  3400               	retlw	0
  3102  08B5  3436               	retlw	54
  3103  08B6  3436               	retlw	54
  3104  08B7  3400               	retlw	0
  3105  08B8  3400               	retlw	0
  3106  08B9  3400               	retlw	0
  3107  08BA  3400               	retlw	0
  3108  08BB  3400               	retlw	0
  3109  08BC  3400               	retlw	0
  3110  08BD  34AC               	retlw	172
  3111  08BE  346C               	retlw	108
  3112  08BF  3400               	retlw	0
  3113  08C0  3400               	retlw	0
  3114  08C1  3400               	retlw	0
  3115  08C2  3400               	retlw	0
  3116  08C3  3400               	retlw	0
  3117  08C4  3408               	retlw	8
  3118  08C5  3414               	retlw	20
  3119  08C6  3422               	retlw	34
  3120  08C7  3441               	retlw	65
  3121  08C8  3400               	retlw	0
  3122  08C9  3400               	retlw	0
  3123  08CA  3400               	retlw	0
  3124  08CB  3400               	retlw	0
  3125  08CC  3414               	retlw	20
  3126  08CD  3414               	retlw	20
  3127  08CE  3414               	retlw	20
  3128  08CF  3414               	retlw	20
  3129  08D0  3414               	retlw	20
  3130  08D1  3400               	retlw	0
  3131  08D2  3400               	retlw	0
  3132  08D3  3400               	retlw	0
  3133  08D4  3441               	retlw	65
  3134  08D5  3422               	retlw	34
  3135  08D6  3414               	retlw	20
  3136  08D7  3408               	retlw	8
  3137  08D8  3400               	retlw	0
  3138  08D9  3400               	retlw	0
  3139  08DA  3400               	retlw	0
  3140  08DB  3400               	retlw	0
  3141  08DC  3402               	retlw	2
  3142  08DD  3401               	retlw	1
  3143  08DE  3451               	retlw	81
  3144  08DF  3409               	retlw	9
  3145  08E0  3406               	retlw	6
  3146  08E1  3400               	retlw	0
  3147  08E2  3400               	retlw	0
  3148  08E3  3400               	retlw	0
  3149  08E4  3432               	retlw	50
  3150  08E5  3449               	retlw	73
  3151  08E6  3479               	retlw	121
  3152  08E7  3441               	retlw	65
  3153  08E8  343E               	retlw	62
  3154  08E9  3400               	retlw	0
  3155  08EA  3400               	retlw	0
  3156  08EB  3400               	retlw	0
  3157  08EC  347E               	retlw	126
  3158  08ED  3409               	retlw	9
  3159  08EE  3409               	retlw	9
  3160  08EF  3409               	retlw	9
  3161  08F0  347E               	retlw	126
  3162  08F1  3400               	retlw	0
  3163  08F2  3400               	retlw	0
  3164  08F3  3400               	retlw	0
  3165  08F4  347F               	retlw	127
  3166  08F5  3449               	retlw	73
  3167  08F6  3449               	retlw	73
  3168  08F7  3449               	retlw	73
  3169  08F8  3436               	retlw	54
  3170  08F9  3400               	retlw	0
  3171  08FA  3400               	retlw	0
  3172  08FB  3400               	retlw	0
  3173  08FC  343E               	retlw	62
  3174  08FD  3441               	retlw	65
  3175  08FE  3441               	retlw	65
  3176  08FF  3441               	retlw	65
  3177  0900  3422               	retlw	34
  3178  0901  3400               	retlw	0
  3179  0902  3400               	retlw	0
  3180  0903  3400               	retlw	0
  3181  0904  347F               	retlw	127
  3182  0905  3441               	retlw	65
  3183  0906  3441               	retlw	65
  3184  0907  3422               	retlw	34
  3185  0908  341C               	retlw	28
  3186  0909  3400               	retlw	0
  3187  090A  3400               	retlw	0
  3188  090B  3400               	retlw	0
  3189  090C  347F               	retlw	127
  3190  090D  3449               	retlw	73
  3191  090E  3449               	retlw	73
  3192  090F  3449               	retlw	73
  3193  0910  3441               	retlw	65
  3194  0911  3400               	retlw	0
  3195  0912  3400               	retlw	0
  3196  0913  3400               	retlw	0
  3197  0914  347F               	retlw	127
  3198  0915  3409               	retlw	9
  3199  0916  3409               	retlw	9
  3200  0917  3409               	retlw	9
  3201  0918  3401               	retlw	1
  3202  0919  3400               	retlw	0
  3203  091A  3400               	retlw	0
  3204  091B  3400               	retlw	0
  3205  091C  343E               	retlw	62
  3206  091D  3441               	retlw	65
  3207  091E  3441               	retlw	65
  3208  091F  3451               	retlw	81
  3209  0920  3472               	retlw	114
  3210  0921  3400               	retlw	0
  3211  0922  3400               	retlw	0
  3212  0923  3400               	retlw	0
  3213  0924  347F               	retlw	127
  3214  0925  3408               	retlw	8
  3215  0926  3408               	retlw	8
  3216  0927  3408               	retlw	8
  3217  0928  347F               	retlw	127
  3218  0929  3400               	retlw	0
  3219  092A  3400               	retlw	0
  3220  092B  3400               	retlw	0
  3221  092C  3441               	retlw	65
  3222  092D  347F               	retlw	127
  3223  092E  3441               	retlw	65
  3224  092F  3400               	retlw	0
  3225  0930  3400               	retlw	0
  3226  0931  3400               	retlw	0
  3227  0932  3400               	retlw	0
  3228  0933  3400               	retlw	0
  3229  0934  3420               	retlw	32
  3230  0935  3440               	retlw	64
  3231  0936  3441               	retlw	65
  3232  0937  343F               	retlw	63
  3233  0938  3401               	retlw	1
  3234  0939  3400               	retlw	0
  3235  093A  3400               	retlw	0
  3236  093B  3400               	retlw	0
  3237  093C  347F               	retlw	127
  3238  093D  3408               	retlw	8
  3239  093E  3414               	retlw	20
  3240  093F  3422               	retlw	34
  3241  0940  3441               	retlw	65
  3242  0941  3400               	retlw	0
  3243  0942  3400               	retlw	0
  3244  0943  3400               	retlw	0
  3245  0944  347F               	retlw	127
  3246  0945  3440               	retlw	64
  3247  0946  3440               	retlw	64
  3248  0947  3440               	retlw	64
  3249  0948  3440               	retlw	64
  3250  0949  3400               	retlw	0
  3251  094A  3400               	retlw	0
  3252  094B  3400               	retlw	0
  3253  094C  347F               	retlw	127
  3254  094D  3402               	retlw	2
  3255  094E  340C               	retlw	12
  3256  094F  3402               	retlw	2
  3257  0950  347F               	retlw	127
  3258  0951  3400               	retlw	0
  3259  0952  3400               	retlw	0
  3260  0953  3400               	retlw	0
  3261  0954  347F               	retlw	127
  3262  0955  3404               	retlw	4
  3263  0956  3408               	retlw	8
  3264  0957  3410               	retlw	16
  3265  0958  347F               	retlw	127
  3266  0959  3400               	retlw	0
  3267  095A  3400               	retlw	0
  3268  095B  3400               	retlw	0
  3269  095C  343E               	retlw	62
  3270  095D  3441               	retlw	65
  3271  095E  3441               	retlw	65
  3272  095F  3441               	retlw	65
  3273  0960  343E               	retlw	62
  3274  0961  3400               	retlw	0
  3275  0962  3400               	retlw	0
  3276  0963  3400               	retlw	0
  3277  0964  347F               	retlw	127
  3278  0965  3409               	retlw	9
  3279  0966  3409               	retlw	9
  3280  0967  3409               	retlw	9
  3281  0968  3406               	retlw	6
  3282  0969  3400               	retlw	0
  3283  096A  3400               	retlw	0
  3284  096B  3400               	retlw	0
  3285  096C  343E               	retlw	62
  3286  096D  3441               	retlw	65
  3287  096E  3451               	retlw	81
  3288  096F  3421               	retlw	33
  3289  0970  345E               	retlw	94
  3290  0971  3400               	retlw	0
  3291  0972  3400               	retlw	0
  3292  0973  3400               	retlw	0
  3293  0974  347F               	retlw	127
  3294  0975  3409               	retlw	9
  3295  0976  3419               	retlw	25
  3296  0977  3429               	retlw	41
  3297  0978  3446               	retlw	70
  3298  0979  3400               	retlw	0
  3299  097A  3400               	retlw	0
  3300  097B  3400               	retlw	0
  3301  097C  3426               	retlw	38
  3302  097D  3449               	retlw	73
  3303  097E  3449               	retlw	73
  3304  097F  3449               	retlw	73
  3305  0980  3432               	retlw	50
  3306  0981  3400               	retlw	0
  3307  0982  3400               	retlw	0
  3308  0983  3400               	retlw	0
  3309  0984  3401               	retlw	1
  3310  0985  3401               	retlw	1
  3311  0986  347F               	retlw	127
  3312  0987  3401               	retlw	1
  3313  0988  3401               	retlw	1
  3314  0989  3400               	retlw	0
  3315  098A  3400               	retlw	0
  3316  098B  3400               	retlw	0
  3317  098C  343F               	retlw	63
  3318  098D  3440               	retlw	64
  3319  098E  3440               	retlw	64
  3320  098F  3440               	retlw	64
  3321  0990  343F               	retlw	63
  3322  0991  3400               	retlw	0
  3323  0992  3400               	retlw	0
  3324  0993  3400               	retlw	0
  3325  0994  341F               	retlw	31
  3326  0995  3420               	retlw	32
  3327  0996  3440               	retlw	64
  3328  0997  3420               	retlw	32
  3329  0998  341F               	retlw	31
  3330  0999  3400               	retlw	0
  3331  099A  3400               	retlw	0
  3332  099B  3400               	retlw	0
  3333  099C  343F               	retlw	63
  3334  099D  3440               	retlw	64
  3335  099E  3438               	retlw	56
  3336  099F  3440               	retlw	64
  3337  09A0  343F               	retlw	63
  3338  09A1  3400               	retlw	0
  3339  09A2  3400               	retlw	0
  3340  09A3  3400               	retlw	0
  3341  09A4  3463               	retlw	99
  3342  09A5  3414               	retlw	20
  3343  09A6  3408               	retlw	8
  3344  09A7  3414               	retlw	20
  3345  09A8  3463               	retlw	99
  3346  09A9  3400               	retlw	0
  3347  09AA  3400               	retlw	0
  3348  09AB  3400               	retlw	0
  3349  09AC  3403               	retlw	3
  3350  09AD  3404               	retlw	4
  3351  09AE  3478               	retlw	120
  3352  09AF  3404               	retlw	4
  3353  09B0  3403               	retlw	3
  3354  09B1  3400               	retlw	0
  3355  09B2  3400               	retlw	0
  3356  09B3  3400               	retlw	0
  3357  09B4  3461               	retlw	97
  3358  09B5  3451               	retlw	81
  3359  09B6  3449               	retlw	73
  3360  09B7  3445               	retlw	69
  3361  09B8  3443               	retlw	67
  3362  09B9  3400               	retlw	0
  3363  09BA  3400               	retlw	0
  3364  09BB  3400               	retlw	0
  3365  09BC  347F               	retlw	127
  3366  09BD  3441               	retlw	65
  3367  09BE  3441               	retlw	65
  3368  09BF  3400               	retlw	0
  3369  09C0  3400               	retlw	0
  3370  09C1  3400               	retlw	0
  3371  09C2  3400               	retlw	0
  3372  09C3  3400               	retlw	0
  3373  09C4  3402               	retlw	2
  3374  09C5  3404               	retlw	4
  3375  09C6  3408               	retlw	8
  3376  09C7  3410               	retlw	16
  3377  09C8  3420               	retlw	32
  3378  09C9  3400               	retlw	0
  3379  09CA  3400               	retlw	0
  3380  09CB  3400               	retlw	0
  3381  09CC  3441               	retlw	65
  3382  09CD  3441               	retlw	65
  3383  09CE  347F               	retlw	127
  3384  09CF  3400               	retlw	0
  3385  09D0  3400               	retlw	0
  3386  09D1  3400               	retlw	0
  3387  09D2  3400               	retlw	0
  3388  09D3  3400               	retlw	0
  3389  09D4  3404               	retlw	4
  3390  09D5  3402               	retlw	2
  3391  09D6  3401               	retlw	1
  3392  09D7  3402               	retlw	2
  3393  09D8  3404               	retlw	4
  3394  09D9  3400               	retlw	0
  3395  09DA  3400               	retlw	0
  3396  09DB  3400               	retlw	0
  3397  09DC  3480               	retlw	128
  3398  09DD  3480               	retlw	128
  3399  09DE  3480               	retlw	128
  3400  09DF  3480               	retlw	128
  3401  09E0  3480               	retlw	128
  3402  09E1  3400               	retlw	0
  3403  09E2  3400               	retlw	0
  3404  09E3  3400               	retlw	0
  3405  09E4  3401               	retlw	1
  3406  09E5  3402               	retlw	2
  3407  09E6  3404               	retlw	4
  3408  09E7  3400               	retlw	0
  3409  09E8  3400               	retlw	0
  3410  09E9  3400               	retlw	0
  3411  09EA  3400               	retlw	0
  3412  09EB  3400               	retlw	0
  3413  09EC  3420               	retlw	32
  3414  09ED  3454               	retlw	84
  3415  09EE  3454               	retlw	84
  3416  09EF  3454               	retlw	84
  3417  09F0  3478               	retlw	120
  3418  09F1  3400               	retlw	0
  3419  09F2  3400               	retlw	0
  3420  09F3  3400               	retlw	0
  3421  09F4  347F               	retlw	127
  3422  09F5  3448               	retlw	72
  3423  09F6  3444               	retlw	68
  3424  09F7  3444               	retlw	68
  3425  09F8  3438               	retlw	56
  3426  09F9  3400               	retlw	0
  3427  09FA  3400               	retlw	0
  3428  09FB  3400               	retlw	0
  3429  09FC  3438               	retlw	56
  3430  09FD  3444               	retlw	68
  3431  09FE  3444               	retlw	68
  3432  09FF  3428               	retlw	40
  3433  0A00  3400               	retlw	0
  3434  0A01  3400               	retlw	0
  3435  0A02  3400               	retlw	0
  3436  0A03  3400               	retlw	0
  3437  0A04  3438               	retlw	56
  3438  0A05  3444               	retlw	68
  3439  0A06  3444               	retlw	68
  3440  0A07  3448               	retlw	72
  3441  0A08  347F               	retlw	127
  3442  0A09  3400               	retlw	0
  3443  0A0A  3400               	retlw	0
  3444  0A0B  3400               	retlw	0
  3445  0A0C  3438               	retlw	56
  3446  0A0D  3454               	retlw	84
  3447  0A0E  3454               	retlw	84
  3448  0A0F  3454               	retlw	84
  3449  0A10  3418               	retlw	24
  3450  0A11  3400               	retlw	0
  3451  0A12  3400               	retlw	0
  3452  0A13  3400               	retlw	0
  3453  0A14  3408               	retlw	8
  3454  0A15  347E               	retlw	126
  3455  0A16  3409               	retlw	9
  3456  0A17  3402               	retlw	2
  3457  0A18  3400               	retlw	0
  3458  0A19  3400               	retlw	0
  3459  0A1A  3400               	retlw	0
  3460  0A1B  3400               	retlw	0
  3461  0A1C  3418               	retlw	24
  3462  0A1D  34A4               	retlw	164
  3463  0A1E  34A4               	retlw	164
  3464  0A1F  34A4               	retlw	164
  3465  0A20  347C               	retlw	124
  3466  0A21  3400               	retlw	0
  3467  0A22  3400               	retlw	0
  3468  0A23  3400               	retlw	0
  3469  0A24  347F               	retlw	127
  3470  0A25  3408               	retlw	8
  3471  0A26  3404               	retlw	4
  3472  0A27  3404               	retlw	4
  3473  0A28  3478               	retlw	120
  3474  0A29  3400               	retlw	0
  3475  0A2A  3400               	retlw	0
  3476  0A2B  3400               	retlw	0
  3477  0A2C  3400               	retlw	0
  3478  0A2D  347D               	retlw	125
  3479  0A2E  3400               	retlw	0
  3480  0A2F  3400               	retlw	0
  3481  0A30  3400               	retlw	0
  3482  0A31  3400               	retlw	0
  3483  0A32  3400               	retlw	0
  3484  0A33  3400               	retlw	0
  3485  0A34  3480               	retlw	128
  3486  0A35  3484               	retlw	132
  3487  0A36  347D               	retlw	125
  3488  0A37  3400               	retlw	0
  3489  0A38  3400               	retlw	0
  3490  0A39  3400               	retlw	0
  3491  0A3A  3400               	retlw	0
  3492  0A3B  3400               	retlw	0
  3493  0A3C  347F               	retlw	127
  3494  0A3D  3410               	retlw	16
  3495  0A3E  3428               	retlw	40
  3496  0A3F  3444               	retlw	68
  3497  0A40  3400               	retlw	0
  3498  0A41  3400               	retlw	0
  3499  0A42  3400               	retlw	0
  3500  0A43  3400               	retlw	0
  3501  0A44  3441               	retlw	65
  3502  0A45  347F               	retlw	127
  3503  0A46  3440               	retlw	64
  3504  0A47  3400               	retlw	0
  3505  0A48  3400               	retlw	0
  3506  0A49  3400               	retlw	0
  3507  0A4A  3400               	retlw	0
  3508  0A4B  3400               	retlw	0
  3509  0A4C  347C               	retlw	124
  3510  0A4D  3404               	retlw	4
  3511  0A4E  3418               	retlw	24
  3512  0A4F  3404               	retlw	4
  3513  0A50  3478               	retlw	120
  3514  0A51  3400               	retlw	0
  3515  0A52  3400               	retlw	0
  3516  0A53  3400               	retlw	0
  3517  0A54  347C               	retlw	124
  3518  0A55  3408               	retlw	8
  3519  0A56  3404               	retlw	4
  3520  0A57  347C               	retlw	124
  3521  0A58  3400               	retlw	0
  3522  0A59  3400               	retlw	0
  3523  0A5A  3400               	retlw	0
  3524  0A5B  3400               	retlw	0
  3525  0A5C  3438               	retlw	56
  3526  0A5D  3444               	retlw	68
  3527  0A5E  3444               	retlw	68
  3528  0A5F  3438               	retlw	56
  3529  0A60  3400               	retlw	0
  3530  0A61  3400               	retlw	0
  3531  0A62  3400               	retlw	0
  3532  0A63  3400               	retlw	0
  3533  0A64  34FC               	retlw	252
  3534  0A65  3424               	retlw	36
  3535  0A66  3424               	retlw	36
  3536  0A67  3418               	retlw	24
  3537  0A68  3400               	retlw	0
  3538  0A69  3400               	retlw	0
  3539  0A6A  3400               	retlw	0
  3540  0A6B  3400               	retlw	0
  3541  0A6C  3418               	retlw	24
  3542  0A6D  3424               	retlw	36
  3543  0A6E  3424               	retlw	36
  3544  0A6F  34FC               	retlw	252
  3545  0A70  3400               	retlw	0
  3546  0A71  3400               	retlw	0
  3547  0A72  3400               	retlw	0
  3548  0A73  3400               	retlw	0
  3549  0A74  3400               	retlw	0
  3550  0A75  347C               	retlw	124
  3551  0A76  3408               	retlw	8
  3552  0A77  3404               	retlw	4
  3553  0A78  3400               	retlw	0
  3554  0A79  3400               	retlw	0
  3555  0A7A  3400               	retlw	0
  3556  0A7B  3400               	retlw	0
  3557  0A7C  3448               	retlw	72
  3558  0A7D  3454               	retlw	84
  3559  0A7E  3454               	retlw	84
  3560  0A7F  3424               	retlw	36
  3561  0A80  3400               	retlw	0
  3562  0A81  3400               	retlw	0
  3563  0A82  3400               	retlw	0
  3564  0A83  3400               	retlw	0
  3565  0A84  3404               	retlw	4
  3566  0A85  347F               	retlw	127
  3567  0A86  3444               	retlw	68
  3568  0A87  3400               	retlw	0
  3569  0A88  3400               	retlw	0
  3570  0A89  3400               	retlw	0
  3571  0A8A  3400               	retlw	0
  3572  0A8B  3400               	retlw	0
  3573  0A8C  343C               	retlw	60
  3574  0A8D  3440               	retlw	64
  3575  0A8E  3440               	retlw	64
  3576  0A8F  347C               	retlw	124
  3577  0A90  3400               	retlw	0
  3578  0A91  3400               	retlw	0
  3579  0A92  3400               	retlw	0
  3580  0A93  3400               	retlw	0
  3581  0A94  341C               	retlw	28
  3582  0A95  3420               	retlw	32
  3583  0A96  3440               	retlw	64
  3584  0A97  3420               	retlw	32
  3585  0A98  341C               	retlw	28
  3586  0A99  3400               	retlw	0
  3587  0A9A  3400               	retlw	0
  3588  0A9B  3400               	retlw	0
  3589  0A9C  343C               	retlw	60
  3590  0A9D  3440               	retlw	64
  3591  0A9E  3430               	retlw	48
  3592  0A9F  3440               	retlw	64
  3593  0AA0  343C               	retlw	60
  3594  0AA1  3400               	retlw	0
  3595  0AA2  3400               	retlw	0
  3596  0AA3  3400               	retlw	0
  3597  0AA4  3444               	retlw	68
  3598  0AA5  3428               	retlw	40
  3599  0AA6  3410               	retlw	16
  3600  0AA7  3428               	retlw	40
  3601  0AA8  3444               	retlw	68
  3602  0AA9  3400               	retlw	0
  3603  0AAA  3400               	retlw	0
  3604  0AAB  3400               	retlw	0
  3605  0AAC  341C               	retlw	28
  3606  0AAD  34A0               	retlw	160
  3607  0AAE  34A0               	retlw	160
  3608  0AAF  347C               	retlw	124
  3609  0AB0  3400               	retlw	0
  3610  0AB1  3400               	retlw	0
  3611  0AB2  3400               	retlw	0
  3612  0AB3  3400               	retlw	0
  3613  0AB4  3444               	retlw	68
  3614  0AB5  3464               	retlw	100
  3615  0AB6  3454               	retlw	84
  3616  0AB7  344C               	retlw	76
  3617  0AB8  3444               	retlw	68
  3618  0AB9  3400               	retlw	0
  3619  0ABA  3400               	retlw	0
  3620  0ABB  3400               	retlw	0
  3621  0ABC  3408               	retlw	8
  3622  0ABD  3436               	retlw	54
  3623  0ABE  3441               	retlw	65
  3624  0ABF  3400               	retlw	0
  3625  0AC0  3400               	retlw	0
  3626  0AC1  3400               	retlw	0
  3627  0AC2  3400               	retlw	0
  3628  0AC3  3400               	retlw	0
  3629  0AC4  3400               	retlw	0
  3630  0AC5  347F               	retlw	127
  3631  0AC6  3400               	retlw	0
  3632  0AC7  3400               	retlw	0
  3633  0AC8  3400               	retlw	0
  3634  0AC9  3400               	retlw	0
  3635  0ACA  3400               	retlw	0
  3636  0ACB  3400               	retlw	0
  3637  0ACC  3441               	retlw	65
  3638  0ACD  3436               	retlw	54
  3639  0ACE  3408               	retlw	8
  3640  0ACF  3400               	retlw	0
  3641  0AD0  3400               	retlw	0
  3642  0AD1  3400               	retlw	0
  3643  0AD2  3400               	retlw	0
  3644  0AD3  3400               	retlw	0
  3645  0AD4  3402               	retlw	2
  3646  0AD5  3401               	retlw	1
  3647  0AD6  3401               	retlw	1
  3648  0AD7  3402               	retlw	2
  3649  0AD8  3401               	retlw	1
  3650  0AD9  3400               	retlw	0
  3651  0ADA  3400               	retlw	0
  3652  0ADB  3400               	retlw	0
  3653  0ADC  3402               	retlw	2
  3654  0ADD  3405               	retlw	5
  3655  0ADE  3405               	retlw	5
  3656  0ADF  3402               	retlw	2
  3657  0AE0  3400               	retlw	0
  3658  0AE1  3400               	retlw	0
  3659  0AE2  3400               	retlw	0
  3660  0AE3                     __end_of_OledFont:	
  3661                           
  3662                           	psect	stringtext2
  3663  1800                     __pstringtext2:	
  3664  1800                     ltc6804@crc15Table:	
  3665  1800  3400               	retlw	0
  3666  1801  3400               	retlw	0
  3667  1802  3499               	retlw	153
  3668  1803  34C5               	retlw	197
  3669  1804  34AB               	retlw	171
  3670  1805  34CE               	retlw	206
  3671  1806  3432               	retlw	50
  3672  1807  340B               	retlw	11
  3673  1808  34CF               	retlw	207
  3674  1809  34D8               	retlw	216
  3675  180A  3456               	retlw	86
  3676  180B  341D               	retlw	29
  3677  180C  3464               	retlw	100
  3678  180D  3416               	retlw	22
  3679  180E  34FD               	retlw	253
  3680  180F  34D3               	retlw	211
  3681  1810  3407               	retlw	7
  3682  1811  34F4               	retlw	244
  3683  1812  349E               	retlw	158
  3684  1813  3431               	retlw	49
  3685  1814  34AC               	retlw	172
  3686  1815  343A               	retlw	58
  3687  1816  3435               	retlw	53
  3688  1817  34FF               	retlw	255
  3689  1818  34C8               	retlw	200
  3690  1819  342C               	retlw	44
  3691  181A  3451               	retlw	81
  3692  181B  34E9               	retlw	233
  3693  181C  3463               	retlw	99
  3694  181D  34E2               	retlw	226
  3695  181E  34FA               	retlw	250
  3696  181F  3427               	retlw	39
  3697  1820  3497               	retlw	151
  3698  1821  34AD               	retlw	173
  3699  1822  340E               	retlw	14
  3700  1823  3468               	retlw	104
  3701  1824  343C               	retlw	60
  3702  1825  3463               	retlw	99
  3703  1826  34A5               	retlw	165
  3704  1827  34A6               	retlw	166
  3705  1828  3458               	retlw	88
  3706  1829  3475               	retlw	117
  3707  182A  34C1               	retlw	193
  3708  182B  34B0               	retlw	176
  3709  182C  34F3               	retlw	243
  3710  182D  34BB               	retlw	187
  3711  182E  346A               	retlw	106
  3712  182F  347E               	retlw	126
  3713  1830  3490               	retlw	144
  3714  1831  3459               	retlw	89
  3715  1832  3409               	retlw	9
  3716  1833  349C               	retlw	156
  3717  1834  343B               	retlw	59
  3718  1835  3497               	retlw	151
  3719  1836  34A2               	retlw	162
  3720  1837  3452               	retlw	82
  3721  1838  345F               	retlw	95
  3722  1839  3481               	retlw	129
  3723  183A  34C6               	retlw	198
  3724  183B  3444               	retlw	68
  3725  183C  34F4               	retlw	244
  3726  183D  344F               	retlw	79
  3727  183E  346D               	retlw	109
  3728  183F  348A               	retlw	138
  3729  1840  342E               	retlw	46
  3730  1841  345B               	retlw	91
  3731  1842  34B7               	retlw	183
  3732  1843  349E               	retlw	158
  3733  1844  3485               	retlw	133
  3734  1845  3495               	retlw	149
  3735  1846  341C               	retlw	28
  3736  1847  3450               	retlw	80
  3737  1848  34E1               	retlw	225
  3738  1849  3483               	retlw	131
  3739  184A  3478               	retlw	120
  3740  184B  3446               	retlw	70
  3741  184C  344A               	retlw	74
  3742  184D  344D               	retlw	77
  3743  184E  34D3               	retlw	211
  3744  184F  3488               	retlw	136
  3745  1850  3429               	retlw	41
  3746  1851  34AF               	retlw	175
  3747  1852  34B0               	retlw	176
  3748  1853  346A               	retlw	106
  3749  1854  3482               	retlw	130
  3750  1855  3461               	retlw	97
  3751  1856  341B               	retlw	27
  3752  1857  34A4               	retlw	164
  3753  1858  34E6               	retlw	230
  3754  1859  3477               	retlw	119
  3755  185A  347F               	retlw	127
  3756  185B  34B2               	retlw	178
  3757  185C  344D               	retlw	77
  3758  185D  34B9               	retlw	185
  3759  185E  34D4               	retlw	212
  3760  185F  347C               	retlw	124
  3761  1860  34B9               	retlw	185
  3762  1861  34F6               	retlw	246
  3763  1862  3420               	retlw	32
  3764  1863  3433               	retlw	51
  3765  1864  3412               	retlw	18
  3766  1865  3438               	retlw	56
  3767  1866  348B               	retlw	139
  3768  1867  34FD               	retlw	253
  3769  1868  3476               	retlw	118
  3770  1869  342E               	retlw	46
  3771  186A  34EF               	retlw	239
  3772  186B  34EB               	retlw	235
  3773  186C  34DD               	retlw	221
  3774  186D  34E0               	retlw	224
  3775  186E  3444               	retlw	68
  3776  186F  3425               	retlw	37
  3777  1870  34BE               	retlw	190
  3778  1871  3402               	retlw	2
  3779  1872  3427               	retlw	39
  3780  1873  34C7               	retlw	199
  3781  1874  3415               	retlw	21
  3782  1875  34CC               	retlw	204
  3783  1876  348C               	retlw	140
  3784  1877  3409               	retlw	9
  3785  1878  3471               	retlw	113
  3786  1879  34DA               	retlw	218
  3787  187A  34E8               	retlw	232
  3788  187B  341F               	retlw	31
  3789  187C  34DA               	retlw	218
  3790  187D  3414               	retlw	20
  3791  187E  3443               	retlw	67
  3792  187F  34D1               	retlw	209
  3793  1880  34C5               	retlw	197
  3794  1881  34F3               	retlw	243
  3795  1882  345C               	retlw	92
  3796  1883  3436               	retlw	54
  3797  1884  346E               	retlw	110
  3798  1885  343D               	retlw	61
  3799  1886  34F7               	retlw	247
  3800  1887  34F8               	retlw	248
  3801  1888  340A               	retlw	10
  3802  1889  342B               	retlw	43
  3803  188A  3493               	retlw	147
  3804  188B  34EE               	retlw	238
  3805  188C  34A1               	retlw	161
  3806  188D  34E5               	retlw	229
  3807  188E  3438               	retlw	56
  3808  188F  3420               	retlw	32
  3809  1890  34C2               	retlw	194
  3810  1891  3407               	retlw	7
  3811  1892  345B               	retlw	91
  3812  1893  34C2               	retlw	194
  3813  1894  3469               	retlw	105
  3814  1895  34C9               	retlw	201
  3815  1896  34F0               	retlw	240
  3816  1897  340C               	retlw	12
  3817  1898  340D               	retlw	13
  3818  1899  34DF               	retlw	223
  3819  189A  3494               	retlw	148
  3820  189B  341A               	retlw	26
  3821  189C  34A6               	retlw	166
  3822  189D  3411               	retlw	17
  3823  189E  343F               	retlw	63
  3824  189F  34D4               	retlw	212
  3825  18A0  3452               	retlw	82
  3826  18A1  345E               	retlw	94
  3827  18A2  34CB               	retlw	203
  3828  18A3  349B               	retlw	155
  3829  18A4  34F9               	retlw	249
  3830  18A5  3490               	retlw	144
  3831  18A6  3460               	retlw	96
  3832  18A7  3455               	retlw	85
  3833  18A8  349D               	retlw	157
  3834  18A9  3486               	retlw	134
  3835  18AA  3404               	retlw	4
  3836  18AB  3443               	retlw	67
  3837  18AC  3436               	retlw	54
  3838  18AD  3448               	retlw	72
  3839  18AE  34AF               	retlw	175
  3840  18AF  348D               	retlw	141
  3841  18B0  3455               	retlw	85
  3842  18B1  34AA               	retlw	170
  3843  18B2  34CC               	retlw	204
  3844  18B3  346F               	retlw	111
  3845  18B4  34FE               	retlw	254
  3846  18B5  3464               	retlw	100
  3847  18B6  3467               	retlw	103
  3848  18B7  34A1               	retlw	161
  3849  18B8  349A               	retlw	154
  3850  18B9  3472               	retlw	114
  3851  18BA  3403               	retlw	3
  3852  18BB  34B7               	retlw	183
  3853  18BC  3431               	retlw	49
  3854  18BD  34BC               	retlw	188
  3855  18BE  34A8               	retlw	168
  3856  18BF  3479               	retlw	121
  3857  18C0  34EB               	retlw	235
  3858  18C1  34A8               	retlw	168
  3859  18C2  3472               	retlw	114
  3860  18C3  346D               	retlw	109
  3861  18C4  3440               	retlw	64
  3862  18C5  3466               	retlw	102
  3863  18C6  34D9               	retlw	217
  3864  18C7  34A3               	retlw	163
  3865  18C8  3424               	retlw	36
  3866  18C9  3470               	retlw	112
  3867  18CA  34BD               	retlw	189
  3868  18CB  34B5               	retlw	181
  3869  18CC  348F               	retlw	143
  3870  18CD  34BE               	retlw	190
  3871  18CE  3416               	retlw	22
  3872  18CF  347B               	retlw	123
  3873  18D0  34EC               	retlw	236
  3874  18D1  345C               	retlw	92
  3875  18D2  3475               	retlw	117
  3876  18D3  3499               	retlw	153
  3877  18D4  3447               	retlw	71
  3878  18D5  3492               	retlw	146
  3879  18D6  34DE               	retlw	222
  3880  18D7  3457               	retlw	87
  3881  18D8  3423               	retlw	35
  3882  18D9  3484               	retlw	132
  3883  18DA  34BA               	retlw	186
  3884  18DB  3441               	retlw	65
  3885  18DC  3488               	retlw	136
  3886  18DD  344A               	retlw	74
  3887  18DE  3411               	retlw	17
  3888  18DF  348F               	retlw	143
  3889  18E0  347C               	retlw	124
  3890  18E1  3405               	retlw	5
  3891  18E2  34E5               	retlw	229
  3892  18E3  34C0               	retlw	192
  3893  18E4  34D7               	retlw	215
  3894  18E5  34CB               	retlw	203
  3895  18E6  344E               	retlw	78
  3896  18E7  340E               	retlw	14
  3897  18E8  34B3               	retlw	179
  3898  18E9  34DD               	retlw	221
  3899  18EA  342A               	retlw	42
  3900  18EB  3418               	retlw	24
  3901  18EC  3418               	retlw	24
  3902  18ED  3413               	retlw	19
  3903  18EE  3481               	retlw	129
  3904  18EF  34D6               	retlw	214
  3905  18F0  347B               	retlw	123
  3906  18F1  34F1               	retlw	241
  3907  18F2  34E2               	retlw	226
  3908  18F3  3434               	retlw	52
  3909  18F4  34D0               	retlw	208
  3910  18F5  343F               	retlw	63
  3911  18F6  3449               	retlw	73
  3912  18F7  34FA               	retlw	250
  3913  18F8  34B4               	retlw	180
  3914  18F9  3429               	retlw	41
  3915  18FA  342D               	retlw	45
  3916  18FB  34EC               	retlw	236
  3917  18FC  341F               	retlw	31
  3918  18FD  34E7               	retlw	231
  3919  18FE  3486               	retlw	134
  3920  18FF  3422               	retlw	34
  3921  1900  3413               	retlw	19
  3922  1901  34A2               	retlw	162
  3923  1902  348A               	retlw	138
  3924  1903  3467               	retlw	103
  3925  1904  34B8               	retlw	184
  3926  1905  346C               	retlw	108
  3927  1906  3421               	retlw	33
  3928  1907  34A9               	retlw	169
  3929  1908  34DC               	retlw	220
  3930  1909  347A               	retlw	122
  3931  190A  3445               	retlw	69
  3932  190B  34BF               	retlw	191
  3933  190C  3477               	retlw	119
  3934  190D  34B4               	retlw	180
  3935  190E  34EE               	retlw	238
  3936  190F  3471               	retlw	113
  3937  1910  3414               	retlw	20
  3938  1911  3456               	retlw	86
  3939  1912  348D               	retlw	141
  3940  1913  3493               	retlw	147
  3941  1914  34BF               	retlw	191
  3942  1915  3498               	retlw	152
  3943  1916  3426               	retlw	38
  3944  1917  345D               	retlw	93
  3945  1918  34DB               	retlw	219
  3946  1919  348E               	retlw	142
  3947  191A  3442               	retlw	66
  3948  191B  344B               	retlw	75
  3949  191C  3470               	retlw	112
  3950  191D  3440               	retlw	64
  3951  191E  34E9               	retlw	233
  3952  191F  3485               	retlw	133
  3953  1920  3484               	retlw	132
  3954  1921  340F               	retlw	15
  3955  1922  341D               	retlw	29
  3956  1923  34CA               	retlw	202
  3957  1924  342F               	retlw	47
  3958  1925  34C1               	retlw	193
  3959  1926  346F               	retlw	111
  3960  1927  344B               	retlw	75
  3961  1928  344B               	retlw	75
  3962  1929  34D7               	retlw	215
  3963  192A  34D2               	retlw	210
  3964  192B  3412               	retlw	18
  3965  192C  34E0               	retlw	224
  3966  192D  3419               	retlw	25
  3967  192E  3479               	retlw	121
  3968  192F  34DC               	retlw	220
  3969  1930  3483               	retlw	131
  3970  1931  34FB               	retlw	251
  3971  1932  341A               	retlw	26
  3972  1933  343E               	retlw	62
  3973  1934  3428               	retlw	40
  3974  1935  3435               	retlw	53
  3975  1936  34B1               	retlw	177
  3976  1937  34F0               	retlw	240
  3977  1938  344C               	retlw	76
  3978  1939  3423               	retlw	35
  3979  193A  34D5               	retlw	213
  3980  193B  34E6               	retlw	230
  3981  193C  34E7               	retlw	231
  3982  193D  34ED               	retlw	237
  3983  193E  347E               	retlw	126
  3984  193F  3428               	retlw	40
  3985  1940  343D               	retlw	61
  3986  1941  34F9               	retlw	249
  3987  1942  34A4               	retlw	164
  3988  1943  343C               	retlw	60
  3989  1944  3496               	retlw	150
  3990  1945  3437               	retlw	55
  3991  1946  340F               	retlw	15
  3992  1947  34F2               	retlw	242
  3993  1948  34F2               	retlw	242
  3994  1949  3421               	retlw	33
  3995  194A  346B               	retlw	107
  3996  194B  34E4               	retlw	228
  3997  194C  3459               	retlw	89
  3998  194D  34EF               	retlw	239
  3999  194E  34C0               	retlw	192
  4000  194F  342A               	retlw	42
  4001  1950  343A               	retlw	58
  4002  1951  340D               	retlw	13
  4003  1952  34A3               	retlw	163
  4004  1953  34C8               	retlw	200
  4005  1954  3491               	retlw	145
  4006  1955  34C3               	retlw	195
  4007  1956  3408               	retlw	8
  4008  1957  3406               	retlw	6
  4009  1958  34F5               	retlw	245
  4010  1959  34D5               	retlw	213
  4011  195A  346C               	retlw	108
  4012  195B  3410               	retlw	16
  4013  195C  345E               	retlw	94
  4014  195D  341B               	retlw	27
  4015  195E  34C7               	retlw	199
  4016  195F  34DE               	retlw	222
  4017  1960  34AA               	retlw	170
  4018  1961  3454               	retlw	84
  4019  1962  3433               	retlw	51
  4020  1963  3491               	retlw	145
  4021  1964  3401               	retlw	1
  4022  1965  349A               	retlw	154
  4023  1966  3498               	retlw	152
  4024  1967  345F               	retlw	95
  4025  1968  3465               	retlw	101
  4026  1969  348C               	retlw	140
  4027  196A  34FC               	retlw	252
  4028  196B  3449               	retlw	73
  4029  196C  34CE               	retlw	206
  4030  196D  3442               	retlw	66
  4031  196E  3457               	retlw	87
  4032  196F  3487               	retlw	135
  4033  1970  34AD               	retlw	173
  4034  1971  34A0               	retlw	160
  4035  1972  3434               	retlw	52
  4036  1973  3465               	retlw	101
  4037  1974  3406               	retlw	6
  4038  1975  346E               	retlw	110
  4039  1976  349F               	retlw	159
  4040  1977  34AB               	retlw	171
  4041  1978  3462               	retlw	98
  4042  1979  3478               	retlw	120
  4043  197A  34FB               	retlw	251
  4044  197B  34BD               	retlw	189
  4045  197C  34C9               	retlw	201
  4046  197D  34B6               	retlw	182
  4047  197E  3450               	retlw	80
  4048  197F  3473               	retlw	115
  4049  1980  34D6               	retlw	214
  4050  1981  3451               	retlw	81
  4051  1982  344F               	retlw	79
  4052  1983  3494               	retlw	148
  4053  1984  347D               	retlw	125
  4054  1985  349F               	retlw	159
  4055  1986  34E4               	retlw	228
  4056  1987  345A               	retlw	90
  4057  1988  3419               	retlw	25
  4058  1989  3489               	retlw	137
  4059  198A  3480               	retlw	128
  4060  198B  344C               	retlw	76
  4061  198C  34B2               	retlw	178
  4062  198D  3447               	retlw	71
  4063  198E  342B               	retlw	43
  4064  198F  3482               	retlw	130
  4065  1990  34D1               	retlw	209
  4066  1991  34A5               	retlw	165
  4067  1992  3448               	retlw	72
  4068  1993  3460               	retlw	96
  4069  1994  347A               	retlw	122
  4070  1995  346B               	retlw	107
  4071  1996  34E3               	retlw	227
  4072  1997  34AE               	retlw	174
  4073  1998  341E               	retlw	30
  4074  1999  347D               	retlw	125
  4075  199A  3487               	retlw	135
  4076  199B  34B8               	retlw	184
  4077  199C  34B5               	retlw	181
  4078  199D  34B3               	retlw	179
  4079  199E  342C               	retlw	44
  4080  199F  3476               	retlw	118
  4081  19A0  3441               	retlw	65
  4082  19A1  34FC               	retlw	252
  4083  19A2  34D8               	retlw	216
  4084  19A3  3439               	retlw	57
  4085  19A4  34EA               	retlw	234
  4086  19A5  3432               	retlw	50
  4087  19A6  3473               	retlw	115
  4088  19A7  34F7               	retlw	247
  4089  19A8  348E               	retlw	142
  4090  19A9  3424               	retlw	36
  4091  19AA  3417               	retlw	23
  4092  19AB  34E1               	retlw	225
  4093  19AC  3425               	retlw	37
  4094  19AD  34EA               	retlw	234
  4095  19AE  34BC               	retlw	188
  4096  19AF  342F               	retlw	47
  4097  19B0  3446               	retlw	70
  4098  19B1  3408               	retlw	8
  4099  19B2  34DF               	retlw	223
  4100  19B3  34CD               	retlw	205
  4101  19B4  34ED               	retlw	237
  4102  19B5  34C6               	retlw	198
  4103  19B6  3474               	retlw	116
  4104  19B7  3403               	retlw	3
  4105  19B8  3489               	retlw	137
  4106  19B9  34D0               	retlw	208
  4107  19BA  3410               	retlw	16
  4108  19BB  3415               	retlw	21
  4109  19BC  3422               	retlw	34
  4110  19BD  341E               	retlw	30
  4111  19BE  34BB               	retlw	187
  4112  19BF  34DB               	retlw	219
  4113  19C0  34F8               	retlw	248
  4114  19C1  340A               	retlw	10
  4115  19C2  3461               	retlw	97
  4116  19C3  34CF               	retlw	207
  4117  19C4  3453               	retlw	83
  4118  19C5  34C4               	retlw	196
  4119  19C6  34CA               	retlw	202
  4120  19C7  3401               	retlw	1
  4121  19C8  3437               	retlw	55
  4122  19C9  34D2               	retlw	210
  4123  19CA  34AE               	retlw	174
  4124  19CB  3417               	retlw	23
  4125  19CC  349C               	retlw	156
  4126  19CD  341C               	retlw	28
  4127  19CE  3405               	retlw	5
  4128  19CF  34D9               	retlw	217
  4129  19D0  34FF               	retlw	255
  4130  19D1  34FE               	retlw	254
  4131  19D2  3466               	retlw	102
  4132  19D3  343B               	retlw	59
  4133  19D4  3454               	retlw	84
  4134  19D5  3430               	retlw	48
  4135  19D6  34CD               	retlw	205
  4136  19D7  34F5               	retlw	245
  4137  19D8  3430               	retlw	48
  4138  19D9  3426               	retlw	38
  4139  19DA  34A9               	retlw	169
  4140  19DB  34E3               	retlw	227
  4141  19DC  349B               	retlw	155
  4142  19DD  34E8               	retlw	232
  4143  19DE  3402               	retlw	2
  4144  19DF  342D               	retlw	45
  4145  19E0  346F               	retlw	111
  4146  19E1  34A7               	retlw	167
  4147  19E2  34F6               	retlw	246
  4148  19E3  3462               	retlw	98
  4149  19E4  34C4               	retlw	196
  4150  19E5  3469               	retlw	105
  4151  19E6  345D               	retlw	93
  4152  19E7  34AC               	retlw	172
  4153  19E8  34A0               	retlw	160
  4154  19E9  347F               	retlw	127
  4155  19EA  3439               	retlw	57
  4156  19EB  34BA               	retlw	186
  4157  19EC  340B               	retlw	11
  4158  19ED  34B1               	retlw	177
  4159  19EE  3492               	retlw	146
  4160  19EF  3474               	retlw	116
  4161  19F0  3468               	retlw	104
  4162  19F1  3453               	retlw	83
  4163  19F2  34F1               	retlw	241
  4164  19F3  3496               	retlw	150
  4165  19F4  34C3               	retlw	195
  4166  19F5  349D               	retlw	157
  4167  19F6  345A               	retlw	90
  4168  19F7  3458               	retlw	88
  4169  19F8  34A7               	retlw	167
  4170  19F9  348B               	retlw	139
  4171  19FA  343E               	retlw	62
  4172  19FB  344E               	retlw	78
  4173  19FC  340C               	retlw	12
  4174  19FD  3445               	retlw	69
  4175  19FE  3495               	retlw	149
  4176  19FF  3480               	retlw	128
  4177  1A00                     __end_ofltc6804@crc15Table:	
  4178                           
  4179                           	psect	stringtext3
  4180  1A00                     __pstringtext3:	
  4181  1A00                     _crc15Table:	
  4182  1A00  3400               	retlw	0
  4183  1A01  3400               	retlw	0
  4184  1A02  3499               	retlw	153
  4185  1A03  34C5               	retlw	197
  4186  1A04  34AB               	retlw	171
  4187  1A05  34CE               	retlw	206
  4188  1A06  3432               	retlw	50
  4189  1A07  340B               	retlw	11
  4190  1A08  34CF               	retlw	207
  4191  1A09  34D8               	retlw	216
  4192  1A0A  3456               	retlw	86
  4193  1A0B  341D               	retlw	29
  4194  1A0C  3464               	retlw	100
  4195  1A0D  3416               	retlw	22
  4196  1A0E  34FD               	retlw	253
  4197  1A0F  34D3               	retlw	211
  4198  1A10  3407               	retlw	7
  4199  1A11  34F4               	retlw	244
  4200  1A12  349E               	retlw	158
  4201  1A13  3431               	retlw	49
  4202  1A14  34AC               	retlw	172
  4203  1A15  343A               	retlw	58
  4204  1A16  3435               	retlw	53
  4205  1A17  34FF               	retlw	255
  4206  1A18  34C8               	retlw	200
  4207  1A19  342C               	retlw	44
  4208  1A1A  3451               	retlw	81
  4209  1A1B  34E9               	retlw	233
  4210  1A1C  3463               	retlw	99
  4211  1A1D  34E2               	retlw	226
  4212  1A1E  34FA               	retlw	250
  4213  1A1F  3427               	retlw	39
  4214  1A20  3497               	retlw	151
  4215  1A21  34AD               	retlw	173
  4216  1A22  340E               	retlw	14
  4217  1A23  3468               	retlw	104
  4218  1A24  343C               	retlw	60
  4219  1A25  3463               	retlw	99
  4220  1A26  34A5               	retlw	165
  4221  1A27  34A6               	retlw	166
  4222  1A28  3458               	retlw	88
  4223  1A29  3475               	retlw	117
  4224  1A2A  34C1               	retlw	193
  4225  1A2B  34B0               	retlw	176
  4226  1A2C  34F3               	retlw	243
  4227  1A2D  34BB               	retlw	187
  4228  1A2E  346A               	retlw	106
  4229  1A2F  347E               	retlw	126
  4230  1A30  3490               	retlw	144
  4231  1A31  3459               	retlw	89
  4232  1A32  3409               	retlw	9
  4233  1A33  349C               	retlw	156
  4234  1A34  343B               	retlw	59
  4235  1A35  3497               	retlw	151
  4236  1A36  34A2               	retlw	162
  4237  1A37  3452               	retlw	82
  4238  1A38  345F               	retlw	95
  4239  1A39  3481               	retlw	129
  4240  1A3A  34C6               	retlw	198
  4241  1A3B  3444               	retlw	68
  4242  1A3C  34F4               	retlw	244
  4243  1A3D  344F               	retlw	79
  4244  1A3E  346D               	retlw	109
  4245  1A3F  348A               	retlw	138
  4246  1A40  342E               	retlw	46
  4247  1A41  345B               	retlw	91
  4248  1A42  34B7               	retlw	183
  4249  1A43  349E               	retlw	158
  4250  1A44  3485               	retlw	133
  4251  1A45  3495               	retlw	149
  4252  1A46  341C               	retlw	28
  4253  1A47  3450               	retlw	80
  4254  1A48  34E1               	retlw	225
  4255  1A49  3483               	retlw	131
  4256  1A4A  3478               	retlw	120
  4257  1A4B  3446               	retlw	70
  4258  1A4C  344A               	retlw	74
  4259  1A4D  344D               	retlw	77
  4260  1A4E  34D3               	retlw	211
  4261  1A4F  3488               	retlw	136
  4262  1A50  3429               	retlw	41
  4263  1A51  34AF               	retlw	175
  4264  1A52  34B0               	retlw	176
  4265  1A53  346A               	retlw	106
  4266  1A54  3482               	retlw	130
  4267  1A55  3461               	retlw	97
  4268  1A56  341B               	retlw	27
  4269  1A57  34A4               	retlw	164
  4270  1A58  34E6               	retlw	230
  4271  1A59  3477               	retlw	119
  4272  1A5A  347F               	retlw	127
  4273  1A5B  34B2               	retlw	178
  4274  1A5C  344D               	retlw	77
  4275  1A5D  34B9               	retlw	185
  4276  1A5E  34D4               	retlw	212
  4277  1A5F  347C               	retlw	124
  4278  1A60  34B9               	retlw	185
  4279  1A61  34F6               	retlw	246
  4280  1A62  3420               	retlw	32
  4281  1A63  3433               	retlw	51
  4282  1A64  3412               	retlw	18
  4283  1A65  3438               	retlw	56
  4284  1A66  348B               	retlw	139
  4285  1A67  34FD               	retlw	253
  4286  1A68  3476               	retlw	118
  4287  1A69  342E               	retlw	46
  4288  1A6A  34EF               	retlw	239
  4289  1A6B  34EB               	retlw	235
  4290  1A6C  34DD               	retlw	221
  4291  1A6D  34E0               	retlw	224
  4292  1A6E  3444               	retlw	68
  4293  1A6F  3425               	retlw	37
  4294  1A70  34BE               	retlw	190
  4295  1A71  3402               	retlw	2
  4296  1A72  3427               	retlw	39
  4297  1A73  34C7               	retlw	199
  4298  1A74  3415               	retlw	21
  4299  1A75  34CC               	retlw	204
  4300  1A76  348C               	retlw	140
  4301  1A77  3409               	retlw	9
  4302  1A78  3471               	retlw	113
  4303  1A79  34DA               	retlw	218
  4304  1A7A  34E8               	retlw	232
  4305  1A7B  341F               	retlw	31
  4306  1A7C  34DA               	retlw	218
  4307  1A7D  3414               	retlw	20
  4308  1A7E  3443               	retlw	67
  4309  1A7F  34D1               	retlw	209
  4310  1A80  34C5               	retlw	197
  4311  1A81  34F3               	retlw	243
  4312  1A82  345C               	retlw	92
  4313  1A83  3436               	retlw	54
  4314  1A84  346E               	retlw	110
  4315  1A85  343D               	retlw	61
  4316  1A86  34F7               	retlw	247
  4317  1A87  34F8               	retlw	248
  4318  1A88  340A               	retlw	10
  4319  1A89  342B               	retlw	43
  4320  1A8A  3493               	retlw	147
  4321  1A8B  34EE               	retlw	238
  4322  1A8C  34A1               	retlw	161
  4323  1A8D  34E5               	retlw	229
  4324  1A8E  3438               	retlw	56
  4325  1A8F  3420               	retlw	32
  4326  1A90  34C2               	retlw	194
  4327  1A91  3407               	retlw	7
  4328  1A92  345B               	retlw	91
  4329  1A93  34C2               	retlw	194
  4330  1A94  3469               	retlw	105
  4331  1A95  34C9               	retlw	201
  4332  1A96  34F0               	retlw	240
  4333  1A97  340C               	retlw	12
  4334  1A98  340D               	retlw	13
  4335  1A99  34DF               	retlw	223
  4336  1A9A  3494               	retlw	148
  4337  1A9B  341A               	retlw	26
  4338  1A9C  34A6               	retlw	166
  4339  1A9D  3411               	retlw	17
  4340  1A9E  343F               	retlw	63
  4341  1A9F  34D4               	retlw	212
  4342  1AA0  3452               	retlw	82
  4343  1AA1  345E               	retlw	94
  4344  1AA2  34CB               	retlw	203
  4345  1AA3  349B               	retlw	155
  4346  1AA4  34F9               	retlw	249
  4347  1AA5  3490               	retlw	144
  4348  1AA6  3460               	retlw	96
  4349  1AA7  3455               	retlw	85
  4350  1AA8  349D               	retlw	157
  4351  1AA9  3486               	retlw	134
  4352  1AAA  3404               	retlw	4
  4353  1AAB  3443               	retlw	67
  4354  1AAC  3436               	retlw	54
  4355  1AAD  3448               	retlw	72
  4356  1AAE  34AF               	retlw	175
  4357  1AAF  348D               	retlw	141
  4358  1AB0  3455               	retlw	85
  4359  1AB1  34AA               	retlw	170
  4360  1AB2  34CC               	retlw	204
  4361  1AB3  346F               	retlw	111
  4362  1AB4  34FE               	retlw	254
  4363  1AB5  3464               	retlw	100
  4364  1AB6  3467               	retlw	103
  4365  1AB7  34A1               	retlw	161
  4366  1AB8  349A               	retlw	154
  4367  1AB9  3472               	retlw	114
  4368  1ABA  3403               	retlw	3
  4369  1ABB  34B7               	retlw	183
  4370  1ABC  3431               	retlw	49
  4371  1ABD  34BC               	retlw	188
  4372  1ABE  34A8               	retlw	168
  4373  1ABF  3479               	retlw	121
  4374  1AC0  34EB               	retlw	235
  4375  1AC1  34A8               	retlw	168
  4376  1AC2  3472               	retlw	114
  4377  1AC3  346D               	retlw	109
  4378  1AC4  3440               	retlw	64
  4379  1AC5  3466               	retlw	102
  4380  1AC6  34D9               	retlw	217
  4381  1AC7  34A3               	retlw	163
  4382  1AC8  3424               	retlw	36
  4383  1AC9  3470               	retlw	112
  4384  1ACA  34BD               	retlw	189
  4385  1ACB  34B5               	retlw	181
  4386  1ACC  348F               	retlw	143
  4387  1ACD  34BE               	retlw	190
  4388  1ACE  3416               	retlw	22
  4389  1ACF  347B               	retlw	123
  4390  1AD0  34EC               	retlw	236
  4391  1AD1  345C               	retlw	92
  4392  1AD2  3475               	retlw	117
  4393  1AD3  3499               	retlw	153
  4394  1AD4  3447               	retlw	71
  4395  1AD5  3492               	retlw	146
  4396  1AD6  34DE               	retlw	222
  4397  1AD7  3457               	retlw	87
  4398  1AD8  3423               	retlw	35
  4399  1AD9  3484               	retlw	132
  4400  1ADA  34BA               	retlw	186
  4401  1ADB  3441               	retlw	65
  4402  1ADC  3488               	retlw	136
  4403  1ADD  344A               	retlw	74
  4404  1ADE  3411               	retlw	17
  4405  1ADF  348F               	retlw	143
  4406  1AE0  347C               	retlw	124
  4407  1AE1  3405               	retlw	5
  4408  1AE2  34E5               	retlw	229
  4409  1AE3  34C0               	retlw	192
  4410  1AE4  34D7               	retlw	215
  4411  1AE5  34CB               	retlw	203
  4412  1AE6  344E               	retlw	78
  4413  1AE7  340E               	retlw	14
  4414  1AE8  34B3               	retlw	179
  4415  1AE9  34DD               	retlw	221
  4416  1AEA  342A               	retlw	42
  4417  1AEB  3418               	retlw	24
  4418  1AEC  3418               	retlw	24
  4419  1AED  3413               	retlw	19
  4420  1AEE  3481               	retlw	129
  4421  1AEF  34D6               	retlw	214
  4422  1AF0  347B               	retlw	123
  4423  1AF1  34F1               	retlw	241
  4424  1AF2  34E2               	retlw	226
  4425  1AF3  3434               	retlw	52
  4426  1AF4  34D0               	retlw	208
  4427  1AF5  343F               	retlw	63
  4428  1AF6  3449               	retlw	73
  4429  1AF7  34FA               	retlw	250
  4430  1AF8  34B4               	retlw	180
  4431  1AF9  3429               	retlw	41
  4432  1AFA  342D               	retlw	45
  4433  1AFB  34EC               	retlw	236
  4434  1AFC  341F               	retlw	31
  4435  1AFD  34E7               	retlw	231
  4436  1AFE  3486               	retlw	134
  4437  1AFF  3422               	retlw	34
  4438  1B00  3413               	retlw	19
  4439  1B01  34A2               	retlw	162
  4440  1B02  348A               	retlw	138
  4441  1B03  3467               	retlw	103
  4442  1B04  34B8               	retlw	184
  4443  1B05  346C               	retlw	108
  4444  1B06  3421               	retlw	33
  4445  1B07  34A9               	retlw	169
  4446  1B08  34DC               	retlw	220
  4447  1B09  347A               	retlw	122
  4448  1B0A  3445               	retlw	69
  4449  1B0B  34BF               	retlw	191
  4450  1B0C  3477               	retlw	119
  4451  1B0D  34B4               	retlw	180
  4452  1B0E  34EE               	retlw	238
  4453  1B0F  3471               	retlw	113
  4454  1B10  3414               	retlw	20
  4455  1B11  3456               	retlw	86
  4456  1B12  348D               	retlw	141
  4457  1B13  3493               	retlw	147
  4458  1B14  34BF               	retlw	191
  4459  1B15  3498               	retlw	152
  4460  1B16  3426               	retlw	38
  4461  1B17  345D               	retlw	93
  4462  1B18  34DB               	retlw	219
  4463  1B19  348E               	retlw	142
  4464  1B1A  3442               	retlw	66
  4465  1B1B  344B               	retlw	75
  4466  1B1C  3470               	retlw	112
  4467  1B1D  3440               	retlw	64
  4468  1B1E  34E9               	retlw	233
  4469  1B1F  3485               	retlw	133
  4470  1B20  3484               	retlw	132
  4471  1B21  340F               	retlw	15
  4472  1B22  341D               	retlw	29
  4473  1B23  34CA               	retlw	202
  4474  1B24  342F               	retlw	47
  4475  1B25  34C1               	retlw	193
  4476  1B26  346F               	retlw	111
  4477  1B27  344B               	retlw	75
  4478  1B28  344B               	retlw	75
  4479  1B29  34D7               	retlw	215
  4480  1B2A  34D2               	retlw	210
  4481  1B2B  3412               	retlw	18
  4482  1B2C  34E0               	retlw	224
  4483  1B2D  3419               	retlw	25
  4484  1B2E  3479               	retlw	121
  4485  1B2F  34DC               	retlw	220
  4486  1B30  3483               	retlw	131
  4487  1B31  34FB               	retlw	251
  4488  1B32  341A               	retlw	26
  4489  1B33  343E               	retlw	62
  4490  1B34  3428               	retlw	40
  4491  1B35  3435               	retlw	53
  4492  1B36  34B1               	retlw	177
  4493  1B37  34F0               	retlw	240
  4494  1B38  344C               	retlw	76
  4495  1B39  3423               	retlw	35
  4496  1B3A  34D5               	retlw	213
  4497  1B3B  34E6               	retlw	230
  4498  1B3C  34E7               	retlw	231
  4499  1B3D  34ED               	retlw	237
  4500  1B3E  347E               	retlw	126
  4501  1B3F  3428               	retlw	40
  4502  1B40  343D               	retlw	61
  4503  1B41  34F9               	retlw	249
  4504  1B42  34A4               	retlw	164
  4505  1B43  343C               	retlw	60
  4506  1B44  3496               	retlw	150
  4507  1B45  3437               	retlw	55
  4508  1B46  340F               	retlw	15
  4509  1B47  34F2               	retlw	242
  4510  1B48  34F2               	retlw	242
  4511  1B49  3421               	retlw	33
  4512  1B4A  346B               	retlw	107
  4513  1B4B  34E4               	retlw	228
  4514  1B4C  3459               	retlw	89
  4515  1B4D  34EF               	retlw	239
  4516  1B4E  34C0               	retlw	192
  4517  1B4F  342A               	retlw	42
  4518  1B50  343A               	retlw	58
  4519  1B51  340D               	retlw	13
  4520  1B52  34A3               	retlw	163
  4521  1B53  34C8               	retlw	200
  4522  1B54  3491               	retlw	145
  4523  1B55  34C3               	retlw	195
  4524  1B56  3408               	retlw	8
  4525  1B57  3406               	retlw	6
  4526  1B58  34F5               	retlw	245
  4527  1B59  34D5               	retlw	213
  4528  1B5A  346C               	retlw	108
  4529  1B5B  3410               	retlw	16
  4530  1B5C  345E               	retlw	94
  4531  1B5D  341B               	retlw	27
  4532  1B5E  34C7               	retlw	199
  4533  1B5F  34DE               	retlw	222
  4534  1B60  34AA               	retlw	170
  4535  1B61  3454               	retlw	84
  4536  1B62  3433               	retlw	51
  4537  1B63  3491               	retlw	145
  4538  1B64  3401               	retlw	1
  4539  1B65  349A               	retlw	154
  4540  1B66  3498               	retlw	152
  4541  1B67  345F               	retlw	95
  4542  1B68  3465               	retlw	101
  4543  1B69  348C               	retlw	140
  4544  1B6A  34FC               	retlw	252
  4545  1B6B  3449               	retlw	73
  4546  1B6C  34CE               	retlw	206
  4547  1B6D  3442               	retlw	66
  4548  1B6E  3457               	retlw	87
  4549  1B6F  3487               	retlw	135
  4550  1B70  34AD               	retlw	173
  4551  1B71  34A0               	retlw	160
  4552  1B72  3434               	retlw	52
  4553  1B73  3465               	retlw	101
  4554  1B74  3406               	retlw	6
  4555  1B75  346E               	retlw	110
  4556  1B76  349F               	retlw	159
  4557  1B77  34AB               	retlw	171
  4558  1B78  3462               	retlw	98
  4559  1B79  3478               	retlw	120
  4560  1B7A  34FB               	retlw	251
  4561  1B7B  34BD               	retlw	189
  4562  1B7C  34C9               	retlw	201
  4563  1B7D  34B6               	retlw	182
  4564  1B7E  3450               	retlw	80
  4565  1B7F  3473               	retlw	115
  4566  1B80  34D6               	retlw	214
  4567  1B81  3451               	retlw	81
  4568  1B82  344F               	retlw	79
  4569  1B83  3494               	retlw	148
  4570  1B84  347D               	retlw	125
  4571  1B85  349F               	retlw	159
  4572  1B86  34E4               	retlw	228
  4573  1B87  345A               	retlw	90
  4574  1B88  3419               	retlw	25
  4575  1B89  3489               	retlw	137
  4576  1B8A  3480               	retlw	128
  4577  1B8B  344C               	retlw	76
  4578  1B8C  34B2               	retlw	178
  4579  1B8D  3447               	retlw	71
  4580  1B8E  342B               	retlw	43
  4581  1B8F  3482               	retlw	130
  4582  1B90  34D1               	retlw	209
  4583  1B91  34A5               	retlw	165
  4584  1B92  3448               	retlw	72
  4585  1B93  3460               	retlw	96
  4586  1B94  347A               	retlw	122
  4587  1B95  346B               	retlw	107
  4588  1B96  34E3               	retlw	227
  4589  1B97  34AE               	retlw	174
  4590  1B98  341E               	retlw	30
  4591  1B99  347D               	retlw	125
  4592  1B9A  3487               	retlw	135
  4593  1B9B  34B8               	retlw	184
  4594  1B9C  34B5               	retlw	181
  4595  1B9D  34B3               	retlw	179
  4596  1B9E  342C               	retlw	44
  4597  1B9F  3476               	retlw	118
  4598  1BA0  3441               	retlw	65
  4599  1BA1  34FC               	retlw	252
  4600  1BA2  34D8               	retlw	216
  4601  1BA3  3439               	retlw	57
  4602  1BA4  34EA               	retlw	234
  4603  1BA5  3432               	retlw	50
  4604  1BA6  3473               	retlw	115
  4605  1BA7  34F7               	retlw	247
  4606  1BA8  348E               	retlw	142
  4607  1BA9  3424               	retlw	36
  4608  1BAA  3417               	retlw	23
  4609  1BAB  34E1               	retlw	225
  4610  1BAC  3425               	retlw	37
  4611  1BAD  34EA               	retlw	234
  4612  1BAE  34BC               	retlw	188
  4613  1BAF  342F               	retlw	47
  4614  1BB0  3446               	retlw	70
  4615  1BB1  3408               	retlw	8
  4616  1BB2  34DF               	retlw	223
  4617  1BB3  34CD               	retlw	205
  4618  1BB4  34ED               	retlw	237
  4619  1BB5  34C6               	retlw	198
  4620  1BB6  3474               	retlw	116
  4621  1BB7  3403               	retlw	3
  4622  1BB8  3489               	retlw	137
  4623  1BB9  34D0               	retlw	208
  4624  1BBA  3410               	retlw	16
  4625  1BBB  3415               	retlw	21
  4626  1BBC  3422               	retlw	34
  4627  1BBD  341E               	retlw	30
  4628  1BBE  34BB               	retlw	187
  4629  1BBF  34DB               	retlw	219
  4630  1BC0  34F8               	retlw	248
  4631  1BC1  340A               	retlw	10
  4632  1BC2  3461               	retlw	97
  4633  1BC3  34CF               	retlw	207
  4634  1BC4  3453               	retlw	83
  4635  1BC5  34C4               	retlw	196
  4636  1BC6  34CA               	retlw	202
  4637  1BC7  3401               	retlw	1
  4638  1BC8  3437               	retlw	55
  4639  1BC9  34D2               	retlw	210
  4640  1BCA  34AE               	retlw	174
  4641  1BCB  3417               	retlw	23
  4642  1BCC  349C               	retlw	156
  4643  1BCD  341C               	retlw	28
  4644  1BCE  3405               	retlw	5
  4645  1BCF  34D9               	retlw	217
  4646  1BD0  34FF               	retlw	255
  4647  1BD1  34FE               	retlw	254
  4648  1BD2  3466               	retlw	102
  4649  1BD3  343B               	retlw	59
  4650  1BD4  3454               	retlw	84
  4651  1BD5  3430               	retlw	48
  4652  1BD6  34CD               	retlw	205
  4653  1BD7  34F5               	retlw	245
  4654  1BD8  3430               	retlw	48
  4655  1BD9  3426               	retlw	38
  4656  1BDA  34A9               	retlw	169
  4657  1BDB  34E3               	retlw	227
  4658  1BDC  349B               	retlw	155
  4659  1BDD  34E8               	retlw	232
  4660  1BDE  3402               	retlw	2
  4661  1BDF  342D               	retlw	45
  4662  1BE0  346F               	retlw	111
  4663  1BE1  34A7               	retlw	167
  4664  1BE2  34F6               	retlw	246
  4665  1BE3  3462               	retlw	98
  4666  1BE4  34C4               	retlw	196
  4667  1BE5  3469               	retlw	105
  4668  1BE6  345D               	retlw	93
  4669  1BE7  34AC               	retlw	172
  4670  1BE8  34A0               	retlw	160
  4671  1BE9  347F               	retlw	127
  4672  1BEA  3439               	retlw	57
  4673  1BEB  34BA               	retlw	186
  4674  1BEC  340B               	retlw	11
  4675  1BED  34B1               	retlw	177
  4676  1BEE  3492               	retlw	146
  4677  1BEF  3474               	retlw	116
  4678  1BF0  3468               	retlw	104
  4679  1BF1  3453               	retlw	83
  4680  1BF2  34F1               	retlw	241
  4681  1BF3  3496               	retlw	150
  4682  1BF4  34C3               	retlw	195
  4683  1BF5  349D               	retlw	157
  4684  1BF6  345A               	retlw	90
  4685  1BF7  3458               	retlw	88
  4686  1BF8  34A7               	retlw	167
  4687  1BF9  348B               	retlw	139
  4688  1BFA  343E               	retlw	62
  4689  1BFB  344E               	retlw	78
  4690  1BFC  340C               	retlw	12
  4691  1BFD  3445               	retlw	69
  4692  1BFE  3495               	retlw	149
  4693  1BFF  3480               	retlw	128
  4694  1C00                     __end_of_crc15Table:	
  4695                           
  4696                           	psect	stringtext4
  4697  3800                     __pstringtext4:	
  4698  3800                     __powers_:	
  4699  3800  3400               	retlw	0
  4700  3801  3400               	retlw	0
  4701  3802  3480               	retlw	128
  4702  3803  343F               	retlw	63
  4703  3804  3400               	retlw	0
  4704  3805  3400               	retlw	0
  4705  3806  3420               	retlw	32
  4706  3807  3441               	retlw	65
  4707  3808  3400               	retlw	0
  4708  3809  3400               	retlw	0
  4709  380A  34C8               	retlw	200
  4710  380B  3442               	retlw	66
  4711  380C  3400               	retlw	0
  4712  380D  3400               	retlw	0
  4713  380E  347A               	retlw	122
  4714  380F  3444               	retlw	68
  4715  3810  3400               	retlw	0
  4716  3811  3440               	retlw	64
  4717  3812  341C               	retlw	28
  4718  3813  3446               	retlw	70
  4719  3814  3400               	retlw	0
  4720  3815  3450               	retlw	80
  4721  3816  34C3               	retlw	195
  4722  3817  3447               	retlw	71
  4723  3818  3400               	retlw	0
  4724  3819  3424               	retlw	36
  4725  381A  3474               	retlw	116
  4726  381B  3449               	retlw	73
  4727  381C  3480               	retlw	128
  4728  381D  3496               	retlw	150
  4729  381E  3418               	retlw	24
  4730  381F  344B               	retlw	75
  4731  3820  3420               	retlw	32
  4732  3821  34BC               	retlw	188
  4733  3822  34BE               	retlw	190
  4734  3823  344C               	retlw	76
  4735  3824  3428               	retlw	40
  4736  3825  346B               	retlw	107
  4737  3826  346E               	retlw	110
  4738  3827  344E               	retlw	78
  4739  3828  34F9               	retlw	249
  4740  3829  3402               	retlw	2
  4741  382A  3415               	retlw	21
  4742  382B  3450               	retlw	80
  4743  382C  34EC               	retlw	236
  4744  382D  3478               	retlw	120
  4745  382E  34AD               	retlw	173
  4746  382F  3460               	retlw	96
  4747  3830  34CA               	retlw	202
  4748  3831  34F2               	retlw	242
  4749  3832  3449               	retlw	73
  4750  3833  3471               	retlw	113
  4751  3834                     __end_of__powers_:	
  4752                           
  4753                           	psect	stringtext5
  4754  3834                     __pstringtext5:	
  4755  3834                     __npowers_:	
  4756  3834  3400               	retlw	0
  4757  3835  3400               	retlw	0
  4758  3836  3480               	retlw	128
  4759  3837  343F               	retlw	63
  4760  3838  34CD               	retlw	205
  4761  3839  34CC               	retlw	204
  4762  383A  34CC               	retlw	204
  4763  383B  343D               	retlw	61
  4764  383C  340A               	retlw	10
  4765  383D  34D7               	retlw	215
  4766  383E  3423               	retlw	35
  4767  383F  343C               	retlw	60
  4768  3840  346F               	retlw	111
  4769  3841  3412               	retlw	18
  4770  3842  3483               	retlw	131
  4771  3843  343A               	retlw	58
  4772  3844  3417               	retlw	23
  4773  3845  34B7               	retlw	183
  4774  3846  34D1               	retlw	209
  4775  3847  3438               	retlw	56
  4776  3848  34AC               	retlw	172
  4777  3849  34C5               	retlw	197
  4778  384A  3427               	retlw	39
  4779  384B  3437               	retlw	55
  4780  384C  34BD               	retlw	189
  4781  384D  3437               	retlw	55
  4782  384E  3486               	retlw	134
  4783  384F  3435               	retlw	53
  4784  3850  3495               	retlw	149
  4785  3851  34BF               	retlw	191
  4786  3852  34D6               	retlw	214
  4787  3853  3433               	retlw	51
  4788  3854  3477               	retlw	119
  4789  3855  34CC               	retlw	204
  4790  3856  342B               	retlw	43
  4791  3857  3432               	retlw	50
  4792  3858  345F               	retlw	95
  4793  3859  3470               	retlw	112
  4794  385A  3489               	retlw	137
  4795  385B  3430               	retlw	48
  4796  385C  34FF               	retlw	255
  4797  385D  34E6               	retlw	230
  4798  385E  34DB               	retlw	219
  4799  385F  342E               	retlw	46
  4800  3860  3408               	retlw	8
  4801  3861  34E5               	retlw	229
  4802  3862  343C               	retlw	60
  4803  3863  341E               	retlw	30
  4804  3864  3460               	retlw	96
  4805  3865  3442               	retlw	66
  4806  3866  34A2               	retlw	162
  4807  3867  340D               	retlw	13
  4808  3868                     __end_of__npowers_:	
  4809                           
  4810                           	psect	stringtext6
  4811  3868                     __pstringtext6:	
  4812  3868                     _temperatures:	
  4813  3868  3494               	retlw	148
  4814  3869  3476               	retlw	118
  4815  386A  3467               	retlw	103
  4816  386B  345C               	retlw	92
  4817  386C  3454               	retlw	84
  4818  386D  344E               	retlw	78
  4819  386E  3448               	retlw	72
  4820  386F  3443               	retlw	67
  4821  3870  343F               	retlw	63
  4822  3871  343C               	retlw	60
  4823  3872  3438               	retlw	56
  4824  3873  3435               	retlw	53
  4825  3874  3433               	retlw	51
  4826  3875  3430               	retlw	48
  4827  3876  342D               	retlw	45
  4828  3877  342B               	retlw	43
  4829  3878  3429               	retlw	41
  4830  3879  3427               	retlw	39
  4831  387A  3425               	retlw	37
  4832  387B  3422               	retlw	34
  4833  387C  3421               	retlw	33
  4834  387D  341F               	retlw	31
  4835  387E  341D               	retlw	29
  4836  387F  341B               	retlw	27
  4837  3880  3419               	retlw	25
  4838  3881  3417               	retlw	23
  4839  3882  3416               	retlw	22
  4840  3883  3414               	retlw	20
  4841  3884  3412               	retlw	18
  4842  3885  3410               	retlw	16
  4843  3886  340F               	retlw	15
  4844  3887  340D               	retlw	13
  4845  3888  340B               	retlw	11
  4846  3889  3409               	retlw	9
  4847  388A  3407               	retlw	7
  4848  388B  3405               	retlw	5
  4849  388C  3403               	retlw	3
  4850  388D  3401               	retlw	1
  4851  388E  34FF               	retlw	255
  4852  388F  34FD               	retlw	253
  4853  3890  34FB               	retlw	251
  4854  3891  34F8               	retlw	248
  4855  3892  34F5               	retlw	245
  4856  3893  34F2               	retlw	242
  4857  3894  34EF               	retlw	239
  4858  3895  34EB               	retlw	235
  4859  3896  34E6               	retlw	230
  4860  3897  34E0               	retlw	224
  4861  3898  34D6               	retlw	214
  4862  3899  34EF               	retlw	239
  4863  389A                     __end_of_temperatures:	
  4864                           
  4865                           	psect	stringtext7
  4866  389A                     __pstringtext7:	
  4867  389A                     _dpowers:	
  4868  389A  3401               	retlw	1
  4869  389B  3400               	retlw	0
  4870  389C  3400               	retlw	0
  4871  389D  3400               	retlw	0
  4872  389E  340A               	retlw	10
  4873  389F  3400               	retlw	0
  4874  38A0  3400               	retlw	0
  4875  38A1  3400               	retlw	0
  4876  38A2  3464               	retlw	100
  4877  38A3  3400               	retlw	0
  4878  38A4  3400               	retlw	0
  4879  38A5  3400               	retlw	0
  4880  38A6  34E8               	retlw	232
  4881  38A7  3403               	retlw	3
  4882  38A8  3400               	retlw	0
  4883  38A9  3400               	retlw	0
  4884  38AA  3410               	retlw	16
  4885  38AB  3427               	retlw	39
  4886  38AC  3400               	retlw	0
  4887  38AD  3400               	retlw	0
  4888  38AE  34A0               	retlw	160
  4889  38AF  3486               	retlw	134
  4890  38B0  3401               	retlw	1
  4891  38B1  3400               	retlw	0
  4892  38B2  3440               	retlw	64
  4893  38B3  3442               	retlw	66
  4894  38B4  340F               	retlw	15
  4895  38B5  3400               	retlw	0
  4896  38B6  3480               	retlw	128
  4897  38B7  3496               	retlw	150
  4898  38B8  3498               	retlw	152
  4899  38B9  3400               	retlw	0
  4900  38BA  3400               	retlw	0
  4901  38BB  34E1               	retlw	225
  4902  38BC  34F5               	retlw	245
  4903  38BD  3405               	retlw	5
  4904  38BE  3400               	retlw	0
  4905  38BF  34CA               	retlw	202
  4906  38C0  349A               	retlw	154
  4907  38C1  343B               	retlw	59
  4908  38C2                     __end_of_dpowers:	
  4909                           
  4910                           	psect	stringtext8
  4911  3983                     __pstringtext8:	
  4912  3983                     _t0:	
  4913  3983  3433               	retlw	51
  4914  3984  3413               	retlw	19
  4915  3985  3495               	retlw	149
  4916  3986  3443               	retlw	67
  4917  3987                     __end_of_t0:	
  4918                           
  4919                           	psect	stringtext9
  4920  3987                     __pstringtext9:	
  4921  3987                     main@total_capacity:	
  4922  3987  34C0               	retlw	192
  4923  3988  34A8               	retlw	168
  4924  3989                     __end_ofmain@total_capacity:	
  4925                           
  4926                           	psect	stringtext10
  4927  3989                     __pstringtext10:	
  4928  3989                     _Beta:	
  4929  3989  3489               	retlw	137
  4930  398A  340F               	retlw	15
  4931  398B                     __end_of_Beta:	
  4932                           
  4933                           	psect	stringtext11
  4934  398B                     __pstringtext11:	
  4935  398B                     LTC6804_rdcfg@BYTES_IN_REG:	
  4936  398B  3408               	retlw	8
  4937  398C                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4938                           
  4939                           	psect	stringtext12
  4940  398C                     __pstringtext12:	
  4941  398C                     LTC6804_wrcfg@BYTES_IN_REG:	
  4942  398C  3406               	retlw	6
  4943  398D                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4944                           
  4945                           	psect	stringtext13
  4946  398D                     __pstringtext13:	
  4947  398D                     LTC6804_rdaux_reg@REG_LEN:	
  4948  398D  3408               	retlw	8
  4949  398E                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4950                           
  4951                           	psect	stringtext14
  4952  398E                     __pstringtext14:	
  4953  398E                     LTC6804_rdaux@GPIO_IN_REG:	
  4954  398E  3403               	retlw	3
  4955  398F                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4956                           
  4957                           	psect	stringtext15
  4958  398F                     __pstringtext15:	
  4959  398F                     LTC6804_rdaux@BYT_IN_REG:	
  4960  398F  3406               	retlw	6
  4961  3990                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4962                           
  4963                           	psect	stringtext16
  4964  3990                     __pstringtext16:	
  4965  3990                     LTC6804_rdaux@NUM_RX_BYT:	
  4966  3990  3408               	retlw	8
  4967  3991                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4968                           
  4969                           	psect	stringtext17
  4970  3991                     __pstringtext17:	
  4971  3991                     LTC6804_rdcv_reg@REG_LEN:	
  4972  3991  3408               	retlw	8
  4973  3992                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4974                           
  4975                           	psect	stringtext18
  4976  3992                     __pstringtext18:	
  4977  3992                     LTC6804_rdcv@CELL_IN_REG:	
  4978  3992  3403               	retlw	3
  4979  3993                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4980                           
  4981                           	psect	stringtext19
  4982  3993                     __pstringtext19:	
  4983  3993                     LTC6804_rdcv@BYT_IN_REG:	
  4984  3993  3406               	retlw	6
  4985  3994                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4986                           
  4987                           	psect	stringtext20
  4988  3994                     __pstringtext20:	
  4989  3994                     LTC6804_rdcv@NUM_RX_BYT:	
  4990  3994  3408               	retlw	8
  4991  3995                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4992                           
  4993                           	psect	stringtext21
  4994  38C2                     __pstringtext21:	
  4995  38C2                     LTC6804_rdstat_reg@REG_LEN:	
  4996  38C2  3408               	retlw	8
  4997  38C3                     __end_ofLTC6804_rdstat_reg@REG_LEN:	
  4998  0012                     _PIR2bits	set	18
  4999  001C                     _T2CON	set	28
  5000  001B                     _PR2	set	27
  5001  0011                     _PIR1bits	set	17
  5002  000B                     _INTCONbits	set	11
  5003  0092                     _PIE2bits	set	146
  5004  0095                     _OPTION_REG	set	149
  5005  009F                     _ADCON2	set	159
  5006  009E                     _ADCON1	set	158
  5007  009D                     _ADCON0	set	157
  5008  009B                     _ADRESL	set	155
  5009  009C                     _ADRESH	set	156
  5010  009D                     _ADCON0bits	set	157
  5011  008E                     _TRISCbits	set	142
  5012  008D                     _TRISBbits	set	141
  5013  008C                     _TRISAbits	set	140
  5014  008F                     _TRISDbits	set	143
  5015  0091                     _PIE1bits	set	145
  5016  011D                     _APFCON1bits	set	285
  5017  010D                     _LATBbits	set	269
  5018  010C                     _LATAbits	set	268
  5019  010F                     _LATDbits	set	271
  5020  019B                     _SPBRGL	set	411
  5021  019C                     _SPBRGH	set	412
  5022  019D                     _RCSTAbits	set	413
  5023  019E                     _TXSTAbits	set	414
  5024  018F                     _ANSELD	set	399
  5025  018D                     _ANSELB	set	397
  5026  018C                     _ANSELA	set	396
  5027  019A                     _TXREG	set	410
  5028  0211                     _SSP1BUF	set	529
  5029  0215                     _SSP1CON1bits	set	533
  5030  0215                     _SSP1CON1	set	533
  5031  0214                     _SSP1STATbits	set	532
  5032  0217                     _SSP1CON3bits	set	535
  5033  0214                     _SSPSTAT	set	532
  5034  0212                     _SSPADD	set	530
  5035  0215                     _SSPCON1	set	533
  5036  0214                     _SSPSTATbits	set	532
  5037  0216                     _SSPCON2bits	set	534
  5038  0211                     _SSPBUF	set	529
  5039  020F                     _WPUD	set	527
  5040  029A                     _CCP2CON	set	666
  5041  38C3                     STR_5:	
  5042  38C3  344D               	retlw	77	;'M'
  5043  38C4  3461               	retlw	97	;'a'
  5044  38C5  3478               	retlw	120	;'x'
  5045  38C6  3420               	retlw	32	;' '
  5046  38C7  3444               	retlw	68	;'D'
  5047  38C8  3469               	retlw	105	;'i'
  5048  38C9  3466               	retlw	102	;'f'
  5049  38CA  3466               	retlw	102	;'f'
  5050  38CB  3465               	retlw	101	;'e'
  5051  38CC  3472               	retlw	114	;'r'
  5052  38CD  3465               	retlw	101	;'e'
  5053  38CE  346E               	retlw	110	;'n'
  5054  38CF  3463               	retlw	99	;'c'
  5055  38D0  3465               	retlw	101	;'e'
  5056  38D1  3420               	retlw	32	;' '
  5057  38D2  343D               	retlw	61	;'='
  5058  38D3  3420               	retlw	32	;' '
  5059  38D4  3456               	retlw	86	;'V'
  5060  38D5  3425               	retlw	37	;'%'
  5061  38D6  3469               	retlw	105	;'i'
  5062  38D7  3420               	retlw	32	;' '
  5063  38D8  3426               	retlw	38	;'&'
  5064  38D9  3420               	retlw	32	;' '
  5065  38DA  3456               	retlw	86	;'V'
  5066  38DB  3425               	retlw	37	;'%'
  5067  38DC  3469               	retlw	105	;'i'
  5068  38DD  3420               	retlw	32	;' '
  5069  38DE  3440               	retlw	64	;'@'
  5070  38DF  3420               	retlw	32	;' '
  5071  38E0  3425               	retlw	37	;'%'
  5072  38E1  3430               	retlw	48	;'0'
  5073  38E2  342E               	retlw	46	;'.'
  5074  38E3  3434               	retlw	52	;'4'
  5075  38E4  3466               	retlw	102	;'f'
  5076  38E5  3456               	retlw	86	;'V'
  5077  38E6  340A               	retlw	10
  5078  38E7  340D               	retlw	13
  5079  38E8  3400               	retlw	0
  5080                           
  5081                           	psect	stringtext22
  5082  38E9                     __pstringtext22:	
  5083  38E9                     STR_1:	
  5084  38E9  3453               	retlw	83	;'S'
  5085  38EA  344F               	retlw	79	;'O'
  5086  38EB  3443               	retlw	67	;'C'
  5087  38EC  3420               	retlw	32	;' '
  5088  38ED  343D               	retlw	61	;'='
  5089  38EE  3420               	retlw	32	;' '
  5090  38EF  3425               	retlw	37	;'%'
  5091  38F0  3430               	retlw	48	;'0'
  5092  38F1  342E               	retlw	46	;'.'
  5093  38F2  3434               	retlw	52	;'4'
  5094  38F3  3466               	retlw	102	;'f'
  5095  38F4  3420               	retlw	32	;' '
  5096  38F5  3470               	retlw	112	;'p'
  5097  38F6  3465               	retlw	101	;'e'
  5098  38F7  3472               	retlw	114	;'r'
  5099  38F8  3463               	retlw	99	;'c'
  5100  38F9  3465               	retlw	101	;'e'
  5101  38FA  346E               	retlw	110	;'n'
  5102  38FB  3474               	retlw	116	;'t'
  5103  38FC  3420               	retlw	32	;' '
  5104  38FD  340A               	retlw	10
  5105  38FE  340D               	retlw	13
  5106  38FF  3400               	retlw	0
  5107                           
  5108                           	psect	stringtext23
  5109  3900                     __pstringtext23:	
  5110  3900                     STR_4:	
  5111  3900  3450               	retlw	80	;'P'
  5112  3901  3461               	retlw	97	;'a'
  5113  3902  3463               	retlw	99	;'c'
  5114  3903  346B               	retlw	107	;'k'
  5115  3904  3420               	retlw	32	;' '
  5116  3905  3456               	retlw	86	;'V'
  5117  3906  346F               	retlw	111	;'o'
  5118  3907  346C               	retlw	108	;'l'
  5119  3908  3474               	retlw	116	;'t'
  5120  3909  3461               	retlw	97	;'a'
  5121  390A  3467               	retlw	103	;'g'
  5122  390B  3465               	retlw	101	;'e'
  5123  390C  343A               	retlw	58	;':'
  5124  390D  3420               	retlw	32	;' '
  5125  390E  3425               	retlw	37	;'%'
  5126  390F  3430               	retlw	48	;'0'
  5127  3910  342E               	retlw	46	;'.'
  5128  3911  3434               	retlw	52	;'4'
  5129  3912  3466               	retlw	102	;'f'
  5130  3913  3456               	retlw	86	;'V'
  5131  3914  340A               	retlw	10
  5132  3915  340D               	retlw	13
  5133  3916  3400               	retlw	0
  5134                           
  5135                           	psect	stringtext24
  5136  3917                     __pstringtext24:	
  5137  3917                     STR_8:	
  5138  3917  3448               	retlw	72	;'H'
  5139  3918  3469               	retlw	105	;'i'
  5140  3919  3467               	retlw	103	;'g'
  5141  391A  3468               	retlw	104	;'h'
  5142  391B  3465               	retlw	101	;'e'
  5143  391C  3473               	retlw	115	;'s'
  5144  391D  3474               	retlw	116	;'t'
  5145  391E  3420               	retlw	32	;' '
  5146  391F  3454               	retlw	84	;'T'
  5147  3920  3465               	retlw	101	;'e'
  5148  3921  346D               	retlw	109	;'m'
  5149  3922  3470               	retlw	112	;'p'
  5150  3923  343A               	retlw	58	;':'
  5151  3924  3420               	retlw	32	;' '
  5152  3925  3425               	retlw	37	;'%'
  5153  3926  3469               	retlw	105	;'i'
  5154  3927  3443               	retlw	67	;'C'
  5155  3928  340A               	retlw	10
  5156  3929  340D               	retlw	13
  5157  392A  3400               	retlw	0
  5158                           
  5159                           	psect	stringtext25
  5160  392B                     __pstringtext25:	
  5161  392B                     STR_6:	
  5162  392B  3463               	retlw	99	;'c'
  5163  392C  3475               	retlw	117	;'u'
  5164  392D  3472               	retlw	114	;'r'
  5165  392E  3472               	retlw	114	;'r'
  5166  392F  3465               	retlw	101	;'e'
  5167  3930  346E               	retlw	110	;'n'
  5168  3931  3474               	retlw	116	;'t'
  5169  3932  3420               	retlw	32	;' '
  5170  3933  343D               	retlw	61	;'='
  5171  3934  3420               	retlw	32	;' '
  5172  3935  3425               	retlw	37	;'%'
  5173  3936  3430               	retlw	48	;'0'
  5174  3937  342E               	retlw	46	;'.'
  5175  3938  3434               	retlw	52	;'4'
  5176  3939  3466               	retlw	102	;'f'
  5177  393A  3441               	retlw	65	;'A'
  5178  393B  340A               	retlw	10
  5179  393C  340D               	retlw	13
  5180  393D  3400               	retlw	0
  5181                           
  5182                           	psect	stringtext26
  5183  393E                     __pstringtext26:	
  5184  393E                     STR_2:	
  5185  393E  3456               	retlw	86	;'V'
  5186  393F  3425               	retlw	37	;'%'
  5187  3940  3469               	retlw	105	;'i'
  5188  3941  3420               	retlw	32	;' '
  5189  3942  343D               	retlw	61	;'='
  5190  3943  3420               	retlw	32	;' '
  5191  3944  3425               	retlw	37	;'%'
  5192  3945  3430               	retlw	48	;'0'
  5193  3946  342E               	retlw	46	;'.'
  5194  3947  3434               	retlw	52	;'4'
  5195  3948  3466               	retlw	102	;'f'
  5196  3949  3456               	retlw	86	;'V'
  5197  394A  3420               	retlw	32	;' '
  5198  394B  345B               	retlw	91	;'['
  5199  394C  3458               	retlw	88	;'X'
  5200  394D  345D               	retlw	93	;']'
  5201  394E  340A               	retlw	10
  5202  394F  340D               	retlw	13
  5203  3950  3400               	retlw	0
  5204                           
  5205                           	psect	stringtext27
  5206  3951                     __pstringtext27:	
  5207  3951                     STR_7:	
  5208  3951  3454               	retlw	84	;'T'
  5209  3952  3465               	retlw	101	;'e'
  5210  3953  346D               	retlw	109	;'m'
  5211  3954  3470               	retlw	112	;'p'
  5212  3955  3425               	retlw	37	;'%'
  5213  3956  3469               	retlw	105	;'i'
  5214  3957  3420               	retlw	32	;' '
  5215  3958  343D               	retlw	61	;'='
  5216  3959  3420               	retlw	32	;' '
  5217  395A  3425               	retlw	37	;'%'
  5218  395B  3469               	retlw	105	;'i'
  5219  395C  3443               	retlw	67	;'C'
  5220  395D  340A               	retlw	10
  5221  395E  340D               	retlw	13
  5222  395F  3400               	retlw	0
  5223                           
  5224                           	psect	stringtext28
  5225  3960                     __pstringtext28:	
  5226  3960                     STR_3:	
  5227  3960  3456               	retlw	86	;'V'
  5228  3961  3425               	retlw	37	;'%'
  5229  3962  3469               	retlw	105	;'i'
  5230  3963  3420               	retlw	32	;' '
  5231  3964  343D               	retlw	61	;'='
  5232  3965  3420               	retlw	32	;' '
  5233  3966  3425               	retlw	37	;'%'
  5234  3967  3430               	retlw	48	;'0'
  5235  3968  342E               	retlw	46	;'.'
  5236  3969  3434               	retlw	52	;'4'
  5237  396A  3466               	retlw	102	;'f'
  5238  396B  3456               	retlw	86	;'V'
  5239  396C  340A               	retlw	10
  5240  396D  340D               	retlw	13
  5241  396E  3400               	retlw	0
  5242                           
  5243                           	psect	stringtext29
  5244  396F                     __pstringtext29:	
  5245  396F                     STR_10:	
  5246  396F  341B               	retlw	27
  5247  3970  345B               	retlw	91	;'['
  5248  3971  3432               	retlw	50	;'2'
  5249  3972  344B               	retlw	75	;'K'
  5250  3973  3420               	retlw	32	;' '
  5251  3974  341B               	retlw	27
  5252  3975  345B               	retlw	91	;'['
  5253  3976  3441               	retlw	65	;'A'
  5254  3977  3420               	retlw	32	;' '
  5255  3978  340D               	retlw	13
  5256  3979  3400               	retlw	0
  5257                           
  5258                           	psect	stringtext30
  5259  397A                     __pstringtext30:	
  5260  397A                     STR_9:	
  5261  397A  341B               	retlw	27
  5262  397B  345B               	retlw	91	;'['
  5263  397C  3432               	retlw	50	;'2'
  5264  397D  344B               	retlw	75	;'K'
  5265  397E  3420               	retlw	32	;' '
  5266  397F  341B               	retlw	27
  5267  3980  345B               	retlw	91	;'['
  5268  3981  3441               	retlw	65	;'A'
  5269  3982  3400               	retlw	0
  5270                           
  5271                           	psect	stringtext31
  5272  0000                     __pstringtext31:	
  5273                           
  5274                           ; #config settings
  5275  0000                     
  5276                           	psect	cinit
  5277  0083                     start_initialization:	
  5278  0083                     __initialization:		;BIGRAM
  5279                           
  5280                           ; Initialize objects allocated to BANK5
  5281  0083  30A7               	movlw	low __pidataBANK5
  5282  0084  0084               	movwf	4
  5283  0085  30B6               	movlw	(high __pidataBANK5)| (0+128)
  5284  0086  0085               	movwf	5
  5285  0087  30A0               	movlw	low __pdataBANK5
  5286  0088  0086               	movwf	6
  5287  0089  3002               	movlw	high __pdataBANK5
  5288  008A  0087               	movwf	7
  5289  008B  3000               	movlw	0
  5290  008C  00FF               	movwf	btemp+1
  5291  008D  3017               	movlw	23
  5292  008E  31B6  2624  3180   	fcall	init_ram
  5293                           
  5294                           ; Clear objects allocated to BIGRAM
  5295  0091  30FC               	movlw	low (0+9724)
  5296  0092  0084               	movwf	4
  5297  0093  3025               	movlw	high (0+9724)
  5298  0094  0085               	movwf	5
  5299  0095  30F4               	movlw	244
  5300  0096  00FE               	movwf	btemp
  5301  0097  3001               	movlw	1
  5302  0098  00FF               	movwf	btemp+1
  5303  0099  31B6  2618  3180   	fcall	clear_ram0
  5304                           
  5305                           ; Clear objects allocated to COMMON
  5306  009C  01F8               	clrf	__pbssCOMMON& (0+127)
  5307  009D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  5308  009E  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  5309                           
  5310                           ; Clear objects allocated to BANK5
  5311  009F  30B7               	movlw	low __pbssBANK5
  5312  00A0  0084               	movwf	4
  5313  00A1  3002               	movlw	high __pbssBANK5
  5314  00A2  0085               	movwf	5
  5315  00A3  3012               	movlw	18
  5316  00A4  00FE               	movwf	btemp
  5317  00A5  3000               	movlw	0
  5318  00A6  00FF               	movwf	btemp+1
  5319  00A7  31B6  2618  3180   	fcall	clear_ram0
  5320                           
  5321                           ; Clear objects allocated to BANK6
  5322  00AA  3020               	movlw	low __pbssBANK6
  5323  00AB  0084               	movwf	4
  5324  00AC  3003               	movlw	high __pbssBANK6
  5325  00AD  0085               	movwf	5
  5326  00AE  3018               	movlw	24
  5327  00AF  00FE               	movwf	btemp
  5328  00B0  3000               	movlw	0
  5329  00B1  00FF               	movwf	btemp+1
  5330  00B2  31B6  2618         	fcall	clear_ram0
  5331  00B4                     end_of_initialization:	
  5332                           ;End of C runtime variable initialization code
  5333                           
  5334  00B4                     __end_of__initialization:	
  5335  00B4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5336  00B5  0020               	movlb	0
  5337  00B6  318D  2D6A         	ljmp	_main	;jump to C main() function
  5338                           
  5339                           	psect	bssCOMMON
  5340  0078                     __pbssCOMMON:	
  5341  0078                     _cmd:	
  5342  0078                     	ds	3
  5343                           
  5344                           	psect	bssBANK5
  5345  02B7                     __pbssBANK5:	
  5346  02B7                     _currentBool:	
  5347  02B7                     	ds	2
  5348  02B9                     _uartBool:	
  5349  02B9                     	ds	2
  5350  02BB                     _z:	
  5351  02BB                     	ds	2
  5352  02BD                     _k:	
  5353  02BD                     	ds	2
  5354  02BF                     _j:	
  5355  02BF                     	ds	2
  5356  02C1                     _n:	
  5357  02C1                     	ds	2
  5358  02C3                     _ADSTAT:	
  5359  02C3                     	ds	2
  5360  02C5                     _ADAX:	
  5361  02C5                     	ds	2
  5362  02C7                     _ADCV:	
  5363  02C7                     	ds	2
  5364                           
  5365                           	psect	dataBANK5
  5366  02A0                     __pdataBANK5:	
  5367  02A0                     main@F7728:	
  5368  02A0                     	ds	10
  5369  02AA                     _tempChannels:	
  5370  02AA                     	ds	5
  5371  02AF                     SSD1306_Test@F7528:	
  5372  02AF                     	ds	2
  5373  02B1                     _configReg:	
  5374  02B1                     	ds	6
  5375                           
  5376                           	psect	bssBANK6
  5377  0320                     __pbssBANK6:	
  5378  0320                     measureVoltages@F7581:	
  5379  0320                     	ds	24
  5380                           
  5381                           	psect	inittext
  5382  3624                     init_ram:	
  5383  3624  00FE               	movwf	126
  5384  3625                     initloop:	
  5385  3625  0012               	moviw fsr0++
  5386  3626  001E               	movwi fsr1++
  5387  3627  3001               	movlw	1
  5388  3628  02FE               	subwf	126,f
  5389  3629  3000               	movlw	0
  5390  362A  3BFF               	subwfb	127,f
  5391  362B  087F               	movf	127,w
  5392  362C  047E               	iorwf	126,w
  5393  362D  1903               	btfsc	3,2
  5394  362E  3400               	retlw	0
  5395  362F  2E25               	goto	initloop
  5396                           
  5397                           	psect	clrtext
  5398  3618                     clear_ram0:	
  5399                           ;	Called with FSR0 containing the base address, and
  5400                           ;	btemp/btemp+1 has the size to clear
  5401                           
  5402  3618  0064               	clrwdt	;clear the watchdog before getting into this loop
  5403  3619                     clrloop0:	
  5404  3619  0180               	clrf	0	;clear RAM location pointed to by FSR
  5405  361A  3101               	addfsr 0,1
  5406  361B  3001               	movlw	1
  5407  361C  02FE               	subwf	126,f
  5408  361D  3000               	movlw	0
  5409  361E  3BFF               	subwfb	127,f
  5410  361F  087F               	movf	127,w
  5411  3620  047E               	iorwf	126,w
  5412  3621  1903               	btfsc	3,2
  5413  3622  3400               	retlw	0	;all done for this memory range, return
  5414  3623  2E19               	goto	clrloop0	;have we reached the end yet?
  5415                           
  5416                           	psect	cstackBANK5
  5417  02C9                     __pcstackBANK5:	
  5418  02C9                     main@temps:	
  5419                           
  5420                           ; 10 bytes @ 0x0
  5421  02C9                     	ds	10
  5422  02D3                     main@totalVoltage:	
  5423                           
  5424                           ; 4 bytes @ 0xA
  5425  02D3                     	ds	4
  5426  02D7                     main@current:	
  5427                           
  5428                           ; 4 bytes @ 0xE
  5429  02D7                     	ds	4
  5430                           
  5431                           	psect	cstackBANK4
  5432  0220                     __pcstackBANK4:	
  5433  0220                     main@voltages:	
  5434                           
  5435                           ; 48 bytes @ 0x0
  5436  0220                     	ds	48
  5437  0250                     main@balanceEn:	
  5438                           
  5439                           ; 24 bytes @ 0x30
  5440  0250                     	ds	24
  5441  0268                     main@currentIndex:	
  5442                           
  5443                           ; 2 bytes @ 0x48
  5444  0268                     	ds	2
  5445  026A                     main@soc:	
  5446                           
  5447                           ; 4 bytes @ 0x4A
  5448  026A                     	ds	4
  5449  026E                     main@i:	
  5450                           
  5451                           ; 2 bytes @ 0x4E
  5452  026E                     	ds	2
  5453                           
  5454                           	psect	cstackBANK3
  5455  01A0                     __pcstackBANK3:	
  5456  01A0                     main@currentBuff:	
  5457                           
  5458                           ; 80 bytes @ 0x0
  5459  01A0                     	ds	80
  5460                           
  5461                           	psect	cstackBANK2
  5462  0120                     __pcstackBANK2:	
  5463  0120                     _sprintf$2210:	
  5464  0120                     measureVoltages@ltcData:	
  5465                           ; 4 bytes @ 0x0
  5466                           
  5467                           
  5468                           ; 24 bytes @ 0x0
  5469  0120                     	ds	4
  5470  0124                     sprintf@ap:	
  5471                           
  5472                           ; 1 bytes @ 0x4
  5473  0124                     	ds	1
  5474  0125                     sprintf@ccnt:	
  5475                           
  5476                           ; 2 bytes @ 0x5
  5477  0125                     	ds	2
  5478  0127                     sprintf@tmpval:	
  5479                           
  5480                           ; 4 bytes @ 0x7
  5481  0127                     	ds	4
  5482  012B                     sprintf@val:	
  5483                           
  5484                           ; 4 bytes @ 0xB
  5485  012B                     	ds	4
  5486  012F                     sprintf@exp:	
  5487                           
  5488                           ; 2 bytes @ 0xF
  5489  012F                     	ds	2
  5490  0131                     sprintf@flag:	
  5491                           
  5492                           ; 2 bytes @ 0x11
  5493  0131                     	ds	2
  5494  0133                     sprintf@width:	
  5495                           
  5496                           ; 2 bytes @ 0x13
  5497  0133                     	ds	2
  5498  0135                     sprintf@fval:	
  5499                           
  5500                           ; 4 bytes @ 0x15
  5501  0135                     	ds	3
  5502  0138                     measureVoltages@errorCount:	
  5503                           
  5504                           ; 2 bytes @ 0x18
  5505  0138                     	ds	1
  5506  0139                     sprintf@prec:	
  5507                           
  5508                           ; 2 bytes @ 0x19
  5509  0139                     	ds	1
  5510  013A                     measureVoltages@pecError:	
  5511                           
  5512                           ; 1 bytes @ 0x1A
  5513  013A                     	ds	1
  5514  013B                     measureVoltages@voltages:	
  5515  013B                     sprintf@c:	
  5516                           ; 1 bytes @ 0x1B
  5517                           
  5518                           
  5519                           ; 1 bytes @ 0x1B
  5520  013B                     	ds	1
  5521  013C                     measureVoltages@i:	
  5522  013C                     _writeVoltages$2206:	
  5523                           ; 2 bytes @ 0x1C
  5524                           
  5525                           
  5526                           ; 4 bytes @ 0x1C
  5527  013C                     	ds	4
  5528  0140                     writeVoltages@maxCell:	
  5529                           
  5530                           ; 2 bytes @ 0x20
  5531  0140                     	ds	2
  5532  0142                     writeVoltages@minCell:	
  5533                           
  5534                           ; 2 bytes @ 0x22
  5535  0142                     	ds	2
  5536  0144                     writeVoltages@volts:	
  5537                           
  5538                           ; 1 bytes @ 0x24
  5539  0144                     	ds	1
  5540  0145                     writeVoltages@k:	
  5541                           
  5542                           ; 2 bytes @ 0x25
  5543  0145                     	ds	2
  5544  0147                     ?_writeValuesToUart:	
  5545  0147                     writeValuesToUart@voltageArrLength:	
  5546                           ; 1 bytes @ 0x27
  5547                           
  5548                           
  5549                           ; 2 bytes @ 0x27
  5550  0147                     	ds	2
  5551  0149                     writeValuesToUart@totalVoltage:	
  5552                           
  5553                           ; 4 bytes @ 0x29
  5554  0149                     	ds	4
  5555  014D                     writeValuesToUart@balanceEn:	
  5556                           
  5557                           ; 1 bytes @ 0x2D
  5558  014D                     	ds	1
  5559  014E                     writeValuesToUart@temperatureArr:	
  5560                           
  5561                           ; 1 bytes @ 0x2E
  5562  014E                     	ds	1
  5563  014F                     writeValuesToUart@temperatureArrLength:	
  5564                           
  5565                           ; 2 bytes @ 0x2F
  5566  014F                     	ds	2
  5567  0151                     writeValuesToUart@temperatureHigh:	
  5568                           
  5569                           ; 2 bytes @ 0x31
  5570  0151                     	ds	2
  5571  0153                     writeValuesToUart@current:	
  5572                           
  5573                           ; 4 bytes @ 0x33
  5574  0153                     	ds	4
  5575  0157                     writeValuesToUart@soc:	
  5576                           
  5577                           ; 4 bytes @ 0x37
  5578  0157                     	ds	4
  5579  015B                     writeValuesToUart@uartLines:	
  5580                           
  5581                           ; 2 bytes @ 0x3B
  5582  015B                     	ds	2
  5583  015D                     ??_writeValuesToUart:	
  5584                           
  5585                           ; 1 bytes @ 0x3D
  5586  015D                     	ds	2
  5587  015F                     writeValuesToUart@voltageArr:	
  5588                           
  5589                           ; 1 bytes @ 0x3F
  5590  015F                     	ds	1
  5591  0160                     writeValuesToUart@index:	
  5592                           
  5593                           ; 2 bytes @ 0x40
  5594  0160                     	ds	2
  5595  0162                     ??_main:	
  5596                           
  5597                           ; 1 bytes @ 0x42
  5598  0162                     	ds	6
  5599  0168                     _main$2203:	
  5600                           
  5601                           ; 4 bytes @ 0x48
  5602  0168                     	ds	4
  5603  016C                     main@numFaults:	
  5604                           
  5605                           ; 2 bytes @ 0x4C
  5606  016C                     	ds	2
  5607  016E                     main@highestTemp:	
  5608                           
  5609                           ; 2 bytes @ 0x4E
  5610  016E                     	ds	2
  5611                           
  5612                           	psect	cstackBANK1
  5613  00A0                     __pcstackBANK1:	
  5614  00A0                     ?___flneg:	
  5615  00A0                     ?___fltol:	
  5616                           ; 4 bytes @ 0x0
  5617                           
  5618  00A0                     ___flneg@f1:	
  5619                           ; 4 bytes @ 0x0
  5620                           
  5621  00A0                     ___fltol@f1:	
  5622                           ; 4 bytes @ 0x0
  5623                           
  5624  00A0                     _fround$2208:	
  5625                           ; 4 bytes @ 0x0
  5626                           
  5627                           
  5628                           ; 4 bytes @ 0x0
  5629  00A0                     	ds	4
  5630  00A4                     ??___fltol:	
  5631  00A4                     _fround$2207:	
  5632                           ; 1 bytes @ 0x4
  5633                           
  5634                           
  5635                           ; 4 bytes @ 0x4
  5636  00A4                     	ds	4
  5637  00A8                     fround@prec:	
  5638                           
  5639                           ; 1 bytes @ 0x8
  5640  00A8                     	ds	1
  5641  00A9                     ?___fladd:	
  5642  00A9                     ___fltol@sign1:	
  5643                           ; 4 bytes @ 0x9
  5644                           
  5645  00A9                     ___fladd@b:	
  5646                           ; 1 bytes @ 0x9
  5647                           
  5648                           
  5649                           ; 4 bytes @ 0x9
  5650  00A9                     	ds	1
  5651  00AA                     ___fltol@exp1:	
  5652                           
  5653                           ; 1 bytes @ 0xA
  5654  00AA                     	ds	1
  5655  00AB                     ?_calculateTemp:	
  5656  00AB                     calculateTemp@adcValue:	
  5657                           ; 2 bytes @ 0xB
  5658                           
  5659                           
  5660                           ; 2 bytes @ 0xB
  5661  00AB                     	ds	2
  5662  00AD                     ??_calculateTemp:	
  5663  00AD                     ___fladd@a:	
  5664                           ; 1 bytes @ 0xD
  5665                           
  5666                           
  5667                           ; 4 bytes @ 0xD
  5668  00AD                     	ds	2
  5669  00AF                     calculateTemp@voltage:	
  5670                           
  5671                           ; 4 bytes @ 0xF
  5672  00AF                     	ds	2
  5673  00B1                     ??___fladd:	
  5674                           
  5675                           ; 1 bytes @ 0x11
  5676  00B1                     	ds	2
  5677  00B3                     ?_getTemps:	
  5678  00B3                     getTemps@numTemps:	
  5679                           ; 2 bytes @ 0x13
  5680                           
  5681                           
  5682                           ; 2 bytes @ 0x13
  5683  00B3                     	ds	2
  5684  00B5                     ??_getTemps:	
  5685                           
  5686                           ; 1 bytes @ 0x15
  5687  00B5                     	ds	4
  5688  00B9                     getTemps@highestTemp:	
  5689                           
  5690                           ; 2 bytes @ 0x19
  5691  00B9                     	ds	2
  5692  00BB                     getTemps@temps:	
  5693                           
  5694                           ; 1 bytes @ 0x1B
  5695  00BB                     	ds	1
  5696  00BC                     getTemps@inc:	
  5697                           
  5698                           ; 2 bytes @ 0x1C
  5699  00BC                     	ds	1
  5700  00BD                     ___fladd@signs:	
  5701                           
  5702                           ; 1 bytes @ 0x1D
  5703  00BD                     	ds	1
  5704  00BE                     ___fladd@aexp:	
  5705                           
  5706                           ; 1 bytes @ 0x1E
  5707  00BE                     	ds	1
  5708  00BF                     ___fladd@bexp:	
  5709                           
  5710                           ; 1 bytes @ 0x1F
  5711  00BF                     	ds	1
  5712  00C0                     ___fladd@grs:	
  5713                           
  5714                           ; 1 bytes @ 0x20
  5715  00C0                     	ds	1
  5716  00C1                     ?___flge:	
  5717  00C1                     ?_avgBuff:	
  5718                           ; 1 bit 
  5719                           
  5720  00C1                     ?_sumVoltages:	
  5721                           ; 4 bytes @ 0x21
  5722                           
  5723  00C1                     ?_calculateCurrent:	
  5724                           ; 4 bytes @ 0x21
  5725                           
  5726  00C1                     ?___flsub:	
  5727                           ; 4 bytes @ 0x21
  5728                           
  5729  00C1                     avgBuff@size:	
  5730                           ; 4 bytes @ 0x21
  5731                           
  5732  00C1                     sumVoltages@numVoltages:	
  5733                           ; 2 bytes @ 0x21
  5734                           
  5735  00C1                     calculateCurrent@adcValue:	
  5736                           ; 2 bytes @ 0x21
  5737                           
  5738  00C1                     ___flge@ff1:	
  5739                           ; 4 bytes @ 0x21
  5740                           
  5741  00C1                     ___flsub@a:	
  5742                           ; 4 bytes @ 0x21
  5743                           
  5744                           
  5745                           ; 4 bytes @ 0x21
  5746  00C1                     	ds	4
  5747  00C5                     ??_avgBuff:	
  5748  00C5                     ??_sumVoltages:	
  5749                           ; 1 bytes @ 0x25
  5750                           
  5751  00C5                     calculateCurrent@curr:	
  5752                           ; 1 bytes @ 0x25
  5753                           
  5754  00C5                     ___flge@ff2:	
  5755                           ; 4 bytes @ 0x25
  5756                           
  5757  00C5                     ___flsub@b:	
  5758                           ; 4 bytes @ 0x25
  5759                           
  5760                           
  5761                           ; 4 bytes @ 0x25
  5762  00C5                     	ds	2
  5763  00C7                     avgBuff@buff:	
  5764  00C7                     sumVoltages@voltages:	
  5765                           ; 1 bytes @ 0x27
  5766                           
  5767                           
  5768                           ; 1 bytes @ 0x27
  5769  00C7                     	ds	1
  5770  00C8                     avgBuff@total:	
  5771  00C8                     sumVoltages@totalVoltage:	
  5772                           ; 4 bytes @ 0x28
  5773                           
  5774                           
  5775                           ; 4 bytes @ 0x28
  5776  00C8                     	ds	1
  5777  00C9                     ??___flge:	
  5778  00C9                     _calculateCurrent$2204:	
  5779                           ; 1 bytes @ 0x29
  5780                           
  5781                           
  5782                           ; 4 bytes @ 0x29
  5783  00C9                     	ds	3
  5784  00CC                     avgBuff@inc:	
  5785  00CC                     sumVoltages@i:	
  5786                           ; 2 bytes @ 0x2C
  5787                           
  5788                           
  5789                           ; 2 bytes @ 0x2C
  5790  00CC                     	ds	1
  5791  00CD                     ?_getCurrent:	
  5792                           
  5793                           ; 4 bytes @ 0x2D
  5794  00CD                     	ds	4
  5795  00D1                     ?_measureVoltages:	
  5796  00D1                     ?_cellBalancing:	
  5797                           ; 1 bytes @ 0x31
  5798                           
  5799  00D1                     ?_sprintf:	
  5800                           ; 1 bytes @ 0x31
  5801                           
  5802  00D1                     measureVoltages@totalVoltage:	
  5803                           ; 2 bytes @ 0x31
  5804                           
  5805  00D1                     cellBalancing@numVoltages:	
  5806                           ; 1 bytes @ 0x31
  5807                           
  5808  00D1                     sprintf@sp:	
  5809                           ; 2 bytes @ 0x31
  5810                           
  5811  00D1                     getCurrent@currentValue:	
  5812                           ; 2 bytes @ 0x31
  5813                           
  5814                           
  5815                           ; 4 bytes @ 0x31
  5816  00D1                     	ds	1
  5817  00D2                     measureVoltages@numVoltages:	
  5818                           
  5819                           ; 2 bytes @ 0x32
  5820  00D2                     	ds	1
  5821  00D3                     cellBalancing@balanceEn:	
  5822  00D3                     sprintf@f:	
  5823                           ; 1 bytes @ 0x33
  5824                           
  5825                           
  5826                           ; 2 bytes @ 0x33
  5827  00D3                     	ds	1
  5828  00D4                     ??_measureVoltages:	
  5829  00D4                     ??_cellBalancing:	
  5830                           ; 1 bytes @ 0x34
  5831                           
  5832                           
  5833                           ; 1 bytes @ 0x34
  5834  00D4                     	ds	2
  5835  00D6                     cellBalancing@boolean:	
  5836                           
  5837                           ; 1 bytes @ 0x36
  5838  00D6                     	ds	1
  5839  00D7                     cellBalancing@minVoltage:	
  5840                           
  5841                           ; 4 bytes @ 0x37
  5842  00D7                     	ds	1
  5843  00D8                     ?_startUp:	
  5844  00D8                     startUp@temps:	
  5845                           ; 2 bytes @ 0x38
  5846                           
  5847                           
  5848                           ; 1 bytes @ 0x38
  5849  00D8                     	ds	1
  5850  00D9                     startUp@voltages:	
  5851                           
  5852                           ; 1 bytes @ 0x39
  5853  00D9                     	ds	1
  5854  00DA                     startUp@totalVoltage:	
  5855                           
  5856                           ; 1 bytes @ 0x3A
  5857  00DA                     	ds	1
  5858  00DB                     startUp@current:	
  5859  00DB                     cellBalancing@i:	
  5860                           ; 1 bytes @ 0x3B
  5861                           
  5862                           
  5863                           ; 2 bytes @ 0x3B
  5864  00DB                     	ds	1
  5865  00DC                     startUp@soc:	
  5866                           
  5867                           ; 1 bytes @ 0x3C
  5868  00DC                     	ds	1
  5869  00DD                     ??_startUp:	
  5870  00DD                     ??_sprintf:	
  5871                           ; 1 bytes @ 0x3D
  5872                           
  5873  00DD                     cellBalancing@i_1334:	
  5874                           ; 1 bytes @ 0x3D
  5875                           
  5876                           
  5877                           ; 2 bytes @ 0x3D
  5878  00DD                     	ds	2
  5879  00DF                     cellBalancing@voltages:	
  5880                           
  5881                           ; 1 bytes @ 0x3F
  5882  00DF                     	ds	2
  5883  00E1                     startUp@highestTemp:	
  5884                           
  5885                           ; 1 bytes @ 0x41
  5886  00E1                     	ds	1
  5887  00E2                     startUp@i:	
  5888                           
  5889                           ; 2 bytes @ 0x42
  5890  00E2                     	ds	1
  5891  00E3                     ?_clearScreen:	
  5892  00E3                     ?_writeVoltages:	
  5893                           ; 1 bytes @ 0x43
  5894                           
  5895  00E3                     ?_writeTemps:	
  5896                           ; 1 bytes @ 0x43
  5897                           
  5898  00E3                     ?_writeCurrent:	
  5899                           ; 1 bytes @ 0x43
  5900                           
  5901  00E3                     ?_writeSOC:	
  5902                           ; 1 bytes @ 0x43
  5903                           
  5904  00E3                     writeVoltages@length:	
  5905                           ; 1 bytes @ 0x43
  5906                           
  5907  00E3                     writeTemps@highestTemp:	
  5908                           ; 2 bytes @ 0x43
  5909                           
  5910  00E3                     clearScreen@numLines:	
  5911                           ; 2 bytes @ 0x43
  5912                           
  5913  00E3                     writeSOC@soc:	
  5914                           ; 2 bytes @ 0x43
  5915                           
  5916  00E3                     writeCurrent@current:	
  5917                           ; 4 bytes @ 0x43
  5918                           
  5919                           
  5920                           ; 4 bytes @ 0x43
  5921  00E3                     	ds	1
  5922  00E4                     startUp@i_404:	
  5923                           
  5924                           ; 2 bytes @ 0x44
  5925  00E4                     	ds	1
  5926  00E5                     ??_clearScreen:	
  5927  00E5                     writeTemps@numTemps:	
  5928                           ; 1 bytes @ 0x45
  5929                           
  5930  00E5                     writeVoltages@totalVoltage:	
  5931                           ; 2 bytes @ 0x45
  5932                           
  5933                           
  5934                           ; 4 bytes @ 0x45
  5935  00E5                     	ds	2
  5936  00E7                     writeSOC@index:	
  5937  00E7                     writeCurrent@index:	
  5938                           ; 1 bytes @ 0x47
  5939                           
  5940  00E7                     writeTemps@index:	
  5941                           ; 1 bytes @ 0x47
  5942                           
  5943                           
  5944                           ; 1 bytes @ 0x47
  5945  00E7                     	ds	1
  5946  00E8                     ??_writeTemps:	
  5947  00E8                     ??_writeCurrent:	
  5948                           ; 1 bytes @ 0x48
  5949                           
  5950  00E8                     ??_writeSOC:	
  5951                           ; 1 bytes @ 0x48
  5952                           
  5953  00E8                     clearScreen@j:	
  5954                           ; 1 bytes @ 0x48
  5955                           
  5956                           
  5957                           ; 2 bytes @ 0x48
  5958  00E8                     	ds	1
  5959  00E9                     writeVoltages@balanceEn:	
  5960                           
  5961                           ; 1 bytes @ 0x49
  5962  00E9                     	ds	1
  5963  00EA                     writeVoltages@index:	
  5964  00EA                     _writeSOC$2205:	
  5965                           ; 1 bytes @ 0x4A
  5966                           
  5967                           
  5968                           ; 4 bytes @ 0x4A
  5969  00EA                     	ds	1
  5970  00EB                     ??_writeVoltages:	
  5971  00EB                     writeTemps@temps:	
  5972                           ; 1 bytes @ 0x4B
  5973                           
  5974                           
  5975                           ; 1 bytes @ 0x4B
  5976  00EB                     	ds	1
  5977  00EC                     writeTemps@k:	
  5978                           
  5979                           ; 2 bytes @ 0x4C
  5980  00EC                     	ds	3
  5981                           
  5982                           	psect	cstackCOMMON
  5983  0070                     __pcstackCOMMON:	
  5984  0070                     ?_isdigit:	
  5985  0070                     ?_setup:	
  5986                           ; 1 bit 
  5987                           
  5988  0070                     ?_uartDisable:	
  5989                           ; 1 bytes @ 0x0
  5990                           
  5991  0070                     ??_uartDisable:	
  5992                           ; 1 bytes @ 0x0
  5993                           
  5994  0070                     ?_timerSetup:	
  5995                           ; 1 bytes @ 0x0
  5996                           
  5997  0070                     ?_adcSetup:	
  5998                           ; 1 bytes @ 0x0
  5999                           
  6000  0070                     ?_uartSetup:	
  6001                           ; 1 bytes @ 0x0
  6002                           
  6003  0070                     ?_i2cSetup:	
  6004                           ; 1 bytes @ 0x0
  6005                           
  6006  0070                     ?_spiSetup:	
  6007                           ; 1 bytes @ 0x0
  6008                           
  6009  0070                     ?_LTC6804_initialize:	
  6010                           ; 1 bytes @ 0x0
  6011                           
  6012  0070                     ?_uartEnable:	
  6013                           ; 1 bytes @ 0x0
  6014                           
  6015  0070                     ?_timer0Setup:	
  6016                           ; 1 bytes @ 0x0
  6017                           
  6018  0070                     ?_timer2Setup:	
  6019                           ; 1 bytes @ 0x0
  6020                           
  6021  0070                     ?_LTC6804_adcv:	
  6022                           ; 1 bytes @ 0x0
  6023                           
  6024  0070                     ?_wakeup_idle:	
  6025                           ; 1 bytes @ 0x0
  6026                           
  6027  0070                     ?_spi_write:	
  6028                           ; 1 bytes @ 0x0
  6029                           
  6030  0070                     ?_spi_read:	
  6031                           ; 1 bytes @ 0x0
  6032                           
  6033  0070                     ?_main:	
  6034                           ; 1 bytes @ 0x0
  6035                           
  6036  0070                     ?_ISR:	
  6037                           ; 1 bytes @ 0x0
  6038                           
  6039  0070                     ??_ISR:	
  6040                           ; 1 bytes @ 0x0
  6041                           
  6042                           
  6043                           ; 1 bytes @ 0x0
  6044  0070                     	ds	3
  6045  0073                     ??_timerSetup:	
  6046  0073                     ??_adcSetup:	
  6047                           ; 1 bytes @ 0x3
  6048                           
  6049  0073                     ??_uartSetup:	
  6050                           ; 1 bytes @ 0x3
  6051                           
  6052  0073                     ??_i2cSetup:	
  6053                           ; 1 bytes @ 0x3
  6054                           
  6055  0073                     ??_spiSetup:	
  6056                           ; 1 bytes @ 0x3
  6057                           
  6058  0073                     ??_uartEnable:	
  6059                           ; 1 bytes @ 0x3
  6060                           
  6061  0073                     ??_timer0Setup:	
  6062                           ; 1 bytes @ 0x3
  6063                           
  6064  0073                     ??_timer2Setup:	
  6065                           ; 1 bytes @ 0x3
  6066                           
  6067  0073                     ?_setDischarge:	
  6068                           ; 1 bytes @ 0x3
  6069                           
  6070  0073                     ??_wakeup_idle:	
  6071                           ; 1 bytes @ 0x3
  6072                           
  6073  0073                     ?_set_adc:	
  6074                           ; 1 bytes @ 0x3
  6075                           
  6076  0073                     ??_spi_write:	
  6077                           ; 1 bytes @ 0x3
  6078                           
  6079  0073                     ??_spi_read:	
  6080                           ; 1 bytes @ 0x3
  6081                           
  6082  0073                     ??_isdigit:	
  6083                           ; 1 bytes @ 0x3
  6084                           
  6085  0073                     ??__tdiv_to_l_:	
  6086                           ; 1 bytes @ 0x3
  6087                           
  6088  0073                     ??__div_to_l_:	
  6089                           ; 1 bytes @ 0x3
  6090                           
  6091  0073                     ?___bmul:	
  6092                           ; 1 bytes @ 0x3
  6093                           
  6094  0073                     ??___lldiv:	
  6095                           ; 1 bytes @ 0x3
  6096                           
  6097  0073                     ?_adcRead:	
  6098                           ; 1 bytes @ 0x3
  6099                           
  6100  0073                     ?__Umul8_16:	
  6101                           ; 2 bytes @ 0x3
  6102                           
  6103  0073                     ?___wmul:	
  6104                           ; 2 bytes @ 0x3
  6105                           
  6106  0073                     ?___awmod:	
  6107                           ; 2 bytes @ 0x3
  6108                           
  6109  0073                     set_adc@DCP:	
  6110                           ; 2 bytes @ 0x3
  6111                           
  6112  0073                     ___bmul@multiplicand:	
  6113                           ; 1 bytes @ 0x3
  6114                           
  6115  0073                     _isdigit$1808:	
  6116                           ; 1 bytes @ 0x3
  6117                           
  6118  0073                     __Umul8_16@multiplicand:	
  6119                           ; 1 bytes @ 0x3
  6120                           
  6121  0073                     setDischarge@index:	
  6122                           ; 1 bytes @ 0x3
  6123                           
  6124  0073                     ___wmul@multiplier:	
  6125                           ; 2 bytes @ 0x3
  6126                           
  6127  0073                     ___awmod@divisor:	
  6128                           ; 2 bytes @ 0x3
  6129                           
  6130                           
  6131                           ; 2 bytes @ 0x3
  6132  0073                     	ds	1
  6133  0074                     ??___bmul:	
  6134  0074                     ??___llmod:	
  6135                           ; 1 bytes @ 0x4
  6136                           
  6137  0074                     set_adc@CH:	
  6138                           ; 1 bytes @ 0x4
  6139                           
  6140  0074                     spi_write@readData:	
  6141                           ; 1 bytes @ 0x4
  6142                           
  6143  0074                     spi_read@data:	
  6144                           ; 1 bytes @ 0x4
  6145                           
  6146  0074                     isdigit@c:	
  6147                           ; 1 bytes @ 0x4
  6148                           
  6149                           
  6150                           ; 1 bytes @ 0x4
  6151  0074                     	ds	1
  6152  0075                     ??__Umul8_16:	
  6153  0075                     setDischarge@boolean:	
  6154                           ; 1 bytes @ 0x5
  6155                           
  6156  0075                     set_adc@CHG:	
  6157                           ; 1 bytes @ 0x5
  6158                           
  6159  0075                     spi_write@data:	
  6160                           ; 1 bytes @ 0x5
  6161                           
  6162  0075                     spi_read@readData:	
  6163                           ; 1 bytes @ 0x5
  6164                           
  6165  0075                     ___bmul@product:	
  6166                           ; 1 bytes @ 0x5
  6167                           
  6168  0075                     ___llmod@counter:	
  6169                           ; 1 bytes @ 0x5
  6170                           
  6171  0075                     ___wmul@multiplicand:	
  6172                           ; 1 bytes @ 0x5
  6173                           
  6174  0075                     ___awmod@dividend:	
  6175                           ; 2 bytes @ 0x5
  6176                           
  6177                           
  6178                           ; 2 bytes @ 0x5
  6179  0075                     	ds	1
  6180  0076                     ?_spi_write_array:	
  6181  0076                     ??_set_adc:	
  6182                           ; 1 bytes @ 0x6
  6183                           
  6184  0076                     setDischarge@balanceEn:	
  6185                           ; 1 bytes @ 0x6
  6186                           
  6187  0076                     spi_write_array@data:	
  6188                           ; 1 bytes @ 0x6
  6189                           
  6190  0076                     ___bmul@multiplier:	
  6191                           ; 1 bytes @ 0x6
  6192                           
  6193                           
  6194                           ; 1 bytes @ 0x6
  6195  0076                     	ds	1
  6196  0077                     ??_setDischarge:	
  6197  0077                     ??_spi_write_array:	
  6198                           ; 1 bytes @ 0x7
  6199                           
  6200  0077                     ??___wmul:	
  6201                           ; 1 bytes @ 0x7
  6202                           
  6203  0077                     ??___awmod:	
  6204                           ; 1 bytes @ 0x7
  6205                           
  6206                           
  6207                           ; 1 bytes @ 0x7
  6208  0077                     	ds	1
  6209  0078                     ??_setup:	
  6210  0078                     ??_getCurrent:	
  6211                           ; 1 bytes @ 0x8
  6212                           
  6213  0078                     ??_calculateCurrent:	
  6214                           ; 1 bytes @ 0x8
  6215                           
  6216  0078                     ??___flneg:	
  6217                           ; 1 bytes @ 0x8
  6218                           
  6219  0078                     ??___flsub:	
  6220                           ; 1 bytes @ 0x8
  6221                           
  6222                           
  6223                           	psect	cstackBANK0
  6224  0020                     __pcstackBANK0:	
  6225                           ; 1 bytes @ 0x8
  6226                           
  6227  0020                     ??_adcRead:	
  6228  0020                     ?_spi_write_read:	
  6229                           ; 1 bytes @ 0x0
  6230                           
  6231  0020                     ?_pec15_calc:	
  6232                           ; 1 bytes @ 0x0
  6233                           
  6234  0020                     ?__tdiv_to_l_:	
  6235                           ; 2 bytes @ 0x0
  6236                           
  6237  0020                     ?__div_to_l_:	
  6238                           ; 4 bytes @ 0x0
  6239                           
  6240  0020                     ?___lldiv:	
  6241                           ; 4 bytes @ 0x0
  6242                           
  6243  0020                     set_adc@MD:	
  6244                           ; 4 bytes @ 0x0
  6245                           
  6246  0020                     spi_write_array@len:	
  6247                           ; 1 bytes @ 0x0
  6248                           
  6249  0020                     spi_write_read@tx_len:	
  6250                           ; 1 bytes @ 0x0
  6251                           
  6252  0020                     ___awmod@counter:	
  6253                           ; 1 bytes @ 0x0
  6254                           
  6255  0020                     pec15_calc@data:	
  6256                           ; 1 bytes @ 0x0
  6257                           
  6258  0020                     ___wmul@product:	
  6259                           ; 2 bytes @ 0x0
  6260                           
  6261  0020                     __Umul8_16@product:	
  6262                           ; 2 bytes @ 0x0
  6263                           
  6264  0020                     __div_to_l_@f1:	
  6265                           ; 2 bytes @ 0x0
  6266                           
  6267  0020                     __tdiv_to_l_@f1:	
  6268                           ; 4 bytes @ 0x0
  6269                           
  6270  0020                     ___lldiv@divisor:	
  6271                           ; 4 bytes @ 0x0
  6272                           
  6273                           
  6274                           ; 4 bytes @ 0x0
  6275  0020                     	ds	1
  6276  0021                     set_adc@md_bits:	
  6277  0021                     spi_write_array@i:	
  6278                           ; 1 bytes @ 0x1
  6279                           
  6280  0021                     spi_write_read@rx_data:	
  6281                           ; 1 bytes @ 0x1
  6282                           
  6283  0021                     ___awmod@sign:	
  6284                           ; 1 bytes @ 0x1
  6285                           
  6286                           
  6287                           ; 1 bytes @ 0x1
  6288  0021                     	ds	1
  6289  0022                     ??_pec15_calc:	
  6290  0022                     ?___awdiv:	
  6291                           ; 1 bytes @ 0x2
  6292                           
  6293  0022                     spi_write_read@rx_len:	
  6294                           ; 2 bytes @ 0x2
  6295                           
  6296  0022                     ___awdiv@divisor:	
  6297                           ; 1 bytes @ 0x2
  6298                           
  6299  0022                     __Umul8_16@word_mpld:	
  6300                           ; 2 bytes @ 0x2
  6301                           
  6302                           
  6303                           ; 2 bytes @ 0x2
  6304  0022                     	ds	1
  6305  0023                     ??_spi_write_read:	
  6306                           
  6307                           ; 1 bytes @ 0x3
  6308  0023                     	ds	1
  6309  0024                     __Umul8_16@multiplier:	
  6310  0024                     ___awdiv@dividend:	
  6311                           ; 1 bytes @ 0x4
  6312                           
  6313  0024                     __div_to_l_@f2:	
  6314                           ; 2 bytes @ 0x4
  6315                           
  6316  0024                     __tdiv_to_l_@f2:	
  6317                           ; 4 bytes @ 0x4
  6318                           
  6319  0024                     ___lldiv@dividend:	
  6320                           ; 4 bytes @ 0x4
  6321                           
  6322                           
  6323                           ; 4 bytes @ 0x4
  6324  0024                     	ds	1
  6325  0025                     spi_write_read@i:	
  6326                           
  6327                           ; 1 bytes @ 0x5
  6328  0025                     	ds	1
  6329  0026                     ??___awdiv:	
  6330  0026                     spi_write_read@i_1461:	
  6331                           ; 1 bytes @ 0x6
  6332                           
  6333                           
  6334                           ; 1 bytes @ 0x6
  6335  0026                     	ds	1
  6336  0027                     spi_write_read@tx_Data:	
  6337  0027                     ___awdiv@counter:	
  6338                           ; 1 bytes @ 0x7
  6339                           
  6340  0027                     adcRead@ansHigh:	
  6341                           ; 1 bytes @ 0x7
  6342                           
  6343                           
  6344                           ; 2 bytes @ 0x7
  6345  0027                     	ds	1
  6346  0028                     ___awdiv@sign:	
  6347  0028                     __div_to_l_@quot:	
  6348                           ; 1 bytes @ 0x8
  6349                           
  6350  0028                     __tdiv_to_l_@quot:	
  6351                           ; 4 bytes @ 0x8
  6352                           
  6353  0028                     ___lldiv@quotient:	
  6354                           ; 4 bytes @ 0x8
  6355                           
  6356                           
  6357                           ; 4 bytes @ 0x8
  6358  0028                     	ds	1
  6359  0029                     adcRead@ansLow:	
  6360  0029                     ___awdiv@quotient:	
  6361                           ; 2 bytes @ 0x9
  6362                           
  6363                           
  6364                           ; 2 bytes @ 0x9
  6365  0029                     	ds	2
  6366  002B                     pec15_calc@len:	
  6367  002B                     adcRead@total:	
  6368                           ; 1 bytes @ 0xB
  6369                           
  6370                           
  6371                           ; 2 bytes @ 0xB
  6372  002B                     	ds	1
  6373  002C                     __div_to_l_@cntr:	
  6374  002C                     __tdiv_to_l_@cntr:	
  6375                           ; 1 bytes @ 0xC
  6376                           
  6377  002C                     ___lldiv@counter:	
  6378                           ; 1 bytes @ 0xC
  6379                           
  6380  002C                     pec15_calc@addr:	
  6381                           ; 1 bytes @ 0xC
  6382                           
  6383                           
  6384                           ; 2 bytes @ 0xC
  6385  002C                     	ds	1
  6386  002D                     ?___llmod:	
  6387  002D                     adcRead@ch:	
  6388                           ; 4 bytes @ 0xD
  6389                           
  6390  002D                     __div_to_l_@exp1:	
  6391                           ; 1 bytes @ 0xD
  6392                           
  6393  002D                     __tdiv_to_l_@exp1:	
  6394                           ; 1 bytes @ 0xD
  6395                           
  6396  002D                     ___llmod@divisor:	
  6397                           ; 1 bytes @ 0xD
  6398                           
  6399                           
  6400                           ; 4 bytes @ 0xD
  6401  002D                     	ds	1
  6402  002E                     ?___xxtofl:	
  6403  002E                     pec15_calc@i:	
  6404                           ; 4 bytes @ 0xE
  6405                           
  6406  002E                     ___xxtofl@val:	
  6407                           ; 1 bytes @ 0xE
  6408                           
  6409                           
  6410                           ; 4 bytes @ 0xE
  6411  002E                     	ds	1
  6412  002F                     pec15_calc@remainder:	
  6413                           
  6414                           ; 2 bytes @ 0xF
  6415  002F                     	ds	2
  6416  0031                     ??_LTC6804_adcv:	
  6417  0031                     ?_LTC6804_wrcfg:	
  6418                           ; 1 bytes @ 0x11
  6419                           
  6420  0031                     ?_LTC6804_rdcv_reg:	
  6421                           ; 1 bytes @ 0x11
  6422                           
  6423  0031                     LTC6804_rdcv_reg@total_ic:	
  6424                           ; 1 bytes @ 0x11
  6425                           
  6426  0031                     LTC6804_wrcfg@config:	
  6427                           ; 1 bytes @ 0x11
  6428                           
  6429  0031                     ___llmod@dividend:	
  6430                           ; 1 bytes @ 0x11
  6431                           
  6432                           
  6433                           ; 4 bytes @ 0x11
  6434  0031                     	ds	1
  6435  0032                     ??_LTC6804_wrcfg:	
  6436  0032                     ??___xxtofl:	
  6437                           ; 1 bytes @ 0x12
  6438                           
  6439  0032                     LTC6804_rdcv_reg@data:	
  6440                           ; 1 bytes @ 0x12
  6441                           
  6442  0032                     LTC6804_adcv@cmd:	
  6443                           ; 1 bytes @ 0x12
  6444                           
  6445                           
  6446                           ; 4 bytes @ 0x12
  6447  0032                     	ds	1
  6448  0033                     ??_LTC6804_rdcv_reg:	
  6449                           
  6450                           ; 1 bytes @ 0x13
  6451  0033                     	ds	3
  6452  0036                     ___xxtofl@sign:	
  6453  0036                     LTC6804_adcv@cmd_pec:	
  6454                           ; 1 bytes @ 0x16
  6455                           
  6456  0036                     LTC6804_wrcfg@cmd:	
  6457                           ; 2 bytes @ 0x16
  6458                           
  6459                           
  6460                           ; 12 bytes @ 0x16
  6461  0036                     	ds	1
  6462  0037                     ___xxtofl@exp:	
  6463  0037                     LTC6804_rdcv_reg@cmd_pec:	
  6464                           ; 1 bytes @ 0x17
  6465                           
  6466                           
  6467                           ; 2 bytes @ 0x17
  6468  0037                     	ds	1
  6469  0038                     ___xxtofl@arg:	
  6470                           
  6471                           ; 4 bytes @ 0x18
  6472  0038                     	ds	1
  6473  0039                     LTC6804_rdcv_reg@cmd:	
  6474                           
  6475                           ; 4 bytes @ 0x19
  6476  0039                     	ds	3
  6477  003C                     ?___flmul:	
  6478  003C                     ___flmul@b:	
  6479                           ; 4 bytes @ 0x1C
  6480                           
  6481                           
  6482                           ; 4 bytes @ 0x1C
  6483  003C                     	ds	1
  6484  003D                     LTC6804_rdcv_reg@reg:	
  6485                           
  6486                           ; 1 bytes @ 0x1D
  6487  003D                     	ds	1
  6488  003E                     ?_LTC6804_rdcv:	
  6489  003E                     LTC6804_rdcv@total_ic:	
  6490                           ; 1 bytes @ 0x1E
  6491                           
  6492                           
  6493                           ; 1 bytes @ 0x1E
  6494  003E                     	ds	1
  6495  003F                     LTC6804_rdcv@cell_codes:	
  6496                           
  6497                           ; 1 bytes @ 0x1F
  6498  003F                     	ds	1
  6499  0040                     ??_LTC6804_rdcv:	
  6500  0040                     ___flmul@a:	
  6501                           ; 1 bytes @ 0x20
  6502                           
  6503                           
  6504                           ; 4 bytes @ 0x20
  6505  0040                     	ds	2
  6506  0042                     LTC6804_wrcfg@CMD_LEN:	
  6507                           
  6508                           ; 1 bytes @ 0x22
  6509  0042                     	ds	1
  6510  0043                     LTC6804_wrcfg@total_ic:	
  6511                           
  6512                           ; 1 bytes @ 0x23
  6513  0043                     	ds	1
  6514  0044                     ??___flmul:	
  6515  0044                     LTC6804_wrcfg@cfg_pec:	
  6516                           ; 1 bytes @ 0x24
  6517                           
  6518                           
  6519                           ; 2 bytes @ 0x24
  6520  0044                     	ds	1
  6521  0045                     LTC6804_rdcv@cell_data:	
  6522                           
  6523                           ; 8 bytes @ 0x25
  6524  0045                     	ds	1
  6525  0046                     LTC6804_wrcfg@current_byte:	
  6526                           
  6527                           ; 1 bytes @ 0x26
  6528  0046                     	ds	1
  6529  0047                     LTC6804_wrcfg@current_ic:	
  6530                           
  6531                           ; 1 bytes @ 0x27
  6532  0047                     	ds	1
  6533  0048                     LTC6804_wrcfg@cmd_index:	
  6534                           
  6535                           ; 1 bytes @ 0x28
  6536  0048                     	ds	1
  6537  0049                     ??_LTC6804_initialize:	
  6538  0049                     ___flmul@sign:	
  6539                           ; 1 bytes @ 0x29
  6540                           
  6541                           
  6542                           ; 1 bytes @ 0x29
  6543  0049                     	ds	1
  6544  004A                     ___flmul@grs:	
  6545                           
  6546                           ; 4 bytes @ 0x2A
  6547  004A                     	ds	3
  6548  004D                     LTC6804_rdcv@pec_error:	
  6549                           
  6550                           ; 1 bytes @ 0x2D
  6551  004D                     	ds	1
  6552  004E                     ___flmul@aexp:	
  6553  004E                     LTC6804_rdcv@parsed_cell:	
  6554                           ; 1 bytes @ 0x2E
  6555                           
  6556                           
  6557                           ; 2 bytes @ 0x2E
  6558  004E                     	ds	1
  6559  004F                     ___flmul@bexp:	
  6560                           
  6561                           ; 1 bytes @ 0x2F
  6562  004F                     	ds	1
  6563  0050                     LTC6804_rdcv@received_pec:	
  6564  0050                     ___flmul@prod:	
  6565                           ; 2 bytes @ 0x30
  6566                           
  6567                           
  6568                           ; 4 bytes @ 0x30
  6569  0050                     	ds	2
  6570  0052                     LTC6804_rdcv@data_pec:	
  6571                           
  6572                           ; 2 bytes @ 0x32
  6573  0052                     	ds	2
  6574  0054                     LTC6804_rdcv@reg:	
  6575  0054                     ___flmul@temp:	
  6576                           ; 1 bytes @ 0x34
  6577                           
  6578                           
  6579                           ; 2 bytes @ 0x34
  6580  0054                     	ds	1
  6581  0055                     LTC6804_rdcv@current_ic:	
  6582                           
  6583                           ; 1 bytes @ 0x35
  6584  0055                     	ds	1
  6585  0056                     ?_fround:	
  6586  0056                     ?_scale:	
  6587                           ; 4 bytes @ 0x36
  6588                           
  6589  0056                     ?___fldiv:	
  6590                           ; 4 bytes @ 0x36
  6591                           
  6592  0056                     LTC6804_rdcv@current_cell:	
  6593                           ; 4 bytes @ 0x36
  6594                           
  6595  0056                     ___fldiv@a:	
  6596                           ; 1 bytes @ 0x36
  6597                           
  6598                           
  6599                           ; 4 bytes @ 0x36
  6600  0056                     	ds	1
  6601  0057                     LTC6804_rdcv@current_ic_1379:	
  6602                           
  6603                           ; 1 bytes @ 0x37
  6604  0057                     	ds	1
  6605  0058                     LTC6804_rdcv@current_cell_1380:	
  6606                           
  6607                           ; 1 bytes @ 0x38
  6608  0058                     	ds	1
  6609  0059                     LTC6804_rdcv@cell_reg:	
  6610                           
  6611                           ; 1 bytes @ 0x39
  6612  0059                     	ds	1
  6613  005A                     ??_fround:	
  6614  005A                     ??_scale:	
  6615                           ; 1 bytes @ 0x3A
  6616                           
  6617  005A                     LTC6804_rdcv@data_counter:	
  6618                           ; 1 bytes @ 0x3A
  6619                           
  6620  005A                     ___fldiv@b:	
  6621                           ; 1 bytes @ 0x3A
  6622                           
  6623                           
  6624                           ; 4 bytes @ 0x3A
  6625  005A                     	ds	4
  6626  005E                     ??___fldiv:	
  6627                           
  6628                           ; 1 bytes @ 0x3E
  6629  005E                     	ds	5
  6630  0063                     ___fldiv@sign:	
  6631                           
  6632                           ; 1 bytes @ 0x43
  6633  0063                     	ds	1
  6634  0064                     ___fldiv@rem:	
  6635                           
  6636                           ; 4 bytes @ 0x44
  6637  0064                     	ds	4
  6638  0068                     ___fldiv@new_exp:	
  6639                           
  6640                           ; 2 bytes @ 0x48
  6641  0068                     	ds	2
  6642  006A                     ___fldiv@grs:	
  6643  006A                     _scale$2209:	
  6644                           ; 4 bytes @ 0x4A
  6645                           
  6646                           
  6647                           ; 4 bytes @ 0x4A
  6648  006A                     	ds	4
  6649  006E                     scale@scl:	
  6650  006E                     ___fldiv@bexp:	
  6651                           ; 1 bytes @ 0x4E
  6652                           
  6653                           
  6654                           ; 1 bytes @ 0x4E
  6655  006E                     	ds	1
  6656  006F                     ___fldiv@aexp:	
  6657                           
  6658                           ; 1 bytes @ 0x4F
  6659  006F                     	ds	1
  6660                           
  6661                           	psect	maintext
  6662  0D6A                     __pmaintext:	
  6663 ;;
  6664 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  6665 ;;
  6666 ;; *************** function _main *****************
  6667 ;; Defined at:
  6668 ;;		line 43 in file "main.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;		None
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;  i               2   78[BANK4 ] int 
  6673 ;;  currentBuff    80    0[BANK3 ] float [20]
  6674 ;;  voltages       48    0[BANK4 ] float [12]
  6675 ;;  balanceEn      24   48[BANK4 ] int [12]
  6676 ;;  temps          10    0[BANK5 ] int [5]
  6677 ;;  current         4   14[BANK5 ] float 
  6678 ;;  totalVoltage    4   10[BANK5 ] float 
  6679 ;;  soc             4   74[BANK4 ] float 
  6680 ;;  currentIndex    2   72[BANK4 ] int 
  6681 ;;  highestTemp     2   78[BANK2 ] int 
  6682 ;;  numFaults       2   76[BANK2 ] int 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      void 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : B1F/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;      Locals:         0       0       0       8      80      80      18       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6694 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Totals:         0       0       0      14      80      80      18       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;Total ram usage:      192 bytes
  6697 ;; Hardware stack levels required when called:    8
  6698 ;; This function calls:
  6699 ;;		___fladd
  6700 ;;		___fldiv
  6701 ;;		___flge
  6702 ;;		___flmul
  6703 ;;		___flneg
  6704 ;;		___xxtofl
  6705 ;;		_avgBuff
  6706 ;;		_cellBalancing
  6707 ;;		_getCurrent
  6708 ;;		_getTemps
  6709 ;;		_measureVoltages
  6710 ;;		_setup
  6711 ;;		_startUp
  6712 ;;		_writeValuesToUart
  6713 ;; This function is called by:
  6714 ;;		Startup code after reset
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           
  6719                           ;psect for function _main
  6720  0D6A                     _main:	
  6721                           
  6722                           ;main.c: 44: int balanceEn[12];
  6723                           ;main.c: 46: float voltages[12];
  6724                           ;main.c: 47: float totalVoltage;
  6725                           ;main.c: 49: int currentIndex = 0;
  6726                           
  6727                           ;incstack = 0
  6728                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6729  0D6A  0024               	movlb	4	; select bank4
  6730  0D6B  01E8               	clrf	main@currentIndex^(0+512)
  6731  0D6C  01E9               	clrf	(main@currentIndex+1)^(0+512)
  6732                           
  6733                           ;main.c: 50: float currentBuff[20];
  6734                           ;main.c: 51: float current = 0;
  6735  0D6D  3000               	movlw	0
  6736  0D6E  0025               	movlb	5	; select bank5
  6737  0D6F  00DA               	movwf	(main@current+3)^(0+640)
  6738  0D70  3000               	movlw	0
  6739  0D71  00D9               	movwf	(main@current+2)^(0+640)
  6740  0D72  3000               	movlw	0
  6741  0D73  00D8               	movwf	(main@current+1)^(0+640)
  6742  0D74  3000               	movlw	0
  6743  0D75  00D7               	movwf	main@current^(0+640)
  6744                           
  6745                           ;main.c: 53: int temps[5] = {20, 20, 20, 20, 20};
  6746  0D76  30A0               	movlw	low main@F7728
  6747  0D77  0086               	movwf	6
  6748  0D78  3002               	movlw	high main@F7728
  6749  0D79  0087               	movwf	7
  6750  0D7A  30C9               	movlw	low main@temps
  6751  0D7B  0084               	movwf	4
  6752  0D7C  3002               	movlw	high main@temps
  6753  0D7D  0085               	movwf	5
  6754  0D7E  300A               	movlw	10
  6755  0D7F  0022               	movlb	2	; select bank2
  6756  0D80  00E2               	movwf	??_main^(0+256)
  6757  0D81                     u10660:	
  6758  0D81  0016               	moviw fsr1++
  6759  0D82  001A               	movwi fsr0++
  6760  0D83  0BE2               	decfsz	??_main^(0+256),f
  6761  0D84  2D81               	goto	u10660
  6762                           
  6763                           ;main.c: 54: int highestTemp;
  6764                           ;main.c: 56: int numFaults = 0;
  6765  0D85  01EC               	clrf	main@numFaults^(0+256)
  6766  0D86  01ED               	clrf	(main@numFaults+1)^(0+256)
  6767                           
  6768                           ;main.c: 57: float soc = 0;
  6769  0D87  3000               	movlw	0
  6770  0D88  0024               	movlb	4	; select bank4
  6771  0D89  00ED               	movwf	(main@soc+3)^(0+512)
  6772  0D8A  3000               	movlw	0
  6773  0D8B  00EC               	movwf	(main@soc+2)^(0+512)
  6774  0D8C  3000               	movlw	0
  6775  0D8D  00EB               	movwf	(main@soc+1)^(0+512)
  6776  0D8E  3000               	movlw	0
  6777  0D8F  00EA               	movwf	main@soc^(0+512)
  6778                           
  6779                           ;main.c: 59: const unsigned int total_capacity = 12*3600;
  6780                           ;main.c: 60: setup();
  6781  0D90  31A8  2000  318D   	fcall	_setup
  6782                           
  6783                           ;main.c: 62: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6784  0D93  3029               	movlw	41
  6785  0D94  0022               	movlb	2	; select bank2
  6786  0D95  00E3               	movwf	(??_main^(0+256)+1)
  6787  0D96  3096               	movlw	150
  6788  0D97  00E2               	movwf	??_main^(0+256)
  6789  0D98  307F               	movlw	127
  6790  0D99                     u11007:	
  6791  0D99  0B89               	decfsz	9,f
  6792  0D9A  2D99               	goto	u11007
  6793  0D9B  0BE2               	decfsz	??_main^(0+256),f
  6794  0D9C  2D99               	goto	u11007
  6795  0D9D  0BE3               	decfsz	(??_main^(0+256)+1),f
  6796  0D9E  2D99               	goto	u11007
  6797                           
  6798                           ;main.c: 66: LATDbits.LATD5 = startUp(&highestTemp, temps, voltages, &totalVoltage, &cur
      +                          rent, &soc);
  6799  0D9F  30C9               	movlw	(low (main@temps| (0+512)))& (0+255)
  6800  0DA0  0022               	movlb	2	; select bank2
  6801  0DA1  00E2               	movwf	??_main^(0+256)
  6802  0DA2  0862               	movf	??_main^(0+256),w
  6803  0DA3  0021               	movlb	1	; select bank1
  6804  0DA4  00D8               	movwf	startUp@temps^(0+128)
  6805  0DA5  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6806  0DA6  0022               	movlb	2	; select bank2
  6807  0DA7  00E3               	movwf	(??_main+1)^(0+256)
  6808  0DA8  0863               	movf	(??_main+1)^(0+256),w
  6809  0DA9  0021               	movlb	1	; select bank1
  6810  0DAA  00D9               	movwf	startUp@voltages^(0+128)
  6811  0DAB  30D3               	movlw	(low (main@totalVoltage| (0+512)))& (0+255)
  6812  0DAC  0022               	movlb	2	; select bank2
  6813  0DAD  00E4               	movwf	(??_main+2)^(0+256)
  6814  0DAE  0864               	movf	(??_main+2)^(0+256),w
  6815  0DAF  0021               	movlb	1	; select bank1
  6816  0DB0  00DA               	movwf	startUp@totalVoltage^(0+128)
  6817  0DB1  30D7               	movlw	(low (main@current| (0+512)))& (0+255)
  6818  0DB2  0022               	movlb	2	; select bank2
  6819  0DB3  00E5               	movwf	(??_main+3)^(0+256)
  6820  0DB4  0865               	movf	(??_main+3)^(0+256),w
  6821  0DB5  0021               	movlb	1	; select bank1
  6822  0DB6  00DB               	movwf	startUp@current^(0+128)
  6823  0DB7  306A               	movlw	(low (main@soc| (0+512)))& (0+255)
  6824  0DB8  0022               	movlb	2	; select bank2
  6825  0DB9  00E6               	movwf	(??_main+4)^(0+256)
  6826  0DBA  0866               	movf	(??_main+4)^(0+256),w
  6827  0DBB  0021               	movlb	1	; select bank1
  6828  0DBC  00DC               	movwf	startUp@soc^(0+128)
  6829  0DBD  306E               	movlw	(low (main@highestTemp| (0+256)))& (0+255)
  6830  0DBE  31A4  24F5  318D   	fcall	_startUp
  6831  0DC1  0021               	movlb	1	; select bank1
  6832  0DC2  0858               	movf	?_startUp^(0+128),w
  6833  0DC3  0022               	movlb	2	; select bank2
  6834  0DC4  00E7               	movwf	(??_main+5)^(0+256)
  6835  0DC5  0EE7               	swapf	(??_main+5)^(0+256),f
  6836  0DC6  0DE7               	rlf	(??_main+5)^(0+256),f
  6837  0DC7  080F               	movf	15,w	;volatile
  6838  0DC8  0667               	xorwf	(??_main+5)^(0+256),w
  6839  0DC9  39DF               	andlw	-33
  6840  0DCA  0667               	xorwf	(??_main+5)^(0+256),w
  6841  0DCB  008F               	movwf	15	;volatile
  6842                           
  6843                           ;main.c: 67: LATDbits.LATD5 = 1;
  6844  0DCC  168F               	bsf	15,5	;volatile
  6845  0DCD                     l8052:	
  6846                           ;main.c: 77: while(1){
  6847                           
  6848                           
  6849                           ;main.c: 81: LATAbits.LATA5 ^= 1;
  6850  0DCD  0022               	movlb	2	; select bank2
  6851  0DCE  0E0C               	swapf	12,w	;volatile
  6852  0DCF  00E2               	movwf	??_main^(0+256)
  6853  0DD0  0C62               	rrf	??_main^(0+256),w
  6854  0DD1  3901               	andlw	1
  6855  0DD2  00E2               	movwf	??_main^(0+256)
  6856  0DD3  3001               	movlw	1
  6857  0DD4  06E2               	xorwf	??_main^(0+256),f
  6858  0DD5  0EE2               	swapf	??_main^(0+256),f
  6859  0DD6  0DE2               	rlf	??_main^(0+256),f
  6860  0DD7  080C               	movf	12,w	;volatile
  6861  0DD8  0662               	xorwf	??_main^(0+256),w
  6862  0DD9  39DF               	andlw	-33
  6863  0DDA  0662               	xorwf	??_main^(0+256),w
  6864  0DDB  008C               	movwf	12	;volatile
  6865                           
  6866                           ;main.c: 86: measureVoltages(voltages, &totalVoltage, 12);
  6867  0DDC  30D3               	movlw	(low (main@totalVoltage| (0+512)))& (0+255)
  6868  0DDD  00E2               	movwf	??_main^(0+256)
  6869  0DDE  0862               	movf	??_main^(0+256),w
  6870  0DDF  0021               	movlb	1	; select bank1
  6871  0DE0  00D1               	movwf	measureVoltages@totalVoltage^(0+128)
  6872  0DE1  300C               	movlw	12
  6873  0DE2  00D2               	movwf	measureVoltages@numVoltages^(0+128)
  6874  0DE3  3000               	movlw	0
  6875  0DE4  00D3               	movwf	(measureVoltages@numVoltages^(0+128)+1)
  6876  0DE5  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6877  0DE6  31A2  2296  318D   	fcall	_measureVoltages
  6878                           
  6879                           ;main.c: 88: highestTemp = getTemps(temps, 5);
  6880  0DE9  3005               	movlw	5
  6881  0DEA  0021               	movlb	1	; select bank1
  6882  0DEB  00B3               	movwf	getTemps@numTemps^(0+128)
  6883  0DEC  3000               	movlw	0
  6884  0DED  00B4               	movwf	(getTemps@numTemps^(0+128)+1)
  6885  0DEE  30C9               	movlw	(low (main@temps| (0+512)))& (0+255)
  6886  0DEF  31AB  2310  318D   	fcall	_getTemps
  6887  0DF2  0021               	movlb	1	; select bank1
  6888  0DF3  0834               	movf	(?_getTemps+1)^(0+128),w
  6889  0DF4  0022               	movlb	2	; select bank2
  6890  0DF5  00EF               	movwf	(main@highestTemp+1)^(0+256)
  6891  0DF6  0021               	movlb	1	; select bank1
  6892  0DF7  0833               	movf	?_getTemps^(0+128),w
  6893  0DF8  0022               	movlb	2	; select bank2
  6894  0DF9  00EE               	movwf	main@highestTemp^(0+256)
  6895                           
  6896                           ;main.c: 90: if(currentBool == 1){
  6897  0DFA  0025               	movlb	5	; select bank5
  6898  0DFB  0337               	decf	_currentBool^(0+640),w
  6899  0DFC  0438               	iorwf	(_currentBool+1)^(0+640),w
  6900  0DFD  1D03               	btfss	3,2
  6901  0DFE  2F18               	goto	l8076
  6902                           
  6903                           ;main.c: 91: currentBuff[currentIndex] = getCurrent();
  6904  0DFF  31B7  27C2  318D   	fcall	_getCurrent
  6905  0E02  0024               	movlb	4	; select bank4
  6906  0E03  0868               	movf	main@currentIndex^(0+512),w
  6907  0E04  0022               	movlb	2	; select bank2
  6908  0E05  00E2               	movwf	??_main^(0+256)
  6909  0E06  3001               	movlw	1
  6910  0E07                     u10685:	
  6911  0E07  35E2               	lslf	??_main^(0+256),f
  6912  0E08  3EFF               	addlw	-1
  6913  0E09  1D03               	skipz
  6914  0E0A  2E07               	goto	u10685
  6915  0E0B  3562               	lslf	??_main^(0+256),w
  6916  0E0C  3EA0               	addlw	(low (main@currentBuff| (0+256)))& (0+255)
  6917  0E0D  0086               	movwf	6
  6918  0E0E  3001               	movlw	1	; select bank3/4
  6919  0E0F  0087               	movwf	7
  6920  0E10  0021               	movlb	1	; select bank1
  6921  0E11  084D               	movf	?_getCurrent^(0+128),w
  6922  0E12  3FC0               	movwi [0]fsr1
  6923  0E13  084E               	movf	(?_getCurrent+1)^(0+128),w
  6924  0E14  3FC1               	movwi [1]fsr1
  6925  0E15  084F               	movf	(?_getCurrent+2)^(0+128),w
  6926  0E16  3FC2               	movwi [2]fsr1
  6927  0E17  0850               	movf	(?_getCurrent+3)^(0+128),w
  6928  0E18  3FC3               	movwi [3]fsr1
  6929                           
  6930                           ;main.c: 92: currentIndex ++;
  6931  0E19  3001               	movlw	1
  6932  0E1A  0024               	movlb	4	; select bank4
  6933  0E1B  07E8               	addwf	main@currentIndex^(0+512),f
  6934  0E1C  3000               	movlw	0
  6935  0E1D  3DE9               	addwfc	(main@currentIndex+1)^(0+512),f
  6936                           
  6937                           ;main.c: 93: if(currentIndex >= 20){
  6938  0E1E  0869               	movf	(main@currentIndex+1)^(0+512),w
  6939  0E1F  3A80               	xorlw	128
  6940  0E20  0022               	movlb	2	; select bank2
  6941  0E21  00E2               	movwf	??_main^(0+256)
  6942  0E22  3080               	movlw	128
  6943  0E23  0262               	subwf	??_main^(0+256),w
  6944  0E24  1D03               	skipz
  6945  0E25  2E29               	goto	u10695
  6946  0E26  3014               	movlw	20
  6947  0E27  0024               	movlb	4	; select bank4
  6948  0E28  0268               	subwf	main@currentIndex^(0+512),w
  6949  0E29                     u10695:	
  6950  0E29  1C03               	skipc
  6951  0E2A  2F15               	goto	l8074
  6952                           
  6953                           ;main.c: 94: current = avgBuff(currentBuff, currentIndex);
  6954  0E2B  0024               	movlb	4	; select bank4
  6955  0E2C  0869               	movf	(main@currentIndex+1)^(0+512),w
  6956  0E2D  0021               	movlb	1	; select bank1
  6957  0E2E  00C2               	movwf	(avgBuff@size+1)^(0+128)
  6958  0E2F  0024               	movlb	4	; select bank4
  6959  0E30  0868               	movf	main@currentIndex^(0+512),w
  6960  0E31  0021               	movlb	1	; select bank1
  6961  0E32  00C1               	movwf	avgBuff@size^(0+128)
  6962  0E33  30A0               	movlw	(low (main@currentBuff| (0+256)))& (0+255)
  6963  0E34  31AC  240C  318D   	fcall	_avgBuff
  6964  0E37  0021               	movlb	1	; select bank1
  6965  0E38  0844               	movf	(?_avgBuff+3)^(0+128),w
  6966  0E39  0025               	movlb	5	; select bank5
  6967  0E3A  00DA               	movwf	(main@current+3)^(0+640)
  6968  0E3B  0021               	movlb	1	; select bank1
  6969  0E3C  0843               	movf	(?_avgBuff+2)^(0+128),w
  6970  0E3D  0025               	movlb	5	; select bank5
  6971  0E3E  00D9               	movwf	(main@current+2)^(0+640)
  6972  0E3F  0021               	movlb	1	; select bank1
  6973  0E40  0842               	movf	(?_avgBuff+1)^(0+128),w
  6974  0E41  0025               	movlb	5	; select bank5
  6975  0E42  00D8               	movwf	(main@current+1)^(0+640)
  6976  0E43  0021               	movlb	1	; select bank1
  6977  0E44  0841               	movf	?_avgBuff^(0+128),w
  6978  0E45  0025               	movlb	5	; select bank5
  6979  0E46  00D7               	movwf	main@current^(0+640)
  6980                           
  6981                           ;main.c: 96: soc = ((((soc)*(float)total_capacity) - (current/500))/((float)(total_capac
      +                          ity)));
  6982  0E47  085A               	movf	(main@current+3)^(0+640),w
  6983  0E48  0020               	movlb	0	; select bank0
  6984  0E49  00DD               	movwf	___fldiv@b+3
  6985  0E4A  0025               	movlb	5	; select bank5
  6986  0E4B  0859               	movf	(main@current+2)^(0+640),w
  6987  0E4C  0020               	movlb	0	; select bank0
  6988  0E4D  00DC               	movwf	___fldiv@b+2
  6989  0E4E  0025               	movlb	5	; select bank5
  6990  0E4F  0858               	movf	(main@current+1)^(0+640),w
  6991  0E50  0020               	movlb	0	; select bank0
  6992  0E51  00DB               	movwf	___fldiv@b+1
  6993  0E52  0025               	movlb	5	; select bank5
  6994  0E53  0857               	movf	main@current^(0+640),w
  6995  0E54  0020               	movlb	0	; select bank0
  6996  0E55  00DA               	movwf	___fldiv@b
  6997  0E56  3043               	movlw	67
  6998  0E57  00D9               	movwf	___fldiv@a+3
  6999  0E58  30FA               	movlw	250
  7000  0E59  00D8               	movwf	___fldiv@a+2
  7001  0E5A  3000               	movlw	0
  7002  0E5B  00D7               	movwf	___fldiv@a+1
  7003  0E5C  3000               	movlw	0
  7004  0E5D  00D6               	movwf	___fldiv@a
  7005  0E5E  3190  2004  318D   	fcall	___fldiv
  7006  0E61  0020               	movlb	0	; select bank0
  7007  0E62  0859               	movf	?___fldiv+3,w
  7008  0E63  0021               	movlb	1	; select bank1
  7009  0E64  00A3               	movwf	(___flneg@f1+3)^(0+128)
  7010  0E65  0020               	movlb	0	; select bank0
  7011  0E66  0858               	movf	?___fldiv+2,w
  7012  0E67  0021               	movlb	1	; select bank1
  7013  0E68  00A2               	movwf	(___flneg@f1+2)^(0+128)
  7014  0E69  0020               	movlb	0	; select bank0
  7015  0E6A  0857               	movf	?___fldiv+1,w
  7016  0E6B  0021               	movlb	1	; select bank1
  7017  0E6C  00A1               	movwf	(___flneg@f1+1)^(0+128)
  7018  0E6D  0020               	movlb	0	; select bank0
  7019  0E6E  0856               	movf	?___fldiv,w
  7020  0E6F  0021               	movlb	1	; select bank1
  7021  0E70  00A0               	movwf	___flneg@f1^(0+128)
  7022  0E71  31B5  25EC  318D   	fcall	___flneg
  7023  0E74  0021               	movlb	1	; select bank1
  7024  0E75  0823               	movf	(?___flneg+3)^(0+128),w
  7025  0E76  00AC               	movwf	(___fladd@b+3)^(0+128)
  7026  0E77  0822               	movf	(?___flneg+2)^(0+128),w
  7027  0E78  00AB               	movwf	(___fladd@b+2)^(0+128)
  7028  0E79  0821               	movf	(?___flneg+1)^(0+128),w
  7029  0E7A  00AA               	movwf	(___fladd@b+1)^(0+128)
  7030  0E7B  0820               	movf	?___flneg^(0+128),w
  7031  0E7C  00A9               	movwf	___fladd@b^(0+128)
  7032  0E7D  0024               	movlb	4	; select bank4
  7033  0E7E  086D               	movf	(main@soc+3)^(0+512),w
  7034  0E7F  0020               	movlb	0	; select bank0
  7035  0E80  00BF               	movwf	___flmul@b+3
  7036  0E81  0024               	movlb	4	; select bank4
  7037  0E82  086C               	movf	(main@soc+2)^(0+512),w
  7038  0E83  0020               	movlb	0	; select bank0
  7039  0E84  00BE               	movwf	___flmul@b+2
  7040  0E85  0024               	movlb	4	; select bank4
  7041  0E86  086B               	movf	(main@soc+1)^(0+512),w
  7042  0E87  0020               	movlb	0	; select bank0
  7043  0E88  00BD               	movwf	___flmul@b+1
  7044  0E89  0024               	movlb	4	; select bank4
  7045  0E8A  086A               	movf	main@soc^(0+512),w
  7046  0E8B  0020               	movlb	0	; select bank0
  7047  0E8C  00BC               	movwf	___flmul@b
  7048  0E8D  3087               	movlw	low (main@total_capacity| (0+32768))
  7049  0E8E  0084               	movwf	4
  7050  0E8F  30B9               	movlw	high (main@total_capacity| (0+32768))
  7051  0E90  0085               	movwf	5
  7052  0E91  3F00               	moviw [0]fsr0
  7053  0E92  0022               	movlb	2	; select bank2
  7054  0E93  00E2               	movwf	??_main^(0+256)
  7055  0E94  3F01               	moviw [1]fsr0
  7056  0E95  00E3               	movwf	(??_main^(0+256)+1)
  7057  0E96  0862               	movf	??_main^(0+256),w
  7058  0E97  0020               	movlb	0	; select bank0
  7059  0E98  00AE               	movwf	___xxtofl@val
  7060  0E99  0022               	movlb	2	; select bank2
  7061  0E9A  0863               	movf	(??_main+1)^(0+256),w
  7062  0E9B  0020               	movlb	0	; select bank0
  7063  0E9C  00AF               	movwf	___xxtofl@val+1
  7064  0E9D  01B0               	clrf	___xxtofl@val+2
  7065  0E9E  01B1               	clrf	___xxtofl@val+3
  7066  0E9F  3000               	movlw	0
  7067  0EA0  31AE  2631  318D   	fcall	___xxtofl
  7068  0EA3  0020               	movlb	0	; select bank0
  7069  0EA4  0831               	movf	?___xxtofl+3,w
  7070  0EA5  00C3               	movwf	___flmul@a+3
  7071  0EA6  0830               	movf	?___xxtofl+2,w
  7072  0EA7  00C2               	movwf	___flmul@a+2
  7073  0EA8  082F               	movf	?___xxtofl+1,w
  7074  0EA9  00C1               	movwf	___flmul@a+1
  7075  0EAA  082E               	movf	?___xxtofl,w
  7076  0EAB  00C0               	movwf	___flmul@a
  7077  0EAC  318B  233E  318D   	fcall	___flmul
  7078  0EAF  0020               	movlb	0	; select bank0
  7079  0EB0  083F               	movf	?___flmul+3,w
  7080  0EB1  0021               	movlb	1	; select bank1
  7081  0EB2  00B0               	movwf	(___fladd@a+3)^(0+128)
  7082  0EB3  0020               	movlb	0	; select bank0
  7083  0EB4  083E               	movf	?___flmul+2,w
  7084  0EB5  0021               	movlb	1	; select bank1
  7085  0EB6  00AF               	movwf	(___fladd@a+2)^(0+128)
  7086  0EB7  0020               	movlb	0	; select bank0
  7087  0EB8  083D               	movf	?___flmul+1,w
  7088  0EB9  0021               	movlb	1	; select bank1
  7089  0EBA  00AE               	movwf	(___fladd@a+1)^(0+128)
  7090  0EBB  0020               	movlb	0	; select bank0
  7091  0EBC  083C               	movf	?___flmul,w
  7092  0EBD  0021               	movlb	1	; select bank1
  7093  0EBE  00AD               	movwf	___fladd@a^(0+128)
  7094  0EBF  3193  2374  318D   	fcall	___fladd
  7095  0EC2  0021               	movlb	1	; select bank1
  7096  0EC3  082C               	movf	(?___fladd+3)^(0+128),w
  7097  0EC4  0022               	movlb	2	; select bank2
  7098  0EC5  00EB               	movwf	(_main$2203+3)^(0+256)
  7099  0EC6  0021               	movlb	1	; select bank1
  7100  0EC7  082B               	movf	(?___fladd+2)^(0+128),w
  7101  0EC8  0022               	movlb	2	; select bank2
  7102  0EC9  00EA               	movwf	(_main$2203+2)^(0+256)
  7103  0ECA  0021               	movlb	1	; select bank1
  7104  0ECB  082A               	movf	(?___fladd+1)^(0+128),w
  7105  0ECC  0022               	movlb	2	; select bank2
  7106  0ECD  00E9               	movwf	(_main$2203+1)^(0+256)
  7107  0ECE  0021               	movlb	1	; select bank1
  7108  0ECF  0829               	movf	?___fladd^(0+128),w
  7109  0ED0  0022               	movlb	2	; select bank2
  7110  0ED1  00E8               	movwf	_main$2203^(0+256)
  7111                           
  7112                           ;main.c: 96: soc = ((((soc)*(float)total_capacity) - (current/500))/((float)(total_capac
      +                          ity)));
  7113  0ED2  3087               	movlw	low (main@total_capacity| (0+32768))
  7114  0ED3  0084               	movwf	4
  7115  0ED4  30B9               	movlw	high (main@total_capacity| (0+32768))
  7116  0ED5  0085               	movwf	5
  7117  0ED6  3F00               	moviw [0]fsr0
  7118  0ED7  00E2               	movwf	??_main^(0+256)
  7119  0ED8  3F01               	moviw [1]fsr0
  7120  0ED9  00E3               	movwf	(??_main^(0+256)+1)
  7121  0EDA  0862               	movf	??_main^(0+256),w
  7122  0EDB  0020               	movlb	0	; select bank0
  7123  0EDC  00AE               	movwf	___xxtofl@val
  7124  0EDD  0022               	movlb	2	; select bank2
  7125  0EDE  0863               	movf	(??_main+1)^(0+256),w
  7126  0EDF  0020               	movlb	0	; select bank0
  7127  0EE0  00AF               	movwf	___xxtofl@val+1
  7128  0EE1  01B0               	clrf	___xxtofl@val+2
  7129  0EE2  01B1               	clrf	___xxtofl@val+3
  7130  0EE3  3000               	movlw	0
  7131  0EE4  31AE  2631  318D   	fcall	___xxtofl
  7132  0EE7  0020               	movlb	0	; select bank0
  7133  0EE8  0831               	movf	?___xxtofl+3,w
  7134  0EE9  00D9               	movwf	___fldiv@a+3
  7135  0EEA  0830               	movf	?___xxtofl+2,w
  7136  0EEB  00D8               	movwf	___fldiv@a+2
  7137  0EEC  082F               	movf	?___xxtofl+1,w
  7138  0EED  00D7               	movwf	___fldiv@a+1
  7139  0EEE  082E               	movf	?___xxtofl,w
  7140  0EEF  00D6               	movwf	___fldiv@a
  7141  0EF0  0022               	movlb	2	; select bank2
  7142  0EF1  086B               	movf	(_main$2203+3)^(0+256),w
  7143  0EF2  0020               	movlb	0	; select bank0
  7144  0EF3  00DD               	movwf	___fldiv@b+3
  7145  0EF4  0022               	movlb	2	; select bank2
  7146  0EF5  086A               	movf	(_main$2203+2)^(0+256),w
  7147  0EF6  0020               	movlb	0	; select bank0
  7148  0EF7  00DC               	movwf	___fldiv@b+2
  7149  0EF8  0022               	movlb	2	; select bank2
  7150  0EF9  0869               	movf	(_main$2203+1)^(0+256),w
  7151  0EFA  0020               	movlb	0	; select bank0
  7152  0EFB  00DB               	movwf	___fldiv@b+1
  7153  0EFC  0022               	movlb	2	; select bank2
  7154  0EFD  0868               	movf	_main$2203^(0+256),w
  7155  0EFE  0020               	movlb	0	; select bank0
  7156  0EFF  00DA               	movwf	___fldiv@b
  7157  0F00  3190  2004  318D   	fcall	___fldiv
  7158  0F03  0020               	movlb	0	; select bank0
  7159  0F04  0859               	movf	?___fldiv+3,w
  7160  0F05  0024               	movlb	4	; select bank4
  7161  0F06  00ED               	movwf	(main@soc+3)^(0+512)
  7162  0F07  0020               	movlb	0	; select bank0
  7163  0F08  0858               	movf	?___fldiv+2,w
  7164  0F09  0024               	movlb	4	; select bank4
  7165  0F0A  00EC               	movwf	(main@soc+2)^(0+512)
  7166  0F0B  0020               	movlb	0	; select bank0
  7167  0F0C  0857               	movf	?___fldiv+1,w
  7168  0F0D  0024               	movlb	4	; select bank4
  7169  0F0E  00EB               	movwf	(main@soc+1)^(0+512)
  7170  0F0F  0020               	movlb	0	; select bank0
  7171  0F10  0856               	movf	?___fldiv,w
  7172  0F11  0024               	movlb	4	; select bank4
  7173  0F12  00EA               	movwf	main@soc^(0+512)
  7174                           
  7175                           ;main.c: 98: currentIndex = 0;
  7176  0F13  01E8               	clrf	main@currentIndex^(0+512)
  7177  0F14  01E9               	clrf	(main@currentIndex+1)^(0+512)
  7178  0F15                     l8074:	
  7179                           
  7180                           ;main.c: 99: }
  7181                           ;main.c: 100: currentBool = 0;
  7182  0F15  0025               	movlb	5	; select bank5
  7183  0F16  01B7               	clrf	_currentBool^(0+640)
  7184  0F17  01B8               	clrf	(_currentBool+1)^(0+640)
  7185  0F18                     l8076:	
  7186                           
  7187                           ;main.c: 101: }
  7188                           ;main.c: 106: for(int i = 0; i <5; i++){
  7189  0F18  0024               	movlb	4	; select bank4
  7190  0F19  01EE               	clrf	main@i^(0+512)
  7191  0F1A  01EF               	clrf	(main@i+1)^(0+512)
  7192  0F1B  086F               	movf	(main@i+1)^(0+512),w
  7193  0F1C  3A80               	xorlw	128
  7194  0F1D  0022               	movlb	2	; select bank2
  7195  0F1E  00E2               	movwf	??_main^(0+256)
  7196  0F1F  3080               	movlw	128
  7197  0F20  0262               	subwf	??_main^(0+256),w
  7198  0F21  1D03               	skipz
  7199  0F22  2F26               	goto	u10705
  7200  0F23  3005               	movlw	5
  7201  0F24  0024               	movlb	4	; select bank4
  7202  0F25  026E               	subwf	main@i^(0+512),w
  7203  0F26                     u10705:	
  7204  0F26  1803               	btfsc	3,0
  7205  0F27  2F6B               	goto	l8088
  7206  0F28                     l8082:	
  7207                           
  7208                           ;main.c: 107: if(temps[i] >= 40 || temps[i] <= 10){
  7209  0F28  0024               	movlb	4	; select bank4
  7210  0F29  356E               	lslf	main@i^(0+512),w
  7211  0F2A  3EC9               	addlw	(low (main@temps| (0+512)))& (0+255)
  7212  0F2B  0086               	movwf	6
  7213  0F2C  3002               	movlw	2	; select bank5/6
  7214  0F2D  0087               	movwf	7
  7215  0F2E  3F40               	moviw [0]fsr1
  7216  0F2F  0022               	movlb	2	; select bank2
  7217  0F30  00E2               	movwf	??_main^(0+256)
  7218  0F31  3F41               	moviw [1]fsr1
  7219  0F32  00E3               	movwf	(??_main^(0+256)+1)
  7220  0F33  0863               	movf	(??_main+1)^(0+256),w
  7221  0F34  3A80               	xorlw	128
  7222  0F35  00E4               	movwf	(??_main+2)^(0+256)
  7223  0F36  3080               	movlw	128
  7224  0F37  0264               	subwf	(??_main+2)^(0+256),w
  7225  0F38  1D03               	skipz
  7226  0F39  2F3C               	goto	u10715
  7227  0F3A  3028               	movlw	40
  7228  0F3B  0262               	subwf	??_main^(0+256),w
  7229  0F3C                     u10715:	
  7230  0F3C  1803               	skipnc
  7231  0F3D  2F54               	goto	l8086
  7232  0F3E  0024               	movlb	4	; select bank4
  7233  0F3F  356E               	lslf	main@i^(0+512),w
  7234  0F40  3EC9               	addlw	(low (main@temps| (0+512)))& (0+255)
  7235  0F41  0086               	movwf	6
  7236  0F42  3002               	movlw	2	; select bank5/6
  7237  0F43  0087               	movwf	7
  7238  0F44  3F40               	moviw [0]fsr1
  7239  0F45  0022               	movlb	2	; select bank2
  7240  0F46  00E2               	movwf	??_main^(0+256)
  7241  0F47  3F41               	moviw [1]fsr1
  7242  0F48  00E3               	movwf	(??_main^(0+256)+1)
  7243  0F49  0863               	movf	(??_main+1)^(0+256),w
  7244  0F4A  3A80               	xorlw	128
  7245  0F4B  00E4               	movwf	(??_main+2)^(0+256)
  7246  0F4C  3080               	movlw	128
  7247  0F4D  0264               	subwf	(??_main+2)^(0+256),w
  7248  0F4E  1D03               	skipz
  7249  0F4F  2F52               	goto	u10725
  7250  0F50  300B               	movlw	11
  7251  0F51  0262               	subwf	??_main^(0+256),w
  7252  0F52                     u10725:	
  7253  0F52  1803               	skipnc
  7254  0F53  2F59               	goto	l94
  7255  0F54                     l8086:	
  7256                           
  7257                           ;main.c: 108: numFaults++;
  7258  0F54  3001               	movlw	1
  7259  0F55  0022               	movlb	2	; select bank2
  7260  0F56  07EC               	addwf	main@numFaults^(0+256),f
  7261  0F57  3000               	movlw	0
  7262  0F58  3DED               	addwfc	(main@numFaults+1)^(0+256),f
  7263  0F59                     l94:	
  7264  0F59  3001               	movlw	1
  7265  0F5A  0024               	movlb	4	; select bank4
  7266  0F5B  07EE               	addwf	main@i^(0+512),f
  7267  0F5C  3000               	movlw	0
  7268  0F5D  3DEF               	addwfc	(main@i+1)^(0+512),f
  7269  0F5E  086F               	movf	(main@i+1)^(0+512),w
  7270  0F5F  3A80               	xorlw	128
  7271  0F60  0022               	movlb	2	; select bank2
  7272  0F61  00E2               	movwf	??_main^(0+256)
  7273  0F62  3080               	movlw	128
  7274  0F63  0262               	subwf	??_main^(0+256),w
  7275  0F64  1D03               	skipz
  7276  0F65  2F69               	goto	u10735
  7277  0F66  3005               	movlw	5
  7278  0F67  0024               	movlb	4	; select bank4
  7279  0F68  026E               	subwf	main@i^(0+512),w
  7280  0F69                     u10735:	
  7281  0F69  1C03               	skipc
  7282  0F6A  2F28               	goto	l8082
  7283  0F6B                     l8088:	
  7284                           
  7285                           ;main.c: 109: }
  7286                           ;main.c: 110: }
  7287                           ;main.c: 112: if(current >= 10){
  7288  0F6B  0025               	movlb	5	; select bank5
  7289  0F6C  085A               	movf	(main@current+3)^(0+640),w
  7290  0F6D  0021               	movlb	1	; select bank1
  7291  0F6E  00C4               	movwf	(___flge@ff1+3)^(0+128)
  7292  0F6F  0025               	movlb	5	; select bank5
  7293  0F70  0859               	movf	(main@current+2)^(0+640),w
  7294  0F71  0021               	movlb	1	; select bank1
  7295  0F72  00C3               	movwf	(___flge@ff1+2)^(0+128)
  7296  0F73  0025               	movlb	5	; select bank5
  7297  0F74  0858               	movf	(main@current+1)^(0+640),w
  7298  0F75  0021               	movlb	1	; select bank1
  7299  0F76  00C2               	movwf	(___flge@ff1+1)^(0+128)
  7300  0F77  0025               	movlb	5	; select bank5
  7301  0F78  0857               	movf	main@current^(0+640),w
  7302  0F79  0021               	movlb	1	; select bank1
  7303  0F7A  00C1               	movwf	___flge@ff1^(0+128)
  7304  0F7B  3041               	movlw	65
  7305  0F7C  00C8               	movwf	(___flge@ff2+3)^(0+128)
  7306  0F7D  3020               	movlw	32
  7307  0F7E  00C7               	movwf	(___flge@ff2+2)^(0+128)
  7308  0F7F  3000               	movlw	0
  7309  0F80  00C6               	movwf	(___flge@ff2+1)^(0+128)
  7310  0F81  3000               	movlw	0
  7311  0F82  00C5               	movwf	___flge@ff2^(0+128)
  7312  0F83  31AE  26C7  318D   	fcall	___flge
  7313  0F86  1C03               	btfss	3,0
  7314  0F87  2F8D               	goto	l97
  7315                           
  7316                           ;main.c: 113: numFaults++;
  7317  0F88  3001               	movlw	1
  7318  0F89  0022               	movlb	2	; select bank2
  7319  0F8A  07EC               	addwf	main@numFaults^(0+256),f
  7320  0F8B  3000               	movlw	0
  7321  0F8C  3DED               	addwfc	(main@numFaults+1)^(0+256),f
  7322  0F8D                     l97:	
  7323                           
  7324                           ;main.c: 114: }
  7325                           ;main.c: 118: if(numFaults >= 10){
  7326  0F8D  0022               	movlb	2	; select bank2
  7327  0F8E  086D               	movf	(main@numFaults+1)^(0+256),w
  7328  0F8F  3A80               	xorlw	128
  7329  0F90  00E2               	movwf	??_main^(0+256)
  7330  0F91  3080               	movlw	128
  7331  0F92  0262               	subwf	??_main^(0+256),w
  7332  0F93  1D03               	skipz
  7333  0F94  2F97               	goto	u10755
  7334  0F95  300A               	movlw	10
  7335  0F96  026C               	subwf	main@numFaults^(0+256),w
  7336  0F97                     u10755:	
  7337  0F97  1C03               	skipc
  7338  0F98  2F9B               	goto	l8094
  7339                           
  7340                           ;main.c: 119: LATDbits.LATD5 = 0;
  7341  0F99  0022               	movlb	2	; select bank2
  7342  0F9A  128F               	bcf	15,5	;volatile
  7343  0F9B                     l8094:	
  7344                           
  7345                           ;main.c: 120: }
  7346                           ;main.c: 125: if(uartBool == 1){
  7347  0F9B  0025               	movlb	5	; select bank5
  7348  0F9C  0339               	decf	_uartBool^(0+640),w
  7349  0F9D  043A               	iorwf	(_uartBool+1)^(0+640),w
  7350  0F9E  1D03               	btfss	3,2
  7351  0F9F  2DCD               	goto	l8052
  7352                           
  7353                           ;main.c: 126: cellBalancing(voltages, 12, balanceEn);
  7354  0FA0  300C               	movlw	12
  7355  0FA1  0021               	movlb	1	; select bank1
  7356  0FA2  00D1               	movwf	cellBalancing@numVoltages^(0+128)
  7357  0FA3  3000               	movlw	0
  7358  0FA4  00D2               	movwf	(cellBalancing@numVoltages^(0+128)+1)
  7359  0FA5  3050               	movlw	(low (main@balanceEn| (0+512)))& (0+255)
  7360  0FA6  0022               	movlb	2	; select bank2
  7361  0FA7  00E2               	movwf	??_main^(0+256)
  7362  0FA8  0862               	movf	??_main^(0+256),w
  7363  0FA9  0021               	movlb	1	; select bank1
  7364  0FAA  00D3               	movwf	cellBalancing@balanceEn^(0+128)
  7365  0FAB  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  7366  0FAC  31A1  21D0  318D   	fcall	_cellBalancing
  7367                           
  7368                           ;main.c: 127: writeValuesToUart(voltages, 12, totalVoltage, balanceEn, temps, 5, highest
      +                          Temp, current, soc, 25);
  7369  0FAF  300C               	movlw	12
  7370  0FB0  0022               	movlb	2	; select bank2
  7371  0FB1  00C7               	movwf	writeValuesToUart@voltageArrLength^(0+256)
  7372  0FB2  3000               	movlw	0
  7373  0FB3  00C8               	movwf	(writeValuesToUart@voltageArrLength^(0+256)+1)
  7374  0FB4  0025               	movlb	5	; select bank5
  7375  0FB5  0856               	movf	(main@totalVoltage+3)^(0+640),w
  7376  0FB6  0022               	movlb	2	; select bank2
  7377  0FB7  00CC               	movwf	(writeValuesToUart@totalVoltage+3)^(0+256)
  7378  0FB8  0025               	movlb	5	; select bank5
  7379  0FB9  0855               	movf	(main@totalVoltage+2)^(0+640),w
  7380  0FBA  0022               	movlb	2	; select bank2
  7381  0FBB  00CB               	movwf	(writeValuesToUart@totalVoltage+2)^(0+256)
  7382  0FBC  0025               	movlb	5	; select bank5
  7383  0FBD  0854               	movf	(main@totalVoltage+1)^(0+640),w
  7384  0FBE  0022               	movlb	2	; select bank2
  7385  0FBF  00CA               	movwf	(writeValuesToUart@totalVoltage+1)^(0+256)
  7386  0FC0  0025               	movlb	5	; select bank5
  7387  0FC1  0853               	movf	main@totalVoltage^(0+640),w
  7388  0FC2  0022               	movlb	2	; select bank2
  7389  0FC3  00C9               	movwf	writeValuesToUart@totalVoltage^(0+256)
  7390  0FC4  3050               	movlw	(low (main@balanceEn| (0+512)))& (0+255)
  7391  0FC5  00E2               	movwf	??_main^(0+256)
  7392  0FC6  0862               	movf	??_main^(0+256),w
  7393  0FC7  00CD               	movwf	writeValuesToUart@balanceEn^(0+256)
  7394  0FC8  30C9               	movlw	(low (main@temps| (0+512)))& (0+255)
  7395  0FC9  00E3               	movwf	(??_main+1)^(0+256)
  7396  0FCA  0863               	movf	(??_main+1)^(0+256),w
  7397  0FCB  00CE               	movwf	writeValuesToUart@temperatureArr^(0+256)
  7398  0FCC  3005               	movlw	5
  7399  0FCD  00CF               	movwf	writeValuesToUart@temperatureArrLength^(0+256)
  7400  0FCE  3000               	movlw	0
  7401  0FCF  00D0               	movwf	(writeValuesToUart@temperatureArrLength^(0+256)+1)
  7402  0FD0  086F               	movf	(main@highestTemp+1)^(0+256),w
  7403  0FD1  00D2               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+256)
  7404  0FD2  086E               	movf	main@highestTemp^(0+256),w
  7405  0FD3  00D1               	movwf	writeValuesToUart@temperatureHigh^(0+256)
  7406  0FD4  0025               	movlb	5	; select bank5
  7407  0FD5  085A               	movf	(main@current+3)^(0+640),w
  7408  0FD6  0022               	movlb	2	; select bank2
  7409  0FD7  00D6               	movwf	(writeValuesToUart@current+3)^(0+256)
  7410  0FD8  0025               	movlb	5	; select bank5
  7411  0FD9  0859               	movf	(main@current+2)^(0+640),w
  7412  0FDA  0022               	movlb	2	; select bank2
  7413  0FDB  00D5               	movwf	(writeValuesToUart@current+2)^(0+256)
  7414  0FDC  0025               	movlb	5	; select bank5
  7415  0FDD  0858               	movf	(main@current+1)^(0+640),w
  7416  0FDE  0022               	movlb	2	; select bank2
  7417  0FDF  00D4               	movwf	(writeValuesToUart@current+1)^(0+256)
  7418  0FE0  0025               	movlb	5	; select bank5
  7419  0FE1  0857               	movf	main@current^(0+640),w
  7420  0FE2  0022               	movlb	2	; select bank2
  7421  0FE3  00D3               	movwf	writeValuesToUart@current^(0+256)
  7422  0FE4  0024               	movlb	4	; select bank4
  7423  0FE5  086D               	movf	(main@soc+3)^(0+512),w
  7424  0FE6  0022               	movlb	2	; select bank2
  7425  0FE7  00DA               	movwf	(writeValuesToUart@soc+3)^(0+256)
  7426  0FE8  0024               	movlb	4	; select bank4
  7427  0FE9  086C               	movf	(main@soc+2)^(0+512),w
  7428  0FEA  0022               	movlb	2	; select bank2
  7429  0FEB  00D9               	movwf	(writeValuesToUart@soc+2)^(0+256)
  7430  0FEC  0024               	movlb	4	; select bank4
  7431  0FED  086B               	movf	(main@soc+1)^(0+512),w
  7432  0FEE  0022               	movlb	2	; select bank2
  7433  0FEF  00D8               	movwf	(writeValuesToUart@soc+1)^(0+256)
  7434  0FF0  0024               	movlb	4	; select bank4
  7435  0FF1  086A               	movf	main@soc^(0+512),w
  7436  0FF2  0022               	movlb	2	; select bank2
  7437  0FF3  00D7               	movwf	writeValuesToUart@soc^(0+256)
  7438  0FF4  3019               	movlw	25
  7439  0FF5  00DB               	movwf	writeValuesToUart@uartLines^(0+256)
  7440  0FF6  3000               	movlw	0
  7441  0FF7  00DC               	movwf	(writeValuesToUart@uartLines^(0+256)+1)
  7442  0FF8  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  7443  0FF9  31AD  25A3  318D   	fcall	_writeValuesToUart
  7444                           
  7445                           ;main.c: 128: uartBool = 0;
  7446  0FFC  0025               	movlb	5	; select bank5
  7447  0FFD  01B9               	clrf	_uartBool^(0+640)
  7448  0FFE  01BA               	clrf	(_uartBool+1)^(0+640)
  7449  0FFF  2DCD               	goto	l8052
  7450  1000                     __end_of_main:	
  7451                           
  7452                           	psect	text1
  7453  2DA3                     __ptext1:	
  7454 ;; *************** function _writeValuesToUart *****************
  7455 ;; Defined at:
  7456 ;;		line 11 in file "uart.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  voltageArr      1    wreg     PTR float 
  7459 ;;		 -> main@voltages(48), 
  7460 ;;  voltageArrLe    2   39[BANK2 ] int 
  7461 ;;  totalVoltage    4   41[BANK2 ] float 
  7462 ;;  balanceEn       1   45[BANK2 ] PTR int 
  7463 ;;		 -> main@balanceEn(24), 
  7464 ;;  temperatureA    1   46[BANK2 ] PTR int 
  7465 ;;		 -> main@temps(10), 
  7466 ;;  temperatureA    2   47[BANK2 ] int 
  7467 ;;  temperatureH    2   49[BANK2 ] int 
  7468 ;;  current         4   51[BANK2 ] float 
  7469 ;;  soc             4   55[BANK2 ] float 
  7470 ;;  uartLines       2   59[BANK2 ] int 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  voltageArr      1   63[BANK2 ] PTR float 
  7473 ;;		 -> main@voltages(48), 
  7474 ;;  index           2   64[BANK2 ] int 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      void 
  7477 ;; Registers used:
  7478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7484 ;;      Params:         0       0       0      22       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7485 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7486 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7487 ;;      Totals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7488 ;;Total ram usage:       27 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    7
  7491 ;; This function calls:
  7492 ;;		_clearScreen
  7493 ;;		_uartEnable
  7494 ;;		_writeCurrent
  7495 ;;		_writeSOC
  7496 ;;		_writeTemps
  7497 ;;		_writeVoltages
  7498 ;; This function is called by:
  7499 ;;		_main
  7500 ;; This function uses a non-reentrant model
  7501 ;;
  7502                           
  7503                           
  7504                           ;psect for function _writeValuesToUart
  7505  2DA3                     _writeValuesToUart:	
  7506                           
  7507                           ;incstack = 0
  7508                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7509                           ;writeValuesToUart@voltageArr stored from wreg
  7510  2DA3  0022               	movlb	2	; select bank2
  7511  2DA4  00DF               	movwf	writeValuesToUart@voltageArr^(0+256)
  7512                           
  7513                           ;uart.c: 12: int index = 0;
  7514  2DA5  01E0               	clrf	writeValuesToUart@index^(0+256)
  7515  2DA6  01E1               	clrf	(writeValuesToUart@index+1)^(0+256)
  7516  2DA7                     l241:	
  7517                           ;uart.c: 14: while(PIE1bits.TXIE);
  7518                           
  7519  2DA7  0021               	movlb	1	; select bank1
  7520  2DA8  1A11               	btfsc	17,4	;volatile
  7521  2DA9  2DA7               	goto	l241
  7522                           
  7523                           ;uart.c: 15: clearScreen(uartLines);
  7524  2DAA  0022               	movlb	2	; select bank2
  7525  2DAB  085C               	movf	(writeValuesToUart@uartLines+1)^(0+256),w
  7526  2DAC  0021               	movlb	1	; select bank1
  7527  2DAD  00E4               	movwf	(clearScreen@numLines+1)^(0+128)
  7528  2DAE  0022               	movlb	2	; select bank2
  7529  2DAF  085B               	movf	writeValuesToUart@uartLines^(0+256),w
  7530  2DB0  0021               	movlb	1	; select bank1
  7531  2DB1  00E3               	movwf	clearScreen@numLines^(0+128)
  7532  2DB2  31A8  2026  31AD   	fcall	_clearScreen
  7533                           
  7534                           ;uart.c: 17: writeVoltages(voltageArr, voltageArrLength, totalVoltage, balanceEn, &index
      +                          );
  7535  2DB5  0022               	movlb	2	; select bank2
  7536  2DB6  0848               	movf	(writeValuesToUart@voltageArrLength+1)^(0+256),w
  7537  2DB7  0021               	movlb	1	; select bank1
  7538  2DB8  00E4               	movwf	(writeVoltages@length+1)^(0+128)
  7539  2DB9  0022               	movlb	2	; select bank2
  7540  2DBA  0847               	movf	writeValuesToUart@voltageArrLength^(0+256),w
  7541  2DBB  0021               	movlb	1	; select bank1
  7542  2DBC  00E3               	movwf	writeVoltages@length^(0+128)
  7543  2DBD  0022               	movlb	2	; select bank2
  7544  2DBE  084C               	movf	(writeValuesToUart@totalVoltage+3)^(0+256),w
  7545  2DBF  0021               	movlb	1	; select bank1
  7546  2DC0  00E8               	movwf	(writeVoltages@totalVoltage+3)^(0+128)
  7547  2DC1  0022               	movlb	2	; select bank2
  7548  2DC2  084B               	movf	(writeValuesToUart@totalVoltage+2)^(0+256),w
  7549  2DC3  0021               	movlb	1	; select bank1
  7550  2DC4  00E7               	movwf	(writeVoltages@totalVoltage+2)^(0+128)
  7551  2DC5  0022               	movlb	2	; select bank2
  7552  2DC6  084A               	movf	(writeValuesToUart@totalVoltage+1)^(0+256),w
  7553  2DC7  0021               	movlb	1	; select bank1
  7554  2DC8  00E6               	movwf	(writeVoltages@totalVoltage+1)^(0+128)
  7555  2DC9  0022               	movlb	2	; select bank2
  7556  2DCA  0849               	movf	writeValuesToUart@totalVoltage^(0+256),w
  7557  2DCB  0021               	movlb	1	; select bank1
  7558  2DCC  00E5               	movwf	writeVoltages@totalVoltage^(0+128)
  7559  2DCD  0022               	movlb	2	; select bank2
  7560  2DCE  084D               	movf	writeValuesToUart@balanceEn^(0+256),w
  7561  2DCF  00DD               	movwf	??_writeValuesToUart^(0+256)
  7562  2DD0  085D               	movf	??_writeValuesToUart^(0+256),w
  7563  2DD1  0021               	movlb	1	; select bank1
  7564  2DD2  00E9               	movwf	writeVoltages@balanceEn^(0+128)
  7565  2DD3  3060               	movlw	(low (writeValuesToUart@index| (0+256)))& (0+255)
  7566  2DD4  0022               	movlb	2	; select bank2
  7567  2DD5  00DE               	movwf	(??_writeValuesToUart+1)^(0+256)
  7568  2DD6  085E               	movf	(??_writeValuesToUart+1)^(0+256),w
  7569  2DD7  0021               	movlb	1	; select bank1
  7570  2DD8  00EA               	movwf	writeVoltages@index^(0+128)
  7571  2DD9  0022               	movlb	2	; select bank2
  7572  2DDA  085F               	movf	writeValuesToUart@voltageArr^(0+256),w
  7573  2DDB  3191  2193  31AD   	fcall	_writeVoltages
  7574                           
  7575                           ;uart.c: 18: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength, &index);
  7576  2DDE  0022               	movlb	2	; select bank2
  7577  2DDF  0852               	movf	(writeValuesToUart@temperatureHigh+1)^(0+256),w
  7578  2DE0  0021               	movlb	1	; select bank1
  7579  2DE1  00E4               	movwf	(writeTemps@highestTemp+1)^(0+128)
  7580  2DE2  0022               	movlb	2	; select bank2
  7581  2DE3  0851               	movf	writeValuesToUart@temperatureHigh^(0+256),w
  7582  2DE4  0021               	movlb	1	; select bank1
  7583  2DE5  00E3               	movwf	writeTemps@highestTemp^(0+128)
  7584  2DE6  0022               	movlb	2	; select bank2
  7585  2DE7  0850               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+256),w
  7586  2DE8  0021               	movlb	1	; select bank1
  7587  2DE9  00E6               	movwf	(writeTemps@numTemps+1)^(0+128)
  7588  2DEA  0022               	movlb	2	; select bank2
  7589  2DEB  084F               	movf	writeValuesToUart@temperatureArrLength^(0+256),w
  7590  2DEC  0021               	movlb	1	; select bank1
  7591  2DED  00E5               	movwf	writeTemps@numTemps^(0+128)
  7592  2DEE  3060               	movlw	(low (writeValuesToUart@index| (0+256)))& (0+255)
  7593  2DEF  0022               	movlb	2	; select bank2
  7594  2DF0  00DD               	movwf	??_writeValuesToUart^(0+256)
  7595  2DF1  085D               	movf	??_writeValuesToUart^(0+256),w
  7596  2DF2  0021               	movlb	1	; select bank1
  7597  2DF3  00E7               	movwf	writeTemps@index^(0+128)
  7598  2DF4  0022               	movlb	2	; select bank2
  7599  2DF5  084E               	movf	writeValuesToUart@temperatureArr^(0+256),w
  7600  2DF6  31AA  22A4  31AD   	fcall	_writeTemps
  7601                           
  7602                           ;uart.c: 19: writeCurrent(current, &index);
  7603  2DF9  0022               	movlb	2	; select bank2
  7604  2DFA  0856               	movf	(writeValuesToUart@current+3)^(0+256),w
  7605  2DFB  0021               	movlb	1	; select bank1
  7606  2DFC  00E6               	movwf	(writeCurrent@current+3)^(0+128)
  7607  2DFD  0022               	movlb	2	; select bank2
  7608  2DFE  0855               	movf	(writeValuesToUart@current+2)^(0+256),w
  7609  2DFF  0021               	movlb	1	; select bank1
  7610  2E00  00E5               	movwf	(writeCurrent@current+2)^(0+128)
  7611  2E01  0022               	movlb	2	; select bank2
  7612  2E02  0854               	movf	(writeValuesToUart@current+1)^(0+256),w
  7613  2E03  0021               	movlb	1	; select bank1
  7614  2E04  00E4               	movwf	(writeCurrent@current+1)^(0+128)
  7615  2E05  0022               	movlb	2	; select bank2
  7616  2E06  0853               	movf	writeValuesToUart@current^(0+256),w
  7617  2E07  0021               	movlb	1	; select bank1
  7618  2E08  00E3               	movwf	writeCurrent@current^(0+128)
  7619  2E09  3060               	movlw	(low (writeValuesToUart@index| (0+256)))& (0+255)
  7620  2E0A  0022               	movlb	2	; select bank2
  7621  2E0B  00DD               	movwf	??_writeValuesToUart^(0+256)
  7622  2E0C  085D               	movf	??_writeValuesToUart^(0+256),w
  7623  2E0D  0021               	movlb	1	; select bank1
  7624  2E0E  00E7               	movwf	writeCurrent@index^(0+128)
  7625  2E0F  31B7  2739  31AD   	fcall	_writeCurrent
  7626                           
  7627                           ;uart.c: 20: writeSOC(soc, &index);
  7628  2E12  0022               	movlb	2	; select bank2
  7629  2E13  085A               	movf	(writeValuesToUart@soc+3)^(0+256),w
  7630  2E14  0021               	movlb	1	; select bank1
  7631  2E15  00E6               	movwf	(writeSOC@soc+3)^(0+128)
  7632  2E16  0022               	movlb	2	; select bank2
  7633  2E17  0859               	movf	(writeValuesToUart@soc+2)^(0+256),w
  7634  2E18  0021               	movlb	1	; select bank1
  7635  2E19  00E5               	movwf	(writeSOC@soc+2)^(0+128)
  7636  2E1A  0022               	movlb	2	; select bank2
  7637  2E1B  0858               	movf	(writeValuesToUart@soc+1)^(0+256),w
  7638  2E1C  0021               	movlb	1	; select bank1
  7639  2E1D  00E4               	movwf	(writeSOC@soc+1)^(0+128)
  7640  2E1E  0022               	movlb	2	; select bank2
  7641  2E1F  0857               	movf	writeValuesToUart@soc^(0+256),w
  7642  2E20  0021               	movlb	1	; select bank1
  7643  2E21  00E3               	movwf	writeSOC@soc^(0+128)
  7644  2E22  3060               	movlw	(low (writeValuesToUart@index| (0+256)))& (0+255)
  7645  2E23  0022               	movlb	2	; select bank2
  7646  2E24  00DD               	movwf	??_writeValuesToUart^(0+256)
  7647  2E25  085D               	movf	??_writeValuesToUart^(0+256),w
  7648  2E26  0021               	movlb	1	; select bank1
  7649  2E27  00E7               	movwf	writeSOC@index^(0+128)
  7650  2E28  31A0  2001  31AD   	fcall	_writeSOC
  7651  2E2B                     l244:	
  7652                           ;uart.c: 22: while(PIE1bits.TXIE);
  7653                           
  7654  2E2B  0021               	movlb	1	; select bank1
  7655  2E2C  1A11               	btfsc	17,4	;volatile
  7656  2E2D  2E2B               	goto	l244
  7657                           
  7658                           ;uart.c: 23: uartEnable();
  7659  2E2E  3190  2001         	fcall	_uartEnable
  7660  2E30  0008               	return
  7661  2E31                     __end_of_writeValuesToUart:	
  7662                           
  7663                           	psect	text2
  7664  1193                     __ptext2:	
  7665 ;; *************** function _writeVoltages *****************
  7666 ;; Defined at:
  7667 ;;		line 30 in file "uart.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  volts           1    wreg     PTR float 
  7670 ;;		 -> main@voltages(48), 
  7671 ;;  length          2   67[BANK1 ] int 
  7672 ;;  totalVoltage    4   69[BANK1 ] float 
  7673 ;;  balanceEn       1   73[BANK1 ] PTR int 
  7674 ;;		 -> main@balanceEn(24), 
  7675 ;;  index           1   74[BANK1 ] PTR int 
  7676 ;;		 -> writeValuesToUart@index(2), 
  7677 ;; Auto vars:     Size  Location     Type
  7678 ;;  volts           1   36[BANK2 ] PTR float 
  7679 ;;		 -> main@voltages(48), 
  7680 ;;  k               2   37[BANK2 ] int 
  7681 ;;  minCell         2   34[BANK2 ] int 
  7682 ;;  maxCell         2   32[BANK2 ] int 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7692 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7693 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7694 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7695 ;;      Totals:         0       0      12      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7696 ;;Total ram usage:       23 bytes
  7697 ;; Hardware stack levels used:    1
  7698 ;; Hardware stack levels required when called:    6
  7699 ;; This function calls:
  7700 ;;		___fladd
  7701 ;;		___flge
  7702 ;;		___flneg
  7703 ;;		_sprintf
  7704 ;; This function is called by:
  7705 ;;		_writeValuesToUart
  7706 ;; This function uses a non-reentrant model
  7707 ;;
  7708                           
  7709                           
  7710                           ;psect for function _writeVoltages
  7711  1193                     _writeVoltages:	
  7712                           
  7713                           ;incstack = 0
  7714                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7715                           ;writeVoltages@volts stored from wreg
  7716  1193  0022               	movlb	2	; select bank2
  7717  1194  00C4               	movwf	writeVoltages@volts^(0+256)
  7718                           
  7719                           ;uart.c: 31: int maxCell = 0;
  7720  1195  01C0               	clrf	writeVoltages@maxCell^(0+256)
  7721  1196  01C1               	clrf	(writeVoltages@maxCell+1)^(0+256)
  7722                           
  7723                           ;uart.c: 32: int minCell = 0;
  7724  1197  01C2               	clrf	writeVoltages@minCell^(0+256)
  7725  1198  01C3               	clrf	(writeVoltages@minCell+1)^(0+256)
  7726                           
  7727                           ;uart.c: 34: for(int k = 0; k < length; k++){
  7728  1199  01C5               	clrf	writeVoltages@k^(0+256)
  7729  119A  01C6               	clrf	(writeVoltages@k+1)^(0+256)
  7730  119B                     l7890:	
  7731  119B  0846               	movf	(writeVoltages@k+1)^(0+256),w
  7732  119C  3A80               	xorlw	128
  7733  119D  0021               	movlb	1	; select bank1
  7734  119E  00EB               	movwf	??_writeVoltages^(0+128)
  7735  119F  0864               	movf	(writeVoltages@length+1)^(0+128),w
  7736  11A0  3A80               	xorlw	128
  7737  11A1  026B               	subwf	??_writeVoltages^(0+128),w
  7738  11A2  1D03               	skipz
  7739  11A3  29A7               	goto	u10405
  7740  11A4  0863               	movf	writeVoltages@length^(0+128),w
  7741  11A5  0022               	movlb	2	; select bank2
  7742  11A6  0245               	subwf	writeVoltages@k^(0+256),w
  7743  11A7                     u10405:	
  7744  11A7  1803               	btfsc	3,0
  7745  11A8  2AB3               	goto	l7892
  7746                           
  7747                           ;uart.c: 35: if(volts[k]<volts[minCell]){
  7748  11A9  0022               	movlb	2	; select bank2
  7749  11AA  0845               	movf	writeVoltages@k^(0+256),w
  7750  11AB  0021               	movlb	1	; select bank1
  7751  11AC  00EB               	movwf	??_writeVoltages^(0+128)
  7752  11AD  3001               	movlw	1
  7753  11AE                     u10315:	
  7754  11AE  35EB               	lslf	??_writeVoltages^(0+128),f
  7755  11AF  3EFF               	addlw	-1
  7756  11B0  1D03               	skipz
  7757  11B1  29AE               	goto	u10315
  7758  11B2  356B               	lslf	??_writeVoltages^(0+128),w
  7759  11B3  0022               	movlb	2	; select bank2
  7760  11B4  0744               	addwf	writeVoltages@volts^(0+256),w
  7761  11B5  0021               	movlb	1	; select bank1
  7762  11B6  00EC               	movwf	(??_writeVoltages+1)^(0+128)
  7763  11B7  086C               	movf	(??_writeVoltages+1)^(0+128),w
  7764  11B8  0086               	movwf	6
  7765  11B9  3002               	movlw	2	; select bank4/5
  7766  11BA  0087               	movwf	7
  7767  11BB  3F40               	moviw [0]fsr1
  7768  11BC  00C1               	movwf	___flge@ff1^(0+128)
  7769  11BD  3F41               	moviw [1]fsr1
  7770  11BE  00C2               	movwf	(___flge@ff1+1)^(0+128)
  7771  11BF  3F42               	moviw [2]fsr1
  7772  11C0  00C3               	movwf	(___flge@ff1+2)^(0+128)
  7773  11C1  3F43               	moviw [3]fsr1
  7774  11C2  00C4               	movwf	(___flge@ff1+3)^(0+128)
  7775  11C3  0022               	movlb	2	; select bank2
  7776  11C4  0842               	movf	writeVoltages@minCell^(0+256),w
  7777  11C5  0021               	movlb	1	; select bank1
  7778  11C6  00ED               	movwf	(??_writeVoltages+2)^(0+128)
  7779  11C7  3001               	movlw	1
  7780  11C8                     u10325:	
  7781  11C8  35ED               	lslf	(??_writeVoltages+2)^(0+128),f
  7782  11C9  3EFF               	addlw	-1
  7783  11CA  1D03               	skipz
  7784  11CB  29C8               	goto	u10325
  7785  11CC  356D               	lslf	(??_writeVoltages+2)^(0+128),w
  7786  11CD  0022               	movlb	2	; select bank2
  7787  11CE  0744               	addwf	writeVoltages@volts^(0+256),w
  7788  11CF  0021               	movlb	1	; select bank1
  7789  11D0  00EE               	movwf	(??_writeVoltages+3)^(0+128)
  7790  11D1  086E               	movf	(??_writeVoltages+3)^(0+128),w
  7791  11D2  0086               	movwf	6
  7792  11D3  3002               	movlw	2	; select bank4/5
  7793  11D4  0087               	movwf	7
  7794  11D5  3F40               	moviw [0]fsr1
  7795  11D6  00C5               	movwf	___flge@ff2^(0+128)
  7796  11D7  3F41               	moviw [1]fsr1
  7797  11D8  00C6               	movwf	(___flge@ff2+1)^(0+128)
  7798  11D9  3F42               	moviw [2]fsr1
  7799  11DA  00C7               	movwf	(___flge@ff2+2)^(0+128)
  7800  11DB  3F43               	moviw [3]fsr1
  7801  11DC  00C8               	movwf	(___flge@ff2+3)^(0+128)
  7802  11DD  31AE  26C7  3191   	fcall	___flge
  7803  11E0  1803               	btfsc	3,0
  7804  11E1  29E8               	goto	l7878
  7805                           
  7806                           ;uart.c: 36: minCell = k;
  7807  11E2  0022               	movlb	2	; select bank2
  7808  11E3  0846               	movf	(writeVoltages@k+1)^(0+256),w
  7809  11E4  00C3               	movwf	(writeVoltages@minCell+1)^(0+256)
  7810  11E5  0845               	movf	writeVoltages@k^(0+256),w
  7811  11E6  00C2               	movwf	writeVoltages@minCell^(0+256)
  7812                           
  7813                           ;uart.c: 37: }else if(volts[k] > volts[maxCell]){
  7814  11E7  2A26               	goto	l7882
  7815  11E8                     l7878:	
  7816  11E8  0022               	movlb	2	; select bank2
  7817  11E9  0840               	movf	writeVoltages@maxCell^(0+256),w
  7818  11EA  0021               	movlb	1	; select bank1
  7819  11EB  00EB               	movwf	??_writeVoltages^(0+128)
  7820  11EC  3001               	movlw	1
  7821  11ED                     u10345:	
  7822  11ED  35EB               	lslf	??_writeVoltages^(0+128),f
  7823  11EE  3EFF               	addlw	-1
  7824  11EF  1D03               	skipz
  7825  11F0  29ED               	goto	u10345
  7826  11F1  356B               	lslf	??_writeVoltages^(0+128),w
  7827  11F2  0022               	movlb	2	; select bank2
  7828  11F3  0744               	addwf	writeVoltages@volts^(0+256),w
  7829  11F4  0021               	movlb	1	; select bank1
  7830  11F5  00EC               	movwf	(??_writeVoltages+1)^(0+128)
  7831  11F6  086C               	movf	(??_writeVoltages+1)^(0+128),w
  7832  11F7  0086               	movwf	6
  7833  11F8  3002               	movlw	2	; select bank4/5
  7834  11F9  0087               	movwf	7
  7835  11FA  3F40               	moviw [0]fsr1
  7836  11FB  00C1               	movwf	___flge@ff1^(0+128)
  7837  11FC  3F41               	moviw [1]fsr1
  7838  11FD  00C2               	movwf	(___flge@ff1+1)^(0+128)
  7839  11FE  3F42               	moviw [2]fsr1
  7840  11FF  00C3               	movwf	(___flge@ff1+2)^(0+128)
  7841  1200  3F43               	moviw [3]fsr1
  7842  1201  00C4               	movwf	(___flge@ff1+3)^(0+128)
  7843  1202  0022               	movlb	2	; select bank2
  7844  1203  0845               	movf	writeVoltages@k^(0+256),w
  7845  1204  0021               	movlb	1	; select bank1
  7846  1205  00ED               	movwf	(??_writeVoltages+2)^(0+128)
  7847  1206  3001               	movlw	1
  7848  1207                     u10355:	
  7849  1207  35ED               	lslf	(??_writeVoltages+2)^(0+128),f
  7850  1208  3EFF               	addlw	-1
  7851  1209  1D03               	skipz
  7852  120A  2A07               	goto	u10355
  7853  120B  356D               	lslf	(??_writeVoltages+2)^(0+128),w
  7854  120C  0022               	movlb	2	; select bank2
  7855  120D  0744               	addwf	writeVoltages@volts^(0+256),w
  7856  120E  0021               	movlb	1	; select bank1
  7857  120F  00EE               	movwf	(??_writeVoltages+3)^(0+128)
  7858  1210  086E               	movf	(??_writeVoltages+3)^(0+128),w
  7859  1211  0086               	movwf	6
  7860  1212  3002               	movlw	2	; select bank4/5
  7861  1213  0087               	movwf	7
  7862  1214  3F40               	moviw [0]fsr1
  7863  1215  00C5               	movwf	___flge@ff2^(0+128)
  7864  1216  3F41               	moviw [1]fsr1
  7865  1217  00C6               	movwf	(___flge@ff2+1)^(0+128)
  7866  1218  3F42               	moviw [2]fsr1
  7867  1219  00C7               	movwf	(___flge@ff2+2)^(0+128)
  7868  121A  3F43               	moviw [3]fsr1
  7869  121B  00C8               	movwf	(___flge@ff2+3)^(0+128)
  7870  121C  31AE  26C7  3191   	fcall	___flge
  7871  121F  1803               	btfsc	3,0
  7872  1220  2A26               	goto	l7882
  7873                           
  7874                           ;uart.c: 38: maxCell = k;
  7875  1221  0022               	movlb	2	; select bank2
  7876  1222  0846               	movf	(writeVoltages@k+1)^(0+256),w
  7877  1223  00C1               	movwf	(writeVoltages@maxCell+1)^(0+256)
  7878  1224  0845               	movf	writeVoltages@k^(0+256),w
  7879  1225  00C0               	movwf	writeVoltages@maxCell^(0+256)
  7880  1226                     l7882:	
  7881                           
  7882                           ;uart.c: 39: }
  7883                           ;uart.c: 41: if(balanceEn[k]){
  7884  1226  0022               	movlb	2	; select bank2
  7885  1227  3545               	lslf	writeVoltages@k^(0+256),w
  7886  1228  0021               	movlb	1	; select bank1
  7887  1229  0769               	addwf	writeVoltages@balanceEn^(0+128),w
  7888  122A  00EB               	movwf	??_writeVoltages^(0+128)
  7889  122B  086B               	movf	??_writeVoltages^(0+128),w
  7890  122C  0086               	movwf	6
  7891  122D  3002               	movlw	2	; select bank4/5
  7892  122E  0087               	movwf	7
  7893  122F  0016               	moviw fsr1++
  7894  1230  0401               	iorwf	1,w
  7895  1231  1903               	btfsc	3,2
  7896  1232  2A69               	goto	l7886
  7897                           
  7898                           ;uart.c: 42: *index += sprintf(&str[*index], "V%i = %0.4fV [X]\n\r", k+1, volts[k]);
  7899  1233  086A               	movf	writeVoltages@index^(0+128),w
  7900  1234  0086               	movwf	6
  7901  1235  3001               	movlw	1	; select bank2/3
  7902  1236  0087               	movwf	7
  7903  1237  30FC               	movlw	252
  7904  1238  00EB               	movwf	??_writeVoltages^(0+128)
  7905  1239  3025               	movlw	37
  7906  123A  00EC               	movwf	(??_writeVoltages^(0+128)+1)
  7907  123B  3F40               	moviw [0]fsr1
  7908  123C  076B               	addwf	??_writeVoltages^(0+128),w
  7909  123D  00D1               	movwf	sprintf@sp^(0+128)
  7910  123E  3F41               	moviw [1]fsr1
  7911  123F  3D6C               	addwfc	(??_writeVoltages+1)^(0+128),w
  7912  1240  00D2               	movwf	(sprintf@sp^(0+128)+1)
  7913  1241  303E               	movlw	low (STR_2| (0+32768))
  7914  1242  00D3               	movwf	sprintf@f^(0+128)
  7915  1243  30B9               	movlw	high (STR_2| (0+32768))
  7916  1244  00D4               	movwf	(sprintf@f^(0+128)+1)
  7917  1245  0022               	movlb	2	; select bank2
  7918  1246  0845               	movf	writeVoltages@k^(0+256),w
  7919  1247  3E01               	addlw	1
  7920  1248  0021               	movlb	1	; select bank1
  7921  1249  00D5               	movwf	(?_sprintf^(0+128)+4)
  7922  124A  3000               	movlw	0
  7923  124B  0022               	movlb	2	; select bank2
  7924  124C  3D46               	addwfc	(writeVoltages@k+1)^(0+256),w
  7925  124D  0021               	movlb	1	; select bank1
  7926  124E  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  7927  124F  0022               	movlb	2	; select bank2
  7928  1250  0845               	movf	writeVoltages@k^(0+256),w
  7929  1251  0021               	movlb	1	; select bank1
  7930  1252  00ED               	movwf	(??_writeVoltages+2)^(0+128)
  7931  1253  3001               	movlw	1
  7932  1254                     u10385:	
  7933  1254  35ED               	lslf	(??_writeVoltages+2)^(0+128),f
  7934  1255  3EFF               	addlw	-1
  7935  1256  1D03               	skipz
  7936  1257  2A54               	goto	u10385
  7937  1258  356D               	lslf	(??_writeVoltages+2)^(0+128),w
  7938  1259  0022               	movlb	2	; select bank2
  7939  125A  0744               	addwf	writeVoltages@volts^(0+256),w
  7940  125B  0021               	movlb	1	; select bank1
  7941  125C  00EE               	movwf	(??_writeVoltages+3)^(0+128)
  7942  125D  086E               	movf	(??_writeVoltages+3)^(0+128),w
  7943  125E  0086               	movwf	6
  7944  125F  3002               	movlw	2	; select bank4/5
  7945  1260  0087               	movwf	7
  7946  1261  3F40               	moviw [0]fsr1
  7947  1262  00D7               	movwf	(?_sprintf^(0+128)+6)
  7948  1263  3F41               	moviw [1]fsr1
  7949  1264  00D8               	movwf	((?_sprintf+1)^(0+128)+6)
  7950  1265  3F42               	moviw [2]fsr1
  7951  1266  00D9               	movwf	((?_sprintf+2)^(0+128)+6)
  7952  1267  3F43               	moviw [3]fsr1
  7953  1268  2A9E               	goto	L2
  7954  1269                     l7886:	
  7955                           ;uart.c: 43: }else{
  7956                           
  7957                           
  7958                           ;uart.c: 44: *index += sprintf(&str[*index], "V%i = %0.4fV\n\r", k+1, volts[k]);
  7959  1269  086A               	movf	writeVoltages@index^(0+128),w
  7960  126A  0086               	movwf	6
  7961  126B  3001               	movlw	1	; select bank2/3
  7962  126C  0087               	movwf	7
  7963  126D  30FC               	movlw	252
  7964  126E  00EB               	movwf	??_writeVoltages^(0+128)
  7965  126F  3025               	movlw	37
  7966  1270  00EC               	movwf	(??_writeVoltages^(0+128)+1)
  7967  1271  3F40               	moviw [0]fsr1
  7968  1272  076B               	addwf	??_writeVoltages^(0+128),w
  7969  1273  00D1               	movwf	sprintf@sp^(0+128)
  7970  1274  3F41               	moviw [1]fsr1
  7971  1275  3D6C               	addwfc	(??_writeVoltages+1)^(0+128),w
  7972  1276  00D2               	movwf	(sprintf@sp^(0+128)+1)
  7973  1277  3060               	movlw	low (STR_3| (0+32768))
  7974  1278  00D3               	movwf	sprintf@f^(0+128)
  7975  1279  30B9               	movlw	high (STR_3| (0+32768))
  7976  127A  00D4               	movwf	(sprintf@f^(0+128)+1)
  7977  127B  0022               	movlb	2	; select bank2
  7978  127C  0845               	movf	writeVoltages@k^(0+256),w
  7979  127D  3E01               	addlw	1
  7980  127E  0021               	movlb	1	; select bank1
  7981  127F  00D5               	movwf	(?_sprintf^(0+128)+4)
  7982  1280  3000               	movlw	0
  7983  1281  0022               	movlb	2	; select bank2
  7984  1282  3D46               	addwfc	(writeVoltages@k+1)^(0+256),w
  7985  1283  0021               	movlb	1	; select bank1
  7986  1284  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  7987  1285  0022               	movlb	2	; select bank2
  7988  1286  0845               	movf	writeVoltages@k^(0+256),w
  7989  1287  0021               	movlb	1	; select bank1
  7990  1288  00ED               	movwf	(??_writeVoltages+2)^(0+128)
  7991  1289  3001               	movlw	1
  7992  128A                     u10395:	
  7993  128A  35ED               	lslf	(??_writeVoltages+2)^(0+128),f
  7994  128B  3EFF               	addlw	-1
  7995  128C  1D03               	skipz
  7996  128D  2A8A               	goto	u10395
  7997  128E  356D               	lslf	(??_writeVoltages+2)^(0+128),w
  7998  128F  0022               	movlb	2	; select bank2
  7999  1290  0744               	addwf	writeVoltages@volts^(0+256),w
  8000  1291  0021               	movlb	1	; select bank1
  8001  1292  00EE               	movwf	(??_writeVoltages+3)^(0+128)
  8002  1293  086E               	movf	(??_writeVoltages+3)^(0+128),w
  8003  1294  0086               	movwf	6
  8004  1295  3002               	movlw	2	; select bank4/5
  8005  1296  0087               	movwf	7
  8006  1297  3F40               	moviw [0]fsr1
  8007  1298  00D7               	movwf	(?_sprintf^(0+128)+6)
  8008  1299  3F41               	moviw [1]fsr1
  8009  129A  00D8               	movwf	((?_sprintf+1)^(0+128)+6)
  8010  129B  3F42               	moviw [2]fsr1
  8011  129C  00D9               	movwf	((?_sprintf+2)^(0+128)+6)
  8012  129D  3F43               	moviw [3]fsr1
  8013  129E                     L2:	
  8014  129E  00DA               	movwf	((?_sprintf+3)^(0+128)+6)
  8015  129F  3180  20B8  3191   	fcall	_sprintf
  8016  12A2  0021               	movlb	1	; select bank1
  8017  12A3  086A               	movf	writeVoltages@index^(0+128),w
  8018  12A4  0086               	movwf	6
  8019  12A5  3001               	movlw	1	; select bank2/3
  8020  12A6  0087               	movwf	7
  8021  12A7  0851               	movf	?_sprintf^(0+128),w
  8022  12A8  0781               	addwf	1,f
  8023  12A9  3141               	addfsr 1,1
  8024  12AA  0852               	movf	(?_sprintf+1)^(0+128),w
  8025  12AB  3D81               	addwfc	1,f
  8026  12AC  317F               	addfsr 1,-1
  8027  12AD  3001               	movlw	1
  8028  12AE  0022               	movlb	2	; select bank2
  8029  12AF  07C5               	addwf	writeVoltages@k^(0+256),f
  8030  12B0  3000               	movlw	0
  8031  12B1  3DC6               	addwfc	(writeVoltages@k+1)^(0+256),f
  8032  12B2  299B               	goto	l7890
  8033  12B3                     l7892:	
  8034                           
  8035                           ;uart.c: 45: }
  8036                           ;uart.c: 46: }
  8037                           ;uart.c: 48: *index += sprintf(&str[*index], "Pack Voltage: %0.4fV\n\r", totalVoltage);
  8038  12B3  0021               	movlb	1	; select bank1
  8039  12B4  086A               	movf	writeVoltages@index^(0+128),w
  8040  12B5  0086               	movwf	6
  8041  12B6  3001               	movlw	1	; select bank2/3
  8042  12B7  0087               	movwf	7
  8043  12B8  30FC               	movlw	252
  8044  12B9  00EB               	movwf	??_writeVoltages^(0+128)
  8045  12BA  3025               	movlw	37
  8046  12BB  00EC               	movwf	(??_writeVoltages^(0+128)+1)
  8047  12BC  3F40               	moviw [0]fsr1
  8048  12BD  076B               	addwf	??_writeVoltages^(0+128),w
  8049  12BE  00D1               	movwf	sprintf@sp^(0+128)
  8050  12BF  3F41               	moviw [1]fsr1
  8051  12C0  3D6C               	addwfc	(??_writeVoltages+1)^(0+128),w
  8052  12C1  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8053  12C2  3000               	movlw	low (STR_4| (0+32768))
  8054  12C3  00D3               	movwf	sprintf@f^(0+128)
  8055  12C4  30B9               	movlw	high (STR_4| (0+32768))
  8056  12C5  00D4               	movwf	(sprintf@f^(0+128)+1)
  8057  12C6  0868               	movf	(writeVoltages@totalVoltage+3)^(0+128),w
  8058  12C7  00D8               	movwf	((?_sprintf+3)^(0+128)+4)
  8059  12C8  0867               	movf	(writeVoltages@totalVoltage+2)^(0+128),w
  8060  12C9  00D7               	movwf	((?_sprintf+2)^(0+128)+4)
  8061  12CA  0866               	movf	(writeVoltages@totalVoltage+1)^(0+128),w
  8062  12CB  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8063  12CC  0865               	movf	writeVoltages@totalVoltage^(0+128),w
  8064  12CD  00D5               	movwf	(?_sprintf^(0+128)+4)
  8065  12CE  3180  20B8  3191   	fcall	_sprintf
  8066  12D1  0021               	movlb	1	; select bank1
  8067  12D2  086A               	movf	writeVoltages@index^(0+128),w
  8068  12D3  0086               	movwf	6
  8069  12D4  3001               	movlw	1	; select bank2/3
  8070  12D5  0087               	movwf	7
  8071  12D6  0851               	movf	?_sprintf^(0+128),w
  8072  12D7  0781               	addwf	1,f
  8073  12D8  3141               	addfsr 1,1
  8074  12D9  0852               	movf	(?_sprintf+1)^(0+128),w
  8075  12DA  3D81               	addwfc	1,f
  8076  12DB  317F               	addfsr 1,-1
  8077                           
  8078                           ;uart.c: 50: *index += sprintf(&str[*index], "Max Difference = V%i & V%i @ %0.4fV\n\r", 
      +                          minCell+1, maxCell+1, (volts[maxCell] - volts[minCell]));
  8079  12DC  0022               	movlb	2	; select bank2
  8080  12DD  0840               	movf	writeVoltages@maxCell^(0+256),w
  8081  12DE  0021               	movlb	1	; select bank1
  8082  12DF  00EB               	movwf	??_writeVoltages^(0+128)
  8083  12E0  3001               	movlw	1
  8084  12E1                     u10415:	
  8085  12E1  35EB               	lslf	??_writeVoltages^(0+128),f
  8086  12E2  3EFF               	addlw	-1
  8087  12E3  1D03               	skipz
  8088  12E4  2AE1               	goto	u10415
  8089  12E5  356B               	lslf	??_writeVoltages^(0+128),w
  8090  12E6  0022               	movlb	2	; select bank2
  8091  12E7  0744               	addwf	writeVoltages@volts^(0+256),w
  8092  12E8  0021               	movlb	1	; select bank1
  8093  12E9  00EC               	movwf	(??_writeVoltages+1)^(0+128)
  8094  12EA  086C               	movf	(??_writeVoltages+1)^(0+128),w
  8095  12EB  0086               	movwf	6
  8096  12EC  3002               	movlw	2	; select bank4/5
  8097  12ED  0087               	movwf	7
  8098  12EE  3F40               	moviw [0]fsr1
  8099  12EF  00A9               	movwf	___fladd@b^(0+128)
  8100  12F0  3F41               	moviw [1]fsr1
  8101  12F1  00AA               	movwf	(___fladd@b+1)^(0+128)
  8102  12F2  3F42               	moviw [2]fsr1
  8103  12F3  00AB               	movwf	(___fladd@b+2)^(0+128)
  8104  12F4  3F43               	moviw [3]fsr1
  8105  12F5  00AC               	movwf	(___fladd@b+3)^(0+128)
  8106  12F6  0022               	movlb	2	; select bank2
  8107  12F7  0842               	movf	writeVoltages@minCell^(0+256),w
  8108  12F8  0021               	movlb	1	; select bank1
  8109  12F9  00ED               	movwf	(??_writeVoltages+2)^(0+128)
  8110  12FA  3001               	movlw	1
  8111  12FB                     u10425:	
  8112  12FB  35ED               	lslf	(??_writeVoltages+2)^(0+128),f
  8113  12FC  3EFF               	addlw	-1
  8114  12FD  1D03               	skipz
  8115  12FE  2AFB               	goto	u10425
  8116  12FF  356D               	lslf	(??_writeVoltages+2)^(0+128),w
  8117  1300  0022               	movlb	2	; select bank2
  8118  1301  0744               	addwf	writeVoltages@volts^(0+256),w
  8119  1302  0021               	movlb	1	; select bank1
  8120  1303  00EE               	movwf	(??_writeVoltages+3)^(0+128)
  8121  1304  086E               	movf	(??_writeVoltages+3)^(0+128),w
  8122  1305  0086               	movwf	6
  8123  1306  3002               	movlw	2	; select bank4/5
  8124  1307  0087               	movwf	7
  8125  1308  3F40               	moviw [0]fsr1
  8126  1309  00A0               	movwf	___flneg@f1^(0+128)
  8127  130A  3F41               	moviw [1]fsr1
  8128  130B  00A1               	movwf	(___flneg@f1+1)^(0+128)
  8129  130C  3F42               	moviw [2]fsr1
  8130  130D  00A2               	movwf	(___flneg@f1+2)^(0+128)
  8131  130E  3F43               	moviw [3]fsr1
  8132  130F  00A3               	movwf	(___flneg@f1+3)^(0+128)
  8133  1310  31B5  25EC  3191   	fcall	___flneg
  8134  1313  0021               	movlb	1	; select bank1
  8135  1314  0823               	movf	(?___flneg+3)^(0+128),w
  8136  1315  00B0               	movwf	(___fladd@a+3)^(0+128)
  8137  1316  0822               	movf	(?___flneg+2)^(0+128),w
  8138  1317  00AF               	movwf	(___fladd@a+2)^(0+128)
  8139  1318  0821               	movf	(?___flneg+1)^(0+128),w
  8140  1319  00AE               	movwf	(___fladd@a+1)^(0+128)
  8141  131A  0820               	movf	?___flneg^(0+128),w
  8142  131B  00AD               	movwf	___fladd@a^(0+128)
  8143  131C  3193  2374  3191   	fcall	___fladd
  8144  131F  0021               	movlb	1	; select bank1
  8145  1320  082C               	movf	(?___fladd+3)^(0+128),w
  8146  1321  0022               	movlb	2	; select bank2
  8147  1322  00BF               	movwf	(_writeVoltages$2206+3)^(0+256)
  8148  1323  0021               	movlb	1	; select bank1
  8149  1324  082B               	movf	(?___fladd+2)^(0+128),w
  8150  1325  0022               	movlb	2	; select bank2
  8151  1326  00BE               	movwf	(_writeVoltages$2206+2)^(0+256)
  8152  1327  0021               	movlb	1	; select bank1
  8153  1328  082A               	movf	(?___fladd+1)^(0+128),w
  8154  1329  0022               	movlb	2	; select bank2
  8155  132A  00BD               	movwf	(_writeVoltages$2206+1)^(0+256)
  8156  132B  0021               	movlb	1	; select bank1
  8157  132C  0829               	movf	?___fladd^(0+128),w
  8158  132D  0022               	movlb	2	; select bank2
  8159  132E  00BC               	movwf	_writeVoltages$2206^(0+256)
  8160                           
  8161                           ;uart.c: 50: *index += sprintf(&str[*index], "Max Difference = V%i & V%i @ %0.4fV\n\r", 
      +                          minCell+1, maxCell+1, (volts[maxCell] - volts[minCell]));
  8162  132F  0021               	movlb	1	; select bank1
  8163  1330  086A               	movf	writeVoltages@index^(0+128),w
  8164  1331  0086               	movwf	6
  8165  1332  3001               	movlw	1	; select bank2/3
  8166  1333  0087               	movwf	7
  8167  1334  30FC               	movlw	252
  8168  1335  00EB               	movwf	??_writeVoltages^(0+128)
  8169  1336  3025               	movlw	37
  8170  1337  00EC               	movwf	(??_writeVoltages^(0+128)+1)
  8171  1338  3F40               	moviw [0]fsr1
  8172  1339  076B               	addwf	??_writeVoltages^(0+128),w
  8173  133A  00D1               	movwf	sprintf@sp^(0+128)
  8174  133B  3F41               	moviw [1]fsr1
  8175  133C  3D6C               	addwfc	(??_writeVoltages+1)^(0+128),w
  8176  133D  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8177  133E  30C3               	movlw	low (STR_5| (0+32768))
  8178  133F  00D3               	movwf	sprintf@f^(0+128)
  8179  1340  30B8               	movlw	high (STR_5| (0+32768))
  8180  1341  00D4               	movwf	(sprintf@f^(0+128)+1)
  8181  1342  0022               	movlb	2	; select bank2
  8182  1343  0842               	movf	writeVoltages@minCell^(0+256),w
  8183  1344  3E01               	addlw	1
  8184  1345  0021               	movlb	1	; select bank1
  8185  1346  00D5               	movwf	(?_sprintf^(0+128)+4)
  8186  1347  3000               	movlw	0
  8187  1348  0022               	movlb	2	; select bank2
  8188  1349  3D43               	addwfc	(writeVoltages@minCell+1)^(0+256),w
  8189  134A  0021               	movlb	1	; select bank1
  8190  134B  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8191  134C  0022               	movlb	2	; select bank2
  8192  134D  0840               	movf	writeVoltages@maxCell^(0+256),w
  8193  134E  3E01               	addlw	1
  8194  134F  0021               	movlb	1	; select bank1
  8195  1350  00D7               	movwf	(?_sprintf^(0+128)+6)
  8196  1351  3000               	movlw	0
  8197  1352  0022               	movlb	2	; select bank2
  8198  1353  3D41               	addwfc	(writeVoltages@maxCell+1)^(0+256),w
  8199  1354  0021               	movlb	1	; select bank1
  8200  1355  00D8               	movwf	((?_sprintf+1)^(0+128)+6)
  8201  1356  0022               	movlb	2	; select bank2
  8202  1357  083F               	movf	(_writeVoltages$2206+3)^(0+256),w
  8203  1358  0021               	movlb	1	; select bank1
  8204  1359  00DC               	movwf	((?_sprintf+3)^(0+128)+8)
  8205  135A  0022               	movlb	2	; select bank2
  8206  135B  083E               	movf	(_writeVoltages$2206+2)^(0+256),w
  8207  135C  0021               	movlb	1	; select bank1
  8208  135D  00DB               	movwf	((?_sprintf+2)^(0+128)+8)
  8209  135E  0022               	movlb	2	; select bank2
  8210  135F  083D               	movf	(_writeVoltages$2206+1)^(0+256),w
  8211  1360  0021               	movlb	1	; select bank1
  8212  1361  00DA               	movwf	((?_sprintf+1)^(0+128)+8)
  8213  1362  0022               	movlb	2	; select bank2
  8214  1363  083C               	movf	_writeVoltages$2206^(0+256),w
  8215  1364  0021               	movlb	1	; select bank1
  8216  1365  00D9               	movwf	(?_sprintf^(0+128)+8)
  8217  1366  3180  20B8         	fcall	_sprintf
  8218  1368  0021               	movlb	1	; select bank1
  8219  1369  086A               	movf	writeVoltages@index^(0+128),w
  8220  136A  0086               	movwf	6
  8221  136B  3001               	movlw	1	; select bank2/3
  8222  136C  0087               	movwf	7
  8223  136D  0851               	movf	?_sprintf^(0+128),w
  8224  136E  0781               	addwf	1,f
  8225  136F  3141               	addfsr 1,1
  8226  1370  0852               	movf	(?_sprintf+1)^(0+128),w
  8227  1371  3D81               	addwfc	1,f
  8228  1372  317F               	addfsr 1,-1
  8229  1373  0008               	return
  8230  1374                     __end_of_writeVoltages:	
  8231                           
  8232                           	psect	text3
  8233  2AA4                     __ptext3:	
  8234 ;; *************** function _writeTemps *****************
  8235 ;; Defined at:
  8236 ;;		line 58 in file "uart.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;  temps           1    wreg     PTR int 
  8239 ;;		 -> main@temps(10), 
  8240 ;;  highestTemp     2   67[BANK1 ] int 
  8241 ;;  numTemps        2   69[BANK1 ] int 
  8242 ;;  index           1   71[BANK1 ] PTR int 
  8243 ;;		 -> writeValuesToUart@index(2), 
  8244 ;; Auto vars:     Size  Location     Type
  8245 ;;  temps           1   75[BANK1 ] PTR int 
  8246 ;;		 -> main@temps(10), 
  8247 ;;  k               2   76[BANK1 ] int 
  8248 ;; Return value:  Size  Location     Type
  8249 ;;                  1    wreg      void 
  8250 ;; Registers used:
  8251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8252 ;; Tracked objects:
  8253 ;;		On entry : 0/0
  8254 ;;		On exit  : 0/0
  8255 ;;		Unchanged: 0/0
  8256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8257 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8258 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8259 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8260 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8261 ;;Total ram usage:       11 bytes
  8262 ;; Hardware stack levels used:    1
  8263 ;; Hardware stack levels required when called:    6
  8264 ;; This function calls:
  8265 ;;		_sprintf
  8266 ;; This function is called by:
  8267 ;;		_writeValuesToUart
  8268 ;; This function uses a non-reentrant model
  8269 ;;
  8270                           
  8271                           
  8272                           ;psect for function _writeTemps
  8273  2AA4                     _writeTemps:	
  8274                           
  8275                           ;incstack = 0
  8276                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8277                           ;writeTemps@temps stored from wreg
  8278  2AA4  0021               	movlb	1	; select bank1
  8279  2AA5  00EB               	movwf	writeTemps@temps^(0+128)
  8280                           
  8281                           ;uart.c: 59: for(int k = 0; k<numTemps; k++){
  8282  2AA6  01EC               	clrf	writeTemps@k^(0+128)
  8283  2AA7  01ED               	clrf	(writeTemps@k+1)^(0+128)
  8284  2AA8                     l7904:	
  8285  2AA8  086D               	movf	(writeTemps@k+1)^(0+128),w
  8286  2AA9  3A80               	xorlw	128
  8287  2AAA  00E8               	movwf	??_writeTemps^(0+128)
  8288  2AAB  0866               	movf	(writeTemps@numTemps+1)^(0+128),w
  8289  2AAC  3A80               	xorlw	128
  8290  2AAD  0268               	subwf	??_writeTemps^(0+128),w
  8291  2AAE  1D03               	skipz
  8292  2AAF  2AB2               	goto	u10435
  8293  2AB0  0865               	movf	writeTemps@numTemps^(0+128),w
  8294  2AB1  026C               	subwf	writeTemps@k^(0+128),w
  8295  2AB2                     u10435:	
  8296  2AB2  1803               	btfsc	3,0
  8297  2AB3  2AEB               	goto	l7906
  8298                           
  8299                           ;uart.c: 60: *index += sprintf(&str[*index], "Temp%i = %iC\n\r", k+1, temps[k]);
  8300  2AB4  0021               	movlb	1	; select bank1
  8301  2AB5  0867               	movf	writeTemps@index^(0+128),w
  8302  2AB6  0086               	movwf	6
  8303  2AB7  3001               	movlw	1	; select bank2/3
  8304  2AB8  0087               	movwf	7
  8305  2AB9  30FC               	movlw	252
  8306  2ABA  00E8               	movwf	??_writeTemps^(0+128)
  8307  2ABB  3025               	movlw	37
  8308  2ABC  00E9               	movwf	(??_writeTemps^(0+128)+1)
  8309  2ABD  3F40               	moviw [0]fsr1
  8310  2ABE  0768               	addwf	??_writeTemps^(0+128),w
  8311  2ABF  00D1               	movwf	sprintf@sp^(0+128)
  8312  2AC0  3F41               	moviw [1]fsr1
  8313  2AC1  3D69               	addwfc	(??_writeTemps+1)^(0+128),w
  8314  2AC2  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8315  2AC3  3051               	movlw	low (STR_7| (0+32768))
  8316  2AC4  00D3               	movwf	sprintf@f^(0+128)
  8317  2AC5  30B9               	movlw	high (STR_7| (0+32768))
  8318  2AC6  00D4               	movwf	(sprintf@f^(0+128)+1)
  8319  2AC7  086C               	movf	writeTemps@k^(0+128),w
  8320  2AC8  3E01               	addlw	1
  8321  2AC9  00D5               	movwf	(?_sprintf^(0+128)+4)
  8322  2ACA  3000               	movlw	0
  8323  2ACB  3D6D               	addwfc	(writeTemps@k+1)^(0+128),w
  8324  2ACC  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8325  2ACD  356C               	lslf	writeTemps@k^(0+128),w
  8326  2ACE  076B               	addwf	writeTemps@temps^(0+128),w
  8327  2ACF  00EA               	movwf	(??_writeTemps+2)^(0+128)
  8328  2AD0  086A               	movf	(??_writeTemps+2)^(0+128),w
  8329  2AD1  0086               	movwf	6
  8330  2AD2  3002               	movlw	2	; select bank4/5
  8331  2AD3  0087               	movwf	7
  8332  2AD4  3F40               	moviw [0]fsr1
  8333  2AD5  00D7               	movwf	(?_sprintf^(0+128)+6)
  8334  2AD6  3F41               	moviw [1]fsr1
  8335  2AD7  00D8               	movwf	((?_sprintf+1)^(0+128)+6)
  8336  2AD8  3180  20B8  31AA   	fcall	_sprintf
  8337  2ADB  0021               	movlb	1	; select bank1
  8338  2ADC  0867               	movf	writeTemps@index^(0+128),w
  8339  2ADD  0086               	movwf	6
  8340  2ADE  3001               	movlw	1	; select bank2/3
  8341  2ADF  0087               	movwf	7
  8342  2AE0  0851               	movf	?_sprintf^(0+128),w
  8343  2AE1  0781               	addwf	1,f
  8344  2AE2  3141               	addfsr 1,1
  8345  2AE3  0852               	movf	(?_sprintf+1)^(0+128),w
  8346  2AE4  3D81               	addwfc	1,f
  8347  2AE5  317F               	addfsr 1,-1
  8348  2AE6  3001               	movlw	1
  8349  2AE7  07EC               	addwf	writeTemps@k^(0+128),f
  8350  2AE8  3000               	movlw	0
  8351  2AE9  3DED               	addwfc	(writeTemps@k+1)^(0+128),f
  8352  2AEA  2AA8               	goto	l7904
  8353  2AEB                     l7906:	
  8354                           
  8355                           ;uart.c: 61: }
  8356                           ;uart.c: 64: *index += sprintf(&str[*index], "Highest Temp: %iC\n\r", highestTemp);
  8357  2AEB  0021               	movlb	1	; select bank1
  8358  2AEC  0867               	movf	writeTemps@index^(0+128),w
  8359  2AED  0086               	movwf	6
  8360  2AEE  3001               	movlw	1	; select bank2/3
  8361  2AEF  0087               	movwf	7
  8362  2AF0  30FC               	movlw	252
  8363  2AF1  00E8               	movwf	??_writeTemps^(0+128)
  8364  2AF2  3025               	movlw	37
  8365  2AF3  00E9               	movwf	(??_writeTemps^(0+128)+1)
  8366  2AF4  3F40               	moviw [0]fsr1
  8367  2AF5  0768               	addwf	??_writeTemps^(0+128),w
  8368  2AF6  00D1               	movwf	sprintf@sp^(0+128)
  8369  2AF7  3F41               	moviw [1]fsr1
  8370  2AF8  3D69               	addwfc	(??_writeTemps+1)^(0+128),w
  8371  2AF9  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8372  2AFA  3017               	movlw	low (STR_8| (0+32768))
  8373  2AFB  00D3               	movwf	sprintf@f^(0+128)
  8374  2AFC  30B9               	movlw	high (STR_8| (0+32768))
  8375  2AFD  00D4               	movwf	(sprintf@f^(0+128)+1)
  8376  2AFE  0864               	movf	(writeTemps@highestTemp+1)^(0+128),w
  8377  2AFF  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8378  2B00  0863               	movf	writeTemps@highestTemp^(0+128),w
  8379  2B01  00D5               	movwf	(?_sprintf^(0+128)+4)
  8380  2B02  3180  20B8         	fcall	_sprintf
  8381  2B04  0021               	movlb	1	; select bank1
  8382  2B05  0867               	movf	writeTemps@index^(0+128),w
  8383  2B06  0086               	movwf	6
  8384  2B07  3001               	movlw	1	; select bank2/3
  8385  2B08  0087               	movwf	7
  8386  2B09  0851               	movf	?_sprintf^(0+128),w
  8387  2B0A  0781               	addwf	1,f
  8388  2B0B  3141               	addfsr 1,1
  8389  2B0C  0852               	movf	(?_sprintf+1)^(0+128),w
  8390  2B0D  3D81               	addwfc	1,f
  8391  2B0E  317F               	addfsr 1,-1
  8392  2B0F  0008               	return
  8393  2B10                     __end_of_writeTemps:	
  8394                           
  8395                           	psect	text4
  8396  2001                     __ptext4:	
  8397 ;; *************** function _writeSOC *****************
  8398 ;; Defined at:
  8399 ;;		line 26 in file "uart.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  soc             4   67[BANK1 ] float 
  8402 ;;  index           1   71[BANK1 ] PTR int 
  8403 ;;		 -> writeValuesToUart@index(2), 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;		None
  8406 ;; Return value:  Size  Location     Type
  8407 ;;                  1    wreg      void 
  8408 ;; Registers used:
  8409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8410 ;; Tracked objects:
  8411 ;;		On entry : 0/0
  8412 ;;		On exit  : 0/0
  8413 ;;		Unchanged: 0/0
  8414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8415 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8416 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8417 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8418 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8419 ;;Total ram usage:       11 bytes
  8420 ;; Hardware stack levels used:    1
  8421 ;; Hardware stack levels required when called:    6
  8422 ;; This function calls:
  8423 ;;		___flmul
  8424 ;;		_sprintf
  8425 ;; This function is called by:
  8426 ;;		_writeValuesToUart
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           
  8431                           ;psect for function _writeSOC
  8432  2001                     _writeSOC:	
  8433                           
  8434                           ;uart.c: 27: *index += sprintf(&str[*index], "SOC = %0.4f percent \n\r", (soc*100));
  8435                           
  8436                           ;incstack = 0
  8437                           ; Regs used in _writeSOC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8438  2001  3042               	movlw	66
  8439  2002  0020               	movlb	0	; select bank0
  8440  2003  00BF               	movwf	___flmul@b+3
  8441  2004  30C8               	movlw	200
  8442  2005  00BE               	movwf	___flmul@b+2
  8443  2006  3000               	movlw	0
  8444  2007  00BD               	movwf	___flmul@b+1
  8445  2008  3000               	movlw	0
  8446  2009  00BC               	movwf	___flmul@b
  8447  200A  0021               	movlb	1	; select bank1
  8448  200B  0866               	movf	(writeSOC@soc+3)^(0+128),w
  8449  200C  0020               	movlb	0	; select bank0
  8450  200D  00C3               	movwf	___flmul@a+3
  8451  200E  0021               	movlb	1	; select bank1
  8452  200F  0865               	movf	(writeSOC@soc+2)^(0+128),w
  8453  2010  0020               	movlb	0	; select bank0
  8454  2011  00C2               	movwf	___flmul@a+2
  8455  2012  0021               	movlb	1	; select bank1
  8456  2013  0864               	movf	(writeSOC@soc+1)^(0+128),w
  8457  2014  0020               	movlb	0	; select bank0
  8458  2015  00C1               	movwf	___flmul@a+1
  8459  2016  0021               	movlb	1	; select bank1
  8460  2017  0863               	movf	writeSOC@soc^(0+128),w
  8461  2018  0020               	movlb	0	; select bank0
  8462  2019  00C0               	movwf	___flmul@a
  8463  201A  318B  233E  31A0   	fcall	___flmul
  8464  201D  0020               	movlb	0	; select bank0
  8465  201E  083F               	movf	?___flmul+3,w
  8466  201F  0021               	movlb	1	; select bank1
  8467  2020  00ED               	movwf	(_writeSOC$2205+3)^(0+128)
  8468  2021  0020               	movlb	0	; select bank0
  8469  2022  083E               	movf	?___flmul+2,w
  8470  2023  0021               	movlb	1	; select bank1
  8471  2024  00EC               	movwf	(_writeSOC$2205+2)^(0+128)
  8472  2025  0020               	movlb	0	; select bank0
  8473  2026  083D               	movf	?___flmul+1,w
  8474  2027  0021               	movlb	1	; select bank1
  8475  2028  00EB               	movwf	(_writeSOC$2205+1)^(0+128)
  8476  2029  0020               	movlb	0	; select bank0
  8477  202A  083C               	movf	?___flmul,w
  8478  202B  0021               	movlb	1	; select bank1
  8479  202C  00EA               	movwf	_writeSOC$2205^(0+128)
  8480                           
  8481                           ;uart.c: 27: *index += sprintf(&str[*index], "SOC = %0.4f percent \n\r", (soc*100));
  8482  202D  0867               	movf	writeSOC@index^(0+128),w
  8483  202E  0086               	movwf	6
  8484  202F  3001               	movlw	1	; select bank2/3
  8485  2030  0087               	movwf	7
  8486  2031  30FC               	movlw	252
  8487  2032  00E8               	movwf	??_writeSOC^(0+128)
  8488  2033  3025               	movlw	37
  8489  2034  00E9               	movwf	(??_writeSOC^(0+128)+1)
  8490  2035  3F40               	moviw [0]fsr1
  8491  2036  0768               	addwf	??_writeSOC^(0+128),w
  8492  2037  00D1               	movwf	sprintf@sp^(0+128)
  8493  2038  3F41               	moviw [1]fsr1
  8494  2039  3D69               	addwfc	(??_writeSOC+1)^(0+128),w
  8495  203A  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8496  203B  30E9               	movlw	low (STR_1| (0+32768))
  8497  203C  00D3               	movwf	sprintf@f^(0+128)
  8498  203D  30B8               	movlw	high (STR_1| (0+32768))
  8499  203E  00D4               	movwf	(sprintf@f^(0+128)+1)
  8500  203F  086D               	movf	(_writeSOC$2205+3)^(0+128),w
  8501  2040  00D8               	movwf	((?_sprintf+3)^(0+128)+4)
  8502  2041  086C               	movf	(_writeSOC$2205+2)^(0+128),w
  8503  2042  00D7               	movwf	((?_sprintf+2)^(0+128)+4)
  8504  2043  086B               	movf	(_writeSOC$2205+1)^(0+128),w
  8505  2044  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8506  2045  086A               	movf	_writeSOC$2205^(0+128),w
  8507  2046  00D5               	movwf	(?_sprintf^(0+128)+4)
  8508  2047  3180  20B8         	fcall	_sprintf
  8509  2049  0021               	movlb	1	; select bank1
  8510  204A  0867               	movf	writeSOC@index^(0+128),w
  8511  204B  0086               	movwf	6
  8512  204C  3001               	movlw	1	; select bank2/3
  8513  204D  0087               	movwf	7
  8514  204E  0851               	movf	?_sprintf^(0+128),w
  8515  204F  0781               	addwf	1,f
  8516  2050  3141               	addfsr 1,1
  8517  2051  0852               	movf	(?_sprintf+1)^(0+128),w
  8518  2052  3D81               	addwfc	1,f
  8519  2053  317F               	addfsr 1,-1
  8520  2054  0008               	return
  8521  2055                     __end_of_writeSOC:	
  8522                           
  8523                           	psect	text5
  8524  3739                     __ptext5:	
  8525 ;; *************** function _writeCurrent *****************
  8526 ;; Defined at:
  8527 ;;		line 54 in file "uart.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;  current         4   67[BANK1 ] float 
  8530 ;;  index           1   71[BANK1 ] PTR int 
  8531 ;;		 -> writeValuesToUart@index(2), 
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8543 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8545 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8546 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8547 ;;Total ram usage:        7 bytes
  8548 ;; Hardware stack levels used:    1
  8549 ;; Hardware stack levels required when called:    6
  8550 ;; This function calls:
  8551 ;;		_sprintf
  8552 ;; This function is called by:
  8553 ;;		_writeValuesToUart
  8554 ;; This function uses a non-reentrant model
  8555 ;;
  8556                           
  8557                           
  8558                           ;psect for function _writeCurrent
  8559  3739                     _writeCurrent:	
  8560                           
  8561                           ;uart.c: 55: *index += sprintf(&str[*index], "current = %0.4fA\n\r", current);
  8562                           
  8563                           ;incstack = 0
  8564                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8565  3739  0021               	movlb	1	; select bank1
  8566  373A  0867               	movf	writeCurrent@index^(0+128),w
  8567  373B  0086               	movwf	6
  8568  373C  3001               	movlw	1	; select bank2/3
  8569  373D  0087               	movwf	7
  8570  373E  30FC               	movlw	252
  8571  373F  00E8               	movwf	??_writeCurrent^(0+128)
  8572  3740  3025               	movlw	37
  8573  3741  00E9               	movwf	(??_writeCurrent^(0+128)+1)
  8574  3742  3F40               	moviw [0]fsr1
  8575  3743  0768               	addwf	??_writeCurrent^(0+128),w
  8576  3744  00D1               	movwf	sprintf@sp^(0+128)
  8577  3745  3F41               	moviw [1]fsr1
  8578  3746  3D69               	addwfc	(??_writeCurrent+1)^(0+128),w
  8579  3747  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8580  3748  302B               	movlw	low (STR_6| (0+32768))
  8581  3749  00D3               	movwf	sprintf@f^(0+128)
  8582  374A  30B9               	movlw	high (STR_6| (0+32768))
  8583  374B  00D4               	movwf	(sprintf@f^(0+128)+1)
  8584  374C  0866               	movf	(writeCurrent@current+3)^(0+128),w
  8585  374D  00D8               	movwf	((?_sprintf+3)^(0+128)+4)
  8586  374E  0865               	movf	(writeCurrent@current+2)^(0+128),w
  8587  374F  00D7               	movwf	((?_sprintf+2)^(0+128)+4)
  8588  3750  0864               	movf	(writeCurrent@current+1)^(0+128),w
  8589  3751  00D6               	movwf	((?_sprintf+1)^(0+128)+4)
  8590  3752  0863               	movf	writeCurrent@current^(0+128),w
  8591  3753  00D5               	movwf	(?_sprintf^(0+128)+4)
  8592  3754  3180  20B8         	fcall	_sprintf
  8593  3756  0021               	movlb	1	; select bank1
  8594  3757  0867               	movf	writeCurrent@index^(0+128),w
  8595  3758  0086               	movwf	6
  8596  3759  3001               	movlw	1	; select bank2/3
  8597  375A  0087               	movwf	7
  8598  375B  0851               	movf	?_sprintf^(0+128),w
  8599  375C  0781               	addwf	1,f
  8600  375D  3141               	addfsr 1,1
  8601  375E  0852               	movf	(?_sprintf+1)^(0+128),w
  8602  375F  3D81               	addwfc	1,f
  8603  3760  317F               	addfsr 1,-1
  8604  3761  0008               	return
  8605  3762                     __end_of_writeCurrent:	
  8606                           
  8607                           	psect	text6
  8608  2826                     __ptext6:	
  8609 ;; *************** function _clearScreen *****************
  8610 ;; Defined at:
  8611 ;;		line 67 in file "uart.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  numLines        2   67[BANK1 ] int 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  j               2   72[BANK1 ] int 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8625 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8626 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8627 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8628 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8629 ;;Total ram usage:        7 bytes
  8630 ;; Hardware stack levels used:    1
  8631 ;; Hardware stack levels required when called:    6
  8632 ;; This function calls:
  8633 ;;		_sprintf
  8634 ;;		_uartEnable
  8635 ;; This function is called by:
  8636 ;;		_writeValuesToUart
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           
  8641                           ;psect for function _clearScreen
  8642  2826                     _clearScreen:	
  8643                           
  8644                           ;uart.c: 68: int j = 0;
  8645                           
  8646                           ;incstack = 0
  8647                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8648  2826  0021               	movlb	1	; select bank1
  8649  2827  01E8               	clrf	clearScreen@j^(0+128)
  8650  2828  01E9               	clrf	(clearScreen@j+1)^(0+128)
  8651                           
  8652                           ;uart.c: 70: for(j = 0; j < numLines-1; j++){
  8653  2829  01E8               	clrf	clearScreen@j^(0+128)
  8654  282A  01E9               	clrf	(clearScreen@j+1)^(0+128)
  8655  282B                     l7866:	
  8656  282B  0863               	movf	clearScreen@numLines^(0+128),w
  8657  282C  3EFF               	addlw	255
  8658  282D  00E5               	movwf	??_clearScreen^(0+128)
  8659  282E  30FF               	movlw	255
  8660  282F  3D64               	addwfc	(clearScreen@numLines+1)^(0+128),w
  8661  2830  00E6               	movwf	(??_clearScreen+1)^(0+128)
  8662  2831  0869               	movf	(clearScreen@j+1)^(0+128),w
  8663  2832  3A80               	xorlw	128
  8664  2833  00E7               	movwf	(??_clearScreen+2)^(0+128)
  8665  2834  0866               	movf	(??_clearScreen+1)^(0+128),w
  8666  2835  3A80               	xorlw	128
  8667  2836  0267               	subwf	(??_clearScreen+2)^(0+128),w
  8668  2837  1D03               	skipz
  8669  2838  283B               	goto	u10295
  8670  2839  0865               	movf	??_clearScreen^(0+128),w
  8671  283A  0268               	subwf	clearScreen@j^(0+128),w
  8672  283B                     u10295:	
  8673  283B  1803               	btfsc	3,0
  8674  283C  2854               	goto	l7868
  8675                           
  8676                           ;uart.c: 71: sprintf(&str[0], "\33[2K \033[A");
  8677  283D  30FC               	movlw	252
  8678  283E  0021               	movlb	1	; select bank1
  8679  283F  00D1               	movwf	sprintf@sp^(0+128)
  8680  2840  3025               	movlw	37
  8681  2841  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8682  2842  307A               	movlw	low (STR_9| (0+32768))
  8683  2843  00D3               	movwf	sprintf@f^(0+128)
  8684  2844  30B9               	movlw	high (STR_9| (0+32768))
  8685  2845  00D4               	movwf	(sprintf@f^(0+128)+1)
  8686  2846  3180  20B8  31A8   	fcall	_sprintf
  8687                           
  8688                           ;uart.c: 72: uartEnable();
  8689  2849  3190  2001  31A8   	fcall	_uartEnable
  8690  284C                     l275:	
  8691                           ;uart.c: 73: while(PIE1bits.TXIE);
  8692                           
  8693  284C  0021               	movlb	1	; select bank1
  8694  284D  1A11               	btfsc	17,4	;volatile
  8695  284E  284C               	goto	l275
  8696  284F  3001               	movlw	1
  8697  2850  07E8               	addwf	clearScreen@j^(0+128),f
  8698  2851  3000               	movlw	0
  8699  2852  3DE9               	addwfc	(clearScreen@j+1)^(0+128),f
  8700  2853  282B               	goto	l7866
  8701  2854                     l7868:	
  8702                           
  8703                           ;uart.c: 74: }
  8704                           ;uart.c: 76: sprintf(&str[0], "\33[2K \033[A \r");
  8705  2854  30FC               	movlw	252
  8706  2855  0021               	movlb	1	; select bank1
  8707  2856  00D1               	movwf	sprintf@sp^(0+128)
  8708  2857  3025               	movlw	37
  8709  2858  00D2               	movwf	(sprintf@sp^(0+128)+1)
  8710  2859  306F               	movlw	low (STR_10| (0+32768))
  8711  285A  00D3               	movwf	sprintf@f^(0+128)
  8712  285B  30B9               	movlw	high (STR_10| (0+32768))
  8713  285C  00D4               	movwf	(sprintf@f^(0+128)+1)
  8714  285D  3180  20B8  31A8   	fcall	_sprintf
  8715                           
  8716                           ;uart.c: 77: uartEnable();
  8717  2860  3190  2001  31A8   	fcall	_uartEnable
  8718  2863                     l279:	
  8719                           ;uart.c: 78: while(PIE1bits.TXIE);
  8720                           
  8721  2863  0021               	movlb	1	; select bank1
  8722  2864  1E11               	btfss	17,4	;volatile
  8723  2865  0008               	return
  8724  2866  2863               	goto	l279
  8725  2867                     __end_of_clearScreen:	
  8726                           
  8727                           	psect	text7
  8728  1001                     __ptext7:	
  8729 ;; *************** function _uartEnable *****************
  8730 ;; Defined at:
  8731 ;;		line 81 in file "uart.c"
  8732 ;; Parameters:    Size  Location     Type
  8733 ;;		None
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;		None
  8736 ;; Return value:  Size  Location     Type
  8737 ;;                  1    wreg      void 
  8738 ;; Registers used:
  8739 ;;		None
  8740 ;; Tracked objects:
  8741 ;;		On entry : 0/0
  8742 ;;		On exit  : 0/0
  8743 ;;		Unchanged: 0/0
  8744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8749 ;;Total ram usage:        0 bytes
  8750 ;; Hardware stack levels used:    1
  8751 ;; Hardware stack levels required when called:    2
  8752 ;; This function calls:
  8753 ;;		Nothing
  8754 ;; This function is called by:
  8755 ;;		_writeValuesToUart
  8756 ;;		_clearScreen
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           
  8761                           ;psect for function _uartEnable
  8762  1001                     _uartEnable:	
  8763                           
  8764                           ;uart.c: 82: PIE1bits.TXIE = 1;
  8765                           
  8766                           ;incstack = 0
  8767                           ; Regs used in _uartEnable: []
  8768  1001  0021               	movlb	1	; select bank1
  8769  1002  1611               	bsf	17,4	;volatile
  8770  1003  0008               	return
  8771  1004                     __end_of_uartEnable:	
  8772                           
  8773                           	psect	text8
  8774  00B8                     __ptext8:	
  8775 ;; *************** function _sprintf *****************
  8776 ;; Defined at:
  8777 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8778 ;; Parameters:    Size  Location     Type
  8779 ;;  sp              2   49[BANK1 ] PTR unsigned char 
  8780 ;;		 -> str(500), 
  8781 ;;  f               2   51[BANK1 ] PTR const unsigned char 
  8782 ;;		 -> STR_10(11), STR_9(9), STR_8(20), STR_7(15), 
  8783 ;;		 -> STR_6(19), STR_5(38), STR_4(23), STR_3(15), 
  8784 ;;		 -> STR_2(19), STR_1(23), 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  fval            4   21[BANK2 ] PTR const unsigned char 
  8787 ;;  val             4   11[BANK2 ] unsigned long 
  8788 ;;  tmpval          4    7[BANK2 ] struct .
  8789 ;;  prec            2   25[BANK2 ] int 
  8790 ;;  width           2   19[BANK2 ] int 
  8791 ;;  flag            2   17[BANK2 ] unsigned short 
  8792 ;;  exp             2   15[BANK2 ] int 
  8793 ;;  ccnt            2    5[BANK2 ] int 
  8794 ;;  cp              2    0        PTR const unsigned char 
  8795 ;;  len             2    0        unsigned int 
  8796 ;;  c               1   27[BANK2 ] char 
  8797 ;;  ap              1    4[BANK2 ] PTR void [1]
  8798 ;;		 -> ?_sprintf(2), 
  8799 ;;  d               1    0        unsigned char 
  8800 ;; Return value:  Size  Location     Type
  8801 ;;                  2   49[BANK1 ] int 
  8802 ;; Registers used:
  8803 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8804 ;; Tracked objects:
  8805 ;;		On entry : 0/0
  8806 ;;		On exit  : 0/0
  8807 ;;		Unchanged: 0/0
  8808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8809 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8810 ;;      Locals:         0       0       0      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8811 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8812 ;;      Totals:         0       0      18      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8813 ;;Total ram usage:       46 bytes
  8814 ;; Hardware stack levels used:    1
  8815 ;; Hardware stack levels required when called:    5
  8816 ;; This function calls:
  8817 ;;		___awdiv
  8818 ;;		___fladd
  8819 ;;		___flge
  8820 ;;		___flmul
  8821 ;;		___flneg
  8822 ;;		___flsub
  8823 ;;		___fltol
  8824 ;;		___lldiv
  8825 ;;		___llmod
  8826 ;;		___wmul
  8827 ;;		___xxtofl
  8828 ;;		__div_to_l_
  8829 ;;		__tdiv_to_l_
  8830 ;;		_fround
  8831 ;;		_isdigit
  8832 ;;		_scale
  8833 ;; This function is called by:
  8834 ;;		_writeSOC
  8835 ;;		_writeVoltages
  8836 ;;		_writeCurrent
  8837 ;;		_writeTemps
  8838 ;;		_clearScreen
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           
  8843                           ;psect for function _sprintf
  8844  00B8                     _sprintf:	
  8845                           
  8846                           ;doprnt.c: 494: va_list ap;
  8847                           ;doprnt.c: 499: signed char c;
  8848                           ;doprnt.c: 501: int width;
  8849                           ;doprnt.c: 504: int prec;
  8850                           ;doprnt.c: 508: unsigned short flag;
  8851                           ;doprnt.c: 510: int ccnt = 0;
  8852                           
  8853                           ;incstack = 0
  8854                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8855  00B8  0022               	movlb	2	; select bank2
  8856  00B9  01A5               	clrf	sprintf@ccnt^(0+256)
  8857  00BA  01A6               	clrf	(sprintf@ccnt+1)^(0+256)
  8858                           
  8859                           ;doprnt.c: 515: char d;
  8860                           ;doprnt.c: 516: double fval;
  8861                           ;doprnt.c: 517: int exp;
  8862                           ;doprnt.c: 523: union {
  8863                           ;doprnt.c: 524: unsigned long vd;
  8864                           ;doprnt.c: 525: double integ;
  8865                           ;doprnt.c: 526: } tmpval;
  8866                           ;doprnt.c: 528: unsigned long val;
  8867                           ;doprnt.c: 529: unsigned len;
  8868                           ;doprnt.c: 530: const char * cp;
  8869                           ;doprnt.c: 533: *ap = __va_start();
  8870  00BB  30D5               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  8871  00BC  0021               	movlb	1	; select bank1
  8872  00BD  00DD               	movwf	??_sprintf^(0+128)
  8873  00BE  085D               	movf	??_sprintf^(0+128),w
  8874  00BF  0022               	movlb	2	; select bank2
  8875  00C0  00A4               	movwf	sprintf@ap^(0+256)
  8876  00C1                     l7630:	
  8877                           ;doprnt.c: 536: while(c = *f++) {
  8878                           
  8879  00C1  0021               	movlb	1	; select bank1
  8880  00C2  0854               	movf	(sprintf@f+1)^(0+128),w
  8881  00C3  00DE               	movwf	(??_sprintf^(0+128)+1)
  8882  00C4  0853               	movf	sprintf@f^(0+128),w
  8883  00C5  00DD               	movwf	??_sprintf^(0+128)
  8884  00C6  0AD3               	incf	sprintf@f^(0+128),f
  8885  00C7  1903               	skipnz
  8886  00C8  0AD4               	incf	(sprintf@f+1)^(0+128),f
  8887  00C9  085D               	movf	??_sprintf^(0+128),w
  8888  00CA  0084               	movwf	4
  8889  00CB  085E               	movf	(??_sprintf+1)^(0+128),w
  8890  00CC  0085               	movwf	5
  8891  00CD  0800               	movf	0,w	;code access
  8892  00CE  00DF               	movwf	(??_sprintf+2)^(0+128)
  8893  00CF  085F               	movf	(??_sprintf+2)^(0+128),w
  8894  00D0  0022               	movlb	2	; select bank2
  8895  00D1  00BB               	movwf	sprintf@c^(0+256)
  8896  00D2  083B               	movf	sprintf@c^(0+256),w
  8897  00D3  1903               	btfsc	3,2
  8898  00D4  2FE1               	goto	L18
  8899                           
  8900                           ;doprnt.c: 538: if(c != '%')
  8901  00D5  3025               	movlw	37
  8902  00D6  063B               	xorwf	sprintf@c^(0+256),w
  8903  00D7  1903               	btfsc	3,2
  8904  00D8  28EC               	goto	l7292
  8905                           
  8906                           ;doprnt.c: 540: {
  8907                           ;doprnt.c: 541: ((*sp++ = (c)),(++ccnt));
  8908  00D9  0021               	movlb	1	; select bank1
  8909  00DA  0851               	movf	sprintf@sp^(0+128),w
  8910  00DB  0086               	movwf	6
  8911  00DC  0852               	movf	(sprintf@sp+1)^(0+128),w
  8912  00DD  0087               	movwf	7
  8913  00DE  0022               	movlb	2	; select bank2
  8914  00DF  083B               	movf	sprintf@c^(0+256),w
  8915  00E0  0081               	movwf	1
  8916  00E1  3001               	movlw	1
  8917  00E2  0021               	movlb	1	; select bank1
  8918  00E3  07D1               	addwf	sprintf@sp^(0+128),f
  8919  00E4  3000               	movlw	0
  8920  00E5  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
  8921  00E6  3001               	movlw	1
  8922  00E7  0022               	movlb	2	; select bank2
  8923  00E8  07A5               	addwf	sprintf@ccnt^(0+256),f
  8924  00E9  3000               	movlw	0
  8925  00EA  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
  8926                           
  8927                           ;doprnt.c: 542: continue;
  8928  00EB  28C1               	goto	l7630
  8929  00EC                     l7292:	
  8930                           
  8931                           ;doprnt.c: 543: }
  8932                           ;doprnt.c: 546: width = 0;
  8933  00EC  01B3               	clrf	sprintf@width^(0+256)
  8934  00ED  01B4               	clrf	(sprintf@width+1)^(0+256)
  8935                           
  8936                           ;doprnt.c: 548: flag = 0;
  8937  00EE  01B1               	clrf	sprintf@flag^(0+256)
  8938  00EF  01B2               	clrf	(sprintf@flag+1)^(0+256)
  8939                           
  8940                           ;doprnt.c: 551: switch(*f) {
  8941                           
  8942                           ;doprnt.c: 550: for(;;) {
  8943  00F0  28F8               	goto	l7298
  8944  00F1                     l836:	
  8945                           ;doprnt.c: 579: case '0':
  8946                           
  8947                           
  8948                           ;doprnt.c: 580: flag |= 0x04;
  8949  00F1  0022               	movlb	2	; select bank2
  8950  00F2  1531               	bsf	sprintf@flag^(0+256),2
  8951                           
  8952                           ;doprnt.c: 581: f++;
  8953  00F3  3001               	movlw	1
  8954  00F4  0021               	movlb	1	; select bank1
  8955  00F5  07D3               	addwf	sprintf@f^(0+128),f
  8956  00F6  3000               	movlw	0
  8957  00F7  3DD4               	addwfc	(sprintf@f+1)^(0+128),f
  8958  00F8                     l7298:	
  8959                           ;doprnt.c: 584: }
  8960                           
  8961                           ;doprnt.c: 582: continue;
  8962                           
  8963  00F8  0021               	movlb	1	; select bank1
  8964  00F9  0853               	movf	sprintf@f^(0+128),w
  8965  00FA  0084               	movwf	4
  8966  00FB  0854               	movf	(sprintf@f+1)^(0+128),w
  8967  00FC  0085               	movwf	5
  8968  00FD  0800               	movf	0,w	;code access
  8969                           
  8970                           ; Switch size 1, requested type "space"
  8971                           ; Number of cases is 1, Range of values is 48 to 48
  8972                           ; switch strategies available:
  8973                           ; Name         Instructions Cycles
  8974                           ; simple_byte            4     3 (average)
  8975                           ; direct_byte           11     9 (fixed)
  8976                           ; jumptable            263     9 (fixed)
  8977                           ;	Chosen strategy is simple_byte
  8978  00FE  3A30               	xorlw	48	; case 48
  8979  00FF  1903               	skipnz
  8980  0100  28F1               	goto	l836
  8981  0101  2902               	goto	l7300
  8982  0102                     l7300:	
  8983                           ;doprnt.c: 586: }
  8984                           
  8985                           ;doprnt.c: 585: break;
  8986                           
  8987                           
  8988                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8989  0102  0853               	movf	sprintf@f^(0+128),w
  8990  0103  0084               	movwf	4
  8991  0104  0854               	movf	(sprintf@f+1)^(0+128),w
  8992  0105  0085               	movwf	5
  8993  0106  0800               	movf	0,w	;code access
  8994  0107  31B6  263D  3180   	fcall	_isdigit
  8995  010A  1C03               	btfss	3,0
  8996  010B  2942               	goto	l7312
  8997                           
  8998                           ;doprnt.c: 598: width = 0;
  8999  010C  0022               	movlb	2	; select bank2
  9000  010D  01B3               	clrf	sprintf@width^(0+256)
  9001  010E  01B4               	clrf	(sprintf@width+1)^(0+256)
  9002  010F                     l7304:	
  9003                           ;doprnt.c: 599: do {
  9004                           
  9005                           
  9006                           ;doprnt.c: 600: width *= 10;
  9007  010F  300A               	movlw	10
  9008  0110  00F3               	movwf	___wmul@multiplier
  9009  0111  3000               	movlw	0
  9010  0112  00F4               	movwf	___wmul@multiplier+1
  9011  0113  0022               	movlb	2	; select bank2
  9012  0114  0834               	movf	(sprintf@width+1)^(0+256),w
  9013  0115  00F6               	movwf	___wmul@multiplicand+1
  9014  0116  0833               	movf	sprintf@width^(0+256),w
  9015  0117  00F5               	movwf	___wmul@multiplicand
  9016  0118  31B6  26DC  3180   	fcall	___wmul
  9017  011B  0874               	movf	?___wmul+1,w
  9018  011C  0022               	movlb	2	; select bank2
  9019  011D  00B4               	movwf	(sprintf@width+1)^(0+256)
  9020  011E  0873               	movf	?___wmul,w
  9021  011F  00B3               	movwf	sprintf@width^(0+256)
  9022                           
  9023                           ;doprnt.c: 601: width += *f++ - '0';
  9024  0120  0021               	movlb	1	; select bank1
  9025  0121  0853               	movf	sprintf@f^(0+128),w
  9026  0122  0084               	movwf	4
  9027  0123  0854               	movf	(sprintf@f+1)^(0+128),w
  9028  0124  0085               	movwf	5
  9029  0125  0800               	movf	0,w	;code access
  9030  0126  3ED0               	addlw	208
  9031  0127  00DD               	movwf	??_sprintf^(0+128)
  9032  0128  30FF               	movlw	255
  9033  0129  1803               	skipnc
  9034  012A  3000               	movlw	0
  9035  012B  00DE               	movwf	(??_sprintf^(0+128)+1)
  9036  012C  085D               	movf	??_sprintf^(0+128),w
  9037  012D  0022               	movlb	2	; select bank2
  9038  012E  07B3               	addwf	sprintf@width^(0+256),f
  9039  012F  0021               	movlb	1	; select bank1
  9040  0130  085E               	movf	(??_sprintf+1)^(0+128),w
  9041  0131  0022               	movlb	2	; select bank2
  9042  0132  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
  9043  0133  3001               	movlw	1
  9044  0134  0021               	movlb	1	; select bank1
  9045  0135  07D3               	addwf	sprintf@f^(0+128),f
  9046  0136  3000               	movlw	0
  9047  0137  3DD4               	addwfc	(sprintf@f+1)^(0+128),f
  9048                           
  9049                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  9050  0138  0853               	movf	sprintf@f^(0+128),w
  9051  0139  0084               	movwf	4
  9052  013A  0854               	movf	(sprintf@f+1)^(0+128),w
  9053  013B  0085               	movwf	5
  9054  013C  0800               	movf	0,w	;code access
  9055  013D  31B6  263D  3180   	fcall	_isdigit
  9056  0140  1803               	btfsc	3,0
  9057  0141  290F               	goto	l7304
  9058  0142                     l7312:	
  9059                           
  9060                           ;doprnt.c: 608: }
  9061                           ;doprnt.c: 611: if(*f == '.') {
  9062  0142  0021               	movlb	1	; select bank1
  9063  0143  0853               	movf	sprintf@f^(0+128),w
  9064  0144  0084               	movwf	4
  9065  0145  0854               	movf	(sprintf@f+1)^(0+128),w
  9066  0146  0085               	movwf	5
  9067  0147  0012               	moviw fsr0++
  9068  0148  3A2E               	xorlw	46
  9069  0149  1D03               	btfss	3,2
  9070  014A  298A               	goto	l7326
  9071                           
  9072                           ;doprnt.c: 612: flag |= 0x4000;
  9073  014B  0022               	movlb	2	; select bank2
  9074  014C  1732               	bsf	(sprintf@flag^(0+256)+1),6
  9075                           
  9076                           ;doprnt.c: 613: f++;
  9077  014D  3001               	movlw	1
  9078  014E  0021               	movlb	1	; select bank1
  9079  014F  07D3               	addwf	sprintf@f^(0+128),f
  9080  0150  3000               	movlw	0
  9081  0151  3DD4               	addwfc	(sprintf@f+1)^(0+128),f
  9082                           
  9083                           ;doprnt.c: 620: {
  9084                           ;doprnt.c: 621: prec = 0;
  9085  0152  0022               	movlb	2	; select bank2
  9086  0153  01B9               	clrf	sprintf@prec^(0+256)
  9087  0154  01BA               	clrf	(sprintf@prec+1)^(0+256)
  9088  0155                     l7324:	
  9089                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9090                           
  9091  0155  0021               	movlb	1	; select bank1
  9092  0156  0853               	movf	sprintf@f^(0+128),w
  9093  0157  0084               	movwf	4
  9094  0158  0854               	movf	(sprintf@f+1)^(0+128),w
  9095  0159  0085               	movwf	5
  9096  015A  0800               	movf	0,w	;code access
  9097  015B  31B6  263D  3180   	fcall	_isdigit
  9098  015E  1C03               	btfss	3,0
  9099  015F  2991               	goto	l7332
  9100                           
  9101                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9102  0160  0021               	movlb	1	; select bank1
  9103  0161  0853               	movf	sprintf@f^(0+128),w
  9104  0162  0084               	movwf	4
  9105  0163  0854               	movf	(sprintf@f+1)^(0+128),w
  9106  0164  0085               	movwf	5
  9107  0165  0800               	movf	0,w	;code access
  9108  0166  00DD               	movwf	??_sprintf^(0+128)
  9109  0167  01DE               	clrf	(??_sprintf^(0+128)+1)
  9110  0168  0022               	movlb	2	; select bank2
  9111  0169  083A               	movf	(sprintf@prec+1)^(0+256),w
  9112  016A  00F4               	movwf	___wmul@multiplier+1
  9113  016B  0839               	movf	sprintf@prec^(0+256),w
  9114  016C  00F3               	movwf	___wmul@multiplier
  9115  016D  300A               	movlw	10
  9116  016E  00F5               	movwf	___wmul@multiplicand
  9117  016F  3000               	movlw	0
  9118  0170  00F6               	movwf	___wmul@multiplicand+1
  9119  0171  31B6  26DC  3180   	fcall	___wmul
  9120  0174  0021               	movlb	1	; select bank1
  9121  0175  085D               	movf	??_sprintf^(0+128),w
  9122  0176  0773               	addwf	?___wmul,w
  9123  0177  00DF               	movwf	(??_sprintf+2)^(0+128)
  9124  0178  085E               	movf	(??_sprintf+1)^(0+128),w
  9125  0179  3D74               	addwfc	?___wmul+1,w
  9126  017A  00E0               	movwf	(??_sprintf+3)^(0+128)
  9127  017B  085F               	movf	(??_sprintf+2)^(0+128),w
  9128  017C  3ED0               	addlw	208
  9129  017D  0022               	movlb	2	; select bank2
  9130  017E  00B9               	movwf	sprintf@prec^(0+256)
  9131  017F  30FF               	movlw	255
  9132  0180  0021               	movlb	1	; select bank1
  9133  0181  3D60               	addwfc	(??_sprintf+3)^(0+128),w
  9134  0182  0022               	movlb	2	; select bank2
  9135  0183  00BA               	movwf	(sprintf@prec+1)^(0+256)
  9136  0184  3001               	movlw	1
  9137  0185  0021               	movlb	1	; select bank1
  9138  0186  07D3               	addwf	sprintf@f^(0+128),f
  9139  0187  3000               	movlw	0
  9140  0188  3DD4               	addwfc	(sprintf@f+1)^(0+128),f
  9141  0189  2955               	goto	l7324
  9142  018A                     l7326:	
  9143                           ;doprnt.c: 624: }
  9144                           ;doprnt.c: 625: } else {
  9145                           
  9146                           
  9147                           ;doprnt.c: 626: prec = 0;
  9148  018A  0022               	movlb	2	; select bank2
  9149  018B  01B9               	clrf	sprintf@prec^(0+256)
  9150  018C  01BA               	clrf	(sprintf@prec+1)^(0+256)
  9151                           
  9152                           ;doprnt.c: 628: flag |= 0x1000;
  9153  018D  1632               	bsf	(sprintf@flag^(0+256)+1),4
  9154                           
  9155                           ;doprnt.c: 630: }
  9156                           ;doprnt.c: 635: switch(c = *f++) {
  9157  018E  2991               	goto	l7332
  9158  018F                     l851:	
  9159                           ;doprnt.c: 662: case 'f':
  9160                           
  9161                           ;doprnt.c: 638: goto alldone;
  9162                           
  9163                           ;doprnt.c: 637: case 0:
  9164                           
  9165                           
  9166                           ;doprnt.c: 663: flag |= 0x400;
  9167  018F  1532               	bsf	(sprintf@flag^(0+256)+1),2
  9168                           
  9169                           ;doprnt.c: 698: case 'i':
  9170                           ;doprnt.c: 699: break;
  9171                           
  9172                           ;doprnt.c: 697: case 'd':
  9173                           
  9174                           ;doprnt.c: 664: break;
  9175  0190  29AD               	goto	l7334
  9176  0191                     l7332:	
  9177                           ;doprnt.c: 822: }
  9178                           
  9179                           ;doprnt.c: 813: continue;
  9180                           
  9181                           ;doprnt.c: 802: default:
  9182                           
  9183  0191  0021               	movlb	1	; select bank1
  9184  0192  0854               	movf	(sprintf@f+1)^(0+128),w
  9185  0193  00DE               	movwf	(??_sprintf^(0+128)+1)
  9186  0194  0853               	movf	sprintf@f^(0+128),w
  9187  0195  00DD               	movwf	??_sprintf^(0+128)
  9188  0196  0AD3               	incf	sprintf@f^(0+128),f
  9189  0197  1903               	skipnz
  9190  0198  0AD4               	incf	(sprintf@f+1)^(0+128),f
  9191  0199  085D               	movf	??_sprintf^(0+128),w
  9192  019A  0084               	movwf	4
  9193  019B  085E               	movf	(??_sprintf+1)^(0+128),w
  9194  019C  0085               	movwf	5
  9195  019D  0800               	movf	0,w	;code access
  9196  019E  0022               	movlb	2	; select bank2
  9197  019F  00BB               	movwf	sprintf@c^(0+256)
  9198                           
  9199                           ; Switch size 1, requested type "space"
  9200                           ; Number of cases is 4, Range of values is 0 to 105
  9201                           ; switch strategies available:
  9202                           ; Name         Instructions Cycles
  9203                           ; simple_byte           13     7 (average)
  9204                           ; direct_byte          218     6 (fixed)
  9205                           ; jumptable            260     6 (fixed)
  9206                           ;	Chosen strategy is simple_byte
  9207  01A0  3A00               	xorlw	0	; case 0
  9208  01A1  1903               	skipnz
  9209  01A2  2FE1               	goto	L18
  9210  01A3  3A64               	xorlw	100	; case 100
  9211  01A4  1903               	skipnz
  9212  01A5  29AD               	goto	l7334
  9213  01A6  3A02               	xorlw	2	; case 102
  9214  01A7  1903               	skipnz
  9215  01A8  298F               	goto	l851
  9216  01A9  3A0F               	xorlw	15	; case 105
  9217  01AA  1903               	skipnz
  9218  01AB  29AD               	goto	l7334
  9219  01AC  28C1               	goto	l7630
  9220  01AD                     l7334:	
  9221                           
  9222                           ;doprnt.c: 825: if(flag & (0x700)) {
  9223  01AD  3000               	movlw	0
  9224  01AE  0531               	andwf	sprintf@flag^(0+256),w
  9225  01AF  0021               	movlb	1	; select bank1
  9226  01B0  00DD               	movwf	??_sprintf^(0+128)
  9227  01B1  3007               	movlw	7
  9228  01B2  0022               	movlb	2	; select bank2
  9229  01B3  0532               	andwf	(sprintf@flag+1)^(0+256),w
  9230  01B4  0021               	movlb	1	; select bank1
  9231  01B5  00DE               	movwf	(??_sprintf+1)^(0+128)
  9232  01B6  085D               	movf	??_sprintf^(0+128),w
  9233  01B7  045E               	iorwf	(??_sprintf^(0+128)+1),w
  9234  01B8  1903               	btfsc	3,2
  9235  01B9  2F4A               	goto	l7528
  9236                           
  9237                           ;doprnt.c: 827: if(flag & 0x1000)
  9238  01BA  0022               	movlb	2	; select bank2
  9239  01BB  1E32               	btfss	(sprintf@flag+1)^(0+256),4
  9240  01BC  29C1               	goto	l7340
  9241                           
  9242                           ;doprnt.c: 829: prec = 6;
  9243  01BD  3006               	movlw	6
  9244  01BE  00B9               	movwf	sprintf@prec^(0+256)
  9245  01BF  3000               	movlw	0
  9246  01C0  00BA               	movwf	(sprintf@prec^(0+256)+1)
  9247  01C1                     l7340:	
  9248                           
  9249                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  9250  01C1  0824               	movf	sprintf@ap^(0+256),w
  9251  01C2  0086               	movwf	6
  9252  01C3  0187               	clrf	7
  9253  01C4  3F40               	moviw [0]fsr1
  9254  01C5  00B5               	movwf	sprintf@fval^(0+256)
  9255  01C6  3F41               	moviw [1]fsr1
  9256  01C7  00B6               	movwf	(sprintf@fval+1)^(0+256)
  9257  01C8  3F42               	moviw [2]fsr1
  9258  01C9  00B7               	movwf	(sprintf@fval+2)^(0+256)
  9259  01CA  3F43               	moviw [3]fsr1
  9260  01CB  00B8               	movwf	(sprintf@fval+3)^(0+256)
  9261  01CC  3004               	movlw	4
  9262  01CD  0021               	movlb	1	; select bank1
  9263  01CE  00DD               	movwf	??_sprintf^(0+128)
  9264  01CF  085D               	movf	??_sprintf^(0+128),w
  9265  01D0  0022               	movlb	2	; select bank2
  9266  01D1  07A4               	addwf	sprintf@ap^(0+256),f
  9267                           
  9268                           ;doprnt.c: 831: if(fval < 0.0) {
  9269  01D2  0838               	movf	(sprintf@fval+3)^(0+256),w
  9270  01D3  0021               	movlb	1	; select bank1
  9271  01D4  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9272  01D5  0022               	movlb	2	; select bank2
  9273  01D6  0837               	movf	(sprintf@fval+2)^(0+256),w
  9274  01D7  0021               	movlb	1	; select bank1
  9275  01D8  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9276  01D9  0022               	movlb	2	; select bank2
  9277  01DA  0836               	movf	(sprintf@fval+1)^(0+256),w
  9278  01DB  0021               	movlb	1	; select bank1
  9279  01DC  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9280  01DD  0022               	movlb	2	; select bank2
  9281  01DE  0835               	movf	sprintf@fval^(0+256),w
  9282  01DF  0021               	movlb	1	; select bank1
  9283  01E0  00C1               	movwf	___flge@ff1^(0+128)
  9284  01E1  3000               	movlw	0
  9285  01E2  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9286  01E3  3000               	movlw	0
  9287  01E4  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9288  01E5  3000               	movlw	0
  9289  01E6  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9290  01E7  3000               	movlw	0
  9291  01E8  00C5               	movwf	___flge@ff2^(0+128)
  9292  01E9  31AE  26C7  3180   	fcall	___flge
  9293  01EC  1803               	btfsc	3,0
  9294  01ED  2A15               	goto	l7350
  9295                           
  9296                           ;doprnt.c: 832: fval = -fval;
  9297  01EE  0022               	movlb	2	; select bank2
  9298  01EF  0838               	movf	(sprintf@fval+3)^(0+256),w
  9299  01F0  0021               	movlb	1	; select bank1
  9300  01F1  00A3               	movwf	(___flneg@f1+3)^(0+128)
  9301  01F2  0022               	movlb	2	; select bank2
  9302  01F3  0837               	movf	(sprintf@fval+2)^(0+256),w
  9303  01F4  0021               	movlb	1	; select bank1
  9304  01F5  00A2               	movwf	(___flneg@f1+2)^(0+128)
  9305  01F6  0022               	movlb	2	; select bank2
  9306  01F7  0836               	movf	(sprintf@fval+1)^(0+256),w
  9307  01F8  0021               	movlb	1	; select bank1
  9308  01F9  00A1               	movwf	(___flneg@f1+1)^(0+128)
  9309  01FA  0022               	movlb	2	; select bank2
  9310  01FB  0835               	movf	sprintf@fval^(0+256),w
  9311  01FC  0021               	movlb	1	; select bank1
  9312  01FD  00A0               	movwf	___flneg@f1^(0+128)
  9313  01FE  31B5  25EC  3180   	fcall	___flneg
  9314  0201  0021               	movlb	1	; select bank1
  9315  0202  0823               	movf	(?___flneg+3)^(0+128),w
  9316  0203  0022               	movlb	2	; select bank2
  9317  0204  00B8               	movwf	(sprintf@fval+3)^(0+256)
  9318  0205  0021               	movlb	1	; select bank1
  9319  0206  0822               	movf	(?___flneg+2)^(0+128),w
  9320  0207  0022               	movlb	2	; select bank2
  9321  0208  00B7               	movwf	(sprintf@fval+2)^(0+256)
  9322  0209  0021               	movlb	1	; select bank1
  9323  020A  0821               	movf	(?___flneg+1)^(0+128),w
  9324  020B  0022               	movlb	2	; select bank2
  9325  020C  00B6               	movwf	(sprintf@fval+1)^(0+256)
  9326  020D  0021               	movlb	1	; select bank1
  9327  020E  0820               	movf	?___flneg^(0+128),w
  9328  020F  0022               	movlb	2	; select bank2
  9329  0210  00B5               	movwf	sprintf@fval^(0+256)
  9330                           
  9331                           ;doprnt.c: 833: flag |= 0x03;
  9332  0211  3003               	movlw	3
  9333  0212  04B1               	iorwf	sprintf@flag^(0+256),f
  9334  0213  3000               	movlw	0
  9335  0214  04B2               	iorwf	(sprintf@flag+1)^(0+256),f
  9336  0215                     l7350:	
  9337                           
  9338                           ;doprnt.c: 834: }
  9339                           ;doprnt.c: 835: exp = 0;
  9340  0215  0022               	movlb	2	; select bank2
  9341  0216  01AF               	clrf	sprintf@exp^(0+256)
  9342  0217  01B0               	clrf	(sprintf@exp+1)^(0+256)
  9343                           
  9344                           ;doprnt.c: 836: if( fval!=0) {
  9345  0218  0838               	movf	(sprintf@fval+3)^(0+256),w
  9346  0219  0437               	iorwf	(sprintf@fval+2)^(0+256),w
  9347  021A  0436               	iorwf	(sprintf@fval+1)^(0+256),w
  9348  021B  0435               	iorwf	sprintf@fval^(0+256),w
  9349  021C  1903               	skipnz
  9350  021D  2AF3               	goto	l859
  9351                           
  9352                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  9353  021E  0835               	movf	sprintf@fval^(0+256),w
  9354  021F  0021               	movlb	1	; select bank1
  9355  0220  00DD               	movwf	??_sprintf^(0+128)
  9356  0221  0022               	movlb	2	; select bank2
  9357  0222  0836               	movf	(sprintf@fval+1)^(0+256),w
  9358  0223  0021               	movlb	1	; select bank1
  9359  0224  00DE               	movwf	(??_sprintf^(0+128)+1)
  9360  0225  0022               	movlb	2	; select bank2
  9361  0226  0837               	movf	(sprintf@fval+2)^(0+256),w
  9362  0227  0021               	movlb	1	; select bank1
  9363  0228  00DF               	movwf	(??_sprintf^(0+128)+2)
  9364  0229  0022               	movlb	2	; select bank2
  9365  022A  0838               	movf	(sprintf@fval+3)^(0+256),w
  9366  022B  0021               	movlb	1	; select bank1
  9367  022C  00E0               	movwf	(??_sprintf^(0+128)+3)
  9368  022D  1003               	clrc
  9369  022E  0D5F               	rlf	(??_sprintf^(0+128)+2),w
  9370  022F  0D60               	rlf	(??_sprintf^(0+128)+3),w
  9371  0230  3E82               	addlw	130
  9372  0231  0022               	movlb	2	; select bank2
  9373  0232  00AF               	movwf	sprintf@exp^(0+256)
  9374  0233  30FF               	movlw	255
  9375  0234  1803               	skipnc
  9376  0235  3000               	movlw	0
  9377  0236  00B0               	movwf	(sprintf@exp^(0+256)+1)
  9378                           
  9379                           ;doprnt.c: 838: exp--;
  9380  0237  30FF               	movlw	255
  9381  0238  07AF               	addwf	sprintf@exp^(0+256),f
  9382  0239  30FF               	movlw	255
  9383  023A  3DB0               	addwfc	(sprintf@exp+1)^(0+256),f
  9384                           
  9385                           ;doprnt.c: 839: exp *= 3;
  9386  023B  3003               	movlw	3
  9387  023C  00F3               	movwf	___wmul@multiplier
  9388  023D  3000               	movlw	0
  9389  023E  00F4               	movwf	___wmul@multiplier+1
  9390  023F  0830               	movf	(sprintf@exp+1)^(0+256),w
  9391  0240  00F6               	movwf	___wmul@multiplicand+1
  9392  0241  082F               	movf	sprintf@exp^(0+256),w
  9393  0242  00F5               	movwf	___wmul@multiplicand
  9394  0243  31B6  26DC  3180   	fcall	___wmul
  9395  0246  0874               	movf	?___wmul+1,w
  9396  0247  0022               	movlb	2	; select bank2
  9397  0248  00B0               	movwf	(sprintf@exp+1)^(0+256)
  9398  0249  0873               	movf	?___wmul,w
  9399  024A  00AF               	movwf	sprintf@exp^(0+256)
  9400                           
  9401                           ;doprnt.c: 840: exp /= 10;
  9402  024B  300A               	movlw	10
  9403  024C  0020               	movlb	0	; select bank0
  9404  024D  00A2               	movwf	___awdiv@divisor
  9405  024E  3000               	movlw	0
  9406  024F  00A3               	movwf	___awdiv@divisor+1
  9407  0250  0022               	movlb	2	; select bank2
  9408  0251  0830               	movf	(sprintf@exp+1)^(0+256),w
  9409  0252  0020               	movlb	0	; select bank0
  9410  0253  00A5               	movwf	___awdiv@dividend+1
  9411  0254  0022               	movlb	2	; select bank2
  9412  0255  082F               	movf	sprintf@exp^(0+256),w
  9413  0256  0020               	movlb	0	; select bank0
  9414  0257  00A4               	movwf	___awdiv@dividend
  9415  0258  31A9  2142  3180   	fcall	___awdiv
  9416  025B  0020               	movlb	0	; select bank0
  9417  025C  0823               	movf	?___awdiv+1,w
  9418  025D  0022               	movlb	2	; select bank2
  9419  025E  00B0               	movwf	(sprintf@exp+1)^(0+256)
  9420  025F  0020               	movlb	0	; select bank0
  9421  0260  0822               	movf	?___awdiv,w
  9422  0261  0022               	movlb	2	; select bank2
  9423  0262  00AF               	movwf	sprintf@exp^(0+256)
  9424                           
  9425                           ;doprnt.c: 841: if(exp < 0)
  9426  0263  1FB0               	btfss	(sprintf@exp+1)^(0+256),7
  9427  0264  2A69               	goto	l7366
  9428                           
  9429                           ;doprnt.c: 842: exp--;
  9430  0265  30FF               	movlw	255
  9431  0266  07AF               	addwf	sprintf@exp^(0+256),f
  9432  0267  30FF               	movlw	255
  9433  0268  3DB0               	addwfc	(sprintf@exp+1)^(0+256),f
  9434  0269                     l7366:	
  9435                           
  9436                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9437  0269  032F               	decf	sprintf@exp^(0+256),w
  9438  026A  3AFF               	xorlw	255
  9439  026B  3195  2570  3180   	fcall	_scale
  9440  026E  0020               	movlb	0	; select bank0
  9441  026F  0859               	movf	?_scale+3,w
  9442  0270  0022               	movlb	2	; select bank2
  9443  0271  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
  9444  0272  0020               	movlb	0	; select bank0
  9445  0273  0858               	movf	?_scale+2,w
  9446  0274  0022               	movlb	2	; select bank2
  9447  0275  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
  9448  0276  0020               	movlb	0	; select bank0
  9449  0277  0857               	movf	?_scale+1,w
  9450  0278  0022               	movlb	2	; select bank2
  9451  0279  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
  9452  027A  0020               	movlb	0	; select bank0
  9453  027B  0856               	movf	?_scale,w
  9454  027C  0022               	movlb	2	; select bank2
  9455  027D  00A7               	movwf	sprintf@tmpval^(0+256)
  9456                           
  9457                           ;doprnt.c: 847: tmpval.integ *= fval;
  9458  027E  0838               	movf	(sprintf@fval+3)^(0+256),w
  9459  027F  0020               	movlb	0	; select bank0
  9460  0280  00BF               	movwf	___flmul@b+3
  9461  0281  0022               	movlb	2	; select bank2
  9462  0282  0837               	movf	(sprintf@fval+2)^(0+256),w
  9463  0283  0020               	movlb	0	; select bank0
  9464  0284  00BE               	movwf	___flmul@b+2
  9465  0285  0022               	movlb	2	; select bank2
  9466  0286  0836               	movf	(sprintf@fval+1)^(0+256),w
  9467  0287  0020               	movlb	0	; select bank0
  9468  0288  00BD               	movwf	___flmul@b+1
  9469  0289  0022               	movlb	2	; select bank2
  9470  028A  0835               	movf	sprintf@fval^(0+256),w
  9471  028B  0020               	movlb	0	; select bank0
  9472  028C  00BC               	movwf	___flmul@b
  9473  028D  0022               	movlb	2	; select bank2
  9474  028E  082A               	movf	(sprintf@tmpval+3)^(0+256),w
  9475  028F  0020               	movlb	0	; select bank0
  9476  0290  00C3               	movwf	___flmul@a+3
  9477  0291  0022               	movlb	2	; select bank2
  9478  0292  0829               	movf	(sprintf@tmpval+2)^(0+256),w
  9479  0293  0020               	movlb	0	; select bank0
  9480  0294  00C2               	movwf	___flmul@a+2
  9481  0295  0022               	movlb	2	; select bank2
  9482  0296  0828               	movf	(sprintf@tmpval+1)^(0+256),w
  9483  0297  0020               	movlb	0	; select bank0
  9484  0298  00C1               	movwf	___flmul@a+1
  9485  0299  0022               	movlb	2	; select bank2
  9486  029A  0827               	movf	sprintf@tmpval^(0+256),w
  9487  029B  0020               	movlb	0	; select bank0
  9488  029C  00C0               	movwf	___flmul@a
  9489  029D  318B  233E  3180   	fcall	___flmul
  9490  02A0  0020               	movlb	0	; select bank0
  9491  02A1  083F               	movf	?___flmul+3,w
  9492  02A2  0022               	movlb	2	; select bank2
  9493  02A3  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
  9494  02A4  0020               	movlb	0	; select bank0
  9495  02A5  083E               	movf	?___flmul+2,w
  9496  02A6  0022               	movlb	2	; select bank2
  9497  02A7  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
  9498  02A8  0020               	movlb	0	; select bank0
  9499  02A9  083D               	movf	?___flmul+1,w
  9500  02AA  0022               	movlb	2	; select bank2
  9501  02AB  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
  9502  02AC  0020               	movlb	0	; select bank0
  9503  02AD  083C               	movf	?___flmul,w
  9504  02AE  0022               	movlb	2	; select bank2
  9505  02AF  00A7               	movwf	sprintf@tmpval^(0+256)
  9506                           
  9507                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9508  02B0  082A               	movf	(sprintf@tmpval+3)^(0+256),w
  9509  02B1  0021               	movlb	1	; select bank1
  9510  02B2  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9511  02B3  0022               	movlb	2	; select bank2
  9512  02B4  0829               	movf	(sprintf@tmpval+2)^(0+256),w
  9513  02B5  0021               	movlb	1	; select bank1
  9514  02B6  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9515  02B7  0022               	movlb	2	; select bank2
  9516  02B8  0828               	movf	(sprintf@tmpval+1)^(0+256),w
  9517  02B9  0021               	movlb	1	; select bank1
  9518  02BA  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9519  02BB  0022               	movlb	2	; select bank2
  9520  02BC  0827               	movf	sprintf@tmpval^(0+256),w
  9521  02BD  0021               	movlb	1	; select bank1
  9522  02BE  00C1               	movwf	___flge@ff1^(0+128)
  9523  02BF  303F               	movlw	63
  9524  02C0  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9525  02C1  3080               	movlw	128
  9526  02C2  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9527  02C3  3000               	movlw	0
  9528  02C4  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9529  02C5  3000               	movlw	0
  9530  02C6  00C5               	movwf	___flge@ff2^(0+128)
  9531  02C7  31AE  26C7  3180   	fcall	___flge
  9532  02CA  1803               	btfsc	3,0
  9533  02CB  2AD1               	goto	l7374
  9534                           
  9535                           ;doprnt.c: 849: exp--;
  9536  02CC  30FF               	movlw	255
  9537  02CD  0022               	movlb	2	; select bank2
  9538  02CE  07AF               	addwf	sprintf@exp^(0+256),f
  9539  02CF  30FF               	movlw	255
  9540  02D0  2AF2               	goto	L4
  9541  02D1                     l7374:	
  9542                           
  9543                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9544  02D1  0022               	movlb	2	; select bank2
  9545  02D2  082A               	movf	(sprintf@tmpval+3)^(0+256),w
  9546  02D3  0021               	movlb	1	; select bank1
  9547  02D4  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9548  02D5  0022               	movlb	2	; select bank2
  9549  02D6  0829               	movf	(sprintf@tmpval+2)^(0+256),w
  9550  02D7  0021               	movlb	1	; select bank1
  9551  02D8  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9552  02D9  0022               	movlb	2	; select bank2
  9553  02DA  0828               	movf	(sprintf@tmpval+1)^(0+256),w
  9554  02DB  0021               	movlb	1	; select bank1
  9555  02DC  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9556  02DD  0022               	movlb	2	; select bank2
  9557  02DE  0827               	movf	sprintf@tmpval^(0+256),w
  9558  02DF  0021               	movlb	1	; select bank1
  9559  02E0  00C1               	movwf	___flge@ff1^(0+128)
  9560  02E1  3041               	movlw	65
  9561  02E2  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9562  02E3  3020               	movlw	32
  9563  02E4  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9564  02E5  3000               	movlw	0
  9565  02E6  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9566  02E7  3000               	movlw	0
  9567  02E8  00C5               	movwf	___flge@ff2^(0+128)
  9568  02E9  31AE  26C7  3180   	fcall	___flge
  9569  02EC  1C03               	btfss	3,0
  9570  02ED  2AF3               	goto	l859
  9571                           
  9572                           ;doprnt.c: 851: exp++;
  9573  02EE  3001               	movlw	1
  9574  02EF  0022               	movlb	2	; select bank2
  9575  02F0  07AF               	addwf	sprintf@exp^(0+256),f
  9576  02F1  3000               	movlw	0
  9577  02F2                     L4:	
  9578  02F2  3DB0               	addwfc	(sprintf@exp+1)^(0+256),f
  9579  02F3                     l859:	
  9580                           
  9581                           ;doprnt.c: 852: }
  9582                           ;doprnt.c: 1112: if(prec <= 12)
  9583  02F3  0022               	movlb	2	; select bank2
  9584  02F4  083A               	movf	(sprintf@prec+1)^(0+256),w
  9585  02F5  3A80               	xorlw	128
  9586  02F6  0021               	movlb	1	; select bank1
  9587  02F7  00DD               	movwf	??_sprintf^(0+128)
  9588  02F8  3080               	movlw	128
  9589  02F9  025D               	subwf	??_sprintf^(0+128),w
  9590  02FA  1D03               	skipz
  9591  02FB  2AFF               	goto	u9535
  9592  02FC  300D               	movlw	13
  9593  02FD  0022               	movlb	2	; select bank2
  9594  02FE  0239               	subwf	sprintf@prec^(0+256),w
  9595  02FF                     u9535:	
  9596  02FF  1803               	skipnc
  9597  0300  2B39               	goto	l7380
  9598                           
  9599                           ;doprnt.c: 1113: fval += fround(prec);
  9600  0301  0022               	movlb	2	; select bank2
  9601  0302  0839               	movf	sprintf@prec^(0+256),w
  9602  0303  319C  2451  3180   	fcall	_fround
  9603  0306  0020               	movlb	0	; select bank0
  9604  0307  0859               	movf	?_fround+3,w
  9605  0308  0021               	movlb	1	; select bank1
  9606  0309  00AC               	movwf	(___fladd@b+3)^(0+128)
  9607  030A  0020               	movlb	0	; select bank0
  9608  030B  0858               	movf	?_fround+2,w
  9609  030C  0021               	movlb	1	; select bank1
  9610  030D  00AB               	movwf	(___fladd@b+2)^(0+128)
  9611  030E  0020               	movlb	0	; select bank0
  9612  030F  0857               	movf	?_fround+1,w
  9613  0310  0021               	movlb	1	; select bank1
  9614  0311  00AA               	movwf	(___fladd@b+1)^(0+128)
  9615  0312  0020               	movlb	0	; select bank0
  9616  0313  0856               	movf	?_fround,w
  9617  0314  0021               	movlb	1	; select bank1
  9618  0315  00A9               	movwf	___fladd@b^(0+128)
  9619  0316  0022               	movlb	2	; select bank2
  9620  0317  0838               	movf	(sprintf@fval+3)^(0+256),w
  9621  0318  0021               	movlb	1	; select bank1
  9622  0319  00B0               	movwf	(___fladd@a+3)^(0+128)
  9623  031A  0022               	movlb	2	; select bank2
  9624  031B  0837               	movf	(sprintf@fval+2)^(0+256),w
  9625  031C  0021               	movlb	1	; select bank1
  9626  031D  00AF               	movwf	(___fladd@a+2)^(0+128)
  9627  031E  0022               	movlb	2	; select bank2
  9628  031F  0836               	movf	(sprintf@fval+1)^(0+256),w
  9629  0320  0021               	movlb	1	; select bank1
  9630  0321  00AE               	movwf	(___fladd@a+1)^(0+128)
  9631  0322  0022               	movlb	2	; select bank2
  9632  0323  0835               	movf	sprintf@fval^(0+256),w
  9633  0324  0021               	movlb	1	; select bank1
  9634  0325  00AD               	movwf	___fladd@a^(0+128)
  9635  0326  3193  2374  3180   	fcall	___fladd
  9636  0329  0021               	movlb	1	; select bank1
  9637  032A  082C               	movf	(?___fladd+3)^(0+128),w
  9638  032B  0022               	movlb	2	; select bank2
  9639  032C  00B8               	movwf	(sprintf@fval+3)^(0+256)
  9640  032D  0021               	movlb	1	; select bank1
  9641  032E  082B               	movf	(?___fladd+2)^(0+128),w
  9642  032F  0022               	movlb	2	; select bank2
  9643  0330  00B7               	movwf	(sprintf@fval+2)^(0+256)
  9644  0331  0021               	movlb	1	; select bank1
  9645  0332  082A               	movf	(?___fladd+1)^(0+128),w
  9646  0333  0022               	movlb	2	; select bank2
  9647  0334  00B6               	movwf	(sprintf@fval+1)^(0+256)
  9648  0335  0021               	movlb	1	; select bank1
  9649  0336  0829               	movf	?___fladd^(0+128),w
  9650  0337  0022               	movlb	2	; select bank2
  9651  0338  00B5               	movwf	sprintf@fval^(0+256)
  9652  0339                     l7380:	
  9653                           
  9654                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9655  0339  0022               	movlb	2	; select bank2
  9656  033A  0830               	movf	(sprintf@exp+1)^(0+256),w
  9657  033B  3A80               	xorlw	128
  9658  033C  0021               	movlb	1	; select bank1
  9659  033D  00DD               	movwf	??_sprintf^(0+128)
  9660  033E  3080               	movlw	128
  9661  033F  025D               	subwf	??_sprintf^(0+128),w
  9662  0340  1D03               	skipz
  9663  0341  2B45               	goto	u9545
  9664  0342  300A               	movlw	10
  9665  0343  0022               	movlb	2	; select bank2
  9666  0344  022F               	subwf	sprintf@exp^(0+256),w
  9667  0345                     u9545:	
  9668  0345  1803               	skipnc
  9669  0346  2B75               	goto	l7388
  9670  0347  0022               	movlb	2	; select bank2
  9671  0348  0838               	movf	(sprintf@fval+3)^(0+256),w
  9672  0349  0437               	iorwf	(sprintf@fval+2)^(0+256),w
  9673  034A  0436               	iorwf	(sprintf@fval+1)^(0+256),w
  9674  034B  0435               	iorwf	sprintf@fval^(0+256),w
  9675  034C  1903               	skipnz
  9676  034D  2BE8               	goto	l7402
  9677  034E  0838               	movf	(sprintf@fval+3)^(0+256),w
  9678  034F  0021               	movlb	1	; select bank1
  9679  0350  00A3               	movwf	(___fltol@f1+3)^(0+128)
  9680  0351  0022               	movlb	2	; select bank2
  9681  0352  0837               	movf	(sprintf@fval+2)^(0+256),w
  9682  0353  0021               	movlb	1	; select bank1
  9683  0354  00A2               	movwf	(___fltol@f1+2)^(0+128)
  9684  0355  0022               	movlb	2	; select bank2
  9685  0356  0836               	movf	(sprintf@fval+1)^(0+256),w
  9686  0357  0021               	movlb	1	; select bank1
  9687  0358  00A1               	movwf	(___fltol@f1+1)^(0+128)
  9688  0359  0022               	movlb	2	; select bank2
  9689  035A  0835               	movf	sprintf@fval^(0+256),w
  9690  035B  0021               	movlb	1	; select bank1
  9691  035C  00A0               	movwf	___fltol@f1^(0+128)
  9692  035D  31AB  238D  3180   	fcall	___fltol
  9693  0360  0021               	movlb	1	; select bank1
  9694  0361  0823               	movf	(?___fltol+3)^(0+128),w
  9695  0362  0422               	iorwf	(?___fltol+2)^(0+128),w
  9696  0363  0421               	iorwf	(?___fltol+1)^(0+128),w
  9697  0364  0420               	iorwf	?___fltol^(0+128),w
  9698  0365  1D03               	skipz
  9699  0366  2BE8               	goto	l7402
  9700  0367  0022               	movlb	2	; select bank2
  9701  0368  0830               	movf	(sprintf@exp+1)^(0+256),w
  9702  0369  3A80               	xorlw	128
  9703  036A  0021               	movlb	1	; select bank1
  9704  036B  00DD               	movwf	??_sprintf^(0+128)
  9705  036C  3080               	movlw	128
  9706  036D  025D               	subwf	??_sprintf^(0+128),w
  9707  036E  1D03               	skipz
  9708  036F  2B73               	goto	u9575
  9709  0370  3002               	movlw	2
  9710  0371  0022               	movlb	2	; select bank2
  9711  0372  022F               	subwf	sprintf@exp^(0+256),w
  9712  0373                     u9575:	
  9713  0373  1C03               	skipc
  9714  0374  2BE8               	goto	l7402
  9715  0375                     l7388:	
  9716                           
  9717                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9718  0375  0022               	movlb	2	; select bank2
  9719  0376  082A               	movf	(sprintf@tmpval+3)^(0+256),w
  9720  0377  0021               	movlb	1	; select bank1
  9721  0378  00C4               	movwf	(___flge@ff1+3)^(0+128)
  9722  0379  0022               	movlb	2	; select bank2
  9723  037A  0829               	movf	(sprintf@tmpval+2)^(0+256),w
  9724  037B  0021               	movlb	1	; select bank1
  9725  037C  00C3               	movwf	(___flge@ff1+2)^(0+128)
  9726  037D  0022               	movlb	2	; select bank2
  9727  037E  0828               	movf	(sprintf@tmpval+1)^(0+256),w
  9728  037F  0021               	movlb	1	; select bank1
  9729  0380  00C2               	movwf	(___flge@ff1+1)^(0+128)
  9730  0381  0022               	movlb	2	; select bank2
  9731  0382  0827               	movf	sprintf@tmpval^(0+256),w
  9732  0383  0021               	movlb	1	; select bank1
  9733  0384  00C1               	movwf	___flge@ff1^(0+128)
  9734  0385  3040               	movlw	64
  9735  0386  00C8               	movwf	(___flge@ff2+3)^(0+128)
  9736  0387  3089               	movlw	137
  9737  0388  00C7               	movwf	(___flge@ff2+2)^(0+128)
  9738  0389  3070               	movlw	112
  9739  038A  00C6               	movwf	(___flge@ff2+1)^(0+128)
  9740  038B  305F               	movlw	95
  9741  038C  00C5               	movwf	___flge@ff2^(0+128)
  9742  038D  31AE  26C7  3180   	fcall	___flge
  9743  0390  1803               	btfsc	3,0
  9744  0391  2B94               	goto	l7392
  9745                           
  9746                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9747  0392  30F7               	movlw	247
  9748  0393  2B95               	goto	L5
  9749  0394                     l7392:	
  9750                           ;doprnt.c: 1122: }else{
  9751                           
  9752                           
  9753                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9754  0394  30F8               	movlw	248
  9755  0395                     L5:	
  9756  0395  0022               	movlb	2	; select bank2
  9757  0396  07AF               	addwf	sprintf@exp^(0+256),f
  9758  0397  30FF               	movlw	255
  9759  0398  3DB0               	addwfc	(sprintf@exp+1)^(0+256),f
  9760                           
  9761                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9762  0399  082F               	movf	sprintf@exp^(0+256),w
  9763  039A  3195  2570  3180   	fcall	_scale
  9764  039D  0020               	movlb	0	; select bank0
  9765  039E  0859               	movf	?_scale+3,w
  9766  039F  0022               	movlb	2	; select bank2
  9767  03A0  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
  9768  03A1  0020               	movlb	0	; select bank0
  9769  03A2  0858               	movf	?_scale+2,w
  9770  03A3  0022               	movlb	2	; select bank2
  9771  03A4  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
  9772  03A5  0020               	movlb	0	; select bank0
  9773  03A6  0857               	movf	?_scale+1,w
  9774  03A7  0022               	movlb	2	; select bank2
  9775  03A8  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
  9776  03A9  0020               	movlb	0	; select bank0
  9777  03AA  0856               	movf	?_scale,w
  9778  03AB  0022               	movlb	2	; select bank2
  9779  03AC  00A7               	movwf	sprintf@tmpval^(0+256)
  9780  03AD  0838               	movf	(sprintf@fval+3)^(0+256),w
  9781  03AE  0020               	movlb	0	; select bank0
  9782  03AF  00A3               	movwf	__div_to_l_@f1+3
  9783  03B0  0022               	movlb	2	; select bank2
  9784  03B1  0837               	movf	(sprintf@fval+2)^(0+256),w
  9785  03B2  0020               	movlb	0	; select bank0
  9786  03B3  00A2               	movwf	__div_to_l_@f1+2
  9787  03B4  0022               	movlb	2	; select bank2
  9788  03B5  0836               	movf	(sprintf@fval+1)^(0+256),w
  9789  03B6  0020               	movlb	0	; select bank0
  9790  03B7  00A1               	movwf	__div_to_l_@f1+1
  9791  03B8  0022               	movlb	2	; select bank2
  9792  03B9  0835               	movf	sprintf@fval^(0+256),w
  9793  03BA  0020               	movlb	0	; select bank0
  9794  03BB  00A0               	movwf	__div_to_l_@f1
  9795  03BC  0022               	movlb	2	; select bank2
  9796  03BD  082A               	movf	(sprintf@tmpval+3)^(0+256),w
  9797  03BE  0020               	movlb	0	; select bank0
  9798  03BF  00A7               	movwf	__div_to_l_@f2+3
  9799  03C0  0022               	movlb	2	; select bank2
  9800  03C1  0829               	movf	(sprintf@tmpval+2)^(0+256),w
  9801  03C2  0020               	movlb	0	; select bank0
  9802  03C3  00A6               	movwf	__div_to_l_@f2+2
  9803  03C4  0022               	movlb	2	; select bank2
  9804  03C5  0828               	movf	(sprintf@tmpval+1)^(0+256),w
  9805  03C6  0020               	movlb	0	; select bank0
  9806  03C7  00A5               	movwf	__div_to_l_@f2+1
  9807  03C8  0022               	movlb	2	; select bank2
  9808  03C9  0827               	movf	sprintf@tmpval^(0+256),w
  9809  03CA  0020               	movlb	0	; select bank0
  9810  03CB  00A4               	movwf	__div_to_l_@f2
  9811  03CC  31A1  210B  3180   	fcall	__div_to_l_
  9812  03CF  0020               	movlb	0	; select bank0
  9813  03D0  0823               	movf	?__div_to_l_+3,w
  9814  03D1  0022               	movlb	2	; select bank2
  9815  03D2  00AE               	movwf	(sprintf@val+3)^(0+256)
  9816  03D3  0020               	movlb	0	; select bank0
  9817  03D4  0822               	movf	?__div_to_l_+2,w
  9818  03D5  0022               	movlb	2	; select bank2
  9819  03D6  00AD               	movwf	(sprintf@val+2)^(0+256)
  9820  03D7  0020               	movlb	0	; select bank0
  9821  03D8  0821               	movf	?__div_to_l_+1,w
  9822  03D9  0022               	movlb	2	; select bank2
  9823  03DA  00AC               	movwf	(sprintf@val+1)^(0+256)
  9824  03DB  0020               	movlb	0	; select bank0
  9825  03DC  0820               	movf	?__div_to_l_,w
  9826  03DD  0022               	movlb	2	; select bank2
  9827  03DE  00AB               	movwf	sprintf@val^(0+256)
  9828                           
  9829                           ;doprnt.c: 1129: fval = 0.0;
  9830  03DF  3000               	movlw	0
  9831  03E0  00B8               	movwf	(sprintf@fval+3)^(0+256)
  9832  03E1  3000               	movlw	0
  9833  03E2  00B7               	movwf	(sprintf@fval+2)^(0+256)
  9834  03E3  3000               	movlw	0
  9835  03E4  00B6               	movwf	(sprintf@fval+1)^(0+256)
  9836  03E5  3000               	movlw	0
  9837  03E6  00B5               	movwf	sprintf@fval^(0+256)
  9838                           
  9839                           ;doprnt.c: 1130: } else {
  9840  03E7  2C53               	goto	l7406
  9841  03E8                     l7402:	
  9842                           
  9843                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9844  03E8  0022               	movlb	2	; select bank2
  9845  03E9  0838               	movf	(sprintf@fval+3)^(0+256),w
  9846  03EA  0021               	movlb	1	; select bank1
  9847  03EB  00A3               	movwf	(___fltol@f1+3)^(0+128)
  9848  03EC  0022               	movlb	2	; select bank2
  9849  03ED  0837               	movf	(sprintf@fval+2)^(0+256),w
  9850  03EE  0021               	movlb	1	; select bank1
  9851  03EF  00A2               	movwf	(___fltol@f1+2)^(0+128)
  9852  03F0  0022               	movlb	2	; select bank2
  9853  03F1  0836               	movf	(sprintf@fval+1)^(0+256),w
  9854  03F2  0021               	movlb	1	; select bank1
  9855  03F3  00A1               	movwf	(___fltol@f1+1)^(0+128)
  9856  03F4  0022               	movlb	2	; select bank2
  9857  03F5  0835               	movf	sprintf@fval^(0+256),w
  9858  03F6  0021               	movlb	1	; select bank1
  9859  03F7  00A0               	movwf	___fltol@f1^(0+128)
  9860  03F8  31AB  238D  3180   	fcall	___fltol
  9861  03FB  0021               	movlb	1	; select bank1
  9862  03FC  0823               	movf	(?___fltol+3)^(0+128),w
  9863  03FD  0022               	movlb	2	; select bank2
  9864  03FE  00AE               	movwf	(sprintf@val+3)^(0+256)
  9865  03FF  0021               	movlb	1	; select bank1
  9866  0400  0822               	movf	(?___fltol+2)^(0+128),w
  9867  0401  0022               	movlb	2	; select bank2
  9868  0402  00AD               	movwf	(sprintf@val+2)^(0+256)
  9869  0403  0021               	movlb	1	; select bank1
  9870  0404  0821               	movf	(?___fltol+1)^(0+128),w
  9871  0405  0022               	movlb	2	; select bank2
  9872  0406  00AC               	movwf	(sprintf@val+1)^(0+256)
  9873  0407  0021               	movlb	1	; select bank1
  9874  0408  0820               	movf	?___fltol^(0+128),w
  9875  0409  0022               	movlb	2	; select bank2
  9876  040A  00AB               	movwf	sprintf@val^(0+256)
  9877                           
  9878                           ;doprnt.c: 1132: fval -= (double)val;
  9879  040B  082E               	movf	(sprintf@val+3)^(0+256),w
  9880  040C  0020               	movlb	0	; select bank0
  9881  040D  00B1               	movwf	___xxtofl@val+3
  9882  040E  0022               	movlb	2	; select bank2
  9883  040F  082D               	movf	(sprintf@val+2)^(0+256),w
  9884  0410  0020               	movlb	0	; select bank0
  9885  0411  00B0               	movwf	___xxtofl@val+2
  9886  0412  0022               	movlb	2	; select bank2
  9887  0413  082C               	movf	(sprintf@val+1)^(0+256),w
  9888  0414  0020               	movlb	0	; select bank0
  9889  0415  00AF               	movwf	___xxtofl@val+1
  9890  0416  0022               	movlb	2	; select bank2
  9891  0417  082B               	movf	sprintf@val^(0+256),w
  9892  0418  0020               	movlb	0	; select bank0
  9893  0419  00AE               	movwf	___xxtofl@val
  9894  041A  3000               	movlw	0
  9895  041B  31AE  2631  3180   	fcall	___xxtofl
  9896  041E  0020               	movlb	0	; select bank0
  9897  041F  0831               	movf	?___xxtofl+3,w
  9898  0420  0021               	movlb	1	; select bank1
  9899  0421  00C4               	movwf	(___flsub@a+3)^(0+128)
  9900  0422  0020               	movlb	0	; select bank0
  9901  0423  0830               	movf	?___xxtofl+2,w
  9902  0424  0021               	movlb	1	; select bank1
  9903  0425  00C3               	movwf	(___flsub@a+2)^(0+128)
  9904  0426  0020               	movlb	0	; select bank0
  9905  0427  082F               	movf	?___xxtofl+1,w
  9906  0428  0021               	movlb	1	; select bank1
  9907  0429  00C2               	movwf	(___flsub@a+1)^(0+128)
  9908  042A  0020               	movlb	0	; select bank0
  9909  042B  082E               	movf	?___xxtofl,w
  9910  042C  0021               	movlb	1	; select bank1
  9911  042D  00C1               	movwf	___flsub@a^(0+128)
  9912  042E  0022               	movlb	2	; select bank2
  9913  042F  0838               	movf	(sprintf@fval+3)^(0+256),w
  9914  0430  0021               	movlb	1	; select bank1
  9915  0431  00C8               	movwf	(___flsub@b+3)^(0+128)
  9916  0432  0022               	movlb	2	; select bank2
  9917  0433  0837               	movf	(sprintf@fval+2)^(0+256),w
  9918  0434  0021               	movlb	1	; select bank1
  9919  0435  00C7               	movwf	(___flsub@b+2)^(0+128)
  9920  0436  0022               	movlb	2	; select bank2
  9921  0437  0836               	movf	(sprintf@fval+1)^(0+256),w
  9922  0438  0021               	movlb	1	; select bank1
  9923  0439  00C6               	movwf	(___flsub@b+1)^(0+128)
  9924  043A  0022               	movlb	2	; select bank2
  9925  043B  0835               	movf	sprintf@fval^(0+256),w
  9926  043C  0021               	movlb	1	; select bank1
  9927  043D  00C5               	movwf	___flsub@b^(0+128)
  9928  043E  31B6  26FA  3180   	fcall	___flsub
  9929  0441  0021               	movlb	1	; select bank1
  9930  0442  0844               	movf	(?___flsub+3)^(0+128),w
  9931  0443  0022               	movlb	2	; select bank2
  9932  0444  00B8               	movwf	(sprintf@fval+3)^(0+256)
  9933  0445  0021               	movlb	1	; select bank1
  9934  0446  0843               	movf	(?___flsub+2)^(0+128),w
  9935  0447  0022               	movlb	2	; select bank2
  9936  0448  00B7               	movwf	(sprintf@fval+2)^(0+256)
  9937  0449  0021               	movlb	1	; select bank1
  9938  044A  0842               	movf	(?___flsub+1)^(0+128),w
  9939  044B  0022               	movlb	2	; select bank2
  9940  044C  00B6               	movwf	(sprintf@fval+1)^(0+256)
  9941  044D  0021               	movlb	1	; select bank1
  9942  044E  0841               	movf	?___flsub^(0+128),w
  9943  044F  0022               	movlb	2	; select bank2
  9944  0450  00B5               	movwf	sprintf@fval^(0+256)
  9945                           
  9946                           ;doprnt.c: 1133: exp = 0;
  9947  0451  01AF               	clrf	sprintf@exp^(0+256)
  9948  0452  01B0               	clrf	(sprintf@exp+1)^(0+256)
  9949  0453                     l7406:	
  9950                           
  9951                           ;doprnt.c: 1134: }
  9952                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9953  0453  01BB               	clrf	sprintf@c^(0+256)
  9954  0454  0ABB               	incf	sprintf@c^(0+256),f
  9955  0455  300A               	movlw	10
  9956  0456  063B               	xorwf	sprintf@c^(0+256),w
  9957  0457  1903               	btfsc	3,2
  9958  0458  2C90               	goto	l7418
  9959  0459                     l7412:	
  9960                           
  9961                           ;doprnt.c: 1137: if(val < dpowers[c])
  9962  0459  083B               	movf	sprintf@c^(0+256),w
  9963  045A  0021               	movlb	1	; select bank1
  9964  045B  00DD               	movwf	??_sprintf^(0+128)
  9965  045C  01DE               	clrf	(??_sprintf^(0+128)+1)
  9966  045D  35DD               	lslf	??_sprintf^(0+128),f
  9967  045E  0DDE               	rlf	(??_sprintf^(0+128)+1),f
  9968  045F  35DD               	lslf	??_sprintf^(0+128),f
  9969  0460  0DDE               	rlf	(??_sprintf^(0+128)+1),f
  9970  0461  309A               	movlw	low (_dpowers| (0+32768))
  9971  0462  075D               	addwf	??_sprintf^(0+128),w
  9972  0463  0084               	movwf	4
  9973  0464  30B8               	movlw	high (_dpowers| (0+32768))
  9974  0465  3D5E               	addwfc	(??_sprintf+1)^(0+128),w
  9975  0466  0085               	movwf	5
  9976  0467  3F00               	moviw [0]fsr0
  9977  0468  00DF               	movwf	(??_sprintf+2)^(0+128)
  9978  0469  3F01               	moviw [1]fsr0
  9979  046A  00E0               	movwf	((??_sprintf+2)^(0+128)+1)
  9980  046B  3F02               	moviw [2]fsr0
  9981  046C  00E1               	movwf	((??_sprintf+2)^(0+128)+2)
  9982  046D  3F03               	moviw [3]fsr0
  9983  046E  00E2               	movwf	((??_sprintf+2)^(0+128)+3)
  9984  046F  0862               	movf	(??_sprintf+5)^(0+128),w
  9985  0470  0022               	movlb	2	; select bank2
  9986  0471  022E               	subwf	(sprintf@val+3)^(0+256),w
  9987  0472  1D03               	skipz
  9988  0473  2C84               	goto	u9605
  9989  0474  0021               	movlb	1	; select bank1
  9990  0475  0861               	movf	(??_sprintf+4)^(0+128),w
  9991  0476  0022               	movlb	2	; select bank2
  9992  0477  022D               	subwf	(sprintf@val+2)^(0+256),w
  9993  0478  1D03               	skipz
  9994  0479  2C84               	goto	u9605
  9995  047A  0021               	movlb	1	; select bank1
  9996  047B  0860               	movf	(??_sprintf+3)^(0+128),w
  9997  047C  0022               	movlb	2	; select bank2
  9998  047D  022C               	subwf	(sprintf@val+1)^(0+256),w
  9999  047E  1D03               	skipz
 10000  047F  2C84               	goto	u9605
 10001  0480  0021               	movlb	1	; select bank1
 10002  0481  085F               	movf	(??_sprintf+2)^(0+128),w
 10003  0482  0022               	movlb	2	; select bank2
 10004  0483  022B               	subwf	sprintf@val^(0+256),w
 10005  0484                     u9605:	
 10006  0484  1C03               	btfss	3,0
 10007  0485  2C90               	goto	l7418
 10008                           
 10009                           ;doprnt.c: 1138: break;
 10010  0486  3001               	movlw	1
 10011  0487  0021               	movlb	1	; select bank1
 10012  0488  00DD               	movwf	??_sprintf^(0+128)
 10013  0489  085D               	movf	??_sprintf^(0+128),w
 10014  048A  0022               	movlb	2	; select bank2
 10015  048B  07BB               	addwf	sprintf@c^(0+256),f
 10016  048C  300A               	movlw	10
 10017  048D  063B               	xorwf	sprintf@c^(0+256),w
 10018  048E  1D03               	btfss	3,2
 10019  048F  2C59               	goto	l7412
 10020  0490                     l7418:	
 10021                           
 10022                           ;doprnt.c: 1142: width -= prec + c + exp;
 10023  0490  083B               	movf	sprintf@c^(0+256),w
 10024  0491  0021               	movlb	1	; select bank1
 10025  0492  00DD               	movwf	??_sprintf^(0+128)
 10026  0493  01DE               	clrf	(??_sprintf^(0+128)+1)
 10027  0494  1BDD               	btfsc	??_sprintf^(0+128),7
 10028  0495  03DE               	decf	(??_sprintf^(0+128)+1),f
 10029  0496  0022               	movlb	2	; select bank2
 10030  0497  0839               	movf	sprintf@prec^(0+256),w
 10031  0498  0021               	movlb	1	; select bank1
 10032  0499  075D               	addwf	??_sprintf^(0+128),w
 10033  049A  00DF               	movwf	(??_sprintf+2)^(0+128)
 10034  049B  0022               	movlb	2	; select bank2
 10035  049C  083A               	movf	(sprintf@prec+1)^(0+256),w
 10036  049D  0021               	movlb	1	; select bank1
 10037  049E  3D5E               	addwfc	(??_sprintf+1)^(0+128),w
 10038  049F  00E0               	movwf	(??_sprintf+3)^(0+128)
 10039  04A0  0022               	movlb	2	; select bank2
 10040  04A1  082F               	movf	sprintf@exp^(0+256),w
 10041  04A2  0021               	movlb	1	; select bank1
 10042  04A3  075F               	addwf	(??_sprintf+2)^(0+128),w
 10043  04A4  00E1               	movwf	(??_sprintf+4)^(0+128)
 10044  04A5  0022               	movlb	2	; select bank2
 10045  04A6  0830               	movf	(sprintf@exp+1)^(0+256),w
 10046  04A7  0021               	movlb	1	; select bank1
 10047  04A8  3D60               	addwfc	(??_sprintf+3)^(0+128),w
 10048  04A9  00E2               	movwf	(??_sprintf+5)^(0+128)
 10049  04AA  0861               	movf	(??_sprintf+4)^(0+128),w
 10050  04AB  0022               	movlb	2	; select bank2
 10051  04AC  02B3               	subwf	sprintf@width^(0+256),f
 10052  04AD  0021               	movlb	1	; select bank1
 10053  04AE  0862               	movf	(??_sprintf+5)^(0+128),w
 10054  04AF  0022               	movlb	2	; select bank2
 10055  04B0  3BB4               	subwfb	(sprintf@width+1)^(0+256),f
 10056                           
 10057                           ;doprnt.c: 1143: if(
 10058                           ;doprnt.c: 1147: prec)
 10059  04B1  0839               	movf	sprintf@prec^(0+256),w
 10060  04B2  043A               	iorwf	(sprintf@prec+1)^(0+256),w
 10061  04B3  1903               	btfsc	3,2
 10062  04B4  2CB9               	goto	l7422
 10063                           
 10064                           ;doprnt.c: 1148: width--;
 10065  04B5  30FF               	movlw	255
 10066  04B6  07B3               	addwf	sprintf@width^(0+256),f
 10067  04B7  30FF               	movlw	255
 10068  04B8  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 10069  04B9                     l7422:	
 10070                           
 10071                           ;doprnt.c: 1149: if(flag & 0x03)
 10072  04B9  3003               	movlw	3
 10073  04BA  0531               	andwf	sprintf@flag^(0+256),w
 10074  04BB  0021               	movlb	1	; select bank1
 10075  04BC  00DD               	movwf	??_sprintf^(0+128)
 10076  04BD  3000               	movlw	0
 10077  04BE  0022               	movlb	2	; select bank2
 10078  04BF  0532               	andwf	(sprintf@flag+1)^(0+256),w
 10079  04C0  0021               	movlb	1	; select bank1
 10080  04C1  00DE               	movwf	(??_sprintf+1)^(0+128)
 10081  04C2  085D               	movf	??_sprintf^(0+128),w
 10082  04C3  045E               	iorwf	(??_sprintf^(0+128)+1),w
 10083  04C4  1903               	btfsc	3,2
 10084  04C5  2CCB               	goto	l7426
 10085                           
 10086                           ;doprnt.c: 1150: width--;
 10087  04C6  30FF               	movlw	255
 10088  04C7  0022               	movlb	2	; select bank2
 10089  04C8  07B3               	addwf	sprintf@width^(0+256),f
 10090  04C9  30FF               	movlw	255
 10091  04CA  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 10092  04CB                     l7426:	
 10093                           
 10094                           ;doprnt.c: 1153: if(flag & 0x04) {
 10095  04CB  0022               	movlb	2	; select bank2
 10096  04CC  1D31               	btfss	sprintf@flag^(0+256),2
 10097  04CD  2D21               	goto	l7454
 10098                           
 10099                           ;doprnt.c: 1157: if(flag & 0x03)
 10100  04CE  3003               	movlw	3
 10101  04CF  0531               	andwf	sprintf@flag^(0+256),w
 10102  04D0  0021               	movlb	1	; select bank1
 10103  04D1  00DD               	movwf	??_sprintf^(0+128)
 10104  04D2  3000               	movlw	0
 10105  04D3  0022               	movlb	2	; select bank2
 10106  04D4  0532               	andwf	(sprintf@flag+1)^(0+256),w
 10107  04D5  0021               	movlb	1	; select bank1
 10108  04D6  00DE               	movwf	(??_sprintf+1)^(0+128)
 10109  04D7  085D               	movf	??_sprintf^(0+128),w
 10110  04D8  045E               	iorwf	(??_sprintf^(0+128)+1),w
 10111  04D9  1903               	btfsc	3,2
 10112  04DA  2CEA               	goto	l7444
 10113                           
 10114                           ;doprnt.c: 1159: ((*sp++ = ('-')),(++ccnt));
 10115  04DB  0851               	movf	sprintf@sp^(0+128),w
 10116  04DC  0086               	movwf	6
 10117  04DD  0852               	movf	(sprintf@sp+1)^(0+128),w
 10118  04DE  0087               	movwf	7
 10119  04DF  302D               	movlw	45
 10120  04E0  0081               	movwf	1
 10121  04E1  3001               	movlw	1
 10122  04E2  07D1               	addwf	sprintf@sp^(0+128),f
 10123  04E3  3000               	movlw	0
 10124  04E4  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10125  04E5  3001               	movlw	1
 10126  04E6  0022               	movlb	2	; select bank2
 10127  04E7  07A5               	addwf	sprintf@ccnt^(0+256),f
 10128  04E8  3000               	movlw	0
 10129  04E9  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10130  04EA                     l7444:	
 10131                           ;doprnt.c: 1168: while(width > 0) {
 10132                           
 10133  04EA  0022               	movlb	2	; select bank2
 10134  04EB  0834               	movf	(sprintf@width+1)^(0+256),w
 10135  04EC  3A80               	xorlw	128
 10136  04ED  0021               	movlb	1	; select bank1
 10137  04EE  00DD               	movwf	??_sprintf^(0+128)
 10138  04EF  3080               	movlw	128
 10139  04F0  025D               	subwf	??_sprintf^(0+128),w
 10140  04F1  1D03               	skipz
 10141  04F2  2CF6               	goto	u9665
 10142  04F3  3001               	movlw	1
 10143  04F4  0022               	movlb	2	; select bank2
 10144  04F5  0233               	subwf	sprintf@width^(0+256),w
 10145  04F6                     u9665:	
 10146  04F6  1C03               	btfss	3,0
 10147  04F7  2D4C               	goto	l7474
 10148                           
 10149                           ;doprnt.c: 1169: ((*sp++ = ('0')),(++ccnt));
 10150  04F8  0021               	movlb	1	; select bank1
 10151  04F9  0851               	movf	sprintf@sp^(0+128),w
 10152  04FA  0086               	movwf	6
 10153  04FB  0852               	movf	(sprintf@sp+1)^(0+128),w
 10154  04FC  0087               	movwf	7
 10155  04FD  3030               	movlw	48
 10156  04FE  0081               	movwf	1
 10157  04FF  3001               	movlw	1
 10158  0500  07D1               	addwf	sprintf@sp^(0+128),f
 10159  0501  3000               	movlw	0
 10160  0502  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10161  0503  3001               	movlw	1
 10162  0504  0022               	movlb	2	; select bank2
 10163  0505  07A5               	addwf	sprintf@ccnt^(0+256),f
 10164  0506  3000               	movlw	0
 10165  0507  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10166                           
 10167                           ;doprnt.c: 1170: width--;
 10168  0508  30FF               	movlw	255
 10169  0509  07B3               	addwf	sprintf@width^(0+256),f
 10170  050A  30FF               	movlw	255
 10171  050B  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 10172  050C  2CEA               	goto	l7444
 10173  050D                     l7446:	
 10174                           ;doprnt.c: 1175: {
 10175                           ;doprnt.c: 1180: while(width > 0) {
 10176                           
 10177                           ;doprnt.c: 1171: }
 10178                           ;doprnt.c: 1173: } else
 10179                           
 10180                           
 10181                           ;doprnt.c: 1181: ((*sp++ = (' ')),(++ccnt));
 10182  050D  0021               	movlb	1	; select bank1
 10183  050E  0851               	movf	sprintf@sp^(0+128),w
 10184  050F  0086               	movwf	6
 10185  0510  0852               	movf	(sprintf@sp+1)^(0+128),w
 10186  0511  0087               	movwf	7
 10187  0512  3020               	movlw	32
 10188  0513  0081               	movwf	1
 10189  0514  3001               	movlw	1
 10190  0515  07D1               	addwf	sprintf@sp^(0+128),f
 10191  0516  3000               	movlw	0
 10192  0517  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10193  0518  3001               	movlw	1
 10194  0519  0022               	movlb	2	; select bank2
 10195  051A  07A5               	addwf	sprintf@ccnt^(0+256),f
 10196  051B  3000               	movlw	0
 10197  051C  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10198                           
 10199                           ;doprnt.c: 1182: width--;
 10200  051D  30FF               	movlw	255
 10201  051E  07B3               	addwf	sprintf@width^(0+256),f
 10202  051F  30FF               	movlw	255
 10203  0520  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 10204  0521                     l7454:	
 10205  0521  0022               	movlb	2	; select bank2
 10206  0522  0834               	movf	(sprintf@width+1)^(0+256),w
 10207  0523  3A80               	xorlw	128
 10208  0524  0021               	movlb	1	; select bank1
 10209  0525  00DD               	movwf	??_sprintf^(0+128)
 10210  0526  3080               	movlw	128
 10211  0527  025D               	subwf	??_sprintf^(0+128),w
 10212  0528  1D03               	skipz
 10213  0529  2D2D               	goto	u9675
 10214  052A  3001               	movlw	1
 10215  052B  0022               	movlb	2	; select bank2
 10216  052C  0233               	subwf	sprintf@width^(0+256),w
 10217  052D                     u9675:	
 10218  052D  1803               	skipnc
 10219  052E  2D0D               	goto	l7446
 10220                           
 10221                           ;doprnt.c: 1183: }
 10222                           ;doprnt.c: 1188: if(flag & 0x03)
 10223  052F  3003               	movlw	3
 10224  0530  0022               	movlb	2	; select bank2
 10225  0531  0531               	andwf	sprintf@flag^(0+256),w
 10226  0532  0021               	movlb	1	; select bank1
 10227  0533  00DD               	movwf	??_sprintf^(0+128)
 10228  0534  3000               	movlw	0
 10229  0535  0022               	movlb	2	; select bank2
 10230  0536  0532               	andwf	(sprintf@flag+1)^(0+256),w
 10231  0537  0021               	movlb	1	; select bank1
 10232  0538  00DE               	movwf	(??_sprintf+1)^(0+128)
 10233  0539  085D               	movf	??_sprintf^(0+128),w
 10234  053A  045E               	iorwf	(??_sprintf^(0+128)+1),w
 10235  053B  1903               	btfsc	3,2
 10236  053C  2D4C               	goto	l7474
 10237                           
 10238                           ;doprnt.c: 1190: ((*sp++ = ('-')),(++ccnt));
 10239  053D  0851               	movf	sprintf@sp^(0+128),w
 10240  053E  0086               	movwf	6
 10241  053F  0852               	movf	(sprintf@sp+1)^(0+128),w
 10242  0540  0087               	movwf	7
 10243  0541  302D               	movlw	45
 10244  0542                     L10:	
 10245  0542  0081               	movwf	1
 10246  0543  3001               	movlw	1
 10247  0544  07D1               	addwf	sprintf@sp^(0+128),f
 10248  0545  3000               	movlw	0
 10249  0546  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10250  0547  3001               	movlw	1
 10251  0548  0022               	movlb	2	; select bank2
 10252  0549  07A5               	addwf	sprintf@ccnt^(0+256),f
 10253  054A  3000               	movlw	0
 10254  054B  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10255  054C                     l7474:	
 10256  054C  30FF               	movlw	255
 10257  054D  0021               	movlb	1	; select bank1
 10258  054E  00DD               	movwf	??_sprintf^(0+128)
 10259  054F  085D               	movf	??_sprintf^(0+128),w
 10260  0550  0022               	movlb	2	; select bank2
 10261  0551  07BB               	addwf	sprintf@c^(0+256),f
 10262  0552  0A3B               	incf	sprintf@c^(0+256),w
 10263  0553  1903               	btfsc	3,2
 10264  0554  2DD9               	goto	l7484
 10265                           
 10266                           ;doprnt.c: 1200: {
 10267                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10268                           
 10269                           ;doprnt.c: 1195: }
 10270                           ;doprnt.c: 1196: while(c--) {
 10271  0555  083B               	movf	sprintf@c^(0+256),w
 10272  0556  0021               	movlb	1	; select bank1
 10273  0557  00DD               	movwf	??_sprintf^(0+128)
 10274  0558  01DE               	clrf	(??_sprintf^(0+128)+1)
 10275  0559  35DD               	lslf	??_sprintf^(0+128),f
 10276  055A  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10277  055B  35DD               	lslf	??_sprintf^(0+128),f
 10278  055C  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10279  055D  309A               	movlw	low (_dpowers| (0+32768))
 10280  055E  075D               	addwf	??_sprintf^(0+128),w
 10281  055F  0084               	movwf	4
 10282  0560  30B8               	movlw	high (_dpowers| (0+32768))
 10283  0561  3D5E               	addwfc	(??_sprintf+1)^(0+128),w
 10284  0562  0085               	movwf	5
 10285  0563  3F00               	moviw [0]fsr0
 10286  0564  0020               	movlb	0	; select bank0
 10287  0565  00A0               	movwf	___lldiv@divisor
 10288  0566  3F01               	moviw [1]fsr0
 10289  0567  00A1               	movwf	___lldiv@divisor+1
 10290  0568  3F02               	moviw [2]fsr0
 10291  0569  00A2               	movwf	___lldiv@divisor+2
 10292  056A  3F03               	moviw [3]fsr0
 10293  056B  00A3               	movwf	___lldiv@divisor+3
 10294  056C  0022               	movlb	2	; select bank2
 10295  056D  082E               	movf	(sprintf@val+3)^(0+256),w
 10296  056E  0020               	movlb	0	; select bank0
 10297  056F  00A7               	movwf	___lldiv@dividend+3
 10298  0570  0022               	movlb	2	; select bank2
 10299  0571  082D               	movf	(sprintf@val+2)^(0+256),w
 10300  0572  0020               	movlb	0	; select bank0
 10301  0573  00A6               	movwf	___lldiv@dividend+2
 10302  0574  0022               	movlb	2	; select bank2
 10303  0575  082C               	movf	(sprintf@val+1)^(0+256),w
 10304  0576  0020               	movlb	0	; select bank0
 10305  0577  00A5               	movwf	___lldiv@dividend+1
 10306  0578  0022               	movlb	2	; select bank2
 10307  0579  082B               	movf	sprintf@val^(0+256),w
 10308  057A  0020               	movlb	0	; select bank0
 10309  057B  00A4               	movwf	___lldiv@dividend
 10310  057C  31A9  2194  3180   	fcall	___lldiv
 10311  057F  0020               	movlb	0	; select bank0
 10312  0580  0823               	movf	?___lldiv+3,w
 10313  0581  0022               	movlb	2	; select bank2
 10314  0582  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
 10315  0583  0020               	movlb	0	; select bank0
 10316  0584  0822               	movf	?___lldiv+2,w
 10317  0585  0022               	movlb	2	; select bank2
 10318  0586  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
 10319  0587  0020               	movlb	0	; select bank0
 10320  0588  0821               	movf	?___lldiv+1,w
 10321  0589  0022               	movlb	2	; select bank2
 10322  058A  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
 10323  058B  0020               	movlb	0	; select bank0
 10324  058C  0820               	movf	?___lldiv,w
 10325  058D  0022               	movlb	2	; select bank2
 10326  058E  00A7               	movwf	sprintf@tmpval^(0+256)
 10327                           
 10328                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10329  058F  3000               	movlw	0
 10330  0590  0020               	movlb	0	; select bank0
 10331  0591  00B0               	movwf	___llmod@divisor+3
 10332  0592  3000               	movlw	0
 10333  0593  00AF               	movwf	___llmod@divisor+2
 10334  0594  3000               	movlw	0
 10335  0595  00AE               	movwf	___llmod@divisor+1
 10336  0596  300A               	movlw	10
 10337  0597  00AD               	movwf	___llmod@divisor
 10338  0598  0022               	movlb	2	; select bank2
 10339  0599  082A               	movf	(sprintf@tmpval+3)^(0+256),w
 10340  059A  0020               	movlb	0	; select bank0
 10341  059B  00B4               	movwf	___llmod@dividend+3
 10342  059C  0022               	movlb	2	; select bank2
 10343  059D  0829               	movf	(sprintf@tmpval+2)^(0+256),w
 10344  059E  0020               	movlb	0	; select bank0
 10345  059F  00B3               	movwf	___llmod@dividend+2
 10346  05A0  0022               	movlb	2	; select bank2
 10347  05A1  0828               	movf	(sprintf@tmpval+1)^(0+256),w
 10348  05A2  0020               	movlb	0	; select bank0
 10349  05A3  00B2               	movwf	___llmod@dividend+1
 10350  05A4  0022               	movlb	2	; select bank2
 10351  05A5  0827               	movf	sprintf@tmpval^(0+256),w
 10352  05A6  0020               	movlb	0	; select bank0
 10353  05A7  00B1               	movwf	___llmod@dividend
 10354  05A8  31A8  2067  3180   	fcall	___llmod
 10355  05AB  0020               	movlb	0	; select bank0
 10356  05AC  0830               	movf	?___llmod+3,w
 10357  05AD  0022               	movlb	2	; select bank2
 10358  05AE  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
 10359  05AF  0020               	movlb	0	; select bank0
 10360  05B0  082F               	movf	?___llmod+2,w
 10361  05B1  0022               	movlb	2	; select bank2
 10362  05B2  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
 10363  05B3  0020               	movlb	0	; select bank0
 10364  05B4  082E               	movf	?___llmod+1,w
 10365  05B5  0022               	movlb	2	; select bank2
 10366  05B6  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
 10367  05B7  0020               	movlb	0	; select bank0
 10368  05B8  082D               	movf	?___llmod,w
 10369  05B9  0022               	movlb	2	; select bank2
 10370  05BA  00A7               	movwf	sprintf@tmpval^(0+256)
 10371                           
 10372                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 10373  05BB  0827               	movf	sprintf@tmpval^(0+256),w
 10374  05BC  3E30               	addlw	48
 10375  05BD  0021               	movlb	1	; select bank1
 10376  05BE  00DD               	movwf	??_sprintf^(0+128)
 10377  05BF  0851               	movf	sprintf@sp^(0+128),w
 10378  05C0  0086               	movwf	6
 10379  05C1  0852               	movf	(sprintf@sp+1)^(0+128),w
 10380  05C2  0087               	movwf	7
 10381  05C3  085D               	movf	??_sprintf^(0+128),w
 10382  05C4  2D42               	goto	L10
 10383  05C5                     l7476:	
 10384                           ;doprnt.c: 1204: }
 10385                           ;doprnt.c: 1206: }
 10386                           ;doprnt.c: 1207: while(exp > 0) {
 10387                           
 10388                           
 10389                           ;doprnt.c: 1208: ((*sp++ = ('0')),(++ccnt));
 10390  05C5  0021               	movlb	1	; select bank1
 10391  05C6  0851               	movf	sprintf@sp^(0+128),w
 10392  05C7  0086               	movwf	6
 10393  05C8  0852               	movf	(sprintf@sp+1)^(0+128),w
 10394  05C9  0087               	movwf	7
 10395  05CA  3030               	movlw	48
 10396  05CB  0081               	movwf	1
 10397  05CC  3001               	movlw	1
 10398  05CD  07D1               	addwf	sprintf@sp^(0+128),f
 10399  05CE  3000               	movlw	0
 10400  05CF  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10401  05D0  3001               	movlw	1
 10402  05D1  0022               	movlb	2	; select bank2
 10403  05D2  07A5               	addwf	sprintf@ccnt^(0+256),f
 10404  05D3  3000               	movlw	0
 10405  05D4  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10406                           
 10407                           ;doprnt.c: 1209: exp--;
 10408  05D5  30FF               	movlw	255
 10409  05D6  07AF               	addwf	sprintf@exp^(0+256),f
 10410  05D7  30FF               	movlw	255
 10411  05D8  3DB0               	addwfc	(sprintf@exp+1)^(0+256),f
 10412  05D9                     l7484:	
 10413  05D9  0830               	movf	(sprintf@exp+1)^(0+256),w
 10414  05DA  3A80               	xorlw	128
 10415  05DB  0021               	movlb	1	; select bank1
 10416  05DC  00DD               	movwf	??_sprintf^(0+128)
 10417  05DD  3080               	movlw	128
 10418  05DE  025D               	subwf	??_sprintf^(0+128),w
 10419  05DF  1D03               	skipz
 10420  05E0  2DE4               	goto	u9705
 10421  05E1  3001               	movlw	1
 10422  05E2  0022               	movlb	2	; select bank2
 10423  05E3  022F               	subwf	sprintf@exp^(0+256),w
 10424  05E4                     u9705:	
 10425  05E4  1803               	skipnc
 10426  05E5  2DC5               	goto	l7476
 10427                           
 10428                           ;doprnt.c: 1210: }
 10429                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10430  05E6  0022               	movlb	2	; select bank2
 10431  05E7  083A               	movf	(sprintf@prec+1)^(0+256),w
 10432  05E8  3A80               	xorlw	128
 10433  05E9  0021               	movlb	1	; select bank1
 10434  05EA  00DD               	movwf	??_sprintf^(0+128)
 10435  05EB  3080               	movlw	128
 10436  05EC  025D               	subwf	??_sprintf^(0+128),w
 10437  05ED  1D03               	skipz
 10438  05EE  2DF2               	goto	u9715
 10439  05EF  3009               	movlw	9
 10440  05F0  0022               	movlb	2	; select bank2
 10441  05F1  0239               	subwf	sprintf@prec^(0+256),w
 10442  05F2                     u9715:	
 10443  05F2  1C03               	skipc
 10444  05F3  2DF6               	goto	l7490
 10445                           
 10446                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 10447  05F4  3008               	movlw	8
 10448  05F5  2DF8               	goto	L7
 10449  05F6                     l7490:	
 10450                           
 10451                           ;doprnt.c: 1213: else
 10452                           ;doprnt.c: 1214: c = prec;
 10453  05F6  0022               	movlb	2	; select bank2
 10454  05F7  0839               	movf	sprintf@prec^(0+256),w
 10455  05F8                     L7:	
 10456  05F8  0021               	movlb	1	; select bank1
 10457  05F9  00DD               	movwf	??_sprintf^(0+128)
 10458  05FA  085D               	movf	??_sprintf^(0+128),w
 10459  05FB  0022               	movlb	2	; select bank2
 10460  05FC  00BB               	movwf	sprintf@c^(0+256)
 10461                           
 10462                           ;doprnt.c: 1215: prec -= c;
 10463  05FD  083B               	movf	sprintf@c^(0+256),w
 10464  05FE  0021               	movlb	1	; select bank1
 10465  05FF  00DD               	movwf	??_sprintf^(0+128)
 10466  0600  01DE               	clrf	(??_sprintf^(0+128)+1)
 10467  0601  1BDD               	btfsc	??_sprintf^(0+128),7
 10468  0602  03DE               	decf	(??_sprintf^(0+128)+1),f
 10469  0603  085D               	movf	??_sprintf^(0+128),w
 10470  0604  0022               	movlb	2	; select bank2
 10471  0605  02B9               	subwf	sprintf@prec^(0+256),f
 10472  0606  0021               	movlb	1	; select bank1
 10473  0607  085E               	movf	(??_sprintf+1)^(0+128),w
 10474  0608  0022               	movlb	2	; select bank2
 10475  0609  3BBA               	subwfb	(sprintf@prec+1)^(0+256),f
 10476                           
 10477                           ;doprnt.c: 1219: if(c)
 10478  060A  083B               	movf	sprintf@c^(0+256),w
 10479  060B  1903               	btfsc	3,2
 10480  060C  2E1D               	goto	l7500
 10481                           
 10482                           ;doprnt.c: 1221: ((*sp++ = ('.')),(++ccnt));
 10483  060D  0021               	movlb	1	; select bank1
 10484  060E  0851               	movf	sprintf@sp^(0+128),w
 10485  060F  0086               	movwf	6
 10486  0610  0852               	movf	(sprintf@sp+1)^(0+128),w
 10487  0611  0087               	movwf	7
 10488  0612  302E               	movlw	46
 10489  0613  0081               	movwf	1
 10490  0614  3001               	movlw	1
 10491  0615  07D1               	addwf	sprintf@sp^(0+128),f
 10492  0616  3000               	movlw	0
 10493  0617  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10494  0618  3001               	movlw	1
 10495  0619  0022               	movlb	2	; select bank2
 10496  061A  07A5               	addwf	sprintf@ccnt^(0+256),f
 10497  061B  3000               	movlw	0
 10498  061C  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10499  061D                     l7500:	
 10500                           
 10501                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10502  061D  083B               	movf	sprintf@c^(0+256),w
 10503  061E  3195  2570  3180   	fcall	_scale
 10504  0621  0020               	movlb	0	; select bank0
 10505  0622  0859               	movf	?_scale+3,w
 10506  0623  0022               	movlb	2	; select bank2
 10507  0624  00A3               	movwf	(_sprintf$2210+3)^(0+256)
 10508  0625  0020               	movlb	0	; select bank0
 10509  0626  0858               	movf	?_scale+2,w
 10510  0627  0022               	movlb	2	; select bank2
 10511  0628  00A2               	movwf	(_sprintf$2210+2)^(0+256)
 10512  0629  0020               	movlb	0	; select bank0
 10513  062A  0857               	movf	?_scale+1,w
 10514  062B  0022               	movlb	2	; select bank2
 10515  062C  00A1               	movwf	(_sprintf$2210+1)^(0+256)
 10516  062D  0020               	movlb	0	; select bank0
 10517  062E  0856               	movf	?_scale,w
 10518  062F  0022               	movlb	2	; select bank2
 10519  0630  00A0               	movwf	_sprintf$2210^(0+256)
 10520                           
 10521                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10522  0631  0823               	movf	(_sprintf$2210+3)^(0+256),w
 10523  0632  0020               	movlb	0	; select bank0
 10524  0633  00C3               	movwf	___flmul@a+3
 10525  0634  0022               	movlb	2	; select bank2
 10526  0635  0822               	movf	(_sprintf$2210+2)^(0+256),w
 10527  0636  0020               	movlb	0	; select bank0
 10528  0637  00C2               	movwf	___flmul@a+2
 10529  0638  0022               	movlb	2	; select bank2
 10530  0639  0821               	movf	(_sprintf$2210+1)^(0+256),w
 10531  063A  0020               	movlb	0	; select bank0
 10532  063B  00C1               	movwf	___flmul@a+1
 10533  063C  0022               	movlb	2	; select bank2
 10534  063D  0820               	movf	_sprintf$2210^(0+256),w
 10535  063E  0020               	movlb	0	; select bank0
 10536  063F  00C0               	movwf	___flmul@a
 10537  0640  0022               	movlb	2	; select bank2
 10538  0641  0838               	movf	(sprintf@fval+3)^(0+256),w
 10539  0642  0020               	movlb	0	; select bank0
 10540  0643  00BF               	movwf	___flmul@b+3
 10541  0644  0022               	movlb	2	; select bank2
 10542  0645  0837               	movf	(sprintf@fval+2)^(0+256),w
 10543  0646  0020               	movlb	0	; select bank0
 10544  0647  00BE               	movwf	___flmul@b+2
 10545  0648  0022               	movlb	2	; select bank2
 10546  0649  0836               	movf	(sprintf@fval+1)^(0+256),w
 10547  064A  0020               	movlb	0	; select bank0
 10548  064B  00BD               	movwf	___flmul@b+1
 10549  064C  0022               	movlb	2	; select bank2
 10550  064D  0835               	movf	sprintf@fval^(0+256),w
 10551  064E  0020               	movlb	0	; select bank0
 10552  064F  00BC               	movwf	___flmul@b
 10553  0650  318B  233E  3180   	fcall	___flmul
 10554  0653  0020               	movlb	0	; select bank0
 10555  0654  083F               	movf	?___flmul+3,w
 10556  0655  0021               	movlb	1	; select bank1
 10557  0656  00A3               	movwf	(___fltol@f1+3)^(0+128)
 10558  0657  0020               	movlb	0	; select bank0
 10559  0658  083E               	movf	?___flmul+2,w
 10560  0659  0021               	movlb	1	; select bank1
 10561  065A  00A2               	movwf	(___fltol@f1+2)^(0+128)
 10562  065B  0020               	movlb	0	; select bank0
 10563  065C  083D               	movf	?___flmul+1,w
 10564  065D  0021               	movlb	1	; select bank1
 10565  065E  00A1               	movwf	(___fltol@f1+1)^(0+128)
 10566  065F  0020               	movlb	0	; select bank0
 10567  0660  083C               	movf	?___flmul,w
 10568  0661  0021               	movlb	1	; select bank1
 10569  0662  00A0               	movwf	___fltol@f1^(0+128)
 10570  0663  31AB  238D  3180   	fcall	___fltol
 10571  0666  0021               	movlb	1	; select bank1
 10572  0667  0823               	movf	(?___fltol+3)^(0+128),w
 10573  0668  0022               	movlb	2	; select bank2
 10574  0669  00AE               	movwf	(sprintf@val+3)^(0+256)
 10575  066A  0021               	movlb	1	; select bank1
 10576  066B  0822               	movf	(?___fltol+2)^(0+128),w
 10577  066C  0022               	movlb	2	; select bank2
 10578  066D  00AD               	movwf	(sprintf@val+2)^(0+256)
 10579  066E  0021               	movlb	1	; select bank1
 10580  066F  0821               	movf	(?___fltol+1)^(0+128),w
 10581  0670  0022               	movlb	2	; select bank2
 10582  0671  00AC               	movwf	(sprintf@val+1)^(0+256)
 10583  0672  0021               	movlb	1	; select bank1
 10584  0673  0820               	movf	?___fltol^(0+128),w
 10585  0674                     L8:	
 10586  0674  0022               	movlb	2	; select bank2
 10587  0675  00AB               	movwf	sprintf@val^(0+256)
 10588  0676  30FF               	movlw	255
 10589  0677  0021               	movlb	1	; select bank1
 10590  0678  00DD               	movwf	??_sprintf^(0+128)
 10591  0679  085D               	movf	??_sprintf^(0+128),w
 10592  067A  0022               	movlb	2	; select bank2
 10593  067B  07BB               	addwf	sprintf@c^(0+256),f
 10594  067C  0A3B               	incf	sprintf@c^(0+256),w
 10595  067D  1903               	btfsc	3,2
 10596  067E  2F45               	goto	l7526
 10597                           
 10598                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10599                           
 10600                           ;doprnt.c: 1228: while(c--) {
 10601  067F  083B               	movf	sprintf@c^(0+256),w
 10602  0680  0021               	movlb	1	; select bank1
 10603  0681  00DD               	movwf	??_sprintf^(0+128)
 10604  0682  01DE               	clrf	(??_sprintf^(0+128)+1)
 10605  0683  35DD               	lslf	??_sprintf^(0+128),f
 10606  0684  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10607  0685  35DD               	lslf	??_sprintf^(0+128),f
 10608  0686  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10609  0687  309A               	movlw	low (_dpowers| (0+32768))
 10610  0688  075D               	addwf	??_sprintf^(0+128),w
 10611  0689  0084               	movwf	4
 10612  068A  30B8               	movlw	high (_dpowers| (0+32768))
 10613  068B  3D5E               	addwfc	(??_sprintf+1)^(0+128),w
 10614  068C  0085               	movwf	5
 10615  068D  3F00               	moviw [0]fsr0
 10616  068E  0020               	movlb	0	; select bank0
 10617  068F  00A0               	movwf	___lldiv@divisor
 10618  0690  3F01               	moviw [1]fsr0
 10619  0691  00A1               	movwf	___lldiv@divisor+1
 10620  0692  3F02               	moviw [2]fsr0
 10621  0693  00A2               	movwf	___lldiv@divisor+2
 10622  0694  3F03               	moviw [3]fsr0
 10623  0695  00A3               	movwf	___lldiv@divisor+3
 10624  0696  0022               	movlb	2	; select bank2
 10625  0697  082E               	movf	(sprintf@val+3)^(0+256),w
 10626  0698  0020               	movlb	0	; select bank0
 10627  0699  00A7               	movwf	___lldiv@dividend+3
 10628  069A  0022               	movlb	2	; select bank2
 10629  069B  082D               	movf	(sprintf@val+2)^(0+256),w
 10630  069C  0020               	movlb	0	; select bank0
 10631  069D  00A6               	movwf	___lldiv@dividend+2
 10632  069E  0022               	movlb	2	; select bank2
 10633  069F  082C               	movf	(sprintf@val+1)^(0+256),w
 10634  06A0  0020               	movlb	0	; select bank0
 10635  06A1  00A5               	movwf	___lldiv@dividend+1
 10636  06A2  0022               	movlb	2	; select bank2
 10637  06A3  082B               	movf	sprintf@val^(0+256),w
 10638  06A4  0020               	movlb	0	; select bank0
 10639  06A5  00A4               	movwf	___lldiv@dividend
 10640  06A6  31A9  2194  3180   	fcall	___lldiv
 10641  06A9  0020               	movlb	0	; select bank0
 10642  06AA  0823               	movf	?___lldiv+3,w
 10643  06AB  0022               	movlb	2	; select bank2
 10644  06AC  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
 10645  06AD  0020               	movlb	0	; select bank0
 10646  06AE  0822               	movf	?___lldiv+2,w
 10647  06AF  0022               	movlb	2	; select bank2
 10648  06B0  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
 10649  06B1  0020               	movlb	0	; select bank0
 10650  06B2  0821               	movf	?___lldiv+1,w
 10651  06B3  0022               	movlb	2	; select bank2
 10652  06B4  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
 10653  06B5  0020               	movlb	0	; select bank0
 10654  06B6  0820               	movf	?___lldiv,w
 10655  06B7  0022               	movlb	2	; select bank2
 10656  06B8  00A7               	movwf	sprintf@tmpval^(0+256)
 10657                           
 10658                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10659  06B9  3000               	movlw	0
 10660  06BA  0020               	movlb	0	; select bank0
 10661  06BB  00B0               	movwf	___llmod@divisor+3
 10662  06BC  3000               	movlw	0
 10663  06BD  00AF               	movwf	___llmod@divisor+2
 10664  06BE  3000               	movlw	0
 10665  06BF  00AE               	movwf	___llmod@divisor+1
 10666  06C0  300A               	movlw	10
 10667  06C1  00AD               	movwf	___llmod@divisor
 10668  06C2  0022               	movlb	2	; select bank2
 10669  06C3  082A               	movf	(sprintf@tmpval+3)^(0+256),w
 10670  06C4  0020               	movlb	0	; select bank0
 10671  06C5  00B4               	movwf	___llmod@dividend+3
 10672  06C6  0022               	movlb	2	; select bank2
 10673  06C7  0829               	movf	(sprintf@tmpval+2)^(0+256),w
 10674  06C8  0020               	movlb	0	; select bank0
 10675  06C9  00B3               	movwf	___llmod@dividend+2
 10676  06CA  0022               	movlb	2	; select bank2
 10677  06CB  0828               	movf	(sprintf@tmpval+1)^(0+256),w
 10678  06CC  0020               	movlb	0	; select bank0
 10679  06CD  00B2               	movwf	___llmod@dividend+1
 10680  06CE  0022               	movlb	2	; select bank2
 10681  06CF  0827               	movf	sprintf@tmpval^(0+256),w
 10682  06D0  0020               	movlb	0	; select bank0
 10683  06D1  00B1               	movwf	___llmod@dividend
 10684  06D2  31A8  2067  3180   	fcall	___llmod
 10685  06D5  0020               	movlb	0	; select bank0
 10686  06D6  0830               	movf	?___llmod+3,w
 10687  06D7  0022               	movlb	2	; select bank2
 10688  06D8  00AA               	movwf	(sprintf@tmpval+3)^(0+256)
 10689  06D9  0020               	movlb	0	; select bank0
 10690  06DA  082F               	movf	?___llmod+2,w
 10691  06DB  0022               	movlb	2	; select bank2
 10692  06DC  00A9               	movwf	(sprintf@tmpval+2)^(0+256)
 10693  06DD  0020               	movlb	0	; select bank0
 10694  06DE  082E               	movf	?___llmod+1,w
 10695  06DF  0022               	movlb	2	; select bank2
 10696  06E0  00A8               	movwf	(sprintf@tmpval+1)^(0+256)
 10697  06E1  0020               	movlb	0	; select bank0
 10698  06E2  082D               	movf	?___llmod,w
 10699  06E3  0022               	movlb	2	; select bank2
 10700  06E4  00A7               	movwf	sprintf@tmpval^(0+256)
 10701                           
 10702                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)),(++ccnt));
 10703  06E5  0827               	movf	sprintf@tmpval^(0+256),w
 10704  06E6  3E30               	addlw	48
 10705  06E7  0021               	movlb	1	; select bank1
 10706  06E8  00DD               	movwf	??_sprintf^(0+128)
 10707  06E9  0851               	movf	sprintf@sp^(0+128),w
 10708  06EA  0086               	movwf	6
 10709  06EB  0852               	movf	(sprintf@sp+1)^(0+128),w
 10710  06EC  0087               	movwf	7
 10711  06ED  085D               	movf	??_sprintf^(0+128),w
 10712  06EE  0081               	movwf	1
 10713  06EF  3001               	movlw	1
 10714  06F0  07D1               	addwf	sprintf@sp^(0+128),f
 10715  06F1  3000               	movlw	0
 10716  06F2  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10717  06F3  3001               	movlw	1
 10718  06F4  0022               	movlb	2	; select bank2
 10719  06F5  07A5               	addwf	sprintf@ccnt^(0+256),f
 10720  06F6  3000               	movlw	0
 10721  06F7  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10722                           
 10723                           ;doprnt.c: 1232: val %= dpowers[c];
 10724  06F8  083B               	movf	sprintf@c^(0+256),w
 10725  06F9  0021               	movlb	1	; select bank1
 10726  06FA  00DD               	movwf	??_sprintf^(0+128)
 10727  06FB  01DE               	clrf	(??_sprintf^(0+128)+1)
 10728  06FC  35DD               	lslf	??_sprintf^(0+128),f
 10729  06FD  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10730  06FE  35DD               	lslf	??_sprintf^(0+128),f
 10731  06FF  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10732  0700  309A               	movlw	low (_dpowers| (0+32768))
 10733  0701  075D               	addwf	??_sprintf^(0+128),w
 10734  0702  0084               	movwf	4
 10735  0703  30B8               	movlw	high (_dpowers| (0+32768))
 10736  0704  3D5E               	addwfc	(??_sprintf+1)^(0+128),w
 10737  0705  0085               	movwf	5
 10738  0706  3F00               	moviw [0]fsr0
 10739  0707  0020               	movlb	0	; select bank0
 10740  0708  00AD               	movwf	___llmod@divisor
 10741  0709  3F01               	moviw [1]fsr0
 10742  070A  00AE               	movwf	___llmod@divisor+1
 10743  070B  3F02               	moviw [2]fsr0
 10744  070C  00AF               	movwf	___llmod@divisor+2
 10745  070D  3F03               	moviw [3]fsr0
 10746  070E  00B0               	movwf	___llmod@divisor+3
 10747  070F  0022               	movlb	2	; select bank2
 10748  0710  082E               	movf	(sprintf@val+3)^(0+256),w
 10749  0711  0020               	movlb	0	; select bank0
 10750  0712  00B4               	movwf	___llmod@dividend+3
 10751  0713  0022               	movlb	2	; select bank2
 10752  0714  082D               	movf	(sprintf@val+2)^(0+256),w
 10753  0715  0020               	movlb	0	; select bank0
 10754  0716  00B3               	movwf	___llmod@dividend+2
 10755  0717  0022               	movlb	2	; select bank2
 10756  0718  082C               	movf	(sprintf@val+1)^(0+256),w
 10757  0719  0020               	movlb	0	; select bank0
 10758  071A  00B2               	movwf	___llmod@dividend+1
 10759  071B  0022               	movlb	2	; select bank2
 10760  071C  082B               	movf	sprintf@val^(0+256),w
 10761  071D  0020               	movlb	0	; select bank0
 10762  071E  00B1               	movwf	___llmod@dividend
 10763  071F  31A8  2067  3180   	fcall	___llmod
 10764  0722  0020               	movlb	0	; select bank0
 10765  0723  0830               	movf	?___llmod+3,w
 10766  0724  0022               	movlb	2	; select bank2
 10767  0725  00AE               	movwf	(sprintf@val+3)^(0+256)
 10768  0726  0020               	movlb	0	; select bank0
 10769  0727  082F               	movf	?___llmod+2,w
 10770  0728  0022               	movlb	2	; select bank2
 10771  0729  00AD               	movwf	(sprintf@val+2)^(0+256)
 10772  072A  0020               	movlb	0	; select bank0
 10773  072B  082E               	movf	?___llmod+1,w
 10774  072C  0022               	movlb	2	; select bank2
 10775  072D  00AC               	movwf	(sprintf@val+1)^(0+256)
 10776  072E  0020               	movlb	0	; select bank0
 10777  072F  082D               	movf	?___llmod,w
 10778  0730  2E74               	goto	L8
 10779  0731                     l7518:	
 10780                           ;doprnt.c: 1233: }
 10781                           ;doprnt.c: 1235: while(prec) {
 10782                           
 10783                           
 10784                           ;doprnt.c: 1236: ((*sp++ = ('0')),(++ccnt));
 10785  0731  0021               	movlb	1	; select bank1
 10786  0732  0851               	movf	sprintf@sp^(0+128),w
 10787  0733  0086               	movwf	6
 10788  0734  0852               	movf	(sprintf@sp+1)^(0+128),w
 10789  0735  0087               	movwf	7
 10790  0736  3030               	movlw	48
 10791  0737  0081               	movwf	1
 10792  0738  3001               	movlw	1
 10793  0739  07D1               	addwf	sprintf@sp^(0+128),f
 10794  073A  3000               	movlw	0
 10795  073B  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 10796  073C  3001               	movlw	1
 10797  073D  0022               	movlb	2	; select bank2
 10798  073E  07A5               	addwf	sprintf@ccnt^(0+256),f
 10799  073F  3000               	movlw	0
 10800  0740  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 10801                           
 10802                           ;doprnt.c: 1237: prec--;
 10803  0741  30FF               	movlw	255
 10804  0742  07B9               	addwf	sprintf@prec^(0+256),f
 10805  0743  30FF               	movlw	255
 10806  0744  3DBA               	addwfc	(sprintf@prec+1)^(0+256),f
 10807  0745                     l7526:	
 10808  0745  0839               	movf	sprintf@prec^(0+256),w
 10809  0746  043A               	iorwf	(sprintf@prec+1)^(0+256),w
 10810  0747  1903               	btfsc	3,2
 10811  0748  28C1               	goto	l7630
 10812  0749  2F31               	goto	l7518
 10813  074A                     l7528:	
 10814                           ;doprnt.c: 1238: }
 10815                           ;doprnt.c: 1245: continue;
 10816                           
 10817                           
 10818                           ;doprnt.c: 1246: }
 10819                           ;doprnt.c: 1253: {
 10820                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10821  074A  0022               	movlb	2	; select bank2
 10822  074B  0824               	movf	sprintf@ap^(0+256),w
 10823  074C  0086               	movwf	6
 10824  074D  0187               	clrf	7
 10825  074E  3F40               	moviw [0]fsr1
 10826  074F  0021               	movlb	1	; select bank1
 10827  0750  00DD               	movwf	??_sprintf^(0+128)
 10828  0751  3F41               	moviw [1]fsr1
 10829  0752  00DE               	movwf	(??_sprintf^(0+128)+1)
 10830  0753  085D               	movf	??_sprintf^(0+128),w
 10831  0754  0022               	movlb	2	; select bank2
 10832  0755  00AB               	movwf	sprintf@val^(0+256)
 10833  0756  0021               	movlb	1	; select bank1
 10834  0757  085E               	movf	(??_sprintf+1)^(0+128),w
 10835  0758  0022               	movlb	2	; select bank2
 10836  0759  00AC               	movwf	(sprintf@val+1)^(0+256)
 10837  075A  0D89               	rlf	9,f
 10838  075B  3B89               	subwfb	9,f
 10839  075C  0989               	comf	9,f
 10840  075D  00AD               	movwf	(sprintf@val+2)^(0+256)
 10841  075E  00AE               	movwf	(sprintf@val+3)^(0+256)
 10842  075F  3002               	movlw	2
 10843  0760  0021               	movlb	1	; select bank1
 10844  0761  00DD               	movwf	??_sprintf^(0+128)
 10845  0762  085D               	movf	??_sprintf^(0+128),w
 10846  0763  0022               	movlb	2	; select bank2
 10847  0764  07A4               	addwf	sprintf@ap^(0+256),f
 10848                           
 10849                           ;doprnt.c: 1261: if((long)val < 0) {
 10850  0765  1FAE               	btfss	(sprintf@val+3)^(0+256),7
 10851  0766  2F76               	goto	l7538
 10852                           
 10853                           ;doprnt.c: 1262: flag |= 0x03;
 10854  0767  3003               	movlw	3
 10855  0768  04B1               	iorwf	sprintf@flag^(0+256),f
 10856  0769  3000               	movlw	0
 10857  076A  04B2               	iorwf	(sprintf@flag+1)^(0+256),f
 10858                           
 10859                           ;doprnt.c: 1263: val = -val;
 10860  076B  09AB               	comf	sprintf@val^(0+256),f
 10861  076C  09AC               	comf	(sprintf@val+1)^(0+256),f
 10862  076D  09AD               	comf	(sprintf@val+2)^(0+256),f
 10863  076E  09AE               	comf	(sprintf@val+3)^(0+256),f
 10864  076F  0AAB               	incf	sprintf@val^(0+256),f
 10865  0770  1903               	skipnz
 10866  0771  0AAC               	incf	(sprintf@val+1)^(0+256),f
 10867  0772  1903               	skipnz
 10868  0773  0AAD               	incf	(sprintf@val+2)^(0+256),f
 10869  0774  1903               	skipnz
 10870  0775  0AAE               	incf	(sprintf@val+3)^(0+256),f
 10871  0776                     l7538:	
 10872                           
 10873                           ;doprnt.c: 1264: }
 10874                           ;doprnt.c: 1266: }
 10875                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10876  0776  0839               	movf	sprintf@prec^(0+256),w
 10877  0777  043A               	iorwf	(sprintf@prec+1)^(0+256),w
 10878  0778  1D03               	btfss	3,2
 10879  0779  2F84               	goto	l7544
 10880  077A  082E               	movf	(sprintf@val+3)^(0+256),w
 10881  077B  042D               	iorwf	(sprintf@val+2)^(0+256),w
 10882  077C  042C               	iorwf	(sprintf@val+1)^(0+256),w
 10883  077D  042B               	iorwf	sprintf@val^(0+256),w
 10884  077E  1D03               	skipz
 10885  077F  2F84               	goto	l7544
 10886                           
 10887                           ;doprnt.c: 1291: prec++;
 10888  0780  3001               	movlw	1
 10889  0781  07B9               	addwf	sprintf@prec^(0+256),f
 10890  0782  3000               	movlw	0
 10891  0783  3DBA               	addwfc	(sprintf@prec+1)^(0+256),f
 10892  0784                     l7544:	
 10893                           
 10894                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10895  0784  01BB               	clrf	sprintf@c^(0+256)
 10896  0785  0ABB               	incf	sprintf@c^(0+256),f
 10897  0786  300A               	movlw	10
 10898  0787  063B               	xorwf	sprintf@c^(0+256),w
 10899  0788  1903               	btfsc	3,2
 10900  0789  2FC1               	goto	l7556
 10901  078A                     l7550:	
 10902                           
 10903                           ;doprnt.c: 1306: if(val < dpowers[c])
 10904  078A  083B               	movf	sprintf@c^(0+256),w
 10905  078B  0021               	movlb	1	; select bank1
 10906  078C  00DD               	movwf	??_sprintf^(0+128)
 10907  078D  01DE               	clrf	(??_sprintf^(0+128)+1)
 10908  078E  35DD               	lslf	??_sprintf^(0+128),f
 10909  078F  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10910  0790  35DD               	lslf	??_sprintf^(0+128),f
 10911  0791  0DDE               	rlf	(??_sprintf^(0+128)+1),f
 10912  0792  309A               	movlw	low (_dpowers| (0+32768))
 10913  0793  075D               	addwf	??_sprintf^(0+128),w
 10914  0794  0084               	movwf	4
 10915  0795  30B8               	movlw	high (_dpowers| (0+32768))
 10916  0796  3D5E               	addwfc	(??_sprintf+1)^(0+128),w
 10917  0797  0085               	movwf	5
 10918  0798  3F00               	moviw [0]fsr0
 10919  0799  00DF               	movwf	(??_sprintf+2)^(0+128)
 10920  079A  3F01               	moviw [1]fsr0
 10921  079B  00E0               	movwf	((??_sprintf+2)^(0+128)+1)
 10922  079C  3F02               	moviw [2]fsr0
 10923  079D  00E1               	movwf	((??_sprintf+2)^(0+128)+2)
 10924  079E  3F03               	moviw [3]fsr0
 10925  079F  00E2               	movwf	((??_sprintf+2)^(0+128)+3)
 10926  07A0  0862               	movf	(??_sprintf+5)^(0+128),w
 10927  07A1  0022               	movlb	2	; select bank2
 10928  07A2  022E               	subwf	(sprintf@val+3)^(0+256),w
 10929  07A3  1D03               	skipz
 10930  07A4  2FB5               	goto	u9795
 10931  07A5  0021               	movlb	1	; select bank1
 10932  07A6  0861               	movf	(??_sprintf+4)^(0+128),w
 10933  07A7  0022               	movlb	2	; select bank2
 10934  07A8  022D               	subwf	(sprintf@val+2)^(0+256),w
 10935  07A9  1D03               	skipz
 10936  07AA  2FB5               	goto	u9795
 10937  07AB  0021               	movlb	1	; select bank1
 10938  07AC  0860               	movf	(??_sprintf+3)^(0+128),w
 10939  07AD  0022               	movlb	2	; select bank2
 10940  07AE  022C               	subwf	(sprintf@val+1)^(0+256),w
 10941  07AF  1D03               	skipz
 10942  07B0  2FB5               	goto	u9795
 10943  07B1  0021               	movlb	1	; select bank1
 10944  07B2  085F               	movf	(??_sprintf+2)^(0+128),w
 10945  07B3  0022               	movlb	2	; select bank2
 10946  07B4  022B               	subwf	sprintf@val^(0+256),w
 10947  07B5                     u9795:	
 10948  07B5  1C03               	btfss	3,0
 10949  07B6  2FC1               	goto	l7556
 10950                           
 10951                           ;doprnt.c: 1307: break;
 10952  07B7  3001               	movlw	1
 10953  07B8  0021               	movlb	1	; select bank1
 10954  07B9  00DD               	movwf	??_sprintf^(0+128)
 10955  07BA  085D               	movf	??_sprintf^(0+128),w
 10956  07BB  0022               	movlb	2	; select bank2
 10957  07BC  07BB               	addwf	sprintf@c^(0+256),f
 10958  07BD  300A               	movlw	10
 10959  07BE  063B               	xorwf	sprintf@c^(0+256),w
 10960  07BF  1D03               	btfss	3,2
 10961  07C0  2F8A               	goto	l7550
 10962  07C1                     l7556:	
 10963                           
 10964                           ;doprnt.c: 1339: if(c < prec)
 10965  07C1  083B               	movf	sprintf@c^(0+256),w
 10966  07C2  0021               	movlb	1	; select bank1
 10967  07C3  00DD               	movwf	??_sprintf^(0+128)
 10968  07C4  01DE               	clrf	(??_sprintf^(0+128)+1)
 10969  07C5  1BDD               	btfsc	??_sprintf^(0+128),7
 10970  07C6  03DE               	decf	(??_sprintf^(0+128)+1),f
 10971  07C7  085E               	movf	(??_sprintf+1)^(0+128),w
 10972  07C8  3A80               	xorlw	128
 10973  07C9  00DF               	movwf	(??_sprintf+2)^(0+128)
 10974  07CA  0022               	movlb	2	; select bank2
 10975  07CB  083A               	movf	(sprintf@prec+1)^(0+256),w
 10976  07CC  3A80               	xorlw	128
 10977  07CD  0021               	movlb	1	; select bank1
 10978  07CE  025F               	subwf	(??_sprintf+2)^(0+128),w
 10979  07CF  1D03               	skipz
 10980  07D0  2FD5               	goto	u9815
 10981  07D1  0022               	movlb	2	; select bank2
 10982  07D2  0839               	movf	sprintf@prec^(0+256),w
 10983  07D3  0021               	movlb	1	; select bank1
 10984  07D4  025D               	subwf	??_sprintf^(0+128),w
 10985  07D5                     u9815:	
 10986  07D5  31A3  1803         	skipnc
 10987  07D7  2BA2               	goto	l7560
 10988                           
 10989                           ;doprnt.c: 1340: c = prec;
 10990  07D8  0022               	movlb	2	; select bank2
 10991  07D9  0839               	movf	sprintf@prec^(0+256),w
 10992  07DA  0021               	movlb	1	; select bank1
 10993  07DB  00DD               	movwf	??_sprintf^(0+128)
 10994  07DC  085D               	movf	??_sprintf^(0+128),w
 10995  07DD  0022               	movlb	2	; select bank2
 10996  07DE  00BB               	movwf	sprintf@c^(0+256)
 10997  07DF  31A3  2BBE         	goto	l911
 10998  07E1                     L18:	
 10999  07E1                     L17:	
 11000  07E1  31A4  2CE4         	ljmp	l7632
 11001                           
 11002                           	psect	text9
 11003  1570                     __ptext9:	
 11004 ;; *************** function _scale *****************
 11005 ;; Defined at:
 11006 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11007 ;; Parameters:    Size  Location     Type
 11008 ;;  scl             1    wreg     char 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  scl             1   78[BANK0 ] char 
 11011 ;; Return value:  Size  Location     Type
 11012 ;;                  4   54[BANK0 ] char 
 11013 ;; Registers used:
 11014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11015 ;; Tracked objects:
 11016 ;;		On entry : 0/0
 11017 ;;		On exit  : 0/0
 11018 ;;		Unchanged: 0/0
 11019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11021 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11022 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11023 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11024 ;;Total ram usage:       25 bytes
 11025 ;; Hardware stack levels used:    1
 11026 ;; Hardware stack levels required when called:    4
 11027 ;; This function calls:
 11028 ;;		___awdiv
 11029 ;;		___awmod
 11030 ;;		___flmul
 11031 ;; This function is called by:
 11032 ;;		_sprintf
 11033 ;; This function uses a non-reentrant model
 11034 ;;
 11035                           
 11036                           
 11037                           ;psect for function _scale
 11038  1570                     _scale:	
 11039                           
 11040                           ;incstack = 0
 11041                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11042                           ;scale@scl stored from wreg
 11043  1570  0020               	movlb	0	; select bank0
 11044  1571  00EE               	movwf	scale@scl
 11045                           
 11046                           ;doprnt.c: 428: if(scl < 0) {
 11047  1572  1FEE               	btfss	scale@scl,7
 11048  1573  2EBB               	goto	l7006
 11049                           
 11050                           ;doprnt.c: 429: scl = -scl;
 11051  1574  09EE               	comf	scale@scl,f
 11052  1575  0AEE               	incf	scale@scl,f
 11053                           
 11054                           ;doprnt.c: 430: if(scl>=110)
 11055  1576  086E               	movf	scale@scl,w
 11056  1577  3A80               	xorlw	128
 11057  1578  3E12               	addlw	-238
 11058  1579  1C03               	skipc
 11059  157A  2E32               	goto	l6996
 11060                           
 11061                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11062  157B  300A               	movlw	10
 11063  157C  00A2               	movwf	___awdiv@divisor
 11064  157D  3000               	movlw	0
 11065  157E  00A3               	movwf	___awdiv@divisor+1
 11066  157F  086E               	movf	scale@scl,w
 11067  1580  00F5               	movwf	___awmod@dividend
 11068  1581  01F6               	clrf	___awmod@dividend+1
 11069  1582  1BF5               	btfsc	___awmod@dividend,7
 11070  1583  03F6               	decf	___awmod@dividend+1,f
 11071  1584  3064               	movlw	100
 11072  1585  00F3               	movwf	___awmod@divisor
 11073  1586  3000               	movlw	0
 11074  1587  00F4               	movwf	___awmod@divisor+1
 11075  1588  31A8  20AA  3195   	fcall	___awmod
 11076  158B  0874               	movf	?___awmod+1,w
 11077  158C  0020               	movlb	0	; select bank0
 11078  158D  00A5               	movwf	___awdiv@dividend+1
 11079  158E  0873               	movf	?___awmod,w
 11080  158F  00A4               	movwf	___awdiv@dividend
 11081  1590  31A9  2142  3195   	fcall	___awdiv
 11082  1593  0020               	movlb	0	; select bank0
 11083  1594  0822               	movf	?___awdiv,w
 11084  1595  00DA               	movwf	??_scale
 11085  1596  0823               	movf	?___awdiv+1,w
 11086  1597  00DB               	movwf	??_scale+1
 11087  1598  35DA               	lslf	??_scale,f
 11088  1599  0DDB               	rlf	??_scale+1,f
 11089  159A  35DA               	lslf	??_scale,f
 11090  159B  0DDB               	rlf	??_scale+1,f
 11091  159C  085A               	movf	??_scale,w
 11092  159D  3E24               	addlw	36
 11093  159E  00DC               	movwf	??_scale+2
 11094  159F  3000               	movlw	0
 11095  15A0  3D5B               	addwfc	??_scale+1,w
 11096  15A1  00DD               	movwf	??_scale+3
 11097  15A2  3034               	movlw	low (__npowers_| (0+32768))
 11098  15A3  075C               	addwf	??_scale+2,w
 11099  15A4  0084               	movwf	4
 11100  15A5  30B8               	movlw	high (__npowers_| (0+32768))
 11101  15A6  3D5D               	addwfc	??_scale+3,w
 11102  15A7  0085               	movwf	5
 11103  15A8  3F00               	moviw [0]fsr0
 11104  15A9  00DE               	movwf	??_scale+4
 11105  15AA  3F01               	moviw [1]fsr0
 11106  15AB  00DF               	movwf	??_scale+5
 11107  15AC  3F02               	moviw [2]fsr0
 11108  15AD  00E0               	movwf	??_scale+6
 11109  15AE  3F03               	moviw [3]fsr0
 11110  15AF  00E1               	movwf	??_scale+7
 11111  15B0  0861               	movf	??_scale+7,w
 11112  15B1  00BF               	movwf	___flmul@b+3
 11113  15B2  0860               	movf	??_scale+6,w
 11114  15B3  00BE               	movwf	___flmul@b+2
 11115  15B4  085F               	movf	??_scale+5,w
 11116  15B5  00BD               	movwf	___flmul@b+1
 11117  15B6  085E               	movf	??_scale+4,w
 11118  15B7  00BC               	movwf	___flmul@b
 11119  15B8  3064               	movlw	100
 11120  15B9  00A2               	movwf	___awdiv@divisor
 11121  15BA  3000               	movlw	0
 11122  15BB  00A3               	movwf	___awdiv@divisor+1
 11123  15BC  086E               	movf	scale@scl,w
 11124  15BD  00A4               	movwf	___awdiv@dividend
 11125  15BE  01A5               	clrf	___awdiv@dividend+1
 11126  15BF  1BA4               	btfsc	___awdiv@dividend,7
 11127  15C0  03A5               	decf	___awdiv@dividend+1,f
 11128  15C1  31A9  2142  3195   	fcall	___awdiv
 11129  15C4  0020               	movlb	0	; select bank0
 11130  15C5  0822               	movf	?___awdiv,w
 11131  15C6  00E2               	movwf	??_scale+8
 11132  15C7  0823               	movf	?___awdiv+1,w
 11133  15C8  00E3               	movwf	??_scale+9
 11134  15C9  35E2               	lslf	??_scale+8,f
 11135  15CA  0DE3               	rlf	??_scale+9,f
 11136  15CB  35E2               	lslf	??_scale+8,f
 11137  15CC  0DE3               	rlf	??_scale+9,f
 11138  15CD  0862               	movf	??_scale+8,w
 11139  15CE  3E48               	addlw	72
 11140  15CF  00E4               	movwf	??_scale+10
 11141  15D0  3000               	movlw	0
 11142  15D1  3D63               	addwfc	??_scale+9,w
 11143  15D2  00E5               	movwf	??_scale+11
 11144  15D3  3034               	movlw	low (__npowers_| (0+32768))
 11145  15D4  0764               	addwf	??_scale+10,w
 11146  15D5  0084               	movwf	4
 11147  15D6  30B8               	movlw	high (__npowers_| (0+32768))
 11148  15D7  3D65               	addwfc	??_scale+11,w
 11149  15D8  0085               	movwf	5
 11150  15D9  3F00               	moviw [0]fsr0
 11151  15DA  00E6               	movwf	??_scale+12
 11152  15DB  3F01               	moviw [1]fsr0
 11153  15DC  00E7               	movwf	??_scale+13
 11154  15DD  3F02               	moviw [2]fsr0
 11155  15DE  00E8               	movwf	??_scale+14
 11156  15DF  3F03               	moviw [3]fsr0
 11157  15E0  00E9               	movwf	??_scale+15
 11158  15E1  0869               	movf	??_scale+15,w
 11159  15E2  00C3               	movwf	___flmul@a+3
 11160  15E3  0868               	movf	??_scale+14,w
 11161  15E4  00C2               	movwf	___flmul@a+2
 11162  15E5  0867               	movf	??_scale+13,w
 11163  15E6  00C1               	movwf	___flmul@a+1
 11164  15E7  0866               	movf	??_scale+12,w
 11165  15E8  00C0               	movwf	___flmul@a
 11166  15E9  318B  233E  3195   	fcall	___flmul
 11167  15EC  0020               	movlb	0	; select bank0
 11168  15ED  083F               	movf	?___flmul+3,w
 11169  15EE  00ED               	movwf	_scale$2209+3
 11170  15EF  083E               	movf	?___flmul+2,w
 11171  15F0  00EC               	movwf	_scale$2209+2
 11172  15F1  083D               	movf	?___flmul+1,w
 11173  15F2  00EB               	movwf	_scale$2209+1
 11174  15F3  083C               	movf	?___flmul,w
 11175  15F4  00EA               	movwf	_scale$2209
 11176                           
 11177                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11178  15F5  300A               	movlw	10
 11179  15F6  00F3               	movwf	___awmod@divisor
 11180  15F7  3000               	movlw	0
 11181  15F8  00F4               	movwf	___awmod@divisor+1
 11182  15F9  086E               	movf	scale@scl,w
 11183  15FA  00F5               	movwf	___awmod@dividend
 11184  15FB  01F6               	clrf	___awmod@dividend+1
 11185  15FC  1BF5               	btfsc	___awmod@dividend,7
 11186  15FD  03F6               	decf	___awmod@dividend+1,f
 11187  15FE  31A8  20AA  3195   	fcall	___awmod
 11188  1601  0874               	movf	?___awmod+1,w
 11189  1602  0085               	movwf	5
 11190  1603  0873               	movf	?___awmod,w
 11191  1604  0084               	movwf	4
 11192  1605  3584               	lslf	4,f
 11193  1606  0D85               	rlf	5,f
 11194  1607  3584               	lslf	4,f
 11195  1608  0D85               	rlf	5,f
 11196  1609  3034               	movlw	low (__npowers_| (0+32768))
 11197  160A  0784               	addwf	4,f
 11198  160B  30B8               	movlw	high (__npowers_| (0+32768))
 11199  160C  3D85               	addwfc	5,f
 11200  160D  3F00               	moviw [0]fsr0
 11201  160E  0020               	movlb	0	; select bank0
 11202  160F  00DA               	movwf	??_scale
 11203  1610  3F01               	moviw [1]fsr0
 11204  1611  00DB               	movwf	??_scale+1
 11205  1612  3F02               	moviw [2]fsr0
 11206  1613  00DC               	movwf	??_scale+2
 11207  1614  3F03               	moviw [3]fsr0
 11208  1615  00DD               	movwf	??_scale+3
 11209  1616  085D               	movf	??_scale+3,w
 11210  1617  00BF               	movwf	___flmul@b+3
 11211  1618  085C               	movf	??_scale+2,w
 11212  1619  00BE               	movwf	___flmul@b+2
 11213  161A  085B               	movf	??_scale+1,w
 11214  161B  00BD               	movwf	___flmul@b+1
 11215  161C  085A               	movf	??_scale,w
 11216  161D  00BC               	movwf	___flmul@b
 11217  161E  086D               	movf	_scale$2209+3,w
 11218  161F  00C3               	movwf	___flmul@a+3
 11219  1620  086C               	movf	_scale$2209+2,w
 11220  1621  00C2               	movwf	___flmul@a+2
 11221  1622  086B               	movf	_scale$2209+1,w
 11222  1623  00C1               	movwf	___flmul@a+1
 11223  1624  086A               	movf	_scale$2209,w
 11224  1625  00C0               	movwf	___flmul@a
 11225  1626  318B  233E         	fcall	___flmul
 11226  1628  0020               	movlb	0	; select bank0
 11227  1629  083F               	movf	?___flmul+3,w
 11228  162A  00D9               	movwf	?_scale+3
 11229  162B  083E               	movf	?___flmul+2,w
 11230  162C  00D8               	movwf	?_scale+2
 11231  162D  083D               	movf	?___flmul+1,w
 11232  162E  00D7               	movwf	?_scale+1
 11233  162F  083C               	movf	?___flmul,w
 11234  1630  00D6               	movwf	?_scale
 11235  1631  0008               	return
 11236  1632                     l6996:	
 11237                           
 11238                           ;doprnt.c: 432: else if(scl > 10)
 11239  1632  086E               	movf	scale@scl,w
 11240  1633  3A80               	xorlw	128
 11241  1634  3E75               	addlw	-139
 11242  1635  1C03               	skipc
 11243  1636  2E9D               	goto	l7002
 11244                           
 11245                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 11246  1637  300A               	movlw	10
 11247  1638  00F3               	movwf	___awmod@divisor
 11248  1639  3000               	movlw	0
 11249  163A  00F4               	movwf	___awmod@divisor+1
 11250  163B  086E               	movf	scale@scl,w
 11251  163C  00F5               	movwf	___awmod@dividend
 11252  163D  01F6               	clrf	___awmod@dividend+1
 11253  163E  1BF5               	btfsc	___awmod@dividend,7
 11254  163F  03F6               	decf	___awmod@dividend+1,f
 11255  1640  31A8  20AA  3195   	fcall	___awmod
 11256  1643  0874               	movf	?___awmod+1,w
 11257  1644  0085               	movwf	5
 11258  1645  0873               	movf	?___awmod,w
 11259  1646  0084               	movwf	4
 11260  1647  3584               	lslf	4,f
 11261  1648  0D85               	rlf	5,f
 11262  1649  3584               	lslf	4,f
 11263  164A  0D85               	rlf	5,f
 11264  164B  3034               	movlw	low (__npowers_| (0+32768))
 11265  164C  0784               	addwf	4,f
 11266  164D  30B8               	movlw	high (__npowers_| (0+32768))
 11267  164E  3D85               	addwfc	5,f
 11268  164F  3F00               	moviw [0]fsr0
 11269  1650  0020               	movlb	0	; select bank0
 11270  1651  00DA               	movwf	??_scale
 11271  1652  3F01               	moviw [1]fsr0
 11272  1653  00DB               	movwf	??_scale+1
 11273  1654  3F02               	moviw [2]fsr0
 11274  1655  00DC               	movwf	??_scale+2
 11275  1656  3F03               	moviw [3]fsr0
 11276  1657  00DD               	movwf	??_scale+3
 11277  1658  085D               	movf	??_scale+3,w
 11278  1659  00BF               	movwf	___flmul@b+3
 11279  165A  085C               	movf	??_scale+2,w
 11280  165B  00BE               	movwf	___flmul@b+2
 11281  165C  085B               	movf	??_scale+1,w
 11282  165D  00BD               	movwf	___flmul@b+1
 11283  165E  085A               	movf	??_scale,w
 11284  165F  00BC               	movwf	___flmul@b
 11285  1660  300A               	movlw	10
 11286  1661  00A2               	movwf	___awdiv@divisor
 11287  1662  3000               	movlw	0
 11288  1663  00A3               	movwf	___awdiv@divisor+1
 11289  1664  086E               	movf	scale@scl,w
 11290  1665  00A4               	movwf	___awdiv@dividend
 11291  1666  01A5               	clrf	___awdiv@dividend+1
 11292  1667  1BA4               	btfsc	___awdiv@dividend,7
 11293  1668  03A5               	decf	___awdiv@dividend+1,f
 11294  1669  31A9  2142  3195   	fcall	___awdiv
 11295  166C  0020               	movlb	0	; select bank0
 11296  166D  0822               	movf	?___awdiv,w
 11297  166E  00DE               	movwf	??_scale+4
 11298  166F  0823               	movf	?___awdiv+1,w
 11299  1670  00DF               	movwf	??_scale+5
 11300  1671  35DE               	lslf	??_scale+4,f
 11301  1672  0DDF               	rlf	??_scale+5,f
 11302  1673  35DE               	lslf	??_scale+4,f
 11303  1674  0DDF               	rlf	??_scale+5,f
 11304  1675  085E               	movf	??_scale+4,w
 11305  1676  3E24               	addlw	36
 11306  1677  00E0               	movwf	??_scale+6
 11307  1678  3000               	movlw	0
 11308  1679  3D5F               	addwfc	??_scale+5,w
 11309  167A  00E1               	movwf	??_scale+7
 11310  167B  3034               	movlw	low (__npowers_| (0+32768))
 11311  167C  0760               	addwf	??_scale+6,w
 11312  167D  0084               	movwf	4
 11313  167E  30B8               	movlw	high (__npowers_| (0+32768))
 11314  167F  3D61               	addwfc	??_scale+7,w
 11315  1680  0085               	movwf	5
 11316  1681  3F00               	moviw [0]fsr0
 11317  1682  00E2               	movwf	??_scale+8
 11318  1683  3F01               	moviw [1]fsr0
 11319  1684  00E3               	movwf	??_scale+9
 11320  1685  3F02               	moviw [2]fsr0
 11321  1686  00E4               	movwf	??_scale+10
 11322  1687  3F03               	moviw [3]fsr0
 11323  1688  00E5               	movwf	??_scale+11
 11324  1689  0865               	movf	??_scale+11,w
 11325  168A  00C3               	movwf	___flmul@a+3
 11326  168B  0864               	movf	??_scale+10,w
 11327  168C  00C2               	movwf	___flmul@a+2
 11328  168D  0863               	movf	??_scale+9,w
 11329  168E  00C1               	movwf	___flmul@a+1
 11330  168F  0862               	movf	??_scale+8,w
 11331  1690  00C0               	movwf	___flmul@a
 11332  1691  318B  233E         	fcall	___flmul
 11333  1693  0020               	movlb	0	; select bank0
 11334  1694  083F               	movf	?___flmul+3,w
 11335  1695  00D9               	movwf	?_scale+3
 11336  1696  083E               	movf	?___flmul+2,w
 11337  1697  00D8               	movwf	?_scale+2
 11338  1698  083D               	movf	?___flmul+1,w
 11339  1699  00D7               	movwf	?_scale+1
 11340  169A  083C               	movf	?___flmul,w
 11341  169B  00D6               	movwf	?_scale
 11342  169C  0008               	return
 11343  169D                     l7002:	
 11344                           
 11345                           ;doprnt.c: 434: return _npowers_[scl];
 11346  169D  086E               	movf	scale@scl,w
 11347  169E  00DA               	movwf	??_scale
 11348  169F  01DB               	clrf	??_scale+1
 11349  16A0  35DA               	lslf	??_scale,f
 11350  16A1  0DDB               	rlf	??_scale+1,f
 11351  16A2  35DA               	lslf	??_scale,f
 11352  16A3  0DDB               	rlf	??_scale+1,f
 11353  16A4  3034               	movlw	low (__npowers_| (0+32768))
 11354  16A5  075A               	addwf	??_scale,w
 11355  16A6  0084               	movwf	4
 11356  16A7  30B8               	movlw	high (__npowers_| (0+32768))
 11357  16A8  3D5B               	addwfc	??_scale+1,w
 11358  16A9  0085               	movwf	5
 11359  16AA  3F00               	moviw [0]fsr0
 11360  16AB  00DC               	movwf	??_scale+2
 11361  16AC  3F01               	moviw [1]fsr0
 11362  16AD  00DD               	movwf	??_scale+3
 11363  16AE  3F02               	moviw [2]fsr0
 11364  16AF  00DE               	movwf	??_scale+4
 11365  16B0  3F03               	moviw [3]fsr0
 11366  16B1  00DF               	movwf	??_scale+5
 11367  16B2  085F               	movf	??_scale+5,w
 11368  16B3  00D9               	movwf	?_scale+3
 11369  16B4  085E               	movf	??_scale+4,w
 11370  16B5  00D8               	movwf	?_scale+2
 11371  16B6  085D               	movf	??_scale+3,w
 11372  16B7  00D7               	movwf	?_scale+1
 11373  16B8  085C               	movf	??_scale+2,w
 11374  16B9  00D6               	movwf	?_scale
 11375  16BA  0008               	return
 11376  16BB                     l7006:	
 11377                           
 11378                           ;doprnt.c: 435: }
 11379                           ;doprnt.c: 436: if(scl>=110)
 11380  16BB  086E               	movf	scale@scl,w
 11381  16BC  3A80               	xorlw	128
 11382  16BD  3E12               	addlw	-238
 11383  16BE  1C03               	skipc
 11384  16BF  2F77               	goto	l7014
 11385                           
 11386                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11387  16C0  300A               	movlw	10
 11388  16C1  00A2               	movwf	___awdiv@divisor
 11389  16C2  3000               	movlw	0
 11390  16C3  00A3               	movwf	___awdiv@divisor+1
 11391  16C4  086E               	movf	scale@scl,w
 11392  16C5  00F5               	movwf	___awmod@dividend
 11393  16C6  01F6               	clrf	___awmod@dividend+1
 11394  16C7  1BF5               	btfsc	___awmod@dividend,7
 11395  16C8  03F6               	decf	___awmod@dividend+1,f
 11396  16C9  3064               	movlw	100
 11397  16CA  00F3               	movwf	___awmod@divisor
 11398  16CB  3000               	movlw	0
 11399  16CC  00F4               	movwf	___awmod@divisor+1
 11400  16CD  31A8  20AA  3195   	fcall	___awmod
 11401  16D0  0874               	movf	?___awmod+1,w
 11402  16D1  0020               	movlb	0	; select bank0
 11403  16D2  00A5               	movwf	___awdiv@dividend+1
 11404  16D3  0873               	movf	?___awmod,w
 11405  16D4  00A4               	movwf	___awdiv@dividend
 11406  16D5  31A9  2142  3195   	fcall	___awdiv
 11407  16D8  0020               	movlb	0	; select bank0
 11408  16D9  0822               	movf	?___awdiv,w
 11409  16DA  00DA               	movwf	??_scale
 11410  16DB  0823               	movf	?___awdiv+1,w
 11411  16DC  00DB               	movwf	??_scale+1
 11412  16DD  35DA               	lslf	??_scale,f
 11413  16DE  0DDB               	rlf	??_scale+1,f
 11414  16DF  35DA               	lslf	??_scale,f
 11415  16E0  0DDB               	rlf	??_scale+1,f
 11416  16E1  085A               	movf	??_scale,w
 11417  16E2  3E24               	addlw	36
 11418  16E3  00DC               	movwf	??_scale+2
 11419  16E4  3000               	movlw	0
 11420  16E5  3D5B               	addwfc	??_scale+1,w
 11421  16E6  00DD               	movwf	??_scale+3
 11422  16E7  3000               	movlw	low (__powers_| (0+32768))
 11423  16E8  075C               	addwf	??_scale+2,w
 11424  16E9  0084               	movwf	4
 11425  16EA  30B8               	movlw	high (__powers_| (0+32768))
 11426  16EB  3D5D               	addwfc	??_scale+3,w
 11427  16EC  0085               	movwf	5
 11428  16ED  3F00               	moviw [0]fsr0
 11429  16EE  00DE               	movwf	??_scale+4
 11430  16EF  3F01               	moviw [1]fsr0
 11431  16F0  00DF               	movwf	??_scale+5
 11432  16F1  3F02               	moviw [2]fsr0
 11433  16F2  00E0               	movwf	??_scale+6
 11434  16F3  3F03               	moviw [3]fsr0
 11435  16F4  00E1               	movwf	??_scale+7
 11436  16F5  0861               	movf	??_scale+7,w
 11437  16F6  00BF               	movwf	___flmul@b+3
 11438  16F7  0860               	movf	??_scale+6,w
 11439  16F8  00BE               	movwf	___flmul@b+2
 11440  16F9  085F               	movf	??_scale+5,w
 11441  16FA  00BD               	movwf	___flmul@b+1
 11442  16FB  085E               	movf	??_scale+4,w
 11443  16FC  00BC               	movwf	___flmul@b
 11444  16FD  3064               	movlw	100
 11445  16FE  00A2               	movwf	___awdiv@divisor
 11446  16FF  3000               	movlw	0
 11447  1700  00A3               	movwf	___awdiv@divisor+1
 11448  1701  086E               	movf	scale@scl,w
 11449  1702  00A4               	movwf	___awdiv@dividend
 11450  1703  01A5               	clrf	___awdiv@dividend+1
 11451  1704  1BA4               	btfsc	___awdiv@dividend,7
 11452  1705  03A5               	decf	___awdiv@dividend+1,f
 11453  1706  31A9  2142  3195   	fcall	___awdiv
 11454  1709  0020               	movlb	0	; select bank0
 11455  170A  0822               	movf	?___awdiv,w
 11456  170B  00E2               	movwf	??_scale+8
 11457  170C  0823               	movf	?___awdiv+1,w
 11458  170D  00E3               	movwf	??_scale+9
 11459  170E  35E2               	lslf	??_scale+8,f
 11460  170F  0DE3               	rlf	??_scale+9,f
 11461  1710  35E2               	lslf	??_scale+8,f
 11462  1711  0DE3               	rlf	??_scale+9,f
 11463  1712  0862               	movf	??_scale+8,w
 11464  1713  3E48               	addlw	72
 11465  1714  00E4               	movwf	??_scale+10
 11466  1715  3000               	movlw	0
 11467  1716  3D63               	addwfc	??_scale+9,w
 11468  1717  00E5               	movwf	??_scale+11
 11469  1718  3000               	movlw	low (__powers_| (0+32768))
 11470  1719  0764               	addwf	??_scale+10,w
 11471  171A  0084               	movwf	4
 11472  171B  30B8               	movlw	high (__powers_| (0+32768))
 11473  171C  3D65               	addwfc	??_scale+11,w
 11474  171D  0085               	movwf	5
 11475  171E  3F00               	moviw [0]fsr0
 11476  171F  00E6               	movwf	??_scale+12
 11477  1720  3F01               	moviw [1]fsr0
 11478  1721  00E7               	movwf	??_scale+13
 11479  1722  3F02               	moviw [2]fsr0
 11480  1723  00E8               	movwf	??_scale+14
 11481  1724  3F03               	moviw [3]fsr0
 11482  1725  00E9               	movwf	??_scale+15
 11483  1726  0869               	movf	??_scale+15,w
 11484  1727  00C3               	movwf	___flmul@a+3
 11485  1728  0868               	movf	??_scale+14,w
 11486  1729  00C2               	movwf	___flmul@a+2
 11487  172A  0867               	movf	??_scale+13,w
 11488  172B  00C1               	movwf	___flmul@a+1
 11489  172C  0866               	movf	??_scale+12,w
 11490  172D  00C0               	movwf	___flmul@a
 11491  172E  318B  233E  3195   	fcall	___flmul
 11492  1731  0020               	movlb	0	; select bank0
 11493  1732  083F               	movf	?___flmul+3,w
 11494  1733  00ED               	movwf	_scale$2209+3
 11495  1734  083E               	movf	?___flmul+2,w
 11496  1735  00EC               	movwf	_scale$2209+2
 11497  1736  083D               	movf	?___flmul+1,w
 11498  1737  00EB               	movwf	_scale$2209+1
 11499  1738  083C               	movf	?___flmul,w
 11500  1739  00EA               	movwf	_scale$2209
 11501                           
 11502                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11503  173A  300A               	movlw	10
 11504  173B  00F3               	movwf	___awmod@divisor
 11505  173C  3000               	movlw	0
 11506  173D  00F4               	movwf	___awmod@divisor+1
 11507  173E  086E               	movf	scale@scl,w
 11508  173F  00F5               	movwf	___awmod@dividend
 11509  1740  01F6               	clrf	___awmod@dividend+1
 11510  1741  1BF5               	btfsc	___awmod@dividend,7
 11511  1742  03F6               	decf	___awmod@dividend+1,f
 11512  1743  31A8  20AA  3195   	fcall	___awmod
 11513  1746  0874               	movf	?___awmod+1,w
 11514  1747  0085               	movwf	5
 11515  1748  0873               	movf	?___awmod,w
 11516  1749  0084               	movwf	4
 11517  174A  3584               	lslf	4,f
 11518  174B  0D85               	rlf	5,f
 11519  174C  3584               	lslf	4,f
 11520  174D  0D85               	rlf	5,f
 11521  174E  3000               	movlw	low (__powers_| (0+32768))
 11522  174F  0784               	addwf	4,f
 11523  1750  30B8               	movlw	high (__powers_| (0+32768))
 11524  1751  3D85               	addwfc	5,f
 11525  1752  3F00               	moviw [0]fsr0
 11526  1753  0020               	movlb	0	; select bank0
 11527  1754  00DA               	movwf	??_scale
 11528  1755  3F01               	moviw [1]fsr0
 11529  1756  00DB               	movwf	??_scale+1
 11530  1757  3F02               	moviw [2]fsr0
 11531  1758  00DC               	movwf	??_scale+2
 11532  1759  3F03               	moviw [3]fsr0
 11533  175A  00DD               	movwf	??_scale+3
 11534  175B  085D               	movf	??_scale+3,w
 11535  175C  00BF               	movwf	___flmul@b+3
 11536  175D  085C               	movf	??_scale+2,w
 11537  175E  00BE               	movwf	___flmul@b+2
 11538  175F  085B               	movf	??_scale+1,w
 11539  1760  00BD               	movwf	___flmul@b+1
 11540  1761  085A               	movf	??_scale,w
 11541  1762  00BC               	movwf	___flmul@b
 11542  1763  086D               	movf	_scale$2209+3,w
 11543  1764  00C3               	movwf	___flmul@a+3
 11544  1765  086C               	movf	_scale$2209+2,w
 11545  1766  00C2               	movwf	___flmul@a+2
 11546  1767  086B               	movf	_scale$2209+1,w
 11547  1768  00C1               	movwf	___flmul@a+1
 11548  1769  086A               	movf	_scale$2209,w
 11549  176A  00C0               	movwf	___flmul@a
 11550  176B  318B  233E         	fcall	___flmul
 11551  176D  0020               	movlb	0	; select bank0
 11552  176E  083F               	movf	?___flmul+3,w
 11553  176F  00D9               	movwf	?_scale+3
 11554  1770  083E               	movf	?___flmul+2,w
 11555  1771  00D8               	movwf	?_scale+2
 11556  1772  083D               	movf	?___flmul+1,w
 11557  1773  00D7               	movwf	?_scale+1
 11558  1774  083C               	movf	?___flmul,w
 11559  1775  00D6               	movwf	?_scale
 11560  1776  0008               	return
 11561  1777                     l7014:	
 11562                           
 11563                           ;doprnt.c: 438: else if(scl > 10)
 11564  1777  086E               	movf	scale@scl,w
 11565  1778  3A80               	xorlw	128
 11566  1779  3E75               	addlw	-139
 11567  177A  1C03               	skipc
 11568  177B  2FE2               	goto	l7020
 11569                           
 11570                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11571  177C  300A               	movlw	10
 11572  177D  00F3               	movwf	___awmod@divisor
 11573  177E  3000               	movlw	0
 11574  177F  00F4               	movwf	___awmod@divisor+1
 11575  1780  086E               	movf	scale@scl,w
 11576  1781  00F5               	movwf	___awmod@dividend
 11577  1782  01F6               	clrf	___awmod@dividend+1
 11578  1783  1BF5               	btfsc	___awmod@dividend,7
 11579  1784  03F6               	decf	___awmod@dividend+1,f
 11580  1785  31A8  20AA  3195   	fcall	___awmod
 11581  1788  0874               	movf	?___awmod+1,w
 11582  1789  0085               	movwf	5
 11583  178A  0873               	movf	?___awmod,w
 11584  178B  0084               	movwf	4
 11585  178C  3584               	lslf	4,f
 11586  178D  0D85               	rlf	5,f
 11587  178E  3584               	lslf	4,f
 11588  178F  0D85               	rlf	5,f
 11589  1790  3000               	movlw	low (__powers_| (0+32768))
 11590  1791  0784               	addwf	4,f
 11591  1792  30B8               	movlw	high (__powers_| (0+32768))
 11592  1793  3D85               	addwfc	5,f
 11593  1794  3F00               	moviw [0]fsr0
 11594  1795  0020               	movlb	0	; select bank0
 11595  1796  00DA               	movwf	??_scale
 11596  1797  3F01               	moviw [1]fsr0
 11597  1798  00DB               	movwf	??_scale+1
 11598  1799  3F02               	moviw [2]fsr0
 11599  179A  00DC               	movwf	??_scale+2
 11600  179B  3F03               	moviw [3]fsr0
 11601  179C  00DD               	movwf	??_scale+3
 11602  179D  085D               	movf	??_scale+3,w
 11603  179E  00BF               	movwf	___flmul@b+3
 11604  179F  085C               	movf	??_scale+2,w
 11605  17A0  00BE               	movwf	___flmul@b+2
 11606  17A1  085B               	movf	??_scale+1,w
 11607  17A2  00BD               	movwf	___flmul@b+1
 11608  17A3  085A               	movf	??_scale,w
 11609  17A4  00BC               	movwf	___flmul@b
 11610  17A5  300A               	movlw	10
 11611  17A6  00A2               	movwf	___awdiv@divisor
 11612  17A7  3000               	movlw	0
 11613  17A8  00A3               	movwf	___awdiv@divisor+1
 11614  17A9  086E               	movf	scale@scl,w
 11615  17AA  00A4               	movwf	___awdiv@dividend
 11616  17AB  01A5               	clrf	___awdiv@dividend+1
 11617  17AC  1BA4               	btfsc	___awdiv@dividend,7
 11618  17AD  03A5               	decf	___awdiv@dividend+1,f
 11619  17AE  31A9  2142  3195   	fcall	___awdiv
 11620  17B1  0020               	movlb	0	; select bank0
 11621  17B2  0822               	movf	?___awdiv,w
 11622  17B3  00DE               	movwf	??_scale+4
 11623  17B4  0823               	movf	?___awdiv+1,w
 11624  17B5  00DF               	movwf	??_scale+5
 11625  17B6  35DE               	lslf	??_scale+4,f
 11626  17B7  0DDF               	rlf	??_scale+5,f
 11627  17B8  35DE               	lslf	??_scale+4,f
 11628  17B9  0DDF               	rlf	??_scale+5,f
 11629  17BA  085E               	movf	??_scale+4,w
 11630  17BB  3E24               	addlw	36
 11631  17BC  00E0               	movwf	??_scale+6
 11632  17BD  3000               	movlw	0
 11633  17BE  3D5F               	addwfc	??_scale+5,w
 11634  17BF  00E1               	movwf	??_scale+7
 11635  17C0  3000               	movlw	low (__powers_| (0+32768))
 11636  17C1  0760               	addwf	??_scale+6,w
 11637  17C2  0084               	movwf	4
 11638  17C3  30B8               	movlw	high (__powers_| (0+32768))
 11639  17C4  3D61               	addwfc	??_scale+7,w
 11640  17C5  0085               	movwf	5
 11641  17C6  3F00               	moviw [0]fsr0
 11642  17C7  00E2               	movwf	??_scale+8
 11643  17C8  3F01               	moviw [1]fsr0
 11644  17C9  00E3               	movwf	??_scale+9
 11645  17CA  3F02               	moviw [2]fsr0
 11646  17CB  00E4               	movwf	??_scale+10
 11647  17CC  3F03               	moviw [3]fsr0
 11648  17CD  00E5               	movwf	??_scale+11
 11649  17CE  0865               	movf	??_scale+11,w
 11650  17CF  00C3               	movwf	___flmul@a+3
 11651  17D0  0864               	movf	??_scale+10,w
 11652  17D1  00C2               	movwf	___flmul@a+2
 11653  17D2  0863               	movf	??_scale+9,w
 11654  17D3  00C1               	movwf	___flmul@a+1
 11655  17D4  0862               	movf	??_scale+8,w
 11656  17D5  00C0               	movwf	___flmul@a
 11657  17D6  318B  233E         	fcall	___flmul
 11658  17D8  0020               	movlb	0	; select bank0
 11659  17D9  083F               	movf	?___flmul+3,w
 11660  17DA  00D9               	movwf	?_scale+3
 11661  17DB  083E               	movf	?___flmul+2,w
 11662  17DC  00D8               	movwf	?_scale+2
 11663  17DD  083D               	movf	?___flmul+1,w
 11664  17DE  00D7               	movwf	?_scale+1
 11665  17DF  083C               	movf	?___flmul,w
 11666  17E0  00D6               	movwf	?_scale
 11667  17E1  0008               	return
 11668  17E2                     l7020:	
 11669                           
 11670                           ;doprnt.c: 440: return _powers_[scl];
 11671  17E2  086E               	movf	scale@scl,w
 11672  17E3  00DA               	movwf	??_scale
 11673  17E4  01DB               	clrf	??_scale+1
 11674  17E5  35DA               	lslf	??_scale,f
 11675  17E6  0DDB               	rlf	??_scale+1,f
 11676  17E7  35DA               	lslf	??_scale,f
 11677  17E8  0DDB               	rlf	??_scale+1,f
 11678  17E9  3000               	movlw	low (__powers_| (0+32768))
 11679  17EA  075A               	addwf	??_scale,w
 11680  17EB  0084               	movwf	4
 11681  17EC  30B8               	movlw	high (__powers_| (0+32768))
 11682  17ED  3D5B               	addwfc	??_scale+1,w
 11683  17EE  0085               	movwf	5
 11684  17EF  3F00               	moviw [0]fsr0
 11685  17F0  00DC               	movwf	??_scale+2
 11686  17F1  3F01               	moviw [1]fsr0
 11687  17F2  00DD               	movwf	??_scale+3
 11688  17F3  3F02               	moviw [2]fsr0
 11689  17F4  00DE               	movwf	??_scale+4
 11690  17F5  3F03               	moviw [3]fsr0
 11691  17F6  00DF               	movwf	??_scale+5
 11692  17F7  085F               	movf	??_scale+5,w
 11693  17F8  00D9               	movwf	?_scale+3
 11694  17F9  085E               	movf	??_scale+4,w
 11695  17FA  00D8               	movwf	?_scale+2
 11696  17FB  085D               	movf	??_scale+3,w
 11697  17FC  00D7               	movwf	?_scale+1
 11698  17FD  085C               	movf	??_scale+2,w
 11699  17FE  00D6               	movwf	?_scale
 11700  17FF  0008               	return
 11701  1800                     __end_of_scale:	
 11702                           
 11703                           	psect	text10
 11704  363D                     __ptext10:	
 11705 ;; *************** function _isdigit *****************
 11706 ;; Defined at:
 11707 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11708 ;; Parameters:    Size  Location     Type
 11709 ;;  c               1    wreg     unsigned char 
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;  c               1    4[COMMON] unsigned char 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;		None               void
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, status,0
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11722 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11725 ;;Total ram usage:        2 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    2
 11728 ;; This function calls:
 11729 ;;		Nothing
 11730 ;; This function is called by:
 11731 ;;		_sprintf
 11732 ;; This function uses a non-reentrant model
 11733 ;;
 11734                           
 11735                           
 11736                           ;psect for function _isdigit
 11737  363D                     _isdigit:	
 11738                           
 11739                           ;incstack = 0
 11740                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11741                           ;isdigit@c stored from wreg
 11742  363D  00F4               	movwf	isdigit@c
 11743  363E  01F3               	clrf	_isdigit$1808
 11744  363F  303A               	movlw	58
 11745  3640  0274               	subwf	isdigit@c,w
 11746  3641  1803               	skipnc
 11747  3642  2E49               	goto	l4752
 11748  3643  3030               	movlw	48
 11749  3644  0274               	subwf	isdigit@c,w
 11750  3645  1C03               	skipc
 11751  3646  2E49               	goto	l4752
 11752  3647  01F3               	clrf	_isdigit$1808
 11753  3648  0AF3               	incf	_isdigit$1808,f
 11754  3649                     l4752:	
 11755  3649  0C73               	rrf	_isdigit$1808,w
 11756  364A  0008               	return
 11757  364B                     __end_of_isdigit:	
 11758                           
 11759                           	psect	text11
 11760  1C51                     __ptext11:	
 11761 ;; *************** function _fround *****************
 11762 ;; Defined at:
 11763 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  prec            1    wreg     unsigned char 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  prec            1    8[BANK1 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  4   54[BANK0 ] unsigned char 
 11770 ;; Registers used:
 11771 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11777 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11778 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11779 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11780 ;;      Totals:         0      24       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11781 ;;Total ram usage:       33 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    4
 11784 ;; This function calls:
 11785 ;;		___awdiv
 11786 ;;		___awmod
 11787 ;;		___flmul
 11788 ;; This function is called by:
 11789 ;;		_sprintf
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           
 11794                           ;psect for function _fround
 11795  1C51                     _fround:	
 11796                           
 11797                           ;incstack = 0
 11798                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11799                           ;fround@prec stored from wreg
 11800  1C51  0021               	movlb	1	; select bank1
 11801  1C52  00A8               	movwf	fround@prec^(0+128)
 11802                           
 11803                           ;doprnt.c: 413: if(prec>=110)
 11804  1C53  306E               	movlw	110
 11805  1C54  0228               	subwf	fround@prec^(0+128),w
 11806  1C55  1C03               	skipc
 11807  1C56  2D55               	goto	l6972
 11808                           
 11809                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11810  1C57  300A               	movlw	10
 11811  1C58  0020               	movlb	0	; select bank0
 11812  1C59  00A2               	movwf	___awdiv@divisor
 11813  1C5A  3000               	movlw	0
 11814  1C5B  00A3               	movwf	___awdiv@divisor+1
 11815  1C5C  0021               	movlb	1	; select bank1
 11816  1C5D  0828               	movf	fround@prec^(0+128),w
 11817  1C5E  0020               	movlb	0	; select bank0
 11818  1C5F  00DA               	movwf	??_fround
 11819  1C60  01DB               	clrf	??_fround+1
 11820  1C61  085A               	movf	??_fround,w
 11821  1C62  00F5               	movwf	___awmod@dividend
 11822  1C63  085B               	movf	??_fround+1,w
 11823  1C64  00F6               	movwf	___awmod@dividend+1
 11824  1C65  3064               	movlw	100
 11825  1C66  00F3               	movwf	___awmod@divisor
 11826  1C67  3000               	movlw	0
 11827  1C68  00F4               	movwf	___awmod@divisor+1
 11828  1C69  31A8  20AA  319C   	fcall	___awmod
 11829  1C6C  0874               	movf	?___awmod+1,w
 11830  1C6D  0020               	movlb	0	; select bank0
 11831  1C6E  00A5               	movwf	___awdiv@dividend+1
 11832  1C6F  0873               	movf	?___awmod,w
 11833  1C70  00A4               	movwf	___awdiv@dividend
 11834  1C71  31A9  2142  319C   	fcall	___awdiv
 11835  1C74  0020               	movlb	0	; select bank0
 11836  1C75  0822               	movf	?___awdiv,w
 11837  1C76  00DC               	movwf	??_fround+2
 11838  1C77  0823               	movf	?___awdiv+1,w
 11839  1C78  00DD               	movwf	??_fround+3
 11840  1C79  35DC               	lslf	??_fround+2,f
 11841  1C7A  0DDD               	rlf	??_fround+3,f
 11842  1C7B  35DC               	lslf	??_fround+2,f
 11843  1C7C  0DDD               	rlf	??_fround+3,f
 11844  1C7D  085C               	movf	??_fround+2,w
 11845  1C7E  3E24               	addlw	36
 11846  1C7F  00DE               	movwf	??_fround+4
 11847  1C80  3000               	movlw	0
 11848  1C81  3D5D               	addwfc	??_fround+3,w
 11849  1C82  00DF               	movwf	??_fround+5
 11850  1C83  3034               	movlw	low (__npowers_| (0+32768))
 11851  1C84  075E               	addwf	??_fround+4,w
 11852  1C85  0084               	movwf	4
 11853  1C86  30B8               	movlw	high (__npowers_| (0+32768))
 11854  1C87  3D5F               	addwfc	??_fround+5,w
 11855  1C88  0085               	movwf	5
 11856  1C89  3F00               	moviw [0]fsr0
 11857  1C8A  00E0               	movwf	??_fround+6
 11858  1C8B  3F01               	moviw [1]fsr0
 11859  1C8C  00E1               	movwf	??_fround+7
 11860  1C8D  3F02               	moviw [2]fsr0
 11861  1C8E  00E2               	movwf	??_fround+8
 11862  1C8F  3F03               	moviw [3]fsr0
 11863  1C90  00E3               	movwf	??_fround+9
 11864  1C91  0863               	movf	??_fround+9,w
 11865  1C92  00BF               	movwf	___flmul@b+3
 11866  1C93  0862               	movf	??_fround+8,w
 11867  1C94  00BE               	movwf	___flmul@b+2
 11868  1C95  0861               	movf	??_fround+7,w
 11869  1C96  00BD               	movwf	___flmul@b+1
 11870  1C97  0860               	movf	??_fround+6,w
 11871  1C98  00BC               	movwf	___flmul@b
 11872  1C99  3064               	movlw	100
 11873  1C9A  00A2               	movwf	___awdiv@divisor
 11874  1C9B  3000               	movlw	0
 11875  1C9C  00A3               	movwf	___awdiv@divisor+1
 11876  1C9D  0021               	movlb	1	; select bank1
 11877  1C9E  0828               	movf	fround@prec^(0+128),w
 11878  1C9F  0020               	movlb	0	; select bank0
 11879  1CA0  00E4               	movwf	??_fround+10
 11880  1CA1  01E5               	clrf	??_fround+11
 11881  1CA2  0864               	movf	??_fround+10,w
 11882  1CA3  00A4               	movwf	___awdiv@dividend
 11883  1CA4  0865               	movf	??_fround+11,w
 11884  1CA5  00A5               	movwf	___awdiv@dividend+1
 11885  1CA6  31A9  2142  319C   	fcall	___awdiv
 11886  1CA9  0020               	movlb	0	; select bank0
 11887  1CAA  0822               	movf	?___awdiv,w
 11888  1CAB  00E6               	movwf	??_fround+12
 11889  1CAC  0823               	movf	?___awdiv+1,w
 11890  1CAD  00E7               	movwf	??_fround+13
 11891  1CAE  35E6               	lslf	??_fround+12,f
 11892  1CAF  0DE7               	rlf	??_fround+13,f
 11893  1CB0  35E6               	lslf	??_fround+12,f
 11894  1CB1  0DE7               	rlf	??_fround+13,f
 11895  1CB2  0866               	movf	??_fround+12,w
 11896  1CB3  3E48               	addlw	72
 11897  1CB4  00E8               	movwf	??_fround+14
 11898  1CB5  3000               	movlw	0
 11899  1CB6  3D67               	addwfc	??_fround+13,w
 11900  1CB7  00E9               	movwf	??_fround+15
 11901  1CB8  3034               	movlw	low (__npowers_| (0+32768))
 11902  1CB9  0768               	addwf	??_fround+14,w
 11903  1CBA  0084               	movwf	4
 11904  1CBB  30B8               	movlw	high (__npowers_| (0+32768))
 11905  1CBC  3D69               	addwfc	??_fround+15,w
 11906  1CBD  0085               	movwf	5
 11907  1CBE  3F00               	moviw [0]fsr0
 11908  1CBF  00EA               	movwf	??_fround+16
 11909  1CC0  3F01               	moviw [1]fsr0
 11910  1CC1  00EB               	movwf	??_fround+17
 11911  1CC2  3F02               	moviw [2]fsr0
 11912  1CC3  00EC               	movwf	??_fround+18
 11913  1CC4  3F03               	moviw [3]fsr0
 11914  1CC5  00ED               	movwf	??_fround+19
 11915  1CC6  086D               	movf	??_fround+19,w
 11916  1CC7  00C3               	movwf	___flmul@a+3
 11917  1CC8  086C               	movf	??_fround+18,w
 11918  1CC9  00C2               	movwf	___flmul@a+2
 11919  1CCA  086B               	movf	??_fround+17,w
 11920  1CCB  00C1               	movwf	___flmul@a+1
 11921  1CCC  086A               	movf	??_fround+16,w
 11922  1CCD  00C0               	movwf	___flmul@a
 11923  1CCE  318B  233E  319C   	fcall	___flmul
 11924  1CD1  0020               	movlb	0	; select bank0
 11925  1CD2  083F               	movf	?___flmul+3,w
 11926  1CD3  0021               	movlb	1	; select bank1
 11927  1CD4  00A7               	movwf	(_fround$2207+3)^(0+128)
 11928  1CD5  0020               	movlb	0	; select bank0
 11929  1CD6  083E               	movf	?___flmul+2,w
 11930  1CD7  0021               	movlb	1	; select bank1
 11931  1CD8  00A6               	movwf	(_fround$2207+2)^(0+128)
 11932  1CD9  0020               	movlb	0	; select bank0
 11933  1CDA  083D               	movf	?___flmul+1,w
 11934  1CDB  0021               	movlb	1	; select bank1
 11935  1CDC  00A5               	movwf	(_fround$2207+1)^(0+128)
 11936  1CDD  0020               	movlb	0	; select bank0
 11937  1CDE  083C               	movf	?___flmul,w
 11938  1CDF  0021               	movlb	1	; select bank1
 11939  1CE0  00A4               	movwf	_fround$2207^(0+128)
 11940                           
 11941                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11942  1CE1  300A               	movlw	10
 11943  1CE2  00F3               	movwf	___awmod@divisor
 11944  1CE3  3000               	movlw	0
 11945  1CE4  00F4               	movwf	___awmod@divisor+1
 11946  1CE5  0828               	movf	fround@prec^(0+128),w
 11947  1CE6  0020               	movlb	0	; select bank0
 11948  1CE7  00DA               	movwf	??_fround
 11949  1CE8  01DB               	clrf	??_fround+1
 11950  1CE9  085A               	movf	??_fround,w
 11951  1CEA  00F5               	movwf	___awmod@dividend
 11952  1CEB  085B               	movf	??_fround+1,w
 11953  1CEC  00F6               	movwf	___awmod@dividend+1
 11954  1CED  31A8  20AA  319C   	fcall	___awmod
 11955  1CF0  0874               	movf	?___awmod+1,w
 11956  1CF1  0085               	movwf	5
 11957  1CF2  0873               	movf	?___awmod,w
 11958  1CF3  0084               	movwf	4
 11959  1CF4  3584               	lslf	4,f
 11960  1CF5  0D85               	rlf	5,f
 11961  1CF6  3584               	lslf	4,f
 11962  1CF7  0D85               	rlf	5,f
 11963  1CF8  3034               	movlw	low (__npowers_| (0+32768))
 11964  1CF9  0784               	addwf	4,f
 11965  1CFA  30B8               	movlw	high (__npowers_| (0+32768))
 11966  1CFB  3D85               	addwfc	5,f
 11967  1CFC  3F00               	moviw [0]fsr0
 11968  1CFD  0020               	movlb	0	; select bank0
 11969  1CFE  00DC               	movwf	??_fround+2
 11970  1CFF  3F01               	moviw [1]fsr0
 11971  1D00  00DD               	movwf	??_fround+3
 11972  1D01  3F02               	moviw [2]fsr0
 11973  1D02  00DE               	movwf	??_fround+4
 11974  1D03  3F03               	moviw [3]fsr0
 11975  1D04  00DF               	movwf	??_fround+5
 11976  1D05  085F               	movf	??_fround+5,w
 11977  1D06  00BF               	movwf	___flmul@b+3
 11978  1D07  085E               	movf	??_fround+4,w
 11979  1D08  00BE               	movwf	___flmul@b+2
 11980  1D09  085D               	movf	??_fround+3,w
 11981  1D0A  00BD               	movwf	___flmul@b+1
 11982  1D0B  085C               	movf	??_fround+2,w
 11983  1D0C  00BC               	movwf	___flmul@b
 11984  1D0D  0021               	movlb	1	; select bank1
 11985  1D0E  0827               	movf	(_fround$2207+3)^(0+128),w
 11986  1D0F  0020               	movlb	0	; select bank0
 11987  1D10  00C3               	movwf	___flmul@a+3
 11988  1D11  0021               	movlb	1	; select bank1
 11989  1D12  0826               	movf	(_fround$2207+2)^(0+128),w
 11990  1D13  0020               	movlb	0	; select bank0
 11991  1D14  00C2               	movwf	___flmul@a+2
 11992  1D15  0021               	movlb	1	; select bank1
 11993  1D16  0825               	movf	(_fround$2207+1)^(0+128),w
 11994  1D17  0020               	movlb	0	; select bank0
 11995  1D18  00C1               	movwf	___flmul@a+1
 11996  1D19  0021               	movlb	1	; select bank1
 11997  1D1A  0824               	movf	_fround$2207^(0+128),w
 11998  1D1B  0020               	movlb	0	; select bank0
 11999  1D1C  00C0               	movwf	___flmul@a
 12000  1D1D  318B  233E  319C   	fcall	___flmul
 12001  1D20  0020               	movlb	0	; select bank0
 12002  1D21  083F               	movf	?___flmul+3,w
 12003  1D22  0021               	movlb	1	; select bank1
 12004  1D23  00A3               	movwf	(_fround$2208+3)^(0+128)
 12005  1D24  0020               	movlb	0	; select bank0
 12006  1D25  083E               	movf	?___flmul+2,w
 12007  1D26  0021               	movlb	1	; select bank1
 12008  1D27  00A2               	movwf	(_fround$2208+2)^(0+128)
 12009  1D28  0020               	movlb	0	; select bank0
 12010  1D29  083D               	movf	?___flmul+1,w
 12011  1D2A  0021               	movlb	1	; select bank1
 12012  1D2B  00A1               	movwf	(_fround$2208+1)^(0+128)
 12013  1D2C  0020               	movlb	0	; select bank0
 12014  1D2D  083C               	movf	?___flmul,w
 12015  1D2E  0021               	movlb	1	; select bank1
 12016  1D2F  00A0               	movwf	_fround$2208^(0+128)
 12017                           
 12018                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12019  1D30  303F               	movlw	63
 12020  1D31  0020               	movlb	0	; select bank0
 12021  1D32  00BF               	movwf	___flmul@b+3
 12022  1D33  3000               	movlw	0
 12023  1D34  00BE               	movwf	___flmul@b+2
 12024  1D35  3000               	movlw	0
 12025  1D36  00BD               	movwf	___flmul@b+1
 12026  1D37  3000               	movlw	0
 12027  1D38  00BC               	movwf	___flmul@b
 12028  1D39  0021               	movlb	1	; select bank1
 12029  1D3A  0823               	movf	(_fround$2208+3)^(0+128),w
 12030  1D3B  0020               	movlb	0	; select bank0
 12031  1D3C  00C3               	movwf	___flmul@a+3
 12032  1D3D  0021               	movlb	1	; select bank1
 12033  1D3E  0822               	movf	(_fround$2208+2)^(0+128),w
 12034  1D3F  0020               	movlb	0	; select bank0
 12035  1D40  00C2               	movwf	___flmul@a+2
 12036  1D41  0021               	movlb	1	; select bank1
 12037  1D42  0821               	movf	(_fround$2208+1)^(0+128),w
 12038  1D43  0020               	movlb	0	; select bank0
 12039  1D44  00C1               	movwf	___flmul@a+1
 12040  1D45  0021               	movlb	1	; select bank1
 12041  1D46  0820               	movf	_fround$2208^(0+128),w
 12042  1D47  0020               	movlb	0	; select bank0
 12043  1D48  00C0               	movwf	___flmul@a
 12044  1D49  318B  233E         	fcall	___flmul
 12045  1D4B  0020               	movlb	0	; select bank0
 12046  1D4C  083F               	movf	?___flmul+3,w
 12047  1D4D  00D9               	movwf	?_fround+3
 12048  1D4E  083E               	movf	?___flmul+2,w
 12049  1D4F  00D8               	movwf	?_fround+2
 12050  1D50  083D               	movf	?___flmul+1,w
 12051  1D51  00D7               	movwf	?_fround+1
 12052  1D52  083C               	movf	?___flmul,w
 12053  1D53  00D6               	movwf	?_fround
 12054  1D54  0008               	return
 12055  1D55                     l6972:	
 12056                           
 12057                           ;doprnt.c: 415: else if(prec > 10)
 12058  1D55  300B               	movlw	11
 12059  1D56  0021               	movlb	1	; select bank1
 12060  1D57  0228               	subwf	fround@prec^(0+128),w
 12061  1D58  1C03               	skipc
 12062  1D59  2DF3               	goto	l6980
 12063                           
 12064                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12065  1D5A  300A               	movlw	10
 12066  1D5B  00F3               	movwf	___awmod@divisor
 12067  1D5C  3000               	movlw	0
 12068  1D5D  00F4               	movwf	___awmod@divisor+1
 12069  1D5E  0828               	movf	fround@prec^(0+128),w
 12070  1D5F  0020               	movlb	0	; select bank0
 12071  1D60  00DA               	movwf	??_fround
 12072  1D61  01DB               	clrf	??_fround+1
 12073  1D62  085A               	movf	??_fround,w
 12074  1D63  00F5               	movwf	___awmod@dividend
 12075  1D64  085B               	movf	??_fround+1,w
 12076  1D65  00F6               	movwf	___awmod@dividend+1
 12077  1D66  31A8  20AA  319C   	fcall	___awmod
 12078  1D69  0874               	movf	?___awmod+1,w
 12079  1D6A  0085               	movwf	5
 12080  1D6B  0873               	movf	?___awmod,w
 12081  1D6C  0084               	movwf	4
 12082  1D6D  3584               	lslf	4,f
 12083  1D6E  0D85               	rlf	5,f
 12084  1D6F  3584               	lslf	4,f
 12085  1D70  0D85               	rlf	5,f
 12086  1D71  3034               	movlw	low (__npowers_| (0+32768))
 12087  1D72  0784               	addwf	4,f
 12088  1D73  30B8               	movlw	high (__npowers_| (0+32768))
 12089  1D74  3D85               	addwfc	5,f
 12090  1D75  3F00               	moviw [0]fsr0
 12091  1D76  0020               	movlb	0	; select bank0
 12092  1D77  00DC               	movwf	??_fround+2
 12093  1D78  3F01               	moviw [1]fsr0
 12094  1D79  00DD               	movwf	??_fround+3
 12095  1D7A  3F02               	moviw [2]fsr0
 12096  1D7B  00DE               	movwf	??_fround+4
 12097  1D7C  3F03               	moviw [3]fsr0
 12098  1D7D  00DF               	movwf	??_fround+5
 12099  1D7E  085F               	movf	??_fround+5,w
 12100  1D7F  00BF               	movwf	___flmul@b+3
 12101  1D80  085E               	movf	??_fround+4,w
 12102  1D81  00BE               	movwf	___flmul@b+2
 12103  1D82  085D               	movf	??_fround+3,w
 12104  1D83  00BD               	movwf	___flmul@b+1
 12105  1D84  085C               	movf	??_fround+2,w
 12106  1D85  00BC               	movwf	___flmul@b
 12107  1D86  300A               	movlw	10
 12108  1D87  00A2               	movwf	___awdiv@divisor
 12109  1D88  3000               	movlw	0
 12110  1D89  00A3               	movwf	___awdiv@divisor+1
 12111  1D8A  0021               	movlb	1	; select bank1
 12112  1D8B  0828               	movf	fround@prec^(0+128),w
 12113  1D8C  0020               	movlb	0	; select bank0
 12114  1D8D  00E0               	movwf	??_fround+6
 12115  1D8E  01E1               	clrf	??_fround+7
 12116  1D8F  0860               	movf	??_fround+6,w
 12117  1D90  00A4               	movwf	___awdiv@dividend
 12118  1D91  0861               	movf	??_fround+7,w
 12119  1D92  00A5               	movwf	___awdiv@dividend+1
 12120  1D93  31A9  2142  319C   	fcall	___awdiv
 12121  1D96  0020               	movlb	0	; select bank0
 12122  1D97  0822               	movf	?___awdiv,w
 12123  1D98  00E2               	movwf	??_fround+8
 12124  1D99  0823               	movf	?___awdiv+1,w
 12125  1D9A  00E3               	movwf	??_fround+9
 12126  1D9B  35E2               	lslf	??_fround+8,f
 12127  1D9C  0DE3               	rlf	??_fround+9,f
 12128  1D9D  35E2               	lslf	??_fround+8,f
 12129  1D9E  0DE3               	rlf	??_fround+9,f
 12130  1D9F  0862               	movf	??_fround+8,w
 12131  1DA0  3E24               	addlw	36
 12132  1DA1  00E4               	movwf	??_fround+10
 12133  1DA2  3000               	movlw	0
 12134  1DA3  3D63               	addwfc	??_fround+9,w
 12135  1DA4  00E5               	movwf	??_fround+11
 12136  1DA5  3034               	movlw	low (__npowers_| (0+32768))
 12137  1DA6  0764               	addwf	??_fround+10,w
 12138  1DA7  0084               	movwf	4
 12139  1DA8  30B8               	movlw	high (__npowers_| (0+32768))
 12140  1DA9  3D65               	addwfc	??_fround+11,w
 12141  1DAA  0085               	movwf	5
 12142  1DAB  3F00               	moviw [0]fsr0
 12143  1DAC  00E6               	movwf	??_fround+12
 12144  1DAD  3F01               	moviw [1]fsr0
 12145  1DAE  00E7               	movwf	??_fround+13
 12146  1DAF  3F02               	moviw [2]fsr0
 12147  1DB0  00E8               	movwf	??_fround+14
 12148  1DB1  3F03               	moviw [3]fsr0
 12149  1DB2  00E9               	movwf	??_fround+15
 12150  1DB3  0869               	movf	??_fround+15,w
 12151  1DB4  00C3               	movwf	___flmul@a+3
 12152  1DB5  0868               	movf	??_fround+14,w
 12153  1DB6  00C2               	movwf	___flmul@a+2
 12154  1DB7  0867               	movf	??_fround+13,w
 12155  1DB8  00C1               	movwf	___flmul@a+1
 12156  1DB9  0866               	movf	??_fround+12,w
 12157  1DBA  00C0               	movwf	___flmul@a
 12158  1DBB  318B  233E  319C   	fcall	___flmul
 12159  1DBE  0020               	movlb	0	; select bank0
 12160  1DBF  083F               	movf	?___flmul+3,w
 12161  1DC0  0021               	movlb	1	; select bank1
 12162  1DC1  00A7               	movwf	(_fround$2207+3)^(0+128)
 12163  1DC2  0020               	movlb	0	; select bank0
 12164  1DC3  083E               	movf	?___flmul+2,w
 12165  1DC4  0021               	movlb	1	; select bank1
 12166  1DC5  00A6               	movwf	(_fround$2207+2)^(0+128)
 12167  1DC6  0020               	movlb	0	; select bank0
 12168  1DC7  083D               	movf	?___flmul+1,w
 12169  1DC8  0021               	movlb	1	; select bank1
 12170  1DC9  00A5               	movwf	(_fround$2207+1)^(0+128)
 12171  1DCA  0020               	movlb	0	; select bank0
 12172  1DCB  083C               	movf	?___flmul,w
 12173  1DCC  0021               	movlb	1	; select bank1
 12174  1DCD  00A4               	movwf	_fround$2207^(0+128)
 12175                           
 12176                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12177  1DCE  303F               	movlw	63
 12178  1DCF  0020               	movlb	0	; select bank0
 12179  1DD0  00BF               	movwf	___flmul@b+3
 12180  1DD1  3000               	movlw	0
 12181  1DD2  00BE               	movwf	___flmul@b+2
 12182  1DD3  3000               	movlw	0
 12183  1DD4  00BD               	movwf	___flmul@b+1
 12184  1DD5  3000               	movlw	0
 12185  1DD6  00BC               	movwf	___flmul@b
 12186  1DD7  0021               	movlb	1	; select bank1
 12187  1DD8  0827               	movf	(_fround$2207+3)^(0+128),w
 12188  1DD9  0020               	movlb	0	; select bank0
 12189  1DDA  00C3               	movwf	___flmul@a+3
 12190  1DDB  0021               	movlb	1	; select bank1
 12191  1DDC  0826               	movf	(_fround$2207+2)^(0+128),w
 12192  1DDD  0020               	movlb	0	; select bank0
 12193  1DDE  00C2               	movwf	___flmul@a+2
 12194  1DDF  0021               	movlb	1	; select bank1
 12195  1DE0  0825               	movf	(_fround$2207+1)^(0+128),w
 12196  1DE1  0020               	movlb	0	; select bank0
 12197  1DE2  00C1               	movwf	___flmul@a+1
 12198  1DE3  0021               	movlb	1	; select bank1
 12199  1DE4  0824               	movf	_fround$2207^(0+128),w
 12200  1DE5  0020               	movlb	0	; select bank0
 12201  1DE6  00C0               	movwf	___flmul@a
 12202  1DE7  318B  233E         	fcall	___flmul
 12203  1DE9  0020               	movlb	0	; select bank0
 12204  1DEA  083F               	movf	?___flmul+3,w
 12205  1DEB  00D9               	movwf	?_fround+3
 12206  1DEC  083E               	movf	?___flmul+2,w
 12207  1DED  00D8               	movwf	?_fround+2
 12208  1DEE  083D               	movf	?___flmul+1,w
 12209  1DEF  00D7               	movwf	?_fround+1
 12210  1DF0  083C               	movf	?___flmul,w
 12211  1DF1  00D6               	movwf	?_fround
 12212  1DF2  0008               	return
 12213  1DF3                     l6980:	
 12214                           
 12215                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 12216  1DF3  303F               	movlw	63
 12217  1DF4  0020               	movlb	0	; select bank0
 12218  1DF5  00BF               	movwf	___flmul@b+3
 12219  1DF6  3000               	movlw	0
 12220  1DF7  00BE               	movwf	___flmul@b+2
 12221  1DF8  3000               	movlw	0
 12222  1DF9  00BD               	movwf	___flmul@b+1
 12223  1DFA  3000               	movlw	0
 12224  1DFB  00BC               	movwf	___flmul@b
 12225  1DFC  0021               	movlb	1	; select bank1
 12226  1DFD  0828               	movf	fround@prec^(0+128),w
 12227  1DFE  0020               	movlb	0	; select bank0
 12228  1DFF  00DA               	movwf	??_fround
 12229  1E00  01DB               	clrf	??_fround+1
 12230  1E01  35DA               	lslf	??_fround,f
 12231  1E02  0DDB               	rlf	??_fround+1,f
 12232  1E03  35DA               	lslf	??_fround,f
 12233  1E04  0DDB               	rlf	??_fround+1,f
 12234  1E05  3034               	movlw	low (__npowers_| (0+32768))
 12235  1E06  075A               	addwf	??_fround,w
 12236  1E07  0084               	movwf	4
 12237  1E08  30B8               	movlw	high (__npowers_| (0+32768))
 12238  1E09  3D5B               	addwfc	??_fround+1,w
 12239  1E0A  0085               	movwf	5
 12240  1E0B  3F00               	moviw [0]fsr0
 12241  1E0C  00DC               	movwf	??_fround+2
 12242  1E0D  3F01               	moviw [1]fsr0
 12243  1E0E  00DD               	movwf	??_fround+3
 12244  1E0F  3F02               	moviw [2]fsr0
 12245  1E10  00DE               	movwf	??_fround+4
 12246  1E11  3F03               	moviw [3]fsr0
 12247  1E12  00DF               	movwf	??_fround+5
 12248  1E13  085F               	movf	??_fround+5,w
 12249  1E14  00C3               	movwf	___flmul@a+3
 12250  1E15  085E               	movf	??_fround+4,w
 12251  1E16  00C2               	movwf	___flmul@a+2
 12252  1E17  085D               	movf	??_fround+3,w
 12253  1E18  00C1               	movwf	___flmul@a+1
 12254  1E19  085C               	movf	??_fround+2,w
 12255  1E1A  00C0               	movwf	___flmul@a
 12256  1E1B  318B  233E         	fcall	___flmul
 12257  1E1D  0020               	movlb	0	; select bank0
 12258  1E1E  083F               	movf	?___flmul+3,w
 12259  1E1F  00D9               	movwf	?_fround+3
 12260  1E20  083E               	movf	?___flmul+2,w
 12261  1E21  00D8               	movwf	?_fround+2
 12262  1E22  083D               	movf	?___flmul+1,w
 12263  1E23  00D7               	movwf	?_fround+1
 12264  1E24  083C               	movf	?___flmul,w
 12265  1E25  00D6               	movwf	?_fround
 12266  1E26  0008               	return
 12267  1E27                     __end_of_fround:	
 12268                           
 12269                           	psect	text12
 12270  28AA                     __ptext12:	
 12271 ;; *************** function ___awmod *****************
 12272 ;; Defined at:
 12273 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12274 ;; Parameters:    Size  Location     Type
 12275 ;;  divisor         2    3[COMMON] int 
 12276 ;;  dividend        2    5[COMMON] int 
 12277 ;; Auto vars:     Size  Location     Type
 12278 ;;  sign            1    1[BANK0 ] unsigned char 
 12279 ;;  counter         1    0[BANK0 ] unsigned char 
 12280 ;; Return value:  Size  Location     Type
 12281 ;;                  2    3[COMMON] int 
 12282 ;; Registers used:
 12283 ;;		wreg, status,2, status,0
 12284 ;; Tracked objects:
 12285 ;;		On entry : 0/0
 12286 ;;		On exit  : 0/0
 12287 ;;		Unchanged: 0/0
 12288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12292 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12293 ;;Total ram usage:        7 bytes
 12294 ;; Hardware stack levels used:    1
 12295 ;; Hardware stack levels required when called:    2
 12296 ;; This function calls:
 12297 ;;		Nothing
 12298 ;; This function is called by:
 12299 ;;		_fround
 12300 ;;		_scale
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           
 12305                           ;psect for function ___awmod
 12306  28AA                     ___awmod:	
 12307                           
 12308                           ;incstack = 0
 12309                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 12310  28AA  0020               	movlb	0	; select bank0
 12311  28AB  01A1               	clrf	___awmod@sign
 12312  28AC  1FF6               	btfss	___awmod@dividend+1,7
 12313  28AD  28B5               	goto	l6886
 12314  28AE  09F5               	comf	___awmod@dividend,f
 12315  28AF  09F6               	comf	___awmod@dividend+1,f
 12316  28B0  0AF5               	incf	___awmod@dividend,f
 12317  28B1  1903               	skipnz
 12318  28B2  0AF6               	incf	___awmod@dividend+1,f
 12319  28B3  01A1               	clrf	___awmod@sign
 12320  28B4  0AA1               	incf	___awmod@sign,f
 12321  28B5                     l6886:	
 12322  28B5  1FF4               	btfss	___awmod@divisor+1,7
 12323  28B6  28BC               	goto	l6890
 12324  28B7  09F3               	comf	___awmod@divisor,f
 12325  28B8  09F4               	comf	___awmod@divisor+1,f
 12326  28B9  0AF3               	incf	___awmod@divisor,f
 12327  28BA  1903               	skipnz
 12328  28BB  0AF4               	incf	___awmod@divisor+1,f
 12329  28BC                     l6890:	
 12330  28BC  0873               	movf	___awmod@divisor,w
 12331  28BD  0474               	iorwf	___awmod@divisor+1,w
 12332  28BE  1903               	btfsc	3,2
 12333  28BF  28E3               	goto	l6908
 12334  28C0  01A0               	clrf	___awmod@counter
 12335  28C1  0AA0               	incf	___awmod@counter,f
 12336  28C2                     l6898:	
 12337  28C2  1BF4               	btfsc	___awmod@divisor+1,7
 12338  28C3  28CE               	goto	l6900
 12339  28C4  3001               	movlw	1
 12340  28C5                     u8555:	
 12341  28C5  35F3               	lslf	___awmod@divisor,f
 12342  28C6  0DF4               	rlf	___awmod@divisor+1,f
 12343  28C7  0B89               	decfsz	9,f
 12344  28C8  28C5               	goto	u8555
 12345  28C9  3001               	movlw	1
 12346  28CA  00F7               	movwf	??___awmod
 12347  28CB  0877               	movf	??___awmod,w
 12348  28CC  07A0               	addwf	___awmod@counter,f
 12349  28CD  28C2               	goto	l6898
 12350  28CE                     l6900:	
 12351  28CE  0874               	movf	___awmod@divisor+1,w
 12352  28CF  0276               	subwf	___awmod@dividend+1,w
 12353  28D0  1D03               	skipz
 12354  28D1  28D4               	goto	u8575
 12355  28D2  0873               	movf	___awmod@divisor,w
 12356  28D3  0275               	subwf	___awmod@dividend,w
 12357  28D4                     u8575:	
 12358  28D4  1C03               	skipc
 12359  28D5  28DA               	goto	l6904
 12360  28D6  0873               	movf	___awmod@divisor,w
 12361  28D7  02F5               	subwf	___awmod@dividend,f
 12362  28D8  0874               	movf	___awmod@divisor+1,w
 12363  28D9  3BF6               	subwfb	___awmod@dividend+1,f
 12364  28DA                     l6904:	
 12365  28DA  3001               	movlw	1
 12366  28DB                     u8585:	
 12367  28DB  36F4               	lsrf	___awmod@divisor+1,f
 12368  28DC  0CF3               	rrf	___awmod@divisor,f
 12369  28DD  0B89               	decfsz	9,f
 12370  28DE  28DB               	goto	u8585
 12371  28DF  3001               	movlw	1
 12372  28E0  02A0               	subwf	___awmod@counter,f
 12373  28E1  1D03               	btfss	3,2
 12374  28E2  28CE               	goto	l6900
 12375  28E3                     l6908:	
 12376  28E3  0821               	movf	___awmod@sign,w
 12377  28E4  1903               	btfsc	3,2
 12378  28E5  28EB               	goto	l6912
 12379  28E6  09F5               	comf	___awmod@dividend,f
 12380  28E7  09F6               	comf	___awmod@dividend+1,f
 12381  28E8  0AF5               	incf	___awmod@dividend,f
 12382  28E9  1903               	skipnz
 12383  28EA  0AF6               	incf	___awmod@dividend+1,f
 12384  28EB                     l6912:	
 12385  28EB  0876               	movf	___awmod@dividend+1,w
 12386  28EC  00F4               	movwf	?___awmod+1
 12387  28ED  0875               	movf	___awmod@dividend,w
 12388  28EE  00F3               	movwf	?___awmod
 12389  28EF  0008               	return
 12390  28F0                     __end_of___awmod:	
 12391                           
 12392                           	psect	text13
 12393  2942                     __ptext13:	
 12394 ;; *************** function ___awdiv *****************
 12395 ;; Defined at:
 12396 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12397 ;; Parameters:    Size  Location     Type
 12398 ;;  divisor         2    2[BANK0 ] int 
 12399 ;;  dividend        2    4[BANK0 ] int 
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;  quotient        2    9[BANK0 ] int 
 12402 ;;  sign            1    8[BANK0 ] unsigned char 
 12403 ;;  counter         1    7[BANK0 ] unsigned char 
 12404 ;; Return value:  Size  Location     Type
 12405 ;;                  2    2[BANK0 ] int 
 12406 ;; Registers used:
 12407 ;;		wreg, status,2, status,0
 12408 ;; Tracked objects:
 12409 ;;		On entry : 0/0
 12410 ;;		On exit  : 0/0
 12411 ;;		Unchanged: 0/0
 12412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12413 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12414 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12415 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12416 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12417 ;;Total ram usage:        9 bytes
 12418 ;; Hardware stack levels used:    1
 12419 ;; Hardware stack levels required when called:    2
 12420 ;; This function calls:
 12421 ;;		Nothing
 12422 ;; This function is called by:
 12423 ;;		_fround
 12424 ;;		_scale
 12425 ;;		_sprintf
 12426 ;; This function uses a non-reentrant model
 12427 ;;
 12428                           
 12429                           
 12430                           ;psect for function ___awdiv
 12431  2942                     ___awdiv:	
 12432                           
 12433                           ;incstack = 0
 12434                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12435  2942  0020               	movlb	0	; select bank0
 12436  2943  01A8               	clrf	___awdiv@sign
 12437  2944  1FA3               	btfss	___awdiv@divisor+1,7
 12438  2945  294D               	goto	l6842
 12439  2946  09A2               	comf	___awdiv@divisor,f
 12440  2947  09A3               	comf	___awdiv@divisor+1,f
 12441  2948  0AA2               	incf	___awdiv@divisor,f
 12442  2949  1903               	skipnz
 12443  294A  0AA3               	incf	___awdiv@divisor+1,f
 12444  294B  01A8               	clrf	___awdiv@sign
 12445  294C  0AA8               	incf	___awdiv@sign,f
 12446  294D                     l6842:	
 12447  294D  1FA5               	btfss	___awdiv@dividend+1,7
 12448  294E  2958               	goto	l6848
 12449  294F  09A4               	comf	___awdiv@dividend,f
 12450  2950  09A5               	comf	___awdiv@dividend+1,f
 12451  2951  0AA4               	incf	___awdiv@dividend,f
 12452  2952  1903               	skipnz
 12453  2953  0AA5               	incf	___awdiv@dividend+1,f
 12454  2954  3001               	movlw	1
 12455  2955  00A6               	movwf	??___awdiv
 12456  2956  0826               	movf	??___awdiv,w
 12457  2957  06A8               	xorwf	___awdiv@sign,f
 12458  2958                     l6848:	
 12459  2958  01A9               	clrf	___awdiv@quotient
 12460  2959  01AA               	clrf	___awdiv@quotient+1
 12461  295A  0822               	movf	___awdiv@divisor,w
 12462  295B  0423               	iorwf	___awdiv@divisor+1,w
 12463  295C  1903               	btfsc	3,2
 12464  295D  2987               	goto	l6870
 12465  295E  01A7               	clrf	___awdiv@counter
 12466  295F  0AA7               	incf	___awdiv@counter,f
 12467  2960                     l6858:	
 12468  2960  1BA3               	btfsc	___awdiv@divisor+1,7
 12469  2961  296C               	goto	l6860
 12470  2962  3001               	movlw	1
 12471  2963                     u8455:	
 12472  2963  35A2               	lslf	___awdiv@divisor,f
 12473  2964  0DA3               	rlf	___awdiv@divisor+1,f
 12474  2965  0B89               	decfsz	9,f
 12475  2966  2963               	goto	u8455
 12476  2967  3001               	movlw	1
 12477  2968  00A6               	movwf	??___awdiv
 12478  2969  0826               	movf	??___awdiv,w
 12479  296A  07A7               	addwf	___awdiv@counter,f
 12480  296B  2960               	goto	l6858
 12481  296C                     l6860:	
 12482  296C  3001               	movlw	1
 12483  296D                     u8475:	
 12484  296D  35A9               	lslf	___awdiv@quotient,f
 12485  296E  0DAA               	rlf	___awdiv@quotient+1,f
 12486  296F  0B89               	decfsz	9,f
 12487  2970  296D               	goto	u8475
 12488  2971  0823               	movf	___awdiv@divisor+1,w
 12489  2972  0225               	subwf	___awdiv@dividend+1,w
 12490  2973  1D03               	skipz
 12491  2974  2977               	goto	u8485
 12492  2975  0822               	movf	___awdiv@divisor,w
 12493  2976  0224               	subwf	___awdiv@dividend,w
 12494  2977                     u8485:	
 12495  2977  1C03               	skipc
 12496  2978  297E               	goto	l6866
 12497  2979  0822               	movf	___awdiv@divisor,w
 12498  297A  02A4               	subwf	___awdiv@dividend,f
 12499  297B  0823               	movf	___awdiv@divisor+1,w
 12500  297C  3BA5               	subwfb	___awdiv@dividend+1,f
 12501  297D  1429               	bsf	___awdiv@quotient,0
 12502  297E                     l6866:	
 12503  297E  3001               	movlw	1
 12504  297F                     u8495:	
 12505  297F  36A3               	lsrf	___awdiv@divisor+1,f
 12506  2980  0CA2               	rrf	___awdiv@divisor,f
 12507  2981  0B89               	decfsz	9,f
 12508  2982  297F               	goto	u8495
 12509  2983  3001               	movlw	1
 12510  2984  02A7               	subwf	___awdiv@counter,f
 12511  2985  1D03               	btfss	3,2
 12512  2986  296C               	goto	l6860
 12513  2987                     l6870:	
 12514  2987  0828               	movf	___awdiv@sign,w
 12515  2988  1903               	btfsc	3,2
 12516  2989  298F               	goto	l6874
 12517  298A  09A9               	comf	___awdiv@quotient,f
 12518  298B  09AA               	comf	___awdiv@quotient+1,f
 12519  298C  0AA9               	incf	___awdiv@quotient,f
 12520  298D  1903               	skipnz
 12521  298E  0AAA               	incf	___awdiv@quotient+1,f
 12522  298F                     l6874:	
 12523  298F  082A               	movf	___awdiv@quotient+1,w
 12524  2990  00A3               	movwf	?___awdiv+1
 12525  2991  0829               	movf	___awdiv@quotient,w
 12526  2992  00A2               	movwf	?___awdiv
 12527  2993  0008               	return
 12528  2994                     __end_of___awdiv:	
 12529                           
 12530                           	psect	text14
 12531  2055                     __ptext14:	
 12532 ;; *************** function __tdiv_to_l_ *****************
 12533 ;; Defined at:
 12534 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12535 ;; Parameters:    Size  Location     Type
 12536 ;;  f1              4    0[BANK0 ] float 
 12537 ;;  f2              4    4[BANK0 ] float 
 12538 ;; Auto vars:     Size  Location     Type
 12539 ;;  quot            4    8[BANK0 ] unsigned long 
 12540 ;;  exp1            1   13[BANK0 ] unsigned char 
 12541 ;;  cntr            1   12[BANK0 ] unsigned char 
 12542 ;; Return value:  Size  Location     Type
 12543 ;;                  4    0[BANK0 ] unsigned long 
 12544 ;; Registers used:
 12545 ;;		wreg, status,2, status,0
 12546 ;; Tracked objects:
 12547 ;;		On entry : 0/0
 12548 ;;		On exit  : 0/0
 12549 ;;		Unchanged: 0/0
 12550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12551 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12552 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12553 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12554 ;;      Totals:         4      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12555 ;;Total ram usage:       18 bytes
 12556 ;; Hardware stack levels used:    1
 12557 ;; Hardware stack levels required when called:    2
 12558 ;; This function calls:
 12559 ;;		Nothing
 12560 ;; This function is called by:
 12561 ;;		_sprintf
 12562 ;; This function uses a non-reentrant model
 12563 ;;
 12564                           
 12565                           
 12566                           ;psect for function __tdiv_to_l_
 12567  2055                     __tdiv_to_l_:	
 12568                           
 12569                           ;incstack = 0
 12570                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 12571  2055  0020               	movlb	0	; select bank0
 12572  2056  0820               	movf	__tdiv_to_l_@f1,w
 12573  2057  00F3               	movwf	??__tdiv_to_l_
 12574  2058  0821               	movf	__tdiv_to_l_@f1+1,w
 12575  2059  00F4               	movwf	??__tdiv_to_l_+1
 12576  205A  0822               	movf	__tdiv_to_l_@f1+2,w
 12577  205B  00F5               	movwf	??__tdiv_to_l_+2
 12578  205C  1003               	clrc
 12579  205D  0D74               	rlf	??__tdiv_to_l_+1,w
 12580  205E  0D75               	rlf	??__tdiv_to_l_+2,w
 12581  205F  00F6               	movwf	??__tdiv_to_l_+3
 12582  2060  0876               	movf	??__tdiv_to_l_+3,w
 12583  2061  00AD               	movwf	__tdiv_to_l_@exp1
 12584  2062  082D               	movf	__tdiv_to_l_@exp1,w
 12585  2063  1D03               	btfss	3,2
 12586  2064  286E               	goto	l7030
 12587  2065  3000               	movlw	0
 12588  2066  00A3               	movwf	?__tdiv_to_l_+3
 12589  2067  3000               	movlw	0
 12590  2068  00A2               	movwf	?__tdiv_to_l_+2
 12591  2069  3000               	movlw	0
 12592  206A  00A1               	movwf	?__tdiv_to_l_+1
 12593  206B  3000               	movlw	0
 12594  206C  00A0               	movwf	?__tdiv_to_l_
 12595  206D  0008               	return
 12596  206E                     l7030:	
 12597  206E  0824               	movf	__tdiv_to_l_@f2,w
 12598  206F  00F3               	movwf	??__tdiv_to_l_
 12599  2070  0825               	movf	__tdiv_to_l_@f2+1,w
 12600  2071  00F4               	movwf	??__tdiv_to_l_+1
 12601  2072  0826               	movf	__tdiv_to_l_@f2+2,w
 12602  2073  00F5               	movwf	??__tdiv_to_l_+2
 12603  2074  1003               	clrc
 12604  2075  0D74               	rlf	??__tdiv_to_l_+1,w
 12605  2076  0D75               	rlf	??__tdiv_to_l_+2,w
 12606  2077  00F6               	movwf	??__tdiv_to_l_+3
 12607  2078  0876               	movf	??__tdiv_to_l_+3,w
 12608  2079  00AC               	movwf	__tdiv_to_l_@cntr
 12609  207A  082C               	movf	__tdiv_to_l_@cntr,w
 12610  207B  1D03               	btfss	3,2
 12611  207C  2886               	goto	l1188
 12612  207D  3000               	movlw	0
 12613  207E  00A3               	movwf	?__tdiv_to_l_+3
 12614  207F  3000               	movlw	0
 12615  2080  00A2               	movwf	?__tdiv_to_l_+2
 12616  2081  3000               	movlw	0
 12617  2082  00A1               	movwf	?__tdiv_to_l_+1
 12618  2083  3000               	movlw	0
 12619  2084  00A0               	movwf	?__tdiv_to_l_
 12620  2085  0008               	return
 12621  2086                     l1188:	
 12622  2086  17A1               	bsf	__tdiv_to_l_@f1+1,7
 12623  2087  30FF               	movlw	255
 12624  2088  05A0               	andwf	__tdiv_to_l_@f1,f
 12625  2089  30FF               	movlw	255
 12626  208A  05A1               	andwf	__tdiv_to_l_@f1+1,f
 12627  208B  3000               	movlw	0
 12628  208C  05A2               	andwf	__tdiv_to_l_@f1+2,f
 12629  208D  17A5               	bsf	__tdiv_to_l_@f2+1,7
 12630  208E  30FF               	movlw	255
 12631  208F  05A4               	andwf	__tdiv_to_l_@f2,f
 12632  2090  30FF               	movlw	255
 12633  2091  05A5               	andwf	__tdiv_to_l_@f2+1,f
 12634  2092  3000               	movlw	0
 12635  2093  05A6               	andwf	__tdiv_to_l_@f2+2,f
 12636  2094  3000               	movlw	0
 12637  2095  00AB               	movwf	__tdiv_to_l_@quot+3
 12638  2096  3000               	movlw	0
 12639  2097  00AA               	movwf	__tdiv_to_l_@quot+2
 12640  2098  3000               	movlw	0
 12641  2099  00A9               	movwf	__tdiv_to_l_@quot+1
 12642  209A  3000               	movlw	0
 12643  209B  00A8               	movwf	__tdiv_to_l_@quot
 12644  209C  307F               	movlw	127
 12645  209D  02AD               	subwf	__tdiv_to_l_@exp1,f
 12646  209E  3098               	movlw	152
 12647  209F  072C               	addwf	__tdiv_to_l_@cntr,w
 12648  20A0  00F3               	movwf	??__tdiv_to_l_
 12649  20A1  0873               	movf	??__tdiv_to_l_,w
 12650  20A2  02AD               	subwf	__tdiv_to_l_@exp1,f
 12651  20A3  3018               	movlw	24
 12652  20A4  00F3               	movwf	??__tdiv_to_l_
 12653  20A5  0873               	movf	??__tdiv_to_l_,w
 12654  20A6  00AC               	movwf	__tdiv_to_l_@cntr
 12655  20A7                     l7044:	
 12656  20A7  3001               	movlw	1
 12657  20A8                     u8755:	
 12658  20A8  35A8               	lslf	__tdiv_to_l_@quot,f
 12659  20A9  0DA9               	rlf	__tdiv_to_l_@quot+1,f
 12660  20AA  0DAA               	rlf	__tdiv_to_l_@quot+2,f
 12661  20AB  0DAB               	rlf	__tdiv_to_l_@quot+3,f
 12662  20AC  0B89               	decfsz	9,f
 12663  20AD  28A8               	goto	u8755
 12664  20AE  0826               	movf	__tdiv_to_l_@f2+2,w
 12665  20AF  0222               	subwf	__tdiv_to_l_@f1+2,w
 12666  20B0  1D03               	skipz
 12667  20B1  28B8               	goto	u8765
 12668  20B2  0825               	movf	__tdiv_to_l_@f2+1,w
 12669  20B3  0221               	subwf	__tdiv_to_l_@f1+1,w
 12670  20B4  1D03               	skipz
 12671  20B5  28B8               	goto	u8765
 12672  20B6  0824               	movf	__tdiv_to_l_@f2,w
 12673  20B7  0220               	subwf	__tdiv_to_l_@f1,w
 12674  20B8                     u8765:	
 12675  20B8  1C03               	skipc
 12676  20B9  28C1               	goto	l7052
 12677  20BA  0824               	movf	__tdiv_to_l_@f2,w
 12678  20BB  02A0               	subwf	__tdiv_to_l_@f1,f
 12679  20BC  0825               	movf	__tdiv_to_l_@f2+1,w
 12680  20BD  3BA1               	subwfb	__tdiv_to_l_@f1+1,f
 12681  20BE  0826               	movf	__tdiv_to_l_@f2+2,w
 12682  20BF  3BA2               	subwfb	__tdiv_to_l_@f1+2,f
 12683  20C0  1428               	bsf	__tdiv_to_l_@quot,0
 12684  20C1                     l7052:	
 12685  20C1  3001               	movlw	1
 12686  20C2                     u8775:	
 12687  20C2  35A0               	lslf	__tdiv_to_l_@f1,f
 12688  20C3  0DA1               	rlf	__tdiv_to_l_@f1+1,f
 12689  20C4  0DA2               	rlf	__tdiv_to_l_@f1+2,f
 12690  20C5  0B89               	decfsz	9,f
 12691  20C6  28C2               	goto	u8775
 12692  20C7  3001               	movlw	1
 12693  20C8  02AC               	subwf	__tdiv_to_l_@cntr,f
 12694  20C9  1D03               	btfss	3,2
 12695  20CA  28A7               	goto	l7044
 12696  20CB  1FAD               	btfss	__tdiv_to_l_@exp1,7
 12697  20CC  28E9               	goto	l7064
 12698  20CD  082D               	movf	__tdiv_to_l_@exp1,w
 12699  20CE  3A80               	xorlw	128
 12700  20CF  3E97               	addlw	151
 12701  20D0  1803               	skipnc
 12702  20D1  28DB               	goto	l7062
 12703  20D2  3000               	movlw	0
 12704  20D3  00A3               	movwf	?__tdiv_to_l_+3
 12705  20D4  3000               	movlw	0
 12706  20D5  00A2               	movwf	?__tdiv_to_l_+2
 12707  20D6  3000               	movlw	0
 12708  20D7  00A1               	movwf	?__tdiv_to_l_+1
 12709  20D8  3000               	movlw	0
 12710  20D9  00A0               	movwf	?__tdiv_to_l_
 12711  20DA  0008               	return
 12712  20DB                     l7062:	
 12713  20DB  3001               	movlw	1
 12714  20DC                     u8815:	
 12715  20DC  36AB               	lsrf	__tdiv_to_l_@quot+3,f
 12716  20DD  0CAA               	rrf	__tdiv_to_l_@quot+2,f
 12717  20DE  0CA9               	rrf	__tdiv_to_l_@quot+1,f
 12718  20DF  0CA8               	rrf	__tdiv_to_l_@quot,f
 12719  20E0  0B89               	decfsz	9,f
 12720  20E1  28DC               	goto	u8815
 12721  20E2  3001               	movlw	1
 12722  20E3  00F3               	movwf	??__tdiv_to_l_
 12723  20E4  0873               	movf	??__tdiv_to_l_,w
 12724  20E5  07AD               	addwf	__tdiv_to_l_@exp1,f
 12725  20E6  1903               	btfsc	3,2
 12726  20E7  2902               	goto	l7072
 12727  20E8  28DB               	goto	l7062
 12728  20E9                     l7064:	
 12729  20E9  3018               	movlw	24
 12730  20EA  022D               	subwf	__tdiv_to_l_@exp1,w
 12731  20EB  1C03               	skipc
 12732  20EC  28FF               	goto	l1198
 12733  20ED  3000               	movlw	0
 12734  20EE  00A3               	movwf	?__tdiv_to_l_+3
 12735  20EF  3000               	movlw	0
 12736  20F0  00A2               	movwf	?__tdiv_to_l_+2
 12737  20F1  3000               	movlw	0
 12738  20F2  00A1               	movwf	?__tdiv_to_l_+1
 12739  20F3  3000               	movlw	0
 12740  20F4  00A0               	movwf	?__tdiv_to_l_
 12741  20F5  0008               	return
 12742  20F6                     l7070:	
 12743  20F6  3001               	movlw	1
 12744  20F7                     u8845:	
 12745  20F7  35A8               	lslf	__tdiv_to_l_@quot,f
 12746  20F8  0DA9               	rlf	__tdiv_to_l_@quot+1,f
 12747  20F9  0DAA               	rlf	__tdiv_to_l_@quot+2,f
 12748  20FA  0DAB               	rlf	__tdiv_to_l_@quot+3,f
 12749  20FB  0B89               	decfsz	9,f
 12750  20FC  28F7               	goto	u8845
 12751  20FD  3001               	movlw	1
 12752  20FE  02AD               	subwf	__tdiv_to_l_@exp1,f
 12753  20FF                     l1198:	
 12754  20FF  082D               	movf	__tdiv_to_l_@exp1,w
 12755  2100  1D03               	btfss	3,2
 12756  2101  28F6               	goto	l7070
 12757  2102                     l7072:	
 12758  2102  082B               	movf	__tdiv_to_l_@quot+3,w
 12759  2103  00A3               	movwf	?__tdiv_to_l_+3
 12760  2104  082A               	movf	__tdiv_to_l_@quot+2,w
 12761  2105  00A2               	movwf	?__tdiv_to_l_+2
 12762  2106  0829               	movf	__tdiv_to_l_@quot+1,w
 12763  2107  00A1               	movwf	?__tdiv_to_l_+1
 12764  2108  0828               	movf	__tdiv_to_l_@quot,w
 12765  2109  00A0               	movwf	?__tdiv_to_l_
 12766  210A  0008               	return
 12767  210B                     __end_of__tdiv_to_l_:	
 12768                           
 12769                           	psect	text15
 12770  210B                     __ptext15:	
 12771 ;; *************** function __div_to_l_ *****************
 12772 ;; Defined at:
 12773 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12774 ;; Parameters:    Size  Location     Type
 12775 ;;  f1              4    0[BANK0 ] unsigned long 
 12776 ;;  f2              4    4[BANK0 ] unsigned long 
 12777 ;; Auto vars:     Size  Location     Type
 12778 ;;  quot            4    8[BANK0 ] unsigned long 
 12779 ;;  exp1            1   13[BANK0 ] unsigned char 
 12780 ;;  cntr            1   12[BANK0 ] unsigned char 
 12781 ;; Return value:  Size  Location     Type
 12782 ;;                  4    0[BANK0 ] unsigned long 
 12783 ;; Registers used:
 12784 ;;		wreg, status,2, status,0
 12785 ;; Tracked objects:
 12786 ;;		On entry : 0/0
 12787 ;;		On exit  : 0/0
 12788 ;;		Unchanged: 0/0
 12789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12790 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12791 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12792 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12793 ;;      Totals:         5      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12794 ;;Total ram usage:       19 bytes
 12795 ;; Hardware stack levels used:    1
 12796 ;; Hardware stack levels required when called:    2
 12797 ;; This function calls:
 12798 ;;		Nothing
 12799 ;; This function is called by:
 12800 ;;		_sprintf
 12801 ;; This function uses a non-reentrant model
 12802 ;;
 12803                           
 12804                           
 12805                           ;psect for function __div_to_l_
 12806  210B                     __div_to_l_:	
 12807                           
 12808                           ;incstack = 0
 12809                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 12810  210B  0020               	movlb	0	; select bank0
 12811  210C  0820               	movf	__div_to_l_@f1,w
 12812  210D  00F3               	movwf	??__div_to_l_
 12813  210E  0821               	movf	__div_to_l_@f1+1,w
 12814  210F  00F4               	movwf	??__div_to_l_+1
 12815  2110  0822               	movf	__div_to_l_@f1+2,w
 12816  2111  00F5               	movwf	??__div_to_l_+2
 12817  2112  0823               	movf	__div_to_l_@f1+3,w
 12818  2113  00F6               	movwf	??__div_to_l_+3
 12819  2114  1003               	clrc
 12820  2115  0D75               	rlf	??__div_to_l_+2,w
 12821  2116  0D76               	rlf	??__div_to_l_+3,w
 12822  2117  00F7               	movwf	??__div_to_l_+4
 12823  2118  0877               	movf	??__div_to_l_+4,w
 12824  2119  00AD               	movwf	__div_to_l_@exp1
 12825  211A  082D               	movf	__div_to_l_@exp1,w
 12826  211B  1D03               	btfss	3,2
 12827  211C  2926               	goto	l7082
 12828  211D  3000               	movlw	0
 12829  211E  00A3               	movwf	?__div_to_l_+3
 12830  211F  3000               	movlw	0
 12831  2120  00A2               	movwf	?__div_to_l_+2
 12832  2121  3000               	movlw	0
 12833  2122  00A1               	movwf	?__div_to_l_+1
 12834  2123  3000               	movlw	0
 12835  2124  00A0               	movwf	?__div_to_l_
 12836  2125  0008               	return
 12837  2126                     l7082:	
 12838  2126  0824               	movf	__div_to_l_@f2,w
 12839  2127  00F3               	movwf	??__div_to_l_
 12840  2128  0825               	movf	__div_to_l_@f2+1,w
 12841  2129  00F4               	movwf	??__div_to_l_+1
 12842  212A  0826               	movf	__div_to_l_@f2+2,w
 12843  212B  00F5               	movwf	??__div_to_l_+2
 12844  212C  0827               	movf	__div_to_l_@f2+3,w
 12845  212D  00F6               	movwf	??__div_to_l_+3
 12846  212E  1003               	clrc
 12847  212F  0D75               	rlf	??__div_to_l_+2,w
 12848  2130  0D76               	rlf	??__div_to_l_+3,w
 12849  2131  00F7               	movwf	??__div_to_l_+4
 12850  2132  0877               	movf	??__div_to_l_+4,w
 12851  2133  00AC               	movwf	__div_to_l_@cntr
 12852  2134  082C               	movf	__div_to_l_@cntr,w
 12853  2135  1D03               	btfss	3,2
 12854  2136  2940               	goto	l1146
 12855  2137  3000               	movlw	0
 12856  2138  00A3               	movwf	?__div_to_l_+3
 12857  2139  3000               	movlw	0
 12858  213A  00A2               	movwf	?__div_to_l_+2
 12859  213B  3000               	movlw	0
 12860  213C  00A1               	movwf	?__div_to_l_+1
 12861  213D  3000               	movlw	0
 12862  213E  00A0               	movwf	?__div_to_l_
 12863  213F  0008               	return
 12864  2140                     l1146:	
 12865  2140  17A2               	bsf	__div_to_l_@f1+2,7
 12866  2141  30FF               	movlw	255
 12867  2142  05A0               	andwf	__div_to_l_@f1,f
 12868  2143  30FF               	movlw	255
 12869  2144  05A1               	andwf	__div_to_l_@f1+1,f
 12870  2145  30FF               	movlw	255
 12871  2146  05A2               	andwf	__div_to_l_@f1+2,f
 12872  2147  3000               	movlw	0
 12873  2148  05A3               	andwf	__div_to_l_@f1+3,f
 12874  2149  17A6               	bsf	__div_to_l_@f2+2,7
 12875  214A  30FF               	movlw	255
 12876  214B  05A4               	andwf	__div_to_l_@f2,f
 12877  214C  30FF               	movlw	255
 12878  214D  05A5               	andwf	__div_to_l_@f2+1,f
 12879  214E  30FF               	movlw	255
 12880  214F  05A6               	andwf	__div_to_l_@f2+2,f
 12881  2150  3000               	movlw	0
 12882  2151  05A7               	andwf	__div_to_l_@f2+3,f
 12883  2152  3000               	movlw	0
 12884  2153  00AB               	movwf	__div_to_l_@quot+3
 12885  2154  3000               	movlw	0
 12886  2155  00AA               	movwf	__div_to_l_@quot+2
 12887  2156  3000               	movlw	0
 12888  2157  00A9               	movwf	__div_to_l_@quot+1
 12889  2158  3000               	movlw	0
 12890  2159  00A8               	movwf	__div_to_l_@quot
 12891  215A  307F               	movlw	127
 12892  215B  02AD               	subwf	__div_to_l_@exp1,f
 12893  215C  30A0               	movlw	160
 12894  215D  072C               	addwf	__div_to_l_@cntr,w
 12895  215E  00F3               	movwf	??__div_to_l_
 12896  215F  0873               	movf	??__div_to_l_,w
 12897  2160  02AD               	subwf	__div_to_l_@exp1,f
 12898  2161  3020               	movlw	32
 12899  2162  00F3               	movwf	??__div_to_l_
 12900  2163  0873               	movf	??__div_to_l_,w
 12901  2164  00AC               	movwf	__div_to_l_@cntr
 12902  2165                     l7096:	
 12903  2165  3001               	movlw	1
 12904  2166                     u8885:	
 12905  2166  35A8               	lslf	__div_to_l_@quot,f
 12906  2167  0DA9               	rlf	__div_to_l_@quot+1,f
 12907  2168  0DAA               	rlf	__div_to_l_@quot+2,f
 12908  2169  0DAB               	rlf	__div_to_l_@quot+3,f
 12909  216A  0B89               	decfsz	9,f
 12910  216B  2966               	goto	u8885
 12911  216C  0827               	movf	__div_to_l_@f2+3,w
 12912  216D  0223               	subwf	__div_to_l_@f1+3,w
 12913  216E  1D03               	skipz
 12914  216F  297A               	goto	u8895
 12915  2170  0826               	movf	__div_to_l_@f2+2,w
 12916  2171  0222               	subwf	__div_to_l_@f1+2,w
 12917  2172  1D03               	skipz
 12918  2173  297A               	goto	u8895
 12919  2174  0825               	movf	__div_to_l_@f2+1,w
 12920  2175  0221               	subwf	__div_to_l_@f1+1,w
 12921  2176  1D03               	skipz
 12922  2177  297A               	goto	u8895
 12923  2178  0824               	movf	__div_to_l_@f2,w
 12924  2179  0220               	subwf	__div_to_l_@f1,w
 12925  217A                     u8895:	
 12926  217A  1C03               	skipc
 12927  217B  2985               	goto	l7104
 12928  217C  0824               	movf	__div_to_l_@f2,w
 12929  217D  02A0               	subwf	__div_to_l_@f1,f
 12930  217E  0825               	movf	__div_to_l_@f2+1,w
 12931  217F  3BA1               	subwfb	__div_to_l_@f1+1,f
 12932  2180  0826               	movf	__div_to_l_@f2+2,w
 12933  2181  3BA2               	subwfb	__div_to_l_@f1+2,f
 12934  2182  0827               	movf	__div_to_l_@f2+3,w
 12935  2183  3BA3               	subwfb	__div_to_l_@f1+3,f
 12936  2184  1428               	bsf	__div_to_l_@quot,0
 12937  2185                     l7104:	
 12938  2185  3001               	movlw	1
 12939  2186                     u8905:	
 12940  2186  35A0               	lslf	__div_to_l_@f1,f
 12941  2187  0DA1               	rlf	__div_to_l_@f1+1,f
 12942  2188  0DA2               	rlf	__div_to_l_@f1+2,f
 12943  2189  0DA3               	rlf	__div_to_l_@f1+3,f
 12944  218A  0B89               	decfsz	9,f
 12945  218B  2986               	goto	u8905
 12946  218C  3001               	movlw	1
 12947  218D  02AC               	subwf	__div_to_l_@cntr,f
 12948  218E  1D03               	btfss	3,2
 12949  218F  2965               	goto	l7096
 12950  2190  1FAD               	btfss	__div_to_l_@exp1,7
 12951  2191  29AE               	goto	l7116
 12952  2192  082D               	movf	__div_to_l_@exp1,w
 12953  2193  3A80               	xorlw	128
 12954  2194  3E9F               	addlw	159
 12955  2195  1803               	skipnc
 12956  2196  29A0               	goto	l7114
 12957  2197  3000               	movlw	0
 12958  2198  00A3               	movwf	?__div_to_l_+3
 12959  2199  3000               	movlw	0
 12960  219A  00A2               	movwf	?__div_to_l_+2
 12961  219B  3000               	movlw	0
 12962  219C  00A1               	movwf	?__div_to_l_+1
 12963  219D  3000               	movlw	0
 12964  219E  00A0               	movwf	?__div_to_l_
 12965  219F  0008               	return
 12966  21A0                     l7114:	
 12967  21A0  3001               	movlw	1
 12968  21A1                     u8945:	
 12969  21A1  36AB               	lsrf	__div_to_l_@quot+3,f
 12970  21A2  0CAA               	rrf	__div_to_l_@quot+2,f
 12971  21A3  0CA9               	rrf	__div_to_l_@quot+1,f
 12972  21A4  0CA8               	rrf	__div_to_l_@quot,f
 12973  21A5  0B89               	decfsz	9,f
 12974  21A6  29A1               	goto	u8945
 12975  21A7  3001               	movlw	1
 12976  21A8  00F3               	movwf	??__div_to_l_
 12977  21A9  0873               	movf	??__div_to_l_,w
 12978  21AA  07AD               	addwf	__div_to_l_@exp1,f
 12979  21AB  1903               	btfsc	3,2
 12980  21AC  29C7               	goto	l7124
 12981  21AD  29A0               	goto	l7114
 12982  21AE                     l7116:	
 12983  21AE  3020               	movlw	32
 12984  21AF  022D               	subwf	__div_to_l_@exp1,w
 12985  21B0  1C03               	skipc
 12986  21B1  29C4               	goto	l1156
 12987  21B2  3000               	movlw	0
 12988  21B3  00A3               	movwf	?__div_to_l_+3
 12989  21B4  3000               	movlw	0
 12990  21B5  00A2               	movwf	?__div_to_l_+2
 12991  21B6  3000               	movlw	0
 12992  21B7  00A1               	movwf	?__div_to_l_+1
 12993  21B8  3000               	movlw	0
 12994  21B9  00A0               	movwf	?__div_to_l_
 12995  21BA  0008               	return
 12996  21BB                     l7122:	
 12997  21BB  3001               	movlw	1
 12998  21BC                     u8975:	
 12999  21BC  35A8               	lslf	__div_to_l_@quot,f
 13000  21BD  0DA9               	rlf	__div_to_l_@quot+1,f
 13001  21BE  0DAA               	rlf	__div_to_l_@quot+2,f
 13002  21BF  0DAB               	rlf	__div_to_l_@quot+3,f
 13003  21C0  0B89               	decfsz	9,f
 13004  21C1  29BC               	goto	u8975
 13005  21C2  3001               	movlw	1
 13006  21C3  02AD               	subwf	__div_to_l_@exp1,f
 13007  21C4                     l1156:	
 13008  21C4  082D               	movf	__div_to_l_@exp1,w
 13009  21C5  1D03               	btfss	3,2
 13010  21C6  29BB               	goto	l7122
 13011  21C7                     l7124:	
 13012  21C7  082B               	movf	__div_to_l_@quot+3,w
 13013  21C8  00A3               	movwf	?__div_to_l_+3
 13014  21C9  082A               	movf	__div_to_l_@quot+2,w
 13015  21CA  00A2               	movwf	?__div_to_l_+2
 13016  21CB  0829               	movf	__div_to_l_@quot+1,w
 13017  21CC  00A1               	movwf	?__div_to_l_+1
 13018  21CD  0828               	movf	__div_to_l_@quot,w
 13019  21CE  00A0               	movwf	?__div_to_l_
 13020  21CF  0008               	return
 13021  21D0                     __end_of__div_to_l_:	
 13022                           
 13023                           	psect	text16
 13024  2867                     __ptext16:	
 13025 ;; *************** function ___llmod *****************
 13026 ;; Defined at:
 13027 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;  divisor         4   13[BANK0 ] unsigned long 
 13030 ;;  dividend        4   17[BANK0 ] unsigned long 
 13031 ;; Auto vars:     Size  Location     Type
 13032 ;;  counter         1    5[COMMON] unsigned char 
 13033 ;; Return value:  Size  Location     Type
 13034 ;;                  4   13[BANK0 ] unsigned long 
 13035 ;; Registers used:
 13036 ;;		wreg, status,2, status,0
 13037 ;; Tracked objects:
 13038 ;;		On entry : 0/0
 13039 ;;		On exit  : 0/0
 13040 ;;		Unchanged: 0/0
 13041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13042 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13043 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13045 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13046 ;;Total ram usage:       10 bytes
 13047 ;; Hardware stack levels used:    1
 13048 ;; Hardware stack levels required when called:    2
 13049 ;; This function calls:
 13050 ;;		Nothing
 13051 ;; This function is called by:
 13052 ;;		_sprintf
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           
 13057                           ;psect for function ___llmod
 13058  2867                     ___llmod:	
 13059                           
 13060                           ;incstack = 0
 13061                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 13062  2867  0020               	movlb	0	; select bank0
 13063  2868  0830               	movf	___llmod@divisor+3,w
 13064  2869  042F               	iorwf	___llmod@divisor+2,w
 13065  286A  042E               	iorwf	___llmod@divisor+1,w
 13066  286B  042D               	iorwf	___llmod@divisor,w
 13067  286C  1903               	skipnz
 13068  286D  28A1               	goto	l7226
 13069  286E  01F5               	clrf	___llmod@counter
 13070  286F  0AF5               	incf	___llmod@counter,f
 13071  2870                     l7216:	
 13072  2870  1BB0               	btfsc	___llmod@divisor+3,7
 13073  2871  287E               	goto	l7218
 13074  2872  3001               	movlw	1
 13075  2873                     u9225:	
 13076  2873  35AD               	lslf	___llmod@divisor,f
 13077  2874  0DAE               	rlf	___llmod@divisor+1,f
 13078  2875  0DAF               	rlf	___llmod@divisor+2,f
 13079  2876  0DB0               	rlf	___llmod@divisor+3,f
 13080  2877  0B89               	decfsz	9,f
 13081  2878  2873               	goto	u9225
 13082  2879  3001               	movlw	1
 13083  287A  00F4               	movwf	??___llmod
 13084  287B  0874               	movf	??___llmod,w
 13085  287C  07F5               	addwf	___llmod@counter,f
 13086  287D  2870               	goto	l7216
 13087  287E                     l7218:	
 13088  287E  0830               	movf	___llmod@divisor+3,w
 13089  287F  0234               	subwf	___llmod@dividend+3,w
 13090  2880  1D03               	skipz
 13091  2881  288C               	goto	u9245
 13092  2882  082F               	movf	___llmod@divisor+2,w
 13093  2883  0233               	subwf	___llmod@dividend+2,w
 13094  2884  1D03               	skipz
 13095  2885  288C               	goto	u9245
 13096  2886  082E               	movf	___llmod@divisor+1,w
 13097  2887  0232               	subwf	___llmod@dividend+1,w
 13098  2888  1D03               	skipz
 13099  2889  288C               	goto	u9245
 13100  288A  082D               	movf	___llmod@divisor,w
 13101  288B  0231               	subwf	___llmod@dividend,w
 13102  288C                     u9245:	
 13103  288C  1C03               	skipc
 13104  288D  2896               	goto	l7222
 13105  288E  082D               	movf	___llmod@divisor,w
 13106  288F  02B1               	subwf	___llmod@dividend,f
 13107  2890  082E               	movf	___llmod@divisor+1,w
 13108  2891  3BB2               	subwfb	___llmod@dividend+1,f
 13109  2892  082F               	movf	___llmod@divisor+2,w
 13110  2893  3BB3               	subwfb	___llmod@dividend+2,f
 13111  2894  0830               	movf	___llmod@divisor+3,w
 13112  2895  3BB4               	subwfb	___llmod@dividend+3,f
 13113  2896                     l7222:	
 13114  2896  3001               	movlw	1
 13115  2897                     u9255:	
 13116  2897  36B0               	lsrf	___llmod@divisor+3,f
 13117  2898  0CAF               	rrf	___llmod@divisor+2,f
 13118  2899  0CAE               	rrf	___llmod@divisor+1,f
 13119  289A  0CAD               	rrf	___llmod@divisor,f
 13120  289B  0B89               	decfsz	9,f
 13121  289C  2897               	goto	u9255
 13122  289D  3001               	movlw	1
 13123  289E  02F5               	subwf	___llmod@counter,f
 13124  289F  1D03               	btfss	3,2
 13125  28A0  287E               	goto	l7218
 13126  28A1                     l7226:	
 13127  28A1  0834               	movf	___llmod@dividend+3,w
 13128  28A2  00B0               	movwf	?___llmod+3
 13129  28A3  0833               	movf	___llmod@dividend+2,w
 13130  28A4  00AF               	movwf	?___llmod+2
 13131  28A5  0832               	movf	___llmod@dividend+1,w
 13132  28A6  00AE               	movwf	?___llmod+1
 13133  28A7  0831               	movf	___llmod@dividend,w
 13134  28A8  00AD               	movwf	?___llmod
 13135  28A9  0008               	return
 13136  28AA                     __end_of___llmod:	
 13137                           
 13138                           	psect	text17
 13139  2994                     __ptext17:	
 13140 ;; *************** function ___lldiv *****************
 13141 ;; Defined at:
 13142 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13143 ;; Parameters:    Size  Location     Type
 13144 ;;  divisor         4    0[BANK0 ] unsigned long 
 13145 ;;  dividend        4    4[BANK0 ] unsigned long 
 13146 ;; Auto vars:     Size  Location     Type
 13147 ;;  quotient        4    8[BANK0 ] unsigned long 
 13148 ;;  counter         1   12[BANK0 ] unsigned char 
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  4    0[BANK0 ] unsigned long 
 13151 ;; Registers used:
 13152 ;;		wreg, status,2, status,0
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13158 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13159 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13160 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13161 ;;      Totals:         1      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13162 ;;Total ram usage:       14 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    2
 13165 ;; This function calls:
 13166 ;;		Nothing
 13167 ;; This function is called by:
 13168 ;;		_sprintf
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           
 13173                           ;psect for function ___lldiv
 13174  2994                     ___lldiv:	
 13175                           
 13176                           ;incstack = 0
 13177                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 13178  2994  3000               	movlw	0
 13179  2995  0020               	movlb	0	; select bank0
 13180  2996  00AB               	movwf	___lldiv@quotient+3
 13181  2997  3000               	movlw	0
 13182  2998  00AA               	movwf	___lldiv@quotient+2
 13183  2999  3000               	movlw	0
 13184  299A  00A9               	movwf	___lldiv@quotient+1
 13185  299B  3000               	movlw	0
 13186  299C  00A8               	movwf	___lldiv@quotient
 13187  299D  0823               	movf	___lldiv@divisor+3,w
 13188  299E  0422               	iorwf	___lldiv@divisor+2,w
 13189  299F  0421               	iorwf	___lldiv@divisor+1,w
 13190  29A0  0420               	iorwf	___lldiv@divisor,w
 13191  29A1  1903               	skipnz
 13192  29A2  29DE               	goto	l7206
 13193  29A3  01AC               	clrf	___lldiv@counter
 13194  29A4  0AAC               	incf	___lldiv@counter,f
 13195  29A5                     l7192:	
 13196  29A5  1BA3               	btfsc	___lldiv@divisor+3,7
 13197  29A6  29B3               	goto	l7194
 13198  29A7  3001               	movlw	1
 13199  29A8                     u9155:	
 13200  29A8  35A0               	lslf	___lldiv@divisor,f
 13201  29A9  0DA1               	rlf	___lldiv@divisor+1,f
 13202  29AA  0DA2               	rlf	___lldiv@divisor+2,f
 13203  29AB  0DA3               	rlf	___lldiv@divisor+3,f
 13204  29AC  0B89               	decfsz	9,f
 13205  29AD  29A8               	goto	u9155
 13206  29AE  3001               	movlw	1
 13207  29AF  00F3               	movwf	??___lldiv
 13208  29B0  0873               	movf	??___lldiv,w
 13209  29B1  07AC               	addwf	___lldiv@counter,f
 13210  29B2  29A5               	goto	l7192
 13211  29B3                     l7194:	
 13212  29B3  3001               	movlw	1
 13213  29B4                     u9175:	
 13214  29B4  35A8               	lslf	___lldiv@quotient,f
 13215  29B5  0DA9               	rlf	___lldiv@quotient+1,f
 13216  29B6  0DAA               	rlf	___lldiv@quotient+2,f
 13217  29B7  0DAB               	rlf	___lldiv@quotient+3,f
 13218  29B8  0B89               	decfsz	9,f
 13219  29B9  29B4               	goto	u9175
 13220  29BA  0823               	movf	___lldiv@divisor+3,w
 13221  29BB  0227               	subwf	___lldiv@dividend+3,w
 13222  29BC  1D03               	skipz
 13223  29BD  29C8               	goto	u9185
 13224  29BE  0822               	movf	___lldiv@divisor+2,w
 13225  29BF  0226               	subwf	___lldiv@dividend+2,w
 13226  29C0  1D03               	skipz
 13227  29C1  29C8               	goto	u9185
 13228  29C2  0821               	movf	___lldiv@divisor+1,w
 13229  29C3  0225               	subwf	___lldiv@dividend+1,w
 13230  29C4  1D03               	skipz
 13231  29C5  29C8               	goto	u9185
 13232  29C6  0820               	movf	___lldiv@divisor,w
 13233  29C7  0224               	subwf	___lldiv@dividend,w
 13234  29C8                     u9185:	
 13235  29C8  1C03               	skipc
 13236  29C9  29D3               	goto	l7202
 13237  29CA  0820               	movf	___lldiv@divisor,w
 13238  29CB  02A4               	subwf	___lldiv@dividend,f
 13239  29CC  0821               	movf	___lldiv@divisor+1,w
 13240  29CD  3BA5               	subwfb	___lldiv@dividend+1,f
 13241  29CE  0822               	movf	___lldiv@divisor+2,w
 13242  29CF  3BA6               	subwfb	___lldiv@dividend+2,f
 13243  29D0  0823               	movf	___lldiv@divisor+3,w
 13244  29D1  3BA7               	subwfb	___lldiv@dividend+3,f
 13245  29D2  1428               	bsf	___lldiv@quotient,0
 13246  29D3                     l7202:	
 13247  29D3  3001               	movlw	1
 13248  29D4                     u9195:	
 13249  29D4  36A3               	lsrf	___lldiv@divisor+3,f
 13250  29D5  0CA2               	rrf	___lldiv@divisor+2,f
 13251  29D6  0CA1               	rrf	___lldiv@divisor+1,f
 13252  29D7  0CA0               	rrf	___lldiv@divisor,f
 13253  29D8  0B89               	decfsz	9,f
 13254  29D9  29D4               	goto	u9195
 13255  29DA  3001               	movlw	1
 13256  29DB  02AC               	subwf	___lldiv@counter,f
 13257  29DC  1D03               	btfss	3,2
 13258  29DD  29B3               	goto	l7194
 13259  29DE                     l7206:	
 13260  29DE  082B               	movf	___lldiv@quotient+3,w
 13261  29DF  00A3               	movwf	?___lldiv+3
 13262  29E0  082A               	movf	___lldiv@quotient+2,w
 13263  29E1  00A2               	movwf	?___lldiv+2
 13264  29E2  0829               	movf	___lldiv@quotient+1,w
 13265  29E3  00A1               	movwf	?___lldiv+1
 13266  29E4  0828               	movf	___lldiv@quotient,w
 13267  29E5  00A0               	movwf	?___lldiv
 13268  29E6  0008               	return
 13269  29E7                     __end_of___lldiv:	
 13270                           
 13271                           	psect	text18
 13272  36FA                     __ptext18:	
 13273 ;; *************** function ___flsub *****************
 13274 ;; Defined at:
 13275 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 13276 ;; Parameters:    Size  Location     Type
 13277 ;;  a               4   33[BANK1 ] unsigned long 
 13278 ;;  b               4   37[BANK1 ] unsigned long 
 13279 ;; Auto vars:     Size  Location     Type
 13280 ;;		None
 13281 ;; Return value:  Size  Location     Type
 13282 ;;                  4   33[BANK1 ] unsigned long 
 13283 ;; Registers used:
 13284 ;;		wreg, status,2, status,0, pclath, cstack
 13285 ;; Tracked objects:
 13286 ;;		On entry : 0/0
 13287 ;;		On exit  : 0/0
 13288 ;;		Unchanged: 0/0
 13289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13290 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13293 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13294 ;;Total ram usage:        8 bytes
 13295 ;; Hardware stack levels used:    1
 13296 ;; Hardware stack levels required when called:    3
 13297 ;; This function calls:
 13298 ;;		___fladd
 13299 ;; This function is called by:
 13300 ;;		_sprintf
 13301 ;; This function uses a non-reentrant model
 13302 ;;
 13303                           
 13304                           
 13305                           ;psect for function ___flsub
 13306  36FA                     ___flsub:	
 13307                           
 13308                           ;incstack = 0
 13309                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 13310  36FA  3080               	movlw	128
 13311  36FB  0021               	movlb	1	; select bank1
 13312  36FC  06C4               	xorwf	(___flsub@a+3)^(0+128),f
 13313  36FD  0848               	movf	(___flsub@b+3)^(0+128),w
 13314  36FE  00AC               	movwf	(___fladd@b+3)^(0+128)
 13315  36FF  0847               	movf	(___flsub@b+2)^(0+128),w
 13316  3700  00AB               	movwf	(___fladd@b+2)^(0+128)
 13317  3701  0846               	movf	(___flsub@b+1)^(0+128),w
 13318  3702  00AA               	movwf	(___fladd@b+1)^(0+128)
 13319  3703  0845               	movf	___flsub@b^(0+128),w
 13320  3704  00A9               	movwf	___fladd@b^(0+128)
 13321  3705  0844               	movf	(___flsub@a+3)^(0+128),w
 13322  3706  00B0               	movwf	(___fladd@a+3)^(0+128)
 13323  3707  0843               	movf	(___flsub@a+2)^(0+128),w
 13324  3708  00AF               	movwf	(___fladd@a+2)^(0+128)
 13325  3709  0842               	movf	(___flsub@a+1)^(0+128),w
 13326  370A  00AE               	movwf	(___fladd@a+1)^(0+128)
 13327  370B  0841               	movf	___flsub@a^(0+128),w
 13328  370C  00AD               	movwf	___fladd@a^(0+128)
 13329  370D  3193  2374         	fcall	___fladd
 13330  370F  0021               	movlb	1	; select bank1
 13331  3710  082C               	movf	(?___fladd+3)^(0+128),w
 13332  3711  00C4               	movwf	(?___flsub+3)^(0+128)
 13333  3712  082B               	movf	(?___fladd+2)^(0+128),w
 13334  3713  00C3               	movwf	(?___flsub+2)^(0+128)
 13335  3714  082A               	movf	(?___fladd+1)^(0+128),w
 13336  3715  00C2               	movwf	(?___flsub+1)^(0+128)
 13337  3716  0829               	movf	?___fladd^(0+128),w
 13338  3717  00C1               	movwf	?___flsub^(0+128)
 13339  3718  0008               	return
 13340  3719                     __end_of___flsub:	
 13341                           
 13342                           	psect	text19
 13343  35EC                     __ptext19:	
 13344 ;; *************** function ___flneg *****************
 13345 ;; Defined at:
 13346 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 13347 ;; Parameters:    Size  Location     Type
 13348 ;;  f1              4    0[BANK1 ] unsigned long 
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  4    0[BANK1 ] unsigned long 
 13353 ;; Registers used:
 13354 ;;		wreg
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13360 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13363 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13364 ;;Total ram usage:        4 bytes
 13365 ;; Hardware stack levels used:    1
 13366 ;; Hardware stack levels required when called:    2
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_main
 13371 ;;		_writeVoltages
 13372 ;;		_sprintf
 13373 ;; This function uses a non-reentrant model
 13374 ;;
 13375                           
 13376                           
 13377                           ;psect for function ___flneg
 13378  35EC                     ___flneg:	
 13379                           
 13380                           ;incstack = 0
 13381                           ; Regs used in ___flneg: [wreg]
 13382  35EC  0021               	movlb	1	; select bank1
 13383  35ED  0823               	movf	(___flneg@f1+3)^(0+128),w
 13384  35EE  0422               	iorwf	(___flneg@f1+2)^(0+128),w
 13385  35EF  0421               	iorwf	(___flneg@f1+1)^(0+128),w
 13386  35F0  0420               	iorwf	___flneg@f1^(0+128),w
 13387  35F1  1903               	skipnz
 13388  35F2  0008               	return
 13389  35F3  3080               	movlw	128
 13390  35F4  06A3               	xorwf	(___flneg@f1+3)^(0+128),f
 13391  35F5  0008               	return
 13392  35F6                     __end_of___flneg:	
 13393                           
 13394                           	psect	text20
 13395  24F5                     __ptext20:	
 13396 ;; *************** function _startUp *****************
 13397 ;; Defined at:
 13398 ;;		line 142 in file "main.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  highestTemp     1    wreg     PTR int 
 13401 ;;		 -> main@highestTemp(2), 
 13402 ;;  temps           1   56[BANK1 ] PTR int 
 13403 ;;		 -> main@temps(10), 
 13404 ;;  voltages        1   57[BANK1 ] PTR float 
 13405 ;;		 -> main@voltages(48), 
 13406 ;;  totalVoltage    1   58[BANK1 ] PTR float 
 13407 ;;		 -> main@totalVoltage(4), 
 13408 ;;  current         1   59[BANK1 ] PTR float 
 13409 ;;		 -> main@current(4), 
 13410 ;;  soc             1   60[BANK1 ] PTR float 
 13411 ;;		 -> main@soc(4), 
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;  highestTemp     1   65[BANK1 ] PTR int 
 13414 ;;		 -> main@highestTemp(2), 
 13415 ;;  i               2   68[BANK1 ] int 
 13416 ;;  i               2   66[BANK1 ] int 
 13417 ;; Return value:  Size  Location     Type
 13418 ;;                  2   56[BANK1 ] int 
 13419 ;; Registers used:
 13420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13421 ;; Tracked objects:
 13422 ;;		On entry : 0/0
 13423 ;;		On exit  : 0/0
 13424 ;;		Unchanged: 0/0
 13425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13426 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13427 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13428 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13429 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13430 ;;Total ram usage:       14 bytes
 13431 ;; Hardware stack levels used:    1
 13432 ;; Hardware stack levels required when called:    7
 13433 ;; This function calls:
 13434 ;;		___fladd
 13435 ;;		___fldiv
 13436 ;;		___flge
 13437 ;;		_getCurrent
 13438 ;;		_getTemps
 13439 ;;		_measureVoltages
 13440 ;;		_sumVoltages
 13441 ;; This function is called by:
 13442 ;;		_main
 13443 ;; This function uses a non-reentrant model
 13444 ;;
 13445                           
 13446                           
 13447                           ;psect for function _startUp
 13448  24F5                     _startUp:	
 13449                           
 13450                           ;incstack = 0
 13451                           ; Regs used in _startUp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13452                           ;startUp@highestTemp stored from wreg
 13453  24F5  0021               	movlb	1	; select bank1
 13454  24F6  00E1               	movwf	startUp@highestTemp^(0+128)
 13455                           
 13456                           ;main.c: 143: measureVoltages(voltages, totalVoltage, 12);
 13457  24F7  085A               	movf	startUp@totalVoltage^(0+128),w
 13458  24F8  00DD               	movwf	??_startUp^(0+128)
 13459  24F9  085D               	movf	??_startUp^(0+128),w
 13460  24FA  00D1               	movwf	measureVoltages@totalVoltage^(0+128)
 13461  24FB  300C               	movlw	12
 13462  24FC  00D2               	movwf	measureVoltages@numVoltages^(0+128)
 13463  24FD  3000               	movlw	0
 13464  24FE  00D3               	movwf	(measureVoltages@numVoltages^(0+128)+1)
 13465  24FF  0859               	movf	startUp@voltages^(0+128),w
 13466  2500  31A2  2296  31A4   	fcall	_measureVoltages
 13467                           
 13468                           ;main.c: 144: for(int i = 0; i < 12; i++){
 13469  2503  0021               	movlb	1	; select bank1
 13470  2504  01E2               	clrf	startUp@i^(0+128)
 13471  2505  01E3               	clrf	(startUp@i+1)^(0+128)
 13472  2506  0863               	movf	(startUp@i+1)^(0+128),w
 13473  2507  3A80               	xorlw	128
 13474  2508  00DD               	movwf	??_startUp^(0+128)
 13475  2509  3080               	movlw	128
 13476  250A  025D               	subwf	??_startUp^(0+128),w
 13477  250B  1D03               	skipz
 13478  250C  2D0F               	goto	u10445
 13479  250D  300C               	movlw	12
 13480  250E  0262               	subwf	startUp@i^(0+128),w
 13481  250F                     u10445:	
 13482  250F  1803               	btfsc	3,0
 13483  2510  2D6D               	goto	l7956
 13484  2511                     l7946:	
 13485                           
 13486                           ;main.c: 145: if(voltages[i] > 4.2 || voltages[i] < 3.1){
 13487  2511  3040               	movlw	64
 13488  2512  0021               	movlb	1	; select bank1
 13489  2513  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13490  2514  3086               	movlw	134
 13491  2515  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13492  2516  3066               	movlw	102
 13493  2517  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13494  2518  3066               	movlw	102
 13495  2519  00C1               	movwf	___flge@ff1^(0+128)
 13496  251A  0862               	movf	startUp@i^(0+128),w
 13497  251B  00DD               	movwf	??_startUp^(0+128)
 13498  251C  3001               	movlw	1
 13499  251D                     u10455:	
 13500  251D  35DD               	lslf	??_startUp^(0+128),f
 13501  251E  3EFF               	addlw	-1
 13502  251F  1D03               	skipz
 13503  2520  2D1D               	goto	u10455
 13504  2521  355D               	lslf	??_startUp^(0+128),w
 13505  2522  0759               	addwf	startUp@voltages^(0+128),w
 13506  2523  00DE               	movwf	(??_startUp+1)^(0+128)
 13507  2524  085E               	movf	(??_startUp+1)^(0+128),w
 13508  2525  0086               	movwf	6
 13509  2526  3002               	movlw	2	; select bank4/5
 13510  2527  0087               	movwf	7
 13511  2528  3F40               	moviw [0]fsr1
 13512  2529  00C5               	movwf	___flge@ff2^(0+128)
 13513  252A  3F41               	moviw [1]fsr1
 13514  252B  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13515  252C  3F42               	moviw [2]fsr1
 13516  252D  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13517  252E  3F43               	moviw [3]fsr1
 13518  252F  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13519  2530  31AE  26C7  31A4   	fcall	___flge
 13520  2533  1C03               	btfss	3,0
 13521  2534  2D59               	goto	l7950
 13522  2535  0021               	movlb	1	; select bank1
 13523  2536  0862               	movf	startUp@i^(0+128),w
 13524  2537  00DD               	movwf	??_startUp^(0+128)
 13525  2538  3001               	movlw	1
 13526  2539                     u10475:	
 13527  2539  35DD               	lslf	??_startUp^(0+128),f
 13528  253A  3EFF               	addlw	-1
 13529  253B  1D03               	skipz
 13530  253C  2D39               	goto	u10475
 13531  253D  355D               	lslf	??_startUp^(0+128),w
 13532  253E  0759               	addwf	startUp@voltages^(0+128),w
 13533  253F  00DE               	movwf	(??_startUp+1)^(0+128)
 13534  2540  085E               	movf	(??_startUp+1)^(0+128),w
 13535  2541  0086               	movwf	6
 13536  2542  3002               	movlw	2	; select bank4/5
 13537  2543  0087               	movwf	7
 13538  2544  3F40               	moviw [0]fsr1
 13539  2545  00C1               	movwf	___flge@ff1^(0+128)
 13540  2546  3F41               	moviw [1]fsr1
 13541  2547  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13542  2548  3F42               	moviw [2]fsr1
 13543  2549  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13544  254A  3F43               	moviw [3]fsr1
 13545  254B  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13546  254C  3040               	movlw	64
 13547  254D  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13548  254E  3046               	movlw	70
 13549  254F  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13550  2550  3066               	movlw	102
 13551  2551  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13552  2552  3066               	movlw	102
 13553  2553  00C5               	movwf	___flge@ff2^(0+128)
 13554  2554  31AE  26C7  31A4   	fcall	___flge
 13555  2557  1803               	btfsc	3,0
 13556  2558  2D5D               	goto	l7954
 13557  2559                     l7950:	
 13558                           
 13559                           ;main.c: 147: return 0;
 13560  2559  0021               	movlb	1	; select bank1
 13561  255A  01D8               	clrf	?_startUp^(0+128)
 13562  255B  01D9               	clrf	(?_startUp+1)^(0+128)
 13563  255C  0008               	return
 13564  255D                     l7954:	
 13565  255D  3001               	movlw	1
 13566  255E  0021               	movlb	1	; select bank1
 13567  255F  07E2               	addwf	startUp@i^(0+128),f
 13568  2560  3000               	movlw	0
 13569  2561  3DE3               	addwfc	(startUp@i+1)^(0+128),f
 13570  2562  0863               	movf	(startUp@i+1)^(0+128),w
 13571  2563  3A80               	xorlw	128
 13572  2564  00DD               	movwf	??_startUp^(0+128)
 13573  2565  3080               	movlw	128
 13574  2566  025D               	subwf	??_startUp^(0+128),w
 13575  2567  1D03               	skipz
 13576  2568  2D6B               	goto	u10495
 13577  2569  300C               	movlw	12
 13578  256A  0262               	subwf	startUp@i^(0+128),w
 13579  256B                     u10495:	
 13580  256B  1C03               	skipc
 13581  256C  2D11               	goto	l7946
 13582  256D                     l7956:	
 13583                           
 13584                           ;main.c: 148: }
 13585                           ;main.c: 149: }
 13586                           ;main.c: 150: *totalVoltage = sumVoltages(voltages, 12);
 13587  256D  300C               	movlw	12
 13588  256E  0021               	movlb	1	; select bank1
 13589  256F  00C1               	movwf	sumVoltages@numVoltages^(0+128)
 13590  2570  3000               	movlw	0
 13591  2571  00C2               	movwf	(sumVoltages@numVoltages^(0+128)+1)
 13592  2572  0859               	movf	startUp@voltages^(0+128),w
 13593  2573  31A8  20F0  31A4   	fcall	_sumVoltages
 13594  2576  0021               	movlb	1	; select bank1
 13595  2577  085A               	movf	startUp@totalVoltage^(0+128),w
 13596  2578  0086               	movwf	6
 13597  2579  3002               	movlw	2	; select bank4/5
 13598  257A  0087               	movwf	7
 13599  257B  0841               	movf	?_sumVoltages^(0+128),w
 13600  257C  3FC0               	movwi [0]fsr1
 13601  257D  0842               	movf	(?_sumVoltages+1)^(0+128),w
 13602  257E  3FC1               	movwi [1]fsr1
 13603  257F  0843               	movf	(?_sumVoltages+2)^(0+128),w
 13604  2580  3FC2               	movwi [2]fsr1
 13605  2581  0844               	movf	(?_sumVoltages+3)^(0+128),w
 13606  2582  3FC3               	movwi [3]fsr1
 13607                           
 13608                           ;main.c: 151: *soc = ((float)(*totalVoltage) - (float)38.4) / ((float)50.4 - (float)38.4
      +                          );
 13609  2583  3041               	movlw	65
 13610  2584  0020               	movlb	0	; select bank0
 13611  2585  00D9               	movwf	___fldiv@a+3
 13612  2586  3040               	movlw	64
 13613  2587  00D8               	movwf	___fldiv@a+2
 13614  2588  3000               	movlw	0
 13615  2589  00D7               	movwf	___fldiv@a+1
 13616  258A  3000               	movlw	0
 13617  258B  00D6               	movwf	___fldiv@a
 13618  258C  30C2               	movlw	194
 13619  258D  0021               	movlb	1	; select bank1
 13620  258E  00AC               	movwf	(___fladd@b+3)^(0+128)
 13621  258F  3019               	movlw	25
 13622  2590  00AB               	movwf	(___fladd@b+2)^(0+128)
 13623  2591  3099               	movlw	153
 13624  2592  00AA               	movwf	(___fladd@b+1)^(0+128)
 13625  2593  309A               	movlw	154
 13626  2594  00A9               	movwf	___fladd@b^(0+128)
 13627  2595  085A               	movf	startUp@totalVoltage^(0+128),w
 13628  2596  0086               	movwf	6
 13629  2597  3002               	movlw	2	; select bank4/5
 13630  2598  0087               	movwf	7
 13631  2599  3F40               	moviw [0]fsr1
 13632  259A  00AD               	movwf	___fladd@a^(0+128)
 13633  259B  3F41               	moviw [1]fsr1
 13634  259C  00AE               	movwf	(___fladd@a+1)^(0+128)
 13635  259D  3F42               	moviw [2]fsr1
 13636  259E  00AF               	movwf	(___fladd@a+2)^(0+128)
 13637  259F  3F43               	moviw [3]fsr1
 13638  25A0  00B0               	movwf	(___fladd@a+3)^(0+128)
 13639  25A1  3193  2374  31A4   	fcall	___fladd
 13640  25A4  0021               	movlb	1	; select bank1
 13641  25A5  082C               	movf	(?___fladd+3)^(0+128),w
 13642  25A6  0020               	movlb	0	; select bank0
 13643  25A7  00DD               	movwf	___fldiv@b+3
 13644  25A8  0021               	movlb	1	; select bank1
 13645  25A9  082B               	movf	(?___fladd+2)^(0+128),w
 13646  25AA  0020               	movlb	0	; select bank0
 13647  25AB  00DC               	movwf	___fldiv@b+2
 13648  25AC  0021               	movlb	1	; select bank1
 13649  25AD  082A               	movf	(?___fladd+1)^(0+128),w
 13650  25AE  0020               	movlb	0	; select bank0
 13651  25AF  00DB               	movwf	___fldiv@b+1
 13652  25B0  0021               	movlb	1	; select bank1
 13653  25B1  0829               	movf	?___fladd^(0+128),w
 13654  25B2  0020               	movlb	0	; select bank0
 13655  25B3  00DA               	movwf	___fldiv@b
 13656  25B4  3190  2004  31A4   	fcall	___fldiv
 13657  25B7  0021               	movlb	1	; select bank1
 13658  25B8  085C               	movf	startUp@soc^(0+128),w
 13659  25B9  0086               	movwf	6
 13660  25BA  3002               	movlw	2	; select bank4/5
 13661  25BB  0087               	movwf	7
 13662  25BC  0020               	movlb	0	; select bank0
 13663  25BD  0856               	movf	?___fldiv,w
 13664  25BE  3FC0               	movwi [0]fsr1
 13665  25BF  0857               	movf	?___fldiv+1,w
 13666  25C0  3FC1               	movwi [1]fsr1
 13667  25C1  0858               	movf	?___fldiv+2,w
 13668  25C2  3FC2               	movwi [2]fsr1
 13669  25C3  0859               	movf	?___fldiv+3,w
 13670  25C4  3FC3               	movwi [3]fsr1
 13671                           
 13672                           ;main.c: 153: *highestTemp = getTemps(temps, 5);
 13673  25C5  3005               	movlw	5
 13674  25C6  0021               	movlb	1	; select bank1
 13675  25C7  00B3               	movwf	getTemps@numTemps^(0+128)
 13676  25C8  3000               	movlw	0
 13677  25C9  00B4               	movwf	(getTemps@numTemps^(0+128)+1)
 13678  25CA  0858               	movf	startUp@temps^(0+128),w
 13679  25CB  31AB  2310  31A4   	fcall	_getTemps
 13680  25CE  0021               	movlb	1	; select bank1
 13681  25CF  0861               	movf	startUp@highestTemp^(0+128),w
 13682  25D0  0086               	movwf	6
 13683  25D1  3001               	movlw	1	; select bank2/3
 13684  25D2  0087               	movwf	7
 13685  25D3  0833               	movf	?_getTemps^(0+128),w
 13686  25D4  3FC0               	movwi [0]fsr1
 13687  25D5  0834               	movf	(?_getTemps+1)^(0+128),w
 13688  25D6  3FC1               	movwi [1]fsr1
 13689                           
 13690                           ;main.c: 154: for(int i = 0; i < 5; i++){
 13691  25D7  01E4               	clrf	startUp@i_404^(0+128)
 13692  25D8  01E5               	clrf	(startUp@i_404+1)^(0+128)
 13693  25D9  0865               	movf	(startUp@i_404+1)^(0+128),w
 13694  25DA  3A80               	xorlw	128
 13695  25DB  00DD               	movwf	??_startUp^(0+128)
 13696  25DC  3080               	movlw	128
 13697  25DD  025D               	subwf	??_startUp^(0+128),w
 13698  25DE  1D03               	skipz
 13699  25DF  2DE2               	goto	u10505
 13700  25E0  3005               	movlw	5
 13701  25E1  0264               	subwf	startUp@i_404^(0+128),w
 13702  25E2                     u10505:	
 13703  25E2  1803               	btfsc	3,0
 13704  25E3  2E26               	goto	l7976
 13705  25E4                     l7966:	
 13706                           
 13707                           ;main.c: 155: if(temps[i] < 5 || temps[i] > 40){
 13708  25E4  0021               	movlb	1	; select bank1
 13709  25E5  3564               	lslf	startUp@i_404^(0+128),w
 13710  25E6  0758               	addwf	startUp@temps^(0+128),w
 13711  25E7  00DD               	movwf	??_startUp^(0+128)
 13712  25E8  085D               	movf	??_startUp^(0+128),w
 13713  25E9  0086               	movwf	6
 13714  25EA  3002               	movlw	2	; select bank4/5
 13715  25EB  0087               	movwf	7
 13716  25EC  3F40               	moviw [0]fsr1
 13717  25ED  00DE               	movwf	(??_startUp+1)^(0+128)
 13718  25EE  3F41               	moviw [1]fsr1
 13719  25EF  00DF               	movwf	((??_startUp+1)^(0+128)+1)
 13720  25F0  085F               	movf	(??_startUp+2)^(0+128),w
 13721  25F1  3A80               	xorlw	128
 13722  25F2  00E0               	movwf	(??_startUp+3)^(0+128)
 13723  25F3  3080               	movlw	128
 13724  25F4  0260               	subwf	(??_startUp+3)^(0+128),w
 13725  25F5  1D03               	skipz
 13726  25F6  2DF9               	goto	u10515
 13727  25F7  3005               	movlw	5
 13728  25F8  025E               	subwf	(??_startUp+1)^(0+128),w
 13729  25F9                     u10515:	
 13730  25F9  1C03               	skipc
 13731  25FA  2E12               	goto	l7970
 13732  25FB  0021               	movlb	1	; select bank1
 13733  25FC  3564               	lslf	startUp@i_404^(0+128),w
 13734  25FD  0758               	addwf	startUp@temps^(0+128),w
 13735  25FE  00DD               	movwf	??_startUp^(0+128)
 13736  25FF  085D               	movf	??_startUp^(0+128),w
 13737  2600  0086               	movwf	6
 13738  2601  3002               	movlw	2	; select bank4/5
 13739  2602  0087               	movwf	7
 13740  2603  3F40               	moviw [0]fsr1
 13741  2604  00DE               	movwf	(??_startUp+1)^(0+128)
 13742  2605  3F41               	moviw [1]fsr1
 13743  2606  00DF               	movwf	((??_startUp+1)^(0+128)+1)
 13744  2607  085F               	movf	(??_startUp+2)^(0+128),w
 13745  2608  3A80               	xorlw	128
 13746  2609  00E0               	movwf	(??_startUp+3)^(0+128)
 13747  260A  3080               	movlw	128
 13748  260B  0260               	subwf	(??_startUp+3)^(0+128),w
 13749  260C  1D03               	skipz
 13750  260D  2E10               	goto	u10525
 13751  260E  3029               	movlw	41
 13752  260F  025E               	subwf	(??_startUp+1)^(0+128),w
 13753  2610                     u10525:	
 13754  2610  1C03               	skipc
 13755  2611  2E16               	goto	l7974
 13756  2612                     l7970:	
 13757                           
 13758                           ;main.c: 159: return 0;
 13759  2612  0021               	movlb	1	; select bank1
 13760  2613  01D8               	clrf	?_startUp^(0+128)
 13761  2614  01D9               	clrf	(?_startUp+1)^(0+128)
 13762  2615  0008               	return
 13763  2616                     l7974:	
 13764  2616  3001               	movlw	1
 13765  2617  0021               	movlb	1	; select bank1
 13766  2618  07E4               	addwf	startUp@i_404^(0+128),f
 13767  2619  3000               	movlw	0
 13768  261A  3DE5               	addwfc	(startUp@i_404+1)^(0+128),f
 13769  261B  0865               	movf	(startUp@i_404+1)^(0+128),w
 13770  261C  3A80               	xorlw	128
 13771  261D  00DD               	movwf	??_startUp^(0+128)
 13772  261E  3080               	movlw	128
 13773  261F  025D               	subwf	??_startUp^(0+128),w
 13774  2620  1D03               	skipz
 13775  2621  2E24               	goto	u10535
 13776  2622  3005               	movlw	5
 13777  2623  0264               	subwf	startUp@i_404^(0+128),w
 13778  2624                     u10535:	
 13779  2624  1C03               	skipc
 13780  2625  2DE4               	goto	l7966
 13781  2626                     l7976:	
 13782                           
 13783                           ;main.c: 160: }
 13784                           ;main.c: 161: }
 13785                           ;main.c: 163: *current = getCurrent();
 13786  2626  31B7  27C2  31A4   	fcall	_getCurrent
 13787  2629  0021               	movlb	1	; select bank1
 13788  262A  085B               	movf	startUp@current^(0+128),w
 13789  262B  0086               	movwf	6
 13790  262C  3002               	movlw	2	; select bank4/5
 13791  262D  0087               	movwf	7
 13792  262E  084D               	movf	?_getCurrent^(0+128),w
 13793  262F  3FC0               	movwi [0]fsr1
 13794  2630  084E               	movf	(?_getCurrent+1)^(0+128),w
 13795  2631  3FC1               	movwi [1]fsr1
 13796  2632  084F               	movf	(?_getCurrent+2)^(0+128),w
 13797  2633  3FC2               	movwi [2]fsr1
 13798  2634  0850               	movf	(?_getCurrent+3)^(0+128),w
 13799  2635  3FC3               	movwi [3]fsr1
 13800                           
 13801                           ;main.c: 164: if(*current < -2 || *current > 2){
 13802  2636  085B               	movf	startUp@current^(0+128),w
 13803  2637  0086               	movwf	6
 13804  2638  3002               	movlw	2	; select bank4/5
 13805  2639  0087               	movwf	7
 13806  263A  3F40               	moviw [0]fsr1
 13807  263B  00C1               	movwf	___flge@ff1^(0+128)
 13808  263C  3F41               	moviw [1]fsr1
 13809  263D  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13810  263E  3F42               	moviw [2]fsr1
 13811  263F  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13812  2640  3F43               	moviw [3]fsr1
 13813  2641  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13814  2642  30C0               	movlw	192
 13815  2643  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13816  2644  3000               	movlw	0
 13817  2645  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13818  2646  3000               	movlw	0
 13819  2647  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13820  2648  3000               	movlw	0
 13821  2649  00C5               	movwf	___flge@ff2^(0+128)
 13822  264A  31AE  26C7  31A4   	fcall	___flge
 13823  264D  1C03               	btfss	3,0
 13824  264E  2E69               	goto	l7980
 13825  264F  3040               	movlw	64
 13826  2650  0021               	movlb	1	; select bank1
 13827  2651  00C4               	movwf	(___flge@ff1+3)^(0+128)
 13828  2652  3000               	movlw	0
 13829  2653  00C3               	movwf	(___flge@ff1+2)^(0+128)
 13830  2654  3000               	movlw	0
 13831  2655  00C2               	movwf	(___flge@ff1+1)^(0+128)
 13832  2656  3000               	movlw	0
 13833  2657  00C1               	movwf	___flge@ff1^(0+128)
 13834  2658  085B               	movf	startUp@current^(0+128),w
 13835  2659  0086               	movwf	6
 13836  265A  3002               	movlw	2	; select bank4/5
 13837  265B  0087               	movwf	7
 13838  265C  3F40               	moviw [0]fsr1
 13839  265D  00C5               	movwf	___flge@ff2^(0+128)
 13840  265E  3F41               	moviw [1]fsr1
 13841  265F  00C6               	movwf	(___flge@ff2+1)^(0+128)
 13842  2660  3F42               	moviw [2]fsr1
 13843  2661  00C7               	movwf	(___flge@ff2+2)^(0+128)
 13844  2662  3F43               	moviw [3]fsr1
 13845  2663  00C8               	movwf	(___flge@ff2+3)^(0+128)
 13846  2664  31AE  26C7  31A4   	fcall	___flge
 13847  2667  1803               	btfsc	3,0
 13848  2668  2E6D               	goto	l7984
 13849  2669                     l7980:	
 13850                           
 13851                           ;main.c: 166: return 0;
 13852  2669  0021               	movlb	1	; select bank1
 13853  266A  01D8               	clrf	?_startUp^(0+128)
 13854  266B  01D9               	clrf	(?_startUp+1)^(0+128)
 13855  266C  0008               	return
 13856  266D                     l7984:	
 13857                           
 13858                           ;main.c: 167: }
 13859                           ;main.c: 169: return 1;
 13860  266D  3001               	movlw	1
 13861  266E  0021               	movlb	1	; select bank1
 13862  266F  00D8               	movwf	?_startUp^(0+128)
 13863  2670  3000               	movlw	0
 13864  2671  00D9               	movwf	(?_startUp^(0+128)+1)
 13865  2672  0008               	return
 13866  2673                     __end_of_startUp:	
 13867                           
 13868                           	psect	text21
 13869  2296                     __ptext21:	
 13870 ;; *************** function _measureVoltages *****************
 13871 ;; Defined at:
 13872 ;;		line 88 in file "ltc6804.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  voltages        1    wreg     PTR float 
 13875 ;;		 -> main@voltages(48), 
 13876 ;;  totalVoltage    1   49[BANK1 ] PTR float 
 13877 ;;		 -> main@totalVoltage(4), 
 13878 ;;  numVoltages     2   50[BANK1 ] int 
 13879 ;; Auto vars:     Size  Location     Type
 13880 ;;  voltages        1   27[BANK2 ] PTR float 
 13881 ;;		 -> main@voltages(48), 
 13882 ;;  i               2   28[BANK2 ] int 
 13883 ;;  ltcData        24    0[BANK2 ] unsigned int [12][1]
 13884 ;;  errorCount      2   24[BANK2 ] int 
 13885 ;;  pecError        1   26[BANK2 ] unsigned char 
 13886 ;; Return value:  Size  Location     Type
 13887 ;;                  1    wreg      void 
 13888 ;; Registers used:
 13889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13890 ;; Tracked objects:
 13891 ;;		On entry : 0/0
 13892 ;;		On exit  : 0/0
 13893 ;;		Unchanged: 0/0
 13894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13895 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13896 ;;      Locals:         0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13897 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13898 ;;      Totals:         0       0       7      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13899 ;;Total ram usage:       37 bytes
 13900 ;; Hardware stack levels used:    1
 13901 ;; Hardware stack levels required when called:    6
 13902 ;; This function calls:
 13903 ;;		_LTC6804_adcv
 13904 ;;		_LTC6804_rdcv
 13905 ;;		___fldiv
 13906 ;;		___flge
 13907 ;;		___flmul
 13908 ;;		___xxtofl
 13909 ;;		_sumVoltages
 13910 ;; This function is called by:
 13911 ;;		_main
 13912 ;;		_startUp
 13913 ;; This function uses a non-reentrant model
 13914 ;;
 13915                           
 13916                           
 13917                           ;psect for function _measureVoltages
 13918  2296                     _measureVoltages:	
 13919                           
 13920                           ;incstack = 0
 13921                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13922                           ;measureVoltages@voltages stored from wreg
 13923  2296  0022               	movlb	2	; select bank2
 13924  2297  00BB               	movwf	measureVoltages@voltages^(0+256)
 13925                           
 13926                           ;ltc6804.c: 89: int errorCount = 0;
 13927  2298  01B8               	clrf	measureVoltages@errorCount^(0+256)
 13928  2299  01B9               	clrf	(measureVoltages@errorCount+1)^(0+256)
 13929                           
 13930                           ;ltc6804.c: 90: char pecError = -1;
 13931  229A  30FF               	movlw	255
 13932  229B  0021               	movlb	1	; select bank1
 13933  229C  00D4               	movwf	??_measureVoltages^(0+128)
 13934  229D  0854               	movf	??_measureVoltages^(0+128),w
 13935  229E  0022               	movlb	2	; select bank2
 13936  229F  00BA               	movwf	measureVoltages@pecError^(0+256)
 13937                           
 13938                           ;ltc6804.c: 91: unsigned int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 13939  22A0  3020               	movlw	low measureVoltages@F7581
 13940  22A1  0086               	movwf	6
 13941  22A2  3003               	movlw	high measureVoltages@F7581
 13942  22A3  0087               	movwf	7
 13943  22A4  3020               	movlw	low measureVoltages@ltcData
 13944  22A5  0084               	movwf	4
 13945  22A6  3001               	movlw	high measureVoltages@ltcData
 13946  22A7  0085               	movwf	5
 13947  22A8  3018               	movlw	24
 13948  22A9  0021               	movlb	1	; select bank1
 13949  22AA  00D4               	movwf	??_measureVoltages^(0+128)
 13950  22AB                     u10170:	
 13951  22AB  0016               	moviw fsr1++
 13952  22AC  001A               	movwi fsr0++
 13953  22AD  0BD4               	decfsz	??_measureVoltages^(0+128),f
 13954  22AE  2AAB               	goto	u10170
 13955                           
 13956                           ;ltc6804.c: 93: LTC6804_adcv();
 13957  22AF  31B7  2791  31A2   	fcall	_LTC6804_adcv
 13958                           
 13959                           ;ltc6804.c: 94: *totalVoltage = sumVoltages(voltages, numVoltages);
 13960  22B2  0021               	movlb	1	; select bank1
 13961  22B3  0853               	movf	(measureVoltages@numVoltages+1)^(0+128),w
 13962  22B4  00C2               	movwf	(sumVoltages@numVoltages+1)^(0+128)
 13963  22B5  0852               	movf	measureVoltages@numVoltages^(0+128),w
 13964  22B6  00C1               	movwf	sumVoltages@numVoltages^(0+128)
 13965  22B7  0022               	movlb	2	; select bank2
 13966  22B8  083B               	movf	measureVoltages@voltages^(0+256),w
 13967  22B9  31A8  20F0  31A2   	fcall	_sumVoltages
 13968  22BC  0021               	movlb	1	; select bank1
 13969  22BD  0851               	movf	measureVoltages@totalVoltage^(0+128),w
 13970  22BE  0086               	movwf	6
 13971  22BF  3002               	movlw	2	; select bank4/5
 13972  22C0  0087               	movwf	7
 13973  22C1  0841               	movf	?_sumVoltages^(0+128),w
 13974  22C2  3FC0               	movwi [0]fsr1
 13975  22C3  0842               	movf	(?_sumVoltages+1)^(0+128),w
 13976  22C4  3FC1               	movwi [1]fsr1
 13977  22C5  0843               	movf	(?_sumVoltages+2)^(0+128),w
 13978  22C6  3FC2               	movwi [2]fsr1
 13979  22C7  0844               	movf	(?_sumVoltages+3)^(0+128),w
 13980  22C8  3FC3               	movwi [3]fsr1
 13981  22C9                     l7802:	
 13982                           ;ltc6804.c: 96: do{
 13983                           
 13984                           
 13985                           ;ltc6804.c: 97: pecError = LTC6804_rdcv(0, 1, ltcData);
 13986  22C9  0020               	movlb	0	; select bank0
 13987  22CA  01BE               	clrf	LTC6804_rdcv@total_ic
 13988  22CB  0ABE               	incf	LTC6804_rdcv@total_ic,f
 13989  22CC  3020               	movlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13990  22CD  0021               	movlb	1	; select bank1
 13991  22CE  00D4               	movwf	??_measureVoltages^(0+128)
 13992  22CF  0854               	movf	??_measureVoltages^(0+128),w
 13993  22D0  0020               	movlb	0	; select bank0
 13994  22D1  00BF               	movwf	LTC6804_rdcv@cell_codes
 13995  22D2  3000               	movlw	0
 13996  22D3  31A6  2673  31A2   	fcall	_LTC6804_rdcv
 13997  22D6  0021               	movlb	1	; select bank1
 13998  22D7  00D5               	movwf	(??_measureVoltages+1)^(0+128)
 13999  22D8  0855               	movf	(??_measureVoltages+1)^(0+128),w
 14000  22D9  0022               	movlb	2	; select bank2
 14001  22DA  00BA               	movwf	measureVoltages@pecError^(0+256)
 14002                           
 14003                           ;ltc6804.c: 98: errorCount ++;
 14004  22DB  3001               	movlw	1
 14005  22DC  07B8               	addwf	measureVoltages@errorCount^(0+256),f
 14006  22DD  3000               	movlw	0
 14007  22DE  3DB9               	addwfc	(measureVoltages@errorCount+1)^(0+256),f
 14008                           
 14009                           ;ltc6804.c: 99: }while(pecError != 0 && errorCount <= 10);
 14010  22DF  083A               	movf	measureVoltages@pecError^(0+256),w
 14011  22E0  1903               	btfsc	3,2
 14012  22E1  2AEF               	goto	l7810
 14013  22E2  0839               	movf	(measureVoltages@errorCount+1)^(0+256),w
 14014  22E3  3A80               	xorlw	128
 14015  22E4  0021               	movlb	1	; select bank1
 14016  22E5  00D4               	movwf	??_measureVoltages^(0+128)
 14017  22E6  3080               	movlw	128
 14018  22E7  0254               	subwf	??_measureVoltages^(0+128),w
 14019  22E8  1D03               	skipz
 14020  22E9  2AED               	goto	u10195
 14021  22EA  300B               	movlw	11
 14022  22EB  0022               	movlb	2	; select bank2
 14023  22EC  0238               	subwf	measureVoltages@errorCount^(0+256),w
 14024  22ED                     u10195:	
 14025  22ED  1C03               	skipc
 14026  22EE  2AC9               	goto	l7802
 14027  22EF                     l7810:	
 14028                           
 14029                           ;ltc6804.c: 101: for(int i = 0; i< 12; i ++){
 14030  22EF  0022               	movlb	2	; select bank2
 14031  22F0  01BC               	clrf	measureVoltages@i^(0+256)
 14032  22F1  01BD               	clrf	(measureVoltages@i+1)^(0+256)
 14033  22F2                     L12:	
 14034  22F2  083D               	movf	(measureVoltages@i+1)^(0+256),w
 14035  22F3  3A80               	xorlw	128
 14036  22F4  0021               	movlb	1	; select bank1
 14037  22F5  00D4               	movwf	??_measureVoltages^(0+128)
 14038  22F6  3080               	movlw	128
 14039  22F7  0254               	subwf	??_measureVoltages^(0+128),w
 14040  22F8  1D03               	skipz
 14041  22F9  2AFD               	goto	u10205
 14042  22FA  300C               	movlw	12
 14043  22FB  0022               	movlb	2	; select bank2
 14044  22FC  023C               	subwf	measureVoltages@i^(0+256),w
 14045  22FD                     u10205:	
 14046  22FD  1803               	btfsc	3,0
 14047  22FE  0008               	return
 14048                           
 14049                           ;ltc6804.c: 102: voltages[i] = 1.0*((float)ltcData[0][i]/10000.0);
 14050  22FF  303F               	movlw	63
 14051  2300  0020               	movlb	0	; select bank0
 14052  2301  00BF               	movwf	___flmul@b+3
 14053  2302  3080               	movlw	128
 14054  2303  00BE               	movwf	___flmul@b+2
 14055  2304  3000               	movlw	0
 14056  2305  00BD               	movwf	___flmul@b+1
 14057  2306  3000               	movlw	0
 14058  2307  00BC               	movwf	___flmul@b
 14059  2308  3046               	movlw	70
 14060  2309  00D9               	movwf	___fldiv@a+3
 14061  230A  301C               	movlw	28
 14062  230B  00D8               	movwf	___fldiv@a+2
 14063  230C  3040               	movlw	64
 14064  230D  00D7               	movwf	___fldiv@a+1
 14065  230E  3000               	movlw	0
 14066  230F  00D6               	movwf	___fldiv@a
 14067  2310  0022               	movlb	2	; select bank2
 14068  2311  353C               	lslf	measureVoltages@i^(0+256),w
 14069  2312  3E20               	addlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 14070  2313  0086               	movwf	6
 14071  2314  3001               	movlw	1	; select bank2/3
 14072  2315  0087               	movwf	7
 14073  2316  3F40               	moviw [0]fsr1
 14074  2317  0021               	movlb	1	; select bank1
 14075  2318  00D4               	movwf	??_measureVoltages^(0+128)
 14076  2319  3F41               	moviw [1]fsr1
 14077  231A  00D5               	movwf	(??_measureVoltages^(0+128)+1)
 14078  231B  0854               	movf	??_measureVoltages^(0+128),w
 14079  231C  0020               	movlb	0	; select bank0
 14080  231D  00AE               	movwf	___xxtofl@val
 14081  231E  0021               	movlb	1	; select bank1
 14082  231F  0855               	movf	(??_measureVoltages+1)^(0+128),w
 14083  2320  0020               	movlb	0	; select bank0
 14084  2321  00AF               	movwf	___xxtofl@val+1
 14085  2322  01B0               	clrf	___xxtofl@val+2
 14086  2323  01B1               	clrf	___xxtofl@val+3
 14087  2324  3000               	movlw	0
 14088  2325  31AE  2631  31A2   	fcall	___xxtofl
 14089  2328  0020               	movlb	0	; select bank0
 14090  2329  0831               	movf	?___xxtofl+3,w
 14091  232A  00DD               	movwf	___fldiv@b+3
 14092  232B  0830               	movf	?___xxtofl+2,w
 14093  232C  00DC               	movwf	___fldiv@b+2
 14094  232D  082F               	movf	?___xxtofl+1,w
 14095  232E  00DB               	movwf	___fldiv@b+1
 14096  232F  082E               	movf	?___xxtofl,w
 14097  2330  00DA               	movwf	___fldiv@b
 14098  2331  3190  2004  31A2   	fcall	___fldiv
 14099  2334  0020               	movlb	0	; select bank0
 14100  2335  0859               	movf	?___fldiv+3,w
 14101  2336  00C3               	movwf	___flmul@a+3
 14102  2337  0858               	movf	?___fldiv+2,w
 14103  2338  00C2               	movwf	___flmul@a+2
 14104  2339  0857               	movf	?___fldiv+1,w
 14105  233A  00C1               	movwf	___flmul@a+1
 14106  233B  0856               	movf	?___fldiv,w
 14107  233C  00C0               	movwf	___flmul@a
 14108  233D  318B  233E  31A2   	fcall	___flmul
 14109  2340  0022               	movlb	2	; select bank2
 14110  2341  083C               	movf	measureVoltages@i^(0+256),w
 14111  2342  0021               	movlb	1	; select bank1
 14112  2343  00D6               	movwf	(??_measureVoltages+2)^(0+128)
 14113  2344  3001               	movlw	1
 14114  2345                     u10215:	
 14115  2345  35D6               	lslf	(??_measureVoltages+2)^(0+128),f
 14116  2346  3EFF               	addlw	-1
 14117  2347  1D03               	skipz
 14118  2348  2B45               	goto	u10215
 14119  2349  3556               	lslf	(??_measureVoltages+2)^(0+128),w
 14120  234A  0022               	movlb	2	; select bank2
 14121  234B  073B               	addwf	measureVoltages@voltages^(0+256),w
 14122  234C  0021               	movlb	1	; select bank1
 14123  234D  00D7               	movwf	(??_measureVoltages+3)^(0+128)
 14124  234E  0857               	movf	(??_measureVoltages+3)^(0+128),w
 14125  234F  0086               	movwf	6
 14126  2350  3002               	movlw	2	; select bank4/5
 14127  2351  0087               	movwf	7
 14128  2352  0020               	movlb	0	; select bank0
 14129  2353  083C               	movf	?___flmul,w
 14130  2354  3FC0               	movwi [0]fsr1
 14131  2355  083D               	movf	?___flmul+1,w
 14132  2356  3FC1               	movwi [1]fsr1
 14133  2357  083E               	movf	?___flmul+2,w
 14134  2358  3FC2               	movwi [2]fsr1
 14135  2359  083F               	movf	?___flmul+3,w
 14136  235A  3FC3               	movwi [3]fsr1
 14137                           
 14138                           ;ltc6804.c: 103: if(voltages[i] < 0.1){
 14139  235B  0022               	movlb	2	; select bank2
 14140  235C  083C               	movf	measureVoltages@i^(0+256),w
 14141  235D  0021               	movlb	1	; select bank1
 14142  235E  00D4               	movwf	??_measureVoltages^(0+128)
 14143  235F  3001               	movlw	1
 14144  2360                     u10225:	
 14145  2360  35D4               	lslf	??_measureVoltages^(0+128),f
 14146  2361  3EFF               	addlw	-1
 14147  2362  1D03               	skipz
 14148  2363  2B60               	goto	u10225
 14149  2364  3554               	lslf	??_measureVoltages^(0+128),w
 14150  2365  0022               	movlb	2	; select bank2
 14151  2366  073B               	addwf	measureVoltages@voltages^(0+256),w
 14152  2367  0021               	movlb	1	; select bank1
 14153  2368  00D5               	movwf	(??_measureVoltages+1)^(0+128)
 14154  2369  0855               	movf	(??_measureVoltages+1)^(0+128),w
 14155  236A  0086               	movwf	6
 14156  236B  3002               	movlw	2	; select bank4/5
 14157  236C  0087               	movwf	7
 14158  236D  3F40               	moviw [0]fsr1
 14159  236E  00C1               	movwf	___flge@ff1^(0+128)
 14160  236F  3F41               	moviw [1]fsr1
 14161  2370  00C2               	movwf	(___flge@ff1+1)^(0+128)
 14162  2371  3F42               	moviw [2]fsr1
 14163  2372  00C3               	movwf	(___flge@ff1+2)^(0+128)
 14164  2373  3F43               	moviw [3]fsr1
 14165  2374  00C4               	movwf	(___flge@ff1+3)^(0+128)
 14166  2375  303D               	movlw	61
 14167  2376  00C8               	movwf	(___flge@ff2+3)^(0+128)
 14168  2377  30CC               	movlw	204
 14169  2378  00C7               	movwf	(___flge@ff2+2)^(0+128)
 14170  2379  30CC               	movlw	204
 14171  237A  00C6               	movwf	(___flge@ff2+1)^(0+128)
 14172  237B  30CD               	movlw	205
 14173  237C  00C5               	movwf	___flge@ff2^(0+128)
 14174  237D  31AE  26C7  31A2   	fcall	___flge
 14175  2380  1803               	btfsc	3,0
 14176  2381  2B9C               	goto	l7820
 14177                           
 14178                           ;ltc6804.c: 104: voltages[i] = 0.0;
 14179  2382  0022               	movlb	2	; select bank2
 14180  2383  083C               	movf	measureVoltages@i^(0+256),w
 14181  2384  0021               	movlb	1	; select bank1
 14182  2385  00D4               	movwf	??_measureVoltages^(0+128)
 14183  2386  3001               	movlw	1
 14184  2387                     u10245:	
 14185  2387  35D4               	lslf	??_measureVoltages^(0+128),f
 14186  2388  3EFF               	addlw	-1
 14187  2389  1D03               	skipz
 14188  238A  2B87               	goto	u10245
 14189  238B  3554               	lslf	??_measureVoltages^(0+128),w
 14190  238C  0022               	movlb	2	; select bank2
 14191  238D  073B               	addwf	measureVoltages@voltages^(0+256),w
 14192  238E  0021               	movlb	1	; select bank1
 14193  238F  00D5               	movwf	(??_measureVoltages+1)^(0+128)
 14194  2390  0855               	movf	(??_measureVoltages+1)^(0+128),w
 14195  2391  0086               	movwf	6
 14196  2392  3002               	movlw	2	; select bank4/5
 14197  2393  0087               	movwf	7
 14198  2394  3000               	movlw	0
 14199  2395  3FC0               	movwi [0]fsr1
 14200  2396  3000               	movlw	0
 14201  2397  3FC1               	movwi [1]fsr1
 14202  2398  3000               	movlw	0
 14203  2399  3FC2               	movwi [2]fsr1
 14204  239A  3000               	movlw	0
 14205  239B  3FC3               	movwi [3]fsr1
 14206  239C                     l7820:	
 14207  239C  3001               	movlw	1
 14208  239D  0022               	movlb	2	; select bank2
 14209  239E  07BC               	addwf	measureVoltages@i^(0+256),f
 14210  239F  3000               	movlw	0
 14211  23A0  3DBD               	addwfc	(measureVoltages@i+1)^(0+256),f
 14212  23A1  2AF2               	goto	L12
 14213  23A2                     __end_of_measureVoltages:	
 14214                           
 14215                           	psect	text22
 14216  28F0                     __ptext22:	
 14217 ;; *************** function _sumVoltages *****************
 14218 ;; Defined at:
 14219 ;;		line 69 in file "ltc6804.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  voltages        1    wreg     PTR float 
 14222 ;;		 -> main@voltages(48), 
 14223 ;;  numVoltages     2   33[BANK1 ] int 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  voltages        1   39[BANK1 ] PTR float 
 14226 ;;		 -> main@voltages(48), 
 14227 ;;  i               2   44[BANK1 ] int 
 14228 ;;  totalVoltage    4   40[BANK1 ] float 
 14229 ;; Return value:  Size  Location     Type
 14230 ;;                  4   33[BANK1 ] float 
 14231 ;; Registers used:
 14232 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14233 ;; Tracked objects:
 14234 ;;		On entry : 0/0
 14235 ;;		On exit  : 0/0
 14236 ;;		Unchanged: 0/0
 14237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14238 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14239 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14240 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14241 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14242 ;;Total ram usage:       13 bytes
 14243 ;; Hardware stack levels used:    1
 14244 ;; Hardware stack levels required when called:    3
 14245 ;; This function calls:
 14246 ;;		___fladd
 14247 ;; This function is called by:
 14248 ;;		_startUp
 14249 ;;		_measureVoltages
 14250 ;; This function uses a non-reentrant model
 14251 ;;
 14252                           
 14253                           
 14254                           ;psect for function _sumVoltages
 14255  28F0                     _sumVoltages:	
 14256                           
 14257                           ;incstack = 0
 14258                           ; Regs used in _sumVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14259                           ;sumVoltages@voltages stored from wreg
 14260  28F0  0021               	movlb	1	; select bank1
 14261  28F1  00C7               	movwf	sumVoltages@voltages^(0+128)
 14262                           
 14263                           ;ltc6804.c: 77: float totalVoltage = 0;
 14264  28F2  3000               	movlw	0
 14265  28F3  00CB               	movwf	(sumVoltages@totalVoltage+3)^(0+128)
 14266  28F4  3000               	movlw	0
 14267  28F5  00CA               	movwf	(sumVoltages@totalVoltage+2)^(0+128)
 14268  28F6  3000               	movlw	0
 14269  28F7  00C9               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 14270  28F8  3000               	movlw	0
 14271  28F9  00C8               	movwf	sumVoltages@totalVoltage^(0+128)
 14272                           
 14273                           ;ltc6804.c: 79: for(int i = 0; i < numVoltages; i++){
 14274  28FA  01CC               	clrf	sumVoltages@i^(0+128)
 14275  28FB  01CD               	clrf	(sumVoltages@i+1)^(0+128)
 14276  28FC                     l5182:	
 14277  28FC  084D               	movf	(sumVoltages@i+1)^(0+128),w
 14278  28FD  3A80               	xorlw	128
 14279  28FE  00C5               	movwf	??_sumVoltages^(0+128)
 14280  28FF  0842               	movf	(sumVoltages@numVoltages+1)^(0+128),w
 14281  2900  3A80               	xorlw	128
 14282  2901  0245               	subwf	??_sumVoltages^(0+128),w
 14283  2902  1D03               	skipz
 14284  2903  2906               	goto	u6355
 14285  2904  0841               	movf	sumVoltages@numVoltages^(0+128),w
 14286  2905  024C               	subwf	sumVoltages@i^(0+128),w
 14287  2906                     u6355:	
 14288  2906  1803               	btfsc	3,0
 14289  2907  2938               	goto	l5184
 14290                           
 14291                           ;ltc6804.c: 80: totalVoltage += voltages[i];
 14292  2908  0021               	movlb	1	; select bank1
 14293  2909  084C               	movf	sumVoltages@i^(0+128),w
 14294  290A  00C5               	movwf	??_sumVoltages^(0+128)
 14295  290B  3001               	movlw	1
 14296  290C                     u6345:	
 14297  290C  35C5               	lslf	??_sumVoltages^(0+128),f
 14298  290D  3EFF               	addlw	-1
 14299  290E  1D03               	skipz
 14300  290F  290C               	goto	u6345
 14301  2910  3545               	lslf	??_sumVoltages^(0+128),w
 14302  2911  0747               	addwf	sumVoltages@voltages^(0+128),w
 14303  2912  00C6               	movwf	(??_sumVoltages+1)^(0+128)
 14304  2913  0846               	movf	(??_sumVoltages+1)^(0+128),w
 14305  2914  0086               	movwf	6
 14306  2915  3002               	movlw	2	; select bank4/5
 14307  2916  0087               	movwf	7
 14308  2917  3F40               	moviw [0]fsr1
 14309  2918  00A9               	movwf	___fladd@b^(0+128)
 14310  2919  3F41               	moviw [1]fsr1
 14311  291A  00AA               	movwf	(___fladd@b+1)^(0+128)
 14312  291B  3F42               	moviw [2]fsr1
 14313  291C  00AB               	movwf	(___fladd@b+2)^(0+128)
 14314  291D  3F43               	moviw [3]fsr1
 14315  291E  00AC               	movwf	(___fladd@b+3)^(0+128)
 14316  291F  084B               	movf	(sumVoltages@totalVoltage+3)^(0+128),w
 14317  2920  00B0               	movwf	(___fladd@a+3)^(0+128)
 14318  2921  084A               	movf	(sumVoltages@totalVoltage+2)^(0+128),w
 14319  2922  00AF               	movwf	(___fladd@a+2)^(0+128)
 14320  2923  0849               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 14321  2924  00AE               	movwf	(___fladd@a+1)^(0+128)
 14322  2925  0848               	movf	sumVoltages@totalVoltage^(0+128),w
 14323  2926  00AD               	movwf	___fladd@a^(0+128)
 14324  2927  3193  2374  31A8   	fcall	___fladd
 14325  292A  0021               	movlb	1	; select bank1
 14326  292B  082C               	movf	(?___fladd+3)^(0+128),w
 14327  292C  00CB               	movwf	(sumVoltages@totalVoltage+3)^(0+128)
 14328  292D  082B               	movf	(?___fladd+2)^(0+128),w
 14329  292E  00CA               	movwf	(sumVoltages@totalVoltage+2)^(0+128)
 14330  292F  082A               	movf	(?___fladd+1)^(0+128),w
 14331  2930  00C9               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 14332  2931  0829               	movf	?___fladd^(0+128),w
 14333  2932  00C8               	movwf	sumVoltages@totalVoltage^(0+128)
 14334  2933  3001               	movlw	1
 14335  2934  07CC               	addwf	sumVoltages@i^(0+128),f
 14336  2935  3000               	movlw	0
 14337  2936  3DCD               	addwfc	(sumVoltages@i+1)^(0+128),f
 14338  2937  28FC               	goto	l5182
 14339  2938                     l5184:	
 14340                           
 14341                           ;ltc6804.c: 81: }
 14342                           ;ltc6804.c: 84: return (totalVoltage);
 14343  2938  0021               	movlb	1	; select bank1
 14344  2939  084B               	movf	(sumVoltages@totalVoltage+3)^(0+128),w
 14345  293A  00C4               	movwf	(?_sumVoltages+3)^(0+128)
 14346  293B  084A               	movf	(sumVoltages@totalVoltage+2)^(0+128),w
 14347  293C  00C3               	movwf	(?_sumVoltages+2)^(0+128)
 14348  293D  0849               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 14349  293E  00C2               	movwf	(?_sumVoltages+1)^(0+128)
 14350  293F  0848               	movf	sumVoltages@totalVoltage^(0+128),w
 14351  2940  00C1               	movwf	?_sumVoltages^(0+128)
 14352  2941  0008               	return
 14353  2942                     __end_of_sumVoltages:	
 14354                           
 14355                           	psect	text23
 14356  2673                     __ptext23:	
 14357 ;; *************** function _LTC6804_rdcv *****************
 14358 ;; Defined at:
 14359 ;;		line 492 in file "ltc6804.c"
 14360 ;; Parameters:    Size  Location     Type
 14361 ;;  reg             1    wreg     unsigned char 
 14362 ;;  total_ic        1   30[BANK0 ] unsigned char 
 14363 ;;  cell_codes      1   31[BANK0 ] PTR unsigned int [12]
 14364 ;;		 -> measureVoltages@ltcData(24), 
 14365 ;; Auto vars:     Size  Location     Type
 14366 ;;  reg             1   52[BANK0 ] unsigned char 
 14367 ;;  current_cell    1   54[BANK0 ] unsigned char 
 14368 ;;  current_cell    1   56[BANK0 ] unsigned char 
 14369 ;;  current_ic      1   53[BANK0 ] unsigned char 
 14370 ;;  current_ic      1   55[BANK0 ] unsigned char 
 14371 ;;  cell_reg        1   57[BANK0 ] unsigned char 
 14372 ;;  cell_data       8   37[BANK0 ] unsigned char [8]
 14373 ;;  data_pec        2   50[BANK0 ] int 
 14374 ;;  received_pec    2   48[BANK0 ] int 
 14375 ;;  parsed_cell     2   46[BANK0 ] int 
 14376 ;;  data_counter    1   58[BANK0 ] unsigned char 
 14377 ;;  pec_error       1   45[BANK0 ] unsigned char 
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  1    wreg      unsigned char 
 14380 ;; Registers used:
 14381 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14387 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14388 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14389 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14390 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14391 ;;Total ram usage:       29 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    5
 14394 ;; This function calls:
 14395 ;;		_LTC6804_rdcv_reg
 14396 ;;		___bmul
 14397 ;;		___wmul
 14398 ;;		_pec15_calc
 14399 ;; This function is called by:
 14400 ;;		_measureVoltages
 14401 ;; This function uses a non-reentrant model
 14402 ;;
 14403                           
 14404                           
 14405                           ;psect for function _LTC6804_rdcv
 14406  2673                     _LTC6804_rdcv:	
 14407                           
 14408                           ;incstack = 0
 14409                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14410                           ;LTC6804_rdcv@reg stored from wreg
 14411  2673  0020               	movlb	0	; select bank0
 14412  2674  00D4               	movwf	LTC6804_rdcv@reg
 14413                           
 14414                           ;ltc6804.c: 498: const char NUM_RX_BYT = 8;
 14415                           ;ltc6804.c: 499: const char BYT_IN_REG = 6;
 14416                           ;ltc6804.c: 500: const char CELL_IN_REG = 3;
 14417                           ;ltc6804.c: 502: char cell_data[8];
 14418                           ;ltc6804.c: 503: char pec_error = 0;
 14419  2675  01CD               	clrf	LTC6804_rdcv@pec_error
 14420                           
 14421                           ;ltc6804.c: 504: int parsed_cell;
 14422                           ;ltc6804.c: 505: int received_pec;
 14423                           ;ltc6804.c: 506: int data_pec;
 14424                           ;ltc6804.c: 507: char data_counter=0;
 14425  2676  01DA               	clrf	LTC6804_rdcv@data_counter
 14426                           
 14427                           ;ltc6804.c: 510: if (reg == 0)
 14428  2677  0854               	movf	LTC6804_rdcv@reg,w
 14429  2678  1D03               	btfss	3,2
 14430  2679  2F42               	goto	l7702
 14431                           
 14432                           ;ltc6804.c: 511: {
 14433                           ;ltc6804.c: 513: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 14434  267A  01D9               	clrf	LTC6804_rdcv@cell_reg
 14435  267B  0AD9               	incf	LTC6804_rdcv@cell_reg,f
 14436  267C                     L13:	
 14437  267C  3005               	movlw	5
 14438  267D  0259               	subwf	LTC6804_rdcv@cell_reg,w
 14439  267E  1803               	btfsc	3,0
 14440  267F  2FFE               	goto	l7734
 14441                           
 14442                           ;ltc6804.c: 514: {
 14443                           ;ltc6804.c: 515: data_counter = 0;
 14444  2680  01DA               	clrf	LTC6804_rdcv@data_counter
 14445                           
 14446                           ;ltc6804.c: 516: LTC6804_rdcv_reg(cell_reg, total_ic, cell_data);
 14447  2681  083E               	movf	LTC6804_rdcv@total_ic,w
 14448  2682  00C0               	movwf	??_LTC6804_rdcv
 14449  2683  0840               	movf	??_LTC6804_rdcv,w
 14450  2684  00B1               	movwf	LTC6804_rdcv_reg@total_ic
 14451  2685  3045               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14452  2686  00C1               	movwf	??_LTC6804_rdcv+1
 14453  2687  0841               	movf	??_LTC6804_rdcv+1,w
 14454  2688  00B2               	movwf	LTC6804_rdcv_reg@data
 14455  2689  0859               	movf	LTC6804_rdcv@cell_reg,w
 14456  268A  318A  22E9  31A6   	fcall	_LTC6804_rdcv_reg
 14457                           
 14458                           ;ltc6804.c: 518: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14459  268D  0020               	movlb	0	; select bank0
 14460  268E  01D5               	clrf	LTC6804_rdcv@current_ic
 14461  268F                     l648:	
 14462  268F  083E               	movf	LTC6804_rdcv@total_ic,w
 14463  2690  0255               	subwf	LTC6804_rdcv@current_ic,w
 14464  2691  1803               	btfsc	3,0
 14465  2692  2F3D               	goto	l7698
 14466                           
 14467                           ;ltc6804.c: 519: {
 14468                           ;ltc6804.c: 522: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 14469  2693  01D6               	clrf	LTC6804_rdcv@current_cell
 14470  2694  3092               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14471  2695  0084               	movwf	4
 14472  2696  30B9               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14473  2697  0085               	movwf	5
 14474  2698  0800               	movf	0,w	;code access
 14475  2699  0256               	subwf	LTC6804_rdcv@current_cell,w
 14476  269A  1803               	btfsc	3,0
 14477  269B  2EF1               	goto	l7686
 14478  269C                     l7676:	
 14479                           
 14480                           ;ltc6804.c: 523: {
 14481                           ;ltc6804.c: 525: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 14482  269C  085A               	movf	LTC6804_rdcv@data_counter,w
 14483  269D  3E01               	addlw	1
 14484  269E  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14485  269F  0086               	movwf	6
 14486  26A0  0187               	clrf	7
 14487  26A1  0801               	movf	1,w
 14488  26A2  00C0               	movwf	??_LTC6804_rdcv
 14489  26A3  01C1               	clrf	??_LTC6804_rdcv+1
 14490  26A4  0840               	movf	??_LTC6804_rdcv,w
 14491  26A5  00C1               	movwf	??_LTC6804_rdcv+1
 14492  26A6  01C0               	clrf	??_LTC6804_rdcv
 14493  26A7  085A               	movf	LTC6804_rdcv@data_counter,w
 14494  26A8  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14495  26A9  0086               	movwf	6
 14496  26AA  0187               	clrf	7
 14497  26AB  0801               	movf	1,w
 14498  26AC  0740               	addwf	??_LTC6804_rdcv,w
 14499  26AD  00CE               	movwf	LTC6804_rdcv@parsed_cell
 14500  26AE  0841               	movf	??_LTC6804_rdcv+1,w
 14501  26AF  1803               	skipnc
 14502  26B0  0A41               	incf	??_LTC6804_rdcv+1,w
 14503  26B1  00CF               	movwf	LTC6804_rdcv@parsed_cell+1
 14504                           
 14505                           ;ltc6804.c: 528: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 14506  26B2  3018               	movlw	24
 14507  26B3  00C0               	movwf	??_LTC6804_rdcv
 14508  26B4  0840               	movf	??_LTC6804_rdcv,w
 14509  26B5  00F3               	movwf	___bmul@multiplicand
 14510  26B6  0855               	movf	LTC6804_rdcv@current_ic,w
 14511  26B7  31B6  264B  31A6   	fcall	___bmul
 14512  26BA  0020               	movlb	0	; select bank0
 14513  26BB  073F               	addwf	LTC6804_rdcv@cell_codes,w
 14514  26BC  00C1               	movwf	??_LTC6804_rdcv+1
 14515  26BD  0859               	movf	LTC6804_rdcv@cell_reg,w
 14516  26BE  3EFF               	addlw	255
 14517  26BF  00F3               	movwf	___wmul@multiplier
 14518  26C0  30FF               	movlw	255
 14519  26C1  1803               	skipnc
 14520  26C2  3000               	movlw	0
 14521  26C3  00F4               	movwf	___wmul@multiplier+1
 14522  26C4  3092               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14523  26C5  0084               	movwf	4
 14524  26C6  30B9               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14525  26C7  0085               	movwf	5
 14526  26C8  0800               	movf	0,w	;code access
 14527  26C9  00C2               	movwf	??_LTC6804_rdcv+2
 14528  26CA  01C3               	clrf	??_LTC6804_rdcv+3
 14529  26CB  0842               	movf	??_LTC6804_rdcv+2,w
 14530  26CC  00F5               	movwf	___wmul@multiplicand
 14531  26CD  0843               	movf	??_LTC6804_rdcv+3,w
 14532  26CE  00F6               	movwf	___wmul@multiplicand+1
 14533  26CF  31B6  26DC  31A6   	fcall	___wmul
 14534  26D2  0873               	movf	?___wmul,w
 14535  26D3  0020               	movlb	0	; select bank0
 14536  26D4  0756               	addwf	LTC6804_rdcv@current_cell,w
 14537  26D5  0709               	addwf	9,w
 14538  26D6  0741               	addwf	??_LTC6804_rdcv+1,w
 14539  26D7  00C4               	movwf	??_LTC6804_rdcv+4
 14540  26D8  0844               	movf	??_LTC6804_rdcv+4,w
 14541  26D9  0086               	movwf	6
 14542  26DA  3001               	movlw	1	; select bank2/3
 14543  26DB  0087               	movwf	7
 14544  26DC  084E               	movf	LTC6804_rdcv@parsed_cell,w
 14545  26DD  3FC0               	movwi [0]fsr1
 14546  26DE  084F               	movf	LTC6804_rdcv@parsed_cell+1,w
 14547  26DF  3FC1               	movwi [1]fsr1
 14548                           
 14549                           ;ltc6804.c: 529: data_counter = data_counter + 2;
 14550  26E0  085A               	movf	LTC6804_rdcv@data_counter,w
 14551  26E1  3E02               	addlw	2
 14552  26E2  00C0               	movwf	??_LTC6804_rdcv
 14553  26E3  0840               	movf	??_LTC6804_rdcv,w
 14554  26E4  00DA               	movwf	LTC6804_rdcv@data_counter
 14555  26E5  3001               	movlw	1
 14556  26E6  00C0               	movwf	??_LTC6804_rdcv
 14557  26E7  0840               	movf	??_LTC6804_rdcv,w
 14558  26E8  07D6               	addwf	LTC6804_rdcv@current_cell,f
 14559  26E9  3092               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14560  26EA  0084               	movwf	4
 14561  26EB  30B9               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14562  26EC  0085               	movwf	5
 14563  26ED  0800               	movf	0,w	;code access
 14564  26EE  0256               	subwf	LTC6804_rdcv@current_cell,w
 14565  26EF  1C03               	skipc
 14566  26F0  2E9C               	goto	l7676
 14567  26F1                     l7686:	
 14568                           
 14569                           ;ltc6804.c: 531: }
 14570                           ;ltc6804.c: 533: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 14571  26F1  085A               	movf	LTC6804_rdcv@data_counter,w
 14572  26F2  3E01               	addlw	1
 14573  26F3  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14574  26F4  0086               	movwf	6
 14575  26F5  0187               	clrf	7
 14576  26F6  0801               	movf	1,w
 14577  26F7  00C0               	movwf	??_LTC6804_rdcv
 14578  26F8  01C1               	clrf	??_LTC6804_rdcv+1
 14579  26F9  085A               	movf	LTC6804_rdcv@data_counter,w
 14580  26FA  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14581  26FB  0086               	movwf	6
 14582  26FC  0187               	clrf	7
 14583  26FD  0801               	movf	1,w
 14584  26FE  00C2               	movwf	??_LTC6804_rdcv+2
 14585  26FF  01C3               	clrf	??_LTC6804_rdcv+3
 14586  2700  0842               	movf	??_LTC6804_rdcv+2,w
 14587  2701  00C3               	movwf	??_LTC6804_rdcv+3
 14588  2702  01C2               	clrf	??_LTC6804_rdcv+2
 14589  2703  0840               	movf	??_LTC6804_rdcv,w
 14590  2704  0742               	addwf	??_LTC6804_rdcv+2,w
 14591  2705  00D0               	movwf	LTC6804_rdcv@received_pec
 14592  2706  0841               	movf	??_LTC6804_rdcv+1,w
 14593  2707  3D43               	addwfc	??_LTC6804_rdcv+3,w
 14594  2708  00D1               	movwf	LTC6804_rdcv@received_pec+1
 14595                           
 14596                           ;ltc6804.c: 535: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14597  2709  3094               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14598  270A  0084               	movwf	4
 14599  270B  30B9               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14600  270C  0085               	movwf	5
 14601  270D  0800               	movf	0,w	;code access
 14602  270E  00C0               	movwf	??_LTC6804_rdcv
 14603  270F  0840               	movf	??_LTC6804_rdcv,w
 14604  2710  00F3               	movwf	___bmul@multiplicand
 14605  2711  0855               	movf	LTC6804_rdcv@current_ic,w
 14606  2712  31B6  264B  31A6   	fcall	___bmul
 14607  2715  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14608  2716  0020               	movlb	0	; select bank0
 14609  2717  00A0               	movwf	pec15_calc@data
 14610  2718  3000               	movlw	0
 14611  2719  00A1               	movwf	pec15_calc@data+1
 14612  271A  3093               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14613  271B  0084               	movwf	4
 14614  271C  30B9               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14615  271D  0085               	movwf	5
 14616  271E  0800               	movf	0,w	;code access
 14617  271F  319C  2402  31A6   	fcall	_pec15_calc
 14618  2722  0020               	movlb	0	; select bank0
 14619  2723  0821               	movf	?_pec15_calc+1,w
 14620  2724  00D3               	movwf	LTC6804_rdcv@data_pec+1
 14621  2725  0820               	movf	?_pec15_calc,w
 14622  2726  00D2               	movwf	LTC6804_rdcv@data_pec
 14623                           
 14624                           ;ltc6804.c: 536: if(received_pec != data_pec)
 14625  2727  0853               	movf	LTC6804_rdcv@data_pec+1,w
 14626  2728  0651               	xorwf	LTC6804_rdcv@received_pec+1,w
 14627  2729  1D03               	skipz
 14628  272A  2F2D               	goto	u10015
 14629  272B  0852               	movf	LTC6804_rdcv@data_pec,w
 14630  272C  0650               	xorwf	LTC6804_rdcv@received_pec,w
 14631  272D                     u10015:	
 14632  272D  1903               	skipnz
 14633  272E  2F33               	goto	l7694
 14634                           
 14635                           ;ltc6804.c: 537: {
 14636                           ;ltc6804.c: 538: pec_error = -1;
 14637  272F  30FF               	movlw	255
 14638  2730  00C0               	movwf	??_LTC6804_rdcv
 14639  2731  0840               	movf	??_LTC6804_rdcv,w
 14640  2732  00CD               	movwf	LTC6804_rdcv@pec_error
 14641  2733                     l7694:	
 14642                           
 14643                           ;ltc6804.c: 540: }
 14644                           ;ltc6804.c: 541: data_counter=data_counter+2;
 14645  2733  085A               	movf	LTC6804_rdcv@data_counter,w
 14646  2734  3E02               	addlw	2
 14647  2735  00C0               	movwf	??_LTC6804_rdcv
 14648  2736  0840               	movf	??_LTC6804_rdcv,w
 14649  2737  00DA               	movwf	LTC6804_rdcv@data_counter
 14650  2738  3001               	movlw	1
 14651  2739  00C0               	movwf	??_LTC6804_rdcv
 14652  273A  0840               	movf	??_LTC6804_rdcv,w
 14653  273B  07D5               	addwf	LTC6804_rdcv@current_ic,f
 14654  273C  2E8F               	goto	l648
 14655  273D                     l7698:	
 14656  273D  3001               	movlw	1
 14657  273E  00C0               	movwf	??_LTC6804_rdcv
 14658  273F  0840               	movf	??_LTC6804_rdcv,w
 14659  2740  07D9               	addwf	LTC6804_rdcv@cell_reg,f
 14660  2741  2E7C               	goto	L13
 14661  2742                     l7702:	
 14662                           ;ltc6804.c: 543: }
 14663                           ;ltc6804.c: 544: }
 14664                           ;ltc6804.c: 545: }
 14665                           
 14666                           
 14667                           ;ltc6804.c: 547: else
 14668                           ;ltc6804.c: 548: {
 14669                           ;ltc6804.c: 550: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 14670  2742  083E               	movf	LTC6804_rdcv@total_ic,w
 14671  2743  00C0               	movwf	??_LTC6804_rdcv
 14672  2744  0840               	movf	??_LTC6804_rdcv,w
 14673  2745  00B1               	movwf	LTC6804_rdcv_reg@total_ic
 14674  2746  3045               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14675  2747  00C1               	movwf	??_LTC6804_rdcv+1
 14676  2748  0841               	movf	??_LTC6804_rdcv+1,w
 14677  2749  00B2               	movwf	LTC6804_rdcv_reg@data
 14678  274A  0854               	movf	LTC6804_rdcv@reg,w
 14679  274B  318A  22E9  31A6   	fcall	_LTC6804_rdcv_reg
 14680                           
 14681                           ;ltc6804.c: 551: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14682  274E  0020               	movlb	0	; select bank0
 14683  274F  01D7               	clrf	LTC6804_rdcv@current_ic_1379
 14684  2750                     l655:	
 14685  2750  083E               	movf	LTC6804_rdcv@total_ic,w
 14686  2751  0257               	subwf	LTC6804_rdcv@current_ic_1379,w
 14687  2752  1803               	btfsc	3,0
 14688  2753  2FFE               	goto	l7734
 14689                           
 14690                           ;ltc6804.c: 552: {
 14691                           ;ltc6804.c: 554: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 14692  2754  01D8               	clrf	LTC6804_rdcv@current_cell_1380
 14693  2755  3092               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14694  2756  0084               	movwf	4
 14695  2757  30B9               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14696  2758  0085               	movwf	5
 14697  2759  0800               	movf	0,w	;code access
 14698  275A  0258               	subwf	LTC6804_rdcv@current_cell_1380,w
 14699  275B  1803               	btfsc	3,0
 14700  275C  2FB2               	goto	l7722
 14701  275D                     l7712:	
 14702                           
 14703                           ;ltc6804.c: 555: {
 14704                           ;ltc6804.c: 557: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 14705  275D  085A               	movf	LTC6804_rdcv@data_counter,w
 14706  275E  3E01               	addlw	1
 14707  275F  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14708  2760  0086               	movwf	6
 14709  2761  0187               	clrf	7
 14710  2762  0801               	movf	1,w
 14711  2763  00C0               	movwf	??_LTC6804_rdcv
 14712  2764  01C1               	clrf	??_LTC6804_rdcv+1
 14713  2765  0840               	movf	??_LTC6804_rdcv,w
 14714  2766  00C1               	movwf	??_LTC6804_rdcv+1
 14715  2767  01C0               	clrf	??_LTC6804_rdcv
 14716  2768  085A               	movf	LTC6804_rdcv@data_counter,w
 14717  2769  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14718  276A  0086               	movwf	6
 14719  276B  0187               	clrf	7
 14720  276C  0801               	movf	1,w
 14721  276D  0740               	addwf	??_LTC6804_rdcv,w
 14722  276E  00CE               	movwf	LTC6804_rdcv@parsed_cell
 14723  276F  0841               	movf	??_LTC6804_rdcv+1,w
 14724  2770  1803               	skipnc
 14725  2771  0A41               	incf	??_LTC6804_rdcv+1,w
 14726  2772  00CF               	movwf	LTC6804_rdcv@parsed_cell+1
 14727                           
 14728                           ;ltc6804.c: 560: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 14729  2773  3018               	movlw	24
 14730  2774  00C0               	movwf	??_LTC6804_rdcv
 14731  2775  0840               	movf	??_LTC6804_rdcv,w
 14732  2776  00F3               	movwf	___bmul@multiplicand
 14733  2777  0857               	movf	LTC6804_rdcv@current_ic_1379,w
 14734  2778  31B6  264B  31A6   	fcall	___bmul
 14735  277B  0020               	movlb	0	; select bank0
 14736  277C  073F               	addwf	LTC6804_rdcv@cell_codes,w
 14737  277D  00C1               	movwf	??_LTC6804_rdcv+1
 14738  277E  0854               	movf	LTC6804_rdcv@reg,w
 14739  277F  3EFF               	addlw	255
 14740  2780  00F3               	movwf	___wmul@multiplier
 14741  2781  30FF               	movlw	255
 14742  2782  1803               	skipnc
 14743  2783  3000               	movlw	0
 14744  2784  00F4               	movwf	___wmul@multiplier+1
 14745  2785  3092               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14746  2786  0084               	movwf	4
 14747  2787  30B9               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14748  2788  0085               	movwf	5
 14749  2789  0800               	movf	0,w	;code access
 14750  278A  00C2               	movwf	??_LTC6804_rdcv+2
 14751  278B  01C3               	clrf	??_LTC6804_rdcv+3
 14752  278C  0842               	movf	??_LTC6804_rdcv+2,w
 14753  278D  00F5               	movwf	___wmul@multiplicand
 14754  278E  0843               	movf	??_LTC6804_rdcv+3,w
 14755  278F  00F6               	movwf	___wmul@multiplicand+1
 14756  2790  31B6  26DC  31A6   	fcall	___wmul
 14757  2793  0873               	movf	?___wmul,w
 14758  2794  0020               	movlb	0	; select bank0
 14759  2795  0758               	addwf	LTC6804_rdcv@current_cell_1380,w
 14760  2796  0709               	addwf	9,w
 14761  2797  0741               	addwf	??_LTC6804_rdcv+1,w
 14762  2798  00C4               	movwf	??_LTC6804_rdcv+4
 14763  2799  0844               	movf	??_LTC6804_rdcv+4,w
 14764  279A  0086               	movwf	6
 14765  279B  3001               	movlw	1	; select bank2/3
 14766  279C  0087               	movwf	7
 14767  279D  084E               	movf	LTC6804_rdcv@parsed_cell,w
 14768  279E  3FC0               	movwi [0]fsr1
 14769  279F  084F               	movf	LTC6804_rdcv@parsed_cell+1,w
 14770  27A0  3FC1               	movwi [1]fsr1
 14771                           
 14772                           ;ltc6804.c: 561: data_counter= data_counter + 2;
 14773  27A1  085A               	movf	LTC6804_rdcv@data_counter,w
 14774  27A2  3E02               	addlw	2
 14775  27A3  00C0               	movwf	??_LTC6804_rdcv
 14776  27A4  0840               	movf	??_LTC6804_rdcv,w
 14777  27A5  00DA               	movwf	LTC6804_rdcv@data_counter
 14778  27A6  3001               	movlw	1
 14779  27A7  00C0               	movwf	??_LTC6804_rdcv
 14780  27A8  0840               	movf	??_LTC6804_rdcv,w
 14781  27A9  07D8               	addwf	LTC6804_rdcv@current_cell_1380,f
 14782  27AA  3092               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14783  27AB  0084               	movwf	4
 14784  27AC  30B9               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14785  27AD  0085               	movwf	5
 14786  27AE  0800               	movf	0,w	;code access
 14787  27AF  0258               	subwf	LTC6804_rdcv@current_cell_1380,w
 14788  27B0  1C03               	skipc
 14789  27B1  2F5D               	goto	l7712
 14790  27B2                     l7722:	
 14791                           
 14792                           ;ltc6804.c: 563: }
 14793                           ;ltc6804.c: 565: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 14794  27B2  085A               	movf	LTC6804_rdcv@data_counter,w
 14795  27B3  3E01               	addlw	1
 14796  27B4  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14797  27B5  0086               	movwf	6
 14798  27B6  0187               	clrf	7
 14799  27B7  0801               	movf	1,w
 14800  27B8  00C0               	movwf	??_LTC6804_rdcv
 14801  27B9  01C1               	clrf	??_LTC6804_rdcv+1
 14802  27BA  085A               	movf	LTC6804_rdcv@data_counter,w
 14803  27BB  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14804  27BC  0086               	movwf	6
 14805  27BD  0187               	clrf	7
 14806  27BE  0801               	movf	1,w
 14807  27BF  00C2               	movwf	??_LTC6804_rdcv+2
 14808  27C0  01C3               	clrf	??_LTC6804_rdcv+3
 14809  27C1  0842               	movf	??_LTC6804_rdcv+2,w
 14810  27C2  00C3               	movwf	??_LTC6804_rdcv+3
 14811  27C3  01C2               	clrf	??_LTC6804_rdcv+2
 14812  27C4  0840               	movf	??_LTC6804_rdcv,w
 14813  27C5  0742               	addwf	??_LTC6804_rdcv+2,w
 14814  27C6  00D0               	movwf	LTC6804_rdcv@received_pec
 14815  27C7  0841               	movf	??_LTC6804_rdcv+1,w
 14816  27C8  3D43               	addwfc	??_LTC6804_rdcv+3,w
 14817  27C9  00D1               	movwf	LTC6804_rdcv@received_pec+1
 14818                           
 14819                           ;ltc6804.c: 567: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14820  27CA  3094               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14821  27CB  0084               	movwf	4
 14822  27CC  30B9               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14823  27CD  0085               	movwf	5
 14824  27CE  0800               	movf	0,w	;code access
 14825  27CF  00C0               	movwf	??_LTC6804_rdcv
 14826  27D0  0840               	movf	??_LTC6804_rdcv,w
 14827  27D1  00F3               	movwf	___bmul@multiplicand
 14828  27D2  0857               	movf	LTC6804_rdcv@current_ic_1379,w
 14829  27D3  31B6  264B  31A6   	fcall	___bmul
 14830  27D6  3E45               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14831  27D7  0020               	movlb	0	; select bank0
 14832  27D8  00A0               	movwf	pec15_calc@data
 14833  27D9  3000               	movlw	0
 14834  27DA  00A1               	movwf	pec15_calc@data+1
 14835  27DB  3093               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14836  27DC  0084               	movwf	4
 14837  27DD  30B9               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14838  27DE  0085               	movwf	5
 14839  27DF  0800               	movf	0,w	;code access
 14840  27E0  319C  2402  31A6   	fcall	_pec15_calc
 14841  27E3  0020               	movlb	0	; select bank0
 14842  27E4  0821               	movf	?_pec15_calc+1,w
 14843  27E5  00D3               	movwf	LTC6804_rdcv@data_pec+1
 14844  27E6  0820               	movf	?_pec15_calc,w
 14845  27E7  00D2               	movwf	LTC6804_rdcv@data_pec
 14846                           
 14847                           ;ltc6804.c: 568: if(received_pec != data_pec)
 14848  27E8  0853               	movf	LTC6804_rdcv@data_pec+1,w
 14849  27E9  0651               	xorwf	LTC6804_rdcv@received_pec+1,w
 14850  27EA  1D03               	skipz
 14851  27EB  2FEE               	goto	u10065
 14852  27EC  0852               	movf	LTC6804_rdcv@data_pec,w
 14853  27ED  0650               	xorwf	LTC6804_rdcv@received_pec,w
 14854  27EE                     u10065:	
 14855  27EE  1903               	skipnz
 14856  27EF  2FF4               	goto	l7730
 14857                           
 14858                           ;ltc6804.c: 569: {
 14859                           ;ltc6804.c: 570: pec_error = -1;
 14860  27F0  30FF               	movlw	255
 14861  27F1  00C0               	movwf	??_LTC6804_rdcv
 14862  27F2  0840               	movf	??_LTC6804_rdcv,w
 14863  27F3  00CD               	movwf	LTC6804_rdcv@pec_error
 14864  27F4                     l7730:	
 14865                           
 14866                           ;ltc6804.c: 572: }
 14867                           ;ltc6804.c: 573: data_counter= data_counter + 2;
 14868  27F4  085A               	movf	LTC6804_rdcv@data_counter,w
 14869  27F5  3E02               	addlw	2
 14870  27F6  00C0               	movwf	??_LTC6804_rdcv
 14871  27F7  0840               	movf	??_LTC6804_rdcv,w
 14872  27F8  00DA               	movwf	LTC6804_rdcv@data_counter
 14873  27F9  3001               	movlw	1
 14874  27FA  00C0               	movwf	??_LTC6804_rdcv
 14875  27FB  0840               	movf	??_LTC6804_rdcv,w
 14876  27FC  07D7               	addwf	LTC6804_rdcv@current_ic_1379,f
 14877  27FD  2F50               	goto	l655
 14878  27FE                     l7734:	
 14879                           
 14880                           ;ltc6804.c: 575: }
 14881                           ;ltc6804.c: 576: }
 14882                           ;ltc6804.c: 580: return(pec_error);
 14883  27FE  084D               	movf	LTC6804_rdcv@pec_error,w
 14884  27FF  0008               	return
 14885  2800                     __end_of_LTC6804_rdcv:	
 14886                           
 14887                           	psect	text24
 14888  36DC                     __ptext24:	
 14889 ;; *************** function ___wmul *****************
 14890 ;; Defined at:
 14891 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14892 ;; Parameters:    Size  Location     Type
 14893 ;;  multiplier      2    3[COMMON] unsigned int 
 14894 ;;  multiplicand    2    5[COMMON] unsigned int 
 14895 ;; Auto vars:     Size  Location     Type
 14896 ;;  product         2    0[BANK0 ] unsigned int 
 14897 ;; Return value:  Size  Location     Type
 14898 ;;                  2    3[COMMON] unsigned int 
 14899 ;; Registers used:
 14900 ;;		wreg, status,2, status,0
 14901 ;; Tracked objects:
 14902 ;;		On entry : 0/0
 14903 ;;		On exit  : 0/0
 14904 ;;		Unchanged: 0/0
 14905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14907 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14909 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14910 ;;Total ram usage:        6 bytes
 14911 ;; Hardware stack levels used:    1
 14912 ;; Hardware stack levels required when called:    2
 14913 ;; This function calls:
 14914 ;;		Nothing
 14915 ;; This function is called by:
 14916 ;;		_LTC6804_rdcv
 14917 ;;		_sprintf
 14918 ;;		_LTC6804_rdaux
 14919 ;; This function uses a non-reentrant model
 14920 ;;
 14921                           
 14922                           
 14923                           ;psect for function ___wmul
 14924  36DC                     ___wmul:	
 14925                           
 14926                           ;incstack = 0
 14927                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14928  36DC  0020               	movlb	0	; select bank0
 14929  36DD  01A0               	clrf	___wmul@product
 14930  36DE  01A1               	clrf	___wmul@product+1
 14931  36DF                     l7130:	
 14932  36DF  1C73               	btfss	___wmul@multiplier,0
 14933  36E0  2EE6               	goto	l1017
 14934  36E1  0875               	movf	___wmul@multiplicand,w
 14935  36E2  0020               	movlb	0	; select bank0
 14936  36E3  07A0               	addwf	___wmul@product,f
 14937  36E4  0876               	movf	___wmul@multiplicand+1,w
 14938  36E5  3DA1               	addwfc	___wmul@product+1,f
 14939  36E6                     l1017:	
 14940  36E6  3001               	movlw	1
 14941  36E7                     u9005:	
 14942  36E7  35F5               	lslf	___wmul@multiplicand,f
 14943  36E8  0DF6               	rlf	___wmul@multiplicand+1,f
 14944  36E9  0B89               	decfsz	9,f
 14945  36EA  2EE7               	goto	u9005
 14946  36EB  3001               	movlw	1
 14947  36EC                     u9015:	
 14948  36EC  36F4               	lsrf	___wmul@multiplier+1,f
 14949  36ED  0CF3               	rrf	___wmul@multiplier,f
 14950  36EE  0B89               	decfsz	9,f
 14951  36EF  2EEC               	goto	u9015
 14952  36F0  0873               	movf	___wmul@multiplier,w
 14953  36F1  0474               	iorwf	___wmul@multiplier+1,w
 14954  36F2  1D03               	btfss	3,2
 14955  36F3  2EDF               	goto	l7130
 14956  36F4  0020               	movlb	0	; select bank0
 14957  36F5  0821               	movf	___wmul@product+1,w
 14958  36F6  00F4               	movwf	?___wmul+1
 14959  36F7  0820               	movf	___wmul@product,w
 14960  36F8  00F3               	movwf	?___wmul
 14961  36F9  0008               	return
 14962  36FA                     __end_of___wmul:	
 14963                           
 14964                           	psect	text25
 14965  0AE9                     __ptext25:	
 14966 ;; *************** function _LTC6804_rdcv_reg *****************
 14967 ;; Defined at:
 14968 ;;		line 627 in file "ltc6804.c"
 14969 ;; Parameters:    Size  Location     Type
 14970 ;;  reg             1    wreg     unsigned char 
 14971 ;;  total_ic        1   17[BANK0 ] unsigned char 
 14972 ;;  data            1   18[BANK0 ] PTR unsigned char 
 14973 ;;		 -> LTC6804_rdcv@cell_data(8), 
 14974 ;; Auto vars:     Size  Location     Type
 14975 ;;  reg             1   29[BANK0 ] unsigned char 
 14976 ;;  cmd             4   25[BANK0 ] unsigned char [4]
 14977 ;;  cmd_pec         2   23[BANK0 ] int 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  1    wreg      void 
 14980 ;; Registers used:
 14981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14987 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14988 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14990 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14991 ;;Total ram usage:       13 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:    4
 14994 ;; This function calls:
 14995 ;;		___bmul
 14996 ;;		_pec15_calc
 14997 ;;		_spi_write_read
 14998 ;;		_wakeup_idle
 14999 ;; This function is called by:
 15000 ;;		_LTC6804_rdcv
 15001 ;; This function uses a non-reentrant model
 15002 ;;
 15003                           
 15004                           
 15005                           ;psect for function _LTC6804_rdcv_reg
 15006  0AE9                     _LTC6804_rdcv_reg:	
 15007                           
 15008                           ;incstack = 0
 15009                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15010                           ;LTC6804_rdcv_reg@reg stored from wreg
 15011  0AE9  0020               	movlb	0	; select bank0
 15012  0AEA  00BD               	movwf	LTC6804_rdcv_reg@reg
 15013                           
 15014                           ;ltc6804.c: 632: const char REG_LEN = 8;
 15015                           ;ltc6804.c: 633: char cmd[4];
 15016                           ;ltc6804.c: 634: int cmd_pec;
 15017                           ;ltc6804.c: 637: if (reg == 1)
 15018  0AEB  033D               	decf	LTC6804_rdcv_reg@reg,w
 15019  0AEC  1D03               	btfss	3,2
 15020  0AED  2AF0               	goto	l6930
 15021                           
 15022                           ;ltc6804.c: 638: {
 15023                           ;ltc6804.c: 639: cmd[1] = 0x04;
 15024  0AEE  3004               	movlw	4
 15025  0AEF  2B01               	goto	L14
 15026  0AF0                     l6930:	
 15027                           ;ltc6804.c: 641: }
 15028                           
 15029                           ;ltc6804.c: 640: cmd[0] = 0x00;
 15030                           
 15031                           
 15032                           ;ltc6804.c: 642: else if(reg == 2)
 15033  0AF0  3002               	movlw	2
 15034  0AF1  063D               	xorwf	LTC6804_rdcv_reg@reg,w
 15035  0AF2  1D03               	btfss	3,2
 15036  0AF3  2AF6               	goto	l6936
 15037                           
 15038                           ;ltc6804.c: 643: {
 15039                           ;ltc6804.c: 644: cmd[1] = 0x06;
 15040  0AF4  3006               	movlw	6
 15041  0AF5  2B01               	goto	L14
 15042  0AF6                     l6936:	
 15043                           ;ltc6804.c: 646: }
 15044                           
 15045                           ;ltc6804.c: 645: cmd[0] = 0x00;
 15046                           
 15047                           
 15048                           ;ltc6804.c: 647: else if(reg == 3)
 15049  0AF6  3003               	movlw	3
 15050  0AF7  063D               	xorwf	LTC6804_rdcv_reg@reg,w
 15051  0AF8  1D03               	btfss	3,2
 15052  0AF9  2AFC               	goto	l6942
 15053                           
 15054                           ;ltc6804.c: 648: {
 15055                           ;ltc6804.c: 649: cmd[1] = 0x08;
 15056  0AFA  3008               	movlw	8
 15057  0AFB  2B01               	goto	L14
 15058  0AFC                     l6942:	
 15059                           ;ltc6804.c: 651: }
 15060                           
 15061                           ;ltc6804.c: 650: cmd[0] = 0x00;
 15062                           
 15063                           
 15064                           ;ltc6804.c: 652: else if(reg == 4)
 15065  0AFC  3004               	movlw	4
 15066  0AFD  063D               	xorwf	LTC6804_rdcv_reg@reg,w
 15067  0AFE  1D03               	btfss	3,2
 15068  0AFF  2B05               	goto	l6948
 15069                           
 15070                           ;ltc6804.c: 653: {
 15071                           ;ltc6804.c: 654: cmd[1] = 0x0A;
 15072  0B00  300A               	movlw	10
 15073  0B01                     L14:	
 15074  0B01  00B3               	movwf	??_LTC6804_rdcv_reg
 15075  0B02  0833               	movf	??_LTC6804_rdcv_reg,w
 15076  0B03  00BA               	movwf	LTC6804_rdcv_reg@cmd+1
 15077                           
 15078                           ;ltc6804.c: 655: cmd[0] = 0x00;
 15079  0B04  01B9               	clrf	LTC6804_rdcv_reg@cmd
 15080  0B05                     l6948:	
 15081                           
 15082                           ;ltc6804.c: 656: }
 15083                           ;ltc6804.c: 659: cmd_pec = pec15_calc(2, cmd);
 15084  0B05  3039               	movlw	low LTC6804_rdcv_reg@cmd
 15085  0B06  00A0               	movwf	pec15_calc@data
 15086  0B07  3000               	movlw	high LTC6804_rdcv_reg@cmd
 15087  0B08  00A1               	movwf	pec15_calc@data+1
 15088  0B09  3002               	movlw	2
 15089  0B0A  319C  2402  318A   	fcall	_pec15_calc
 15090  0B0D  0020               	movlb	0	; select bank0
 15091  0B0E  0821               	movf	?_pec15_calc+1,w
 15092  0B0F  00B8               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 15093  0B10  0820               	movf	?_pec15_calc,w
 15094  0B11  00B7               	movwf	LTC6804_rdcv_reg@cmd_pec
 15095                           
 15096                           ;ltc6804.c: 660: cmd[2] = (char)(cmd_pec >> 8);
 15097  0B12  0838               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 15098  0B13  00B3               	movwf	??_LTC6804_rdcv_reg
 15099  0B14  0833               	movf	??_LTC6804_rdcv_reg,w
 15100  0B15  00BB               	movwf	LTC6804_rdcv_reg@cmd+2
 15101                           
 15102                           ;ltc6804.c: 661: cmd[3] = (char)(cmd_pec);
 15103  0B16  0837               	movf	LTC6804_rdcv_reg@cmd_pec,w
 15104  0B17  00B3               	movwf	??_LTC6804_rdcv_reg
 15105  0B18  0833               	movf	??_LTC6804_rdcv_reg,w
 15106  0B19  00BC               	movwf	LTC6804_rdcv_reg@cmd+3
 15107                           
 15108                           ;ltc6804.c: 664: wakeup_idle ();
 15109  0B1A  31B5  25E3  318A   	fcall	_wakeup_idle
 15110                           
 15111                           ;ltc6804.c: 667: LATDbits.LATD3 = 0;
 15112  0B1D  0022               	movlb	2	; select bank2
 15113  0B1E  118F               	bcf	15,3	;volatile
 15114                           
 15115                           ;ltc6804.c: 668: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 15116  0B1F  3004               	movlw	4
 15117  0B20  0020               	movlb	0	; select bank0
 15118  0B21  00B3               	movwf	??_LTC6804_rdcv_reg
 15119  0B22  0833               	movf	??_LTC6804_rdcv_reg,w
 15120  0B23  00A0               	movwf	spi_write_read@tx_len
 15121  0B24  0832               	movf	LTC6804_rdcv_reg@data,w
 15122  0B25  00B4               	movwf	??_LTC6804_rdcv_reg+1
 15123  0B26  0834               	movf	??_LTC6804_rdcv_reg+1,w
 15124  0B27  00A1               	movwf	spi_write_read@rx_data
 15125  0B28  0831               	movf	LTC6804_rdcv_reg@total_ic,w
 15126  0B29  00B5               	movwf	??_LTC6804_rdcv_reg+2
 15127  0B2A  0835               	movf	??_LTC6804_rdcv_reg+2,w
 15128  0B2B  00F3               	movwf	___bmul@multiplicand
 15129  0B2C  3091               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 15130  0B2D  0084               	movwf	4
 15131  0B2E  30B9               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 15132  0B2F  0085               	movwf	5
 15133  0B30  0800               	movf	0,w	;code access
 15134  0B31  31B6  264B  318A   	fcall	___bmul
 15135  0B34  0020               	movlb	0	; select bank0
 15136  0B35  00B6               	movwf	??_LTC6804_rdcv_reg+3
 15137  0B36  0836               	movf	??_LTC6804_rdcv_reg+3,w
 15138  0B37  00A2               	movwf	spi_write_read@rx_len
 15139  0B38  3039               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 15140  0B39  31B7  2762         	fcall	_spi_write_read
 15141                           
 15142                           ;ltc6804.c: 669: LATDbits.LATD3 = 1;
 15143  0B3B  0022               	movlb	2	; select bank2
 15144  0B3C  158F               	bsf	15,3	;volatile
 15145  0B3D  0008               	return
 15146  0B3E                     __end_of_LTC6804_rdcv_reg:	
 15147                           
 15148                           	psect	text26
 15149  3762                     __ptext26:	
 15150 ;; *************** function _spi_write_read *****************
 15151 ;; Defined at:
 15152 ;;		line 1221 in file "ltc6804.c"
 15153 ;; Parameters:    Size  Location     Type
 15154 ;;  tx_Data         1    wreg     PTR unsigned char 
 15155 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 15156 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 15157 ;;  tx_len          1    0[BANK0 ] unsigned char 
 15158 ;;  rx_data         1    1[BANK0 ] PTR unsigned char 
 15159 ;;		 -> LTC6804_rdaux@data(8), LTC6804_rdcv@cell_data(8), NULL(0), 
 15160 ;;  rx_len          1    2[BANK0 ] unsigned char 
 15161 ;; Auto vars:     Size  Location     Type
 15162 ;;  tx_Data         1    7[BANK0 ] PTR unsigned char 
 15163 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 15164 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 15165 ;;  i               1    6[BANK0 ] unsigned char 
 15166 ;;  i               1    5[BANK0 ] unsigned char 
 15167 ;; Return value:  Size  Location     Type
 15168 ;;                  1    wreg      void 
 15169 ;; Registers used:
 15170 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15171 ;; Tracked objects:
 15172 ;;		On entry : 0/0
 15173 ;;		On exit  : 0/0
 15174 ;;		Unchanged: 0/0
 15175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15176 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15177 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15178 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15179 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15180 ;;Total ram usage:        8 bytes
 15181 ;; Hardware stack levels used:    1
 15182 ;; Hardware stack levels required when called:    3
 15183 ;; This function calls:
 15184 ;;		_spi_read
 15185 ;;		_spi_write
 15186 ;; This function is called by:
 15187 ;;		_LTC6804_rdcv_reg
 15188 ;;		_LTC6804_rdstat_reg
 15189 ;;		_LTC6804_rdaux_reg
 15190 ;;		_LTC6804_clrcell
 15191 ;;		_LTC6804_clraux
 15192 ;;		_LTC6804_rdcfg
 15193 ;; This function uses a non-reentrant model
 15194 ;;
 15195                           
 15196                           
 15197                           ;psect for function _spi_write_read
 15198  3762                     _spi_write_read:	
 15199                           
 15200                           ;incstack = 0
 15201                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15202                           ;spi_write_read@tx_Data stored from wreg
 15203  3762  0020               	movlb	0	; select bank0
 15204  3763  00A7               	movwf	spi_write_read@tx_Data
 15205                           
 15206                           ;ltc6804.c: 1227: for(char i = 0; i < tx_len; i++)
 15207  3764  01A5               	clrf	spi_write_read@i
 15208  3765                     l6824:	
 15209  3765  0820               	movf	spi_write_read@tx_len,w
 15210  3766  0225               	subwf	spi_write_read@i,w
 15211  3767  1803               	btfsc	3,0
 15212  3768  2F79               	goto	l6826
 15213                           
 15214                           ;ltc6804.c: 1228: {
 15215                           ;ltc6804.c: 1229: spi_write(tx_Data[i]);
 15216  3769  0825               	movf	spi_write_read@i,w
 15217  376A  0727               	addwf	spi_write_read@tx_Data,w
 15218  376B  00A3               	movwf	??_spi_write_read
 15219  376C  0823               	movf	??_spi_write_read,w
 15220  376D  0086               	movwf	6
 15221  376E  0187               	clrf	7
 15222  376F  0801               	movf	1,w
 15223  3770  31B5  25F6  31B7   	fcall	_spi_write
 15224  3773  3001               	movlw	1
 15225  3774  0020               	movlb	0	; select bank0
 15226  3775  00A3               	movwf	??_spi_write_read
 15227  3776  0823               	movf	??_spi_write_read,w
 15228  3777  07A5               	addwf	spi_write_read@i,f
 15229  3778  2F65               	goto	l6824
 15230  3779                     l6826:	
 15231                           
 15232                           ;ltc6804.c: 1231: }
 15233                           ;ltc6804.c: 1233: for(char i = 0; i < rx_len; i++)
 15234  3779  01A6               	clrf	spi_write_read@i_1461
 15235  377A                     l6832:	
 15236  377A  0822               	movf	spi_write_read@rx_len,w
 15237  377B  0226               	subwf	spi_write_read@i_1461,w
 15238  377C  1803               	btfsc	3,0
 15239  377D  0008               	return
 15240                           
 15241                           ;ltc6804.c: 1234: {
 15242                           ;ltc6804.c: 1235: rx_data[i] = (char)spi_read(0xFF);
 15243  377E  30FF               	movlw	255
 15244  377F  31B6  260C  31B7   	fcall	_spi_read
 15245  3782  0020               	movlb	0	; select bank0
 15246  3783  00A3               	movwf	??_spi_write_read
 15247  3784  0826               	movf	spi_write_read@i_1461,w
 15248  3785  0721               	addwf	spi_write_read@rx_data,w
 15249  3786  00A4               	movwf	??_spi_write_read+1
 15250  3787  0824               	movf	??_spi_write_read+1,w
 15251  3788  0086               	movwf	6
 15252  3789  0187               	clrf	7
 15253  378A  0823               	movf	??_spi_write_read,w
 15254  378B  0081               	movwf	1
 15255  378C  3001               	movlw	1
 15256  378D  00A3               	movwf	??_spi_write_read
 15257  378E  0823               	movf	??_spi_write_read,w
 15258  378F  07A6               	addwf	spi_write_read@i_1461,f
 15259  3790  2F7A               	goto	l6832
 15260  3791                     __end_of_spi_write_read:	
 15261                           
 15262                           	psect	text27
 15263  360C                     __ptext27:	
 15264 ;; *************** function _spi_read *****************
 15265 ;; Defined at:
 15266 ;;		line 42 in file "spi.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;  data            1    wreg     unsigned char 
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;  data            1    4[COMMON] unsigned char 
 15271 ;;  readData        1    5[COMMON] unsigned char 
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  1    wreg      unsigned char 
 15274 ;; Registers used:
 15275 ;;		wreg
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/0
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15284 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15285 ;;Total ram usage:        3 bytes
 15286 ;; Hardware stack levels used:    1
 15287 ;; Hardware stack levels required when called:    2
 15288 ;; This function calls:
 15289 ;;		Nothing
 15290 ;; This function is called by:
 15291 ;;		_spi_write_read
 15292 ;; This function uses a non-reentrant model
 15293 ;;
 15294                           
 15295                           
 15296                           ;psect for function _spi_read
 15297  360C                     _spi_read:	
 15298                           
 15299                           ;incstack = 0
 15300                           ; Regs used in _spi_read: [wreg]
 15301                           ;spi_read@data stored from wreg
 15302  360C  00F4               	movwf	spi_read@data
 15303                           
 15304                           ;spi.c: 43: SSP1BUF = data;
 15305  360D  0874               	movf	spi_read@data,w
 15306  360E  0024               	movlb	4	; select bank4
 15307  360F  0091               	movwf	17	;volatile
 15308  3610                     l790:	
 15309                           ;spi.c: 44: while(SSP1STATbits.BF == 0);
 15310                           
 15311  3610  1C14               	btfss	20,0	;volatile
 15312  3611  2E10               	goto	l790
 15313                           
 15314                           ;spi.c: 45: char readData = SSP1BUF;
 15315  3612  0811               	movf	17,w	;volatile
 15316  3613  00F3               	movwf	??_spi_read
 15317  3614  0873               	movf	??_spi_read,w
 15318  3615  00F5               	movwf	spi_read@readData
 15319                           
 15320                           ;spi.c: 46: return readData;
 15321  3616  0875               	movf	spi_read@readData,w
 15322  3617  0008               	return
 15323  3618                     __end_of_spi_read:	
 15324                           
 15325                           	psect	text28
 15326  3791                     __ptext28:	
 15327 ;; *************** function _LTC6804_adcv *****************
 15328 ;; Defined at:
 15329 ;;		line 380 in file "ltc6804.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;		None
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;  cmd             4   18[BANK0 ] unsigned char [4]
 15334 ;;  cmd_pec         2   22[BANK0 ] int 
 15335 ;; Return value:  Size  Location     Type
 15336 ;;                  1    wreg      void 
 15337 ;; Registers used:
 15338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15339 ;; Tracked objects:
 15340 ;;		On entry : 0/0
 15341 ;;		On exit  : 0/0
 15342 ;;		Unchanged: 0/0
 15343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15345 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15347 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15348 ;;Total ram usage:        7 bytes
 15349 ;; Hardware stack levels used:    1
 15350 ;; Hardware stack levels required when called:    4
 15351 ;; This function calls:
 15352 ;;		_pec15_calc
 15353 ;;		_spi_write_array
 15354 ;;		_wakeup_idle
 15355 ;; This function is called by:
 15356 ;;		_measureVoltages
 15357 ;; This function uses a non-reentrant model
 15358 ;;
 15359                           
 15360                           
 15361                           ;psect for function _LTC6804_adcv
 15362  3791                     _LTC6804_adcv:	
 15363                           
 15364                           ;ltc6804.c: 383: char cmd[4];
 15365                           ;ltc6804.c: 384: int cmd_pec;
 15366                           ;ltc6804.c: 387: cmd[0] = ADCV[0];
 15367                           
 15368                           ;incstack = 0
 15369                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15370  3791  0025               	movlb	5	; select bank5
 15371  3792  0847               	movf	_ADCV^(0+640),w
 15372  3793  0020               	movlb	0	; select bank0
 15373  3794  00B1               	movwf	??_LTC6804_adcv
 15374  3795  0831               	movf	??_LTC6804_adcv,w
 15375  3796  00B2               	movwf	LTC6804_adcv@cmd
 15376                           
 15377                           ;ltc6804.c: 388: cmd[1] = ADCV[1];
 15378  3797  0025               	movlb	5	; select bank5
 15379  3798  0848               	movf	(_ADCV^(0+640)+1),w
 15380  3799  0020               	movlb	0	; select bank0
 15381  379A  00B1               	movwf	??_LTC6804_adcv
 15382  379B  0831               	movf	??_LTC6804_adcv,w
 15383  379C  00B3               	movwf	LTC6804_adcv@cmd+1
 15384                           
 15385                           ;ltc6804.c: 391: cmd_pec = pec15_calc(2, ADCV);
 15386  379D  30C7               	movlw	low _ADCV
 15387  379E  00A0               	movwf	pec15_calc@data
 15388  379F  3002               	movlw	high _ADCV
 15389  37A0  00A1               	movwf	pec15_calc@data+1
 15390  37A1  3002               	movlw	2
 15391  37A2  319C  2402  31B7   	fcall	_pec15_calc
 15392  37A5  0020               	movlb	0	; select bank0
 15393  37A6  0821               	movf	?_pec15_calc+1,w
 15394  37A7  00B7               	movwf	LTC6804_adcv@cmd_pec+1
 15395  37A8  0820               	movf	?_pec15_calc,w
 15396  37A9  00B6               	movwf	LTC6804_adcv@cmd_pec
 15397                           
 15398                           ;ltc6804.c: 392: cmd[2] = (char)(cmd_pec >> 8);
 15399  37AA  0837               	movf	LTC6804_adcv@cmd_pec+1,w
 15400  37AB  00B1               	movwf	??_LTC6804_adcv
 15401  37AC  0831               	movf	??_LTC6804_adcv,w
 15402  37AD  00B4               	movwf	LTC6804_adcv@cmd+2
 15403                           
 15404                           ;ltc6804.c: 393: cmd[3] = (char)(cmd_pec);
 15405  37AE  0836               	movf	LTC6804_adcv@cmd_pec,w
 15406  37AF  00B1               	movwf	??_LTC6804_adcv
 15407  37B0  0831               	movf	??_LTC6804_adcv,w
 15408  37B1  00B5               	movwf	LTC6804_adcv@cmd+3
 15409                           
 15410                           ;ltc6804.c: 396: wakeup_idle ();
 15411  37B2  31B5  25E3  31B7   	fcall	_wakeup_idle
 15412                           
 15413                           ;ltc6804.c: 399: LATDbits.LATD3 = 0;
 15414  37B5  0022               	movlb	2	; select bank2
 15415  37B6  118F               	bcf	15,3	;volatile
 15416                           
 15417                           ;ltc6804.c: 400: spi_write_array(4,cmd);
 15418  37B7  3032               	movlw	(low (LTC6804_adcv@cmd| 0))& (0+255)
 15419  37B8  0020               	movlb	0	; select bank0
 15420  37B9  00B1               	movwf	??_LTC6804_adcv
 15421  37BA  0831               	movf	??_LTC6804_adcv,w
 15422  37BB  00F6               	movwf	spi_write_array@data
 15423  37BC  3004               	movlw	4
 15424  37BD  31B6  2690         	fcall	_spi_write_array
 15425                           
 15426                           ;ltc6804.c: 401: LATDbits.LATD3 = 1;
 15427  37BF  0022               	movlb	2	; select bank2
 15428  37C0  158F               	bsf	15,3	;volatile
 15429  37C1  0008               	return
 15430  37C2                     __end_of_LTC6804_adcv:	
 15431                           
 15432                           	psect	text29
 15433  2B10                     __ptext29:	
 15434 ;; *************** function _getTemps *****************
 15435 ;; Defined at:
 15436 ;;		line 30 in file "adc.c"
 15437 ;; Parameters:    Size  Location     Type
 15438 ;;  temps           1    wreg     PTR int 
 15439 ;;		 -> main@temps(10), 
 15440 ;;  numTemps        2   19[BANK1 ] int 
 15441 ;; Auto vars:     Size  Location     Type
 15442 ;;  temps           1   27[BANK1 ] PTR int 
 15443 ;;		 -> main@temps(10), 
 15444 ;;  inc             2   28[BANK1 ] int 
 15445 ;;  highestTemp     2   25[BANK1 ] int 
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  2   19[BANK1 ] int 
 15448 ;; Registers used:
 15449 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15450 ;; Tracked objects:
 15451 ;;		On entry : 0/0
 15452 ;;		On exit  : 0/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15455 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15456 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15457 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15458 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15459 ;;Total ram usage:       11 bytes
 15460 ;; Hardware stack levels used:    1
 15461 ;; Hardware stack levels required when called:    5
 15462 ;; This function calls:
 15463 ;;		_adcRead
 15464 ;;		_calculateTemp
 15465 ;; This function is called by:
 15466 ;;		_main
 15467 ;;		_startUp
 15468 ;; This function uses a non-reentrant model
 15469 ;;
 15470                           
 15471                           
 15472                           ;psect for function _getTemps
 15473  2B10                     _getTemps:	
 15474                           
 15475                           ;incstack = 0
 15476                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15477                           ;getTemps@temps stored from wreg
 15478  2B10  0021               	movlb	1	; select bank1
 15479  2B11  00BB               	movwf	getTemps@temps^(0+128)
 15480                           
 15481                           ;adc.c: 31: int highestTemp = 0;
 15482  2B12  01B9               	clrf	getTemps@highestTemp^(0+128)
 15483  2B13  01BA               	clrf	(getTemps@highestTemp+1)^(0+128)
 15484                           
 15485                           ;adc.c: 33: LATBbits.LATB5 = 0;
 15486  2B14  0022               	movlb	2	; select bank2
 15487  2B15  128D               	bcf	13,5	;volatile
 15488                           
 15489                           ;adc.c: 34: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 15490  2B16  0025               	movlb	5	; select bank5
 15491  2B17  082A               	movf	_tempChannels^(0+640),w
 15492  2B18  31A9  21E7  31AB   	fcall	_adcRead
 15493  2B1B  0874               	movf	?_adcRead+1,w
 15494  2B1C  0021               	movlb	1	; select bank1
 15495  2B1D  00AC               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15496  2B1E  0873               	movf	?_adcRead,w
 15497  2B1F  00AB               	movwf	calculateTemp@adcValue^(0+128)
 15498  2B20  31AC  2493  31AB   	fcall	_calculateTemp
 15499  2B23  0021               	movlb	1	; select bank1
 15500  2B24  082C               	movf	(?_calculateTemp+1)^(0+128),w
 15501  2B25  00BA               	movwf	(getTemps@highestTemp+1)^(0+128)
 15502  2B26  082B               	movf	?_calculateTemp^(0+128),w
 15503  2B27  00B9               	movwf	getTemps@highestTemp^(0+128)
 15504                           
 15505                           ;adc.c: 35: temps[0] = highestTemp;
 15506  2B28  083B               	movf	getTemps@temps^(0+128),w
 15507  2B29  0086               	movwf	6
 15508  2B2A  3002               	movlw	2	; select bank4/5
 15509  2B2B  0087               	movwf	7
 15510  2B2C  0839               	movf	getTemps@highestTemp^(0+128),w
 15511  2B2D  3FC0               	movwi [0]fsr1
 15512  2B2E  083A               	movf	(getTemps@highestTemp+1)^(0+128),w
 15513  2B2F  3FC1               	movwi [1]fsr1
 15514                           
 15515                           ;adc.c: 36: for(int inc = 0; inc < numTemps; inc ++){
 15516  2B30  01BC               	clrf	getTemps@inc^(0+128)
 15517  2B31  01BD               	clrf	(getTemps@inc+1)^(0+128)
 15518  2B32                     l7842:	
 15519  2B32  083D               	movf	(getTemps@inc+1)^(0+128),w
 15520  2B33  3A80               	xorlw	128
 15521  2B34  00B5               	movwf	??_getTemps^(0+128)
 15522  2B35  0834               	movf	(getTemps@numTemps+1)^(0+128),w
 15523  2B36  3A80               	xorlw	128
 15524  2B37  0235               	subwf	??_getTemps^(0+128),w
 15525  2B38  1D03               	skipz
 15526  2B39  2B3C               	goto	u10275
 15527  2B3A  0833               	movf	getTemps@numTemps^(0+128),w
 15528  2B3B  023C               	subwf	getTemps@inc^(0+128),w
 15529  2B3C                     u10275:	
 15530  2B3C  1803               	btfsc	3,0
 15531  2B3D  2B85               	goto	l192
 15532                           
 15533                           ;adc.c: 37: temps[inc] = calculateTemp(adcRead(tempChannels[inc]));
 15534  2B3E  0021               	movlb	1	; select bank1
 15535  2B3F  083C               	movf	getTemps@inc^(0+128),w
 15536  2B40  3EAA               	addlw	(low (_tempChannels| (0+512)))& (0+255)
 15537  2B41  0086               	movwf	6
 15538  2B42  3002               	movlw	2	; select bank5/6
 15539  2B43  0087               	movwf	7
 15540  2B44  0801               	movf	1,w
 15541  2B45  31A9  21E7  31AB   	fcall	_adcRead
 15542  2B48  0874               	movf	?_adcRead+1,w
 15543  2B49  0021               	movlb	1	; select bank1
 15544  2B4A  00AC               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15545  2B4B  0873               	movf	?_adcRead,w
 15546  2B4C  00AB               	movwf	calculateTemp@adcValue^(0+128)
 15547  2B4D  31AC  2493  31AB   	fcall	_calculateTemp
 15548  2B50  0021               	movlb	1	; select bank1
 15549  2B51  353C               	lslf	getTemps@inc^(0+128),w
 15550  2B52  073B               	addwf	getTemps@temps^(0+128),w
 15551  2B53  00B5               	movwf	??_getTemps^(0+128)
 15552  2B54  0835               	movf	??_getTemps^(0+128),w
 15553  2B55  0086               	movwf	6
 15554  2B56  3002               	movlw	2	; select bank4/5
 15555  2B57  0087               	movwf	7
 15556  2B58  082B               	movf	?_calculateTemp^(0+128),w
 15557  2B59  3FC0               	movwi [0]fsr1
 15558  2B5A  082C               	movf	(?_calculateTemp+1)^(0+128),w
 15559  2B5B  3FC1               	movwi [1]fsr1
 15560                           
 15561                           ;adc.c: 38: if(temps[inc] > highestTemp){
 15562  2B5C  353C               	lslf	getTemps@inc^(0+128),w
 15563  2B5D  073B               	addwf	getTemps@temps^(0+128),w
 15564  2B5E  00B5               	movwf	??_getTemps^(0+128)
 15565  2B5F  0835               	movf	??_getTemps^(0+128),w
 15566  2B60  0086               	movwf	6
 15567  2B61  3002               	movlw	2	; select bank4/5
 15568  2B62  0087               	movwf	7
 15569  2B63  3F40               	moviw [0]fsr1
 15570  2B64  00B6               	movwf	(??_getTemps+1)^(0+128)
 15571  2B65  3F41               	moviw [1]fsr1
 15572  2B66  00B7               	movwf	((??_getTemps+1)^(0+128)+1)
 15573  2B67  083A               	movf	(getTemps@highestTemp+1)^(0+128),w
 15574  2B68  3A80               	xorlw	128
 15575  2B69  00B8               	movwf	(??_getTemps+3)^(0+128)
 15576  2B6A  0837               	movf	(??_getTemps+2)^(0+128),w
 15577  2B6B  3A80               	xorlw	128
 15578  2B6C  0238               	subwf	(??_getTemps+3)^(0+128),w
 15579  2B6D  1D03               	skipz
 15580  2B6E  2B71               	goto	u10265
 15581  2B6F  0836               	movf	(??_getTemps+1)^(0+128),w
 15582  2B70  0239               	subwf	getTemps@highestTemp^(0+128),w
 15583  2B71                     u10265:	
 15584  2B71  1803               	skipnc
 15585  2B72  2B7F               	goto	l7840
 15586                           
 15587                           ;adc.c: 39: highestTemp = temps[inc];
 15588  2B73  0021               	movlb	1	; select bank1
 15589  2B74  353C               	lslf	getTemps@inc^(0+128),w
 15590  2B75  073B               	addwf	getTemps@temps^(0+128),w
 15591  2B76  00B5               	movwf	??_getTemps^(0+128)
 15592  2B77  0835               	movf	??_getTemps^(0+128),w
 15593  2B78  0086               	movwf	6
 15594  2B79  3002               	movlw	2	; select bank4/5
 15595  2B7A  0087               	movwf	7
 15596  2B7B  3F40               	moviw [0]fsr1
 15597  2B7C  00B9               	movwf	getTemps@highestTemp^(0+128)
 15598  2B7D  3F41               	moviw [1]fsr1
 15599  2B7E  00BA               	movwf	(getTemps@highestTemp+1)^(0+128)
 15600  2B7F                     l7840:	
 15601  2B7F  3001               	movlw	1
 15602  2B80  0021               	movlb	1	; select bank1
 15603  2B81  07BC               	addwf	getTemps@inc^(0+128),f
 15604  2B82  3000               	movlw	0
 15605  2B83  3DBD               	addwfc	(getTemps@inc+1)^(0+128),f
 15606  2B84  2B32               	goto	l7842
 15607  2B85                     l192:	
 15608                           
 15609                           ;adc.c: 40: }
 15610                           ;adc.c: 41: }
 15611                           ;adc.c: 43: LATBbits.LATB5 = 1;
 15612  2B85  0022               	movlb	2	; select bank2
 15613  2B86  168D               	bsf	13,5	;volatile
 15614                           
 15615                           ;adc.c: 44: return highestTemp;
 15616  2B87  0021               	movlb	1	; select bank1
 15617  2B88  083A               	movf	(getTemps@highestTemp+1)^(0+128),w
 15618  2B89  00B4               	movwf	(?_getTemps+1)^(0+128)
 15619  2B8A  0839               	movf	getTemps@highestTemp^(0+128),w
 15620  2B8B  00B3               	movwf	?_getTemps^(0+128)
 15621  2B8C  0008               	return
 15622  2B8D                     __end_of_getTemps:	
 15623                           
 15624                           	psect	text30
 15625  2C93                     __ptext30:	
 15626 ;; *************** function _calculateTemp *****************
 15627 ;; Defined at:
 15628 ;;		line 12 in file "adc.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;  adcValue        2   11[BANK1 ] int 
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;  voltage         4   15[BANK1 ] float 
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  2   11[BANK1 ] int 
 15635 ;; Registers used:
 15636 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15642 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15643 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15644 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15645 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15646 ;;Total ram usage:        8 bytes
 15647 ;; Hardware stack levels used:    1
 15648 ;; Hardware stack levels required when called:    4
 15649 ;; This function calls:
 15650 ;;		___fldiv
 15651 ;;		___flmul
 15652 ;;		___fltol
 15653 ;;		___xxtofl
 15654 ;; This function is called by:
 15655 ;;		_getTemps
 15656 ;; This function uses a non-reentrant model
 15657 ;;
 15658                           
 15659                           
 15660                           ;psect for function _calculateTemp
 15661  2C93                     _calculateTemp:	
 15662                           
 15663                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 15664                           
 15665                           ;incstack = 0
 15666                           ; Regs used in _calculateTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15667  2C93  3040               	movlw	64
 15668  2C94  0020               	movlb	0	; select bank0
 15669  2C95  00BF               	movwf	___flmul@b+3
 15670  2C96  30A0               	movlw	160
 15671  2C97  00BE               	movwf	___flmul@b+2
 15672  2C98  3000               	movlw	0
 15673  2C99  00BD               	movwf	___flmul@b+1
 15674  2C9A  3000               	movlw	0
 15675  2C9B  00BC               	movwf	___flmul@b
 15676  2C9C  3045               	movlw	69
 15677  2C9D  00D9               	movwf	___fldiv@a+3
 15678  2C9E  3080               	movlw	128
 15679  2C9F  00D8               	movwf	___fldiv@a+2
 15680  2CA0  3000               	movlw	0
 15681  2CA1  00D7               	movwf	___fldiv@a+1
 15682  2CA2  3000               	movlw	0
 15683  2CA3  00D6               	movwf	___fldiv@a
 15684  2CA4  0021               	movlb	1	; select bank1
 15685  2CA5  082B               	movf	calculateTemp@adcValue^(0+128),w
 15686  2CA6  0020               	movlb	0	; select bank0
 15687  2CA7  00AE               	movwf	___xxtofl@val
 15688  2CA8  0021               	movlb	1	; select bank1
 15689  2CA9  082C               	movf	(calculateTemp@adcValue+1)^(0+128),w
 15690  2CAA  0020               	movlb	0	; select bank0
 15691  2CAB  00AF               	movwf	___xxtofl@val+1
 15692  2CAC  0D89               	rlf	9,f
 15693  2CAD  3B89               	subwfb	9,f
 15694  2CAE  0989               	comf	9,f
 15695  2CAF  00B0               	movwf	___xxtofl@val+2
 15696  2CB0  00B1               	movwf	___xxtofl@val+3
 15697  2CB1  3001               	movlw	1
 15698  2CB2  31AE  2631  31AC   	fcall	___xxtofl
 15699  2CB5  0020               	movlb	0	; select bank0
 15700  2CB6  0831               	movf	?___xxtofl+3,w
 15701  2CB7  00DD               	movwf	___fldiv@b+3
 15702  2CB8  0830               	movf	?___xxtofl+2,w
 15703  2CB9  00DC               	movwf	___fldiv@b+2
 15704  2CBA  082F               	movf	?___xxtofl+1,w
 15705  2CBB  00DB               	movwf	___fldiv@b+1
 15706  2CBC  082E               	movf	?___xxtofl,w
 15707  2CBD  00DA               	movwf	___fldiv@b
 15708  2CBE  3190  2004  31AC   	fcall	___fldiv
 15709  2CC1  0020               	movlb	0	; select bank0
 15710  2CC2  0859               	movf	?___fldiv+3,w
 15711  2CC3  00C3               	movwf	___flmul@a+3
 15712  2CC4  0858               	movf	?___fldiv+2,w
 15713  2CC5  00C2               	movwf	___flmul@a+2
 15714  2CC6  0857               	movf	?___fldiv+1,w
 15715  2CC7  00C1               	movwf	___flmul@a+1
 15716  2CC8  0856               	movf	?___fldiv,w
 15717  2CC9  00C0               	movwf	___flmul@a
 15718  2CCA  318B  233E  31AC   	fcall	___flmul
 15719  2CCD  0020               	movlb	0	; select bank0
 15720  2CCE  083F               	movf	?___flmul+3,w
 15721  2CCF  0021               	movlb	1	; select bank1
 15722  2CD0  00B2               	movwf	(calculateTemp@voltage+3)^(0+128)
 15723  2CD1  0020               	movlb	0	; select bank0
 15724  2CD2  083E               	movf	?___flmul+2,w
 15725  2CD3  0021               	movlb	1	; select bank1
 15726  2CD4  00B1               	movwf	(calculateTemp@voltage+2)^(0+128)
 15727  2CD5  0020               	movlb	0	; select bank0
 15728  2CD6  083D               	movf	?___flmul+1,w
 15729  2CD7  0021               	movlb	1	; select bank1
 15730  2CD8  00B0               	movwf	(calculateTemp@voltage+1)^(0+128)
 15731  2CD9  0020               	movlb	0	; select bank0
 15732  2CDA  083C               	movf	?___flmul,w
 15733  2CDB  0021               	movlb	1	; select bank1
 15734  2CDC  00AF               	movwf	calculateTemp@voltage^(0+128)
 15735                           
 15736                           ;adc.c: 14: return temperatures[(int)(voltage*10)];
 15737  2CDD  0832               	movf	(calculateTemp@voltage+3)^(0+128),w
 15738  2CDE  0020               	movlb	0	; select bank0
 15739  2CDF  00C3               	movwf	___flmul@a+3
 15740  2CE0  0021               	movlb	1	; select bank1
 15741  2CE1  0831               	movf	(calculateTemp@voltage+2)^(0+128),w
 15742  2CE2  0020               	movlb	0	; select bank0
 15743  2CE3  00C2               	movwf	___flmul@a+2
 15744  2CE4  0021               	movlb	1	; select bank1
 15745  2CE5  0830               	movf	(calculateTemp@voltage+1)^(0+128),w
 15746  2CE6  0020               	movlb	0	; select bank0
 15747  2CE7  00C1               	movwf	___flmul@a+1
 15748  2CE8  0021               	movlb	1	; select bank1
 15749  2CE9  082F               	movf	calculateTemp@voltage^(0+128),w
 15750  2CEA  0020               	movlb	0	; select bank0
 15751  2CEB  00C0               	movwf	___flmul@a
 15752  2CEC  3041               	movlw	65
 15753  2CED  00BF               	movwf	___flmul@b+3
 15754  2CEE  3020               	movlw	32
 15755  2CEF  00BE               	movwf	___flmul@b+2
 15756  2CF0  3000               	movlw	0
 15757  2CF1  00BD               	movwf	___flmul@b+1
 15758  2CF2  3000               	movlw	0
 15759  2CF3  00BC               	movwf	___flmul@b
 15760  2CF4  318B  233E  31AC   	fcall	___flmul
 15761  2CF7  0020               	movlb	0	; select bank0
 15762  2CF8  083F               	movf	?___flmul+3,w
 15763  2CF9  0021               	movlb	1	; select bank1
 15764  2CFA  00A3               	movwf	(___fltol@f1+3)^(0+128)
 15765  2CFB  0020               	movlb	0	; select bank0
 15766  2CFC  083E               	movf	?___flmul+2,w
 15767  2CFD  0021               	movlb	1	; select bank1
 15768  2CFE  00A2               	movwf	(___fltol@f1+2)^(0+128)
 15769  2CFF  0020               	movlb	0	; select bank0
 15770  2D00  083D               	movf	?___flmul+1,w
 15771  2D01  0021               	movlb	1	; select bank1
 15772  2D02  00A1               	movwf	(___fltol@f1+1)^(0+128)
 15773  2D03  0020               	movlb	0	; select bank0
 15774  2D04  083C               	movf	?___flmul,w
 15775  2D05  0021               	movlb	1	; select bank1
 15776  2D06  00A0               	movwf	___fltol@f1^(0+128)
 15777  2D07  31AB  238D         	fcall	___fltol
 15778  2D09  0021               	movlb	1	; select bank1
 15779  2D0A  0821               	movf	(?___fltol+1)^(0+128),w
 15780  2D0B  0085               	movwf	5
 15781  2D0C  0820               	movf	?___fltol^(0+128),w
 15782  2D0D  0084               	movwf	4
 15783  2D0E  3068               	movlw	low (_temperatures| (0+32768))
 15784  2D0F  0784               	addwf	4,f
 15785  2D10  30B8               	movlw	high (_temperatures| (0+32768))
 15786  2D11  3D85               	addwfc	5,f
 15787  2D12  0800               	movf	0,w	;code access
 15788  2D13  00AD               	movwf	??_calculateTemp^(0+128)
 15789  2D14  01AE               	clrf	(??_calculateTemp^(0+128)+1)
 15790  2D15  082D               	movf	??_calculateTemp^(0+128),w
 15791  2D16  00AB               	movwf	?_calculateTemp^(0+128)
 15792  2D17  082E               	movf	(??_calculateTemp+1)^(0+128),w
 15793  2D18  00AC               	movwf	(?_calculateTemp+1)^(0+128)
 15794  2D19  0008               	return
 15795  2D1A                     __end_of_calculateTemp:	
 15796                           
 15797                           	psect	text31
 15798  2B8D                     __ptext31:	
 15799 ;; *************** function ___fltol *****************
 15800 ;; Defined at:
 15801 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 15802 ;; Parameters:    Size  Location     Type
 15803 ;;  f1              4    0[BANK1 ] int 
 15804 ;; Auto vars:     Size  Location     Type
 15805 ;;  exp1            1   10[BANK1 ] unsigned char 
 15806 ;;  sign1           1    9[BANK1 ] unsigned char 
 15807 ;; Return value:  Size  Location     Type
 15808 ;;                  4    0[BANK1 ] long 
 15809 ;; Registers used:
 15810 ;;		wreg, status,2, status,0
 15811 ;; Tracked objects:
 15812 ;;		On entry : 0/0
 15813 ;;		On exit  : 0/0
 15814 ;;		Unchanged: 0/0
 15815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15816 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15817 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15818 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15819 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15820 ;;Total ram usage:       11 bytes
 15821 ;; Hardware stack levels used:    1
 15822 ;; Hardware stack levels required when called:    2
 15823 ;; This function calls:
 15824 ;;		Nothing
 15825 ;; This function is called by:
 15826 ;;		_calculateTemp
 15827 ;;		_sprintf
 15828 ;; This function uses a non-reentrant model
 15829 ;;
 15830                           
 15831                           
 15832                           ;psect for function ___fltol
 15833  2B8D                     ___fltol:	
 15834                           
 15835                           ;incstack = 0
 15836                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 15837  2B8D  0021               	movlb	1	; select bank1
 15838  2B8E  0820               	movf	___fltol@f1^(0+128),w
 15839  2B8F  00A4               	movwf	??___fltol^(0+128)
 15840  2B90  0821               	movf	(___fltol@f1+1)^(0+128),w
 15841  2B91  00A5               	movwf	(??___fltol^(0+128)+1)
 15842  2B92  0822               	movf	(___fltol@f1+2)^(0+128),w
 15843  2B93  00A6               	movwf	(??___fltol^(0+128)+2)
 15844  2B94  0823               	movf	(___fltol@f1+3)^(0+128),w
 15845  2B95  00A7               	movwf	(??___fltol^(0+128)+3)
 15846  2B96  1003               	clrc
 15847  2B97  0D26               	rlf	(??___fltol^(0+128)+2),w
 15848  2B98  0D27               	rlf	(??___fltol^(0+128)+3),w
 15849  2B99  00A8               	movwf	(??___fltol+4)^(0+128)
 15850  2B9A  0828               	movf	(??___fltol+4)^(0+128),w
 15851  2B9B  00AA               	movwf	___fltol@exp1^(0+128)
 15852  2B9C  082A               	movf	___fltol@exp1^(0+128),w
 15853  2B9D  1D03               	btfss	3,2
 15854  2B9E  2BA8               	goto	l7156
 15855  2B9F  3000               	movlw	0
 15856  2BA0  00A3               	movwf	(?___fltol+3)^(0+128)
 15857  2BA1  3000               	movlw	0
 15858  2BA2  00A2               	movwf	(?___fltol+2)^(0+128)
 15859  2BA3  3000               	movlw	0
 15860  2BA4  00A1               	movwf	(?___fltol+1)^(0+128)
 15861  2BA5  3000               	movlw	0
 15862  2BA6  00A0               	movwf	?___fltol^(0+128)
 15863  2BA7  0008               	return
 15864  2BA8                     l7156:	
 15865  2BA8  0820               	movf	___fltol@f1^(0+128),w
 15866  2BA9  00A4               	movwf	??___fltol^(0+128)
 15867  2BAA  0821               	movf	(___fltol@f1+1)^(0+128),w
 15868  2BAB  00A5               	movwf	(??___fltol^(0+128)+1)
 15869  2BAC  0822               	movf	(___fltol@f1+2)^(0+128),w
 15870  2BAD  00A6               	movwf	(??___fltol^(0+128)+2)
 15871  2BAE  0823               	movf	(___fltol@f1+3)^(0+128),w
 15872  2BAF  00A7               	movwf	(??___fltol^(0+128)+3)
 15873  2BB0  301F               	movlw	31
 15874  2BB1                     u9055:	
 15875  2BB1  36A7               	lsrf	(??___fltol^(0+128)+3),f
 15876  2BB2  0CA6               	rrf	(??___fltol^(0+128)+2),f
 15877  2BB3  0CA5               	rrf	(??___fltol^(0+128)+1),f
 15878  2BB4  0CA4               	rrf	??___fltol^(0+128),f
 15879  2BB5  0B89               	decfsz	9,f
 15880  2BB6  2BB1               	goto	u9055
 15881  2BB7  0824               	movf	??___fltol^(0+128),w
 15882  2BB8  00A8               	movwf	(??___fltol+4)^(0+128)
 15883  2BB9  0828               	movf	(??___fltol+4)^(0+128),w
 15884  2BBA  00A9               	movwf	___fltol@sign1^(0+128)
 15885  2BBB  17A2               	bsf	(___fltol@f1^(0+128)+2),7
 15886  2BBC  30FF               	movlw	255
 15887  2BBD  05A0               	andwf	___fltol@f1^(0+128),f
 15888  2BBE  30FF               	movlw	255
 15889  2BBF  05A1               	andwf	(___fltol@f1+1)^(0+128),f
 15890  2BC0  30FF               	movlw	255
 15891  2BC1  05A2               	andwf	(___fltol@f1+2)^(0+128),f
 15892  2BC2  3000               	movlw	0
 15893  2BC3  05A3               	andwf	(___fltol@f1+3)^(0+128),f
 15894  2BC4  3096               	movlw	150
 15895  2BC5  02AA               	subwf	___fltol@exp1^(0+128),f
 15896  2BC6  1FAA               	btfss	___fltol@exp1^(0+128),7
 15897  2BC7  2BE4               	goto	l7174
 15898  2BC8  082A               	movf	___fltol@exp1^(0+128),w
 15899  2BC9  3A80               	xorlw	128
 15900  2BCA  3E97               	addlw	151
 15901  2BCB  1803               	skipnc
 15902  2BCC  2BD6               	goto	l7172
 15903  2BCD  3000               	movlw	0
 15904  2BCE  00A3               	movwf	(?___fltol+3)^(0+128)
 15905  2BCF  3000               	movlw	0
 15906  2BD0  00A2               	movwf	(?___fltol+2)^(0+128)
 15907  2BD1  3000               	movlw	0
 15908  2BD2  00A1               	movwf	(?___fltol+1)^(0+128)
 15909  2BD3  3000               	movlw	0
 15910  2BD4  00A0               	movwf	?___fltol^(0+128)
 15911  2BD5  0008               	return
 15912  2BD6                     l7172:	
 15913  2BD6  3001               	movlw	1
 15914  2BD7                     u9085:	
 15915  2BD7  36A3               	lsrf	(___fltol@f1+3)^(0+128),f
 15916  2BD8  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
 15917  2BD9  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
 15918  2BDA  0CA0               	rrf	___fltol@f1^(0+128),f
 15919  2BDB  0B89               	decfsz	9,f
 15920  2BDC  2BD7               	goto	u9085
 15921  2BDD  3001               	movlw	1
 15922  2BDE  00A4               	movwf	??___fltol^(0+128)
 15923  2BDF  0824               	movf	??___fltol^(0+128),w
 15924  2BE0  07AA               	addwf	___fltol@exp1^(0+128),f
 15925  2BE1  1903               	btfsc	3,2
 15926  2BE2  2BFD               	goto	l7182
 15927  2BE3  2BD6               	goto	l7172
 15928  2BE4                     l7174:	
 15929  2BE4  3020               	movlw	32
 15930  2BE5  022A               	subwf	___fltol@exp1^(0+128),w
 15931  2BE6  1C03               	skipc
 15932  2BE7  2BFA               	goto	l1180
 15933  2BE8  3000               	movlw	0
 15934  2BE9  00A3               	movwf	(?___fltol+3)^(0+128)
 15935  2BEA  3000               	movlw	0
 15936  2BEB  00A2               	movwf	(?___fltol+2)^(0+128)
 15937  2BEC  3000               	movlw	0
 15938  2BED  00A1               	movwf	(?___fltol+1)^(0+128)
 15939  2BEE  3000               	movlw	0
 15940  2BEF  00A0               	movwf	?___fltol^(0+128)
 15941  2BF0  0008               	return
 15942  2BF1                     l7180:	
 15943  2BF1  3001               	movlw	1
 15944  2BF2                     u9115:	
 15945  2BF2  35A0               	lslf	___fltol@f1^(0+128),f
 15946  2BF3  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
 15947  2BF4  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
 15948  2BF5  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
 15949  2BF6  0B89               	decfsz	9,f
 15950  2BF7  2BF2               	goto	u9115
 15951  2BF8  3001               	movlw	1
 15952  2BF9  02AA               	subwf	___fltol@exp1^(0+128),f
 15953  2BFA                     l1180:	
 15954  2BFA  082A               	movf	___fltol@exp1^(0+128),w
 15955  2BFB  1D03               	btfss	3,2
 15956  2BFC  2BF1               	goto	l7180
 15957  2BFD                     l7182:	
 15958  2BFD  0829               	movf	___fltol@sign1^(0+128),w
 15959  2BFE  1903               	btfsc	3,2
 15960  2BFF  0008               	return
 15961  2C00  09A0               	comf	___fltol@f1^(0+128),f
 15962  2C01  09A1               	comf	(___fltol@f1+1)^(0+128),f
 15963  2C02  09A2               	comf	(___fltol@f1+2)^(0+128),f
 15964  2C03  09A3               	comf	(___fltol@f1+3)^(0+128),f
 15965  2C04  0AA0               	incf	___fltol@f1^(0+128),f
 15966  2C05  1903               	skipnz
 15967  2C06  0AA1               	incf	(___fltol@f1+1)^(0+128),f
 15968  2C07  1903               	skipnz
 15969  2C08  0AA2               	incf	(___fltol@f1+2)^(0+128),f
 15970  2C09  1903               	skipnz
 15971  2C0A  0AA3               	incf	(___fltol@f1+3)^(0+128),f
 15972  2C0B  0008               	return
 15973  2C0C                     __end_of___fltol:	
 15974                           
 15975                           	psect	text32
 15976  37C2                     __ptext32:	
 15977 ;; *************** function _getCurrent *****************
 15978 ;; Defined at:
 15979 ;;		line 22 in file "adc.c"
 15980 ;; Parameters:    Size  Location     Type
 15981 ;;		None
 15982 ;; Auto vars:     Size  Location     Type
 15983 ;;  currentValue    4   49[BANK1 ] float 
 15984 ;; Return value:  Size  Location     Type
 15985 ;;                  4   45[BANK1 ] float 
 15986 ;; Registers used:
 15987 ;;		wreg, status,2, status,0, pclath, cstack
 15988 ;; Tracked objects:
 15989 ;;		On entry : 0/0
 15990 ;;		On exit  : 0/0
 15991 ;;		Unchanged: 0/0
 15992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15993 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15994 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15996 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15997 ;;Total ram usage:        8 bytes
 15998 ;; Hardware stack levels used:    1
 15999 ;; Hardware stack levels required when called:    5
 16000 ;; This function calls:
 16001 ;;		___xxtofl
 16002 ;;		_adcRead
 16003 ;;		_calculateCurrent
 16004 ;; This function is called by:
 16005 ;;		_main
 16006 ;;		_startUp
 16007 ;; This function uses a non-reentrant model
 16008 ;;
 16009                           
 16010                           
 16011                           ;psect for function _getCurrent
 16012  37C2                     _getCurrent:	
 16013                           
 16014                           ;adc.c: 23: float currentValue = (float)adcRead((char)10101);
 16015                           
 16016                           ;incstack = 0
 16017                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 16018  37C2  3075               	movlw	117
 16019  37C3  31A9  21E7  31B7   	fcall	_adcRead
 16020  37C6  0873               	movf	?_adcRead,w
 16021  37C7  0020               	movlb	0	; select bank0
 16022  37C8  00AE               	movwf	___xxtofl@val
 16023  37C9  0874               	movf	?_adcRead+1,w
 16024  37CA  00AF               	movwf	___xxtofl@val+1
 16025  37CB  0D89               	rlf	9,f
 16026  37CC  3B89               	subwfb	9,f
 16027  37CD  0989               	comf	9,f
 16028  37CE  00B0               	movwf	___xxtofl@val+2
 16029  37CF  00B1               	movwf	___xxtofl@val+3
 16030  37D0  3001               	movlw	1
 16031  37D1  31AE  2631  31B7   	fcall	___xxtofl
 16032  37D4  0020               	movlb	0	; select bank0
 16033  37D5  0831               	movf	?___xxtofl+3,w
 16034  37D6  0021               	movlb	1	; select bank1
 16035  37D7  00D4               	movwf	(getCurrent@currentValue+3)^(0+128)
 16036  37D8  0020               	movlb	0	; select bank0
 16037  37D9  0830               	movf	?___xxtofl+2,w
 16038  37DA  0021               	movlb	1	; select bank1
 16039  37DB  00D3               	movwf	(getCurrent@currentValue+2)^(0+128)
 16040  37DC  0020               	movlb	0	; select bank0
 16041  37DD  082F               	movf	?___xxtofl+1,w
 16042  37DE  0021               	movlb	1	; select bank1
 16043  37DF  00D2               	movwf	(getCurrent@currentValue+1)^(0+128)
 16044  37E0  0020               	movlb	0	; select bank0
 16045  37E1  082E               	movf	?___xxtofl,w
 16046  37E2  0021               	movlb	1	; select bank1
 16047  37E3  00D1               	movwf	getCurrent@currentValue^(0+128)
 16048                           
 16049                           ;adc.c: 24: currentValue = calculateCurrent(currentValue);
 16050  37E4  0854               	movf	(getCurrent@currentValue+3)^(0+128),w
 16051  37E5  00C4               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 16052  37E6  0853               	movf	(getCurrent@currentValue+2)^(0+128),w
 16053  37E7  00C3               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 16054  37E8  0852               	movf	(getCurrent@currentValue+1)^(0+128),w
 16055  37E9  00C2               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 16056  37EA  0851               	movf	getCurrent@currentValue^(0+128),w
 16057  37EB  00C1               	movwf	calculateCurrent@adcValue^(0+128)
 16058  37EC  31AD  251A         	fcall	_calculateCurrent
 16059  37EE  0021               	movlb	1	; select bank1
 16060  37EF  0844               	movf	(?_calculateCurrent+3)^(0+128),w
 16061  37F0  00D4               	movwf	(getCurrent@currentValue+3)^(0+128)
 16062  37F1  0843               	movf	(?_calculateCurrent+2)^(0+128),w
 16063  37F2  00D3               	movwf	(getCurrent@currentValue+2)^(0+128)
 16064  37F3  0842               	movf	(?_calculateCurrent+1)^(0+128),w
 16065  37F4  00D2               	movwf	(getCurrent@currentValue+1)^(0+128)
 16066  37F5  0841               	movf	?_calculateCurrent^(0+128),w
 16067  37F6  00D1               	movwf	getCurrent@currentValue^(0+128)
 16068                           
 16069                           ;adc.c: 26: return currentValue;
 16070  37F7  0854               	movf	(getCurrent@currentValue+3)^(0+128),w
 16071  37F8  00D0               	movwf	(?_getCurrent+3)^(0+128)
 16072  37F9  0853               	movf	(getCurrent@currentValue+2)^(0+128),w
 16073  37FA  00CF               	movwf	(?_getCurrent+2)^(0+128)
 16074  37FB  0852               	movf	(getCurrent@currentValue+1)^(0+128),w
 16075  37FC  00CE               	movwf	(?_getCurrent+1)^(0+128)
 16076  37FD  0851               	movf	getCurrent@currentValue^(0+128),w
 16077  37FE  00CD               	movwf	?_getCurrent^(0+128)
 16078  37FF  0008               	return
 16079  3800                     __end_of_getCurrent:	
 16080                           
 16081                           	psect	text33
 16082  2D1A                     __ptext33:	
 16083 ;; *************** function _calculateCurrent *****************
 16084 ;; Defined at:
 16085 ;;		line 17 in file "adc.c"
 16086 ;; Parameters:    Size  Location     Type
 16087 ;;  adcValue        4   33[BANK1 ] float 
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;  curr            4   37[BANK1 ] float 
 16090 ;; Return value:  Size  Location     Type
 16091 ;;                  4   33[BANK1 ] float 
 16092 ;; Registers used:
 16093 ;;		wreg, status,2, status,0, pclath, cstack
 16094 ;; Tracked objects:
 16095 ;;		On entry : 0/0
 16096 ;;		On exit  : 0/0
 16097 ;;		Unchanged: 0/0
 16098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16099 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16100 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16102 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16103 ;;Total ram usage:       12 bytes
 16104 ;; Hardware stack levels used:    1
 16105 ;; Hardware stack levels required when called:    4
 16106 ;; This function calls:
 16107 ;;		___fladd
 16108 ;;		___fldiv
 16109 ;;		___flmul
 16110 ;; This function is called by:
 16111 ;;		_getCurrent
 16112 ;; This function uses a non-reentrant model
 16113 ;;
 16114                           
 16115                           
 16116                           ;psect for function _calculateCurrent
 16117  2D1A                     _calculateCurrent:	
 16118                           
 16119                           ;adc.c: 18: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16120                           
 16121                           ;incstack = 0
 16122                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16123  2D1A  30C0               	movlw	192
 16124  2D1B  0021               	movlb	1	; select bank1
 16125  2D1C  00AC               	movwf	(___fladd@b+3)^(0+128)
 16126  2D1D  3020               	movlw	32
 16127  2D1E  00AB               	movwf	(___fladd@b+2)^(0+128)
 16128  2D1F  3000               	movlw	0
 16129  2D20  00AA               	movwf	(___fladd@b+1)^(0+128)
 16130  2D21  3000               	movlw	0
 16131  2D22  00A9               	movwf	___fladd@b^(0+128)
 16132  2D23  3040               	movlw	64
 16133  2D24  0020               	movlb	0	; select bank0
 16134  2D25  00BF               	movwf	___flmul@b+3
 16135  2D26  30A0               	movlw	160
 16136  2D27  00BE               	movwf	___flmul@b+2
 16137  2D28  3000               	movlw	0
 16138  2D29  00BD               	movwf	___flmul@b+1
 16139  2D2A  3000               	movlw	0
 16140  2D2B  00BC               	movwf	___flmul@b
 16141  2D2C  3045               	movlw	69
 16142  2D2D  00D9               	movwf	___fldiv@a+3
 16143  2D2E  307F               	movlw	127
 16144  2D2F  00D8               	movwf	___fldiv@a+2
 16145  2D30  30F0               	movlw	240
 16146  2D31  00D7               	movwf	___fldiv@a+1
 16147  2D32  3000               	movlw	0
 16148  2D33  00D6               	movwf	___fldiv@a
 16149  2D34  0021               	movlb	1	; select bank1
 16150  2D35  0844               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 16151  2D36  0020               	movlb	0	; select bank0
 16152  2D37  00DD               	movwf	___fldiv@b+3
 16153  2D38  0021               	movlb	1	; select bank1
 16154  2D39  0843               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 16155  2D3A  0020               	movlb	0	; select bank0
 16156  2D3B  00DC               	movwf	___fldiv@b+2
 16157  2D3C  0021               	movlb	1	; select bank1
 16158  2D3D  0842               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 16159  2D3E  0020               	movlb	0	; select bank0
 16160  2D3F  00DB               	movwf	___fldiv@b+1
 16161  2D40  0021               	movlb	1	; select bank1
 16162  2D41  0841               	movf	calculateCurrent@adcValue^(0+128),w
 16163  2D42  0020               	movlb	0	; select bank0
 16164  2D43  00DA               	movwf	___fldiv@b
 16165  2D44  3190  2004  31AD   	fcall	___fldiv
 16166  2D47  0020               	movlb	0	; select bank0
 16167  2D48  0859               	movf	?___fldiv+3,w
 16168  2D49  00C3               	movwf	___flmul@a+3
 16169  2D4A  0858               	movf	?___fldiv+2,w
 16170  2D4B  00C2               	movwf	___flmul@a+2
 16171  2D4C  0857               	movf	?___fldiv+1,w
 16172  2D4D  00C1               	movwf	___flmul@a+1
 16173  2D4E  0856               	movf	?___fldiv,w
 16174  2D4F  00C0               	movwf	___flmul@a
 16175  2D50  318B  233E  31AD   	fcall	___flmul
 16176  2D53  0020               	movlb	0	; select bank0
 16177  2D54  083F               	movf	?___flmul+3,w
 16178  2D55  0021               	movlb	1	; select bank1
 16179  2D56  00B0               	movwf	(___fladd@a+3)^(0+128)
 16180  2D57  0020               	movlb	0	; select bank0
 16181  2D58  083E               	movf	?___flmul+2,w
 16182  2D59  0021               	movlb	1	; select bank1
 16183  2D5A  00AF               	movwf	(___fladd@a+2)^(0+128)
 16184  2D5B  0020               	movlb	0	; select bank0
 16185  2D5C  083D               	movf	?___flmul+1,w
 16186  2D5D  0021               	movlb	1	; select bank1
 16187  2D5E  00AE               	movwf	(___fladd@a+1)^(0+128)
 16188  2D5F  0020               	movlb	0	; select bank0
 16189  2D60  083C               	movf	?___flmul,w
 16190  2D61  0021               	movlb	1	; select bank1
 16191  2D62  00AD               	movwf	___fladd@a^(0+128)
 16192  2D63  3193  2374  31AD   	fcall	___fladd
 16193  2D66  0021               	movlb	1	; select bank1
 16194  2D67  082C               	movf	(?___fladd+3)^(0+128),w
 16195  2D68  00CC               	movwf	(_calculateCurrent$2204+3)^(0+128)
 16196  2D69  082B               	movf	(?___fladd+2)^(0+128),w
 16197  2D6A  00CB               	movwf	(_calculateCurrent$2204+2)^(0+128)
 16198  2D6B  082A               	movf	(?___fladd+1)^(0+128),w
 16199  2D6C  00CA               	movwf	(_calculateCurrent$2204+1)^(0+128)
 16200  2D6D  0829               	movf	?___fladd^(0+128),w
 16201  2D6E  00C9               	movwf	_calculateCurrent$2204^(0+128)
 16202                           
 16203                           ;adc.c: 18: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16204  2D6F  303D               	movlw	61
 16205  2D70  0020               	movlb	0	; select bank0
 16206  2D71  00D9               	movwf	___fldiv@a+3
 16207  2D72  3021               	movlw	33
 16208  2D73  00D8               	movwf	___fldiv@a+2
 16209  2D74  3061               	movlw	97
 16210  2D75  00D7               	movwf	___fldiv@a+1
 16211  2D76  30E5               	movlw	229
 16212  2D77  00D6               	movwf	___fldiv@a
 16213  2D78  0021               	movlb	1	; select bank1
 16214  2D79  084C               	movf	(_calculateCurrent$2204+3)^(0+128),w
 16215  2D7A  0020               	movlb	0	; select bank0
 16216  2D7B  00DD               	movwf	___fldiv@b+3
 16217  2D7C  0021               	movlb	1	; select bank1
 16218  2D7D  084B               	movf	(_calculateCurrent$2204+2)^(0+128),w
 16219  2D7E  0020               	movlb	0	; select bank0
 16220  2D7F  00DC               	movwf	___fldiv@b+2
 16221  2D80  0021               	movlb	1	; select bank1
 16222  2D81  084A               	movf	(_calculateCurrent$2204+1)^(0+128),w
 16223  2D82  0020               	movlb	0	; select bank0
 16224  2D83  00DB               	movwf	___fldiv@b+1
 16225  2D84  0021               	movlb	1	; select bank1
 16226  2D85  0849               	movf	_calculateCurrent$2204^(0+128),w
 16227  2D86  0020               	movlb	0	; select bank0
 16228  2D87  00DA               	movwf	___fldiv@b
 16229  2D88  3190  2004         	fcall	___fldiv
 16230  2D8A  0020               	movlb	0	; select bank0
 16231  2D8B  0859               	movf	?___fldiv+3,w
 16232  2D8C  0021               	movlb	1	; select bank1
 16233  2D8D  00C8               	movwf	(calculateCurrent@curr+3)^(0+128)
 16234  2D8E  0020               	movlb	0	; select bank0
 16235  2D8F  0858               	movf	?___fldiv+2,w
 16236  2D90  0021               	movlb	1	; select bank1
 16237  2D91  00C7               	movwf	(calculateCurrent@curr+2)^(0+128)
 16238  2D92  0020               	movlb	0	; select bank0
 16239  2D93  0857               	movf	?___fldiv+1,w
 16240  2D94  0021               	movlb	1	; select bank1
 16241  2D95  00C6               	movwf	(calculateCurrent@curr+1)^(0+128)
 16242  2D96  0020               	movlb	0	; select bank0
 16243  2D97  0856               	movf	?___fldiv,w
 16244  2D98  0021               	movlb	1	; select bank1
 16245  2D99  00C5               	movwf	calculateCurrent@curr^(0+128)
 16246                           
 16247                           ;adc.c: 19: return curr;
 16248  2D9A  0848               	movf	(calculateCurrent@curr+3)^(0+128),w
 16249  2D9B  00C4               	movwf	(?_calculateCurrent+3)^(0+128)
 16250  2D9C  0847               	movf	(calculateCurrent@curr+2)^(0+128),w
 16251  2D9D  00C3               	movwf	(?_calculateCurrent+2)^(0+128)
 16252  2D9E  0846               	movf	(calculateCurrent@curr+1)^(0+128),w
 16253  2D9F  00C2               	movwf	(?_calculateCurrent+1)^(0+128)
 16254  2DA0  0845               	movf	calculateCurrent@curr^(0+128),w
 16255  2DA1  00C1               	movwf	?_calculateCurrent^(0+128)
 16256  2DA2  0008               	return
 16257  2DA3                     __end_of_calculateCurrent:	
 16258                           
 16259                           	psect	text34
 16260  0B3E                     __ptext34:	
 16261 ;; *************** function ___flmul *****************
 16262 ;; Defined at:
 16263 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;  b               4   28[BANK0 ] float 
 16266 ;;  a               4   32[BANK0 ] float 
 16267 ;; Auto vars:     Size  Location     Type
 16268 ;;  prod            4   48[BANK0 ] struct .
 16269 ;;  grs             4   42[BANK0 ] unsigned long 
 16270 ;;  temp            2   52[BANK0 ] struct .
 16271 ;;  bexp            1   47[BANK0 ] unsigned char 
 16272 ;;  aexp            1   46[BANK0 ] unsigned char 
 16273 ;;  sign            1   41[BANK0 ] unsigned char 
 16274 ;; Return value:  Size  Location     Type
 16275 ;;                  4   28[BANK0 ] unsigned char 
 16276 ;; Registers used:
 16277 ;;		wreg, status,2, status,0, pclath, cstack
 16278 ;; Tracked objects:
 16279 ;;		On entry : 0/0
 16280 ;;		On exit  : 0/0
 16281 ;;		Unchanged: 0/0
 16282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16283 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16284 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16285 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16286 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16287 ;;Total ram usage:       26 bytes
 16288 ;; Hardware stack levels used:    1
 16289 ;; Hardware stack levels required when called:    3
 16290 ;; This function calls:
 16291 ;;		__Umul8_16
 16292 ;; This function is called by:
 16293 ;;		_main
 16294 ;;		_calculateTemp
 16295 ;;		_calculateCurrent
 16296 ;;		_writeSOC
 16297 ;;		_measureVoltages
 16298 ;;		_fround
 16299 ;;		_scale
 16300 ;;		_sprintf
 16301 ;; This function uses a non-reentrant model
 16302 ;;
 16303                           
 16304                           
 16305                           ;psect for function ___flmul
 16306  0B3E                     ___flmul:	
 16307                           
 16308                           ;incstack = 0
 16309                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16310  0B3E  0020               	movlb	0	; select bank0
 16311  0B3F  083F               	movf	___flmul@b+3,w
 16312  0B40  3980               	andlw	128
 16313  0B41  00C4               	movwf	??___flmul
 16314  0B42  0844               	movf	??___flmul,w
 16315  0B43  00C9               	movwf	___flmul@sign
 16316  0B44  353F               	lslf	___flmul@b+3,w
 16317  0B45  00C4               	movwf	??___flmul
 16318  0B46  0844               	movf	??___flmul,w
 16319  0B47  00CF               	movwf	___flmul@bexp
 16320  0B48  1BBE               	btfsc	___flmul@b+2,7
 16321  0B49  144F               	bsf	___flmul@bexp,0
 16322  0B4A  084F               	movf	___flmul@bexp,w
 16323  0B4B  1903               	btfsc	3,2
 16324  0B4C  2B5A               	goto	l4512
 16325  0B4D  0A4F               	incf	___flmul@bexp,w
 16326  0B4E  1D03               	btfss	3,2
 16327  0B4F  2B58               	goto	l4510
 16328  0B50  3000               	movlw	0
 16329  0B51  00BF               	movwf	___flmul@b+3
 16330  0B52  3000               	movlw	0
 16331  0B53  00BE               	movwf	___flmul@b+2
 16332  0B54  3000               	movlw	0
 16333  0B55  00BD               	movwf	___flmul@b+1
 16334  0B56  3000               	movlw	0
 16335  0B57  00BC               	movwf	___flmul@b
 16336  0B58                     l4510:	
 16337  0B58  17BE               	bsf	___flmul@b+2,7
 16338  0B59  2B62               	goto	l4514
 16339  0B5A                     l4512:	
 16340  0B5A  3000               	movlw	0
 16341  0B5B  00BF               	movwf	___flmul@b+3
 16342  0B5C  3000               	movlw	0
 16343  0B5D  00BE               	movwf	___flmul@b+2
 16344  0B5E  3000               	movlw	0
 16345  0B5F  00BD               	movwf	___flmul@b+1
 16346  0B60  3000               	movlw	0
 16347  0B61  00BC               	movwf	___flmul@b
 16348  0B62                     l4514:	
 16349  0B62  0843               	movf	___flmul@a+3,w
 16350  0B63  3980               	andlw	128
 16351  0B64  00C4               	movwf	??___flmul
 16352  0B65  0844               	movf	??___flmul,w
 16353  0B66  06C9               	xorwf	___flmul@sign,f
 16354  0B67  3543               	lslf	___flmul@a+3,w
 16355  0B68  00C4               	movwf	??___flmul
 16356  0B69  0844               	movf	??___flmul,w
 16357  0B6A  00CE               	movwf	___flmul@aexp
 16358  0B6B  1BC2               	btfsc	___flmul@a+2,7
 16359  0B6C  144E               	bsf	___flmul@aexp,0
 16360  0B6D  084E               	movf	___flmul@aexp,w
 16361  0B6E  1903               	btfsc	3,2
 16362  0B6F  2B7D               	goto	l4530
 16363  0B70  0A4E               	incf	___flmul@aexp,w
 16364  0B71  1D03               	btfss	3,2
 16365  0B72  2B7B               	goto	l4528
 16366  0B73  3000               	movlw	0
 16367  0B74  00C3               	movwf	___flmul@a+3
 16368  0B75  3000               	movlw	0
 16369  0B76  00C2               	movwf	___flmul@a+2
 16370  0B77  3000               	movlw	0
 16371  0B78  00C1               	movwf	___flmul@a+1
 16372  0B79  3000               	movlw	0
 16373  0B7A  00C0               	movwf	___flmul@a
 16374  0B7B                     l4528:	
 16375  0B7B  17C2               	bsf	___flmul@a+2,7
 16376  0B7C  2B85               	goto	l4532
 16377  0B7D                     l4530:	
 16378  0B7D  3000               	movlw	0
 16379  0B7E  00C3               	movwf	___flmul@a+3
 16380  0B7F  3000               	movlw	0
 16381  0B80  00C2               	movwf	___flmul@a+2
 16382  0B81  3000               	movlw	0
 16383  0B82  00C1               	movwf	___flmul@a+1
 16384  0B83  3000               	movlw	0
 16385  0B84  00C0               	movwf	___flmul@a
 16386  0B85                     l4532:	
 16387  0B85  084E               	movf	___flmul@aexp,w
 16388  0B86  1D03               	btfss	3,2
 16389  0B87  084F               	movf	___flmul@bexp,w
 16390  0B88  1D03               	btfss	3,2
 16391  0B89  2B93               	goto	l4540
 16392  0B8A  3000               	movlw	0
 16393  0B8B  00BF               	movwf	?___flmul+3
 16394  0B8C  3000               	movlw	0
 16395  0B8D  00BE               	movwf	?___flmul+2
 16396  0B8E  3000               	movlw	0
 16397  0B8F  00BD               	movwf	?___flmul+1
 16398  0B90  3000               	movlw	0
 16399  0B91  00BC               	movwf	?___flmul
 16400  0B92  0008               	return
 16401  0B93                     l4540:	
 16402  0B93  083C               	movf	___flmul@b,w
 16403  0B94  00C4               	movwf	??___flmul
 16404  0B95  0844               	movf	??___flmul,w
 16405  0B96  00F3               	movwf	__Umul8_16@multiplicand
 16406  0B97  0842               	movf	___flmul@a+2,w
 16407  0B98  31B7  2719  318B   	fcall	__Umul8_16
 16408  0B9B  0874               	movf	?__Umul8_16+1,w
 16409  0B9C  0020               	movlb	0	; select bank0
 16410  0B9D  00D5               	movwf	___flmul@temp+1
 16411  0B9E  0873               	movf	?__Umul8_16,w
 16412  0B9F  00D4               	movwf	___flmul@temp
 16413  0BA0  0854               	movf	___flmul@temp,w
 16414  0BA1  00C4               	movwf	??___flmul
 16415  0BA2  01C5               	clrf	??___flmul+1
 16416  0BA3  01C6               	clrf	??___flmul+2
 16417  0BA4  01C7               	clrf	??___flmul+3
 16418  0BA5  0847               	movf	??___flmul+3,w
 16419  0BA6  00CD               	movwf	___flmul@grs+3
 16420  0BA7  0846               	movf	??___flmul+2,w
 16421  0BA8  00CC               	movwf	___flmul@grs+2
 16422  0BA9  0845               	movf	??___flmul+1,w
 16423  0BAA  00CB               	movwf	___flmul@grs+1
 16424  0BAB  0844               	movf	??___flmul,w
 16425  0BAC  00CA               	movwf	___flmul@grs
 16426  0BAD  0855               	movf	___flmul@temp+1,w
 16427  0BAE  00C4               	movwf	??___flmul
 16428  0BAF  01C5               	clrf	??___flmul+1
 16429  0BB0  01C6               	clrf	??___flmul+2
 16430  0BB1  01C7               	clrf	??___flmul+3
 16431  0BB2  0847               	movf	??___flmul+3,w
 16432  0BB3  00D3               	movwf	___flmul@prod+3
 16433  0BB4  0846               	movf	??___flmul+2,w
 16434  0BB5  00D2               	movwf	___flmul@prod+2
 16435  0BB6  0845               	movf	??___flmul+1,w
 16436  0BB7  00D1               	movwf	___flmul@prod+1
 16437  0BB8  0844               	movf	??___flmul,w
 16438  0BB9  00D0               	movwf	___flmul@prod
 16439  0BBA  083D               	movf	___flmul@b+1,w
 16440  0BBB  00C4               	movwf	??___flmul
 16441  0BBC  0844               	movf	??___flmul,w
 16442  0BBD  00F3               	movwf	__Umul8_16@multiplicand
 16443  0BBE  0841               	movf	___flmul@a+1,w
 16444  0BBF  31B7  2719  318B   	fcall	__Umul8_16
 16445  0BC2  0874               	movf	?__Umul8_16+1,w
 16446  0BC3  0020               	movlb	0	; select bank0
 16447  0BC4  00D5               	movwf	___flmul@temp+1
 16448  0BC5  0873               	movf	?__Umul8_16,w
 16449  0BC6  00D4               	movwf	___flmul@temp
 16450  0BC7  0854               	movf	___flmul@temp,w
 16451  0BC8  00C4               	movwf	??___flmul
 16452  0BC9  01C5               	clrf	??___flmul+1
 16453  0BCA  01C6               	clrf	??___flmul+2
 16454  0BCB  01C7               	clrf	??___flmul+3
 16455  0BCC  0844               	movf	??___flmul,w
 16456  0BCD  07CA               	addwf	___flmul@grs,f
 16457  0BCE  0845               	movf	??___flmul+1,w
 16458  0BCF  3DCB               	addwfc	___flmul@grs+1,f
 16459  0BD0  0846               	movf	??___flmul+2,w
 16460  0BD1  3DCC               	addwfc	___flmul@grs+2,f
 16461  0BD2  0847               	movf	??___flmul+3,w
 16462  0BD3  3DCD               	addwfc	___flmul@grs+3,f
 16463  0BD4  0855               	movf	___flmul@temp+1,w
 16464  0BD5  00C4               	movwf	??___flmul
 16465  0BD6  01C5               	clrf	??___flmul+1
 16466  0BD7  01C6               	clrf	??___flmul+2
 16467  0BD8  01C7               	clrf	??___flmul+3
 16468  0BD9  0844               	movf	??___flmul,w
 16469  0BDA  07D0               	addwf	___flmul@prod,f
 16470  0BDB  0845               	movf	??___flmul+1,w
 16471  0BDC  3DD1               	addwfc	___flmul@prod+1,f
 16472  0BDD  0846               	movf	??___flmul+2,w
 16473  0BDE  3DD2               	addwfc	___flmul@prod+2,f
 16474  0BDF  0847               	movf	??___flmul+3,w
 16475  0BE0  3DD3               	addwfc	___flmul@prod+3,f
 16476  0BE1  083E               	movf	___flmul@b+2,w
 16477  0BE2  00C4               	movwf	??___flmul
 16478  0BE3  0844               	movf	??___flmul,w
 16479  0BE4  00F3               	movwf	__Umul8_16@multiplicand
 16480  0BE5  0840               	movf	___flmul@a,w
 16481  0BE6  31B7  2719  318B   	fcall	__Umul8_16
 16482  0BE9  0874               	movf	?__Umul8_16+1,w
 16483  0BEA  0020               	movlb	0	; select bank0
 16484  0BEB  00D5               	movwf	___flmul@temp+1
 16485  0BEC  0873               	movf	?__Umul8_16,w
 16486  0BED  00D4               	movwf	___flmul@temp
 16487  0BEE  0854               	movf	___flmul@temp,w
 16488  0BEF  00C4               	movwf	??___flmul
 16489  0BF0  01C5               	clrf	??___flmul+1
 16490  0BF1  01C6               	clrf	??___flmul+2
 16491  0BF2  01C7               	clrf	??___flmul+3
 16492  0BF3  0844               	movf	??___flmul,w
 16493  0BF4  07CA               	addwf	___flmul@grs,f
 16494  0BF5  0845               	movf	??___flmul+1,w
 16495  0BF6  3DCB               	addwfc	___flmul@grs+1,f
 16496  0BF7  0846               	movf	??___flmul+2,w
 16497  0BF8  3DCC               	addwfc	___flmul@grs+2,f
 16498  0BF9  0847               	movf	??___flmul+3,w
 16499  0BFA  3DCD               	addwfc	___flmul@grs+3,f
 16500  0BFB  0855               	movf	___flmul@temp+1,w
 16501  0BFC  00C4               	movwf	??___flmul
 16502  0BFD  01C5               	clrf	??___flmul+1
 16503  0BFE  01C6               	clrf	??___flmul+2
 16504  0BFF  01C7               	clrf	??___flmul+3
 16505  0C00  0844               	movf	??___flmul,w
 16506  0C01  07D0               	addwf	___flmul@prod,f
 16507  0C02  0845               	movf	??___flmul+1,w
 16508  0C03  3DD1               	addwfc	___flmul@prod+1,f
 16509  0C04  0846               	movf	??___flmul+2,w
 16510  0C05  3DD2               	addwfc	___flmul@prod+2,f
 16511  0C06  0847               	movf	??___flmul+3,w
 16512  0C07  3DD3               	addwfc	___flmul@prod+3,f
 16513  0C08  3008               	movlw	8
 16514  0C09                     u5005:	
 16515  0C09  35CA               	lslf	___flmul@grs,f
 16516  0C0A  0DCB               	rlf	___flmul@grs+1,f
 16517  0C0B  0DCC               	rlf	___flmul@grs+2,f
 16518  0C0C  0DCD               	rlf	___flmul@grs+3,f
 16519  0C0D  0B89               	decfsz	9,f
 16520  0C0E  2C09               	goto	u5005
 16521  0C0F  083D               	movf	___flmul@b+1,w
 16522  0C10  00C4               	movwf	??___flmul
 16523  0C11  0844               	movf	??___flmul,w
 16524  0C12  00F3               	movwf	__Umul8_16@multiplicand
 16525  0C13  0840               	movf	___flmul@a,w
 16526  0C14  31B7  2719  318B   	fcall	__Umul8_16
 16527  0C17  0874               	movf	?__Umul8_16+1,w
 16528  0C18  0020               	movlb	0	; select bank0
 16529  0C19  00D5               	movwf	___flmul@temp+1
 16530  0C1A  0873               	movf	?__Umul8_16,w
 16531  0C1B  00D4               	movwf	___flmul@temp
 16532  0C1C  0854               	movf	___flmul@temp,w
 16533  0C1D  07CA               	addwf	___flmul@grs,f
 16534  0C1E  0855               	movf	___flmul@temp+1,w
 16535  0C1F  3DCB               	addwfc	___flmul@grs+1,f
 16536  0C20  3000               	movlw	0
 16537  0C21  3DCC               	addwfc	___flmul@grs+2,f
 16538  0C22  3DCD               	addwfc	___flmul@grs+3,f
 16539  0C23  083C               	movf	___flmul@b,w
 16540  0C24  00C4               	movwf	??___flmul
 16541  0C25  0844               	movf	??___flmul,w
 16542  0C26  00F3               	movwf	__Umul8_16@multiplicand
 16543  0C27  0841               	movf	___flmul@a+1,w
 16544  0C28  31B7  2719  318B   	fcall	__Umul8_16
 16545  0C2B  0874               	movf	?__Umul8_16+1,w
 16546  0C2C  0020               	movlb	0	; select bank0
 16547  0C2D  00D5               	movwf	___flmul@temp+1
 16548  0C2E  0873               	movf	?__Umul8_16,w
 16549  0C2F  00D4               	movwf	___flmul@temp
 16550  0C30  0854               	movf	___flmul@temp,w
 16551  0C31  07CA               	addwf	___flmul@grs,f
 16552  0C32  0855               	movf	___flmul@temp+1,w
 16553  0C33  3DCB               	addwfc	___flmul@grs+1,f
 16554  0C34  3000               	movlw	0
 16555  0C35  3DCC               	addwfc	___flmul@grs+2,f
 16556  0C36  3DCD               	addwfc	___flmul@grs+3,f
 16557  0C37  3008               	movlw	8
 16558  0C38                     u5015:	
 16559  0C38  35CA               	lslf	___flmul@grs,f
 16560  0C39  0DCB               	rlf	___flmul@grs+1,f
 16561  0C3A  0DCC               	rlf	___flmul@grs+2,f
 16562  0C3B  0DCD               	rlf	___flmul@grs+3,f
 16563  0C3C  0B89               	decfsz	9,f
 16564  0C3D  2C38               	goto	u5015
 16565  0C3E  083C               	movf	___flmul@b,w
 16566  0C3F  00C4               	movwf	??___flmul
 16567  0C40  0844               	movf	??___flmul,w
 16568  0C41  00F3               	movwf	__Umul8_16@multiplicand
 16569  0C42  0840               	movf	___flmul@a,w
 16570  0C43  31B7  2719  318B   	fcall	__Umul8_16
 16571  0C46  0874               	movf	?__Umul8_16+1,w
 16572  0C47  0020               	movlb	0	; select bank0
 16573  0C48  00D5               	movwf	___flmul@temp+1
 16574  0C49  0873               	movf	?__Umul8_16,w
 16575  0C4A  00D4               	movwf	___flmul@temp
 16576  0C4B  0854               	movf	___flmul@temp,w
 16577  0C4C  07CA               	addwf	___flmul@grs,f
 16578  0C4D  0855               	movf	___flmul@temp+1,w
 16579  0C4E  3DCB               	addwfc	___flmul@grs+1,f
 16580  0C4F  3000               	movlw	0
 16581  0C50  3DCC               	addwfc	___flmul@grs+2,f
 16582  0C51  3DCD               	addwfc	___flmul@grs+3,f
 16583  0C52  083D               	movf	___flmul@b+1,w
 16584  0C53  00C4               	movwf	??___flmul
 16585  0C54  0844               	movf	??___flmul,w
 16586  0C55  00F3               	movwf	__Umul8_16@multiplicand
 16587  0C56  0842               	movf	___flmul@a+2,w
 16588  0C57  31B7  2719  318B   	fcall	__Umul8_16
 16589  0C5A  0874               	movf	?__Umul8_16+1,w
 16590  0C5B  0020               	movlb	0	; select bank0
 16591  0C5C  00D5               	movwf	___flmul@temp+1
 16592  0C5D  0873               	movf	?__Umul8_16,w
 16593  0C5E  00D4               	movwf	___flmul@temp
 16594  0C5F  0854               	movf	___flmul@temp,w
 16595  0C60  07D0               	addwf	___flmul@prod,f
 16596  0C61  0855               	movf	___flmul@temp+1,w
 16597  0C62  3DD1               	addwfc	___flmul@prod+1,f
 16598  0C63  3000               	movlw	0
 16599  0C64  3DD2               	addwfc	___flmul@prod+2,f
 16600  0C65  3DD3               	addwfc	___flmul@prod+3,f
 16601  0C66  083E               	movf	___flmul@b+2,w
 16602  0C67  00C4               	movwf	??___flmul
 16603  0C68  0844               	movf	??___flmul,w
 16604  0C69  00F3               	movwf	__Umul8_16@multiplicand
 16605  0C6A  0841               	movf	___flmul@a+1,w
 16606  0C6B  31B7  2719  318B   	fcall	__Umul8_16
 16607  0C6E  0874               	movf	?__Umul8_16+1,w
 16608  0C6F  0020               	movlb	0	; select bank0
 16609  0C70  00D5               	movwf	___flmul@temp+1
 16610  0C71  0873               	movf	?__Umul8_16,w
 16611  0C72  00D4               	movwf	___flmul@temp
 16612  0C73  0854               	movf	___flmul@temp,w
 16613  0C74  07D0               	addwf	___flmul@prod,f
 16614  0C75  0855               	movf	___flmul@temp+1,w
 16615  0C76  3DD1               	addwfc	___flmul@prod+1,f
 16616  0C77  3000               	movlw	0
 16617  0C78  3DD2               	addwfc	___flmul@prod+2,f
 16618  0C79  3DD3               	addwfc	___flmul@prod+3,f
 16619  0C7A  083E               	movf	___flmul@b+2,w
 16620  0C7B  00C4               	movwf	??___flmul
 16621  0C7C  0844               	movf	??___flmul,w
 16622  0C7D  00F3               	movwf	__Umul8_16@multiplicand
 16623  0C7E  0842               	movf	___flmul@a+2,w
 16624  0C7F  31B7  2719  318B   	fcall	__Umul8_16
 16625  0C82  0874               	movf	?__Umul8_16+1,w
 16626  0C83  0020               	movlb	0	; select bank0
 16627  0C84  00D5               	movwf	___flmul@temp+1
 16628  0C85  0873               	movf	?__Umul8_16,w
 16629  0C86  00D4               	movwf	___flmul@temp
 16630  0C87  0854               	movf	___flmul@temp,w
 16631  0C88  00C4               	movwf	??___flmul
 16632  0C89  0855               	movf	___flmul@temp+1,w
 16633  0C8A  00C5               	movwf	??___flmul+1
 16634  0C8B  01C6               	clrf	??___flmul+2
 16635  0C8C  01C7               	clrf	??___flmul+3
 16636  0C8D  3008               	movlw	8
 16637  0C8E                     u5025:	
 16638  0C8E  35C4               	lslf	??___flmul,f
 16639  0C8F  0DC5               	rlf	??___flmul+1,f
 16640  0C90  0DC6               	rlf	??___flmul+2,f
 16641  0C91  0DC7               	rlf	??___flmul+3,f
 16642  0C92  0B89               	decfsz	9,f
 16643  0C93  2C8E               	goto	u5025
 16644  0C94  0844               	movf	??___flmul,w
 16645  0C95  07D0               	addwf	___flmul@prod,f
 16646  0C96  0845               	movf	??___flmul+1,w
 16647  0C97  3DD1               	addwfc	___flmul@prod+1,f
 16648  0C98  0846               	movf	??___flmul+2,w
 16649  0C99  3DD2               	addwfc	___flmul@prod+2,f
 16650  0C9A  0847               	movf	??___flmul+3,w
 16651  0C9B  3DD3               	addwfc	___flmul@prod+3,f
 16652  0C9C  084A               	movf	___flmul@grs,w
 16653  0C9D  00C4               	movwf	??___flmul
 16654  0C9E  084B               	movf	___flmul@grs+1,w
 16655  0C9F  00C5               	movwf	??___flmul+1
 16656  0CA0  084C               	movf	___flmul@grs+2,w
 16657  0CA1  00C6               	movwf	??___flmul+2
 16658  0CA2  084D               	movf	___flmul@grs+3,w
 16659  0CA3  00C7               	movwf	??___flmul+3
 16660  0CA4  3018               	movlw	24
 16661  0CA5                     u5035:	
 16662  0CA5  36C7               	lsrf	??___flmul+3,f
 16663  0CA6  0CC6               	rrf	??___flmul+2,f
 16664  0CA7  0CC5               	rrf	??___flmul+1,f
 16665  0CA8  0CC4               	rrf	??___flmul,f
 16666  0CA9  0B89               	decfsz	9,f
 16667  0CAA  2CA5               	goto	u5035
 16668  0CAB  0844               	movf	??___flmul,w
 16669  0CAC  07D0               	addwf	___flmul@prod,f
 16670  0CAD  0845               	movf	??___flmul+1,w
 16671  0CAE  3DD1               	addwfc	___flmul@prod+1,f
 16672  0CAF  0846               	movf	??___flmul+2,w
 16673  0CB0  3DD2               	addwfc	___flmul@prod+2,f
 16674  0CB1  0847               	movf	??___flmul+3,w
 16675  0CB2  3DD3               	addwfc	___flmul@prod+3,f
 16676  0CB3  3008               	movlw	8
 16677  0CB4                     u5045:	
 16678  0CB4  35CA               	lslf	___flmul@grs,f
 16679  0CB5  0DCB               	rlf	___flmul@grs+1,f
 16680  0CB6  0DCC               	rlf	___flmul@grs+2,f
 16681  0CB7  0DCD               	rlf	___flmul@grs+3,f
 16682  0CB8  0B89               	decfsz	9,f
 16683  0CB9  2CB4               	goto	u5045
 16684  0CBA  084F               	movf	___flmul@bexp,w
 16685  0CBB  074E               	addwf	___flmul@aexp,w
 16686  0CBC  00C4               	movwf	??___flmul
 16687  0CBD  01C5               	clrf	??___flmul+1
 16688  0CBE  0DC5               	rlf	??___flmul+1,f
 16689  0CBF  0844               	movf	??___flmul,w
 16690  0CC0  3E82               	addlw	130
 16691  0CC1  00D4               	movwf	___flmul@temp
 16692  0CC2  30FF               	movlw	255
 16693  0CC3  3D45               	addwfc	??___flmul+1,w
 16694  0CC4  00D5               	movwf	___flmul@temp+1
 16695  0CC5                     l4592:	
 16696  0CC5  1BD2               	btfsc	___flmul@prod+2,7
 16697  0CC6  2CDC               	goto	l4594
 16698  0CC7  3001               	movlw	1
 16699  0CC8                     u5055:	
 16700  0CC8  35D0               	lslf	___flmul@prod,f
 16701  0CC9  0DD1               	rlf	___flmul@prod+1,f
 16702  0CCA  0DD2               	rlf	___flmul@prod+2,f
 16703  0CCB  0DD3               	rlf	___flmul@prod+3,f
 16704  0CCC  0B89               	decfsz	9,f
 16705  0CCD  2CC8               	goto	u5055
 16706  0CCE  1BCD               	btfsc	___flmul@grs+3,7
 16707  0CCF  1450               	bsf	___flmul@prod,0
 16708  0CD0  3001               	movlw	1
 16709  0CD1                     u5075:	
 16710  0CD1  35CA               	lslf	___flmul@grs,f
 16711  0CD2  0DCB               	rlf	___flmul@grs+1,f
 16712  0CD3  0DCC               	rlf	___flmul@grs+2,f
 16713  0CD4  0DCD               	rlf	___flmul@grs+3,f
 16714  0CD5  0B89               	decfsz	9,f
 16715  0CD6  2CD1               	goto	u5075
 16716  0CD7  30FF               	movlw	255
 16717  0CD8  07D4               	addwf	___flmul@temp,f
 16718  0CD9  30FF               	movlw	255
 16719  0CDA  3DD5               	addwfc	___flmul@temp+1,f
 16720  0CDB  2CC5               	goto	l4592
 16721  0CDC                     l4594:	
 16722  0CDC  01CE               	clrf	___flmul@aexp
 16723  0CDD  1FCD               	btfss	___flmul@grs+3,7
 16724  0CDE  2CF5               	goto	l4604
 16725  0CDF  30FF               	movlw	255
 16726  0CE0  054A               	andwf	___flmul@grs,w
 16727  0CE1  00C4               	movwf	??___flmul
 16728  0CE2  30FF               	movlw	255
 16729  0CE3  054B               	andwf	___flmul@grs+1,w
 16730  0CE4  00C5               	movwf	??___flmul+1
 16731  0CE5  30FF               	movlw	255
 16732  0CE6  054C               	andwf	___flmul@grs+2,w
 16733  0CE7  00C6               	movwf	??___flmul+2
 16734  0CE8  307F               	movlw	127
 16735  0CE9  054D               	andwf	___flmul@grs+3,w
 16736  0CEA  00C7               	movwf	??___flmul+3
 16737  0CEB  0847               	movf	??___flmul+3,w
 16738  0CEC  0446               	iorwf	??___flmul+2,w
 16739  0CED  0445               	iorwf	??___flmul+1,w
 16740  0CEE  0444               	iorwf	??___flmul,w
 16741  0CEF  1D03               	btfss	3,2
 16742  0CF0  2CF3               	goto	l4602
 16743  0CF1  1C50               	btfss	___flmul@prod,0
 16744  0CF2  2CF5               	goto	l4604
 16745  0CF3                     l4602:	
 16746  0CF3  01CE               	clrf	___flmul@aexp
 16747  0CF4  0ACE               	incf	___flmul@aexp,f
 16748  0CF5                     l4604:	
 16749  0CF5  084E               	movf	___flmul@aexp,w
 16750  0CF6  1903               	btfsc	3,2
 16751  0CF7  2D1E               	goto	l4614
 16752  0CF8  3001               	movlw	1
 16753  0CF9  07D0               	addwf	___flmul@prod,f
 16754  0CFA  3000               	movlw	0
 16755  0CFB  3DD1               	addwfc	___flmul@prod+1,f
 16756  0CFC  3000               	movlw	0
 16757  0CFD  3DD2               	addwfc	___flmul@prod+2,f
 16758  0CFE  3000               	movlw	0
 16759  0CFF  3DD3               	addwfc	___flmul@prod+3,f
 16760  0D00  1C53               	btfss	___flmul@prod+3,0
 16761  0D01  2D1E               	goto	l4614
 16762  0D02  0850               	movf	___flmul@prod,w
 16763  0D03  00C4               	movwf	??___flmul
 16764  0D04  0851               	movf	___flmul@prod+1,w
 16765  0D05  00C5               	movwf	??___flmul+1
 16766  0D06  0852               	movf	___flmul@prod+2,w
 16767  0D07  00C6               	movwf	??___flmul+2
 16768  0D08  0853               	movf	___flmul@prod+3,w
 16769  0D09  00C7               	movwf	??___flmul+3
 16770  0D0A  3001               	movlw	1
 16771  0D0B  00C8               	movwf	??___flmul+4
 16772  0D0C                     u5145:	
 16773  0D0C  37C7               	asrf	??___flmul+3,f
 16774  0D0D  0CC6               	rrf	??___flmul+2,f
 16775  0D0E  0CC5               	rrf	??___flmul+1,f
 16776  0D0F  0CC4               	rrf	??___flmul,f
 16777  0D10  0BC8               	decfsz	??___flmul+4,f
 16778  0D11  2D0C               	goto	u5145
 16779  0D12  0847               	movf	??___flmul+3,w
 16780  0D13  00D3               	movwf	___flmul@prod+3
 16781  0D14  0846               	movf	??___flmul+2,w
 16782  0D15  00D2               	movwf	___flmul@prod+2
 16783  0D16  0845               	movf	??___flmul+1,w
 16784  0D17  00D1               	movwf	___flmul@prod+1
 16785  0D18  0844               	movf	??___flmul,w
 16786  0D19  00D0               	movwf	___flmul@prod
 16787  0D1A  3001               	movlw	1
 16788  0D1B  07D4               	addwf	___flmul@temp,f
 16789  0D1C  3000               	movlw	0
 16790  0D1D  3DD5               	addwfc	___flmul@temp+1,f
 16791  0D1E                     l4614:	
 16792  0D1E  0855               	movf	___flmul@temp+1,w
 16793  0D1F  3A80               	xorlw	128
 16794  0D20  00C4               	movwf	??___flmul
 16795  0D21  3080               	movlw	128
 16796  0D22  0244               	subwf	??___flmul,w
 16797  0D23  1D03               	skipz
 16798  0D24  2D27               	goto	u5155
 16799  0D25  30FF               	movlw	255
 16800  0D26  0254               	subwf	___flmul@temp,w
 16801  0D27                     u5155:	
 16802  0D27  1C03               	skipc
 16803  0D28  2D33               	goto	l4618
 16804  0D29  307F               	movlw	127
 16805  0D2A  0020               	movlb	0	; select bank0
 16806  0D2B  00D3               	movwf	___flmul@prod+3
 16807  0D2C  3080               	movlw	128
 16808  0D2D  00D2               	movwf	___flmul@prod+2
 16809  0D2E  3000               	movlw	0
 16810  0D2F  00D1               	movwf	___flmul@prod+1
 16811  0D30  3000               	movlw	0
 16812  0D31  00D0               	movwf	___flmul@prod
 16813  0D32  2D5D               	goto	l1404
 16814  0D33                     l4618:	
 16815  0D33  0020               	movlb	0	; select bank0
 16816  0D34  0855               	movf	___flmul@temp+1,w
 16817  0D35  3A80               	xorlw	128
 16818  0D36  00C4               	movwf	??___flmul
 16819  0D37  3080               	movlw	128
 16820  0D38  0244               	subwf	??___flmul,w
 16821  0D39  1D03               	skipz
 16822  0D3A  2D3D               	goto	u5165
 16823  0D3B  3001               	movlw	1
 16824  0D3C  0254               	subwf	___flmul@temp,w
 16825  0D3D                     u5165:	
 16826  0D3D  1803               	skipnc
 16827  0D3E  2D4A               	goto	l4624
 16828  0D3F  3000               	movlw	0
 16829  0D40  0020               	movlb	0	; select bank0
 16830  0D41  00D3               	movwf	___flmul@prod+3
 16831  0D42  3000               	movlw	0
 16832  0D43  00D2               	movwf	___flmul@prod+2
 16833  0D44  3000               	movlw	0
 16834  0D45  00D1               	movwf	___flmul@prod+1
 16835  0D46  3000               	movlw	0
 16836  0D47  00D0               	movwf	___flmul@prod
 16837  0D48  01C9               	clrf	___flmul@sign
 16838  0D49  2D5D               	goto	l1404
 16839  0D4A                     l4624:	
 16840  0D4A  0020               	movlb	0	; select bank0
 16841  0D4B  0854               	movf	___flmul@temp,w
 16842  0D4C  00C4               	movwf	??___flmul
 16843  0D4D  0844               	movf	??___flmul,w
 16844  0D4E  00CF               	movwf	___flmul@bexp
 16845  0D4F  30FF               	movlw	255
 16846  0D50  05D0               	andwf	___flmul@prod,f
 16847  0D51  30FF               	movlw	255
 16848  0D52  05D1               	andwf	___flmul@prod+1,f
 16849  0D53  307F               	movlw	127
 16850  0D54  05D2               	andwf	___flmul@prod+2,f
 16851  0D55  3000               	movlw	0
 16852  0D56  05D3               	andwf	___flmul@prod+3,f
 16853  0D57  184F               	btfsc	___flmul@bexp,0
 16854  0D58  17D2               	bsf	___flmul@prod+2,7
 16855  0D59  364F               	lsrf	___flmul@bexp,w
 16856  0D5A  00C4               	movwf	??___flmul
 16857  0D5B  0844               	movf	??___flmul,w
 16858  0D5C  00D3               	movwf	___flmul@prod+3
 16859  0D5D                     l1404:	
 16860  0D5D  0849               	movf	___flmul@sign,w
 16861  0D5E  00C4               	movwf	??___flmul
 16862  0D5F  0844               	movf	??___flmul,w
 16863  0D60  04D3               	iorwf	___flmul@prod+3,f
 16864  0D61  0853               	movf	___flmul@prod+3,w
 16865  0D62  00BF               	movwf	?___flmul+3
 16866  0D63  0852               	movf	___flmul@prod+2,w
 16867  0D64  00BE               	movwf	?___flmul+2
 16868  0D65  0851               	movf	___flmul@prod+1,w
 16869  0D66  00BD               	movwf	?___flmul+1
 16870  0D67  0850               	movf	___flmul@prod,w
 16871  0D68  00BC               	movwf	?___flmul
 16872  0D69  0008               	return
 16873  0D6A                     __end_of___flmul:	
 16874                           
 16875                           	psect	text35
 16876  3719                     __ptext35:	
 16877 ;; *************** function __Umul8_16 *****************
 16878 ;; Defined at:
 16879 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  multiplier      1    wreg     unsigned char 
 16882 ;;  multiplicand    1    3[COMMON] unsigned char 
 16883 ;; Auto vars:     Size  Location     Type
 16884 ;;  multiplier      1    4[BANK0 ] unsigned char 
 16885 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 16886 ;;  product         2    0[BANK0 ] unsigned int 
 16887 ;; Return value:  Size  Location     Type
 16888 ;;                  2    3[COMMON] unsigned int 
 16889 ;; Registers used:
 16890 ;;		wreg, status,2, status,0
 16891 ;; Tracked objects:
 16892 ;;		On entry : 0/0
 16893 ;;		On exit  : 0/0
 16894 ;;		Unchanged: 0/0
 16895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16896 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16897 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16898 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16899 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16900 ;;Total ram usage:        9 bytes
 16901 ;; Hardware stack levels used:    1
 16902 ;; Hardware stack levels required when called:    2
 16903 ;; This function calls:
 16904 ;;		Nothing
 16905 ;; This function is called by:
 16906 ;;		___flmul
 16907 ;; This function uses a non-reentrant model
 16908 ;;
 16909                           
 16910                           
 16911                           ;psect for function __Umul8_16
 16912  3719                     __Umul8_16:	
 16913                           
 16914                           ;incstack = 0
 16915                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 16916                           ;__Umul8_16@multiplier stored from wreg
 16917  3719  0020               	movlb	0	; select bank0
 16918  371A  00A4               	movwf	__Umul8_16@multiplier
 16919  371B  01A0               	clrf	__Umul8_16@product
 16920  371C  01A1               	clrf	__Umul8_16@product+1
 16921  371D  0873               	movf	__Umul8_16@multiplicand,w
 16922  371E  00F5               	movwf	??__Umul8_16
 16923  371F  01F6               	clrf	??__Umul8_16+1
 16924  3720  0875               	movf	??__Umul8_16,w
 16925  3721  00A2               	movwf	__Umul8_16@word_mpld
 16926  3722  0876               	movf	??__Umul8_16+1,w
 16927  3723  00A3               	movwf	__Umul8_16@word_mpld+1
 16928  3724                     l4158:	
 16929  3724  1C24               	btfss	__Umul8_16@multiplier,0
 16930  3725  2F2A               	goto	l1430
 16931  3726  0822               	movf	__Umul8_16@word_mpld,w
 16932  3727  07A0               	addwf	__Umul8_16@product,f
 16933  3728  0823               	movf	__Umul8_16@word_mpld+1,w
 16934  3729  3DA1               	addwfc	__Umul8_16@product+1,f
 16935  372A                     l1430:	
 16936  372A  3001               	movlw	1
 16937  372B                     u4225:	
 16938  372B  35A2               	lslf	__Umul8_16@word_mpld,f
 16939  372C  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 16940  372D  0B89               	decfsz	9,f
 16941  372E  2F2B               	goto	u4225
 16942  372F  1003               	clrc
 16943  3730  0CA4               	rrf	__Umul8_16@multiplier,f
 16944  3731  0824               	movf	__Umul8_16@multiplier,w
 16945  3732  1D03               	btfss	3,2
 16946  3733  2F24               	goto	l4158
 16947  3734  0821               	movf	__Umul8_16@product+1,w
 16948  3735  00F4               	movwf	?__Umul8_16+1
 16949  3736  0820               	movf	__Umul8_16@product,w
 16950  3737  00F3               	movwf	?__Umul8_16
 16951  3738  0008               	return
 16952  3739                     __end_of__Umul8_16:	
 16953                           
 16954                           	psect	text36
 16955  29E7                     __ptext36:	
 16956 ;; *************** function _adcRead *****************
 16957 ;; Defined at:
 16958 ;;		line 48 in file "adc.c"
 16959 ;; Parameters:    Size  Location     Type
 16960 ;;  ch              1    wreg     unsigned char 
 16961 ;; Auto vars:     Size  Location     Type
 16962 ;;  ch              1   13[BANK0 ] unsigned char 
 16963 ;;  total           2   11[BANK0 ] int 
 16964 ;;  ansLow          2    9[BANK0 ] int 
 16965 ;;  ansHigh         2    7[BANK0 ] int 
 16966 ;; Return value:  Size  Location     Type
 16967 ;;                  2    3[COMMON] int 
 16968 ;; Registers used:
 16969 ;;		wreg, status,2, status,0
 16970 ;; Tracked objects:
 16971 ;;		On entry : 0/0
 16972 ;;		On exit  : 0/0
 16973 ;;		Unchanged: 0/0
 16974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16976 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16977 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16978 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16979 ;;Total ram usage:       16 bytes
 16980 ;; Hardware stack levels used:    1
 16981 ;; Hardware stack levels required when called:    2
 16982 ;; This function calls:
 16983 ;;		Nothing
 16984 ;; This function is called by:
 16985 ;;		_getCurrent
 16986 ;;		_getTemps
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990                           
 16991                           ;psect for function _adcRead
 16992  29E7                     _adcRead:	
 16993                           
 16994                           ;incstack = 0
 16995                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 16996                           ;adcRead@ch stored from wreg
 16997  29E7  0020               	movlb	0	; select bank0
 16998  29E8  00AD               	movwf	adcRead@ch
 16999                           
 17000                           ;adc.c: 49: ADCON0bits.CHS = ch;
 17001  29E9  082D               	movf	adcRead@ch,w
 17002  29EA  00A0               	movwf	??_adcRead
 17003  29EB  0DA0               	rlf	??_adcRead,f
 17004  29EC  0DA0               	rlf	??_adcRead,f
 17005  29ED  0021               	movlb	1	; select bank1
 17006  29EE  081D               	movf	29,w	;volatile
 17007  29EF  0020               	movlb	0	; select bank0
 17008  29F0  0620               	xorwf	??_adcRead,w
 17009  29F1  3983               	andlw	-125
 17010  29F2  0620               	xorwf	??_adcRead,w
 17011  29F3  0021               	movlb	1	; select bank1
 17012  29F4  009D               	movwf	29	;volatile
 17013                           
 17014                           ;adc.c: 50: ADCON0bits.ADON = 1;
 17015  29F5  141D               	bsf	29,0	;volatile
 17016                           
 17017                           ;adc.c: 52: _delay((unsigned long)((100)*(32000000/4000000.0)));
 17018  29F6  30A0               	movlw	160
 17019  29F7                     u11017:	
 17020  29F7  3200               	nop2
 17021  29F8  0B89               	decfsz	9,f
 17022  29F9  29F7               	goto	u11017
 17023                           
 17024                           ;adc.c: 53: ADCON0bits.GO = 1;
 17025  29FA  0021               	movlb	1	; select bank1
 17026  29FB  149D               	bsf	29,1	;volatile
 17027  29FC                     l196:	
 17028                           ;adc.c: 55: while(ADCON0bits.DONE == 1);
 17029                           
 17030  29FC  189D               	btfsc	29,1	;volatile
 17031  29FD  29FC               	goto	l196
 17032                           
 17033                           ;adc.c: 57: int ansHigh = ADRESH;
 17034  29FE  081C               	movf	28,w	;volatile
 17035  29FF  0020               	movlb	0	; select bank0
 17036  2A00  00A0               	movwf	??_adcRead
 17037  2A01  01A1               	clrf	??_adcRead+1
 17038  2A02  0820               	movf	??_adcRead,w
 17039  2A03  00A7               	movwf	adcRead@ansHigh
 17040  2A04  0821               	movf	??_adcRead+1,w
 17041  2A05  00A8               	movwf	adcRead@ansHigh+1
 17042                           
 17043                           ;adc.c: 58: int ansLow = ADRESL;
 17044  2A06  0021               	movlb	1	; select bank1
 17045  2A07  081B               	movf	27,w	;volatile
 17046  2A08  0020               	movlb	0	; select bank0
 17047  2A09  00A0               	movwf	??_adcRead
 17048  2A0A  01A1               	clrf	??_adcRead+1
 17049  2A0B  0820               	movf	??_adcRead,w
 17050  2A0C  00A9               	movwf	adcRead@ansLow
 17051  2A0D  0821               	movf	??_adcRead+1,w
 17052  2A0E  00AA               	movwf	adcRead@ansLow+1
 17053                           
 17054                           ;adc.c: 60: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 17055  2A0F  082A               	movf	adcRead@ansLow+1,w
 17056  2A10  00A1               	movwf	??_adcRead+1
 17057  2A11  0829               	movf	adcRead@ansLow,w
 17058  2A12  00A0               	movwf	??_adcRead
 17059  2A13  3004               	movlw	4
 17060  2A14  00A2               	movwf	??_adcRead+2
 17061  2A15                     u6375:	
 17062  2A15  0D21               	rlf	??_adcRead+1,w
 17063  2A16  0CA1               	rrf	??_adcRead+1,f
 17064  2A17  0CA0               	rrf	??_adcRead,f
 17065  2A18  0BA2               	decfsz	??_adcRead+2,f
 17066  2A19  2A15               	goto	u6375
 17067  2A1A  30FF               	movlw	255
 17068  2A1B  0520               	andwf	??_adcRead,w
 17069  2A1C  00A3               	movwf	??_adcRead+3
 17070  2A1D  300F               	movlw	15
 17071  2A1E  0521               	andwf	??_adcRead+1,w
 17072  2A1F  00A4               	movwf	??_adcRead+4
 17073  2A20  0828               	movf	adcRead@ansHigh+1,w
 17074  2A21  00A6               	movwf	??_adcRead+6
 17075  2A22  0827               	movf	adcRead@ansHigh,w
 17076  2A23  00A5               	movwf	??_adcRead+5
 17077  2A24  0EA5               	swapf	??_adcRead+5,f
 17078  2A25  0EA6               	swapf	??_adcRead+6,f
 17079  2A26  30F0               	movlw	240
 17080  2A27  05A6               	andwf	??_adcRead+6,f
 17081  2A28  0825               	movf	??_adcRead+5,w
 17082  2A29  390F               	andlw	15
 17083  2A2A  04A6               	iorwf	??_adcRead+6,f
 17084  2A2B  30F0               	movlw	240
 17085  2A2C  05A5               	andwf	??_adcRead+5,f
 17086  2A2D  0823               	movf	??_adcRead+3,w
 17087  2A2E  0425               	iorwf	??_adcRead+5,w
 17088  2A2F  00AB               	movwf	adcRead@total
 17089  2A30  0824               	movf	??_adcRead+4,w
 17090  2A31  0426               	iorwf	??_adcRead+6,w
 17091  2A32  00AC               	movwf	adcRead@total+1
 17092                           
 17093                           ;adc.c: 61: ADCON0bits.ADON = 0;
 17094  2A33  0021               	movlb	1	; select bank1
 17095  2A34  101D               	bcf	29,0	;volatile
 17096                           
 17097                           ;adc.c: 62: return total;
 17098  2A35  0020               	movlb	0	; select bank0
 17099  2A36  082C               	movf	adcRead@total+1,w
 17100  2A37  00F4               	movwf	?_adcRead+1
 17101  2A38  082B               	movf	adcRead@total,w
 17102  2A39  00F3               	movwf	?_adcRead
 17103  2A3A  0008               	return
 17104  2A3B                     __end_of_adcRead:	
 17105                           
 17106                           	psect	text37
 17107  2800                     __ptext37:	
 17108 ;; *************** function _setup *****************
 17109 ;; Defined at:
 17110 ;;		line 223 in file "main.c"
 17111 ;; Parameters:    Size  Location     Type
 17112 ;;		None
 17113 ;; Auto vars:     Size  Location     Type
 17114 ;;		None
 17115 ;; Return value:  Size  Location     Type
 17116 ;;                  1    wreg      void 
 17117 ;; Registers used:
 17118 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17119 ;; Tracked objects:
 17120 ;;		On entry : 0/0
 17121 ;;		On exit  : 0/0
 17122 ;;		Unchanged: 0/0
 17123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17128 ;;Total ram usage:        0 bytes
 17129 ;; Hardware stack levels used:    1
 17130 ;; Hardware stack levels required when called:    6
 17131 ;; This function calls:
 17132 ;;		_LTC6804_initialize
 17133 ;;		_adcSetup
 17134 ;;		_i2cSetup
 17135 ;;		_spiSetup
 17136 ;;		_timerSetup
 17137 ;;		_uartSetup
 17138 ;; This function is called by:
 17139 ;;		_main
 17140 ;; This function uses a non-reentrant model
 17141 ;;
 17142                           
 17143                           
 17144                           ;psect for function _setup
 17145  2800                     _setup:	
 17146                           
 17147                           ;main.c: 225: TRISDbits.TRISD4 = 0;
 17148                           
 17149                           ;incstack = 0
 17150                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17151  2800  0021               	movlb	1	; select bank1
 17152  2801  120F               	bcf	15,4	;volatile
 17153                           
 17154                           ;main.c: 226: TRISDbits.TRISD5 = 0;
 17155  2802  128F               	bcf	15,5	;volatile
 17156                           
 17157                           ;main.c: 227: TRISAbits.TRISA0 = 1;
 17158  2803  140C               	bsf	12,0	;volatile
 17159                           
 17160                           ;main.c: 230: INTCONbits.GIE = 1;
 17161  2804  178B               	bsf	11,7	;volatile
 17162                           
 17163                           ;main.c: 231: INTCONbits.PEIE = 1;
 17164  2805  170B               	bsf	11,6	;volatile
 17165                           
 17166                           ;main.c: 234: timerSetup();
 17167  2806  318A  22E3  31A8   	fcall	_timerSetup
 17168                           
 17169                           ;main.c: 237: TRISAbits.TRISA5 = 0;
 17170  2809  0021               	movlb	1	; select bank1
 17171  280A  128C               	bcf	12,5	;volatile
 17172                           
 17173                           ;main.c: 238: LATAbits.LATA5 = 1;
 17174  280B  0022               	movlb	2	; select bank2
 17175  280C  168C               	bsf	12,5	;volatile
 17176                           
 17177                           ;main.c: 241: TRISAbits.TRISA4 = 0;
 17178  280D  0021               	movlb	1	; select bank1
 17179  280E  120C               	bcf	12,4	;volatile
 17180                           
 17181                           ;main.c: 244: adcSetup();
 17182  280F  31B6  26BE  31A8   	fcall	_adcSetup
 17183                           
 17184                           ;main.c: 247: uartSetup();
 17185  2812  31B6  2630  31A8   	fcall	_uartSetup
 17186                           
 17187                           ;main.c: 250: TRISBbits.TRISB6 = 1;
 17188  2815  0021               	movlb	1	; select bank1
 17189  2816  170D               	bsf	13,6	;volatile
 17190                           
 17191                           ;main.c: 251: TRISBbits.TRISB7 = 1;
 17192  2817  178D               	bsf	13,7	;volatile
 17193                           
 17194                           ;main.c: 252: i2cSetup();
 17195  2818  31B6  266D  31A8   	fcall	_i2cSetup
 17196                           
 17197                           ;main.c: 255: TRISCbits.TRISC5 = 0;
 17198  281B  0021               	movlb	1	; select bank1
 17199  281C  128E               	bcf	14,5	;volatile
 17200                           
 17201                           ;main.c: 256: TRISCbits.TRISC4 = 1;
 17202  281D  160E               	bsf	14,4	;volatile
 17203                           
 17204                           ;main.c: 257: TRISCbits.TRISC3 = 0;
 17205  281E  118E               	bcf	14,3	;volatile
 17206                           
 17207                           ;main.c: 258: TRISDbits.TRISD3 = 0;
 17208  281F  118F               	bcf	15,3	;volatile
 17209                           
 17210                           ;main.c: 259: spiSetup();
 17211  2820  31B6  267E  31A8   	fcall	_spiSetup
 17212                           
 17213                           ;main.c: 262: LTC6804_initialize();
 17214  2823  31B6  265C         	fcall	_LTC6804_initialize
 17215  2825  0008               	return
 17216  2826                     __end_of_setup:	
 17217                           
 17218                           	psect	text38
 17219  3630                     __ptext38:	
 17220 ;; *************** function _uartSetup *****************
 17221 ;; Defined at:
 17222 ;;		line 89 in file "uart.c"
 17223 ;; Parameters:    Size  Location     Type
 17224 ;;		None
 17225 ;; Auto vars:     Size  Location     Type
 17226 ;;		None
 17227 ;; Return value:  Size  Location     Type
 17228 ;;                  1    wreg      void 
 17229 ;; Registers used:
 17230 ;;		wreg, status,2
 17231 ;; Tracked objects:
 17232 ;;		On entry : 0/0
 17233 ;;		On exit  : 0/0
 17234 ;;		Unchanged: 0/0
 17235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17240 ;;Total ram usage:        0 bytes
 17241 ;; Hardware stack levels used:    1
 17242 ;; Hardware stack levels required when called:    2
 17243 ;; This function calls:
 17244 ;;		Nothing
 17245 ;; This function is called by:
 17246 ;;		_setup
 17247 ;; This function uses a non-reentrant model
 17248 ;;
 17249                           
 17250                           
 17251                           ;psect for function _uartSetup
 17252  3630                     _uartSetup:	
 17253                           
 17254                           ;uart.c: 90: TXSTAbits.TX9 = 0;
 17255                           
 17256                           ;incstack = 0
 17257                           ; Regs used in _uartSetup: [wreg+status,2]
 17258  3630  0023               	movlb	3	; select bank3
 17259  3631  131E               	bcf	30,6	;volatile
 17260                           
 17261                           ;uart.c: 91: TXSTAbits.TXEN = 1;
 17262  3632  169E               	bsf	30,5	;volatile
 17263                           
 17264                           ;uart.c: 92: TXSTAbits.SYNC = 0;
 17265  3633  121E               	bcf	30,4	;volatile
 17266                           
 17267                           ;uart.c: 93: TXSTAbits.BRGH = 0;
 17268  3634  111E               	bcf	30,2	;volatile
 17269                           
 17270                           ;uart.c: 94: RCSTAbits.RX9 = 0;
 17271  3635  131D               	bcf	29,6	;volatile
 17272                           
 17273                           ;uart.c: 95: RCSTAbits.SPEN = 1;
 17274  3636  179D               	bsf	29,7	;volatile
 17275                           
 17276                           ;uart.c: 96: SPBRGH = 0;
 17277  3637  019C               	clrf	28	;volatile
 17278                           
 17279                           ;uart.c: 97: SPBRGL = 2;
 17280  3638  3002               	movlw	2
 17281  3639  009B               	movwf	27	;volatile
 17282                           
 17283                           ;uart.c: 98: PIR1bits.TXIF = 0;
 17284  363A  0020               	movlb	0	; select bank0
 17285  363B  1211               	bcf	17,4	;volatile
 17286  363C  0008               	return
 17287  363D                     __end_of_uartSetup:	
 17288                           
 17289                           	psect	text39
 17290  0AE3                     __ptext39:	
 17291 ;; *************** function _timerSetup *****************
 17292 ;; Defined at:
 17293 ;;		line 10 in file "timer.c"
 17294 ;; Parameters:    Size  Location     Type
 17295 ;;		None
 17296 ;; Auto vars:     Size  Location     Type
 17297 ;;		None
 17298 ;; Return value:  Size  Location     Type
 17299 ;;                  1    wreg      void 
 17300 ;; Registers used:
 17301 ;;		wreg, status,2, status,0, pclath, cstack
 17302 ;; Tracked objects:
 17303 ;;		On entry : 0/0
 17304 ;;		On exit  : 0/0
 17305 ;;		Unchanged: 0/0
 17306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17311 ;;Total ram usage:        0 bytes
 17312 ;; Hardware stack levels used:    1
 17313 ;; Hardware stack levels required when called:    3
 17314 ;; This function calls:
 17315 ;;		_timer0Setup
 17316 ;;		_timer2Setup
 17317 ;; This function is called by:
 17318 ;;		_setup
 17319 ;; This function uses a non-reentrant model
 17320 ;;
 17321                           
 17322                           
 17323                           ;psect for function _timerSetup
 17324  0AE3                     _timerSetup:	
 17325                           
 17326                           ;timer.c: 11: timer0Setup();
 17327                           
 17328                           ;incstack = 0
 17329                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 17330  0AE3  31B5  25DE  318A   	fcall	_timer0Setup
 17331                           
 17332                           ;timer.c: 12: timer2Setup();
 17333  0AE6  31B6  2601         	fcall	_timer2Setup
 17334  0AE8  0008               	return
 17335  0AE9                     __end_of_timerSetup:	
 17336                           
 17337                           	psect	text40
 17338  3601                     __ptext40:	
 17339 ;; *************** function _timer2Setup *****************
 17340 ;; Defined at:
 17341 ;;		line 15 in file "timer.c"
 17342 ;; Parameters:    Size  Location     Type
 17343 ;;		None
 17344 ;; Auto vars:     Size  Location     Type
 17345 ;;		None
 17346 ;; Return value:  Size  Location     Type
 17347 ;;                  1    wreg      void 
 17348 ;; Registers used:
 17349 ;;		wreg
 17350 ;; Tracked objects:
 17351 ;;		On entry : 0/0
 17352 ;;		On exit  : 0/0
 17353 ;;		Unchanged: 0/0
 17354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17359 ;;Total ram usage:        0 bytes
 17360 ;; Hardware stack levels used:    1
 17361 ;; Hardware stack levels required when called:    2
 17362 ;; This function calls:
 17363 ;;		Nothing
 17364 ;; This function is called by:
 17365 ;;		_timerSetup
 17366 ;; This function uses a non-reentrant model
 17367 ;;
 17368                           
 17369                           
 17370                           ;psect for function _timer2Setup
 17371  3601                     _timer2Setup:	
 17372                           
 17373                           ;timer.c: 16: CCP2CON = 0x06;
 17374                           
 17375                           ;incstack = 0
 17376                           ; Regs used in _timer2Setup: [wreg]
 17377  3601  3006               	movlw	6
 17378  3602  0025               	movlb	5	; select bank5
 17379  3603  009A               	movwf	26	;volatile
 17380                           
 17381                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 17382  3604  0021               	movlb	1	; select bank1
 17383  3605  1491               	bsf	17,1	;volatile
 17384                           
 17385                           ;timer.c: 18: PR2 = 254;
 17386  3606  30FE               	movlw	254
 17387  3607  0020               	movlb	0	; select bank0
 17388  3608  009B               	movwf	27	;volatile
 17389                           
 17390                           ;timer.c: 19: T2CON = 0x4F;
 17391  3609  304F               	movlw	79
 17392  360A  009C               	movwf	28	;volatile
 17393  360B  0008               	return
 17394  360C                     __end_of_timer2Setup:	
 17395                           
 17396                           	psect	text41
 17397  35DE                     __ptext41:	
 17398 ;; *************** function _timer0Setup *****************
 17399 ;; Defined at:
 17400 ;;		line 22 in file "timer.c"
 17401 ;; Parameters:    Size  Location     Type
 17402 ;;		None
 17403 ;; Auto vars:     Size  Location     Type
 17404 ;;		None
 17405 ;; Return value:  Size  Location     Type
 17406 ;;                  1    wreg      void 
 17407 ;; Registers used:
 17408 ;;		wreg
 17409 ;; Tracked objects:
 17410 ;;		On entry : 0/0
 17411 ;;		On exit  : 0/0
 17412 ;;		Unchanged: 0/0
 17413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17418 ;;Total ram usage:        0 bytes
 17419 ;; Hardware stack levels used:    1
 17420 ;; Hardware stack levels required when called:    2
 17421 ;; This function calls:
 17422 ;;		Nothing
 17423 ;; This function is called by:
 17424 ;;		_timerSetup
 17425 ;; This function uses a non-reentrant model
 17426 ;;
 17427                           
 17428                           
 17429                           ;psect for function _timer0Setup
 17430  35DE                     _timer0Setup:	
 17431                           
 17432                           ;timer.c: 23: OPTION_REG = 0b10001110;
 17433                           
 17434                           ;incstack = 0
 17435                           ; Regs used in _timer0Setup: [wreg]
 17436  35DE  308E               	movlw	142
 17437  35DF  0021               	movlb	1	; select bank1
 17438  35E0  0095               	movwf	21	;volatile
 17439                           
 17440                           ;timer.c: 24: INTCONbits.TMR0IE = 1;
 17441  35E1  168B               	bsf	11,5	;volatile
 17442  35E2  0008               	return
 17443  35E3                     __end_of_timer0Setup:	
 17444                           
 17445                           	psect	text42
 17446  367E                     __ptext42:	
 17447 ;; *************** function _spiSetup *****************
 17448 ;; Defined at:
 17449 ;;		line 12 in file "spi.c"
 17450 ;; Parameters:    Size  Location     Type
 17451 ;;		None
 17452 ;; Auto vars:     Size  Location     Type
 17453 ;;		None
 17454 ;; Return value:  Size  Location     Type
 17455 ;;                  1    wreg      void 
 17456 ;; Registers used:
 17457 ;;		wreg
 17458 ;; Tracked objects:
 17459 ;;		On entry : 0/0
 17460 ;;		On exit  : 0/0
 17461 ;;		Unchanged: 0/0
 17462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17467 ;;Total ram usage:        0 bytes
 17468 ;; Hardware stack levels used:    1
 17469 ;; Hardware stack levels required when called:    2
 17470 ;; This function calls:
 17471 ;;		Nothing
 17472 ;; This function is called by:
 17473 ;;		_setup
 17474 ;; This function uses a non-reentrant model
 17475 ;;
 17476                           
 17477                           
 17478                           ;psect for function _spiSetup
 17479  367E                     _spiSetup:	
 17480                           
 17481                           ;spi.c: 15: LATDbits.LATD3 = 1;
 17482                           
 17483                           ;incstack = 0
 17484                           ; Regs used in _spiSetup: [wreg]
 17485  367E  0022               	movlb	2	; select bank2
 17486  367F  158F               	bsf	15,3	;volatile
 17487                           
 17488                           ;spi.c: 17: APFCON1bits.SDOSEL = 0;
 17489  3680  129D               	bcf	29,5	;volatile
 17490                           
 17491                           ;spi.c: 18: APFCON1bits.SCKSEL = 0;
 17492  3681  121D               	bcf	29,4	;volatile
 17493                           
 17494                           ;spi.c: 19: APFCON1bits.SDISEL = 0;
 17495  3682  119D               	bcf	29,3	;volatile
 17496                           
 17497                           ;spi.c: 21: SSP1CON3bits.BOEN = 0;
 17498  3683  0024               	movlb	4	; select bank4
 17499  3684  1217               	bcf	23,4	;volatile
 17500                           
 17501                           ;spi.c: 25: SSP1STATbits.SMP = 1;
 17502  3685  1794               	bsf	20,7	;volatile
 17503                           
 17504                           ;spi.c: 26: SSP1STATbits.CKE = 1;
 17505  3686  1714               	bsf	20,6	;volatile
 17506                           
 17507                           ;spi.c: 28: SSP1CON1 = 0x12;
 17508  3687  3012               	movlw	18
 17509  3688  0095               	movwf	21	;volatile
 17510                           
 17511                           ;spi.c: 30: PIE1bits.SSP1IE = 1;
 17512  3689  0021               	movlb	1	; select bank1
 17513  368A  1591               	bsf	17,3	;volatile
 17514                           
 17515                           ;spi.c: 31: PIR1bits.SSP1IF = 0;
 17516  368B  0020               	movlb	0	; select bank0
 17517  368C  1191               	bcf	17,3	;volatile
 17518                           
 17519                           ;spi.c: 33: SSP1CON1bits.SSPEN = 1;
 17520  368D  0024               	movlb	4	; select bank4
 17521  368E  1695               	bsf	21,5	;volatile
 17522  368F  0008               	return
 17523  3690                     __end_of_spiSetup:	
 17524                           
 17525                           	psect	text43
 17526  366D                     __ptext43:	
 17527 ;; *************** function _i2cSetup *****************
 17528 ;; Defined at:
 17529 ;;		line 40 in file "i2c.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;		None
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;		None
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  1    wreg      void 
 17536 ;; Registers used:
 17537 ;;		wreg
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17547 ;;Total ram usage:        0 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; Hardware stack levels required when called:    2
 17550 ;; This function calls:
 17551 ;;		Nothing
 17552 ;; This function is called by:
 17553 ;;		_setup
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           
 17558                           ;psect for function _i2cSetup
 17559  366D                     _i2cSetup:	
 17560                           
 17561                           ;i2c.c: 41: APFCON1bits.SDISEL = 1;
 17562                           
 17563                           ;incstack = 0
 17564                           ; Regs used in _i2cSetup: [wreg]
 17565  366D  0022               	movlb	2	; select bank2
 17566  366E  159D               	bsf	29,3	;volatile
 17567                           
 17568                           ;i2c.c: 42: APFCON1bits.SCKSEL = 1;
 17569  366F  161D               	bsf	29,4	;volatile
 17570                           
 17571                           ;i2c.c: 43: PIE1bits.SSP1IE = 0;
 17572  3670  0021               	movlb	1	; select bank1
 17573  3671  1191               	bcf	17,3	;volatile
 17574                           
 17575                           ;i2c.c: 44: PIE2bits.BCL1IE = 0;
 17576  3672  1192               	bcf	18,3	;volatile
 17577                           
 17578                           ;i2c.c: 45: PIR1bits.SSP1IF = 0;
 17579  3673  0020               	movlb	0	; select bank0
 17580  3674  1191               	bcf	17,3	;volatile
 17581                           
 17582                           ;i2c.c: 46: PIR2bits.BCL1IF = 0;
 17583  3675  1192               	bcf	18,3	;volatile
 17584                           
 17585                           ;i2c.c: 47: SSPADD = 0x4F;
 17586  3676  304F               	movlw	79
 17587  3677  0024               	movlb	4	; select bank4
 17588  3678  0092               	movwf	18	;volatile
 17589                           
 17590                           ;i2c.c: 48: SSPCON1 = 0x28;
 17591  3679  3028               	movlw	40
 17592  367A  0095               	movwf	21	;volatile
 17593                           
 17594                           ;i2c.c: 49: SSPSTAT = 0xC0;
 17595  367B  30C0               	movlw	192
 17596  367C  0094               	movwf	20	;volatile
 17597  367D  0008               	return
 17598  367E                     __end_of_i2cSetup:	
 17599                           
 17600                           	psect	text44
 17601  36BE                     __ptext44:	
 17602 ;; *************** function _adcSetup *****************
 17603 ;; Defined at:
 17604 ;;		line 76 in file "adc.c"
 17605 ;; Parameters:    Size  Location     Type
 17606 ;;		None
 17607 ;; Auto vars:     Size  Location     Type
 17608 ;;		None
 17609 ;; Return value:  Size  Location     Type
 17610 ;;                  1    wreg      void 
 17611 ;; Registers used:
 17612 ;;		wreg, status,2
 17613 ;; Tracked objects:
 17614 ;;		On entry : 0/0
 17615 ;;		On exit  : 0/0
 17616 ;;		Unchanged: 0/0
 17617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17622 ;;Total ram usage:        0 bytes
 17623 ;; Hardware stack levels used:    1
 17624 ;; Hardware stack levels required when called:    2
 17625 ;; This function calls:
 17626 ;;		Nothing
 17627 ;; This function is called by:
 17628 ;;		_setup
 17629 ;; This function uses a non-reentrant model
 17630 ;;
 17631                           
 17632                           
 17633                           ;psect for function _adcSetup
 17634  36BE                     _adcSetup:	
 17635                           
 17636                           ;adc.c: 78: TRISBbits.TRISB5 = 0;
 17637                           
 17638                           ;incstack = 0
 17639                           ; Regs used in _adcSetup: [wreg+status,2]
 17640  36BE  0021               	movlb	1	; select bank1
 17641  36BF  128D               	bcf	13,5	;volatile
 17642                           
 17643                           ;adc.c: 81: TRISAbits.TRISA0 = 1;
 17644  36C0  140C               	bsf	12,0	;volatile
 17645                           
 17646                           ;adc.c: 82: TRISAbits.TRISA1 = 1;
 17647  36C1  148C               	bsf	12,1	;volatile
 17648                           
 17649                           ;adc.c: 83: TRISAbits.TRISA2 = 1;
 17650  36C2  150C               	bsf	12,2	;volatile
 17651                           
 17652                           ;adc.c: 84: TRISAbits.TRISA3 = 1;
 17653  36C3  158C               	bsf	12,3	;volatile
 17654                           
 17655                           ;adc.c: 87: TRISBbits.TRISB0 = 1;
 17656  36C4  140D               	bsf	13,0	;volatile
 17657                           
 17658                           ;adc.c: 88: TRISBbits.TRISB1 = 1;
 17659  36C5  148D               	bsf	13,1	;volatile
 17660                           
 17661                           ;adc.c: 89: TRISBbits.TRISB2 = 1;
 17662  36C6  150D               	bsf	13,2	;volatile
 17663                           
 17664                           ;adc.c: 90: TRISBbits.TRISB3 = 1;
 17665  36C7  158D               	bsf	13,3	;volatile
 17666                           
 17667                           ;adc.c: 91: TRISBbits.TRISB4 = 1;
 17668  36C8  160D               	bsf	13,4	;volatile
 17669                           
 17670                           ;adc.c: 94: TRISDbits.TRISD1 = 1;
 17671  36C9  148F               	bsf	15,1	;volatile
 17672                           
 17673                           ;adc.c: 97: ANSELA = 0x0F;
 17674  36CA  300F               	movlw	15
 17675  36CB  0023               	movlb	3	; select bank3
 17676  36CC  008C               	movwf	12	;volatile
 17677                           
 17678                           ;adc.c: 98: ANSELB = 0x1F;
 17679  36CD  301F               	movlw	31
 17680  36CE  008D               	movwf	13	;volatile
 17681                           
 17682                           ;adc.c: 99: ANSELD = 0x01;
 17683  36CF  3001               	movlw	1
 17684  36D0  008F               	movwf	15	;volatile
 17685                           
 17686                           ;adc.c: 100: TRISDbits.TRISD1 = 1;
 17687  36D1  0021               	movlb	1	; select bank1
 17688  36D2  148F               	bsf	15,1	;volatile
 17689                           
 17690                           ;adc.c: 101: WPUD = 0x00;
 17691  36D3  0024               	movlb	4	; select bank4
 17692  36D4  018F               	clrf	15	;volatile
 17693                           
 17694                           ;adc.c: 104: ADCON0 = 0x00;
 17695  36D5  0021               	movlb	1	; select bank1
 17696  36D6  019D               	clrf	29	;volatile
 17697                           
 17698                           ;adc.c: 105: ADCON1 = 0x60;
 17699  36D7  3060               	movlw	96
 17700  36D8  009E               	movwf	30	;volatile
 17701                           
 17702                           ;adc.c: 106: ADCON2 = 0x0F;
 17703  36D9  300F               	movlw	15
 17704  36DA  009F               	movwf	31	;volatile
 17705  36DB  0008               	return
 17706  36DC                     __end_of_adcSetup:	
 17707                           
 17708                           	psect	text45
 17709  365C                     __ptext45:	
 17710 ;; *************** function _LTC6804_initialize *****************
 17711 ;; Defined at:
 17712 ;;		line 314 in file "ltc6804.c"
 17713 ;; Parameters:    Size  Location     Type
 17714 ;;		None
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;		None
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  1    wreg      void 
 17719 ;; Registers used:
 17720 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17721 ;; Tracked objects:
 17722 ;;		On entry : 0/0
 17723 ;;		On exit  : 0/0
 17724 ;;		Unchanged: 0/0
 17725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17728 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17729 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17730 ;;Total ram usage:        1 bytes
 17731 ;; Hardware stack levels used:    1
 17732 ;; Hardware stack levels required when called:    5
 17733 ;; This function calls:
 17734 ;;		_LTC6804_wrcfg
 17735 ;;		_set_adc
 17736 ;; This function is called by:
 17737 ;;		_setup
 17738 ;; This function uses a non-reentrant model
 17739 ;;
 17740                           
 17741                           
 17742                           ;psect for function _LTC6804_initialize
 17743  365C                     _LTC6804_initialize:	
 17744                           
 17745                           ;ltc6804.c: 316: set_adc(2,1,0,0);
 17746                           
 17747                           ;incstack = 0
 17748                           ; Regs used in _LTC6804_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17749  365C  01F3               	clrf	set_adc@DCP
 17750  365D  0AF3               	incf	set_adc@DCP,f
 17751  365E  01F4               	clrf	set_adc@CH
 17752  365F  01F5               	clrf	set_adc@CHG
 17753  3660  3002               	movlw	2
 17754  3661  31AA  223B  31B6   	fcall	_set_adc
 17755                           
 17756                           ;ltc6804.c: 317: LTC6804_wrcfg(1, configReg);
 17757  3664  30B1               	movlw	(low (_configReg| (0+512)))& (0+255)
 17758  3665  0020               	movlb	0	; select bank0
 17759  3666  00C9               	movwf	??_LTC6804_initialize
 17760  3667  0849               	movf	??_LTC6804_initialize,w
 17761  3668  00B1               	movwf	LTC6804_wrcfg@config
 17762  3669  3001               	movlw	1
 17763  366A  31AF  2761         	fcall	_LTC6804_wrcfg
 17764  366C  0008               	return
 17765  366D                     __end_of_LTC6804_initialize:	
 17766                           
 17767                           	psect	text46
 17768  2A3B                     __ptext46:	
 17769 ;; *************** function _set_adc *****************
 17770 ;; Defined at:
 17771 ;;		line 336 in file "ltc6804.c"
 17772 ;; Parameters:    Size  Location     Type
 17773 ;;  MD              1    wreg     unsigned char 
 17774 ;;  DCP             1    3[COMMON] unsigned char 
 17775 ;;  CH              1    4[COMMON] unsigned char 
 17776 ;;  CHG             1    5[COMMON] unsigned char 
 17777 ;; Auto vars:     Size  Location     Type
 17778 ;;  MD              1    0[BANK0 ] unsigned char 
 17779 ;;  md_bits         1    1[BANK0 ] unsigned char 
 17780 ;; Return value:  Size  Location     Type
 17781 ;;                  1    wreg      void 
 17782 ;; Registers used:
 17783 ;;		wreg, status,2, status,0
 17784 ;; Tracked objects:
 17785 ;;		On entry : 0/0
 17786 ;;		On exit  : 0/0
 17787 ;;		Unchanged: 0/0
 17788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17789 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17790 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17792 ;;      Totals:         5       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17793 ;;Total ram usage:        7 bytes
 17794 ;; Hardware stack levels used:    1
 17795 ;; Hardware stack levels required when called:    2
 17796 ;; This function calls:
 17797 ;;		Nothing
 17798 ;; This function is called by:
 17799 ;;		_LTC6804_initialize
 17800 ;; This function uses a non-reentrant model
 17801 ;;
 17802                           
 17803                           
 17804                           ;psect for function _set_adc
 17805  2A3B                     _set_adc:	
 17806                           
 17807                           ;incstack = 0
 17808                           ; Regs used in _set_adc: [wreg+status,2+status,0]
 17809                           ;set_adc@MD stored from wreg
 17810  2A3B  0020               	movlb	0	; select bank0
 17811  2A3C  00A0               	movwf	set_adc@MD
 17812                           
 17813                           ;ltc6804.c: 342: char md_bits;
 17814                           ;ltc6804.c: 344: md_bits = (MD & 0x02) >> 1;
 17815  2A3D  3620               	lsrf	set_adc@MD,w
 17816  2A3E  3901               	andlw	1
 17817  2A3F  00F6               	movwf	??_set_adc
 17818  2A40  0876               	movf	??_set_adc,w
 17819  2A41  00A1               	movwf	set_adc@md_bits
 17820                           
 17821                           ;ltc6804.c: 345: ADCV[0] = md_bits + 0x02;
 17822  2A42  0821               	movf	set_adc@md_bits,w
 17823  2A43  3E02               	addlw	2
 17824  2A44  00F6               	movwf	??_set_adc
 17825  2A45  0876               	movf	??_set_adc,w
 17826  2A46  0025               	movlb	5	; select bank5
 17827  2A47  00C7               	movwf	_ADCV^(0+640)
 17828                           
 17829                           ;ltc6804.c: 346: md_bits = (MD & 0x01) << 7;
 17830  2A48  0020               	movlb	0	; select bank0
 17831  2A49  0820               	movf	set_adc@MD,w
 17832  2A4A  3901               	andlw	1
 17833  2A4B  00F6               	movwf	??_set_adc
 17834  2A4C  3006               	movlw	6
 17835  2A4D                     u10135:	
 17836  2A4D  35F6               	lslf	??_set_adc,f
 17837  2A4E  3EFF               	addlw	-1
 17838  2A4F  1D03               	skipz
 17839  2A50  2A4D               	goto	u10135
 17840  2A51  3576               	lslf	??_set_adc,w
 17841  2A52  00F7               	movwf	??_set_adc+1
 17842  2A53  0877               	movf	??_set_adc+1,w
 17843  2A54  00A1               	movwf	set_adc@md_bits
 17844                           
 17845                           ;ltc6804.c: 347: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 17846  2A55  0873               	movf	set_adc@DCP,w
 17847  2A56  00F6               	movwf	??_set_adc
 17848  2A57  3003               	movlw	3
 17849  2A58                     u10145:	
 17850  2A58  35F6               	lslf	??_set_adc,f
 17851  2A59  3EFF               	addlw	-1
 17852  2A5A  1D03               	skipz
 17853  2A5B  2A58               	goto	u10145
 17854  2A5C  3576               	lslf	??_set_adc,w
 17855  2A5D  0721               	addwf	set_adc@md_bits,w
 17856  2A5E  0774               	addwf	set_adc@CH,w
 17857  2A5F  3E60               	addlw	96
 17858  2A60  00F7               	movwf	??_set_adc+1
 17859  2A61  0877               	movf	??_set_adc+1,w
 17860  2A62  0025               	movlb	5	; select bank5
 17861  2A63  00C8               	movwf	(_ADCV^(0+640)+1)
 17862                           
 17863                           ;ltc6804.c: 349: md_bits = (MD & 0x02) >> 1;
 17864  2A64  0020               	movlb	0	; select bank0
 17865  2A65  3620               	lsrf	set_adc@MD,w
 17866  2A66  3901               	andlw	1
 17867  2A67  00F6               	movwf	??_set_adc
 17868  2A68  0876               	movf	??_set_adc,w
 17869  2A69  00A1               	movwf	set_adc@md_bits
 17870                           
 17871                           ;ltc6804.c: 350: ADAX[0] = md_bits + 0x04;
 17872  2A6A  0821               	movf	set_adc@md_bits,w
 17873  2A6B  3E04               	addlw	4
 17874  2A6C  00F6               	movwf	??_set_adc
 17875  2A6D  0876               	movf	??_set_adc,w
 17876  2A6E  0025               	movlb	5	; select bank5
 17877  2A6F  00C5               	movwf	_ADAX^(0+640)
 17878                           
 17879                           ;ltc6804.c: 351: md_bits = (MD & 0x01) << 7;
 17880  2A70  0020               	movlb	0	; select bank0
 17881  2A71  0820               	movf	set_adc@MD,w
 17882  2A72  3901               	andlw	1
 17883  2A73  00F6               	movwf	??_set_adc
 17884  2A74  3006               	movlw	6
 17885  2A75                     u10155:	
 17886  2A75  35F6               	lslf	??_set_adc,f
 17887  2A76  3EFF               	addlw	-1
 17888  2A77  1D03               	skipz
 17889  2A78  2A75               	goto	u10155
 17890  2A79  3576               	lslf	??_set_adc,w
 17891  2A7A  00F7               	movwf	??_set_adc+1
 17892  2A7B  0877               	movf	??_set_adc+1,w
 17893  2A7C  00A1               	movwf	set_adc@md_bits
 17894                           
 17895                           ;ltc6804.c: 352: ADAX[1] = md_bits + 0x60 + CHG ;
 17896  2A7D  0821               	movf	set_adc@md_bits,w
 17897  2A7E  0775               	addwf	set_adc@CHG,w
 17898  2A7F  3E60               	addlw	96
 17899  2A80  00F6               	movwf	??_set_adc
 17900  2A81  0876               	movf	??_set_adc,w
 17901  2A82  0025               	movlb	5	; select bank5
 17902  2A83  00C6               	movwf	(_ADAX^(0+640)+1)
 17903                           
 17904                           ;ltc6804.c: 354: md_bits = (MD & 0x02) >> 1;
 17905  2A84  0020               	movlb	0	; select bank0
 17906  2A85  3620               	lsrf	set_adc@MD,w
 17907  2A86  3901               	andlw	1
 17908  2A87  00F6               	movwf	??_set_adc
 17909  2A88  0876               	movf	??_set_adc,w
 17910  2A89  00A1               	movwf	set_adc@md_bits
 17911                           
 17912                           ;ltc6804.c: 355: ADSTAT[0] = md_bits + 0x04;
 17913  2A8A  0821               	movf	set_adc@md_bits,w
 17914  2A8B  3E04               	addlw	4
 17915  2A8C  00F6               	movwf	??_set_adc
 17916  2A8D  0876               	movf	??_set_adc,w
 17917  2A8E  0025               	movlb	5	; select bank5
 17918  2A8F  00C3               	movwf	_ADSTAT^(0+640)
 17919                           
 17920                           ;ltc6804.c: 356: md_bits = (MD & 0x01) << 7;
 17921  2A90  0020               	movlb	0	; select bank0
 17922  2A91  0820               	movf	set_adc@MD,w
 17923  2A92  3901               	andlw	1
 17924  2A93  00F6               	movwf	??_set_adc
 17925  2A94  3006               	movlw	6
 17926  2A95                     u10165:	
 17927  2A95  35F6               	lslf	??_set_adc,f
 17928  2A96  3EFF               	addlw	-1
 17929  2A97  1D03               	skipz
 17930  2A98  2A95               	goto	u10165
 17931  2A99  3576               	lslf	??_set_adc,w
 17932  2A9A  00F7               	movwf	??_set_adc+1
 17933  2A9B  0877               	movf	??_set_adc+1,w
 17934  2A9C  00A1               	movwf	set_adc@md_bits
 17935                           
 17936                           ;ltc6804.c: 357: ADSTAT[1] = md_bits + 0x69;
 17937  2A9D  0821               	movf	set_adc@md_bits,w
 17938  2A9E  3E69               	addlw	105
 17939  2A9F  00F6               	movwf	??_set_adc
 17940  2AA0  0876               	movf	??_set_adc,w
 17941  2AA1  0025               	movlb	5	; select bank5
 17942  2AA2  00C4               	movwf	(_ADSTAT^(0+640)+1)
 17943  2AA3  0008               	return
 17944  2AA4                     __end_of_set_adc:	
 17945                           
 17946                           	psect	text47
 17947  21D0                     __ptext47:	
 17948 ;; *************** function _cellBalancing *****************
 17949 ;; Defined at:
 17950 ;;		line 109 in file "ltc6804.c"
 17951 ;; Parameters:    Size  Location     Type
 17952 ;;  voltages        1    wreg     PTR float 
 17953 ;;		 -> main@voltages(48), 
 17954 ;;  numVoltages     2   49[BANK1 ] int 
 17955 ;;  balanceEn       1   51[BANK1 ] PTR int 
 17956 ;;		 -> main@balanceEn(24), 
 17957 ;; Auto vars:     Size  Location     Type
 17958 ;;  voltages        1   63[BANK1 ] PTR float 
 17959 ;;		 -> main@voltages(48), 
 17960 ;;  i               2   61[BANK1 ] int 
 17961 ;;  i               2   59[BANK1 ] int 
 17962 ;;  minVoltage      4   55[BANK1 ] float 
 17963 ;;  boolean         1   54[BANK1 ] unsigned char 
 17964 ;; Return value:  Size  Location     Type
 17965 ;;                  1    wreg      void 
 17966 ;; Registers used:
 17967 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17968 ;; Tracked objects:
 17969 ;;		On entry : 0/0
 17970 ;;		On exit  : 0/0
 17971 ;;		Unchanged: 0/0
 17972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17973 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17974 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17975 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17976 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17977 ;;Total ram usage:       15 bytes
 17978 ;; Hardware stack levels used:    1
 17979 ;; Hardware stack levels required when called:    5
 17980 ;; This function calls:
 17981 ;;		_LTC6804_wrcfg
 17982 ;;		___fladd
 17983 ;;		___flge
 17984 ;;		_setDischarge
 17985 ;; This function is called by:
 17986 ;;		_main
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           
 17991                           ;psect for function _cellBalancing
 17992  21D0                     _cellBalancing:	
 17993                           
 17994                           ;incstack = 0
 17995                           ; Regs used in _cellBalancing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17996                           ;cellBalancing@voltages stored from wreg
 17997  21D0  0021               	movlb	1	; select bank1
 17998  21D1  00DF               	movwf	cellBalancing@voltages^(0+128)
 17999                           
 18000                           ;ltc6804.c: 110: float minVoltage = voltages[0];
 18001  21D2  085F               	movf	cellBalancing@voltages^(0+128),w
 18002  21D3  0086               	movwf	6
 18003  21D4  3002               	movlw	2	; select bank4/5
 18004  21D5  0087               	movwf	7
 18005  21D6  3F40               	moviw [0]fsr1
 18006  21D7  00D7               	movwf	cellBalancing@minVoltage^(0+128)
 18007  21D8  3F41               	moviw [1]fsr1
 18008  21D9  00D8               	movwf	(cellBalancing@minVoltage+1)^(0+128)
 18009  21DA  3F42               	moviw [2]fsr1
 18010  21DB  00D9               	movwf	(cellBalancing@minVoltage+2)^(0+128)
 18011  21DC  3F43               	moviw [3]fsr1
 18012  21DD  00DA               	movwf	(cellBalancing@minVoltage+3)^(0+128)
 18013                           
 18014                           ;ltc6804.c: 112: for(int i = 0; i < numVoltages; i++){
 18015  21DE  01DB               	clrf	cellBalancing@i^(0+128)
 18016  21DF  01DC               	clrf	(cellBalancing@i+1)^(0+128)
 18017  21E0                     l8014:	
 18018  21E0  085C               	movf	(cellBalancing@i+1)^(0+128),w
 18019  21E1  3A80               	xorlw	128
 18020  21E2  00D4               	movwf	??_cellBalancing^(0+128)
 18021  21E3  0852               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 18022  21E4  3A80               	xorlw	128
 18023  21E5  0254               	subwf	??_cellBalancing^(0+128),w
 18024  21E6  1D03               	skipz
 18025  21E7  29EA               	goto	u10615
 18026  21E8  0851               	movf	cellBalancing@numVoltages^(0+128),w
 18027  21E9  025B               	subwf	cellBalancing@i^(0+128),w
 18028  21EA                     u10615:	
 18029  21EA  1803               	btfsc	3,0
 18030  21EB  2A2D               	goto	l8016
 18031                           
 18032                           ;ltc6804.c: 113: if(voltages[i] < minVoltage){
 18033  21EC  0021               	movlb	1	; select bank1
 18034  21ED  085B               	movf	cellBalancing@i^(0+128),w
 18035  21EE  00D4               	movwf	??_cellBalancing^(0+128)
 18036  21EF  3001               	movlw	1
 18037  21F0                     u10585:	
 18038  21F0  35D4               	lslf	??_cellBalancing^(0+128),f
 18039  21F1  3EFF               	addlw	-1
 18040  21F2  1D03               	skipz
 18041  21F3  29F0               	goto	u10585
 18042  21F4  3554               	lslf	??_cellBalancing^(0+128),w
 18043  21F5  075F               	addwf	cellBalancing@voltages^(0+128),w
 18044  21F6  00D5               	movwf	(??_cellBalancing+1)^(0+128)
 18045  21F7  0855               	movf	(??_cellBalancing+1)^(0+128),w
 18046  21F8  0086               	movwf	6
 18047  21F9  3002               	movlw	2	; select bank4/5
 18048  21FA  0087               	movwf	7
 18049  21FB  3F40               	moviw [0]fsr1
 18050  21FC  00C1               	movwf	___flge@ff1^(0+128)
 18051  21FD  3F41               	moviw [1]fsr1
 18052  21FE  00C2               	movwf	(___flge@ff1+1)^(0+128)
 18053  21FF  3F42               	moviw [2]fsr1
 18054  2200  00C3               	movwf	(___flge@ff1+2)^(0+128)
 18055  2201  3F43               	moviw [3]fsr1
 18056  2202  00C4               	movwf	(___flge@ff1+3)^(0+128)
 18057  2203  085A               	movf	(cellBalancing@minVoltage+3)^(0+128),w
 18058  2204  00C8               	movwf	(___flge@ff2+3)^(0+128)
 18059  2205  0859               	movf	(cellBalancing@minVoltage+2)^(0+128),w
 18060  2206  00C7               	movwf	(___flge@ff2+2)^(0+128)
 18061  2207  0858               	movf	(cellBalancing@minVoltage+1)^(0+128),w
 18062  2208  00C6               	movwf	(___flge@ff2+1)^(0+128)
 18063  2209  0857               	movf	cellBalancing@minVoltage^(0+128),w
 18064  220A  00C5               	movwf	___flge@ff2^(0+128)
 18065  220B  31AE  26C7  31A1   	fcall	___flge
 18066  220E  1803               	btfsc	3,0
 18067  220F  2A27               	goto	l8012
 18068                           
 18069                           ;ltc6804.c: 114: minVoltage = voltages[i];
 18070  2210  0021               	movlb	1	; select bank1
 18071  2211  085B               	movf	cellBalancing@i^(0+128),w
 18072  2212  00D4               	movwf	??_cellBalancing^(0+128)
 18073  2213  3001               	movlw	1
 18074  2214                     u10605:	
 18075  2214  35D4               	lslf	??_cellBalancing^(0+128),f
 18076  2215  3EFF               	addlw	-1
 18077  2216  1D03               	skipz
 18078  2217  2A14               	goto	u10605
 18079  2218  3554               	lslf	??_cellBalancing^(0+128),w
 18080  2219  075F               	addwf	cellBalancing@voltages^(0+128),w
 18081  221A  00D5               	movwf	(??_cellBalancing+1)^(0+128)
 18082  221B  0855               	movf	(??_cellBalancing+1)^(0+128),w
 18083  221C  0086               	movwf	6
 18084  221D  3002               	movlw	2	; select bank4/5
 18085  221E  0087               	movwf	7
 18086  221F  3F40               	moviw [0]fsr1
 18087  2220  00D7               	movwf	cellBalancing@minVoltage^(0+128)
 18088  2221  3F41               	moviw [1]fsr1
 18089  2222  00D8               	movwf	(cellBalancing@minVoltage+1)^(0+128)
 18090  2223  3F42               	moviw [2]fsr1
 18091  2224  00D9               	movwf	(cellBalancing@minVoltage+2)^(0+128)
 18092  2225  3F43               	moviw [3]fsr1
 18093  2226  00DA               	movwf	(cellBalancing@minVoltage+3)^(0+128)
 18094  2227                     l8012:	
 18095  2227  3001               	movlw	1
 18096  2228  0021               	movlb	1	; select bank1
 18097  2229  07DB               	addwf	cellBalancing@i^(0+128),f
 18098  222A  3000               	movlw	0
 18099  222B  3DDC               	addwfc	(cellBalancing@i+1)^(0+128),f
 18100  222C  29E0               	goto	l8014
 18101  222D                     l8016:	
 18102                           
 18103                           ;ltc6804.c: 115: }
 18104                           ;ltc6804.c: 116: }
 18105                           ;ltc6804.c: 117: char boolean;
 18106                           ;ltc6804.c: 118: for(int i = 0; i < numVoltages; i++){
 18107  222D  0021               	movlb	1	; select bank1
 18108  222E  01DD               	clrf	cellBalancing@i_1334^(0+128)
 18109  222F  01DE               	clrf	(cellBalancing@i_1334+1)^(0+128)
 18110  2230                     l8024:	
 18111  2230  085E               	movf	(cellBalancing@i_1334+1)^(0+128),w
 18112  2231  3A80               	xorlw	128
 18113  2232  00D4               	movwf	??_cellBalancing^(0+128)
 18114  2233  0852               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 18115  2234  3A80               	xorlw	128
 18116  2235  0254               	subwf	??_cellBalancing^(0+128),w
 18117  2236  1D03               	skipz
 18118  2237  2A3A               	goto	u10635
 18119  2238  0851               	movf	cellBalancing@numVoltages^(0+128),w
 18120  2239  025D               	subwf	cellBalancing@i_1334^(0+128),w
 18121  223A                     u10635:	
 18122  223A  1803               	btfsc	3,0
 18123  223B  2A8C               	goto	l8026
 18124                           
 18125                           ;ltc6804.c: 119: boolean = (voltages[i] >= (minVoltage + 0.05));
 18126  223C  0021               	movlb	1	; select bank1
 18127  223D  085D               	movf	cellBalancing@i_1334^(0+128),w
 18128  223E  00D4               	movwf	??_cellBalancing^(0+128)
 18129  223F  3001               	movlw	1
 18130  2240                     u10625:	
 18131  2240  35D4               	lslf	??_cellBalancing^(0+128),f
 18132  2241  3EFF               	addlw	-1
 18133  2242  1D03               	skipz
 18134  2243  2A40               	goto	u10625
 18135  2244  3554               	lslf	??_cellBalancing^(0+128),w
 18136  2245  075F               	addwf	cellBalancing@voltages^(0+128),w
 18137  2246  00D5               	movwf	(??_cellBalancing+1)^(0+128)
 18138  2247  0855               	movf	(??_cellBalancing+1)^(0+128),w
 18139  2248  0086               	movwf	6
 18140  2249  3002               	movlw	2	; select bank4/5
 18141  224A  0087               	movwf	7
 18142  224B  3F40               	moviw [0]fsr1
 18143  224C  00C1               	movwf	___flge@ff1^(0+128)
 18144  224D  3F41               	moviw [1]fsr1
 18145  224E  00C2               	movwf	(___flge@ff1+1)^(0+128)
 18146  224F  3F42               	moviw [2]fsr1
 18147  2250  00C3               	movwf	(___flge@ff1+2)^(0+128)
 18148  2251  3F43               	moviw [3]fsr1
 18149  2252  00C4               	movwf	(___flge@ff1+3)^(0+128)
 18150  2253  303D               	movlw	61
 18151  2254  00AC               	movwf	(___fladd@b+3)^(0+128)
 18152  2255  304C               	movlw	76
 18153  2256  00AB               	movwf	(___fladd@b+2)^(0+128)
 18154  2257  30CC               	movlw	204
 18155  2258  00AA               	movwf	(___fladd@b+1)^(0+128)
 18156  2259  30CD               	movlw	205
 18157  225A  00A9               	movwf	___fladd@b^(0+128)
 18158  225B  085A               	movf	(cellBalancing@minVoltage+3)^(0+128),w
 18159  225C  00B0               	movwf	(___fladd@a+3)^(0+128)
 18160  225D  0859               	movf	(cellBalancing@minVoltage+2)^(0+128),w
 18161  225E  00AF               	movwf	(___fladd@a+2)^(0+128)
 18162  225F  0858               	movf	(cellBalancing@minVoltage+1)^(0+128),w
 18163  2260  00AE               	movwf	(___fladd@a+1)^(0+128)
 18164  2261  0857               	movf	cellBalancing@minVoltage^(0+128),w
 18165  2262  00AD               	movwf	___fladd@a^(0+128)
 18166  2263  3193  2374  31A1   	fcall	___fladd
 18167  2266  0021               	movlb	1	; select bank1
 18168  2267  082C               	movf	(?___fladd+3)^(0+128),w
 18169  2268  00C8               	movwf	(___flge@ff2+3)^(0+128)
 18170  2269  082B               	movf	(?___fladd+2)^(0+128),w
 18171  226A  00C7               	movwf	(___flge@ff2+2)^(0+128)
 18172  226B  082A               	movf	(?___fladd+1)^(0+128),w
 18173  226C  00C6               	movwf	(___flge@ff2+1)^(0+128)
 18174  226D  0829               	movf	?___fladd^(0+128),w
 18175  226E  00C5               	movwf	___flge@ff2^(0+128)
 18176  226F  31AE  26C7  31A1   	fcall	___flge
 18177  2272  3000               	movlw	0
 18178  2273  1803               	btfsc	3,0
 18179  2274  3001               	movlw	1
 18180  2275  0021               	movlb	1	; select bank1
 18181  2276  00D6               	movwf	cellBalancing@boolean^(0+128)
 18182                           
 18183                           ;ltc6804.c: 120: setDischarge(i, boolean, balanceEn);
 18184  2277  085E               	movf	(cellBalancing@i_1334+1)^(0+128),w
 18185  2278  00F4               	movwf	setDischarge@index+1
 18186  2279  085D               	movf	cellBalancing@i_1334^(0+128),w
 18187  227A  00F3               	movwf	setDischarge@index
 18188  227B  0856               	movf	cellBalancing@boolean^(0+128),w
 18189  227C  00D4               	movwf	??_cellBalancing^(0+128)
 18190  227D  0854               	movf	??_cellBalancing^(0+128),w
 18191  227E  00F5               	movwf	setDischarge@boolean
 18192  227F  0853               	movf	cellBalancing@balanceEn^(0+128),w
 18193  2280  00D5               	movwf	(??_cellBalancing+1)^(0+128)
 18194  2281  0855               	movf	(??_cellBalancing+1)^(0+128),w
 18195  2282  00F6               	movwf	setDischarge@balanceEn
 18196  2283  319E  2627  31A1   	fcall	_setDischarge
 18197  2286  3001               	movlw	1
 18198  2287  0021               	movlb	1	; select bank1
 18199  2288  07DD               	addwf	cellBalancing@i_1334^(0+128),f
 18200  2289  3000               	movlw	0
 18201  228A  3DDE               	addwfc	(cellBalancing@i_1334+1)^(0+128),f
 18202  228B  2A30               	goto	l8024
 18203  228C                     l8026:	
 18204                           
 18205                           ;ltc6804.c: 121: }
 18206                           ;ltc6804.c: 122: LTC6804_wrcfg(1, configReg);
 18207  228C  30B1               	movlw	(low (_configReg| (0+512)))& (0+255)
 18208  228D  0021               	movlb	1	; select bank1
 18209  228E  00D4               	movwf	??_cellBalancing^(0+128)
 18210  228F  0854               	movf	??_cellBalancing^(0+128),w
 18211  2290  0020               	movlb	0	; select bank0
 18212  2291  00B1               	movwf	LTC6804_wrcfg@config
 18213  2292  3001               	movlw	1
 18214  2293  31AF  2761         	fcall	_LTC6804_wrcfg
 18215  2295  0008               	return
 18216  2296                     __end_of_cellBalancing:	
 18217                           
 18218                           	psect	text48
 18219  1E27                     __ptext48:	
 18220 ;; *************** function _setDischarge *****************
 18221 ;; Defined at:
 18222 ;;		line 125 in file "ltc6804.c"
 18223 ;; Parameters:    Size  Location     Type
 18224 ;;  index           2    3[COMMON] int 
 18225 ;;  boolean         1    5[COMMON] unsigned char 
 18226 ;;  balanceEn       1    6[COMMON] PTR int 
 18227 ;;		 -> main@balanceEn(24), 
 18228 ;; Auto vars:     Size  Location     Type
 18229 ;;		None
 18230 ;; Return value:  Size  Location     Type
 18231 ;;                  1    wreg      void 
 18232 ;; Registers used:
 18233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 18234 ;; Tracked objects:
 18235 ;;		On entry : 0/0
 18236 ;;		On exit  : 0/0
 18237 ;;		Unchanged: 0/0
 18238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18243 ;;Total ram usage:        5 bytes
 18244 ;; Hardware stack levels used:    1
 18245 ;; Hardware stack levels required when called:    2
 18246 ;; This function calls:
 18247 ;;		Nothing
 18248 ;; This function is called by:
 18249 ;;		_cellBalancing
 18250 ;; This function uses a non-reentrant model
 18251 ;;
 18252                           
 18253                           
 18254                           ;psect for function _setDischarge
 18255  1E27                     _setDischarge:	
 18256                           
 18257                           ;ltc6804.c: 126: switch(index){
 18258                           
 18259                           ;incstack = 0
 18260                           ; Regs used in _setDischarge: [wreg-fsr1h+status,2+status,0]
 18261  1E27  2FF0               	goto	l6062
 18262  1E28                     l5940:	
 18263                           ;ltc6804.c: 127: case 0:
 18264                           
 18265                           
 18266                           ;ltc6804.c: 128: if(boolean){
 18267  1E28  0875               	movf	setDischarge@boolean,w
 18268  1E29  1903               	btfsc	3,2
 18269  1E2A  2E3D               	goto	l5946
 18270                           
 18271                           ;ltc6804.c: 129: configReg[0][4]= configReg[0][4] | 0x01;
 18272  1E2B  0025               	movlb	5	; select bank5
 18273  1E2C  0835               	movf	(_configReg^(0+640)+4),w
 18274  1E2D  3801               	iorlw	1
 18275  1E2E  00F7               	movwf	??_setDischarge
 18276  1E2F  0877               	movf	??_setDischarge,w
 18277  1E30  00B5               	movwf	(_configReg^(0+640)+4)
 18278                           
 18279                           ;ltc6804.c: 130: balanceEn[index] = 1;
 18280  1E31  3573               	lslf	setDischarge@index,w
 18281  1E32  0776               	addwf	setDischarge@balanceEn,w
 18282  1E33  00F7               	movwf	??_setDischarge
 18283  1E34  0877               	movf	??_setDischarge,w
 18284  1E35  0086               	movwf	6
 18285  1E36  3002               	movlw	2	; select bank4/5
 18286  1E37  0087               	movwf	7
 18287  1E38  3001               	movlw	1
 18288  1E39  3FC0               	movwi [0]fsr1
 18289  1E3A  3000               	movlw	0
 18290  1E3B  3FC1               	movwi [1]fsr1
 18291                           
 18292                           ;ltc6804.c: 131: }else{
 18293  1E3C  0008               	return
 18294  1E3D                     l5946:	
 18295                           
 18296                           ;ltc6804.c: 132: configReg[0][4]= configReg[0][4] & (~0x01);
 18297  1E3D  0025               	movlb	5	; select bank5
 18298  1E3E  0835               	movf	(_configReg^(0+640)+4),w
 18299  1E3F  39FE               	andlw	254
 18300  1E40  00F7               	movwf	??_setDischarge
 18301  1E41  0877               	movf	??_setDischarge,w
 18302  1E42  00B5               	movwf	(_configReg^(0+640)+4)
 18303                           
 18304                           ;ltc6804.c: 133: balanceEn[index] = 0;
 18305  1E43  3573               	lslf	setDischarge@index,w
 18306  1E44  0776               	addwf	setDischarge@balanceEn,w
 18307  1E45  00F7               	movwf	??_setDischarge
 18308  1E46  0877               	movf	??_setDischarge,w
 18309  1E47  0086               	movwf	6
 18310  1E48  3002               	movlw	2	; select bank4/5
 18311  1E49  0087               	movwf	7
 18312  1E4A  3000               	movlw	0
 18313  1E4B  3FC0               	movwi [0]fsr1
 18314  1E4C  3FC1               	movwi [1]fsr1
 18315                           
 18316                           ;ltc6804.c: 134: }
 18317                           ;ltc6804.c: 135: break;
 18318  1E4D  0008               	return
 18319  1E4E                     l5950:	
 18320                           ;ltc6804.c: 136: case 1:
 18321                           
 18322                           
 18323                           ;ltc6804.c: 137: if(boolean){
 18324  1E4E  0875               	movf	setDischarge@boolean,w
 18325  1E4F  1903               	btfsc	3,2
 18326  1E50  2E63               	goto	l5956
 18327                           
 18328                           ;ltc6804.c: 138: configReg[0][4]= configReg[0][4] | 0x02;
 18329  1E51  0025               	movlb	5	; select bank5
 18330  1E52  0835               	movf	(_configReg^(0+640)+4),w
 18331  1E53  3802               	iorlw	2
 18332  1E54  00F7               	movwf	??_setDischarge
 18333  1E55  0877               	movf	??_setDischarge,w
 18334  1E56  00B5               	movwf	(_configReg^(0+640)+4)
 18335                           
 18336                           ;ltc6804.c: 139: balanceEn[index] = 1;
 18337  1E57  3573               	lslf	setDischarge@index,w
 18338  1E58  0776               	addwf	setDischarge@balanceEn,w
 18339  1E59  00F7               	movwf	??_setDischarge
 18340  1E5A  0877               	movf	??_setDischarge,w
 18341  1E5B  0086               	movwf	6
 18342  1E5C  3002               	movlw	2	; select bank4/5
 18343  1E5D  0087               	movwf	7
 18344  1E5E  3001               	movlw	1
 18345  1E5F  3FC0               	movwi [0]fsr1
 18346  1E60  3000               	movlw	0
 18347  1E61  3FC1               	movwi [1]fsr1
 18348                           
 18349                           ;ltc6804.c: 140: }else{
 18350  1E62  0008               	return
 18351  1E63                     l5956:	
 18352                           
 18353                           ;ltc6804.c: 141: configReg[0][4]= configReg[0][4] & (~0x02);
 18354  1E63  0025               	movlb	5	; select bank5
 18355  1E64  0835               	movf	(_configReg^(0+640)+4),w
 18356  1E65  39FD               	andlw	253
 18357  1E66  00F7               	movwf	??_setDischarge
 18358  1E67  0877               	movf	??_setDischarge,w
 18359  1E68  00B5               	movwf	(_configReg^(0+640)+4)
 18360                           
 18361                           ;ltc6804.c: 142: balanceEn[index] = 0;
 18362  1E69  3573               	lslf	setDischarge@index,w
 18363  1E6A  0776               	addwf	setDischarge@balanceEn,w
 18364  1E6B  00F7               	movwf	??_setDischarge
 18365  1E6C  0877               	movf	??_setDischarge,w
 18366  1E6D  0086               	movwf	6
 18367  1E6E  3002               	movlw	2	; select bank4/5
 18368  1E6F  0087               	movwf	7
 18369  1E70  3000               	movlw	0
 18370  1E71  3FC0               	movwi [0]fsr1
 18371  1E72  3FC1               	movwi [1]fsr1
 18372                           
 18373                           ;ltc6804.c: 143: }
 18374                           ;ltc6804.c: 144: break;
 18375  1E73  0008               	return
 18376  1E74                     l5960:	
 18377                           ;ltc6804.c: 145: case 2:
 18378                           
 18379                           
 18380                           ;ltc6804.c: 146: if(boolean){
 18381  1E74  0875               	movf	setDischarge@boolean,w
 18382  1E75  1903               	btfsc	3,2
 18383  1E76  2E89               	goto	l5966
 18384                           
 18385                           ;ltc6804.c: 147: configReg[0][4]= configReg[0][4] | 0x04;
 18386  1E77  0025               	movlb	5	; select bank5
 18387  1E78  0835               	movf	(_configReg^(0+640)+4),w
 18388  1E79  3804               	iorlw	4
 18389  1E7A  00F7               	movwf	??_setDischarge
 18390  1E7B  0877               	movf	??_setDischarge,w
 18391  1E7C  00B5               	movwf	(_configReg^(0+640)+4)
 18392                           
 18393                           ;ltc6804.c: 148: balanceEn[index] = 1;
 18394  1E7D  3573               	lslf	setDischarge@index,w
 18395  1E7E  0776               	addwf	setDischarge@balanceEn,w
 18396  1E7F  00F7               	movwf	??_setDischarge
 18397  1E80  0877               	movf	??_setDischarge,w
 18398  1E81  0086               	movwf	6
 18399  1E82  3002               	movlw	2	; select bank4/5
 18400  1E83  0087               	movwf	7
 18401  1E84  3001               	movlw	1
 18402  1E85  3FC0               	movwi [0]fsr1
 18403  1E86  3000               	movlw	0
 18404  1E87  3FC1               	movwi [1]fsr1
 18405                           
 18406                           ;ltc6804.c: 149: }else{
 18407  1E88  0008               	return
 18408  1E89                     l5966:	
 18409                           
 18410                           ;ltc6804.c: 150: configReg[0][4]= configReg[0][4] & (~0x04);
 18411  1E89  0025               	movlb	5	; select bank5
 18412  1E8A  0835               	movf	(_configReg^(0+640)+4),w
 18413  1E8B  39FB               	andlw	251
 18414  1E8C  00F7               	movwf	??_setDischarge
 18415  1E8D  0877               	movf	??_setDischarge,w
 18416  1E8E  00B5               	movwf	(_configReg^(0+640)+4)
 18417                           
 18418                           ;ltc6804.c: 151: balanceEn[index] = 0;
 18419  1E8F  3573               	lslf	setDischarge@index,w
 18420  1E90  0776               	addwf	setDischarge@balanceEn,w
 18421  1E91  00F7               	movwf	??_setDischarge
 18422  1E92  0877               	movf	??_setDischarge,w
 18423  1E93  0086               	movwf	6
 18424  1E94  3002               	movlw	2	; select bank4/5
 18425  1E95  0087               	movwf	7
 18426  1E96  3000               	movlw	0
 18427  1E97  3FC0               	movwi [0]fsr1
 18428  1E98  3FC1               	movwi [1]fsr1
 18429                           
 18430                           ;ltc6804.c: 152: }
 18431                           ;ltc6804.c: 153: break;
 18432  1E99  0008               	return
 18433  1E9A                     l5970:	
 18434                           ;ltc6804.c: 154: case 3:
 18435                           
 18436                           
 18437                           ;ltc6804.c: 155: if(boolean){
 18438  1E9A  0875               	movf	setDischarge@boolean,w
 18439  1E9B  1903               	btfsc	3,2
 18440  1E9C  2EAF               	goto	l5976
 18441                           
 18442                           ;ltc6804.c: 156: configReg[0][4]= configReg[0][4] | 0x08;
 18443  1E9D  0025               	movlb	5	; select bank5
 18444  1E9E  0835               	movf	(_configReg^(0+640)+4),w
 18445  1E9F  3808               	iorlw	8
 18446  1EA0  00F7               	movwf	??_setDischarge
 18447  1EA1  0877               	movf	??_setDischarge,w
 18448  1EA2  00B5               	movwf	(_configReg^(0+640)+4)
 18449                           
 18450                           ;ltc6804.c: 157: balanceEn[index] = 1;
 18451  1EA3  3573               	lslf	setDischarge@index,w
 18452  1EA4  0776               	addwf	setDischarge@balanceEn,w
 18453  1EA5  00F7               	movwf	??_setDischarge
 18454  1EA6  0877               	movf	??_setDischarge,w
 18455  1EA7  0086               	movwf	6
 18456  1EA8  3002               	movlw	2	; select bank4/5
 18457  1EA9  0087               	movwf	7
 18458  1EAA  3001               	movlw	1
 18459  1EAB  3FC0               	movwi [0]fsr1
 18460  1EAC  3000               	movlw	0
 18461  1EAD  3FC1               	movwi [1]fsr1
 18462                           
 18463                           ;ltc6804.c: 158: }else{
 18464  1EAE  0008               	return
 18465  1EAF                     l5976:	
 18466                           
 18467                           ;ltc6804.c: 159: configReg[0][4]= configReg[0][4] & (~0x08);
 18468  1EAF  0025               	movlb	5	; select bank5
 18469  1EB0  0835               	movf	(_configReg^(0+640)+4),w
 18470  1EB1  39F7               	andlw	247
 18471  1EB2  00F7               	movwf	??_setDischarge
 18472  1EB3  0877               	movf	??_setDischarge,w
 18473  1EB4  00B5               	movwf	(_configReg^(0+640)+4)
 18474                           
 18475                           ;ltc6804.c: 160: balanceEn[index] = 0;
 18476  1EB5  3573               	lslf	setDischarge@index,w
 18477  1EB6  0776               	addwf	setDischarge@balanceEn,w
 18478  1EB7  00F7               	movwf	??_setDischarge
 18479  1EB8  0877               	movf	??_setDischarge,w
 18480  1EB9  0086               	movwf	6
 18481  1EBA  3002               	movlw	2	; select bank4/5
 18482  1EBB  0087               	movwf	7
 18483  1EBC  3000               	movlw	0
 18484  1EBD  3FC0               	movwi [0]fsr1
 18485  1EBE  3FC1               	movwi [1]fsr1
 18486                           
 18487                           ;ltc6804.c: 161: }
 18488                           ;ltc6804.c: 162: break;
 18489  1EBF  0008               	return
 18490  1EC0                     l5980:	
 18491                           ;ltc6804.c: 163: case 4:
 18492                           
 18493                           
 18494                           ;ltc6804.c: 164: if(boolean){
 18495  1EC0  0875               	movf	setDischarge@boolean,w
 18496  1EC1  1903               	btfsc	3,2
 18497  1EC2  2ED5               	goto	l5986
 18498                           
 18499                           ;ltc6804.c: 165: configReg[0][4]= configReg[0][4] | 0x10;
 18500  1EC3  0025               	movlb	5	; select bank5
 18501  1EC4  0835               	movf	(_configReg^(0+640)+4),w
 18502  1EC5  3810               	iorlw	16
 18503  1EC6  00F7               	movwf	??_setDischarge
 18504  1EC7  0877               	movf	??_setDischarge,w
 18505  1EC8  00B5               	movwf	(_configReg^(0+640)+4)
 18506                           
 18507                           ;ltc6804.c: 166: balanceEn[index] = 1;
 18508  1EC9  3573               	lslf	setDischarge@index,w
 18509  1ECA  0776               	addwf	setDischarge@balanceEn,w
 18510  1ECB  00F7               	movwf	??_setDischarge
 18511  1ECC  0877               	movf	??_setDischarge,w
 18512  1ECD  0086               	movwf	6
 18513  1ECE  3002               	movlw	2	; select bank4/5
 18514  1ECF  0087               	movwf	7
 18515  1ED0  3001               	movlw	1
 18516  1ED1  3FC0               	movwi [0]fsr1
 18517  1ED2  3000               	movlw	0
 18518  1ED3  3FC1               	movwi [1]fsr1
 18519                           
 18520                           ;ltc6804.c: 167: }else{
 18521  1ED4  0008               	return
 18522  1ED5                     l5986:	
 18523                           
 18524                           ;ltc6804.c: 168: configReg[0][4]= configReg[0][4] & (~0x10);
 18525  1ED5  0025               	movlb	5	; select bank5
 18526  1ED6  0835               	movf	(_configReg^(0+640)+4),w
 18527  1ED7  39EF               	andlw	239
 18528  1ED8  00F7               	movwf	??_setDischarge
 18529  1ED9  0877               	movf	??_setDischarge,w
 18530  1EDA  00B5               	movwf	(_configReg^(0+640)+4)
 18531                           
 18532                           ;ltc6804.c: 169: balanceEn[index] = 0;
 18533  1EDB  3573               	lslf	setDischarge@index,w
 18534  1EDC  0776               	addwf	setDischarge@balanceEn,w
 18535  1EDD  00F7               	movwf	??_setDischarge
 18536  1EDE  0877               	movf	??_setDischarge,w
 18537  1EDF  0086               	movwf	6
 18538  1EE0  3002               	movlw	2	; select bank4/5
 18539  1EE1  0087               	movwf	7
 18540  1EE2  3000               	movlw	0
 18541  1EE3  3FC0               	movwi [0]fsr1
 18542  1EE4  3FC1               	movwi [1]fsr1
 18543                           
 18544                           ;ltc6804.c: 170: }
 18545                           ;ltc6804.c: 171: break;
 18546  1EE5  0008               	return
 18547  1EE6                     l5990:	
 18548                           ;ltc6804.c: 172: case 5:
 18549                           
 18550                           
 18551                           ;ltc6804.c: 173: if(boolean){
 18552  1EE6  0875               	movf	setDischarge@boolean,w
 18553  1EE7  1903               	btfsc	3,2
 18554  1EE8  2EFB               	goto	l5996
 18555                           
 18556                           ;ltc6804.c: 174: configReg[0][4]= configReg[0][4] | 0x20;
 18557  1EE9  0025               	movlb	5	; select bank5
 18558  1EEA  0835               	movf	(_configReg^(0+640)+4),w
 18559  1EEB  3820               	iorlw	32
 18560  1EEC  00F7               	movwf	??_setDischarge
 18561  1EED  0877               	movf	??_setDischarge,w
 18562  1EEE  00B5               	movwf	(_configReg^(0+640)+4)
 18563                           
 18564                           ;ltc6804.c: 175: balanceEn[index] = 1;
 18565  1EEF  3573               	lslf	setDischarge@index,w
 18566  1EF0  0776               	addwf	setDischarge@balanceEn,w
 18567  1EF1  00F7               	movwf	??_setDischarge
 18568  1EF2  0877               	movf	??_setDischarge,w
 18569  1EF3  0086               	movwf	6
 18570  1EF4  3002               	movlw	2	; select bank4/5
 18571  1EF5  0087               	movwf	7
 18572  1EF6  3001               	movlw	1
 18573  1EF7  3FC0               	movwi [0]fsr1
 18574  1EF8  3000               	movlw	0
 18575  1EF9  3FC1               	movwi [1]fsr1
 18576                           
 18577                           ;ltc6804.c: 176: }else{
 18578  1EFA  0008               	return
 18579  1EFB                     l5996:	
 18580                           
 18581                           ;ltc6804.c: 177: configReg[0][4]= configReg[0][4] & (~0x20);
 18582  1EFB  0025               	movlb	5	; select bank5
 18583  1EFC  0835               	movf	(_configReg^(0+640)+4),w
 18584  1EFD  39DF               	andlw	223
 18585  1EFE  00F7               	movwf	??_setDischarge
 18586  1EFF  0877               	movf	??_setDischarge,w
 18587  1F00  00B5               	movwf	(_configReg^(0+640)+4)
 18588                           
 18589                           ;ltc6804.c: 178: balanceEn[index] = 0;
 18590  1F01  3573               	lslf	setDischarge@index,w
 18591  1F02  0776               	addwf	setDischarge@balanceEn,w
 18592  1F03  00F7               	movwf	??_setDischarge
 18593  1F04  0877               	movf	??_setDischarge,w
 18594  1F05  0086               	movwf	6
 18595  1F06  3002               	movlw	2	; select bank4/5
 18596  1F07  0087               	movwf	7
 18597  1F08  3000               	movlw	0
 18598  1F09  3FC0               	movwi [0]fsr1
 18599  1F0A  3FC1               	movwi [1]fsr1
 18600                           
 18601                           ;ltc6804.c: 179: }
 18602                           ;ltc6804.c: 180: break;
 18603  1F0B  0008               	return
 18604  1F0C                     l6000:	
 18605                           ;ltc6804.c: 181: case 6:
 18606                           
 18607                           
 18608                           ;ltc6804.c: 182: if(boolean){
 18609  1F0C  0875               	movf	setDischarge@boolean,w
 18610  1F0D  1903               	btfsc	3,2
 18611  1F0E  2F21               	goto	l6006
 18612                           
 18613                           ;ltc6804.c: 183: configReg[0][4]= configReg[0][4] | 0x40;
 18614  1F0F  0025               	movlb	5	; select bank5
 18615  1F10  0835               	movf	(_configReg^(0+640)+4),w
 18616  1F11  3840               	iorlw	64
 18617  1F12  00F7               	movwf	??_setDischarge
 18618  1F13  0877               	movf	??_setDischarge,w
 18619  1F14  00B5               	movwf	(_configReg^(0+640)+4)
 18620                           
 18621                           ;ltc6804.c: 184: balanceEn[index] = 1;
 18622  1F15  3573               	lslf	setDischarge@index,w
 18623  1F16  0776               	addwf	setDischarge@balanceEn,w
 18624  1F17  00F7               	movwf	??_setDischarge
 18625  1F18  0877               	movf	??_setDischarge,w
 18626  1F19  0086               	movwf	6
 18627  1F1A  3002               	movlw	2	; select bank4/5
 18628  1F1B  0087               	movwf	7
 18629  1F1C  3001               	movlw	1
 18630  1F1D  3FC0               	movwi [0]fsr1
 18631  1F1E  3000               	movlw	0
 18632  1F1F  3FC1               	movwi [1]fsr1
 18633                           
 18634                           ;ltc6804.c: 185: }else{
 18635  1F20  0008               	return
 18636  1F21                     l6006:	
 18637                           
 18638                           ;ltc6804.c: 186: configReg[0][4]= configReg[0][4] & (~0x40);
 18639  1F21  0025               	movlb	5	; select bank5
 18640  1F22  0835               	movf	(_configReg^(0+640)+4),w
 18641  1F23  39BF               	andlw	191
 18642  1F24  00F7               	movwf	??_setDischarge
 18643  1F25  0877               	movf	??_setDischarge,w
 18644  1F26  00B5               	movwf	(_configReg^(0+640)+4)
 18645                           
 18646                           ;ltc6804.c: 187: balanceEn[index] = 0;
 18647  1F27  3573               	lslf	setDischarge@index,w
 18648  1F28  0776               	addwf	setDischarge@balanceEn,w
 18649  1F29  00F7               	movwf	??_setDischarge
 18650  1F2A  0877               	movf	??_setDischarge,w
 18651  1F2B  0086               	movwf	6
 18652  1F2C  3002               	movlw	2	; select bank4/5
 18653  1F2D  0087               	movwf	7
 18654  1F2E  3000               	movlw	0
 18655  1F2F  3FC0               	movwi [0]fsr1
 18656  1F30  3FC1               	movwi [1]fsr1
 18657                           
 18658                           ;ltc6804.c: 188: }
 18659                           ;ltc6804.c: 189: break;
 18660  1F31  0008               	return
 18661  1F32                     l6010:	
 18662                           ;ltc6804.c: 190: case 7:
 18663                           
 18664                           
 18665                           ;ltc6804.c: 191: if(boolean){
 18666  1F32  0875               	movf	setDischarge@boolean,w
 18667  1F33  1903               	btfsc	3,2
 18668  1F34  2F47               	goto	l6016
 18669                           
 18670                           ;ltc6804.c: 192: configReg[0][4]= configReg[0][4] | 0x80;
 18671  1F35  0025               	movlb	5	; select bank5
 18672  1F36  0835               	movf	(_configReg^(0+640)+4),w
 18673  1F37  3880               	iorlw	128
 18674  1F38  00F7               	movwf	??_setDischarge
 18675  1F39  0877               	movf	??_setDischarge,w
 18676  1F3A  00B5               	movwf	(_configReg^(0+640)+4)
 18677                           
 18678                           ;ltc6804.c: 193: balanceEn[index] = 1;
 18679  1F3B  3573               	lslf	setDischarge@index,w
 18680  1F3C  0776               	addwf	setDischarge@balanceEn,w
 18681  1F3D  00F7               	movwf	??_setDischarge
 18682  1F3E  0877               	movf	??_setDischarge,w
 18683  1F3F  0086               	movwf	6
 18684  1F40  3002               	movlw	2	; select bank4/5
 18685  1F41  0087               	movwf	7
 18686  1F42  3001               	movlw	1
 18687  1F43  3FC0               	movwi [0]fsr1
 18688  1F44  3000               	movlw	0
 18689  1F45  3FC1               	movwi [1]fsr1
 18690                           
 18691                           ;ltc6804.c: 194: }else{
 18692  1F46  0008               	return
 18693  1F47                     l6016:	
 18694                           
 18695                           ;ltc6804.c: 195: configReg[0][4]= configReg[0][4] & (~0x80);
 18696  1F47  0025               	movlb	5	; select bank5
 18697  1F48  0835               	movf	(_configReg^(0+640)+4),w
 18698  1F49  397F               	andlw	127
 18699  1F4A  00F7               	movwf	??_setDischarge
 18700  1F4B  0877               	movf	??_setDischarge,w
 18701  1F4C  00B5               	movwf	(_configReg^(0+640)+4)
 18702                           
 18703                           ;ltc6804.c: 196: balanceEn[index] = 0;
 18704  1F4D  3573               	lslf	setDischarge@index,w
 18705  1F4E  0776               	addwf	setDischarge@balanceEn,w
 18706  1F4F  00F7               	movwf	??_setDischarge
 18707  1F50  0877               	movf	??_setDischarge,w
 18708  1F51  0086               	movwf	6
 18709  1F52  3002               	movlw	2	; select bank4/5
 18710  1F53  0087               	movwf	7
 18711  1F54  3000               	movlw	0
 18712  1F55  3FC0               	movwi [0]fsr1
 18713  1F56  3FC1               	movwi [1]fsr1
 18714                           
 18715                           ;ltc6804.c: 197: }
 18716                           ;ltc6804.c: 198: break;
 18717  1F57  0008               	return
 18718  1F58                     l6020:	
 18719                           ;ltc6804.c: 199: case 8:
 18720                           
 18721                           
 18722                           ;ltc6804.c: 200: if(boolean){
 18723  1F58  0875               	movf	setDischarge@boolean,w
 18724  1F59  1903               	btfsc	3,2
 18725  1F5A  2F6D               	goto	l6026
 18726                           
 18727                           ;ltc6804.c: 201: configReg[0][5]= configReg[0][5] | 0x01;
 18728  1F5B  0025               	movlb	5	; select bank5
 18729  1F5C  0836               	movf	(_configReg^(0+640)+5),w
 18730  1F5D  3801               	iorlw	1
 18731  1F5E  00F7               	movwf	??_setDischarge
 18732  1F5F  0877               	movf	??_setDischarge,w
 18733  1F60  00B6               	movwf	(_configReg^(0+640)+5)
 18734                           
 18735                           ;ltc6804.c: 202: balanceEn[index] = 1;
 18736  1F61  3573               	lslf	setDischarge@index,w
 18737  1F62  0776               	addwf	setDischarge@balanceEn,w
 18738  1F63  00F7               	movwf	??_setDischarge
 18739  1F64  0877               	movf	??_setDischarge,w
 18740  1F65  0086               	movwf	6
 18741  1F66  3002               	movlw	2	; select bank4/5
 18742  1F67  0087               	movwf	7
 18743  1F68  3001               	movlw	1
 18744  1F69  3FC0               	movwi [0]fsr1
 18745  1F6A  3000               	movlw	0
 18746  1F6B  3FC1               	movwi [1]fsr1
 18747                           
 18748                           ;ltc6804.c: 203: }else{
 18749  1F6C  0008               	return
 18750  1F6D                     l6026:	
 18751                           
 18752                           ;ltc6804.c: 204: configReg[0][5]= configReg[0][5] & (~0x01);
 18753  1F6D  0025               	movlb	5	; select bank5
 18754  1F6E  0836               	movf	(_configReg^(0+640)+5),w
 18755  1F6F  39FE               	andlw	254
 18756  1F70  00F7               	movwf	??_setDischarge
 18757  1F71  0877               	movf	??_setDischarge,w
 18758  1F72  00B6               	movwf	(_configReg^(0+640)+5)
 18759                           
 18760                           ;ltc6804.c: 205: balanceEn[index] = 0;
 18761  1F73  3573               	lslf	setDischarge@index,w
 18762  1F74  0776               	addwf	setDischarge@balanceEn,w
 18763  1F75  00F7               	movwf	??_setDischarge
 18764  1F76  0877               	movf	??_setDischarge,w
 18765  1F77  0086               	movwf	6
 18766  1F78  3002               	movlw	2	; select bank4/5
 18767  1F79  0087               	movwf	7
 18768  1F7A  3000               	movlw	0
 18769  1F7B  3FC0               	movwi [0]fsr1
 18770  1F7C  3FC1               	movwi [1]fsr1
 18771                           
 18772                           ;ltc6804.c: 206: }
 18773                           ;ltc6804.c: 207: break;
 18774  1F7D  0008               	return
 18775  1F7E                     l6030:	
 18776                           ;ltc6804.c: 208: case 9:
 18777                           
 18778                           
 18779                           ;ltc6804.c: 209: if(boolean){
 18780  1F7E  0875               	movf	setDischarge@boolean,w
 18781  1F7F  1903               	btfsc	3,2
 18782  1F80  2F93               	goto	l6036
 18783                           
 18784                           ;ltc6804.c: 210: configReg[0][5]= configReg[0][5] | 0x02;
 18785  1F81  0025               	movlb	5	; select bank5
 18786  1F82  0836               	movf	(_configReg^(0+640)+5),w
 18787  1F83  3802               	iorlw	2
 18788  1F84  00F7               	movwf	??_setDischarge
 18789  1F85  0877               	movf	??_setDischarge,w
 18790  1F86  00B6               	movwf	(_configReg^(0+640)+5)
 18791                           
 18792                           ;ltc6804.c: 211: balanceEn[index] = 1;
 18793  1F87  3573               	lslf	setDischarge@index,w
 18794  1F88  0776               	addwf	setDischarge@balanceEn,w
 18795  1F89  00F7               	movwf	??_setDischarge
 18796  1F8A  0877               	movf	??_setDischarge,w
 18797  1F8B  0086               	movwf	6
 18798  1F8C  3002               	movlw	2	; select bank4/5
 18799  1F8D  0087               	movwf	7
 18800  1F8E  3001               	movlw	1
 18801  1F8F  3FC0               	movwi [0]fsr1
 18802  1F90  3000               	movlw	0
 18803  1F91  3FC1               	movwi [1]fsr1
 18804                           
 18805                           ;ltc6804.c: 212: }else{
 18806  1F92  0008               	return
 18807  1F93                     l6036:	
 18808                           
 18809                           ;ltc6804.c: 213: configReg[0][5]= configReg[0][5] & (~0x02);
 18810  1F93  0025               	movlb	5	; select bank5
 18811  1F94  0836               	movf	(_configReg^(0+640)+5),w
 18812  1F95  39FD               	andlw	253
 18813  1F96  00F7               	movwf	??_setDischarge
 18814  1F97  0877               	movf	??_setDischarge,w
 18815  1F98  00B6               	movwf	(_configReg^(0+640)+5)
 18816                           
 18817                           ;ltc6804.c: 214: balanceEn[index] = 0;
 18818  1F99  3573               	lslf	setDischarge@index,w
 18819  1F9A  0776               	addwf	setDischarge@balanceEn,w
 18820  1F9B  00F7               	movwf	??_setDischarge
 18821  1F9C  0877               	movf	??_setDischarge,w
 18822  1F9D  0086               	movwf	6
 18823  1F9E  3002               	movlw	2	; select bank4/5
 18824  1F9F  0087               	movwf	7
 18825  1FA0  3000               	movlw	0
 18826  1FA1  3FC0               	movwi [0]fsr1
 18827  1FA2  3FC1               	movwi [1]fsr1
 18828                           
 18829                           ;ltc6804.c: 215: }
 18830                           ;ltc6804.c: 216: break;
 18831  1FA3  0008               	return
 18832  1FA4                     l6040:	
 18833                           ;ltc6804.c: 217: case 10:
 18834                           
 18835                           
 18836                           ;ltc6804.c: 218: if(boolean){
 18837  1FA4  0875               	movf	setDischarge@boolean,w
 18838  1FA5  1903               	btfsc	3,2
 18839  1FA6  2FB9               	goto	l6046
 18840                           
 18841                           ;ltc6804.c: 219: configReg[0][5]= configReg[0][5] | 0x04;
 18842  1FA7  0025               	movlb	5	; select bank5
 18843  1FA8  0836               	movf	(_configReg^(0+640)+5),w
 18844  1FA9  3804               	iorlw	4
 18845  1FAA  00F7               	movwf	??_setDischarge
 18846  1FAB  0877               	movf	??_setDischarge,w
 18847  1FAC  00B6               	movwf	(_configReg^(0+640)+5)
 18848                           
 18849                           ;ltc6804.c: 220: balanceEn[index] = 1;
 18850  1FAD  3573               	lslf	setDischarge@index,w
 18851  1FAE  0776               	addwf	setDischarge@balanceEn,w
 18852  1FAF  00F7               	movwf	??_setDischarge
 18853  1FB0  0877               	movf	??_setDischarge,w
 18854  1FB1  0086               	movwf	6
 18855  1FB2  3002               	movlw	2	; select bank4/5
 18856  1FB3  0087               	movwf	7
 18857  1FB4  3001               	movlw	1
 18858  1FB5  3FC0               	movwi [0]fsr1
 18859  1FB6  3000               	movlw	0
 18860  1FB7  3FC1               	movwi [1]fsr1
 18861                           
 18862                           ;ltc6804.c: 221: }else{
 18863  1FB8  0008               	return
 18864  1FB9                     l6046:	
 18865                           
 18866                           ;ltc6804.c: 222: configReg[0][5]= configReg[0][5] & (~0x04);
 18867  1FB9  0025               	movlb	5	; select bank5
 18868  1FBA  0836               	movf	(_configReg^(0+640)+5),w
 18869  1FBB  39FB               	andlw	251
 18870  1FBC  00F7               	movwf	??_setDischarge
 18871  1FBD  0877               	movf	??_setDischarge,w
 18872  1FBE  00B6               	movwf	(_configReg^(0+640)+5)
 18873                           
 18874                           ;ltc6804.c: 223: balanceEn[index] = 0;
 18875  1FBF  3573               	lslf	setDischarge@index,w
 18876  1FC0  0776               	addwf	setDischarge@balanceEn,w
 18877  1FC1  00F7               	movwf	??_setDischarge
 18878  1FC2  0877               	movf	??_setDischarge,w
 18879  1FC3  0086               	movwf	6
 18880  1FC4  3002               	movlw	2	; select bank4/5
 18881  1FC5  0087               	movwf	7
 18882  1FC6  3000               	movlw	0
 18883  1FC7  3FC0               	movwi [0]fsr1
 18884  1FC8  3FC1               	movwi [1]fsr1
 18885                           
 18886                           ;ltc6804.c: 224: }
 18887                           ;ltc6804.c: 225: break;
 18888  1FC9  0008               	return
 18889  1FCA                     l6050:	
 18890                           ;ltc6804.c: 226: case 11:
 18891                           
 18892                           
 18893                           ;ltc6804.c: 227: if(boolean){
 18894  1FCA  0875               	movf	setDischarge@boolean,w
 18895  1FCB  1903               	btfsc	3,2
 18896  1FCC  2FDF               	goto	l6056
 18897                           
 18898                           ;ltc6804.c: 228: configReg[0][5]= configReg[0][5] | 0x08;
 18899  1FCD  0025               	movlb	5	; select bank5
 18900  1FCE  0836               	movf	(_configReg^(0+640)+5),w
 18901  1FCF  3808               	iorlw	8
 18902  1FD0  00F7               	movwf	??_setDischarge
 18903  1FD1  0877               	movf	??_setDischarge,w
 18904  1FD2  00B6               	movwf	(_configReg^(0+640)+5)
 18905                           
 18906                           ;ltc6804.c: 229: balanceEn[index] = 1;
 18907  1FD3  3573               	lslf	setDischarge@index,w
 18908  1FD4  0776               	addwf	setDischarge@balanceEn,w
 18909  1FD5  00F7               	movwf	??_setDischarge
 18910  1FD6  0877               	movf	??_setDischarge,w
 18911  1FD7  0086               	movwf	6
 18912  1FD8  3002               	movlw	2	; select bank4/5
 18913  1FD9  0087               	movwf	7
 18914  1FDA  3001               	movlw	1
 18915  1FDB  3FC0               	movwi [0]fsr1
 18916  1FDC  3000               	movlw	0
 18917  1FDD  3FC1               	movwi [1]fsr1
 18918                           
 18919                           ;ltc6804.c: 230: }else{
 18920  1FDE  0008               	return
 18921  1FDF                     l6056:	
 18922                           
 18923                           ;ltc6804.c: 231: configReg[0][5]= configReg[0][5] & (~0x08);
 18924  1FDF  0025               	movlb	5	; select bank5
 18925  1FE0  0836               	movf	(_configReg^(0+640)+5),w
 18926  1FE1  39F7               	andlw	247
 18927  1FE2  00F7               	movwf	??_setDischarge
 18928  1FE3  0877               	movf	??_setDischarge,w
 18929  1FE4  00B6               	movwf	(_configReg^(0+640)+5)
 18930                           
 18931                           ;ltc6804.c: 232: balanceEn[index] = 0;
 18932  1FE5  3573               	lslf	setDischarge@index,w
 18933  1FE6  0776               	addwf	setDischarge@balanceEn,w
 18934  1FE7  00F7               	movwf	??_setDischarge
 18935  1FE8  0877               	movf	??_setDischarge,w
 18936  1FE9  0086               	movwf	6
 18937  1FEA  3002               	movlw	2	; select bank4/5
 18938  1FEB  0087               	movwf	7
 18939  1FEC  3000               	movlw	0
 18940  1FED  3FC0               	movwi [0]fsr1
 18941  1FEE  3FC1               	movwi [1]fsr1
 18942                           
 18943                           ;ltc6804.c: 237: }
 18944                           
 18945                           ;ltc6804.c: 236: break;
 18946                           
 18947                           ;ltc6804.c: 235: default:
 18948                           
 18949                           ;ltc6804.c: 233: }
 18950                           ;ltc6804.c: 234: break;
 18951  1FEF  0008               	return
 18952  1FF0                     l6062:	
 18953                           
 18954                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18955                           ; Switch size 1, requested type "space"
 18956                           ; Number of cases is 1, Range of values is 0 to 0
 18957                           ; switch strategies available:
 18958                           ; Name         Instructions Cycles
 18959                           ; simple_byte            4     3 (average)
 18960                           ; direct_byte            8     6 (fixed)
 18961                           ; jumptable            260     6 (fixed)
 18962                           ;	Chosen strategy is simple_byte
 18963  1FF0  0874               	movf	setDischarge@index+1,w
 18964  1FF1  3A00               	xorlw	0	; case 0
 18965  1FF2  1903               	skipnz
 18966  1FF3  2FF5               	goto	l8382
 18967  1FF4  2FFF               	goto	l612
 18968  1FF5                     l8382:	
 18969                           
 18970                           ; Switch size 1, requested type "space"
 18971                           ; Number of cases is 12, Range of values is 0 to 11
 18972                           ; switch strategies available:
 18973                           ; Name         Instructions Cycles
 18974                           ; direct_byte           30     6 (fixed)
 18975                           ; simple_byte           37    19 (average)
 18976                           ; jumptable            260     6 (fixed)
 18977                           ;	Chosen strategy is direct_byte
 18978  1FF5  0873               	movf	setDischarge@index,w
 18979  1FF6  0084               	movwf	4
 18980  1FF7  300C               	movlw	12
 18981  1FF8  0204               	subwf	4,w
 18982  1FF9  1803               	skipnc
 18983  1FFA  0008               	return
 18984  1FFB  31B0               	movlp	high S8384
 18985  1FFC  3504               	lslf	4,w
 18986  1FFD  3E00               	addlw	low S8384
 18987  1FFE  0082               	movwf	2
 18988  1FFF                     l612:	
 18989  1FFF  0008               	return
 18990  2000                     __end_of_setDischarge:	
 18991                           
 18992                           	psect	swtext1
 18993  3000                     __pswtext1:	
 18994  3000                     S8384:	
 18995  3000  319E  2E28         	ljmp	l5940
 18996  3002  319E  2E4E         	ljmp	l5950
 18997  3004  319E  2E74         	ljmp	l5960
 18998  3006  319E  2E9A         	ljmp	l5970
 18999  3008  319E  2EC0         	ljmp	l5980
 19000  300A  319E  2EE6         	ljmp	l5990
 19001  300C  319F  2F0C         	ljmp	l6000
 19002  300E  319F  2F32         	ljmp	l6010
 19003  3010  319F  2F58         	ljmp	l6020
 19004  3012  319F  2F7E         	ljmp	l6030
 19005  3014  319F  2FA4         	ljmp	l6040
 19006  3016  319F  2FCA         	ljmp	l6050
 19007                           
 19008                           	psect	text49
 19009  2EC7                     __ptext49:	
 19010 ;; *************** function ___flge *****************
 19011 ;; Defined at:
 19012 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 19013 ;; Parameters:    Size  Location     Type
 19014 ;;  ff1             4   33[BANK1 ] void 
 19015 ;;  ff2             4   37[BANK1 ] void 
 19016 ;; Auto vars:     Size  Location     Type
 19017 ;;		None
 19018 ;; Return value:  Size  Location     Type
 19019 ;;		None               void
 19020 ;; Registers used:
 19021 ;;		wreg, status,2, status,0
 19022 ;; Tracked objects:
 19023 ;;		On entry : 0/0
 19024 ;;		On exit  : 0/0
 19025 ;;		Unchanged: 0/0
 19026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19027 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19029 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19030 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19031 ;;Total ram usage:       16 bytes
 19032 ;; Hardware stack levels used:    1
 19033 ;; Hardware stack levels required when called:    2
 19034 ;; This function calls:
 19035 ;;		Nothing
 19036 ;; This function is called by:
 19037 ;;		_main
 19038 ;;		_startUp
 19039 ;;		_writeVoltages
 19040 ;;		_measureVoltages
 19041 ;;		_cellBalancing
 19042 ;;		_sprintf
 19043 ;; This function uses a non-reentrant model
 19044 ;;
 19045                           
 19046                           
 19047                           ;psect for function ___flge
 19048  2EC7                     ___flge:	
 19049                           
 19050                           ;incstack = 0
 19051                           ; Regs used in ___flge: [wreg+status,2+status,0]
 19052  2EC7  3000               	movlw	0
 19053  2EC8  0021               	movlb	1	; select bank1
 19054  2EC9  0541               	andwf	___flge@ff1^(0+128),w
 19055  2ECA  00C9               	movwf	??___flge^(0+128)
 19056  2ECB  3000               	movlw	0
 19057  2ECC  0542               	andwf	(___flge@ff1+1)^(0+128),w
 19058  2ECD  00CA               	movwf	(??___flge^(0+128)+1)
 19059  2ECE  3080               	movlw	128
 19060  2ECF  0543               	andwf	(___flge@ff1+2)^(0+128),w
 19061  2ED0  00CB               	movwf	(??___flge^(0+128)+2)
 19062  2ED1  307F               	movlw	127
 19063  2ED2  0544               	andwf	(___flge@ff1+3)^(0+128),w
 19064  2ED3  00CC               	movwf	(??___flge^(0+128)+3)
 19065  2ED4  084C               	movf	(??___flge+3)^(0+128),w
 19066  2ED5  044B               	iorwf	(??___flge+2)^(0+128),w
 19067  2ED6  044A               	iorwf	(??___flge+1)^(0+128),w
 19068  2ED7  0449               	iorwf	??___flge^(0+128),w
 19069  2ED8  1D03               	skipz
 19070  2ED9  2EE2               	goto	l1161
 19071  2EDA  3000               	movlw	0
 19072  2EDB  00C4               	movwf	(___flge@ff1+3)^(0+128)
 19073  2EDC  3000               	movlw	0
 19074  2EDD  00C3               	movwf	(___flge@ff1+2)^(0+128)
 19075  2EDE  3000               	movlw	0
 19076  2EDF  00C2               	movwf	(___flge@ff1+1)^(0+128)
 19077  2EE0  3000               	movlw	0
 19078  2EE1  00C1               	movwf	___flge@ff1^(0+128)
 19079  2EE2                     l1161:	
 19080  2EE2  3000               	movlw	0
 19081  2EE3  0545               	andwf	___flge@ff2^(0+128),w
 19082  2EE4  00C9               	movwf	??___flge^(0+128)
 19083  2EE5  3000               	movlw	0
 19084  2EE6  0546               	andwf	(___flge@ff2+1)^(0+128),w
 19085  2EE7  00CA               	movwf	(??___flge^(0+128)+1)
 19086  2EE8  3080               	movlw	128
 19087  2EE9  0547               	andwf	(___flge@ff2+2)^(0+128),w
 19088  2EEA  00CB               	movwf	(??___flge^(0+128)+2)
 19089  2EEB  307F               	movlw	127
 19090  2EEC  0548               	andwf	(___flge@ff2+3)^(0+128),w
 19091  2EED  00CC               	movwf	(??___flge^(0+128)+3)
 19092  2EEE  084C               	movf	(??___flge+3)^(0+128),w
 19093  2EEF  044B               	iorwf	(??___flge+2)^(0+128),w
 19094  2EF0  044A               	iorwf	(??___flge+1)^(0+128),w
 19095  2EF1  0449               	iorwf	??___flge^(0+128),w
 19096  2EF2  1D03               	skipz
 19097  2EF3  2EFC               	goto	l4880
 19098  2EF4  3000               	movlw	0
 19099  2EF5  00C8               	movwf	(___flge@ff2+3)^(0+128)
 19100  2EF6  3000               	movlw	0
 19101  2EF7  00C7               	movwf	(___flge@ff2+2)^(0+128)
 19102  2EF8  3000               	movlw	0
 19103  2EF9  00C6               	movwf	(___flge@ff2+1)^(0+128)
 19104  2EFA  3000               	movlw	0
 19105  2EFB  00C5               	movwf	___flge@ff2^(0+128)
 19106  2EFC                     l4880:	
 19107  2EFC  1FC4               	btfss	(___flge@ff1+3)^(0+128),7
 19108  2EFD  2F25               	goto	l4884
 19109  2EFE  3000               	movlw	0
 19110  2EFF  00C9               	movwf	??___flge^(0+128)
 19111  2F00  3000               	movlw	0
 19112  2F01  00CA               	movwf	(??___flge^(0+128)+1)
 19113  2F02  3000               	movlw	0
 19114  2F03  00CB               	movwf	(??___flge^(0+128)+2)
 19115  2F04  3080               	movlw	128
 19116  2F05  00CC               	movwf	(??___flge^(0+128)+3)
 19117  2F06  0941               	comf	___flge@ff1^(0+128),w
 19118  2F07  00CD               	movwf	(??___flge+4)^(0+128)
 19119  2F08  0942               	comf	(___flge@ff1+1)^(0+128),w
 19120  2F09  00CE               	movwf	((??___flge+4)^(0+128)+1)
 19121  2F0A  0943               	comf	(___flge@ff1+2)^(0+128),w
 19122  2F0B  00CF               	movwf	((??___flge+4)^(0+128)+2)
 19123  2F0C  0944               	comf	(___flge@ff1+3)^(0+128),w
 19124  2F0D  00D0               	movwf	((??___flge+4)^(0+128)+3)
 19125  2F0E  0ACD               	incf	(??___flge+4)^(0+128),f
 19126  2F0F  1903               	skipnz
 19127  2F10  0ACE               	incf	((??___flge+4)^(0+128)+1),f
 19128  2F11  1903               	skipnz
 19129  2F12  0ACF               	incf	((??___flge+4)^(0+128)+2),f
 19130  2F13  1903               	skipnz
 19131  2F14  0AD0               	incf	((??___flge+4)^(0+128)+3),f
 19132  2F15  084D               	movf	(??___flge+4)^(0+128),w
 19133  2F16  07C9               	addwf	??___flge^(0+128),f
 19134  2F17  084E               	movf	(??___flge+5)^(0+128),w
 19135  2F18  3DCA               	addwfc	(??___flge^(0+128)+1),f
 19136  2F19  084F               	movf	(??___flge+6)^(0+128),w
 19137  2F1A  3DCB               	addwfc	(??___flge^(0+128)+2),f
 19138  2F1B  0850               	movf	(??___flge+7)^(0+128),w
 19139  2F1C  3DCC               	addwfc	(??___flge^(0+128)+3),f
 19140  2F1D  084C               	movf	(??___flge+3)^(0+128),w
 19141  2F1E  00C4               	movwf	(___flge@ff1+3)^(0+128)
 19142  2F1F  084B               	movf	(??___flge+2)^(0+128),w
 19143  2F20  00C3               	movwf	(___flge@ff1+2)^(0+128)
 19144  2F21  084A               	movf	(??___flge+1)^(0+128),w
 19145  2F22  00C2               	movwf	(___flge@ff1+1)^(0+128)
 19146  2F23  0849               	movf	??___flge^(0+128),w
 19147  2F24  00C1               	movwf	___flge@ff1^(0+128)
 19148  2F25                     l4884:	
 19149  2F25  1FC8               	btfss	(___flge@ff2+3)^(0+128),7
 19150  2F26  2F4E               	goto	l4888
 19151  2F27  3000               	movlw	0
 19152  2F28  00C9               	movwf	??___flge^(0+128)
 19153  2F29  3000               	movlw	0
 19154  2F2A  00CA               	movwf	(??___flge^(0+128)+1)
 19155  2F2B  3000               	movlw	0
 19156  2F2C  00CB               	movwf	(??___flge^(0+128)+2)
 19157  2F2D  3080               	movlw	128
 19158  2F2E  00CC               	movwf	(??___flge^(0+128)+3)
 19159  2F2F  0945               	comf	___flge@ff2^(0+128),w
 19160  2F30  00CD               	movwf	(??___flge+4)^(0+128)
 19161  2F31  0946               	comf	(___flge@ff2+1)^(0+128),w
 19162  2F32  00CE               	movwf	((??___flge+4)^(0+128)+1)
 19163  2F33  0947               	comf	(___flge@ff2+2)^(0+128),w
 19164  2F34  00CF               	movwf	((??___flge+4)^(0+128)+2)
 19165  2F35  0948               	comf	(___flge@ff2+3)^(0+128),w
 19166  2F36  00D0               	movwf	((??___flge+4)^(0+128)+3)
 19167  2F37  0ACD               	incf	(??___flge+4)^(0+128),f
 19168  2F38  1903               	skipnz
 19169  2F39  0ACE               	incf	((??___flge+4)^(0+128)+1),f
 19170  2F3A  1903               	skipnz
 19171  2F3B  0ACF               	incf	((??___flge+4)^(0+128)+2),f
 19172  2F3C  1903               	skipnz
 19173  2F3D  0AD0               	incf	((??___flge+4)^(0+128)+3),f
 19174  2F3E  084D               	movf	(??___flge+4)^(0+128),w
 19175  2F3F  07C9               	addwf	??___flge^(0+128),f
 19176  2F40  084E               	movf	(??___flge+5)^(0+128),w
 19177  2F41  3DCA               	addwfc	(??___flge^(0+128)+1),f
 19178  2F42  084F               	movf	(??___flge+6)^(0+128),w
 19179  2F43  3DCB               	addwfc	(??___flge^(0+128)+2),f
 19180  2F44  0850               	movf	(??___flge+7)^(0+128),w
 19181  2F45  3DCC               	addwfc	(??___flge^(0+128)+3),f
 19182  2F46  084C               	movf	(??___flge+3)^(0+128),w
 19183  2F47  00C8               	movwf	(___flge@ff2+3)^(0+128)
 19184  2F48  084B               	movf	(??___flge+2)^(0+128),w
 19185  2F49  00C7               	movwf	(___flge@ff2+2)^(0+128)
 19186  2F4A  084A               	movf	(??___flge+1)^(0+128),w
 19187  2F4B  00C6               	movwf	(___flge@ff2+1)^(0+128)
 19188  2F4C  0849               	movf	??___flge^(0+128),w
 19189  2F4D  00C5               	movwf	___flge@ff2^(0+128)
 19190  2F4E                     l4888:	
 19191  2F4E  3080               	movlw	128
 19192  2F4F  06C4               	xorwf	(___flge@ff1+3)^(0+128),f
 19193  2F50  3080               	movlw	128
 19194  2F51  06C8               	xorwf	(___flge@ff2+3)^(0+128),f
 19195  2F52  0848               	movf	(___flge@ff2+3)^(0+128),w
 19196  2F53  0244               	subwf	(___flge@ff1+3)^(0+128),w
 19197  2F54  1D03               	skipz
 19198  2F55  0008               	return
 19199  2F56  0847               	movf	(___flge@ff2+2)^(0+128),w
 19200  2F57  0243               	subwf	(___flge@ff1+2)^(0+128),w
 19201  2F58  1D03               	skipz
 19202  2F59  0008               	return
 19203  2F5A  0846               	movf	(___flge@ff2+1)^(0+128),w
 19204  2F5B  0242               	subwf	(___flge@ff1+1)^(0+128),w
 19205  2F5C  1D03               	skipz
 19206  2F5D  0008               	return
 19207  2F5E  0845               	movf	___flge@ff2^(0+128),w
 19208  2F5F  0241               	subwf	___flge@ff1^(0+128),w
 19209  2F60  0008               	return
 19210  2F61                     __end_of___flge:	
 19211                           
 19212                           	psect	text50
 19213  2F61                     __ptext50:	
 19214 ;; *************** function _LTC6804_wrcfg *****************
 19215 ;; Defined at:
 19216 ;;		line 1010 in file "ltc6804.c"
 19217 ;; Parameters:    Size  Location     Type
 19218 ;;  total_ic        1    wreg     unsigned char 
 19219 ;;  config          1   17[BANK0 ] PTR unsigned char [6]
 19220 ;;		 -> configReg(6), 
 19221 ;; Auto vars:     Size  Location     Type
 19222 ;;  total_ic        1   35[BANK0 ] unsigned char 
 19223 ;;  current_byte    1   38[BANK0 ] unsigned char 
 19224 ;;  current_ic      1   39[BANK0 ] unsigned char 
 19225 ;;  cmd            12   22[BANK0 ] unsigned char [12]
 19226 ;;  cfg_pec         2   36[BANK0 ] int 
 19227 ;;  cmd_index       1   40[BANK0 ] unsigned char 
 19228 ;;  CMD_LEN         1   34[BANK0 ] unsigned char 
 19229 ;; Return value:  Size  Location     Type
 19230 ;;                  1    wreg      void 
 19231 ;; Registers used:
 19232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19233 ;; Tracked objects:
 19234 ;;		On entry : 0/0
 19235 ;;		On exit  : 0/0
 19236 ;;		Unchanged: 0/0
 19237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19238 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19239 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19240 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19241 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19242 ;;Total ram usage:       24 bytes
 19243 ;; Hardware stack levels used:    1
 19244 ;; Hardware stack levels required when called:    4
 19245 ;; This function calls:
 19246 ;;		___bmul
 19247 ;;		_pec15_calc
 19248 ;;		_spi_write_array
 19249 ;;		_wakeup_idle
 19250 ;; This function is called by:
 19251 ;;		_cellBalancing
 19252 ;;		_LTC6804_initialize
 19253 ;; This function uses a non-reentrant model
 19254 ;;
 19255                           
 19256                           
 19257                           ;psect for function _LTC6804_wrcfg
 19258  2F61                     _LTC6804_wrcfg:	
 19259                           
 19260                           ;incstack = 0
 19261                           ; Regs used in _LTC6804_wrcfg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19262                           ;LTC6804_wrcfg@total_ic stored from wreg
 19263  2F61  0020               	movlb	0	; select bank0
 19264  2F62  00C3               	movwf	LTC6804_wrcfg@total_ic
 19265                           
 19266                           ;ltc6804.c: 1014: const char BYTES_IN_REG = 6;
 19267                           ;ltc6804.c: 1015: char CMD_LEN = 4+(8*total_ic);
 19268  2F63  0843               	movf	LTC6804_wrcfg@total_ic,w
 19269  2F64  00B2               	movwf	??_LTC6804_wrcfg
 19270  2F65  3002               	movlw	2
 19271  2F66                     u10085:	
 19272  2F66  35B2               	lslf	??_LTC6804_wrcfg,f
 19273  2F67  3EFF               	addlw	-1
 19274  2F68  1D03               	skipz
 19275  2F69  2F66               	goto	u10085
 19276  2F6A  3532               	lslf	??_LTC6804_wrcfg,w
 19277  2F6B  3E04               	addlw	4
 19278  2F6C  00B3               	movwf	??_LTC6804_wrcfg+1
 19279  2F6D  0833               	movf	??_LTC6804_wrcfg+1,w
 19280  2F6E  00C2               	movwf	LTC6804_wrcfg@CMD_LEN
 19281                           
 19282                           ;ltc6804.c: 1016: char cmd[12];
 19283                           ;ltc6804.c: 1017: int cfg_pec;
 19284                           ;ltc6804.c: 1018: char cmd_index;
 19285                           ;ltc6804.c: 1023: cmd[0] = 0x00;
 19286  2F6F  01B6               	clrf	LTC6804_wrcfg@cmd
 19287                           
 19288                           ;ltc6804.c: 1024: cmd[1] = 0x01;
 19289  2F70  01B7               	clrf	LTC6804_wrcfg@cmd+1
 19290  2F71  0AB7               	incf	LTC6804_wrcfg@cmd+1,f
 19291                           
 19292                           ;ltc6804.c: 1025: cmd[2] = 0x3d;
 19293  2F72  303D               	movlw	61
 19294  2F73  00B2               	movwf	??_LTC6804_wrcfg
 19295  2F74  0832               	movf	??_LTC6804_wrcfg,w
 19296  2F75  00B8               	movwf	LTC6804_wrcfg@cmd+2
 19297                           
 19298                           ;ltc6804.c: 1026: cmd[3] = 0x6e;
 19299  2F76  306E               	movlw	110
 19300  2F77  00B2               	movwf	??_LTC6804_wrcfg
 19301  2F78  0832               	movf	??_LTC6804_wrcfg,w
 19302  2F79  00B9               	movwf	LTC6804_wrcfg@cmd+3
 19303                           
 19304                           ;ltc6804.c: 1029: cmd_index = 4;
 19305  2F7A  3004               	movlw	4
 19306  2F7B  00B2               	movwf	??_LTC6804_wrcfg
 19307  2F7C  0832               	movf	??_LTC6804_wrcfg,w
 19308  2F7D  00C8               	movwf	LTC6804_wrcfg@cmd_index
 19309                           
 19310                           ;ltc6804.c: 1030: for (char current_ic = total_ic; current_ic > 0; current_ic--)
 19311  2F7E  0843               	movf	LTC6804_wrcfg@total_ic,w
 19312  2F7F  00B2               	movwf	??_LTC6804_wrcfg
 19313  2F80  0832               	movf	??_LTC6804_wrcfg,w
 19314  2F81  00C7               	movwf	LTC6804_wrcfg@current_ic
 19315  2F82  0847               	movf	LTC6804_wrcfg@current_ic,w
 19316  2F83  1903               	btfsc	3,2
 19317  2F84  2FF0               	goto	l7782
 19318  2F85                     l7756:	
 19319                           
 19320                           ;ltc6804.c: 1031: {
 19321                           ;ltc6804.c: 1034: for (char current_byte = 0; current_byte < BYTES_IN_REG; current_byte+
      +                          +)
 19322  2F85  01C6               	clrf	LTC6804_wrcfg@current_byte
 19323  2F86  308C               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 19324  2F87  0084               	movwf	4
 19325  2F88  30B9               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 19326  2F89  0085               	movwf	5
 19327  2F8A  0800               	movf	0,w	;code access
 19328  2F8B  0246               	subwf	LTC6804_wrcfg@current_byte,w
 19329  2F8C  1803               	btfsc	3,0
 19330  2F8D  2FBA               	goto	l7770
 19331  2F8E                     l7762:	
 19332                           
 19333                           ;ltc6804.c: 1035: {
 19334                           ;ltc6804.c: 1037: cmd[cmd_index] = config[current_ic-1][current_byte];
 19335  2F8E  3006               	movlw	6
 19336  2F8F  00B2               	movwf	??_LTC6804_wrcfg
 19337  2F90  0832               	movf	??_LTC6804_wrcfg,w
 19338  2F91  00F3               	movwf	___bmul@multiplicand
 19339  2F92  0847               	movf	LTC6804_wrcfg@current_ic,w
 19340  2F93  3EFF               	addlw	-1
 19341  2F94  31B6  264B  31AF   	fcall	___bmul
 19342  2F97  0020               	movlb	0	; select bank0
 19343  2F98  0731               	addwf	LTC6804_wrcfg@config,w
 19344  2F99  00B3               	movwf	??_LTC6804_wrcfg+1
 19345  2F9A  0846               	movf	LTC6804_wrcfg@current_byte,w
 19346  2F9B  0733               	addwf	??_LTC6804_wrcfg+1,w
 19347  2F9C  00B4               	movwf	??_LTC6804_wrcfg+2
 19348  2F9D  0834               	movf	??_LTC6804_wrcfg+2,w
 19349  2F9E  0086               	movwf	6
 19350  2F9F  3002               	movlw	2	; select bank4/5
 19351  2FA0  0087               	movwf	7
 19352  2FA1  0801               	movf	1,w
 19353  2FA2  00B5               	movwf	??_LTC6804_wrcfg+3
 19354  2FA3  0848               	movf	LTC6804_wrcfg@cmd_index,w
 19355  2FA4  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 19356  2FA5  0086               	movwf	6
 19357  2FA6  0187               	clrf	7
 19358  2FA7  0835               	movf	??_LTC6804_wrcfg+3,w
 19359  2FA8  0081               	movwf	1
 19360                           
 19361                           ;ltc6804.c: 1038: cmd_index = cmd_index + 1;
 19362  2FA9  0848               	movf	LTC6804_wrcfg@cmd_index,w
 19363  2FAA  3E01               	addlw	1
 19364  2FAB  00B2               	movwf	??_LTC6804_wrcfg
 19365  2FAC  0832               	movf	??_LTC6804_wrcfg,w
 19366  2FAD  00C8               	movwf	LTC6804_wrcfg@cmd_index
 19367  2FAE  3001               	movlw	1
 19368  2FAF  00B2               	movwf	??_LTC6804_wrcfg
 19369  2FB0  0832               	movf	??_LTC6804_wrcfg,w
 19370  2FB1  07C6               	addwf	LTC6804_wrcfg@current_byte,f
 19371  2FB2  308C               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 19372  2FB3  0084               	movwf	4
 19373  2FB4  30B9               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 19374  2FB5  0085               	movwf	5
 19375  2FB6  0800               	movf	0,w	;code access
 19376  2FB7  0246               	subwf	LTC6804_wrcfg@current_byte,w
 19377  2FB8  1C03               	skipc
 19378  2FB9  2F8E               	goto	l7762
 19379  2FBA                     l7770:	
 19380                           
 19381                           ;ltc6804.c: 1039: }
 19382                           ;ltc6804.c: 1041: cfg_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
 19383  2FBA  3006               	movlw	6
 19384  2FBB  00B2               	movwf	??_LTC6804_wrcfg
 19385  2FBC  0832               	movf	??_LTC6804_wrcfg,w
 19386  2FBD  00F3               	movwf	___bmul@multiplicand
 19387  2FBE  0847               	movf	LTC6804_wrcfg@current_ic,w
 19388  2FBF  3EFF               	addlw	-1
 19389  2FC0  31B6  264B  31AF   	fcall	___bmul
 19390  2FC3  0020               	movlb	0	; select bank0
 19391  2FC4  0731               	addwf	LTC6804_wrcfg@config,w
 19392  2FC5  00A0               	movwf	pec15_calc@data
 19393  2FC6  3002               	movlw	2
 19394  2FC7  00A1               	movwf	pec15_calc@data+1
 19395  2FC8  308C               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 19396  2FC9  0084               	movwf	4
 19397  2FCA  30B9               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 19398  2FCB  0085               	movwf	5
 19399  2FCC  0800               	movf	0,w	;code access
 19400  2FCD  319C  2402  31AF   	fcall	_pec15_calc
 19401  2FD0  0020               	movlb	0	; select bank0
 19402  2FD1  0821               	movf	?_pec15_calc+1,w
 19403  2FD2  00C5               	movwf	LTC6804_wrcfg@cfg_pec+1
 19404  2FD3  0820               	movf	?_pec15_calc,w
 19405  2FD4  00C4               	movwf	LTC6804_wrcfg@cfg_pec
 19406                           
 19407                           ;ltc6804.c: 1042: cmd[cmd_index] = (char)(cfg_pec >> 8);
 19408  2FD5  0845               	movf	LTC6804_wrcfg@cfg_pec+1,w
 19409  2FD6  00B2               	movwf	??_LTC6804_wrcfg
 19410  2FD7  0848               	movf	LTC6804_wrcfg@cmd_index,w
 19411  2FD8  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 19412  2FD9  0086               	movwf	6
 19413  2FDA  0187               	clrf	7
 19414  2FDB  0832               	movf	??_LTC6804_wrcfg,w
 19415  2FDC  0081               	movwf	1
 19416                           
 19417                           ;ltc6804.c: 1043: cmd[cmd_index + 1] = (char)cfg_pec;
 19418  2FDD  0844               	movf	LTC6804_wrcfg@cfg_pec,w
 19419  2FDE  00B2               	movwf	??_LTC6804_wrcfg
 19420  2FDF  0848               	movf	LTC6804_wrcfg@cmd_index,w
 19421  2FE0  3E01               	addlw	1
 19422  2FE1  3E36               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 19423  2FE2  0086               	movwf	6
 19424  2FE3  0187               	clrf	7
 19425  2FE4  0832               	movf	??_LTC6804_wrcfg,w
 19426  2FE5  0081               	movwf	1
 19427                           
 19428                           ;ltc6804.c: 1044: cmd_index = cmd_index + 2;
 19429  2FE6  0848               	movf	LTC6804_wrcfg@cmd_index,w
 19430  2FE7  3E02               	addlw	2
 19431  2FE8  00B2               	movwf	??_LTC6804_wrcfg
 19432  2FE9  0832               	movf	??_LTC6804_wrcfg,w
 19433  2FEA  00C8               	movwf	LTC6804_wrcfg@cmd_index
 19434  2FEB  3001               	movlw	1
 19435  2FEC  02C7               	subwf	LTC6804_wrcfg@current_ic,f
 19436  2FED  0847               	movf	LTC6804_wrcfg@current_ic,w
 19437  2FEE  1D03               	btfss	3,2
 19438  2FEF  2F85               	goto	l7756
 19439  2FF0                     l7782:	
 19440                           
 19441                           ;ltc6804.c: 1045: }
 19442                           ;ltc6804.c: 1048: wakeup_idle ();
 19443  2FF0  31B5  25E3  31AF   	fcall	_wakeup_idle
 19444                           
 19445                           ;ltc6804.c: 1050: LATDbits.LATD3 = 0;
 19446  2FF3  0022               	movlb	2	; select bank2
 19447  2FF4  118F               	bcf	15,3	;volatile
 19448                           
 19449                           ;ltc6804.c: 1051: spi_write_array(CMD_LEN, cmd);
 19450  2FF5  3036               	movlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 19451  2FF6  0020               	movlb	0	; select bank0
 19452  2FF7  00B2               	movwf	??_LTC6804_wrcfg
 19453  2FF8  0832               	movf	??_LTC6804_wrcfg,w
 19454  2FF9  00F6               	movwf	spi_write_array@data
 19455  2FFA  0842               	movf	LTC6804_wrcfg@CMD_LEN,w
 19456  2FFB  31B6  2690         	fcall	_spi_write_array
 19457                           
 19458                           ;ltc6804.c: 1052: LATDbits.LATD3 = 1;
 19459  2FFD  0022               	movlb	2	; select bank2
 19460  2FFE  158F               	bsf	15,3	;volatile
 19461  2FFF  0008               	return
 19462  3000                     __end_of_LTC6804_wrcfg:	
 19463                           
 19464                           	psect	text51
 19465  35E3                     __ptext51:	
 19466 ;; *************** function _wakeup_idle *****************
 19467 ;; Defined at:
 19468 ;;		line 1153 in file "ltc6804.c"
 19469 ;; Parameters:    Size  Location     Type
 19470 ;;		None
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;		None
 19473 ;; Return value:  Size  Location     Type
 19474 ;;                  1    wreg      void 
 19475 ;; Registers used:
 19476 ;;		wreg
 19477 ;; Tracked objects:
 19478 ;;		On entry : 0/0
 19479 ;;		On exit  : 0/0
 19480 ;;		Unchanged: 0/0
 19481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19486 ;;Total ram usage:        0 bytes
 19487 ;; Hardware stack levels used:    1
 19488 ;; Hardware stack levels required when called:    2
 19489 ;; This function calls:
 19490 ;;		Nothing
 19491 ;; This function is called by:
 19492 ;;		_LTC6804_adcv
 19493 ;;		_LTC6804_rdcv_reg
 19494 ;;		_LTC6804_wrcfg
 19495 ;;		_LTC6804_rdstat_reg
 19496 ;;		_LTC6804_adstat
 19497 ;;		_LTC6804_adax
 19498 ;;		_LTC6804_rdaux_reg
 19499 ;;		_LTC6804_clrcell
 19500 ;;		_LTC6804_clraux
 19501 ;;		_LTC6804_rdcfg
 19502 ;; This function uses a non-reentrant model
 19503 ;;
 19504                           
 19505                           
 19506                           ;psect for function _wakeup_idle
 19507  35E3                     _wakeup_idle:	
 19508                           
 19509                           ;ltc6804.c: 1155: LATDbits.LATD3 = 0;
 19510                           
 19511                           ;incstack = 0
 19512                           ; Regs used in _wakeup_idle: [wreg]
 19513  35E3  0022               	movlb	2	; select bank2
 19514  35E4  118F               	bcf	15,3	;volatile
 19515                           
 19516                           ;ltc6804.c: 1156: _delay((unsigned long)((2)*(32000000/4000000.0)));
 19517  35E5  3005               	movlw	5
 19518  35E6                     u11027:	
 19519  35E6  0B89               	decfsz	9,f
 19520  35E7  2DE6               	goto	u11027
 19521  35E8  0000               	nop
 19522                           
 19523                           ;ltc6804.c: 1157: LATDbits.LATD3 = 1;
 19524  35E9  0022               	movlb	2	; select bank2
 19525  35EA  158F               	bsf	15,3	;volatile
 19526  35EB  0008               	return
 19527  35EC                     __end_of_wakeup_idle:	
 19528                           
 19529                           	psect	text52
 19530  3690                     __ptext52:	
 19531 ;; *************** function _spi_write_array *****************
 19532 ;; Defined at:
 19533 ;;		line 1203 in file "ltc6804.c"
 19534 ;; Parameters:    Size  Location     Type
 19535 ;;  len             1    wreg     unsigned char 
 19536 ;;  data            1    6[COMMON] PTR unsigned char 
 19537 ;;		 -> LTC6804_wrcfg@cmd(12), LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), LTC6804_adstat@cmd(4), 
 19538 ;; Auto vars:     Size  Location     Type
 19539 ;;  len             1    0[BANK0 ] unsigned char 
 19540 ;;  i               1    1[BANK0 ] unsigned char 
 19541 ;; Return value:  Size  Location     Type
 19542 ;;                  1    wreg      void 
 19543 ;; Registers used:
 19544 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19545 ;; Tracked objects:
 19546 ;;		On entry : 0/0
 19547 ;;		On exit  : 0/0
 19548 ;;		Unchanged: 0/0
 19549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19550 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19551 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19552 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19553 ;;      Totals:         2       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19554 ;;Total ram usage:        4 bytes
 19555 ;; Hardware stack levels used:    1
 19556 ;; Hardware stack levels required when called:    3
 19557 ;; This function calls:
 19558 ;;		_spi_write
 19559 ;; This function is called by:
 19560 ;;		_LTC6804_adcv
 19561 ;;		_LTC6804_wrcfg
 19562 ;;		_LTC6804_adstat
 19563 ;;		_LTC6804_adax
 19564 ;; This function uses a non-reentrant model
 19565 ;;
 19566                           
 19567                           
 19568                           ;psect for function _spi_write_array
 19569  3690                     _spi_write_array:	
 19570                           
 19571                           ;incstack = 0
 19572                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19573                           ;spi_write_array@len stored from wreg
 19574  3690  0020               	movlb	0	; select bank0
 19575  3691  00A0               	movwf	spi_write_array@len
 19576                           
 19577                           ;ltc6804.c: 1207: for(char i = 0; i < len; i++)
 19578  3692  01A1               	clrf	spi_write_array@i
 19579  3693                     l6922:	
 19580  3693  0820               	movf	spi_write_array@len,w
 19581  3694  0221               	subwf	spi_write_array@i,w
 19582  3695  1803               	btfsc	3,0
 19583  3696  0008               	return
 19584                           
 19585                           ;ltc6804.c: 1208: {
 19586                           ;ltc6804.c: 1209: spi_write((char)data[i]);
 19587  3697  0821               	movf	spi_write_array@i,w
 19588  3698  0776               	addwf	spi_write_array@data,w
 19589  3699  00F7               	movwf	??_spi_write_array
 19590  369A  0877               	movf	??_spi_write_array,w
 19591  369B  0086               	movwf	6
 19592  369C  0187               	clrf	7
 19593  369D  0801               	movf	1,w
 19594  369E  31B5  25F6  31B6   	fcall	_spi_write
 19595  36A1  3001               	movlw	1
 19596  36A2  00F7               	movwf	??_spi_write_array
 19597  36A3  0877               	movf	??_spi_write_array,w
 19598  36A4  0020               	movlb	0	; select bank0
 19599  36A5  07A1               	addwf	spi_write_array@i,f
 19600  36A6  2E93               	goto	l6922
 19601  36A7                     __end_of_spi_write_array:	
 19602                           
 19603                           	psect	text53
 19604  35F6                     __ptext53:	
 19605 ;; *************** function _spi_write *****************
 19606 ;; Defined at:
 19607 ;;		line 36 in file "spi.c"
 19608 ;; Parameters:    Size  Location     Type
 19609 ;;  data            1    wreg     unsigned char 
 19610 ;; Auto vars:     Size  Location     Type
 19611 ;;  data            1    5[COMMON] unsigned char 
 19612 ;;  readData        1    4[COMMON] unsigned char 
 19613 ;; Return value:  Size  Location     Type
 19614 ;;                  1    wreg      void 
 19615 ;; Registers used:
 19616 ;;		wreg
 19617 ;; Tracked objects:
 19618 ;;		On entry : 0/0
 19619 ;;		On exit  : 0/0
 19620 ;;		Unchanged: 0/0
 19621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19625 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19626 ;;Total ram usage:        3 bytes
 19627 ;; Hardware stack levels used:    1
 19628 ;; Hardware stack levels required when called:    2
 19629 ;; This function calls:
 19630 ;;		Nothing
 19631 ;; This function is called by:
 19632 ;;		_spi_write_array
 19633 ;;		_spi_write_read
 19634 ;; This function uses a non-reentrant model
 19635 ;;
 19636                           
 19637                           
 19638                           ;psect for function _spi_write
 19639  35F6                     _spi_write:	
 19640                           
 19641                           ;incstack = 0
 19642                           ; Regs used in _spi_write: [wreg]
 19643                           ;spi_write@data stored from wreg
 19644  35F6  00F5               	movwf	spi_write@data
 19645                           
 19646                           ;spi.c: 37: SSP1BUF = data;
 19647  35F7  0875               	movf	spi_write@data,w
 19648  35F8  0024               	movlb	4	; select bank4
 19649  35F9  0091               	movwf	17	;volatile
 19650  35FA                     l784:	
 19651                           ;spi.c: 38: while(SSP1STATbits.BF == 0);
 19652                           
 19653  35FA  1C14               	btfss	20,0	;volatile
 19654  35FB  2DFA               	goto	l784
 19655                           
 19656                           ;spi.c: 39: char readData = SSP1BUF;
 19657  35FC  0811               	movf	17,w	;volatile
 19658  35FD  00F3               	movwf	??_spi_write
 19659  35FE  0873               	movf	??_spi_write,w
 19660  35FF  00F4               	movwf	spi_write@readData
 19661  3600  0008               	return
 19662  3601                     __end_of_spi_write:	
 19663                           
 19664                           	psect	text54
 19665  1C02                     __ptext54:	
 19666 ;; *************** function _pec15_calc *****************
 19667 ;; Defined at:
 19668 ;;		line 1180 in file "ltc6804.c"
 19669 ;; Parameters:    Size  Location     Type
 19670 ;;  len             1    wreg     unsigned char 
 19671 ;;  data            2    0[BANK0 ] PTR unsigned char 
 19672 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), LTC6804_rdaux@data(8), 
 19673 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), 
 19674 ;;		 -> ADSTAT(2), LTC6804_rdstat_reg@cmd(4), configReg(6), 
 19675 ;; Auto vars:     Size  Location     Type
 19676 ;;  len             1   11[BANK0 ] unsigned char 
 19677 ;;  i               1   14[BANK0 ] unsigned char 
 19678 ;;  remainder       2   15[BANK0 ] int 
 19679 ;;  addr            2   12[BANK0 ] int 
 19680 ;; Return value:  Size  Location     Type
 19681 ;;                  2    0[BANK0 ] int 
 19682 ;; Registers used:
 19683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 19684 ;; Tracked objects:
 19685 ;;		On entry : 0/0
 19686 ;;		On exit  : 0/0
 19687 ;;		Unchanged: 0/0
 19688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19689 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19690 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19691 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19692 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19693 ;;Total ram usage:       17 bytes
 19694 ;; Hardware stack levels used:    1
 19695 ;; Hardware stack levels required when called:    2
 19696 ;; This function calls:
 19697 ;;		Nothing
 19698 ;; This function is called by:
 19699 ;;		_LTC6804_adcv
 19700 ;;		_LTC6804_rdcv
 19701 ;;		_LTC6804_rdcv_reg
 19702 ;;		_LTC6804_wrcfg
 19703 ;;		_LTC6804_rdstat_reg
 19704 ;;		_LTC6804_adstat
 19705 ;;		_LTC6804_adax
 19706 ;;		_LTC6804_rdaux
 19707 ;;		_LTC6804_rdaux_reg
 19708 ;;		_LTC6804_clrcell
 19709 ;;		_LTC6804_clraux
 19710 ;;		_LTC6804_rdcfg
 19711 ;; This function uses a non-reentrant model
 19712 ;;
 19713                           
 19714                           
 19715                           ;psect for function _pec15_calc
 19716  1C02                     _pec15_calc:	
 19717                           
 19718                           ;incstack = 0
 19719                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 19720                           ;pec15_calc@len stored from wreg
 19721  1C02  0020               	movlb	0	; select bank0
 19722  1C03  00AB               	movwf	pec15_calc@len
 19723                           
 19724                           ;ltc6804.c: 1184: int remainder,addr;
 19725                           ;ltc6804.c: 1186: remainder = 16;
 19726  1C04  3010               	movlw	16
 19727  1C05  00AF               	movwf	pec15_calc@remainder
 19728  1C06  3000               	movlw	0
 19729  1C07  00B0               	movwf	pec15_calc@remainder+1
 19730                           
 19731                           ;ltc6804.c: 1187: for(char i = 0; i<len;i++)
 19732  1C08  01AE               	clrf	pec15_calc@i
 19733  1C09                     l6812:	
 19734  1C09  082B               	movf	pec15_calc@len,w
 19735  1C0A  022E               	subwf	pec15_calc@i,w
 19736  1C0B  1803               	btfsc	3,0
 19737  1C0C  2C4C               	goto	l6814
 19738                           
 19739                           ;ltc6804.c: 1188: {
 19740                           ;ltc6804.c: 1189: addr = ((remainder>>7)^data[i])&0xff;
 19741  1C0D  082E               	movf	pec15_calc@i,w
 19742  1C0E  00A2               	movwf	??_pec15_calc
 19743  1C0F  01A3               	clrf	??_pec15_calc+1
 19744  1C10  0822               	movf	??_pec15_calc,w
 19745  1C11  0720               	addwf	pec15_calc@data,w
 19746  1C12  0086               	movwf	6
 19747  1C13  0823               	movf	??_pec15_calc+1,w
 19748  1C14  3D21               	addwfc	pec15_calc@data+1,w
 19749  1C15  0087               	movwf	7
 19750  1C16  0801               	movf	1,w
 19751  1C17  00A4               	movwf	??_pec15_calc+2
 19752  1C18  01A5               	clrf	??_pec15_calc+3
 19753  1C19  0830               	movf	pec15_calc@remainder+1,w
 19754  1C1A  00A7               	movwf	??_pec15_calc+5
 19755  1C1B  082F               	movf	pec15_calc@remainder,w
 19756  1C1C  00A6               	movwf	??_pec15_calc+4
 19757  1C1D  3007               	movlw	7
 19758  1C1E  00A8               	movwf	??_pec15_calc+6
 19759  1C1F                     u8385:	
 19760  1C1F  0D27               	rlf	??_pec15_calc+5,w
 19761  1C20  0CA7               	rrf	??_pec15_calc+5,f
 19762  1C21  0CA6               	rrf	??_pec15_calc+4,f
 19763  1C22  0BA8               	decfsz	??_pec15_calc+6,f
 19764  1C23  2C1F               	goto	u8385
 19765  1C24  0824               	movf	??_pec15_calc+2,w
 19766  1C25  0626               	xorwf	??_pec15_calc+4,w
 19767  1C26  00A9               	movwf	??_pec15_calc+7
 19768  1C27  0825               	movf	??_pec15_calc+3,w
 19769  1C28  0627               	xorwf	??_pec15_calc+5,w
 19770  1C29  00AA               	movwf	??_pec15_calc+8
 19771  1C2A  30FF               	movlw	255
 19772  1C2B  0529               	andwf	??_pec15_calc+7,w
 19773  1C2C  00AC               	movwf	pec15_calc@addr
 19774  1C2D  3000               	movlw	0
 19775  1C2E  052A               	andwf	??_pec15_calc+8,w
 19776  1C2F  00AD               	movwf	pec15_calc@addr+1
 19777                           
 19778                           ;ltc6804.c: 1190: remainder = (remainder<<8)^crc15Table[addr];
 19779  1C30  082D               	movf	pec15_calc@addr+1,w
 19780  1C31  0085               	movwf	5
 19781  1C32  082C               	movf	pec15_calc@addr,w
 19782  1C33  0084               	movwf	4
 19783  1C34  3584               	lslf	4,f
 19784  1C35  0D85               	rlf	5,f
 19785  1C36  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 19786  1C37  0784               	addwf	4,f
 19787  1C38  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 19788  1C39  3D85               	addwfc	5,f
 19789  1C3A  3F00               	moviw [0]fsr0
 19790  1C3B  00A2               	movwf	??_pec15_calc
 19791  1C3C  3F01               	moviw [1]fsr0
 19792  1C3D  00A3               	movwf	??_pec15_calc+1
 19793  1C3E  082F               	movf	pec15_calc@remainder,w
 19794  1C3F  00A5               	movwf	??_pec15_calc+3
 19795  1C40  01A4               	clrf	??_pec15_calc+2
 19796  1C41  0822               	movf	??_pec15_calc,w
 19797  1C42  0624               	xorwf	??_pec15_calc+2,w
 19798  1C43  00AF               	movwf	pec15_calc@remainder
 19799  1C44  0823               	movf	??_pec15_calc+1,w
 19800  1C45  0625               	xorwf	??_pec15_calc+3,w
 19801  1C46  00B0               	movwf	pec15_calc@remainder+1
 19802  1C47  3001               	movlw	1
 19803  1C48  00A2               	movwf	??_pec15_calc
 19804  1C49  0822               	movf	??_pec15_calc,w
 19805  1C4A  07AE               	addwf	pec15_calc@i,f
 19806  1C4B  2C09               	goto	l6812
 19807  1C4C                     l6814:	
 19808                           
 19809                           ;ltc6804.c: 1191: }
 19810                           ;ltc6804.c: 1192: return(remainder*2);
 19811  1C4C  352F               	lslf	pec15_calc@remainder,w
 19812  1C4D  00A0               	movwf	?_pec15_calc
 19813  1C4E  0D30               	rlf	pec15_calc@remainder+1,w
 19814  1C4F  00A1               	movwf	?_pec15_calc+1
 19815  1C50  0008               	return
 19816  1C51                     __end_of_pec15_calc:	
 19817                           
 19818                           	psect	text55
 19819  364B                     __ptext55:	
 19820 ;; *************** function ___bmul *****************
 19821 ;; Defined at:
 19822 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 19823 ;; Parameters:    Size  Location     Type
 19824 ;;  multiplier      1    wreg     unsigned char 
 19825 ;;  multiplicand    1    3[COMMON] unsigned char 
 19826 ;; Auto vars:     Size  Location     Type
 19827 ;;  multiplier      1    6[COMMON] unsigned char 
 19828 ;;  product         1    5[COMMON] unsigned char 
 19829 ;; Return value:  Size  Location     Type
 19830 ;;                  1    wreg      unsigned char 
 19831 ;; Registers used:
 19832 ;;		wreg, status,2, status,0
 19833 ;; Tracked objects:
 19834 ;;		On entry : 0/0
 19835 ;;		On exit  : 0/0
 19836 ;;		Unchanged: 0/0
 19837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19838 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19839 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19841 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19842 ;;Total ram usage:        4 bytes
 19843 ;; Hardware stack levels used:    1
 19844 ;; Hardware stack levels required when called:    2
 19845 ;; This function calls:
 19846 ;;		Nothing
 19847 ;; This function is called by:
 19848 ;;		_LTC6804_rdcv
 19849 ;;		_LTC6804_rdcv_reg
 19850 ;;		_LTC6804_wrcfg
 19851 ;;		_LTC6804_rdstat_reg
 19852 ;;		_LTC6804_rdaux
 19853 ;;		_LTC6804_rdaux_reg
 19854 ;;		_LTC6804_rdcfg
 19855 ;; This function uses a non-reentrant model
 19856 ;;
 19857                           
 19858                           
 19859                           ;psect for function ___bmul
 19860  364B                     ___bmul:	
 19861                           
 19862                           ;incstack = 0
 19863                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 19864                           ;___bmul@multiplier stored from wreg
 19865  364B  00F6               	movwf	___bmul@multiplier
 19866  364C  01F5               	clrf	___bmul@product
 19867  364D                     l4208:	
 19868  364D  1C76               	btfss	___bmul@multiplier,0
 19869  364E  2E53               	goto	l4212
 19870  364F  0873               	movf	___bmul@multiplicand,w
 19871  3650  00F4               	movwf	??___bmul
 19872  3651  0874               	movf	??___bmul,w
 19873  3652  07F5               	addwf	___bmul@product,f
 19874  3653                     l4212:	
 19875  3653  1003               	clrc
 19876  3654  0DF3               	rlf	___bmul@multiplicand,f
 19877  3655  1003               	clrc
 19878  3656  0CF6               	rrf	___bmul@multiplier,f
 19879  3657  0876               	movf	___bmul@multiplier,w
 19880  3658  1D03               	btfss	3,2
 19881  3659  2E4D               	goto	l4208
 19882  365A  0875               	movf	___bmul@product,w
 19883  365B  0008               	return
 19884  365C                     __end_of___bmul:	
 19885                           
 19886                           	psect	text56
 19887  2C0C                     __ptext56:	
 19888 ;; *************** function _avgBuff *****************
 19889 ;; Defined at:
 19890 ;;		line 66 in file "adc.c"
 19891 ;; Parameters:    Size  Location     Type
 19892 ;;  buff            1    wreg     PTR float 
 19893 ;;		 -> main@currentBuff(80), 
 19894 ;;  size            2   33[BANK1 ] int 
 19895 ;; Auto vars:     Size  Location     Type
 19896 ;;  buff            1   39[BANK1 ] PTR float 
 19897 ;;		 -> main@currentBuff(80), 
 19898 ;;  total           4   40[BANK1 ] float 
 19899 ;;  inc             2   44[BANK1 ] int 
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  4   33[BANK1 ] float 
 19902 ;; Registers used:
 19903 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19909 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19910 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19911 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19912 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19913 ;;Total ram usage:       13 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; Hardware stack levels required when called:    3
 19916 ;; This function calls:
 19917 ;;		___fladd
 19918 ;;		___fldiv
 19919 ;;		___xxtofl
 19920 ;; This function is called by:
 19921 ;;		_main
 19922 ;; This function uses a non-reentrant model
 19923 ;;
 19924                           
 19925                           
 19926                           ;psect for function _avgBuff
 19927  2C0C                     _avgBuff:	
 19928                           
 19929                           ;incstack = 0
 19930                           ; Regs used in _avgBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19931                           ;avgBuff@buff stored from wreg
 19932  2C0C  0021               	movlb	1	; select bank1
 19933  2C0D  00C7               	movwf	avgBuff@buff^(0+128)
 19934                           
 19935                           ;adc.c: 67: int inc = 0;
 19936  2C0E  01CC               	clrf	avgBuff@inc^(0+128)
 19937  2C0F  01CD               	clrf	(avgBuff@inc+1)^(0+128)
 19938                           
 19939                           ;adc.c: 68: float total = 0;
 19940  2C10  3000               	movlw	0
 19941  2C11  00CB               	movwf	(avgBuff@total+3)^(0+128)
 19942  2C12  3000               	movlw	0
 19943  2C13  00CA               	movwf	(avgBuff@total+2)^(0+128)
 19944  2C14  3000               	movlw	0
 19945  2C15  00C9               	movwf	(avgBuff@total+1)^(0+128)
 19946  2C16  3000               	movlw	0
 19947  2C17  00C8               	movwf	avgBuff@total^(0+128)
 19948                           
 19949                           ;adc.c: 69: for(inc = 0; inc < size; inc++){
 19950  2C18  01CC               	clrf	avgBuff@inc^(0+128)
 19951  2C19  01CD               	clrf	(avgBuff@inc+1)^(0+128)
 19952  2C1A                     l7998:	
 19953  2C1A  084D               	movf	(avgBuff@inc+1)^(0+128),w
 19954  2C1B  3A80               	xorlw	128
 19955  2C1C  00C5               	movwf	??_avgBuff^(0+128)
 19956  2C1D  0842               	movf	(avgBuff@size+1)^(0+128),w
 19957  2C1E  3A80               	xorlw	128
 19958  2C1F  0245               	subwf	??_avgBuff^(0+128),w
 19959  2C20  1D03               	skipz
 19960  2C21  2C24               	goto	u10575
 19961  2C22  0841               	movf	avgBuff@size^(0+128),w
 19962  2C23  024C               	subwf	avgBuff@inc^(0+128),w
 19963  2C24                     u10575:	
 19964  2C24  1803               	btfsc	3,0
 19965  2C25  2C56               	goto	l8000
 19966                           
 19967                           ;adc.c: 70: total += buff[inc];
 19968  2C26  0021               	movlb	1	; select bank1
 19969  2C27  084C               	movf	avgBuff@inc^(0+128),w
 19970  2C28  00C5               	movwf	??_avgBuff^(0+128)
 19971  2C29  3001               	movlw	1
 19972  2C2A                     u10565:	
 19973  2C2A  35C5               	lslf	??_avgBuff^(0+128),f
 19974  2C2B  3EFF               	addlw	-1
 19975  2C2C  1D03               	skipz
 19976  2C2D  2C2A               	goto	u10565
 19977  2C2E  3545               	lslf	??_avgBuff^(0+128),w
 19978  2C2F  0747               	addwf	avgBuff@buff^(0+128),w
 19979  2C30  00C6               	movwf	(??_avgBuff+1)^(0+128)
 19980  2C31  0846               	movf	(??_avgBuff+1)^(0+128),w
 19981  2C32  0086               	movwf	6
 19982  2C33  3001               	movlw	1	; select bank2/3
 19983  2C34  0087               	movwf	7
 19984  2C35  3F40               	moviw [0]fsr1
 19985  2C36  00A9               	movwf	___fladd@b^(0+128)
 19986  2C37  3F41               	moviw [1]fsr1
 19987  2C38  00AA               	movwf	(___fladd@b+1)^(0+128)
 19988  2C39  3F42               	moviw [2]fsr1
 19989  2C3A  00AB               	movwf	(___fladd@b+2)^(0+128)
 19990  2C3B  3F43               	moviw [3]fsr1
 19991  2C3C  00AC               	movwf	(___fladd@b+3)^(0+128)
 19992  2C3D  084B               	movf	(avgBuff@total+3)^(0+128),w
 19993  2C3E  00B0               	movwf	(___fladd@a+3)^(0+128)
 19994  2C3F  084A               	movf	(avgBuff@total+2)^(0+128),w
 19995  2C40  00AF               	movwf	(___fladd@a+2)^(0+128)
 19996  2C41  0849               	movf	(avgBuff@total+1)^(0+128),w
 19997  2C42  00AE               	movwf	(___fladd@a+1)^(0+128)
 19998  2C43  0848               	movf	avgBuff@total^(0+128),w
 19999  2C44  00AD               	movwf	___fladd@a^(0+128)
 20000  2C45  3193  2374  31AC   	fcall	___fladd
 20001  2C48  0021               	movlb	1	; select bank1
 20002  2C49  082C               	movf	(?___fladd+3)^(0+128),w
 20003  2C4A  00CB               	movwf	(avgBuff@total+3)^(0+128)
 20004  2C4B  082B               	movf	(?___fladd+2)^(0+128),w
 20005  2C4C  00CA               	movwf	(avgBuff@total+2)^(0+128)
 20006  2C4D  082A               	movf	(?___fladd+1)^(0+128),w
 20007  2C4E  00C9               	movwf	(avgBuff@total+1)^(0+128)
 20008  2C4F  0829               	movf	?___fladd^(0+128),w
 20009  2C50  00C8               	movwf	avgBuff@total^(0+128)
 20010  2C51  3001               	movlw	1
 20011  2C52  07CC               	addwf	avgBuff@inc^(0+128),f
 20012  2C53  3000               	movlw	0
 20013  2C54  3DCD               	addwfc	(avgBuff@inc+1)^(0+128),f
 20014  2C55  2C1A               	goto	l7998
 20015  2C56                     l8000:	
 20016                           
 20017                           ;adc.c: 71: }
 20018                           ;adc.c: 73: return ((float) total)/((float) size);
 20019  2C56  0021               	movlb	1	; select bank1
 20020  2C57  0841               	movf	avgBuff@size^(0+128),w
 20021  2C58  0020               	movlb	0	; select bank0
 20022  2C59  00AE               	movwf	___xxtofl@val
 20023  2C5A  0021               	movlb	1	; select bank1
 20024  2C5B  0842               	movf	(avgBuff@size+1)^(0+128),w
 20025  2C5C  0020               	movlb	0	; select bank0
 20026  2C5D  00AF               	movwf	___xxtofl@val+1
 20027  2C5E  0D89               	rlf	9,f
 20028  2C5F  3B89               	subwfb	9,f
 20029  2C60  0989               	comf	9,f
 20030  2C61  00B0               	movwf	___xxtofl@val+2
 20031  2C62  00B1               	movwf	___xxtofl@val+3
 20032  2C63  3001               	movlw	1
 20033  2C64  31AE  2631  31AC   	fcall	___xxtofl
 20034  2C67  0020               	movlb	0	; select bank0
 20035  2C68  0831               	movf	?___xxtofl+3,w
 20036  2C69  00D9               	movwf	___fldiv@a+3
 20037  2C6A  0830               	movf	?___xxtofl+2,w
 20038  2C6B  00D8               	movwf	___fldiv@a+2
 20039  2C6C  082F               	movf	?___xxtofl+1,w
 20040  2C6D  00D7               	movwf	___fldiv@a+1
 20041  2C6E  082E               	movf	?___xxtofl,w
 20042  2C6F  00D6               	movwf	___fldiv@a
 20043  2C70  0021               	movlb	1	; select bank1
 20044  2C71  084B               	movf	(avgBuff@total+3)^(0+128),w
 20045  2C72  0020               	movlb	0	; select bank0
 20046  2C73  00DD               	movwf	___fldiv@b+3
 20047  2C74  0021               	movlb	1	; select bank1
 20048  2C75  084A               	movf	(avgBuff@total+2)^(0+128),w
 20049  2C76  0020               	movlb	0	; select bank0
 20050  2C77  00DC               	movwf	___fldiv@b+2
 20051  2C78  0021               	movlb	1	; select bank1
 20052  2C79  0849               	movf	(avgBuff@total+1)^(0+128),w
 20053  2C7A  0020               	movlb	0	; select bank0
 20054  2C7B  00DB               	movwf	___fldiv@b+1
 20055  2C7C  0021               	movlb	1	; select bank1
 20056  2C7D  0848               	movf	avgBuff@total^(0+128),w
 20057  2C7E  0020               	movlb	0	; select bank0
 20058  2C7F  00DA               	movwf	___fldiv@b
 20059  2C80  3190  2004         	fcall	___fldiv
 20060  2C82  0020               	movlb	0	; select bank0
 20061  2C83  0859               	movf	?___fldiv+3,w
 20062  2C84  0021               	movlb	1	; select bank1
 20063  2C85  00C4               	movwf	(?_avgBuff+3)^(0+128)
 20064  2C86  0020               	movlb	0	; select bank0
 20065  2C87  0858               	movf	?___fldiv+2,w
 20066  2C88  0021               	movlb	1	; select bank1
 20067  2C89  00C3               	movwf	(?_avgBuff+2)^(0+128)
 20068  2C8A  0020               	movlb	0	; select bank0
 20069  2C8B  0857               	movf	?___fldiv+1,w
 20070  2C8C  0021               	movlb	1	; select bank1
 20071  2C8D  00C2               	movwf	(?_avgBuff+1)^(0+128)
 20072  2C8E  0020               	movlb	0	; select bank0
 20073  2C8F  0856               	movf	?___fldiv,w
 20074  2C90  0021               	movlb	1	; select bank1
 20075  2C91  00C1               	movwf	?_avgBuff^(0+128)
 20076  2C92  0008               	return
 20077  2C93                     __end_of_avgBuff:	
 20078                           
 20079                           	psect	text57
 20080  2E31                     __ptext57:	
 20081 ;; *************** function ___xxtofl *****************
 20082 ;; Defined at:
 20083 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 20084 ;; Parameters:    Size  Location     Type
 20085 ;;  sign            1    wreg     unsigned char 
 20086 ;;  val             4   14[BANK0 ] long 
 20087 ;; Auto vars:     Size  Location     Type
 20088 ;;  sign            1   22[BANK0 ] unsigned char 
 20089 ;;  arg             4   24[BANK0 ] unsigned long 
 20090 ;;  exp             1   23[BANK0 ] unsigned char 
 20091 ;; Return value:  Size  Location     Type
 20092 ;;                  4   14[BANK0 ] unsigned char 
 20093 ;; Registers used:
 20094 ;;		wreg, status,2, status,0
 20095 ;; Tracked objects:
 20096 ;;		On entry : 0/0
 20097 ;;		On exit  : 0/0
 20098 ;;		Unchanged: 0/0
 20099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20100 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20101 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20102 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20103 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20104 ;;Total ram usage:       14 bytes
 20105 ;; Hardware stack levels used:    1
 20106 ;; Hardware stack levels required when called:    2
 20107 ;; This function calls:
 20108 ;;		Nothing
 20109 ;; This function is called by:
 20110 ;;		_main
 20111 ;;		_calculateTemp
 20112 ;;		_getCurrent
 20113 ;;		_avgBuff
 20114 ;;		_measureVoltages
 20115 ;;		_sprintf
 20116 ;; This function uses a non-reentrant model
 20117 ;;
 20118                           
 20119                           
 20120                           ;psect for function ___xxtofl
 20121  2E31                     ___xxtofl:	
 20122                           
 20123                           ;incstack = 0
 20124                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 20125                           ;___xxtofl@sign stored from wreg
 20126  2E31  0020               	movlb	0	; select bank0
 20127  2E32  00B6               	movwf	___xxtofl@sign
 20128  2E33  0836               	movf	___xxtofl@sign,w
 20129  2E34  1D03               	btfss	3,2
 20130  2E35  1FB1               	btfss	___xxtofl@val+3,7
 20131  2E36  2E47               	goto	l7236
 20132  2E37  092E               	comf	___xxtofl@val,w
 20133  2E38  00B8               	movwf	___xxtofl@arg
 20134  2E39  092F               	comf	___xxtofl@val+1,w
 20135  2E3A  00B9               	movwf	___xxtofl@arg+1
 20136  2E3B  0930               	comf	___xxtofl@val+2,w
 20137  2E3C  00BA               	movwf	___xxtofl@arg+2
 20138  2E3D  0931               	comf	___xxtofl@val+3,w
 20139  2E3E  00BB               	movwf	___xxtofl@arg+3
 20140  2E3F  0AB8               	incf	___xxtofl@arg,f
 20141  2E40  1903               	skipnz
 20142  2E41  0AB9               	incf	___xxtofl@arg+1,f
 20143  2E42  1903               	skipnz
 20144  2E43  0ABA               	incf	___xxtofl@arg+2,f
 20145  2E44  1903               	skipnz
 20146  2E45  0ABB               	incf	___xxtofl@arg+3,f
 20147  2E46  2E4F               	goto	l1411
 20148  2E47                     l7236:	
 20149  2E47  0831               	movf	___xxtofl@val+3,w
 20150  2E48  00BB               	movwf	___xxtofl@arg+3
 20151  2E49  0830               	movf	___xxtofl@val+2,w
 20152  2E4A  00BA               	movwf	___xxtofl@arg+2
 20153  2E4B  082F               	movf	___xxtofl@val+1,w
 20154  2E4C  00B9               	movwf	___xxtofl@arg+1
 20155  2E4D  082E               	movf	___xxtofl@val,w
 20156  2E4E  00B8               	movwf	___xxtofl@arg
 20157  2E4F                     l1411:	
 20158  2E4F  0831               	movf	___xxtofl@val+3,w
 20159  2E50  0430               	iorwf	___xxtofl@val+2,w
 20160  2E51  042F               	iorwf	___xxtofl@val+1,w
 20161  2E52  042E               	iorwf	___xxtofl@val,w
 20162  2E53  1D03               	skipz
 20163  2E54  2E5E               	goto	l7242
 20164  2E55  3000               	movlw	0
 20165  2E56  00B1               	movwf	?___xxtofl+3
 20166  2E57  3000               	movlw	0
 20167  2E58  00B0               	movwf	?___xxtofl+2
 20168  2E59  3000               	movlw	0
 20169  2E5A  00AF               	movwf	?___xxtofl+1
 20170  2E5B  3000               	movlw	0
 20171  2E5C  00AE               	movwf	?___xxtofl
 20172  2E5D  0008               	return
 20173  2E5E                     l7242:	
 20174  2E5E  3096               	movlw	150
 20175  2E5F  00B2               	movwf	??___xxtofl
 20176  2E60  0832               	movf	??___xxtofl,w
 20177  2E61  00B7               	movwf	___xxtofl@exp
 20178  2E62                     l7246:	
 20179  2E62  30FE               	movlw	254
 20180  2E63  053B               	andwf	___xxtofl@arg+3,w
 20181  2E64  1903               	btfsc	3,2
 20182  2E65  2E85               	goto	l1417
 20183  2E66  3001               	movlw	1
 20184  2E67  00B2               	movwf	??___xxtofl
 20185  2E68  0832               	movf	??___xxtofl,w
 20186  2E69  07B7               	addwf	___xxtofl@exp,f
 20187  2E6A  3001               	movlw	1
 20188  2E6B                     u9305:	
 20189  2E6B  36BB               	lsrf	___xxtofl@arg+3,f
 20190  2E6C  0CBA               	rrf	___xxtofl@arg+2,f
 20191  2E6D  0CB9               	rrf	___xxtofl@arg+1,f
 20192  2E6E  0CB8               	rrf	___xxtofl@arg,f
 20193  2E6F  0B89               	decfsz	9,f
 20194  2E70  2E6B               	goto	u9305
 20195  2E71  2E62               	goto	l7246
 20196  2E72                     l7248:	
 20197  2E72  3001               	movlw	1
 20198  2E73  00B2               	movwf	??___xxtofl
 20199  2E74  0832               	movf	??___xxtofl,w
 20200  2E75  07B7               	addwf	___xxtofl@exp,f
 20201  2E76  3001               	movlw	1
 20202  2E77  07B8               	addwf	___xxtofl@arg,f
 20203  2E78  3000               	movlw	0
 20204  2E79  3DB9               	addwfc	___xxtofl@arg+1,f
 20205  2E7A  3000               	movlw	0
 20206  2E7B  3DBA               	addwfc	___xxtofl@arg+2,f
 20207  2E7C  3000               	movlw	0
 20208  2E7D  3DBB               	addwfc	___xxtofl@arg+3,f
 20209  2E7E  3001               	movlw	1
 20210  2E7F                     u9325:	
 20211  2E7F  36BB               	lsrf	___xxtofl@arg+3,f
 20212  2E80  0CBA               	rrf	___xxtofl@arg+2,f
 20213  2E81  0CB9               	rrf	___xxtofl@arg+1,f
 20214  2E82  0CB8               	rrf	___xxtofl@arg,f
 20215  2E83  0B89               	decfsz	9,f
 20216  2E84  2E7F               	goto	u9325
 20217  2E85                     l1417:	
 20218  2E85  30FF               	movlw	255
 20219  2E86  053B               	andwf	___xxtofl@arg+3,w
 20220  2E87  1903               	btfsc	3,2
 20221  2E88  2E93               	goto	l7256
 20222  2E89  2E72               	goto	l7248
 20223  2E8A                     l7254:	
 20224  2E8A  3001               	movlw	1
 20225  2E8B  02B7               	subwf	___xxtofl@exp,f
 20226  2E8C  3001               	movlw	1
 20227  2E8D                     u9345:	
 20228  2E8D  35B8               	lslf	___xxtofl@arg,f
 20229  2E8E  0DB9               	rlf	___xxtofl@arg+1,f
 20230  2E8F  0DBA               	rlf	___xxtofl@arg+2,f
 20231  2E90  0DBB               	rlf	___xxtofl@arg+3,f
 20232  2E91  0B89               	decfsz	9,f
 20233  2E92  2E8D               	goto	u9345
 20234  2E93                     l7256:	
 20235  2E93  1BBA               	btfsc	___xxtofl@arg+2,7
 20236  2E94  2E99               	goto	l1424
 20237  2E95  3002               	movlw	2
 20238  2E96  0237               	subwf	___xxtofl@exp,w
 20239  2E97  1803               	skipnc
 20240  2E98  2E8A               	goto	l7254
 20241  2E99                     l1424:	
 20242  2E99  1837               	btfsc	___xxtofl@exp,0
 20243  2E9A  2EA3               	goto	l1425
 20244  2E9B  30FF               	movlw	255
 20245  2E9C  05B8               	andwf	___xxtofl@arg,f
 20246  2E9D  30FF               	movlw	255
 20247  2E9E  05B9               	andwf	___xxtofl@arg+1,f
 20248  2E9F  307F               	movlw	127
 20249  2EA0  05BA               	andwf	___xxtofl@arg+2,f
 20250  2EA1  30FF               	movlw	255
 20251  2EA2  05BB               	andwf	___xxtofl@arg+3,f
 20252  2EA3                     l1425:	
 20253  2EA3  1003               	clrc
 20254  2EA4  0CB7               	rrf	___xxtofl@exp,f
 20255  2EA5  0837               	movf	___xxtofl@exp,w
 20256  2EA6  00B2               	movwf	??___xxtofl
 20257  2EA7  01B3               	clrf	??___xxtofl+1
 20258  2EA8  01B4               	clrf	??___xxtofl+2
 20259  2EA9  01B5               	clrf	??___xxtofl+3
 20260  2EAA  3018               	movlw	24
 20261  2EAB                     u9385:	
 20262  2EAB  35B2               	lslf	??___xxtofl,f
 20263  2EAC  0DB3               	rlf	??___xxtofl+1,f
 20264  2EAD  0DB4               	rlf	??___xxtofl+2,f
 20265  2EAE  0DB5               	rlf	??___xxtofl+3,f
 20266  2EAF  0B89               	decfsz	9,f
 20267  2EB0  2EAB               	goto	u9385
 20268  2EB1  0832               	movf	??___xxtofl,w
 20269  2EB2  04B8               	iorwf	___xxtofl@arg,f
 20270  2EB3  0833               	movf	??___xxtofl+1,w
 20271  2EB4  04B9               	iorwf	___xxtofl@arg+1,f
 20272  2EB5  0834               	movf	??___xxtofl+2,w
 20273  2EB6  04BA               	iorwf	___xxtofl@arg+2,f
 20274  2EB7  0835               	movf	??___xxtofl+3,w
 20275  2EB8  04BB               	iorwf	___xxtofl@arg+3,f
 20276  2EB9  0836               	movf	___xxtofl@sign,w
 20277  2EBA  1D03               	btfss	3,2
 20278  2EBB  1FB1               	btfss	___xxtofl@val+3,7
 20279  2EBC  2EBE               	goto	l7270
 20280  2EBD  17BB               	bsf	___xxtofl@arg+3,7
 20281  2EBE                     l7270:	
 20282  2EBE  083B               	movf	___xxtofl@arg+3,w
 20283  2EBF  00B1               	movwf	?___xxtofl+3
 20284  2EC0  083A               	movf	___xxtofl@arg+2,w
 20285  2EC1  00B0               	movwf	?___xxtofl+2
 20286  2EC2  0839               	movf	___xxtofl@arg+1,w
 20287  2EC3  00AF               	movwf	?___xxtofl+1
 20288  2EC4  0838               	movf	___xxtofl@arg,w
 20289  2EC5  00AE               	movwf	?___xxtofl
 20290  2EC6  0008               	return
 20291  2EC7                     __end_of___xxtofl:	
 20292                           
 20293                           	psect	text58
 20294  1004                     __ptext58:	
 20295 ;; *************** function ___fldiv *****************
 20296 ;; Defined at:
 20297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 20298 ;; Parameters:    Size  Location     Type
 20299 ;;  a               4   54[BANK0 ] unsigned char 
 20300 ;;  b               4   58[BANK0 ] unsigned char 
 20301 ;; Auto vars:     Size  Location     Type
 20302 ;;  grs             4   74[BANK0 ] unsigned long 
 20303 ;;  rem             4   68[BANK0 ] unsigned long 
 20304 ;;  new_exp         2   72[BANK0 ] int 
 20305 ;;  aexp            1   79[BANK0 ] unsigned char 
 20306 ;;  bexp            1   78[BANK0 ] unsigned char 
 20307 ;;  sign            1   67[BANK0 ] unsigned char 
 20308 ;; Return value:  Size  Location     Type
 20309 ;;                  4   54[BANK0 ] unsigned char 
 20310 ;; Registers used:
 20311 ;;		wreg, status,2, status,0
 20312 ;; Tracked objects:
 20313 ;;		On entry : 0/0
 20314 ;;		On exit  : 0/0
 20315 ;;		Unchanged: 0/0
 20316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20317 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20318 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20319 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20320 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20321 ;;Total ram usage:       26 bytes
 20322 ;; Hardware stack levels used:    1
 20323 ;; Hardware stack levels required when called:    2
 20324 ;; This function calls:
 20325 ;;		Nothing
 20326 ;; This function is called by:
 20327 ;;		_main
 20328 ;;		_startUp
 20329 ;;		_calculateTemp
 20330 ;;		_calculateCurrent
 20331 ;;		_avgBuff
 20332 ;;		_measureVoltages
 20333 ;; This function uses a non-reentrant model
 20334 ;;
 20335                           
 20336                           
 20337                           ;psect for function ___fldiv
 20338  1004                     ___fldiv:	
 20339                           
 20340                           ;incstack = 0
 20341                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 20342  1004  0020               	movlb	0	; select bank0
 20343  1005  085D               	movf	___fldiv@b+3,w
 20344  1006  3980               	andlw	128
 20345  1007  00DE               	movwf	??___fldiv
 20346  1008  085E               	movf	??___fldiv,w
 20347  1009  00E3               	movwf	___fldiv@sign
 20348  100A  355D               	lslf	___fldiv@b+3,w
 20349  100B  00DE               	movwf	??___fldiv
 20350  100C  085E               	movf	??___fldiv,w
 20351  100D  00EE               	movwf	___fldiv@bexp
 20352  100E  1BDC               	btfsc	___fldiv@b+2,7
 20353  100F  146E               	bsf	___fldiv@bexp,0
 20354  1010  086E               	movf	___fldiv@bexp,w
 20355  1011  1903               	btfsc	3,2
 20356  1012  2821               	goto	l5012
 20357  1013  0A6E               	incf	___fldiv@bexp,w
 20358  1014  1D03               	btfss	3,2
 20359  1015  281E               	goto	l5008
 20360  1016  3000               	movlw	0
 20361  1017  00DD               	movwf	___fldiv@b+3
 20362  1018  3000               	movlw	0
 20363  1019  00DC               	movwf	___fldiv@b+2
 20364  101A  3000               	movlw	0
 20365  101B  00DB               	movwf	___fldiv@b+1
 20366  101C  3000               	movlw	0
 20367  101D  00DA               	movwf	___fldiv@b
 20368  101E                     l5008:	
 20369  101E  17DC               	bsf	___fldiv@b+2,7
 20370  101F  01DD               	clrf	___fldiv@b+3
 20371  1020  2829               	goto	l5014
 20372  1021                     l5012:	
 20373  1021  3000               	movlw	0
 20374  1022  00DD               	movwf	___fldiv@b+3
 20375  1023  3000               	movlw	0
 20376  1024  00DC               	movwf	___fldiv@b+2
 20377  1025  3000               	movlw	0
 20378  1026  00DB               	movwf	___fldiv@b+1
 20379  1027  3000               	movlw	0
 20380  1028  00DA               	movwf	___fldiv@b
 20381  1029                     l5014:	
 20382  1029  0859               	movf	___fldiv@a+3,w
 20383  102A  3980               	andlw	128
 20384  102B  00DE               	movwf	??___fldiv
 20385  102C  085E               	movf	??___fldiv,w
 20386  102D  06E3               	xorwf	___fldiv@sign,f
 20387  102E  3559               	lslf	___fldiv@a+3,w
 20388  102F  00DE               	movwf	??___fldiv
 20389  1030  085E               	movf	??___fldiv,w
 20390  1031  00EF               	movwf	___fldiv@aexp
 20391  1032  1BD8               	btfsc	___fldiv@a+2,7
 20392  1033  146F               	bsf	___fldiv@aexp,0
 20393  1034  086F               	movf	___fldiv@aexp,w
 20394  1035  1903               	btfsc	3,2
 20395  1036  2845               	goto	l5032
 20396  1037  0A6F               	incf	___fldiv@aexp,w
 20397  1038  1D03               	btfss	3,2
 20398  1039  2842               	goto	l5028
 20399  103A  3000               	movlw	0
 20400  103B  00D9               	movwf	___fldiv@a+3
 20401  103C  3000               	movlw	0
 20402  103D  00D8               	movwf	___fldiv@a+2
 20403  103E  3000               	movlw	0
 20404  103F  00D7               	movwf	___fldiv@a+1
 20405  1040  3000               	movlw	0
 20406  1041  00D6               	movwf	___fldiv@a
 20407  1042                     l5028:	
 20408  1042  17D8               	bsf	___fldiv@a+2,7
 20409  1043  01D9               	clrf	___fldiv@a+3
 20410  1044  284D               	goto	l1352
 20411  1045                     l5032:	
 20412  1045  3000               	movlw	0
 20413  1046  00D9               	movwf	___fldiv@a+3
 20414  1047  3000               	movlw	0
 20415  1048  00D8               	movwf	___fldiv@a+2
 20416  1049  3000               	movlw	0
 20417  104A  00D7               	movwf	___fldiv@a+1
 20418  104B  3000               	movlw	0
 20419  104C  00D6               	movwf	___fldiv@a
 20420  104D                     l1352:	
 20421  104D  0859               	movf	___fldiv@a+3,w
 20422  104E  0458               	iorwf	___fldiv@a+2,w
 20423  104F  0457               	iorwf	___fldiv@a+1,w
 20424  1050  0456               	iorwf	___fldiv@a,w
 20425  1051  1D03               	skipz
 20426  1052  2868               	goto	l5038
 20427  1053  3000               	movlw	0
 20428  1054  00DD               	movwf	___fldiv@b+3
 20429  1055  3000               	movlw	0
 20430  1056  00DC               	movwf	___fldiv@b+2
 20431  1057  3000               	movlw	0
 20432  1058  00DB               	movwf	___fldiv@b+1
 20433  1059  3000               	movlw	0
 20434  105A  00DA               	movwf	___fldiv@b
 20435  105B  3080               	movlw	128
 20436  105C  04DC               	iorwf	___fldiv@b+2,f
 20437  105D  307F               	movlw	127
 20438  105E  04DD               	iorwf	___fldiv@b+3,f
 20439  105F  085D               	movf	___fldiv@b+3,w
 20440  1060  00D9               	movwf	?___fldiv+3
 20441  1061  085C               	movf	___fldiv@b+2,w
 20442  1062  00D8               	movwf	?___fldiv+2
 20443  1063  085B               	movf	___fldiv@b+1,w
 20444  1064  00D7               	movwf	?___fldiv+1
 20445  1065  085A               	movf	___fldiv@b,w
 20446  1066  00D6               	movwf	?___fldiv
 20447  1067  0008               	return
 20448  1068                     l5038:	
 20449  1068  086E               	movf	___fldiv@bexp,w
 20450  1069  1D03               	btfss	3,2
 20451  106A  287C               	goto	l5044
 20452  106B  3000               	movlw	0
 20453  106C  00DD               	movwf	___fldiv@b+3
 20454  106D  3000               	movlw	0
 20455  106E  00DC               	movwf	___fldiv@b+2
 20456  106F  3000               	movlw	0
 20457  1070  00DB               	movwf	___fldiv@b+1
 20458  1071  3000               	movlw	0
 20459  1072  00DA               	movwf	___fldiv@b
 20460  1073  085D               	movf	___fldiv@b+3,w
 20461  1074  00D9               	movwf	?___fldiv+3
 20462  1075  085C               	movf	___fldiv@b+2,w
 20463  1076  00D8               	movwf	?___fldiv+2
 20464  1077  085B               	movf	___fldiv@b+1,w
 20465  1078  00D7               	movwf	?___fldiv+1
 20466  1079  085A               	movf	___fldiv@b,w
 20467  107A  00D6               	movwf	?___fldiv
 20468  107B  0008               	return
 20469  107C                     l5044:	
 20470  107C  086F               	movf	___fldiv@aexp,w
 20471  107D  00DE               	movwf	??___fldiv
 20472  107E  01DF               	clrf	??___fldiv+1
 20473  107F  09DE               	comf	??___fldiv,f
 20474  1080  09DF               	comf	??___fldiv+1,f
 20475  1081  0ADE               	incf	??___fldiv,f
 20476  1082  1903               	skipnz
 20477  1083  0ADF               	incf	??___fldiv+1,f
 20478  1084  086E               	movf	___fldiv@bexp,w
 20479  1085  075E               	addwf	??___fldiv,w
 20480  1086  00E0               	movwf	??___fldiv+2
 20481  1087  085F               	movf	??___fldiv+1,w
 20482  1088  1803               	skipnc
 20483  1089  0A5F               	incf	??___fldiv+1,w
 20484  108A  00E1               	movwf	??___fldiv+3
 20485  108B  0860               	movf	??___fldiv+2,w
 20486  108C  3E7F               	addlw	127
 20487  108D  00E8               	movwf	___fldiv@new_exp
 20488  108E  3000               	movlw	0
 20489  108F  3D61               	addwfc	??___fldiv+3,w
 20490  1090  00E9               	movwf	___fldiv@new_exp+1
 20491  1091  085D               	movf	___fldiv@b+3,w
 20492  1092  00E7               	movwf	___fldiv@rem+3
 20493  1093  085C               	movf	___fldiv@b+2,w
 20494  1094  00E6               	movwf	___fldiv@rem+2
 20495  1095  085B               	movf	___fldiv@b+1,w
 20496  1096  00E5               	movwf	___fldiv@rem+1
 20497  1097  085A               	movf	___fldiv@b,w
 20498  1098  00E4               	movwf	___fldiv@rem
 20499  1099  3000               	movlw	0
 20500  109A  00DD               	movwf	___fldiv@b+3
 20501  109B  3000               	movlw	0
 20502  109C  00DC               	movwf	___fldiv@b+2
 20503  109D  3000               	movlw	0
 20504  109E  00DB               	movwf	___fldiv@b+1
 20505  109F  3000               	movlw	0
 20506  10A0  00DA               	movwf	___fldiv@b
 20507  10A1  3000               	movlw	0
 20508  10A2  00ED               	movwf	___fldiv@grs+3
 20509  10A3  3000               	movlw	0
 20510  10A4  00EC               	movwf	___fldiv@grs+2
 20511  10A5  3000               	movlw	0
 20512  10A6  00EB               	movwf	___fldiv@grs+1
 20513  10A7  3000               	movlw	0
 20514  10A8  00EA               	movwf	___fldiv@grs
 20515  10A9  01EF               	clrf	___fldiv@aexp
 20516  10AA                     l5072:	
 20517  10AA  301A               	movlw	26
 20518  10AB  026F               	subwf	___fldiv@aexp,w
 20519  10AC  1803               	btfsc	3,0
 20520  10AD  28E6               	goto	l5074
 20521  10AE  086F               	movf	___fldiv@aexp,w
 20522  10AF  1903               	btfsc	3,2
 20523  10B0  28C8               	goto	l5064
 20524  10B1  3001               	movlw	1
 20525  10B2                     u6005:	
 20526  10B2  35E4               	lslf	___fldiv@rem,f
 20527  10B3  0DE5               	rlf	___fldiv@rem+1,f
 20528  10B4  0DE6               	rlf	___fldiv@rem+2,f
 20529  10B5  0DE7               	rlf	___fldiv@rem+3,f
 20530  10B6  0B89               	decfsz	9,f
 20531  10B7  28B2               	goto	u6005
 20532  10B8  3001               	movlw	1
 20533  10B9                     u6015:	
 20534  10B9  35DA               	lslf	___fldiv@b,f
 20535  10BA  0DDB               	rlf	___fldiv@b+1,f
 20536  10BB  0DDC               	rlf	___fldiv@b+2,f
 20537  10BC  0DDD               	rlf	___fldiv@b+3,f
 20538  10BD  0B89               	decfsz	9,f
 20539  10BE  28B9               	goto	u6015
 20540  10BF  1BED               	btfsc	___fldiv@grs+3,7
 20541  10C0  145A               	bsf	___fldiv@b,0
 20542  10C1  3001               	movlw	1
 20543  10C2                     u6035:	
 20544  10C2  35EA               	lslf	___fldiv@grs,f
 20545  10C3  0DEB               	rlf	___fldiv@grs+1,f
 20546  10C4  0DEC               	rlf	___fldiv@grs+2,f
 20547  10C5  0DED               	rlf	___fldiv@grs+3,f
 20548  10C6  0B89               	decfsz	9,f
 20549  10C7  28C2               	goto	u6035
 20550  10C8                     l5064:	
 20551  10C8  0859               	movf	___fldiv@a+3,w
 20552  10C9  0267               	subwf	___fldiv@rem+3,w
 20553  10CA  1D03               	skipz
 20554  10CB  28D6               	goto	u6045
 20555  10CC  0858               	movf	___fldiv@a+2,w
 20556  10CD  0266               	subwf	___fldiv@rem+2,w
 20557  10CE  1D03               	skipz
 20558  10CF  28D6               	goto	u6045
 20559  10D0  0857               	movf	___fldiv@a+1,w
 20560  10D1  0265               	subwf	___fldiv@rem+1,w
 20561  10D2  1D03               	skipz
 20562  10D3  28D6               	goto	u6045
 20563  10D4  0856               	movf	___fldiv@a,w
 20564  10D5  0264               	subwf	___fldiv@rem,w
 20565  10D6                     u6045:	
 20566  10D6  1C03               	skipc
 20567  10D7  28E1               	goto	l5070
 20568  10D8  176D               	bsf	___fldiv@grs+3,6
 20569  10D9  0856               	movf	___fldiv@a,w
 20570  10DA  02E4               	subwf	___fldiv@rem,f
 20571  10DB  0857               	movf	___fldiv@a+1,w
 20572  10DC  3BE5               	subwfb	___fldiv@rem+1,f
 20573  10DD  0858               	movf	___fldiv@a+2,w
 20574  10DE  3BE6               	subwfb	___fldiv@rem+2,f
 20575  10DF  0859               	movf	___fldiv@a+3,w
 20576  10E0  3BE7               	subwfb	___fldiv@rem+3,f
 20577  10E1                     l5070:	
 20578  10E1  3001               	movlw	1
 20579  10E2  00DE               	movwf	??___fldiv
 20580  10E3  085E               	movf	??___fldiv,w
 20581  10E4  07EF               	addwf	___fldiv@aexp,f
 20582  10E5  28AA               	goto	l5072
 20583  10E6                     l5074:	
 20584  10E6  0867               	movf	___fldiv@rem+3,w
 20585  10E7  0466               	iorwf	___fldiv@rem+2,w
 20586  10E8  0465               	iorwf	___fldiv@rem+1,w
 20587  10E9  0464               	iorwf	___fldiv@rem,w
 20588  10EA  1D03               	btfss	3,2
 20589  10EB  146A               	bsf	___fldiv@grs,0
 20590  10EC                     l5088:	
 20591  10EC  1BDC               	btfsc	___fldiv@b+2,7
 20592  10ED  2903               	goto	l5090
 20593  10EE  3001               	movlw	1
 20594  10EF                     u6075:	
 20595  10EF  35DA               	lslf	___fldiv@b,f
 20596  10F0  0DDB               	rlf	___fldiv@b+1,f
 20597  10F1  0DDC               	rlf	___fldiv@b+2,f
 20598  10F2  0DDD               	rlf	___fldiv@b+3,f
 20599  10F3  0B89               	decfsz	9,f
 20600  10F4  28EF               	goto	u6075
 20601  10F5  1BED               	btfsc	___fldiv@grs+3,7
 20602  10F6  145A               	bsf	___fldiv@b,0
 20603  10F7  3001               	movlw	1
 20604  10F8                     u6095:	
 20605  10F8  35EA               	lslf	___fldiv@grs,f
 20606  10F9  0DEB               	rlf	___fldiv@grs+1,f
 20607  10FA  0DEC               	rlf	___fldiv@grs+2,f
 20608  10FB  0DED               	rlf	___fldiv@grs+3,f
 20609  10FC  0B89               	decfsz	9,f
 20610  10FD  28F8               	goto	u6095
 20611  10FE  30FF               	movlw	255
 20612  10FF  07E8               	addwf	___fldiv@new_exp,f
 20613  1100  30FF               	movlw	255
 20614  1101  3DE9               	addwfc	___fldiv@new_exp+1,f
 20615  1102  28EC               	goto	l5088
 20616  1103                     l5090:	
 20617  1103  01EF               	clrf	___fldiv@aexp
 20618  1104  1FED               	btfss	___fldiv@grs+3,7
 20619  1105  291C               	goto	l5100
 20620  1106  30FF               	movlw	255
 20621  1107  056A               	andwf	___fldiv@grs,w
 20622  1108  00DE               	movwf	??___fldiv
 20623  1109  30FF               	movlw	255
 20624  110A  056B               	andwf	___fldiv@grs+1,w
 20625  110B  00DF               	movwf	??___fldiv+1
 20626  110C  30FF               	movlw	255
 20627  110D  056C               	andwf	___fldiv@grs+2,w
 20628  110E  00E0               	movwf	??___fldiv+2
 20629  110F  307F               	movlw	127
 20630  1110  056D               	andwf	___fldiv@grs+3,w
 20631  1111  00E1               	movwf	??___fldiv+3
 20632  1112  0861               	movf	??___fldiv+3,w
 20633  1113  0460               	iorwf	??___fldiv+2,w
 20634  1114  045F               	iorwf	??___fldiv+1,w
 20635  1115  045E               	iorwf	??___fldiv,w
 20636  1116  1D03               	btfss	3,2
 20637  1117  291A               	goto	l5098
 20638  1118  1C5A               	btfss	___fldiv@b,0
 20639  1119  291C               	goto	l5100
 20640  111A                     l5098:	
 20641  111A  01EF               	clrf	___fldiv@aexp
 20642  111B  0AEF               	incf	___fldiv@aexp,f
 20643  111C                     l5100:	
 20644  111C  086F               	movf	___fldiv@aexp,w
 20645  111D  1903               	btfsc	3,2
 20646  111E  2945               	goto	l5110
 20647  111F  3001               	movlw	1
 20648  1120  07DA               	addwf	___fldiv@b,f
 20649  1121  3000               	movlw	0
 20650  1122  3DDB               	addwfc	___fldiv@b+1,f
 20651  1123  3000               	movlw	0
 20652  1124  3DDC               	addwfc	___fldiv@b+2,f
 20653  1125  3000               	movlw	0
 20654  1126  3DDD               	addwfc	___fldiv@b+3,f
 20655  1127  1C5D               	btfss	___fldiv@b+3,0
 20656  1128  2945               	goto	l5110
 20657  1129  085A               	movf	___fldiv@b,w
 20658  112A  00DE               	movwf	??___fldiv
 20659  112B  085B               	movf	___fldiv@b+1,w
 20660  112C  00DF               	movwf	??___fldiv+1
 20661  112D  085C               	movf	___fldiv@b+2,w
 20662  112E  00E0               	movwf	??___fldiv+2
 20663  112F  085D               	movf	___fldiv@b+3,w
 20664  1130  00E1               	movwf	??___fldiv+3
 20665  1131  3001               	movlw	1
 20666  1132  00E2               	movwf	??___fldiv+4
 20667  1133                     u6165:	
 20668  1133  37E1               	asrf	??___fldiv+3,f
 20669  1134  0CE0               	rrf	??___fldiv+2,f
 20670  1135  0CDF               	rrf	??___fldiv+1,f
 20671  1136  0CDE               	rrf	??___fldiv,f
 20672  1137  0BE2               	decfsz	??___fldiv+4,f
 20673  1138  2933               	goto	u6165
 20674  1139  0861               	movf	??___fldiv+3,w
 20675  113A  00DD               	movwf	___fldiv@b+3
 20676  113B  0860               	movf	??___fldiv+2,w
 20677  113C  00DC               	movwf	___fldiv@b+2
 20678  113D  085F               	movf	??___fldiv+1,w
 20679  113E  00DB               	movwf	___fldiv@b+1
 20680  113F  085E               	movf	??___fldiv,w
 20681  1140  00DA               	movwf	___fldiv@b
 20682  1141  3001               	movlw	1
 20683  1142  07E8               	addwf	___fldiv@new_exp,f
 20684  1143  3000               	movlw	0
 20685  1144  3DE9               	addwfc	___fldiv@new_exp+1,f
 20686  1145                     l5110:	
 20687  1145  0869               	movf	___fldiv@new_exp+1,w
 20688  1146  3A80               	xorlw	128
 20689  1147  00DE               	movwf	??___fldiv
 20690  1148  3080               	movlw	128
 20691  1149  025E               	subwf	??___fldiv,w
 20692  114A  1D03               	skipz
 20693  114B  294E               	goto	u6175
 20694  114C  30FF               	movlw	255
 20695  114D  0268               	subwf	___fldiv@new_exp,w
 20696  114E                     u6175:	
 20697  114E  1C03               	skipc
 20698  114F  295D               	goto	l1373
 20699  1150  30FF               	movlw	255
 20700  1151  0020               	movlb	0	; select bank0
 20701  1152  00E8               	movwf	___fldiv@new_exp
 20702  1153  3000               	movlw	0
 20703  1154  00E9               	movwf	___fldiv@new_exp+1
 20704  1155  3000               	movlw	0
 20705  1156  00DD               	movwf	___fldiv@b+3
 20706  1157  3000               	movlw	0
 20707  1158  00DC               	movwf	___fldiv@b+2
 20708  1159  3000               	movlw	0
 20709  115A  00DB               	movwf	___fldiv@b+1
 20710  115B  3000               	movlw	0
 20711  115C  00DA               	movwf	___fldiv@b
 20712  115D                     l1373:	
 20713  115D  0020               	movlb	0	; select bank0
 20714  115E  0869               	movf	___fldiv@new_exp+1,w
 20715  115F  3A80               	xorlw	128
 20716  1160  00DE               	movwf	??___fldiv
 20717  1161  3080               	movlw	128
 20718  1162  025E               	subwf	??___fldiv,w
 20719  1163  1D03               	skipz
 20720  1164  2967               	goto	u6185
 20721  1165  3001               	movlw	1
 20722  1166  0268               	subwf	___fldiv@new_exp,w
 20723  1167                     u6185:	
 20724  1167  1803               	skipnc
 20725  1168  2975               	goto	l1374
 20726  1169  0020               	movlb	0	; select bank0
 20727  116A  01E8               	clrf	___fldiv@new_exp
 20728  116B  01E9               	clrf	___fldiv@new_exp+1
 20729  116C  3000               	movlw	0
 20730  116D  00DD               	movwf	___fldiv@b+3
 20731  116E  3000               	movlw	0
 20732  116F  00DC               	movwf	___fldiv@b+2
 20733  1170  3000               	movlw	0
 20734  1171  00DB               	movwf	___fldiv@b+1
 20735  1172  3000               	movlw	0
 20736  1173  00DA               	movwf	___fldiv@b
 20737  1174  01E3               	clrf	___fldiv@sign
 20738  1175                     l1374:	
 20739  1175  0020               	movlb	0	; select bank0
 20740  1176  0868               	movf	___fldiv@new_exp,w
 20741  1177  00DE               	movwf	??___fldiv
 20742  1178  085E               	movf	??___fldiv,w
 20743  1179  00EE               	movwf	___fldiv@bexp
 20744  117A  1C6E               	btfss	___fldiv@bexp,0
 20745  117B  297E               	goto	l5124
 20746  117C  17DC               	bsf	___fldiv@b+2,7
 20747  117D  2982               	goto	l1376
 20748  117E                     l5124:	
 20749  117E  307F               	movlw	127
 20750  117F  00DE               	movwf	??___fldiv
 20751  1180  085E               	movf	??___fldiv,w
 20752  1181  05DC               	andwf	___fldiv@b+2,f
 20753  1182                     l1376:	
 20754  1182  366E               	lsrf	___fldiv@bexp,w
 20755  1183  00DE               	movwf	??___fldiv
 20756  1184  085E               	movf	??___fldiv,w
 20757  1185  00DD               	movwf	___fldiv@b+3
 20758  1186  0863               	movf	___fldiv@sign,w
 20759  1187  00DE               	movwf	??___fldiv
 20760  1188  085E               	movf	??___fldiv,w
 20761  1189  04DD               	iorwf	___fldiv@b+3,f
 20762  118A  085D               	movf	___fldiv@b+3,w
 20763  118B  00D9               	movwf	?___fldiv+3
 20764  118C  085C               	movf	___fldiv@b+2,w
 20765  118D  00D8               	movwf	?___fldiv+2
 20766  118E  085B               	movf	___fldiv@b+1,w
 20767  118F  00D7               	movwf	?___fldiv+1
 20768  1190  085A               	movf	___fldiv@b,w
 20769  1191  00D6               	movwf	?___fldiv
 20770  1192  0008               	return
 20771  1193                     __end_of___fldiv:	
 20772                           
 20773                           	psect	text59
 20774  1374                     __ptext59:	
 20775 ;; *************** function ___fladd *****************
 20776 ;; Defined at:
 20777 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 20778 ;; Parameters:    Size  Location     Type
 20779 ;;  b               4    9[BANK1 ] unsigned char 
 20780 ;;  a               4   13[BANK1 ] unsigned char 
 20781 ;; Auto vars:     Size  Location     Type
 20782 ;;  grs             1   32[BANK1 ] unsigned char 
 20783 ;;  bexp            1   31[BANK1 ] unsigned char 
 20784 ;;  aexp            1   30[BANK1 ] unsigned char 
 20785 ;;  signs           1   29[BANK1 ] unsigned char 
 20786 ;; Return value:  Size  Location     Type
 20787 ;;                  4    9[BANK1 ] unsigned char 
 20788 ;; Registers used:
 20789 ;;		wreg, status,2, status,0
 20790 ;; Tracked objects:
 20791 ;;		On entry : 0/0
 20792 ;;		On exit  : 0/0
 20793 ;;		Unchanged: 0/0
 20794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20795 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20796 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20797 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20798 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20799 ;;Total ram usage:       24 bytes
 20800 ;; Hardware stack levels used:    1
 20801 ;; Hardware stack levels required when called:    2
 20802 ;; This function calls:
 20803 ;;		Nothing
 20804 ;; This function is called by:
 20805 ;;		_main
 20806 ;;		_startUp
 20807 ;;		_calculateCurrent
 20808 ;;		_avgBuff
 20809 ;;		_writeVoltages
 20810 ;;		_sumVoltages
 20811 ;;		_cellBalancing
 20812 ;;		_sprintf
 20813 ;;		___flsub
 20814 ;; This function uses a non-reentrant model
 20815 ;;
 20816                           
 20817                           
 20818                           ;psect for function ___fladd
 20819  1374                     ___fladd:	
 20820                           
 20821                           ;incstack = 0
 20822                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 20823  1374  0021               	movlb	1	; select bank1
 20824  1375  082C               	movf	(___fladd@b^(0+128)+3),w
 20825  1376  3980               	andlw	128
 20826  1377  00B1               	movwf	??___fladd^(0+128)
 20827  1378  0831               	movf	??___fladd^(0+128),w
 20828  1379  00BD               	movwf	___fladd@signs^(0+128)
 20829  137A  352C               	lslf	(___fladd@b^(0+128)+3),w
 20830  137B  00B1               	movwf	??___fladd^(0+128)
 20831  137C  0831               	movf	??___fladd^(0+128),w
 20832  137D  00BF               	movwf	___fladd@bexp^(0+128)
 20833  137E  1BAB               	btfsc	(___fladd@b^(0+128)+2),7
 20834  137F  143F               	bsf	___fladd@bexp^(0+128),0
 20835  1380  083F               	movf	___fladd@bexp^(0+128),w
 20836  1381  1903               	btfsc	3,2
 20837  1382  2B91               	goto	l4320
 20838  1383  0A3F               	incf	___fladd@bexp^(0+128),w
 20839  1384  1D03               	btfss	3,2
 20840  1385  2B8E               	goto	l4316
 20841  1386  3000               	movlw	0
 20842  1387  00AC               	movwf	(___fladd@b+3)^(0+128)
 20843  1388  3000               	movlw	0
 20844  1389  00AB               	movwf	(___fladd@b+2)^(0+128)
 20845  138A  3000               	movlw	0
 20846  138B  00AA               	movwf	(___fladd@b+1)^(0+128)
 20847  138C  3000               	movlw	0
 20848  138D  00A9               	movwf	___fladd@b^(0+128)
 20849  138E                     l4316:	
 20850  138E  17AB               	bsf	(___fladd@b^(0+128)+2),7
 20851  138F  01AC               	clrf	(___fladd@b^(0+128)+3)
 20852  1390  2B99               	goto	l4322
 20853  1391                     l4320:	
 20854  1391  3000               	movlw	0
 20855  1392  00AC               	movwf	(___fladd@b+3)^(0+128)
 20856  1393  3000               	movlw	0
 20857  1394  00AB               	movwf	(___fladd@b+2)^(0+128)
 20858  1395  3000               	movlw	0
 20859  1396  00AA               	movwf	(___fladd@b+1)^(0+128)
 20860  1397  3000               	movlw	0
 20861  1398  00A9               	movwf	___fladd@b^(0+128)
 20862  1399                     l4322:	
 20863  1399  0830               	movf	(___fladd@a^(0+128)+3),w
 20864  139A  3980               	andlw	128
 20865  139B  00B1               	movwf	??___fladd^(0+128)
 20866  139C  0831               	movf	??___fladd^(0+128),w
 20867  139D  00BE               	movwf	___fladd@aexp^(0+128)
 20868  139E  083E               	movf	___fladd@aexp^(0+128),w
 20869  139F  063D               	xorwf	___fladd@signs^(0+128),w
 20870  13A0  1D03               	btfss	3,2
 20871  13A1  173D               	bsf	___fladd@signs^(0+128),6
 20872  13A2  3530               	lslf	(___fladd@a^(0+128)+3),w
 20873  13A3  00B1               	movwf	??___fladd^(0+128)
 20874  13A4  0831               	movf	??___fladd^(0+128),w
 20875  13A5  00BE               	movwf	___fladd@aexp^(0+128)
 20876  13A6  1BAF               	btfsc	(___fladd@a^(0+128)+2),7
 20877  13A7  143E               	bsf	___fladd@aexp^(0+128),0
 20878  13A8  083E               	movf	___fladd@aexp^(0+128),w
 20879  13A9  1903               	btfsc	3,2
 20880  13AA  2BB9               	goto	l4344
 20881  13AB  0A3E               	incf	___fladd@aexp^(0+128),w
 20882  13AC  1D03               	btfss	3,2
 20883  13AD  2BB6               	goto	l4340
 20884  13AE  3000               	movlw	0
 20885  13AF  00B0               	movwf	(___fladd@a+3)^(0+128)
 20886  13B0  3000               	movlw	0
 20887  13B1  00AF               	movwf	(___fladd@a+2)^(0+128)
 20888  13B2  3000               	movlw	0
 20889  13B3  00AE               	movwf	(___fladd@a+1)^(0+128)
 20890  13B4  3000               	movlw	0
 20891  13B5  00AD               	movwf	___fladd@a^(0+128)
 20892  13B6                     l4340:	
 20893  13B6  17AF               	bsf	(___fladd@a^(0+128)+2),7
 20894  13B7  01B0               	clrf	(___fladd@a^(0+128)+3)
 20895  13B8  2BC1               	goto	l1296
 20896  13B9                     l4344:	
 20897  13B9  3000               	movlw	0
 20898  13BA  00B0               	movwf	(___fladd@a+3)^(0+128)
 20899  13BB  3000               	movlw	0
 20900  13BC  00AF               	movwf	(___fladd@a+2)^(0+128)
 20901  13BD  3000               	movlw	0
 20902  13BE  00AE               	movwf	(___fladd@a+1)^(0+128)
 20903  13BF  3000               	movlw	0
 20904  13C0  00AD               	movwf	___fladd@a^(0+128)
 20905  13C1                     l1296:	
 20906  13C1  083F               	movf	___fladd@bexp^(0+128),w
 20907  13C2  023E               	subwf	___fladd@aexp^(0+128),w
 20908  13C3  1803               	skipnc
 20909  13C4  2C07               	goto	l4380
 20910  13C5  1F3D               	btfss	___fladd@signs^(0+128),6
 20911  13C6  2BCB               	goto	l4350
 20912  13C7  3080               	movlw	128
 20913  13C8  00B1               	movwf	??___fladd^(0+128)
 20914  13C9  0831               	movf	??___fladd^(0+128),w
 20915  13CA  06BD               	xorwf	___fladd@signs^(0+128),f
 20916  13CB                     l4350:	
 20917  13CB  083F               	movf	___fladd@bexp^(0+128),w
 20918  13CC  00B1               	movwf	??___fladd^(0+128)
 20919  13CD  0831               	movf	??___fladd^(0+128),w
 20920  13CE  00C0               	movwf	___fladd@grs^(0+128)
 20921  13CF  083E               	movf	___fladd@aexp^(0+128),w
 20922  13D0  00B1               	movwf	??___fladd^(0+128)
 20923  13D1  0831               	movf	??___fladd^(0+128),w
 20924  13D2  00BF               	movwf	___fladd@bexp^(0+128)
 20925  13D3  0840               	movf	___fladd@grs^(0+128),w
 20926  13D4  00B1               	movwf	??___fladd^(0+128)
 20927  13D5  0831               	movf	??___fladd^(0+128),w
 20928  13D6  00BE               	movwf	___fladd@aexp^(0+128)
 20929  13D7  0829               	movf	___fladd@b^(0+128),w
 20930  13D8  00B1               	movwf	??___fladd^(0+128)
 20931  13D9  0831               	movf	??___fladd^(0+128),w
 20932  13DA  00C0               	movwf	___fladd@grs^(0+128)
 20933  13DB  082D               	movf	___fladd@a^(0+128),w
 20934  13DC  00B1               	movwf	??___fladd^(0+128)
 20935  13DD  0831               	movf	??___fladd^(0+128),w
 20936  13DE  00A9               	movwf	___fladd@b^(0+128)
 20937  13DF  0840               	movf	___fladd@grs^(0+128),w
 20938  13E0  00B1               	movwf	??___fladd^(0+128)
 20939  13E1  0831               	movf	??___fladd^(0+128),w
 20940  13E2  00AD               	movwf	___fladd@a^(0+128)
 20941  13E3  082A               	movf	(___fladd@b^(0+128)+1),w
 20942  13E4  00B1               	movwf	??___fladd^(0+128)
 20943  13E5  0831               	movf	??___fladd^(0+128),w
 20944  13E6  00C0               	movwf	___fladd@grs^(0+128)
 20945  13E7  082E               	movf	(___fladd@a^(0+128)+1),w
 20946  13E8  00B1               	movwf	??___fladd^(0+128)
 20947  13E9  0831               	movf	??___fladd^(0+128),w
 20948  13EA  00AA               	movwf	(___fladd@b^(0+128)+1)
 20949  13EB  0840               	movf	___fladd@grs^(0+128),w
 20950  13EC  00B1               	movwf	??___fladd^(0+128)
 20951  13ED  0831               	movf	??___fladd^(0+128),w
 20952  13EE  00AE               	movwf	(___fladd@a^(0+128)+1)
 20953  13EF  082B               	movf	(___fladd@b^(0+128)+2),w
 20954  13F0  00B1               	movwf	??___fladd^(0+128)
 20955  13F1  0831               	movf	??___fladd^(0+128),w
 20956  13F2  00C0               	movwf	___fladd@grs^(0+128)
 20957  13F3  082F               	movf	(___fladd@a^(0+128)+2),w
 20958  13F4  00B1               	movwf	??___fladd^(0+128)
 20959  13F5  0831               	movf	??___fladd^(0+128),w
 20960  13F6  00AB               	movwf	(___fladd@b^(0+128)+2)
 20961  13F7  0840               	movf	___fladd@grs^(0+128),w
 20962  13F8  00B1               	movwf	??___fladd^(0+128)
 20963  13F9  0831               	movf	??___fladd^(0+128),w
 20964  13FA  00AF               	movwf	(___fladd@a^(0+128)+2)
 20965  13FB  082C               	movf	(___fladd@b^(0+128)+3),w
 20966  13FC  00B1               	movwf	??___fladd^(0+128)
 20967  13FD  0831               	movf	??___fladd^(0+128),w
 20968  13FE  00C0               	movwf	___fladd@grs^(0+128)
 20969  13FF  0830               	movf	(___fladd@a^(0+128)+3),w
 20970  1400  00B1               	movwf	??___fladd^(0+128)
 20971  1401  0831               	movf	??___fladd^(0+128),w
 20972  1402  00AC               	movwf	(___fladd@b^(0+128)+3)
 20973  1403  0840               	movf	___fladd@grs^(0+128),w
 20974  1404  00B1               	movwf	??___fladd^(0+128)
 20975  1405  0831               	movf	??___fladd^(0+128),w
 20976  1406  00B0               	movwf	(___fladd@a^(0+128)+3)
 20977  1407                     l4380:	
 20978  1407  01C0               	clrf	___fladd@grs^(0+128)
 20979  1408  083F               	movf	___fladd@bexp^(0+128),w
 20980  1409  00B1               	movwf	??___fladd^(0+128)
 20981  140A  01B2               	clrf	(??___fladd^(0+128)+1)
 20982  140B  09B1               	comf	??___fladd^(0+128),f
 20983  140C  09B2               	comf	(??___fladd^(0+128)+1),f
 20984  140D  0AB1               	incf	??___fladd^(0+128),f
 20985  140E  1903               	skipnz
 20986  140F  0AB2               	incf	(??___fladd^(0+128)+1),f
 20987  1410  083E               	movf	___fladd@aexp^(0+128),w
 20988  1411  0731               	addwf	??___fladd^(0+128),w
 20989  1412  00B3               	movwf	(??___fladd+2)^(0+128)
 20990  1413  0832               	movf	(??___fladd+1)^(0+128),w
 20991  1414  1803               	skipnc
 20992  1415  0A32               	incf	(??___fladd+1)^(0+128),w
 20993  1416  00B4               	movwf	((??___fladd+2)^(0+128)+1)
 20994  1417  0834               	movf	(??___fladd+3)^(0+128),w
 20995  1418  3A80               	xorlw	128
 20996  1419  00B5               	movwf	(??___fladd+4)^(0+128)
 20997  141A  3080               	movlw	128
 20998  141B  0235               	subwf	(??___fladd+4)^(0+128),w
 20999  141C  1D03               	skipz
 21000  141D  2C20               	goto	u4585
 21001  141E  301A               	movlw	26
 21002  141F  0233               	subwf	(??___fladd+2)^(0+128),w
 21003  1420                     u4585:	
 21004  1420  1C03               	skipc
 21005  1421  2C54               	goto	l4398
 21006  1422  0021               	movlb	1	; select bank1
 21007  1423  082C               	movf	(___fladd@b+3)^(0+128),w
 21008  1424  042B               	iorwf	(___fladd@b+2)^(0+128),w
 21009  1425  042A               	iorwf	(___fladd@b+1)^(0+128),w
 21010  1426  0429               	iorwf	___fladd@b^(0+128),w
 21011  1427  1903               	btfsc	3,2
 21012  1428  2C2B               	goto	u4590
 21013  1429  3001               	movlw	1
 21014  142A  2C2C               	goto	u4600
 21015  142B                     u4590:	
 21016  142B  3000               	movlw	0
 21017  142C                     u4600:	
 21018  142C  00B1               	movwf	??___fladd^(0+128)
 21019  142D  0831               	movf	??___fladd^(0+128),w
 21020  142E  00C0               	movwf	___fladd@grs^(0+128)
 21021  142F  3000               	movlw	0
 21022  1430  00AC               	movwf	(___fladd@b+3)^(0+128)
 21023  1431  3000               	movlw	0
 21024  1432  00AB               	movwf	(___fladd@b+2)^(0+128)
 21025  1433  3000               	movlw	0
 21026  1434  00AA               	movwf	(___fladd@b+1)^(0+128)
 21027  1435  3000               	movlw	0
 21028  1436  00A9               	movwf	___fladd@b^(0+128)
 21029  1437  083E               	movf	___fladd@aexp^(0+128),w
 21030  1438  00B1               	movwf	??___fladd^(0+128)
 21031  1439  0831               	movf	??___fladd^(0+128),w
 21032  143A  00BF               	movwf	___fladd@bexp^(0+128)
 21033  143B  2C59               	goto	l1300
 21034  143C                     l1302:	
 21035  143C  1C40               	btfss	___fladd@grs^(0+128),0
 21036  143D  2C44               	goto	l4388
 21037  143E  3640               	lsrf	___fladd@grs^(0+128),w
 21038  143F  3801               	iorlw	1
 21039  1440  00B1               	movwf	??___fladd^(0+128)
 21040  1441  0831               	movf	??___fladd^(0+128),w
 21041  1442  00C0               	movwf	___fladd@grs^(0+128)
 21042  1443  2C46               	goto	l4390
 21043  1444                     l4388:	
 21044  1444  1003               	clrc
 21045  1445  0CC0               	rrf	___fladd@grs^(0+128),f
 21046  1446                     l4390:	
 21047  1446  1829               	btfsc	___fladd@b^(0+128),0
 21048  1447  17C0               	bsf	___fladd@grs^(0+128),7
 21049  1448  3001               	movlw	1
 21050  1449  00B1               	movwf	??___fladd^(0+128)
 21051  144A                     u4635:	
 21052  144A  37AC               	asrf	(___fladd@b+3)^(0+128),f
 21053  144B  0CAB               	rrf	(___fladd@b+2)^(0+128),f
 21054  144C  0CAA               	rrf	(___fladd@b+1)^(0+128),f
 21055  144D  0CA9               	rrf	___fladd@b^(0+128),f
 21056  144E  0BB1               	decfsz	(??___fladd^(0+128))& (0+127),f
 21057  144F  2C4A               	goto	u4635
 21058  1450  3001               	movlw	1
 21059  1451  00B1               	movwf	??___fladd^(0+128)
 21060  1452  0831               	movf	??___fladd^(0+128),w
 21061  1453  07BF               	addwf	___fladd@bexp^(0+128),f
 21062  1454                     l4398:	
 21063  1454  0021               	movlb	1	; select bank1
 21064  1455  083E               	movf	___fladd@aexp^(0+128),w
 21065  1456  023F               	subwf	___fladd@bexp^(0+128),w
 21066  1457  1C03               	skipc
 21067  1458  2C3C               	goto	l1302
 21068  1459                     l1300:	
 21069  1459  1B3D               	btfsc	___fladd@signs^(0+128),6
 21070  145A  2C8C               	goto	l4424
 21071  145B  083F               	movf	___fladd@bexp^(0+128),w
 21072  145C  1D03               	btfss	3,2
 21073  145D  2C67               	goto	l4406
 21074  145E  3000               	movlw	0
 21075  145F  00AC               	movwf	(?___fladd+3)^(0+128)
 21076  1460  3000               	movlw	0
 21077  1461  00AB               	movwf	(?___fladd+2)^(0+128)
 21078  1462  3000               	movlw	0
 21079  1463  00AA               	movwf	(?___fladd+1)^(0+128)
 21080  1464  3000               	movlw	0
 21081  1465  00A9               	movwf	?___fladd^(0+128)
 21082  1466  0008               	return
 21083  1467                     l4406:	
 21084  1467  082D               	movf	___fladd@a^(0+128),w
 21085  1468  07A9               	addwf	___fladd@b^(0+128),f
 21086  1469  082E               	movf	(___fladd@a+1)^(0+128),w
 21087  146A  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 21088  146B  082F               	movf	(___fladd@a+2)^(0+128),w
 21089  146C  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 21090  146D  0830               	movf	(___fladd@a+3)^(0+128),w
 21091  146E  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 21092  146F  1C2C               	btfss	(___fladd@b+3)^(0+128),0
 21093  1470  2D19               	goto	l4458
 21094  1471  1C40               	btfss	___fladd@grs^(0+128),0
 21095  1472  2C7B               	goto	l4414
 21096  1473  1003               	clrc
 21097  1474  0CC0               	rrf	___fladd@grs^(0+128),f
 21098  1475  0840               	movf	___fladd@grs^(0+128),w
 21099  1476  3801               	iorlw	1
 21100  1477  00B1               	movwf	??___fladd^(0+128)
 21101  1478  0831               	movf	??___fladd^(0+128),w
 21102  1479  00C0               	movwf	___fladd@grs^(0+128)
 21103  147A  2C7D               	goto	l4416
 21104  147B                     l4414:	
 21105  147B  1003               	clrc
 21106  147C  0CC0               	rrf	___fladd@grs^(0+128),f
 21107  147D                     l4416:	
 21108  147D  1829               	btfsc	___fladd@b^(0+128),0
 21109  147E  17C0               	bsf	___fladd@grs^(0+128),7
 21110  147F  3001               	movlw	1
 21111  1480  00B1               	movwf	??___fladd^(0+128)
 21112  1481                     u4705:	
 21113  1481  37AC               	asrf	(___fladd@b+3)^(0+128),f
 21114  1482  0CAB               	rrf	(___fladd@b+2)^(0+128),f
 21115  1483  0CAA               	rrf	(___fladd@b+1)^(0+128),f
 21116  1484  0CA9               	rrf	___fladd@b^(0+128),f
 21117  1485  0BB1               	decfsz	(??___fladd^(0+128))& (0+127),f
 21118  1486  2C81               	goto	u4705
 21119  1487  3001               	movlw	1
 21120  1488  00B1               	movwf	??___fladd^(0+128)
 21121  1489  0831               	movf	??___fladd^(0+128),w
 21122  148A  07BF               	addwf	___fladd@bexp^(0+128),f
 21123  148B  2D19               	goto	l4458
 21124  148C                     l4424:	
 21125  148C  082C               	movf	(___fladd@b+3)^(0+128),w
 21126  148D  3A80               	xorlw	128
 21127  148E  00B1               	movwf	??___fladd^(0+128)
 21128  148F  0830               	movf	(___fladd@a+3)^(0+128),w
 21129  1490  3A80               	xorlw	128
 21130  1491  0231               	subwf	??___fladd^(0+128),w
 21131  1492  1D03               	skipz
 21132  1493  2C9E               	goto	u4713
 21133  1494  082F               	movf	(___fladd@a+2)^(0+128),w
 21134  1495  022B               	subwf	(___fladd@b+2)^(0+128),w
 21135  1496  1D03               	skipz
 21136  1497  2C9E               	goto	u4713
 21137  1498  082E               	movf	(___fladd@a+1)^(0+128),w
 21138  1499  022A               	subwf	(___fladd@b+1)^(0+128),w
 21139  149A  1D03               	skipz
 21140  149B  2C9E               	goto	u4713
 21141  149C  082D               	movf	___fladd@a^(0+128),w
 21142  149D  0229               	subwf	___fladd@b^(0+128),w
 21143  149E                     u4713:	
 21144  149E  1803               	skipnc
 21145  149F  2CE9               	goto	l4434
 21146  14A0  30FF               	movlw	255
 21147  14A1  00B1               	movwf	??___fladd^(0+128)
 21148  14A2  30FF               	movlw	255
 21149  14A3  00B2               	movwf	(??___fladd^(0+128)+1)
 21150  14A4  30FF               	movlw	255
 21151  14A5  00B3               	movwf	(??___fladd^(0+128)+2)
 21152  14A6  30FF               	movlw	255
 21153  14A7  00B4               	movwf	(??___fladd^(0+128)+3)
 21154  14A8  082D               	movf	___fladd@a^(0+128),w
 21155  14A9  00B5               	movwf	(??___fladd+4)^(0+128)
 21156  14AA  082E               	movf	(___fladd@a+1)^(0+128),w
 21157  14AB  00B6               	movwf	((??___fladd+4)^(0+128)+1)
 21158  14AC  082F               	movf	(___fladd@a+2)^(0+128),w
 21159  14AD  00B7               	movwf	((??___fladd+4)^(0+128)+2)
 21160  14AE  0830               	movf	(___fladd@a+3)^(0+128),w
 21161  14AF  00B8               	movwf	((??___fladd+4)^(0+128)+3)
 21162  14B0  0929               	comf	___fladd@b^(0+128),w
 21163  14B1  00B9               	movwf	(??___fladd+8)^(0+128)
 21164  14B2  092A               	comf	(___fladd@b+1)^(0+128),w
 21165  14B3  00BA               	movwf	((??___fladd+8)^(0+128)+1)
 21166  14B4  092B               	comf	(___fladd@b+2)^(0+128),w
 21167  14B5  00BB               	movwf	((??___fladd+8)^(0+128)+2)
 21168  14B6  092C               	comf	(___fladd@b+3)^(0+128),w
 21169  14B7  00BC               	movwf	((??___fladd+8)^(0+128)+3)
 21170  14B8  0AB9               	incf	(??___fladd+8)^(0+128),f
 21171  14B9  1903               	skipnz
 21172  14BA  0ABA               	incf	((??___fladd+8)^(0+128)+1),f
 21173  14BB  1903               	skipnz
 21174  14BC  0ABB               	incf	((??___fladd+8)^(0+128)+2),f
 21175  14BD  1903               	skipnz
 21176  14BE  0ABC               	incf	((??___fladd+8)^(0+128)+3),f
 21177  14BF  0839               	movf	(??___fladd+8)^(0+128),w
 21178  14C0  07B5               	addwf	(??___fladd+4)^(0+128),f
 21179  14C1  083A               	movf	(??___fladd+9)^(0+128),w
 21180  14C2  3DB6               	addwfc	((??___fladd+4)^(0+128)+1),f
 21181  14C3  083B               	movf	(??___fladd+10)^(0+128),w
 21182  14C4  3DB7               	addwfc	((??___fladd+4)^(0+128)+2),f
 21183  14C5  083C               	movf	(??___fladd+11)^(0+128),w
 21184  14C6  3DB8               	addwfc	((??___fladd+4)^(0+128)+3),f
 21185  14C7  0835               	movf	(??___fladd+4)^(0+128),w
 21186  14C8  07B1               	addwf	??___fladd^(0+128),f
 21187  14C9  0836               	movf	(??___fladd+5)^(0+128),w
 21188  14CA  3DB2               	addwfc	(??___fladd^(0+128)+1),f
 21189  14CB  0837               	movf	(??___fladd+6)^(0+128),w
 21190  14CC  3DB3               	addwfc	(??___fladd^(0+128)+2),f
 21191  14CD  0838               	movf	(??___fladd+7)^(0+128),w
 21192  14CE  3DB4               	addwfc	(??___fladd^(0+128)+3),f
 21193  14CF  0834               	movf	(??___fladd+3)^(0+128),w
 21194  14D0  00AC               	movwf	(___fladd@b+3)^(0+128)
 21195  14D1  0833               	movf	(??___fladd+2)^(0+128),w
 21196  14D2  00AB               	movwf	(___fladd@b+2)^(0+128)
 21197  14D3  0832               	movf	(??___fladd+1)^(0+128),w
 21198  14D4  00AA               	movwf	(___fladd@b+1)^(0+128)
 21199  14D5  0831               	movf	??___fladd^(0+128),w
 21200  14D6  00A9               	movwf	___fladd@b^(0+128)
 21201  14D7  3080               	movlw	128
 21202  14D8  00B1               	movwf	??___fladd^(0+128)
 21203  14D9  0831               	movf	??___fladd^(0+128),w
 21204  14DA  06BD               	xorwf	___fladd@signs^(0+128),f
 21205  14DB  09C0               	comf	___fladd@grs^(0+128),f
 21206  14DC  0AC0               	incf	___fladd@grs^(0+128),f
 21207  14DD  0840               	movf	___fladd@grs^(0+128),w
 21208  14DE  1D03               	btfss	3,2
 21209  14DF  2CF1               	goto	l1317
 21210  14E0  3001               	movlw	1
 21211  14E1  07A9               	addwf	___fladd@b^(0+128),f
 21212  14E2  3000               	movlw	0
 21213  14E3  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 21214  14E4  3000               	movlw	0
 21215  14E5  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 21216  14E6  3000               	movlw	0
 21217  14E7  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 21218  14E8  2CF1               	goto	l1317
 21219  14E9                     l4434:	
 21220  14E9  082D               	movf	___fladd@a^(0+128),w
 21221  14EA  02A9               	subwf	___fladd@b^(0+128),f
 21222  14EB  082E               	movf	(___fladd@a+1)^(0+128),w
 21223  14EC  3BAA               	subwfb	(___fladd@b+1)^(0+128),f
 21224  14ED  082F               	movf	(___fladd@a+2)^(0+128),w
 21225  14EE  3BAB               	subwfb	(___fladd@b+2)^(0+128),f
 21226  14EF  0830               	movf	(___fladd@a+3)^(0+128),w
 21227  14F0  3BAC               	subwfb	(___fladd@b+3)^(0+128),f
 21228  14F1                     l1317:	
 21229  14F1  082C               	movf	(___fladd@b+3)^(0+128),w
 21230  14F2  042B               	iorwf	(___fladd@b+2)^(0+128),w
 21231  14F3  042A               	iorwf	(___fladd@b+1)^(0+128),w
 21232  14F4  0429               	iorwf	___fladd@b^(0+128),w
 21233  14F5  1D03               	skipz
 21234  14F6  2D17               	goto	l4456
 21235  14F7  0840               	movf	___fladd@grs^(0+128),w
 21236  14F8  1D03               	btfss	3,2
 21237  14F9  2D17               	goto	l4456
 21238  14FA  3000               	movlw	0
 21239  14FB  00AC               	movwf	(?___fladd+3)^(0+128)
 21240  14FC  3000               	movlw	0
 21241  14FD  00AB               	movwf	(?___fladd+2)^(0+128)
 21242  14FE  3000               	movlw	0
 21243  14FF  00AA               	movwf	(?___fladd+1)^(0+128)
 21244  1500  3000               	movlw	0
 21245  1501  00A9               	movwf	?___fladd^(0+128)
 21246  1502  0008               	return
 21247  1503                     l4442:	
 21248  1503  3001               	movlw	1
 21249  1504                     u4755:	
 21250  1504  35A9               	lslf	___fladd@b^(0+128),f
 21251  1505  0DAA               	rlf	(___fladd@b+1)^(0+128),f
 21252  1506  0DAB               	rlf	(___fladd@b+2)^(0+128),f
 21253  1507  0DAC               	rlf	(___fladd@b+3)^(0+128),f
 21254  1508  0B89               	decfsz	9,f
 21255  1509  2D04               	goto	u4755
 21256  150A  1BC0               	btfsc	___fladd@grs^(0+128),7
 21257  150B  1429               	bsf	___fladd@b^(0+128),0
 21258  150C  1C40               	btfss	___fladd@grs^(0+128),0
 21259  150D  2D10               	goto	l4450
 21260  150E  1403               	setc
 21261  150F  2D11               	goto	L16
 21262  1510                     l4450:	
 21263  1510  1003               	clrc
 21264  1511                     L16:	
 21265  1511  0DC0               	rlf	___fladd@grs^(0+128),f
 21266  1512  083F               	movf	___fladd@bexp^(0+128),w
 21267  1513  1903               	btfsc	3,2
 21268  1514  2D17               	goto	l4456
 21269  1515  3001               	movlw	1
 21270  1516  02BF               	subwf	___fladd@bexp^(0+128),f
 21271  1517                     l4456:	
 21272  1517  1FAB               	btfss	(___fladd@b+2)^(0+128),7
 21273  1518  2D03               	goto	l4442
 21274  1519                     l4458:	
 21275  1519  01BE               	clrf	___fladd@aexp^(0+128)
 21276  151A  1FC0               	btfss	___fladd@grs^(0+128),7
 21277  151B  2D24               	goto	l4468
 21278  151C  0840               	movf	___fladd@grs^(0+128),w
 21279  151D  397F               	andlw	127
 21280  151E  1D03               	btfss	3,2
 21281  151F  2D22               	goto	l4466
 21282  1520  1C29               	btfss	___fladd@b^(0+128),0
 21283  1521  2D24               	goto	l4468
 21284  1522                     l4466:	
 21285  1522  01BE               	clrf	___fladd@aexp^(0+128)
 21286  1523  0ABE               	incf	___fladd@aexp^(0+128),f
 21287  1524                     l4468:	
 21288  1524  083E               	movf	___fladd@aexp^(0+128),w
 21289  1525  1903               	btfsc	3,2
 21290  1526  2D50               	goto	l1330
 21291  1527  3001               	movlw	1
 21292  1528  07A9               	addwf	___fladd@b^(0+128),f
 21293  1529  3000               	movlw	0
 21294  152A  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 21295  152B  3000               	movlw	0
 21296  152C  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 21297  152D  3000               	movlw	0
 21298  152E  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 21299  152F  1C2C               	btfss	(___fladd@b+3)^(0+128),0
 21300  1530  2D50               	goto	l1330
 21301  1531  0829               	movf	___fladd@b^(0+128),w
 21302  1532  00B1               	movwf	??___fladd^(0+128)
 21303  1533  082A               	movf	(___fladd@b+1)^(0+128),w
 21304  1534  00B2               	movwf	(??___fladd^(0+128)+1)
 21305  1535  082B               	movf	(___fladd@b+2)^(0+128),w
 21306  1536  00B3               	movwf	(??___fladd^(0+128)+2)
 21307  1537  082C               	movf	(___fladd@b+3)^(0+128),w
 21308  1538  00B4               	movwf	(??___fladd^(0+128)+3)
 21309  1539  3001               	movlw	1
 21310  153A  00B5               	movwf	(??___fladd+4)^(0+128)
 21311  153B                     u4855:	
 21312  153B  37B4               	asrf	(??___fladd^(0+128)+3),f
 21313  153C  0CB3               	rrf	(??___fladd^(0+128)+2),f
 21314  153D  0CB2               	rrf	(??___fladd^(0+128)+1),f
 21315  153E  0CB1               	rrf	??___fladd^(0+128),f
 21316  153F  0BB5               	decfsz	(??___fladd+4)^(0+128),f
 21317  1540  2D3B               	goto	u4855
 21318  1541  0834               	movf	(??___fladd+3)^(0+128),w
 21319  1542  00AC               	movwf	(___fladd@b+3)^(0+128)
 21320  1543  0833               	movf	(??___fladd+2)^(0+128),w
 21321  1544  00AB               	movwf	(___fladd@b+2)^(0+128)
 21322  1545  0832               	movf	(??___fladd+1)^(0+128),w
 21323  1546  00AA               	movwf	(___fladd@b+1)^(0+128)
 21324  1547  0831               	movf	??___fladd^(0+128),w
 21325  1548  00A9               	movwf	___fladd@b^(0+128)
 21326  1549  0A3F               	incf	___fladd@bexp^(0+128),w
 21327  154A  1903               	btfsc	3,2
 21328  154B  2D50               	goto	l1330
 21329  154C  3001               	movlw	1
 21330  154D  00B1               	movwf	??___fladd^(0+128)
 21331  154E  0831               	movf	??___fladd^(0+128),w
 21332  154F  07BF               	addwf	___fladd@bexp^(0+128),f
 21333  1550                     l1330:	
 21334  1550  0A3F               	incf	___fladd@bexp^(0+128),w
 21335  1551  1D03               	btfss	3,2
 21336  1552  083F               	movf	___fladd@bexp^(0+128),w
 21337  1553  1D03               	btfss	3,2
 21338  1554  2D60               	goto	l4486
 21339  1555  3000               	movlw	0
 21340  1556  00AC               	movwf	(___fladd@b+3)^(0+128)
 21341  1557  3000               	movlw	0
 21342  1558  00AB               	movwf	(___fladd@b+2)^(0+128)
 21343  1559  3000               	movlw	0
 21344  155A  00AA               	movwf	(___fladd@b+1)^(0+128)
 21345  155B  3000               	movlw	0
 21346  155C  00A9               	movwf	___fladd@b^(0+128)
 21347  155D  083F               	movf	___fladd@bexp^(0+128),w
 21348  155E  1903               	btfsc	3,2
 21349  155F  01BD               	clrf	___fladd@signs^(0+128)
 21350  1560                     l4486:	
 21351  1560  1C3F               	btfss	___fladd@bexp^(0+128),0
 21352  1561  2D64               	goto	l4490
 21353  1562  17AB               	bsf	(___fladd@b^(0+128)+2),7
 21354  1563  2D68               	goto	l1338
 21355  1564                     l4490:	
 21356  1564  307F               	movlw	127
 21357  1565  00B1               	movwf	??___fladd^(0+128)
 21358  1566  0831               	movf	??___fladd^(0+128),w
 21359  1567  05AB               	andwf	(___fladd@b^(0+128)+2),f
 21360  1568                     l1338:	
 21361  1568  363F               	lsrf	___fladd@bexp^(0+128),w
 21362  1569  00B1               	movwf	??___fladd^(0+128)
 21363  156A  0831               	movf	??___fladd^(0+128),w
 21364  156B  00AC               	movwf	(___fladd@b^(0+128)+3)
 21365  156C  1FBD               	btfss	___fladd@signs^(0+128),7
 21366  156D  0008               	return
 21367  156E  17AC               	bsf	(___fladd@b^(0+128)+3),7
 21368  156F  0008               	return
 21369  1570                     __end_of___fladd:	
 21370                           
 21371                           	psect	intentry
 21372  0004                     __pintentry:	
 21373 ;; *************** function _ISR *****************
 21374 ;; Defined at:
 21375 ;;		line 181 in file "main.c"
 21376 ;; Parameters:    Size  Location     Type
 21377 ;;		None
 21378 ;; Auto vars:     Size  Location     Type
 21379 ;;		None
 21380 ;; Return value:  Size  Location     Type
 21381 ;;                  1    wreg      void 
 21382 ;; Registers used:
 21383 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21384 ;; Tracked objects:
 21385 ;;		On entry : 0/0
 21386 ;;		On exit  : 0/0
 21387 ;;		Unchanged: 0/0
 21388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21391 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21392 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21393 ;;Total ram usage:        3 bytes
 21394 ;; Hardware stack levels used:    1
 21395 ;; Hardware stack levels required when called:    1
 21396 ;; This function calls:
 21397 ;;		_uartDisable
 21398 ;; This function is called by:
 21399 ;;		Interrupt level 1
 21400 ;; This function uses a non-reentrant model
 21401 ;;
 21402                           
 21403  0004                     _ISR:	
 21404                           
 21405                           ;incstack = 0
 21406  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 21407                           
 21408                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21409  0005  3180               	pagesel	$
 21410  0006  0020               	movlb	0	; select bank0
 21411  0007  087F               	movf	127,w
 21412  0008  00F2               	movwf	??_ISR+2
 21413                           
 21414                           ;main.c: 183: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 21415  0009  190B               	btfsc	11,2	;volatile
 21416  000A  1E8B               	btfss	11,5	;volatile
 21417  000B  283B               	goto	i1l6320
 21418                           
 21419                           ;main.c: 184: k ++;
 21420  000C  3001               	movlw	1
 21421  000D  0025               	movlb	5	; select bank5
 21422  000E  07BD               	addwf	_k^(0+640),f
 21423  000F  3000               	movlw	0
 21424  0010  3DBE               	addwfc	(_k+1)^(0+640),f
 21425                           
 21426                           ;main.c: 185: if(k >= 3){
 21427  0011  083E               	movf	(_k+1)^(0+640),w
 21428  0012  3A80               	xorlw	128
 21429  0013  00F0               	movwf	??_ISR
 21430  0014  3080               	movlw	128
 21431  0015  0270               	subwf	??_ISR,w
 21432  0016  1D03               	skipz
 21433  0017  281A               	goto	u791_25
 21434  0018  3003               	movlw	3
 21435  0019  023D               	subwf	_k^(0+640),w
 21436  001A                     u791_25:	
 21437  001A  1C03               	skipc
 21438  001B  2827               	goto	i1l6312
 21439                           
 21440                           ;main.c: 186: currentBool = 1;
 21441  001C  3001               	movlw	1
 21442  001D  0025               	movlb	5	; select bank5
 21443  001E  00B7               	movwf	_currentBool^(0+640)
 21444  001F  3000               	movlw	0
 21445  0020  00B8               	movwf	(_currentBool^(0+640)+1)
 21446                           
 21447                           ;main.c: 187: k=0;
 21448  0021  01BD               	clrf	_k^(0+640)
 21449  0022  01BE               	clrf	(_k+1)^(0+640)
 21450                           
 21451                           ;main.c: 188: j++;
 21452  0023  3001               	movlw	1
 21453  0024  07BF               	addwf	_j^(0+640),f
 21454  0025  3000               	movlw	0
 21455  0026  3DC0               	addwfc	(_j+1)^(0+640),f
 21456  0027                     i1l6312:	
 21457                           
 21458                           ;main.c: 189: }
 21459                           ;main.c: 191: if(j>=10000){
 21460  0027  0025               	movlb	5	; select bank5
 21461  0028  0840               	movf	(_j+1)^(0+640),w
 21462  0029  3A80               	xorlw	128
 21463  002A  00F0               	movwf	??_ISR
 21464  002B  30A7               	movlw	167
 21465  002C  0270               	subwf	??_ISR,w
 21466  002D  1D03               	skipz
 21467  002E  2831               	goto	u792_25
 21468  002F  3010               	movlw	16
 21469  0030  023F               	subwf	_j^(0+640),w
 21470  0031                     u792_25:	
 21471  0031  1C03               	skipc
 21472  0032  283A               	goto	i1l6318
 21473                           
 21474                           ;main.c: 192: uartBool = 1;
 21475  0033  3001               	movlw	1
 21476  0034  0025               	movlb	5	; select bank5
 21477  0035  00B9               	movwf	_uartBool^(0+640)
 21478  0036  3000               	movlw	0
 21479  0037  00BA               	movwf	(_uartBool^(0+640)+1)
 21480                           
 21481                           ;main.c: 193: j = 0;
 21482  0038  01BF               	clrf	_j^(0+640)
 21483  0039  01C0               	clrf	(_j+1)^(0+640)
 21484  003A                     i1l6318:	
 21485                           
 21486                           ;main.c: 194: }
 21487                           ;main.c: 195: INTCONbits.TMR0IF = 0;
 21488  003A  110B               	bcf	11,2	;volatile
 21489  003B                     i1l6320:	
 21490                           
 21491                           ;main.c: 196: }
 21492                           ;main.c: 198: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 21493  003B  0021               	movlb	1	; select bank1
 21494  003C  1C91               	btfss	17,1	;volatile
 21495  003D  2848               	goto	i1l6328
 21496  003E  0020               	movlb	0	; select bank0
 21497  003F  1C91               	btfss	17,1	;volatile
 21498  0040  2848               	goto	i1l6328
 21499                           
 21500                           ;main.c: 199: currentBool = 1;
 21501  0041  3001               	movlw	1
 21502  0042  0025               	movlb	5	; select bank5
 21503  0043  00B7               	movwf	_currentBool^(0+640)
 21504  0044  3000               	movlw	0
 21505  0045  00B8               	movwf	(_currentBool^(0+640)+1)
 21506                           
 21507                           ;main.c: 200: PIR1bits.TMR2IF = 0;
 21508  0046  0020               	movlb	0	; select bank0
 21509  0047  1091               	bcf	17,1	;volatile
 21510  0048                     i1l6328:	
 21511                           
 21512                           ;main.c: 201: }
 21513                           ;main.c: 203: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 21514  0048  0020               	movlb	0	; select bank0
 21515  0049  1E11               	btfss	17,4	;volatile
 21516  004A  2874               	goto	i1l6342
 21517  004B  0021               	movlb	1	; select bank1
 21518  004C  1E11               	btfss	17,4	;volatile
 21519  004D  2874               	goto	i1l6342
 21520                           
 21521                           ;main.c: 204: if(str[z] != '\0'){
 21522  004E  30FC               	movlw	252
 21523  004F  00F0               	movwf	??_ISR
 21524  0050  3025               	movlw	37
 21525  0051  00F1               	movwf	??_ISR+1
 21526  0052  0025               	movlb	5	; select bank5
 21527  0053  083B               	movf	_z^(0+640),w
 21528  0054  0770               	addwf	??_ISR,w
 21529  0055  0086               	movwf	6
 21530  0056  083C               	movf	(_z+1)^(0+640),w
 21531  0057  3D71               	addwfc	??_ISR+1,w
 21532  0058  0087               	movwf	7
 21533  0059  0801               	movf	1,w
 21534  005A  1903               	btfsc	3,2
 21535  005B  286F               	goto	i1l6338
 21536                           
 21537                           ;main.c: 205: TXREG = str[z];
 21538  005C  30FC               	movlw	252
 21539  005D  00F0               	movwf	??_ISR
 21540  005E  3025               	movlw	37
 21541  005F  00F1               	movwf	??_ISR+1
 21542  0060  083B               	movf	_z^(0+640),w
 21543  0061  0770               	addwf	??_ISR,w
 21544  0062  0086               	movwf	6
 21545  0063  083C               	movf	(_z+1)^(0+640),w
 21546  0064  3D71               	addwfc	??_ISR+1,w
 21547  0065  0087               	movwf	7
 21548  0066  0801               	movf	1,w
 21549  0067  0023               	movlb	3	; select bank3
 21550  0068  009A               	movwf	26	;volatile
 21551                           
 21552                           ;main.c: 206: z++;
 21553  0069  3001               	movlw	1
 21554  006A  0025               	movlb	5	; select bank5
 21555  006B  07BB               	addwf	_z^(0+640),f
 21556  006C  3000               	movlw	0
 21557  006D  3DBC               	addwfc	(_z+1)^(0+640),f
 21558                           
 21559                           ;main.c: 207: }else{
 21560  006E  2874               	goto	i1l6342
 21561  006F                     i1l6338:	
 21562                           
 21563                           ;main.c: 208: z = 0;
 21564  006F  01BB               	clrf	_z^(0+640)
 21565  0070  01BC               	clrf	(_z+1)^(0+640)
 21566                           
 21567                           ;main.c: 209: uartDisable();
 21568  0071  31B5  25DB  3180   	fcall	_uartDisable
 21569  0074                     i1l6342:	
 21570                           
 21571                           ;main.c: 210: }
 21572                           ;main.c: 211: }
 21573                           ;main.c: 213: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 21574  0074  0020               	movlb	0	; select bank0
 21575  0075  1D91               	btfss	17,3	;volatile
 21576  0076  287C               	goto	i1l134
 21577  0077  0021               	movlb	1	; select bank1
 21578  0078  1D91               	btfss	17,3	;volatile
 21579  0079  287C               	goto	i1l134
 21580                           
 21581                           ;main.c: 214: PIR1bits.SSP1IF = 0;
 21582  007A  0020               	movlb	0	; select bank0
 21583  007B  1191               	bcf	17,3	;volatile
 21584  007C                     i1l134:	
 21585  007C  0872               	movf	??_ISR+2,w
 21586  007D  0020               	movlb	0	; select bank0
 21587  007E  00FF               	movwf	127
 21588  007F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 21589  0080  0009               	retfie
 21590  0081                     __end_of_ISR:	
 21591                           
 21592                           	psect	text61
 21593  35DB                     __ptext61:	
 21594 ;; *************** function _uartDisable *****************
 21595 ;; Defined at:
 21596 ;;		line 85 in file "uart.c"
 21597 ;; Parameters:    Size  Location     Type
 21598 ;;		None
 21599 ;; Auto vars:     Size  Location     Type
 21600 ;;		None
 21601 ;; Return value:  Size  Location     Type
 21602 ;;                  1    wreg      void 
 21603 ;; Registers used:
 21604 ;;		None
 21605 ;; Tracked objects:
 21606 ;;		On entry : 0/0
 21607 ;;		On exit  : 0/0
 21608 ;;		Unchanged: 0/0
 21609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21614 ;;Total ram usage:        0 bytes
 21615 ;; Hardware stack levels used:    1
 21616 ;; This function calls:
 21617 ;;		Nothing
 21618 ;; This function is called by:
 21619 ;;		_ISR
 21620 ;; This function uses a non-reentrant model
 21621 ;;
 21622                           
 21623                           
 21624                           ;psect for function _uartDisable
 21625  35DB                     _uartDisable:	
 21626                           
 21627                           ;uart.c: 86: PIE1bits.TXIE = 0;
 21628                           
 21629                           ;incstack = 0
 21630                           ; Regs used in _uartDisable: []
 21631  35DB  0021               	movlb	1	; select bank1
 21632  35DC  1211               	bcf	17,4	;volatile
 21633  35DD  0008               	return
 21634  35DE                     __end_of_uartDisable:	
 21635  007E                     btemp	set	126	;btemp
 21636  007E                     int$flags	set	126
 21637  007E                     wtemp0	set	126
 21638  25FC                     
 21639                           	psect	text8_split_1
 21640  23A2                     l7560:	
 21641                           
 21642                           ;doprnt.c: 1341: else if(prec < c)
 21643  23A2  0022               	movlb	2	; select bank2
 21644  23A3  083B               	movf	sprintf@c^(0+256),w
 21645  23A4  0021               	movlb	1	; select bank1
 21646  23A5  00DD               	movwf	??_sprintf^(0+128)
 21647  23A6  01DE               	clrf	(??_sprintf^(0+128)+1)
 21648  23A7  1BDD               	btfsc	??_sprintf^(0+128),7
 21649  23A8  03DE               	decf	(??_sprintf^(0+128)+1),f
 21650  23A9  0022               	movlb	2	; select bank2
 21651  23AA  083A               	movf	(sprintf@prec+1)^(0+256),w
 21652  23AB  3A80               	xorlw	128
 21653  23AC  0021               	movlb	1	; select bank1
 21654  23AD  00DF               	movwf	(??_sprintf+2)^(0+128)
 21655  23AE  085E               	movf	(??_sprintf+1)^(0+128),w
 21656  23AF  3A80               	xorlw	128
 21657  23B0  025F               	subwf	(??_sprintf+2)^(0+128),w
 21658  23B1  1D03               	skipz
 21659  23B2  2BB6               	goto	u9825
 21660  23B3  085D               	movf	??_sprintf^(0+128),w
 21661  23B4  0022               	movlb	2	; select bank2
 21662  23B5  0239               	subwf	sprintf@prec^(0+256),w
 21663  23B6                     u9825:	
 21664  23B6  1803               	skipnc
 21665  23B7  2BBE               	goto	l911
 21666                           
 21667                           ;doprnt.c: 1342: prec = c;
 21668  23B8  0022               	movlb	2	; select bank2
 21669  23B9  083B               	movf	sprintf@c^(0+256),w
 21670  23BA  00B9               	movwf	sprintf@prec^(0+256)
 21671  23BB  01BA               	clrf	(sprintf@prec+1)^(0+256)
 21672  23BC  1BB9               	btfsc	sprintf@prec^(0+256),7
 21673  23BD  03BA               	decf	(sprintf@prec+1)^(0+256),f
 21674  23BE                     l911:	
 21675                           
 21676                           ;doprnt.c: 1345: if(width && flag & 0x03)
 21677  23BE  0022               	movlb	2	; select bank2
 21678  23BF  0833               	movf	sprintf@width^(0+256),w
 21679  23C0  0434               	iorwf	(sprintf@width+1)^(0+256),w
 21680  23C1  1903               	btfsc	3,2
 21681  23C2  2BD5               	goto	l7568
 21682  23C3  3003               	movlw	3
 21683  23C4  0531               	andwf	sprintf@flag^(0+256),w
 21684  23C5  0021               	movlb	1	; select bank1
 21685  23C6  00DD               	movwf	??_sprintf^(0+128)
 21686  23C7  3000               	movlw	0
 21687  23C8  0022               	movlb	2	; select bank2
 21688  23C9  0532               	andwf	(sprintf@flag+1)^(0+256),w
 21689  23CA  0021               	movlb	1	; select bank1
 21690  23CB  00DE               	movwf	(??_sprintf+1)^(0+128)
 21691  23CC  085D               	movf	??_sprintf^(0+128),w
 21692  23CD  045E               	iorwf	(??_sprintf^(0+128)+1),w
 21693  23CE  1903               	btfsc	3,2
 21694  23CF  2BD5               	goto	l7568
 21695                           
 21696                           ;doprnt.c: 1346: width--;
 21697  23D0  30FF               	movlw	255
 21698  23D1  0022               	movlb	2	; select bank2
 21699  23D2  07B3               	addwf	sprintf@width^(0+256),f
 21700  23D3  30FF               	movlw	255
 21701  23D4  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 21702  23D5                     l7568:	
 21703                           
 21704                           ;doprnt.c: 1348: if(flag & 0x4000) {
 21705  23D5  0022               	movlb	2	; select bank2
 21706  23D6  1F32               	btfss	(sprintf@flag+1)^(0+256),6
 21707  23D7  2BF1               	goto	l7576
 21708                           
 21709                           ;doprnt.c: 1349: if(width > prec)
 21710  23D8  083A               	movf	(sprintf@prec+1)^(0+256),w
 21711  23D9  3A80               	xorlw	128
 21712  23DA  0021               	movlb	1	; select bank1
 21713  23DB  00DD               	movwf	??_sprintf^(0+128)
 21714  23DC  0022               	movlb	2	; select bank2
 21715  23DD  0834               	movf	(sprintf@width+1)^(0+256),w
 21716  23DE  3A80               	xorlw	128
 21717  23DF  0021               	movlb	1	; select bank1
 21718  23E0  025D               	subwf	??_sprintf^(0+128),w
 21719  23E1  1D03               	skipz
 21720  23E2  2BE6               	goto	u9865
 21721  23E3  0022               	movlb	2	; select bank2
 21722  23E4  0833               	movf	sprintf@width^(0+256),w
 21723  23E5  0239               	subwf	sprintf@prec^(0+256),w
 21724  23E6                     u9865:	
 21725  23E6  1803               	skipnc
 21726  23E7  2BEE               	goto	l7574
 21727                           
 21728                           ;doprnt.c: 1350: width -= prec;
 21729  23E8  0022               	movlb	2	; select bank2
 21730  23E9  0839               	movf	sprintf@prec^(0+256),w
 21731  23EA  02B3               	subwf	sprintf@width^(0+256),f
 21732  23EB  083A               	movf	(sprintf@prec+1)^(0+256),w
 21733  23EC  3BB4               	subwfb	(sprintf@width+1)^(0+256),f
 21734  23ED  2BF1               	goto	l7576
 21735  23EE                     l7574:	
 21736                           
 21737                           ;doprnt.c: 1351: else
 21738                           ;doprnt.c: 1352: width = 0;
 21739  23EE  0022               	movlb	2	; select bank2
 21740  23EF  01B3               	clrf	sprintf@width^(0+256)
 21741  23F0  01B4               	clrf	(sprintf@width+1)^(0+256)
 21742  23F1                     l7576:	
 21743                           
 21744                           ;doprnt.c: 1353: }
 21745                           ;doprnt.c: 1381: if(width > c)
 21746  23F1  083B               	movf	sprintf@c^(0+256),w
 21747  23F2  0021               	movlb	1	; select bank1
 21748  23F3  00DD               	movwf	??_sprintf^(0+128)
 21749  23F4  01DE               	clrf	(??_sprintf^(0+128)+1)
 21750  23F5  1BDD               	btfsc	??_sprintf^(0+128),7
 21751  23F6  03DE               	decf	(??_sprintf^(0+128)+1),f
 21752  23F7  085E               	movf	(??_sprintf+1)^(0+128),w
 21753  23F8  3A80               	xorlw	128
 21754  23F9  00DF               	movwf	(??_sprintf+2)^(0+128)
 21755  23FA  0022               	movlb	2	; select bank2
 21756  23FB  0834               	movf	(sprintf@width+1)^(0+256),w
 21757  23FC  3A80               	xorlw	128
 21758  23FD  0021               	movlb	1	; select bank1
 21759  23FE  025F               	subwf	(??_sprintf+2)^(0+128),w
 21760  23FF  1D03               	skipz
 21761  2400  2C05               	goto	u9875
 21762  2401  0022               	movlb	2	; select bank2
 21763  2402  0833               	movf	sprintf@width^(0+256),w
 21764  2403  0021               	movlb	1	; select bank1
 21765  2404  025D               	subwf	??_sprintf^(0+128),w
 21766  2405                     u9875:	
 21767  2405  1803               	skipnc
 21768  2406  2C16               	goto	l7580
 21769                           
 21770                           ;doprnt.c: 1382: width -= c;
 21771  2407  0022               	movlb	2	; select bank2
 21772  2408  083B               	movf	sprintf@c^(0+256),w
 21773  2409  0021               	movlb	1	; select bank1
 21774  240A  00DD               	movwf	??_sprintf^(0+128)
 21775  240B  01DE               	clrf	(??_sprintf^(0+128)+1)
 21776  240C  1BDD               	btfsc	??_sprintf^(0+128),7
 21777  240D  03DE               	decf	(??_sprintf^(0+128)+1),f
 21778  240E  085D               	movf	??_sprintf^(0+128),w
 21779  240F  0022               	movlb	2	; select bank2
 21780  2410  02B3               	subwf	sprintf@width^(0+256),f
 21781  2411  0021               	movlb	1	; select bank1
 21782  2412  085E               	movf	(??_sprintf+1)^(0+128),w
 21783  2413  0022               	movlb	2	; select bank2
 21784  2414  3BB4               	subwfb	(sprintf@width+1)^(0+256),f
 21785  2415  2C19               	goto	l7582
 21786  2416                     l7580:	
 21787                           
 21788                           ;doprnt.c: 1383: else
 21789                           ;doprnt.c: 1384: width = 0;
 21790  2416  0022               	movlb	2	; select bank2
 21791  2417  01B3               	clrf	sprintf@width^(0+256)
 21792  2418  01B4               	clrf	(sprintf@width+1)^(0+256)
 21793  2419                     l7582:	
 21794                           
 21795                           ;doprnt.c: 1387: if(flag & 0x04) {
 21796  2419  1D31               	btfss	sprintf@flag^(0+256),2
 21797  241A  2C51               	goto	l7602
 21798                           
 21799                           ;doprnt.c: 1392: if(flag & 0x03)
 21800  241B  3003               	movlw	3
 21801  241C  0531               	andwf	sprintf@flag^(0+256),w
 21802  241D  0021               	movlb	1	; select bank1
 21803  241E  00DD               	movwf	??_sprintf^(0+128)
 21804  241F  3000               	movlw	0
 21805  2420  0022               	movlb	2	; select bank2
 21806  2421  0532               	andwf	(sprintf@flag+1)^(0+256),w
 21807  2422  0021               	movlb	1	; select bank1
 21808  2423  00DE               	movwf	(??_sprintf+1)^(0+128)
 21809  2424  085D               	movf	??_sprintf^(0+128),w
 21810  2425  045E               	iorwf	(??_sprintf^(0+128)+1),w
 21811  2426  1903               	btfsc	3,2
 21812  2427  2C37               	goto	l7592
 21813                           
 21814                           ;doprnt.c: 1393: ((*sp++ = ('-')),(++ccnt));
 21815  2428  0851               	movf	sprintf@sp^(0+128),w
 21816  2429  0086               	movwf	6
 21817  242A  0852               	movf	(sprintf@sp+1)^(0+128),w
 21818  242B  0087               	movwf	7
 21819  242C  302D               	movlw	45
 21820  242D  0081               	movwf	1
 21821  242E  3001               	movlw	1
 21822  242F  07D1               	addwf	sprintf@sp^(0+128),f
 21823  2430  3000               	movlw	0
 21824  2431  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 21825  2432  3001               	movlw	1
 21826  2433  0022               	movlb	2	; select bank2
 21827  2434  07A5               	addwf	sprintf@ccnt^(0+256),f
 21828  2435  3000               	movlw	0
 21829  2436  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 21830  2437                     l7592:	
 21831                           
 21832                           ;doprnt.c: 1415: if(width)
 21833  2437  0022               	movlb	2	; select bank2
 21834  2438                     L9:	
 21835  2438  0833               	movf	sprintf@width^(0+256),w
 21836  2439  0434               	iorwf	(sprintf@width+1)^(0+256),w
 21837  243A  1903               	btfsc	3,2
 21838  243B  2C89               	goto	l7628
 21839                           
 21840                           ;doprnt.c: 1417: ((*sp++ = ('0')),(++ccnt));
 21841                           
 21842                           ;doprnt.c: 1416: do
 21843  243C  0021               	movlb	1	; select bank1
 21844  243D  0851               	movf	sprintf@sp^(0+128),w
 21845  243E  0086               	movwf	6
 21846  243F  0852               	movf	(sprintf@sp+1)^(0+128),w
 21847  2440  0087               	movwf	7
 21848  2441  3030               	movlw	48
 21849  2442  0081               	movwf	1
 21850  2443  3001               	movlw	1
 21851  2444  07D1               	addwf	sprintf@sp^(0+128),f
 21852  2445  3000               	movlw	0
 21853  2446  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 21854  2447  3001               	movlw	1
 21855  2448  0022               	movlb	2	; select bank2
 21856  2449  07A5               	addwf	sprintf@ccnt^(0+256),f
 21857  244A  3000               	movlw	0
 21858  244B  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 21859                           
 21860                           ;doprnt.c: 1418: while(--width);
 21861  244C  30FF               	movlw	255
 21862  244D  07B3               	addwf	sprintf@width^(0+256),f
 21863  244E  30FF               	movlw	255
 21864  244F  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 21865  2450  2C38               	goto	L9
 21866  2451                     l7602:	
 21867                           ;doprnt.c: 1420: } else
 21868                           
 21869                           
 21870                           ;doprnt.c: 1422: {
 21871                           ;doprnt.c: 1424: if(width
 21872                           ;doprnt.c: 1428: )
 21873  2451  0833               	movf	sprintf@width^(0+256),w
 21874  2452  0434               	iorwf	(sprintf@width+1)^(0+256),w
 21875  2453  1903               	btfsc	3,2
 21876  2454  2C6D               	goto	l7612
 21877  2455                     l7604:	
 21878                           ;doprnt.c: 1429: do
 21879                           
 21880                           
 21881                           ;doprnt.c: 1430: ((*sp++ = (' ')),(++ccnt));
 21882  2455  0021               	movlb	1	; select bank1
 21883  2456  0851               	movf	sprintf@sp^(0+128),w
 21884  2457  0086               	movwf	6
 21885  2458  0852               	movf	(sprintf@sp+1)^(0+128),w
 21886  2459  0087               	movwf	7
 21887  245A  3020               	movlw	32
 21888  245B  0081               	movwf	1
 21889  245C  3001               	movlw	1
 21890  245D  07D1               	addwf	sprintf@sp^(0+128),f
 21891  245E  3000               	movlw	0
 21892  245F  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 21893  2460  3001               	movlw	1
 21894  2461  0022               	movlb	2	; select bank2
 21895  2462  07A5               	addwf	sprintf@ccnt^(0+256),f
 21896  2463  3000               	movlw	0
 21897  2464  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 21898                           
 21899                           ;doprnt.c: 1431: while(--width);
 21900  2465  30FF               	movlw	255
 21901  2466  07B3               	addwf	sprintf@width^(0+256),f
 21902  2467  30FF               	movlw	255
 21903  2468  3DB4               	addwfc	(sprintf@width+1)^(0+256),f
 21904  2469  0833               	movf	sprintf@width^(0+256),w
 21905  246A  0434               	iorwf	(sprintf@width+1)^(0+256),w
 21906  246B  1D03               	btfss	3,2
 21907  246C  2C55               	goto	l7604
 21908  246D                     l7612:	
 21909                           
 21910                           ;doprnt.c: 1438: if(flag & 0x03)
 21911  246D  3003               	movlw	3
 21912  246E  0531               	andwf	sprintf@flag^(0+256),w
 21913  246F  0021               	movlb	1	; select bank1
 21914  2470  00DD               	movwf	??_sprintf^(0+128)
 21915  2471  3000               	movlw	0
 21916  2472  0022               	movlb	2	; select bank2
 21917  2473  0532               	andwf	(sprintf@flag+1)^(0+256),w
 21918  2474  0021               	movlb	1	; select bank1
 21919  2475  00DE               	movwf	(??_sprintf+1)^(0+128)
 21920  2476  085D               	movf	??_sprintf^(0+128),w
 21921  2477  045E               	iorwf	(??_sprintf^(0+128)+1),w
 21922  2478  1903               	btfsc	3,2
 21923  2479  2C89               	goto	l7628
 21924                           
 21925                           ;doprnt.c: 1439: ((*sp++ = ('-')),(++ccnt));
 21926  247A  0851               	movf	sprintf@sp^(0+128),w
 21927  247B  0086               	movwf	6
 21928  247C  0852               	movf	(sprintf@sp+1)^(0+128),w
 21929  247D  0087               	movwf	7
 21930  247E  302D               	movlw	45
 21931  247F  0081               	movwf	1
 21932  2480  3001               	movlw	1
 21933  2481                     L11:	
 21934  2481  07D1               	addwf	sprintf@sp^(0+128),f
 21935  2482  3000               	movlw	0
 21936  2483  3DD2               	addwfc	(sprintf@sp+1)^(0+128),f
 21937  2484  3001               	movlw	1
 21938  2485  0022               	movlb	2	; select bank2
 21939  2486  07A5               	addwf	sprintf@ccnt^(0+256),f
 21940  2487  3000               	movlw	0
 21941  2488  3DA6               	addwfc	(sprintf@ccnt+1)^(0+256),f
 21942  2489                     l7628:	
 21943  2489  30FF               	movlw	255
 21944  248A  0022               	movlb	2	; select bank2
 21945  248B  07B9               	addwf	sprintf@prec^(0+256),f
 21946  248C  30FF               	movlw	255
 21947  248D  3DBA               	addwfc	(sprintf@prec+1)^(0+256),f
 21948  248E  0A39               	incf	sprintf@prec^(0+256),w
 21949  248F  1903               	btfsc	3,2
 21950  2490  0A3A               	incf	(sprintf@prec+1)^(0+256),w
 21951  2491  1903               	btfsc	3,2
 21952  2492  2CF3               	goto	L19
 21953                           
 21954                           ;doprnt.c: 1478: {
 21955                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 21956                           
 21957                           ;doprnt.c: 1469: }
 21958                           ;doprnt.c: 1474: while(prec--) {
 21959  2493  3000               	movlw	0
 21960  2494  0020               	movlb	0	; select bank0
 21961  2495  00B0               	movwf	___llmod@divisor+3
 21962  2496  3000               	movlw	0
 21963  2497  00AF               	movwf	___llmod@divisor+2
 21964  2498  3000               	movlw	0
 21965  2499  00AE               	movwf	___llmod@divisor+1
 21966  249A  300A               	movlw	10
 21967  249B  00AD               	movwf	___llmod@divisor
 21968  249C  0022               	movlb	2	; select bank2
 21969  249D  083A               	movf	(sprintf@prec+1)^(0+256),w
 21970  249E  0085               	movwf	5
 21971  249F  0839               	movf	sprintf@prec^(0+256),w
 21972  24A0  0084               	movwf	4
 21973  24A1  3584               	lslf	4,f
 21974  24A2  0D85               	rlf	5,f
 21975  24A3  3584               	lslf	4,f
 21976  24A4  0D85               	rlf	5,f
 21977  24A5  309A               	movlw	low (_dpowers| (0+32768))
 21978  24A6  0784               	addwf	4,f
 21979  24A7  30B8               	movlw	high (_dpowers| (0+32768))
 21980  24A8  3D85               	addwfc	5,f
 21981  24A9  3F00               	moviw [0]fsr0
 21982  24AA  0020               	movlb	0	; select bank0
 21983  24AB  00A0               	movwf	___lldiv@divisor
 21984  24AC  3F01               	moviw [1]fsr0
 21985  24AD  00A1               	movwf	___lldiv@divisor+1
 21986  24AE  3F02               	moviw [2]fsr0
 21987  24AF  00A2               	movwf	___lldiv@divisor+2
 21988  24B0  3F03               	moviw [3]fsr0
 21989  24B1  00A3               	movwf	___lldiv@divisor+3
 21990  24B2  0022               	movlb	2	; select bank2
 21991  24B3  082E               	movf	(sprintf@val+3)^(0+256),w
 21992  24B4  0020               	movlb	0	; select bank0
 21993  24B5  00A7               	movwf	___lldiv@dividend+3
 21994  24B6  0022               	movlb	2	; select bank2
 21995  24B7  082D               	movf	(sprintf@val+2)^(0+256),w
 21996  24B8  0020               	movlb	0	; select bank0
 21997  24B9  00A6               	movwf	___lldiv@dividend+2
 21998  24BA  0022               	movlb	2	; select bank2
 21999  24BB  082C               	movf	(sprintf@val+1)^(0+256),w
 22000  24BC  0020               	movlb	0	; select bank0
 22001  24BD  00A5               	movwf	___lldiv@dividend+1
 22002  24BE  0022               	movlb	2	; select bank2
 22003  24BF  082B               	movf	sprintf@val^(0+256),w
 22004  24C0  0020               	movlb	0	; select bank0
 22005  24C1  00A4               	movwf	___lldiv@dividend
 22006  24C2  31A9  2194  31A3   	fcall	___lldiv
 22007  24C5  0020               	movlb	0	; select bank0
 22008  24C6  0823               	movf	?___lldiv+3,w
 22009  24C7  00B4               	movwf	___llmod@dividend+3
 22010  24C8  0822               	movf	?___lldiv+2,w
 22011  24C9  00B3               	movwf	___llmod@dividend+2
 22012  24CA  0821               	movf	?___lldiv+1,w
 22013  24CB  00B2               	movwf	___llmod@dividend+1
 22014  24CC  0820               	movf	?___lldiv,w
 22015  24CD  00B1               	movwf	___llmod@dividend
 22016  24CE  31A8  2067  31A3   	fcall	___llmod
 22017  24D1  0020               	movlb	0	; select bank0
 22018  24D2  082D               	movf	?___llmod,w
 22019  24D3  3E30               	addlw	48
 22020  24D4  0021               	movlb	1	; select bank1
 22021  24D5  00DD               	movwf	??_sprintf^(0+128)
 22022  24D6  085D               	movf	??_sprintf^(0+128),w
 22023  24D7  0022               	movlb	2	; select bank2
 22024  24D8  00BB               	movwf	sprintf@c^(0+256)
 22025                           
 22026                           ;doprnt.c: 1523: }
 22027                           ;doprnt.c: 1524: ((*sp++ = (c)),(++ccnt));
 22028  24D9  0021               	movlb	1	; select bank1
 22029  24DA  0851               	movf	sprintf@sp^(0+128),w
 22030  24DB  0086               	movwf	6
 22031  24DC  0852               	movf	(sprintf@sp+1)^(0+128),w
 22032  24DD  0087               	movwf	7
 22033  24DE  0022               	movlb	2	; select bank2
 22034  24DF  083B               	movf	sprintf@c^(0+256),w
 22035  24E0  0081               	movwf	1
 22036  24E1  3001               	movlw	1
 22037  24E2  0021               	movlb	1	; select bank1
 22038  24E3  2C81               	goto	L11
 22039  24E4                     l7632:	
 22040                           ;doprnt.c: 1525: }
 22041                           ;doprnt.c: 1533: }
 22042                           ;doprnt.c: 1535: alldone:
 22043                           
 22044                           
 22045                           ;doprnt.c: 1538: *sp = 0;
 22046  24E4  0021               	movlb	1	; select bank1
 22047  24E5  0851               	movf	sprintf@sp^(0+128),w
 22048  24E6  0086               	movwf	6
 22049  24E7  0852               	movf	(sprintf@sp+1)^(0+128),w
 22050  24E8  0087               	movwf	7
 22051  24E9  0181               	clrf	1
 22052                           
 22053                           ;doprnt.c: 1540: return ccnt;
 22054  24EA  0022               	movlb	2	; select bank2
 22055  24EB  0826               	movf	(sprintf@ccnt+1)^(0+256),w
 22056  24EC  0021               	movlb	1	; select bank1
 22057  24ED  00D2               	movwf	(?_sprintf+1)^(0+128)
 22058  24EE  0022               	movlb	2	; select bank2
 22059  24EF  0825               	movf	sprintf@ccnt^(0+256),w
 22060  24F0  0021               	movlb	1	; select bank1
 22061  24F1  00D1               	movwf	?_sprintf^(0+128)
 22062  24F2  0008               	return
 22063  24F3                     L19:	
 22064  24F3                     __end_of_sprintf:	
 22065  24F3  3180  28C1         	ljmp	l7630


Data Sizes:
    Strings     192
    Constant    2005
    Data        23
    BSS         45
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     80      80
    BANK1            80     79      79
    BANK2            80     80      80
    BANK3            80     80      80
    BANK4            80     80      80
    BANK5            80     18      59
    BANK6            80      0      24
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           12      0       0
    BANK20            0      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_10(CODE[11]), STR_9(CODE[9]), STR_8(CODE[20]), STR_7(CODE[15]), 
		 -> STR_6(CODE[19]), STR_5(CODE[38]), STR_4(CODE[23]), STR_3(CODE[15]), 
		 -> STR_2(CODE[19]), STR_1(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 500
		 -> str(BIGRAM[500]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdaux@data(COMMON[8]), LTC6804_rdcv@cell_data(BANK0[8]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdstat_reg@cmd(COMMON[4]), 

    spi_write_array@data	PTR unsigned char  size(1) Largest target is 12
		 -> LTC6804_wrcfg@cmd(BANK0[12]), LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), LTC6804_adstat@cmd(COMMON[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 8
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), LTC6804_rdaux@data(COMMON[8]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK5[2]), ADCV(BANK5[2]), 
		 -> ADSTAT(BANK5[2]), LTC6804_rdstat_reg@cmd(COMMON[4]), configReg(BANK5[6]), 

    LTC6804_wrcfg@config	PTR unsigned char [6] size(1) Largest target is 6
		 -> configReg(BANK5[6]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR unsigned int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK2[24]), 

    setDischarge@balanceEn	PTR int  size(1) Largest target is 24
		 -> main@balanceEn(BANK4[24]), 

    cellBalancing@balanceEn	PTR int  size(1) Largest target is 24
		 -> main@balanceEn(BANK4[24]), 

    cellBalancing@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@totalVoltage	PTR float  size(1) Largest target is 4
		 -> main@totalVoltage(BANK5[4]), 

    sumVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK5[10]), 

    writeTemps@index	PTR int  size(1) Largest target is 2
		 -> writeValuesToUart@index(BANK2[2]), 

    writeCurrent@index	PTR int  size(1) Largest target is 2
		 -> writeValuesToUart@index(BANK2[2]), 

    writeVoltages@index	PTR int  size(1) Largest target is 2
		 -> writeValuesToUart@index(BANK2[2]), 

    writeVoltages@balanceEn	PTR int  size(1) Largest target is 24
		 -> main@balanceEn(BANK4[24]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeSOC@index	PTR int  size(1) Largest target is 2
		 -> writeValuesToUart@index(BANK2[2]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK5[10]), 

    writeValuesToUart@balanceEn	PTR int  size(1) Largest target is 24
		 -> main@balanceEn(BANK4[24]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    avgBuff@buff	PTR float  size(1) Largest target is 80
		 -> main@currentBuff(BANK3[80]), 

    getTemps@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK5[10]), 

    startUp@current	PTR float  size(1) Largest target is 4
		 -> main@current(BANK5[4]), 

    startUp@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK5[10]), 

    startUp@highestTemp	PTR int  size(1) Largest target is 2
		 -> main@highestTemp(BANK2[2]), 

    startUp@soc	PTR float  size(1) Largest target is 4
		 -> main@soc(BANK4[4]), 

    startUp@totalVoltage	PTR float  size(1) Largest target is 4
		 -> main@totalVoltage(BANK5[4]), 

    startUp@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 


Critical Paths under _main in COMMON

    _sprintf->__div_to_l_
    _scale->___awmod
    _fround->___awmod
    ___awdiv->___awmod
    ___llmod->___lldiv
    _LTC6804_rdcv->___bmul
    _LTC6804_rdcv->___wmul
    _LTC6804_rdcv_reg->___bmul
    _spi_write_read->___bmul
    _LTC6804_adcv->_spi_write_array
    ___flmul->___awmod
    _LTC6804_initialize->_set_adc
    _cellBalancing->_setDischarge
    _LTC6804_wrcfg->_spi_write_array
    _spi_write_array->_spi_write
    _pec15_calc->___bmul
    ___xxtofl->_adcRead

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fldiv
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___flneg->___fldiv
    _startUp->___fldiv
    _measureVoltages->___fldiv
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    _calculateTemp->___fldiv
    ___fltol->_scale
    _calculateCurrent->___fldiv
    ___flmul->___xxtofl
    _setup->_LTC6804_initialize
    _LTC6804_initialize->_LTC6804_wrcfg
    _LTC6804_wrcfg->_pec15_calc
    _avgBuff->___fldiv
    ___xxtofl->_adcRead
    ___fldiv->___flmul
    ___fladd->___fldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeSOC->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___flge
    ___flsub->___fladd
    _startUp->_measureVoltages
    _measureVoltages->___flge
    _sumVoltages->___fladd
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fladd
    _cellBalancing->___flge
    ___flge->___fladd
    _avgBuff->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeSOC->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _startUp->_measureVoltages

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               192   192      0  427269
                                             66 BANK2     14    14      0
                                              0 BANK3     80    80      0
                                              0 BANK4     80    80      0
                                              0 BANK5     18    18      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                           ___xxtofl
                            _avgBuff
                      _cellBalancing
                         _getCurrent
                           _getTemps
                    _measureVoltages
                              _setup
                            _startUp
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   27     5     22  269088
                                             39 BANK2     27     5     22
                        _clearScreen
                         _uartEnable
                       _writeCurrent
                           _writeSOC
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                       23    15      8   58237
                                             67 BANK1     12     4      8
                                             28 BANK2     11    11      0
                            ___fladd
                             ___flge
                            ___flneg
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                          11     6      5   51329
                                             67 BANK1     11     6      5
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _writeSOC                                            11     6      5   56319
                                             67 BANK1     11     6      5
                            ___flmul
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         7     2      5   50980
                                             67 BANK1      7     2      5
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   50868
                                             67 BANK1      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             51    39     12   50707
                                             49 BANK1     18     6     12
                                              0 BANK2     28    28      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   10232
                                             54 BANK0     25    21      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4    9953
                                             54 BANK0     24    20      4
                                              0 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              2 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     634
                                              3 COMMON     5     5      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              4 COMMON     2     2      0
                                             13 BANK0      8     0      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3549
                                             33 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     335
                                              0 BANK1      4     0      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _startUp                                             14     9      5   65678
                                             56 BANK1     14     9      5
                            ___fladd
                            ___fldiv
                             ___flge
                         _getCurrent
                           _getTemps
                    _measureVoltages
                        _sumVoltages
 ---------------------------------------------------------------------------------
 (2) _measureVoltages                                     37    34      3   30046
                                             49 BANK1      7     4      3
                                              0 BANK2     30    30      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                        _sumVoltages
 ---------------------------------------------------------------------------------
 (2) _sumVoltages                                         13     9      4    3706
                                             33 BANK1     13     9      4
                            ___fladd
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv                                        29    27      2   12104
                                             30 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2366
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _LTC6804_rdcv_reg                                    13    11      2    5401
                                             17 BANK0     13    11      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _spi_write_read                                       8     5      3    2175
                                              0 BANK0      8     5      3
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (6) _spi_read                                             3     3      0      45
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _LTC6804_adcv                                         7     7      0    2260
                                             17 BANK0      7     7      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (2) _getTemps                                            11     9      2   10405
                                             19 BANK1     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (3) _calculateTemp                                        8     6      2    9644
                                             11 BANK1      8     6      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     697
                                              0 BANK1     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) _getCurrent                                           8     4      4   12357
                                             45 BANK1      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (3) _calculateCurrent                                    12     8      4   11092
                                             33 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    5305
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _adcRead                                             16    14      2      91
                                              3 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    4645
                 _LTC6804_initialize
                           _adcSetup
                           _i2cSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_initialize                                   1     1      0    4645
                                             41 BANK0      1     1      0
                      _LTC6804_wrcfg
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                              7     4      3     753
                                              3 COMMON     5     2      3
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _cellBalancing                                       15    12      3   11857
                                             49 BANK1     15    12      3
                      _LTC6804_wrcfg
                            ___fladd
                             ___flge
                       _setDischarge
 ---------------------------------------------------------------------------------
 (2) _setDischarge                                         5     1      4    1570
                                              3 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2310
                                             33 BANK1     16     8      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _LTC6804_wrcfg                                       24    23      1    3892
                                             17 BANK0     24    23      1
                             ___bmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _spi_write_array                                      4     3      1     524
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (6) _spi_write                                            3     3      0      34
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _pec15_calc                                          17    15      2    1523
                                              0 BANK0     17    15      2
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     790
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _avgBuff                                             13     9      4    7107
                                             33 BANK1     13     9      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             14 BANK0     14    10      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    2291
                                             54 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    3352
                                              9 BANK1     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                        _uartDisable
 ---------------------------------------------------------------------------------
 (8) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flneg (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
   ___flge
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___xxtofl (ARG)
       _adcRead (ARG)
   ___flneg
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
   ___xxtofl
     _adcRead (ARG)
   _avgBuff
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _cellBalancing
     _LTC6804_wrcfg
       ___bmul
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _setDischarge
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
   _measureVoltages
     _LTC6804_adcv
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdcv
       _LTC6804_rdcv_reg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_read
           ___bmul (ARG)
           _spi_read (ARG)
           _spi_write (ARG)
         _wakeup_idle
       ___bmul
       ___wmul
       _pec15_calc
         ___bmul (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
     _sumVoltages
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
   _setup
     _LTC6804_initialize
       _LTC6804_wrcfg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _set_adc
     _adcSetup
     _i2cSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _startUp
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _getCurrent
       ___xxtofl
         _adcRead (ARG)
       _adcRead
       _calculateCurrent
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     _getTemps
       _adcRead
       _calculateTemp
         ___fldiv
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___xxtofl
           _adcRead (ARG)
         _adcRead (ARG)
     _measureVoltages
       _LTC6804_adcv
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _LTC6804_rdcv
         _LTC6804_rdcv_reg
           ___bmul
           _pec15_calc
             ___bmul (ARG)
           _spi_write_read
             ___bmul (ARG)
             _spi_read (ARG)
             _spi_write (ARG)
           _wakeup_idle
         ___bmul
         ___wmul
         _pec15_calc
           ___bmul (ARG)
       ___fldiv
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _sumVoltages
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
     _sumVoltages
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _writeSOC
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _writeVoltages
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flneg
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         ___flsub
           ___fladd
             ___fldiv (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)

 _ISR (ROOT)
   _uartDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       B       2       78.6%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     50      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     50      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     50      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1ED      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50     12      3B      16       73.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      18      18       30.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1ED      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19               C      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20               0      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 19 10:34:49 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003E  
                         ___fldiv@aexp 006F                           ___fldiv@bexp 006E  
                                    _j 02BF                                      _k 02BD  
                                    _n 02C1                                      _z 02BB  
                                    pc 0002                           ___fldiv@sign 0063  
                       ___bmul@product 0075                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0214                                     l94 0F59  
                                   l97 0F8D                           ___awdiv@sign 0028  
                                   _t0 3983                         ?_LTC6804_wrcfg 0031  
                  ___wmul@multiplicand 0075                sumVoltages@totalVoltage 00C8  
                      writeTemps@index 00E7                        writeTemps@temps 00EB  
                  __Umul8_16@word_mpld 0022               writeValuesToUart@current 0153  
                                  l241 2DA7                                    l244 2E2B  
                                  l192 2B85                                    l275 284C  
                                  l612 1FFF                                    l196 29FC  
                                  l279 2863                                    l655 2750  
                                  l911 23BE                                    l648 268F  
                                  l851 018F                                    l836 00F1  
                                  l790 3610                                    l784 35FA  
                                  l859 02F3                                    _PR2 001B  
                         __CFG_CPD$OFF 0000                                    _ISR 0004  
              __end_of_measureVoltages 23A2                                    _cmd 0078  
                                  _str 25FC                      SSD1306_Test@F7528 02AF  
                          _sumVoltages 28F0                           ___awmod@sign 0021  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                         __CFG_FOSC$HS 0000                           ___flmul@aexp 004E  
                         ___flmul@bexp 004F                           ___flmul@sign 0049  
                         ___flmul@temp 0054                           ___flmul@prod 0050  
                                 S8384 3000                           __CFG_LVP$OFF 0000  
                                 ?_ISR 0070                           ___fltol@exp1 00AA  
                                 l1017 36E6                                   l1300 1459  
                                 l1302 143C                                   l1161 2EE2  
                                 l1330 1550                                   l1146 2140  
                                 l1411 2E4F                                   l1404 0D5D  
                                 l1180 2BFA                                   l1156 21C4  
                                 l1317 14F1                                   l1430 372A  
                                 l1352 104D                                   l1424 2E99  
                                 l1425 2EA3                                   l1417 2E85  
                                 l1338 1568                                   l1188 2086  
                                 l1373 115D                                   l1374 1175  
                                 l1198 20FF                                   l1296 13C1  
                                 l1376 1182                                   l5100 111C  
                                 l5012 1021                                   l4212 3653  
                                 l5110 1145                                   l5014 1029  
                                 l4320 1391                                   l5032 1045  
                                 l5008 101E                                   l4208 364D  
                                 l6000 1F0C                                   l4322 1399  
                                 l6010 1F32                                   l4340 13B6  
                                 l4316 138E                                   l5124 117E  
                                 l5044 107C                                   l5028 1042  
                                 l6020 1F58                                   l4414 147B  
                                 l4406 1467                                   l4350 13CB  
                                 l5070 10E1                                   l5038 1068  
                                 l6030 1F7E                                   l6006 1F21  
                                 l4158 3724                                   l4510 0B58  
                                 l4416 147D                                   l4424 148C  
                                 l4344 13B9                                   l5064 10C8  
                                 l5072 10AA                                   l6040 1FA4  
                                 l6016 1F47                                   l4512 0B5A  
                                 l4450 1510                                   l4442 1503  
                                 l4434 14E9                                   l5090 1103  
                                 l5074 10E6                                   l6050 1FCA  
                                 l6026 1F6D                                   l4602 0CF3  
                                 l4530 0B7D                                   l4514 0B62  
                                 l7002 169D                                   l4380 1407  
                                 l6036 1F93                                   l4604 0CF5  
                                 l4540 0B93                                   l4532 0B85  
                                 l7020 17E2                                   l4390 1446  
                                 l6046 1FB9                                   l6062 1FF0  
                                 l4614 0D1E                                   l5182 28FC  
                                 l7030 206E                                   l7014 1777  
                                 l7006 16BB                                   l4456 1517  
                                 l5088 10EC                                   l8000 2C56  
                                 l6056 1FDF                                   l4624 0D4A  
                                 l4528 0B7B                                   l5184 2938  
                                 l7104 2185                                   l4490 1564  
                                 l4466 1522                                   l4458 1519  
                                 l5098 111A                                   l4618 0D33  
                                 l7130 36DF                                   l7202 29D3  
                                 l7122 21BB                                   l7114 21A0  
                                 l4468 1524                                   l4388 1444  
                                 l8012 2227                                   l7124 21C7  
                                 l7116 21AE                                   l7052 20C1  
                                 l7044 20A7                                   l7300 0102  
                                 l4486 1560                                   l4398 1454  
                                 l8014 21E0                                   l7206 29DE  
                                 l7222 2896                                   l7070 20F6  
                                 l7062 20DB                                   l8024 2230  
                                 l8016 222D                                   l4592 0CC5  
                                 l7216 2870                                   l7072 2102  
                                 l7064 20E9                                   l4752 3649  
                                 l7304 010F                                   l7312 0142  
                                 l7242 2E5E                                   l8026 228C  
                                 l4594 0CDC                                   l7218 287E  
                                 l7226 28A1                                   l7082 2126  
                                 l7402 03E8                                   l7236 2E47  
                                 l7180 2BF1                                   l7172 2BD6  
                                 l7156 2BA8                                   l7500 061D  
                                 l7412 0459                                   l7340 01C1  
                                 l7332 0191                                   l7324 0155  
                                 l8052 0DCD                                   l7270 2EBE  
                                 l7254 2E8A                                   l7246 2E62  
                                 l7182 2BFD                                   l7174 2BE4  
                                 l7422 04B9                                   l7406 0453  
                                 l7350 0215                                   l7334 01AD  
                                 l7326 018A                                   l7256 2E93  
                                 l7248 2E72                                   l4880 2EFC  
                                 l7192 29A5                                   l7096 2165  
                                 l7194 29B3                                   l7602 2451  
                                 l7426 04CB                                   l7418 0490  
                                 l8082 0F28                                   l8074 0F15  
                                 _ADAX 02C5                                   l6812 1C09  
                                 l4884 2F25                                   l5940 1E28  
                                 l6900 28CE                                   l7604 2455  
                                 l7612 246D                                   l7444 04EA  
                                 l7380 0339                                   l7292 00EC  
                                 l8076 0F18                                   _ADCV 02C7  
                                 l6814 1C4C                                   l5950 1E4E  
                                 l7702 2742                                   l7550 078A  
                                 l7518 0731                                   l7526 0745  
                                 l7446 050D                                   l7454 0521  
                                 l7374 02D1                                   l7366 0269  
                                 l7630 00C1                                   l8094 0F9B  
                                 l8086 0F54                                   l4888 2F4E  
                                 l5960 1E74                                   l6832 377A  
                                 l6824 3765                                   l7712 275D  
                                 l6912 28EB                                   l6904 28DA  
                                 l7560 23A2                                   l7544 0784  
                                 l7392 0394                                   l7528 074A  
                                 l7632 24E4                                   l8088 0F6B  
                                 l6922 3693                                   l5970 1E9A  
                                 l5946 1E3D                                   l6826 3779  
                                 l6930 0AF0                                   l7730 27F4  
                                 l7722 27B2                                   l7810 22EF  
                                 l7802 22C9                                   l6842 294D  
                                 l7538 0776                                   l7490 05F6  
                                 l7474 054C                                   l7298 00F8  
                                 l5980 1EC0                                   l5956 1E63  
                                 l7820 239C                                   l6860 296C  
                                 l6908 28E3                                   l7628 2489  
                                 l7580 2416                                   l7556 07C1  
                                 l7476 05C5                                   l7484 05D9  
                                 l7388 0375                        spi_write_read@i 0025  
                                 l8382 1FF5                                   l5990 1EE6  
                                 l5966 1E89                                   l6942 0AFC  
                                 l7734 27FE                                   l6870 2987  
                                 l7582 2419                                   l7574 23EE  
                                 l5976 1EAF                                   l7840 2B7F  
                                 l6936 0AF6                                   l6848 2958  
                                 l7592 2437                                   l7576 23F1  
                                 l7568 23D5                                   l7904 2AA8  
                                 l7770 2FBA                                   l7762 2F8E  
                                 l5986 1ED5                                   l7842 2B32  
                                 l6874 298F                                   l6866 297E  
                                 l6858 2960                                   l6890 28BC  
                                 l7906 2AEB                                   l7756 2F85  
                                 l5996 1EFB                                   l6948 0B05  
                                 l7676 269C                                   l6980 1DF3  
                                 l6972 1D55                                   l7782 2FF0  
                                 l7694 2733                                   l7686 26F1  
                                 l7950 2559                                   l6886 28B5  
                    spi_write@readData 0074                                   l7698 273D  
                                 l7970 2612                                   l7954 255D  
                                 l7946 2511                                   l6898 28C2  
                                 l7866 282B                                   l7882 1226  
                                 l7890 119B                                   l7980 2669  
                                 l7956 256D                                   l6996 1632  
                                 l7868 2854                                   l7892 12B3  
                                 l7974 2616                                   l7966 25E4  
                                 l7886 1269                                   l7878 11E8  
                                 l7984 266D                                   l7976 2626  
                                 l7998 2C1A                                   STR_1 38E9  
                                 STR_2 393E                                   STR_3 3960  
                                 STR_4 3900                                   STR_5 38C3  
                                 STR_6 392B                                   STR_7 3951  
                                 STR_8 3917                                   STR_9 397A  
                  startUp@totalVoltage 00DA                                   u5005 0C09  
                                 u5015 0C38                                   u4225 372B  
                                 u5025 0C8E                                   u5035 0CA5  
                                 u6005 10B2                                   u5045 0CB4  
                                 u6015 10B9                                   u5055 0CC8  
                                 u4600 142C                                   u5145 0D0C  
                                 u6035 10C2                                   u5155 0D27  
                                 u5075 0CD1                                   u6045 10D6  
                                 u5165 0D3D                                   u4713 149E  
                                 u4705 1481                                   u4635 144A  
                                 u6075 10EF                                   u6165 1133  
                                 u4590 142B                                   u6175 114E  
                                 u6095 10F8                                   u4585 1420  
                                 u6185 1167                                   u6345 290C  
                                 u4755 1504                                   u6355 2906  
                                 u9005 36E7                                   u4855 153B  
                                 u6375 2A15                                   u9015 36EC  
                                 u9115 2BF2                                   u9055 2BB1  
                                 u9305 2E6B                                   u9225 2873  
                                 u9155 29A8                                   u9325 2E7F  
                                 u9085 2BD7                                   u9245 288C  
                                 u9175 29B4                                   u9255 2897  
                                 u8455 2963                                   u9345 2E8D  
                                 u8385 1C1F                                   u9185 29C8  
                                 u9195 29D4                                   u8475 296D  
                                 u8555 28C5                                   u8485 2977  
                                 u9605 0484                                   u8815 20DC  
                                 u8495 297F                                   u8575 28D4  
                                 u9535 02FF                                   u9385 2EAB  
                                 u8905 2186                                   u8585 28DB  
                                 u9705 05E4                                   u9545 0345  
                                 u8755 20A8                                   u9715 05F2  
                                 u8845 20F7                                   u8765 20B8  
                                 u8775 20C2                                   u9815 07D5  
                                 u9575 0373                                   u8945 21A1  
                                 u9825 23B6                                   u9665 04F6  
                                 u9675 052D                                   u8885 2166  
                                 u8975 21BC                                   u8895 217A  
                                 u9865 23E6                                   u9875 2405  
                                 u9795 07B5                                   _WPUD 020F  
                          main@current 02D7                                   _Beta 3989  
                         __CFG_WRT$OFF 0000                 __end_of_spi_write_read 3791  
                        __CFG_FCMEN$ON 0000                                   _main 0D6A  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                           spi_read@data 0074  
                        __CFG_BOREN$ON 0000                                   start 0081  
                        __CFG_IESO$OFF 0000                        ___fldiv@new_exp 0068  
                         _sprintf$2210 0120                    cellBalancing@i_1334 00DD  
                       ??_LTC6804_adcv 0031                      ___bmul@multiplier 0076  
                        __CFG_MCLRE$ON 0000                         ??_LTC6804_rdcv 0040  
                       writeVoltages@k 0145                                  ??_ISR 0070  
                    ?_LTC6804_rdcv_reg 0031                          __CFG_PLLEN$ON 0000  
                     spi_write_array@i 0021                          ___fltol@sign1 00A9  
      writeValuesToUart@temperatureArr 014E             __size_of_writeValuesToUart 008E  
                      __end_of___fladd 1570                                  ?_main 0070  
                      __end_of___fldiv 1193                        __end_of_adcRead 2A3B  
                      __end_of___awdiv 2994                        __end_of___flneg 35F6  
                                STR_10 396F                          __CFG_WDTE$OFF 0000  
                      __end_of___awmod 28F0                     ??_LTC6804_rdcv_reg 0033  
                      __end_of___flmul 0D6A                        __end_of___flsub 3719  
                      __end_of___fltol 2C0C                        __end_of___lldiv 29E7  
                                u10015 272D                                  u10205 22FD  
                                u10135 2A4D                                  u10215 2345  
                                u11007 0D99                                  u10145 2A58  
                                u11017 29F7                                  u10065 27EE  
                                u10225 2360                                  u10170 22AB  
                                u11027 35E6                                  u10155 2A75  
                                u10315 11AE                                  u10085 2F66  
                                u10165 2A95                                  u10245 2387  
                                u10405 11A7                                  u10325 11C8  
                                u10415 12E1                                  u10265 2B71  
                                u10505 25E2                                  u10425 12FB  
                                u10345 11ED                                  u10275 2B3C  
                                u10195 22ED                                  u10515 25F9  
                                u10435 2AB2                                  u10355 1207  
                      ___awdiv@divisor 0022                                  u10605 2214  
                                u10525 2610                                  u10445 250F  
                                u10615 21EA                                  u10535 2624  
                                u10455 251D                                  u10295 283B  
                                u10625 2240                        __end_of___llmod 28AA  
                                u10385 1254                                  u10705 0F26  
                                u10635 223A                                  u10475 2539  
                                u10395 128A                                  u10715 0F3C  
                                u10660 0D81                                  u10565 2C2A  
                                u10725 0F52                                  u10575 2C24  
                                u10495 256B                                  u10735 0F69  
                                _T2CON 001C                                  u10585 21F0  
                                u10755 0F97                                  u10685 0E07  
                                u10695 0E29                                  i1l134 007C  
                      ___awdiv@counter 0027                                  _TXREG 019A  
            LTC6804_wrcfg@current_byte 0046                     writeVoltages@index 00EA  
                      __end_of_avgBuff 2C93                __end_of_spi_write_array 36A7  
                   writeVoltages@volts 0144                        __end_of_dpowers 38C2  
                                _scale 1570                        __end_of_isdigit 364B  
                                _setup 2800                                  main@i 026E  
                      __end_of_set_adc 2AA4                    clearScreen@numLines 00E3  
                      ?_spi_write_read 0020                        __end_of_startUp 2673  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 24F3                           main@voltages 0220  
          LTC6804_rdcv@current_ic_1379 0057                  __size_of_writeCurrent 0029  
                        main@balanceEn 0250                           __end_of_Beta 398B  
                 __size_of_clearScreen 0041                        __initialization 0083  
                         __end_of_main 1000                        ??_LTC6804_wrcfg 0032  
                     __end_of_i2cSetup 367E                     writeTemps@numTemps 00E5  
                       __CFG_LPBOR$OFF 0000                       __end_of_OledFont 0AE3  
                               ??_main 0162                           adcRead@total 002B  
                    ?_calculateCurrent 00C1                         set_adc@md_bits 0021  
                     ?_measureVoltages 00D1                   __size_of__tdiv_to_l_ 00B6  
                 cellBalancing@boolean 00D6                     ??_calculateCurrent 0078  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 398F       writeValuesToUart@temperatureHigh 0151  
                  pec15_calc@remainder 002F                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                     ___llmod@dividend 0031                                 ?_scale 0056  
                               _ADRESH 009C                                 _ADRESL 009B  
                               _ADSTAT 02C3                       ___awdiv@dividend 0024  
writeValuesToUart@temperatureArrLength 014F                                 ?_setup 0070  
                     __end_of_adcSetup 36DC                           _writeCurrent 3739  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELD 018F                                 i1l6312 0027  
                               i1l6320 003B                                 i1l6342 0074  
                               i1l6318 003A                                 i1l6328 0048  
                               i1l6338 006F                                 u791_25 001A  
                               _SPBRGH 019C                                 _SPBRGL 019B  
                               u792_25 0031                LTC6804_rdaux@BYT_IN_REG 398F  
                               _SSPADD 0212                                 _SSPBUF 0211  
                     __end_of___xxtofl 2EC7                           startUp@i_404 00E4  
                  writeVoltages@length 00E3                         __CFG_PWRTE$OFF 0000  
                         ?_uartDisable 0070                       __end_of_getTemps 2B8D  
                     __end_of__powers_ 3834                           startUp@temps 00D8  
     __end_ofLTC6804_rdaux_reg@REG_LEN 398E                                 ___flge 2EC7  
                               ___bmul 364B                     _writeVoltages$2206 013C  
                         ?_timer0Setup 0070                              ??___fladd 00B1  
                               ___wmul 36DC                              ??___fldiv 005E  
                            ??_adcRead 0020                              ??___awdiv 0026  
                         ?_timer2Setup 0070                              ??___flneg 0078  
                       __CFG_STVREN$ON 0000                              ??___awmod 0077  
                            ??___flmul 0044                              ??___flsub 0078  
                            ??___fltol 00A4                              ??___lldiv 0073  
                        main@numFaults 016C                              ??___llmod 0074  
                               _fround 1C51                       ___awdiv@quotient 0029  
                      ___awmod@divisor 0073                              ??_avgBuff 00C5  
                      ___awmod@counter 0020                           ?_wakeup_idle 0070  
                     getTemps@numTemps 00B3                              ??_isdigit 0073  
                   __size_of__Umul8_16 0020                       __end_of_spiSetup 3690  
                            ??_set_adc 0076                       ?_spi_write_array 0076  
                     __end_of_spi_read 3618                   __end_of_LTC6804_adcv 37C2  
       __end_ofLTC6804_rdcv@BYT_IN_REG 3994                   __end_of_LTC6804_rdcv 2800  
                            ??_startUp 00DD                              ??_sprintf 00DD  
                LTC6804_wrcfg@total_ic 0043                       __end_of_writeSOC 2055  
                           ___flge@ff1 00C1                             ___flge@ff2 00C5  
                         sumVoltages@i 00CC                           ___xxtofl@arg 0038  
                         ___xxtofl@exp 0037                           ___xxtofl@val 002E  
              __end_of__initialization 00B4                          spi_write@data 0075  
                           ___flneg@f1 00A0                  calculateTemp@adcValue 00AB  
                           ___fltol@f1 00A0                LTC6804_rdaux@NUM_RX_BYT 3990  
                  ___bmul@multiplicand 0073        __end_ofLTC6804_rdcv@CELL_IN_REG 3993  
                    ltc6804@crc15Table 1800                             _crc15Table 1A00  
                       __pcstackCOMMON 0070                           __pidataBANK5 36A7  
                        __end_of_scale 1800                          __end_of_setup 2826  
                   _LTC6804_initialize 365C                 __size_of_writeVoltages 01E1  
                       cellBalancing@i 00DB                             __end_of_t0 3987  
                        _writeSOC$2205 00EA                          ?_setDischarge 0073  
                           __div_to_l_ 210B                           ?_sumVoltages 00C1  
                  ?_LTC6804_initialize 0070                          adcRead@ansLow 0029  
                      __div_to_l_@exp1 002D                        __div_to_l_@cntr 002C  
                              ??_scale 005A                        __div_to_l_@quot 0028  
                         sprintf@width 0133                                ??_setup 0078  
                           __pbssBANK5 02B7                             __pbssBANK6 0320  
                            ?_i2cSetup 0070         __end_ofLTC6804_rdcv@NUM_RX_BYT 3995  
             LTC6804_rdaux@GPIO_IN_REG 398E                        __CFG_VCAPEN$OFF 0000  
            __end_ofltc6804@crc15Table 1A00                             _pec15_calc 1C02  
                        __div_to_l_@f1 0020                          __div_to_l_@f2 0024  
                  writeCurrent@current 00E3                   ??_LTC6804_initialize 0049  
                    __end_of__Umul8_16 3739                     spi_write_array@len 0020  
                           __pmaintext 0D6A                cellBalancing@minVoltage 00D7  
                              ?___flge 00C1                                ?___bmul 0073  
               __size_of_cellBalancing 00C6                 LTC6804_rdcv@cell_codes 003F  
                              ?___wmul 0073                             __pintentry 0004  
             LTC6804_rdcv@data_counter 005A                             _getCurrent 37C2  
                              _CCP2CON 029A      writeValuesToUart@voltageArrLength 0147  
                              ?_fround 0056                              ?_adcSetup 0070  
                     LTC6804_wrcfg@cmd 0036                         ??_setDischarge 0077  
             LTC6804_rdaux_reg@REG_LEN 398D                     __size_of_uartSetup 000D  
               __size_of_calculateTemp 0087                              ?___xxtofl 002E  
                cellBalancing@voltages 00DF                 measureVoltages@ltcData 0120  
                   __size_of_spi_write 000B                       ??_spi_write_read 0023  
                              _SSP1BUF 0211                              ?_getTemps 00B3  
                              _SSPCON1 0215                                _SSPSTAT 0214  
            __size_of_LTC6804_rdcv_reg 0055                             ??_i2cSetup 0073  
                        _writeVoltages 1193                   spi_write_read@i_1461 0026  
                 writeVoltages@maxCell 0140                   writeVoltages@minCell 0142  
                    __end_of__npowers_ 3868                 LTC6804_wrcfg@cmd_index 0048  
                           _scale$2209 006A                              ?_spiSetup 0070  
                 __size_of_uartDisable 0003                        __size_of___flge 009A  
                      __size_of___bmul 0011                              ?_spi_read 0070  
                              ___fladd 1374                   spi_write_read@rx_len 0022  
                              ___fldiv 1004                                _adcRead 29E7  
                              ___awdiv 2942                                ___flneg 35EC  
                              ___awmod 28AA                                ___flmul 0B3E  
                 spi_write_read@tx_len 0020                                ___flsub 36FA  
                              ___fltol 2B8D                                ___lldiv 2994  
                      __size_of___wmul 001E                                ___llmod 2867  
            writeVoltages@totalVoltage 00E5                   __size_of_timer0Setup 0005  
                           ??_adcSetup 0073                   __size_of_timer2Setup 000B  
                      __size_of_fround 01D6                                _avgBuff 2C0C  
                            ?_writeSOC 00E3                                __ptext1 2DA3  
                              __ptext2 1193                                __ptext3 2AA4  
                              __ptext4 2001                                __ptext5 3739  
                              __ptext6 2826                                __ptext7 1001  
                              __ptext8 00B8                                __ptext9 1570  
                __size_of_LTC6804_adcv 0031            writeValuesToUart@voltageArr 015F  
                         __size_of_ISR 007D                            ?__div_to_l_ 0020  
                __size_of_LTC6804_rdcv 018D                                _dpowers 389A  
                              _isdigit 363D                             ??___xxtofl 0032  
                     ___awmod@dividend 0075                   __size_of_wakeup_idle 0009  
               LTC6804_rdcv@current_ic 0055                                _set_adc 2A3B  
           __end_ofmain@total_capacity 3989                          _cellBalancing 21D0  
                           ??_getTemps 00B5                                _startUp 24F5  
                              _sprintf 00B8                                clrloop0 3619  
                              main@soc 026A                             avgBuff@inc 00CC  
                 end_of_initialization 00B4                         ?_writeVoltages 00E3  
      __end_ofLTC6804_rdcv_reg@REG_LEN 3992                                init_ram 3624  
                              initloop 3625              __size_of_calculateCurrent 0089  
                        ??_clearScreen 00E5                          pec15_calc@len 002B  
                          ?_pec15_calc 0020                      __end_of_uartSetup 363D  
                        _calculateTemp 2C93               calculateCurrent@adcValue 00C1  
                      ___lldiv@divisor 0020                        ___lldiv@counter 002C  
                           _uartEnable 1001                   calculateCurrent@curr 00C5  
                           ??_spiSetup 0073                              _RCSTAbits 019D  
                    __end_of_spi_write 3601                           _LTC6804_adcv 3791  
                              psplit$0 38006F                             ??_spi_read 0073  
                         _LTC6804_rdcv 2673                         __tdiv_to_l_@f1 0020  
                       __tdiv_to_l_@f2 0024                            ?_getCurrent 00CD  
    __end_ofLTC6804_rdstat_reg@REG_LEN 38C3                  __end_of_LTC6804_wrcfg 3000  
                        ??__tdiv_to_l_ 0073                             _timerSetup 0AE3  
                           ??_writeSOC 00E8                 writeVoltages@balanceEn 00E9  
                  LTC6804_rdcv_reg@cmd 0039                    LTC6804_rdcv_reg@reg 003D  
                          ___fladd@grs 00C0                          ___xxtofl@sign 0036  
                            _TRISAbits 008C                              _TRISBbits 008D  
                       ?_cellBalancing 00D1                              _TRISCbits 008E  
                            _TRISDbits 008F                   __size_of_sumVoltages 0052  
                          ___fldiv@grs 006A                            ___fldiv@rem 0064  
               writeValuesToUart@index 0160               __size_of_measureVoltages 010C  
                     main@currentIndex 0268                            ___flmul@grs 004A  
                 __end_of_setDischarge 2000                         ?_calculateTemp 00AB  
                            _TXSTAbits 019E                    __size_of__div_to_l_ 00C5  
            measureVoltages@errorCount 0138                   LTC6804_wrcfg@CMD_LEN 0042  
                  __end_of_clearScreen 2867                         __end_of___flge 2F61  
                       __end_of___bmul 365C                             _writeTemps 2AA4  
                       __end_of___wmul 36FA                         __end_of_fround 1E27  
                  __size_of_pec15_calc 004F                    start_initialization 0083  
                          __end_of_ISR 0081                    __end_of__tdiv_to_l_ 210B  
                 measureVoltages@F7581 0320                        ??_writeVoltages 00EB  
                     _LTC6804_rdcv_reg 0AE9                      pnum$text8_split_1 006F  
                    writeCurrent@index 00E7                    __size_of_getCurrent 003E  
             __size_of_spi_write_array 0017                        ___llmod@divisor 002D  
                    __size_of_i2cSetup 0011                        ___llmod@counter 0075  
                  getTemps@highestTemp 00B9                   LTC6804_wrcfg@cfg_pec 0044  
                          _APFCON1bits 011D                         adcRead@ansHigh 0027  
                          ?_uartEnable 0070                               ??___flge 00C9  
                             ??___bmul 0074                 cellBalancing@balanceEn 00D3  
                             ??___wmul 0077                              __Umul8_16 3719  
                          __pdataBANK5 02A0                               ??_fround 005A  
                      LTC6804_adcv@cmd 0032                            ?_timerSetup 0070  
                        sprintf@tmpval 0127                              ___fladd@a 00AD  
                            ___fladd@b 00A9                             fround@prec 00A8  
                      ??_cellBalancing 00D4                      __size_of_adcSetup 001E  
                            ___fldiv@a 0056                              ___fldiv@b 005A  
                          __pbssBIGRAM 25FC                              ___flmul@a 0040  
                            ___flmul@b 003C                            __pbssCOMMON 0078  
                            ___flsub@a 00C1                              ___flsub@b 00C5  
                  sumVoltages@voltages 00C7                              ___latbits 0003  
        writeValuesToUart@totalVoltage 0149                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          __pcstackBANK2 0120  
                        __pcstackBANK3 01A0                          __pcstackBANK4 0220  
                        __pcstackBANK5 02C9                        startUp@voltages 00D9  
              LTC6804_rdcv@CELL_IN_REG 3992                      __size_of___xxtofl 0096  
                         _isdigit$1808 0073                              adcRead@ch 002D  
                      ??_calculateTemp 00AD                      __size_of_getTemps 007D  
                          sprintf@ccnt 0125                        LTC6804_rdcv@reg 0054  
                          sprintf@flag 0131                            sprintf@fval 0135  
                     _calculateCurrent 2D1A                            sprintf@prec 0139  
                          _clearScreen 2826                    spi_write_array@data 0076  
                 calculateTemp@voltage 00AF                      ??_measureVoltages 00D4  
                            _main$2203 0168            __size_of_LTC6804_initialize 0011  
                LTC6804_rdcv@cell_data 0045                               ?___fladd 00A9  
                             ?___fldiv 0056                               ?_adcRead 0073  
                             ?___awdiv 0022                               ?___flneg 00A0  
                             ?___awmod 0073                               ?___flmul 003C  
                             ?___flsub 00C1                               ?___fltol 00A0  
                             ?___lldiv 0020                               ?___llmod 002D  
                            __npowers_ 3834                             ?__Umul8_16 0073  
                 __end_of_temperatures 389A      __end_ofLTC6804_rdcfg@BYTES_IN_REG 398C  
                      main@highestTemp 016E      __end_ofLTC6804_wrcfg@BYTES_IN_REG 398D  
               getCurrent@currentValue 00D1                            ?_writeTemps 00E3  
                    __size_of_spiSetup 0012                              _configReg 02B1  
                    setDischarge@index 0073                      __size_of_spi_read 000C  
                             ?_avgBuff 00C1                            __tdiv_to_l_ 2055  
                            __pswtext1 3000                           ??__div_to_l_ 0073  
                           set_adc@CHG 0075                             set_adc@DCP 0073  
                             ?_isdigit 0070                      __size_of_writeSOC 0054  
                             ?_set_adc 0073                    __size_of_uartEnable 0003  
                             ?_startUp 00D8                  __size_of_setDischarge 01D9  
                             ?_sprintf 00D1                     __end_of_crc15Table 1C00  
                        ?_writeCurrent 00E3                         __size_of_scale 0290  
                       __size_of_setup 0026                  LTC6804_rdcv@pec_error 004D  
        LTC6804_rdcv@current_cell_1380 0058                         ___wmul@product 0020  
                  __size_of_timerSetup 0006                               _LATAbits 010C  
                             _LATBbits 010D                               _LATDbits 010F  
             LTC6804_rdcv@current_cell 0056                            writeSOC@soc 00E3  
                         ??_pec15_calc 0022                              clear_ram0 3618  
                  setDischarge@boolean 0075                               _PIE1bits 0091  
                             _PIE2bits 0092                     main@total_capacity 3987  
                        ??_uartDisable 0070                measureVoltages@pecError 013A  
                             _PIR1bits 0011                     __end_of__div_to_l_ 21D0  
                             _PIR2bits 0012                     startUp@highestTemp 00E1  
                            _uartSetup 3630                      ??_spi_write_array 0077  
                        ??_timer0Setup 0073                          ??_timer2Setup 0073  
                            main@F7728 02A0                               _SSP1CON1 0215  
          measureVoltages@totalVoltage 00D1                           ??_getCurrent 0078  
                            _spi_write 35F6                            writeTemps@k 00EC  
                        ??_wakeup_idle 0073                             _ADCON0bits 009D  
                    ___wmul@multiplier 0073                           _setDischarge 1E27  
                      main@currentBuff 01A0                              main@temps 02C9  
                   __end_of_pec15_calc 1C51                           clearScreen@j 00E8  
              measureVoltages@voltages 013B                         ??_writeCurrent 00E8  
            LTC6804_rdstat_reg@REG_LEN 38C2                           avgBuff@total 00C8  
                             _i2cSetup 366D             measureVoltages@numVoltages 00D2  
                  __size_of_writeTemps 006C               cellBalancing@numVoltages 00D1  
                   __end_of_getCurrent 3800                       measureVoltages@i 013C  
             LTC6804_rdcv@received_pec 0050                               _OledFont 07E3  
             LTC6804_rdcv_reg@total_ic 0031                __size_of_spi_write_read 002F  
           writeValuesToUart@balanceEn 014D                             startUp@soc 00DC  
                       startUp@current 00DB                    LTC6804_wrcfg@config 0031  
                           ?_uartSetup 0070                            ??__Umul8_16 0075  
             __end_of_LTC6804_rdcv_reg 0B3E                  spi_write_read@tx_Data 0027  
                     __size_of___fladd 01FC                       __size_of___fldiv 018F  
                     __size_of_adcRead 0054                       __size_of___awdiv 0052  
                     __size_of___flneg 000A                    __end_of_uartDisable 35DE  
                     __size_of___awmod 0046                  spi_write_read@rx_data 0021  
                     __size_of___flmul 022C                       __size_of___flsub 001F  
                     __size_of___fltol 007F                       __size_of___lldiv 0053  
                     __size_of___llmod 0043                               _adcSetup 36BE  
                           ?_spi_write 0070        __end_ofLTC6804_rdaux@BYT_IN_REG 3990  
                          _fround$2207 00A4                            _fround$2208 00A0  
              LTC6804_rdcv_reg@REG_LEN 3991                       __size_of_avgBuff 0087  
                  __end_of_timer0Setup 35E3                    __end_of_timer2Setup 360C  
                          _currentBool 02B7                          ??_sumVoltages 00C5  
                         _tempChannels 02AA                             sprintf@exp 012F  
                           sprintf@val 012B                               ___xxtofl 2E31  
                     __size_of_isdigit 000E                   LTC6804_rdcv@data_pec 0052  
                 LTC6804_rdcv@cell_reg 0059                    __end_of_wakeup_idle 35EC  
                     __size_of_set_adc 0069                               __ptext10 363D  
                             __ptext11 1C51                               __ptext20 24F5  
                             __ptext12 28AA                               __ptext21 2296  
                             __ptext13 2942                               __ptext30 2C93  
                             __ptext22 28F0                               __ptext14 2055  
                             __ptext31 2B8D                               __ptext23 2673  
                             __ptext15 210B                               __ptext40 3601  
                             __ptext32 37C2                               __ptext24 36DC  
                             __ptext16 2867                               __ptext41 35DE  
                             __ptext33 2D1A                               __ptext25 0AE9  
                             __ptext17 2994                               __ptext50 2F61  
                             __ptext42 367E                               __ptext34 0B3E  
                             __ptext26 3762                               __ptext18 36FA  
                             __ptext51 35E3                               __ptext43 366D  
                             __ptext35 3719                               __ptext27 360C  
                             __ptext19 35EC                               __ptext52 3690  
                             __ptext44 36BE                               __ptext36 29E7  
                             __ptext28 3791                               __ptext61 35DB  
                             __ptext53 35F6                               __ptext45 365C  
                             __ptext37 2800                               __ptext29 2B10  
                             __ptext54 1C02                               __ptext46 2A3B  
                             __ptext38 3630                               __ptext55 364B  
                             __ptext47 21D0                               __ptext39 0AE3  
                             __ptext56 2C0C                               __ptext48 1E27  
                             __ptext57 2E31                               __ptext49 2EC7  
                             __ptext58 1004                               __ptext59 1374  
                             _getTemps 2B10                           _SSP1CON1bits 0215  
                         _SSP1CON3bits 0217                               __powers_ 3800  
                  LTC6804_adcv@cmd_pec 0036                       __size_of_startUp 017E  
                     __size_of_sprintf 243B                              set_adc@CH 0074  
                            set_adc@MD 0020                 __size_of_LTC6804_wrcfg 009F  
                        __size_of_main 0296                              pnum$text8 0038  
                setDischarge@balanceEn 0076                           ??_uartEnable 0073  
                          pec15_calc@i 002E                               _uartBool 02B9  
                             _spiSetup 367E                LTC6804_rdcv_reg@cmd_pec 0037  
                             _spi_read 360C                               int$flags 007E  
              LTC6804_wrcfg@current_ic 0047                  _calculateCurrent$2204 00C9  
                 writeValuesToUart@soc 0157                           _SSP1STATbits 0214  
                         ??_timerSetup 0073                   LTC6804_rdcv@total_ic 003E  
                             _writeSOC 2001             writeValuesToUart@uartLines 015B  
                          avgBuff@buff 00C7                          writeSOC@index 00E7  
             __end_of_calculateCurrent 2DA3                            avgBuff@size 00C1  
      __end_ofLTC6804_rdaux@NUM_RX_BYT 3991                      _writeValuesToUart 2DA3  
                           _INTCONbits 000B                         __pstringtext10 3989  
                       __pstringtext11 398B                         __pstringtext20 3994  
                       __pstringtext12 398C                         __pstringtext21 38C2  
                       __pstringtext13 398D                         __pstringtext30 397A  
                       __pstringtext22 38E9                         __pstringtext14 398E  
                       __pstringtext31 0000                         __pstringtext23 3900  
                       __pstringtext15 398F                         __pstringtext24 3917  
                       __pstringtext16 3990                         __pstringtext25 392B  
                       __pstringtext17 3991                         __pstringtext26 393E  
                       __pstringtext18 3992                         __pstringtext27 3951  
                       __pstringtext19 3993                         __pstringtext28 3960  
                       __pstringtext29 396F                     ?_writeValuesToUart 0147  
                             isdigit@c 0074                          getTemps@temps 00BB  
              LTC6804_rdcv@parsed_cell 004E                       spi_read@readData 0075  
                             scale@scl 006E                     __end_of_uartEnable 1004  
                      _measureVoltages 2296                         pec15_calc@addr 002C  
                       pec15_calc@data 0020                    __end_of_sumVoltages 2942  
                __end_of_writeVoltages 1374                               intlevel1 0000  
                         _temperatures 3868                              sprintf@ap 0124  
                     __tdiv_to_l_@exp1 002D                       __tdiv_to_l_@cntr 002C  
                            sprintf@sp 00D1                       __tdiv_to_l_@quot 0028  
               sumVoltages@numVoltages 00C1                    ??_writeValuesToUart 015D  
                     ___lldiv@dividend 0024                 LTC6804_rdcv@BYT_IN_REG 3993  
                    __CFG_CLKOUTEN$OFF 0000                     __end_of_timerSetup 0AE9  
                         ?_clearScreen 00E3                            _uartDisable 35DB  
                     main@totalVoltage 02D3                            ??_uartSetup 0073  
                          _timer0Setup 35DE                   __end_of_writeCurrent 3762  
                          _timer2Setup 3601                  writeTemps@highestTemp 00E3  
                         ??_writeTemps 00E8                            ??_spi_write 0073  
                        _LTC6804_wrcfg 2F61                               startUp@i 00E2  
                         ?__tdiv_to_l_ 0020                          __pstringtext1 07E3  
                        __pstringtext2 1800                          __pstringtext3 1A00  
                        __pstringtext4 3800                          __pstringtext5 3834  
                        __pstringtext6 3868                          __pstringtext7 389A  
                        __pstringtext8 3983                          __pstringtext9 3987  
            __end_of_writeValuesToUart 2E31                            _wakeup_idle 35E3  
               __Umul8_16@multiplicand 0073                             _OPTION_REG 0095  
                             sprintf@c 013B                               sprintf@f 00D3  
                     ___lldiv@quotient 0028                  __end_of_cellBalancing 2296  
                          _SSPCON2bits 0216              LTC6804_rdcfg@BYTES_IN_REG 398B  
            LTC6804_wrcfg@BYTES_IN_REG 398C                          ___fladd@signs 00BD  
                          getTemps@inc 00BC                        _spi_write_array 3690  
                 LTC6804_rdcv_reg@data 0032                           ___fladd@aexp 00BE  
                         ___fladd@bexp 00BF                  __end_of_calculateTemp 2D1A  
                   __end_of_writeTemps 2B10                   __Umul8_16@multiplier 0024  
           __end_of_LTC6804_initialize 366D                         _spi_write_read 3762  
               LTC6804_rdcv@NUM_RX_BYT 3994                      __Umul8_16@product 0020  
