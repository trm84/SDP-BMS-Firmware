

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 12 15:29:30 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK4,global,class=CODE,delta=2
     5                           	psect	idataBANK5,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	stringtext10,global,class=STRCODE,delta=2
    16                           	psect	stringtext11,global,class=STRCODE,delta=2
    17                           	psect	stringtext12,global,class=STRCODE,delta=2
    18                           	psect	stringtext13,global,class=STRCODE,delta=2
    19                           	psect	stringtext14,global,class=STRCODE,delta=2
    20                           	psect	stringtext15,global,class=STRCODE,delta=2
    21                           	psect	stringtext16,global,class=STRCODE,delta=2
    22                           	psect	stringtext17,global,class=STRCODE,delta=2
    23                           	psect	stringtext18,global,class=STRCODE,delta=2
    24                           	psect	stringtext19,global,class=STRCODE,delta=2
    25                           	psect	stringtext20,global,class=STRCODE,delta=2
    26                           	psect	stringtext21,global,class=STRCODE,delta=2
    27                           	psect	stringtext22,global,class=STRCODE,delta=2
    28                           	psect	stringtext23,global,class=STRCODE,delta=2
    29                           	psect	stringtext24,global,class=STRCODE,delta=2
    30                           	psect	stringtext25,global,class=STRCODE,delta=2
    31                           	psect	stringtext26,global,class=STRCODE,delta=2
    32                           	psect	stringtext27,global,class=STRCODE,delta=2
    33                           	psect	stringtext28,global,class=STRCODE,delta=2
    34                           	psect	cinit,global,class=CODE,merge=1,delta=2
    35                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    36                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    37                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1
    38                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    39                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
    40                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    41                           	psect	inittext,global,class=CODE,delta=2
    42                           	psect	clrtext,global,class=CODE,delta=2
    43                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1
    44                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    45                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    46                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    47                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    49                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    50                           	psect	text1,local,class=CODE,merge=1,delta=2
    51                           	psect	text2,local,class=CODE,merge=1,delta=2
    52                           	psect	text3,local,class=CODE,merge=1,delta=2
    53                           	psect	text4,local,class=CODE,merge=1,delta=2
    54                           	psect	text5,local,class=CODE,merge=1,delta=2
    55                           	psect	text6,local,class=CODE,merge=1,delta=2
    56                           	psect	text7,local,class=CODE,merge=1,delta=2
    57                           	psect	text8,local,class=CODE,merge=1,delta=2
    58                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text10,local,class=CODE,merge=1,delta=2
    60                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    66                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    67                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text19,local,class=CODE,merge=1,delta=2
    69                           	psect	text20,local,class=CODE,merge=1,delta=2
    70                           	psect	text21,local,class=CODE,merge=1,delta=2
    71                           	psect	text22,local,class=CODE,merge=1,delta=2
    72                           	psect	text23,local,class=CODE,merge=1,delta=2
    73                           	psect	text24,local,class=CODE,merge=1,delta=2
    74                           	psect	text25,local,class=CODE,merge=1,delta=2
    75                           	psect	text26,local,class=CODE,merge=1,delta=2
    76                           	psect	text27,local,class=CODE,merge=1,delta=2
    77                           	psect	text28,local,class=CODE,merge=1,delta=2
    78                           	psect	text29,local,class=CODE,merge=1,delta=2
    79                           	psect	text30,local,class=CODE,merge=1,delta=2
    80                           	psect	text31,local,class=CODE,merge=1,delta=2
    81                           	psect	text32,local,class=CODE,merge=1,delta=2
    82                           	psect	swtext1,local,class=CONST,delta=2
    83                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text34,local,class=CODE,merge=1,delta=2
    85                           	psect	text35,local,class=CODE,merge=1,delta=2
    86                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text37,local,class=CODE,merge=1,delta=2
    88                           	psect	text38,local,class=CODE,merge=1,delta=2
    89                           	psect	text39,local,class=CODE,merge=1,delta=2
    90                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    91                           	psect	text41,local,class=CODE,merge=1,delta=2
    92                           	psect	text42,local,class=CODE,merge=1,delta=2
    93                           	psect	text43,local,class=CODE,merge=1,delta=2
    94                           	psect	text44,local,class=CODE,merge=1,delta=2
    95                           	psect	text45,local,class=CODE,merge=1,delta=2
    96                           	psect	text46,local,class=CODE,merge=1,delta=2
    97                           	psect	text47,local,class=CODE,merge=1,delta=2
    98                           	psect	text48,local,class=CODE,merge=1,delta=2,group=2
    99                           	psect	text49,local,class=CODE,merge=1,delta=2
   100                           	psect	text50,local,class=CODE,merge=1,delta=2
   101                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	text53,local,class=CODE,merge=1,delta=2
   104                           	psect	text54,local,class=CODE,merge=1,delta=2
   105                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   106                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
   107                           	psect	text57,local,class=CODE,merge=1,delta=2,group=2
   108                           	psect	intentry,global,class=CODE,delta=2
   109                           	psect	text59,local,class=CODE,merge=1,delta=2
   110                           	dabs	1,0x7E,2
   111  0000                     
   112                           ; Version 1.45
   113                           ; Generated 16/11/2017 GMT
   114                           ; 
   115                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   116                           ; All rights reserved.
   117                           ; 
   118                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   119                           ; 
   120                           ; Redistribution and use in source and binary forms, with or without modification, are
   121                           ; permitted provided that the following conditions are met:
   122                           ; 
   123                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   124                           ;        conditions and the following disclaimer.
   125                           ; 
   126                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   127                           ;        of conditions and the following disclaimer in the documentation and/or other
   128                           ;        materials provided with the distribution.
   129                           ; 
   130                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   131                           ;        software without specific prior written permission.
   132                           ; 
   133                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   134                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   135                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   136                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   137                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   138                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   139                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   140                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   141                           ; 
   142                           ; 
   143                           ; Code-generator required, PIC16F1789 Definitions
   144                           ; 
   145                           ; SFR Addresses
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  010C                     	;# 
   198  010D                     	;# 
   199  010E                     	;# 
   200  010F                     	;# 
   201  0110                     	;# 
   202  0111                     	;# 
   203  0112                     	;# 
   204  0113                     	;# 
   205  0114                     	;# 
   206  0115                     	;# 
   207  0116                     	;# 
   208  0117                     	;# 
   209  0118                     	;# 
   210  0119                     	;# 
   211  011A                     	;# 
   212  011B                     	;# 
   213  011C                     	;# 
   214  011D                     	;# 
   215  011D                     	;# 
   216  011D                     	;# 
   217  011E                     	;# 
   218  011F                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  018E                     	;# 
   222  018F                     	;# 
   223  0190                     	;# 
   224  0191                     	;# 
   225  0191                     	;# 
   226  0192                     	;# 
   227  0193                     	;# 
   228  0193                     	;# 
   229  0193                     	;# 
   230  0194                     	;# 
   231  0195                     	;# 
   232  0196                     	;# 
   233  0197                     	;# 
   234  0199                     	;# 
   235  0199                     	;# 
   236  0199                     	;# 
   237  019A                     	;# 
   238  019A                     	;# 
   239  019A                     	;# 
   240  019B                     	;# 
   241  019B                     	;# 
   242  019B                     	;# 
   243  019B                     	;# 
   244  019B                     	;# 
   245  019C                     	;# 
   246  019C                     	;# 
   247  019C                     	;# 
   248  019D                     	;# 
   249  019D                     	;# 
   250  019D                     	;# 
   251  019E                     	;# 
   252  019E                     	;# 
   253  019E                     	;# 
   254  019F                     	;# 
   255  019F                     	;# 
   256  019F                     	;# 
   257  019F                     	;# 
   258  019F                     	;# 
   259  020C                     	;# 
   260  020D                     	;# 
   261  020E                     	;# 
   262  020F                     	;# 
   263  0210                     	;# 
   264  0211                     	;# 
   265  0211                     	;# 
   266  0212                     	;# 
   267  0212                     	;# 
   268  0213                     	;# 
   269  0213                     	;# 
   270  0214                     	;# 
   271  0214                     	;# 
   272  0215                     	;# 
   273  0215                     	;# 
   274  0215                     	;# 
   275  0215                     	;# 
   276  0216                     	;# 
   277  0216                     	;# 
   278  0217                     	;# 
   279  0217                     	;# 
   280  028C                     	;# 
   281  028D                     	;# 
   282  028E                     	;# 
   283  028F                     	;# 
   284  0290                     	;# 
   285  0291                     	;# 
   286  0291                     	;# 
   287  0292                     	;# 
   288  0293                     	;# 
   289  0298                     	;# 
   290  0298                     	;# 
   291  0299                     	;# 
   292  029A                     	;# 
   293  030C                     	;# 
   294  030D                     	;# 
   295  030E                     	;# 
   296  030F                     	;# 
   297  0310                     	;# 
   298  0311                     	;# 
   299  0311                     	;# 
   300  0312                     	;# 
   301  0313                     	;# 
   302  038C                     	;# 
   303  038D                     	;# 
   304  038E                     	;# 
   305  038F                     	;# 
   306  0390                     	;# 
   307  0391                     	;# 
   308  0392                     	;# 
   309  0393                     	;# 
   310  0394                     	;# 
   311  0395                     	;# 
   312  0396                     	;# 
   313  0397                     	;# 
   314  0398                     	;# 
   315  0399                     	;# 
   316  039D                     	;# 
   317  039E                     	;# 
   318  039F                     	;# 
   319  0511                     	;# 
   320  0513                     	;# 
   321  0515                     	;# 
   322  051A                     	;# 
   323  0591                     	;# 
   324  0592                     	;# 
   325  0592                     	;# 
   326  0593                     	;# 
   327  0594                     	;# 
   328  0594                     	;# 
   329  0595                     	;# 
   330  0596                     	;# 
   331  0596                     	;# 
   332  0E91                     	;# 
   333  0E92                     	;# 
   334  0E93                     	;# 
   335  0E94                     	;# 
   336  0E95                     	;# 
   337  0E96                     	;# 
   338  0E97                     	;# 
   339  0E98                     	;# 
   340  0E99                     	;# 
   341  0E9A                     	;# 
   342  0E9B                     	;# 
   343  0E9C                     	;# 
   344  0E9D                     	;# 
   345  0E9E                     	;# 
   346  0E9F                     	;# 
   347  0EA0                     	;# 
   348  0EA1                     	;# 
   349  0EA1                     	;# 
   350  0EA2                     	;# 
   351  0EA3                     	;# 
   352  0EA3                     	;# 
   353  0EA4                     	;# 
   354  0EA5                     	;# 
   355  0EA5                     	;# 
   356  0EA6                     	;# 
   357  0EA7                     	;# 
   358  0EA7                     	;# 
   359  0EA8                     	;# 
   360  0EA9                     	;# 
   361  0EAA                     	;# 
   362  0EAB                     	;# 
   363  0EAC                     	;# 
   364  0EAD                     	;# 
   365  0EAE                     	;# 
   366  0EAF                     	;# 
   367  0EB1                     	;# 
   368  0EB2                     	;# 
   369  0EB3                     	;# 
   370  0EB4                     	;# 
   371  0EB5                     	;# 
   372  0EB6                     	;# 
   373  0EB7                     	;# 
   374  0EB8                     	;# 
   375  0EB9                     	;# 
   376  0EBA                     	;# 
   377  0EBB                     	;# 
   378  0EBC                     	;# 
   379  0EBD                     	;# 
   380  0EBE                     	;# 
   381  0EBF                     	;# 
   382  0EC0                     	;# 
   383  0EC1                     	;# 
   384  0EC1                     	;# 
   385  0EC2                     	;# 
   386  0EC3                     	;# 
   387  0EC3                     	;# 
   388  0EC4                     	;# 
   389  0EC5                     	;# 
   390  0EC5                     	;# 
   391  0EC6                     	;# 
   392  0EC7                     	;# 
   393  0EC7                     	;# 
   394  0EC8                     	;# 
   395  0EC9                     	;# 
   396  0ECA                     	;# 
   397  0ECB                     	;# 
   398  0ECC                     	;# 
   399  0ECD                     	;# 
   400  0ECE                     	;# 
   401  0ECF                     	;# 
   402  0ED1                     	;# 
   403  0ED2                     	;# 
   404  0ED3                     	;# 
   405  0ED4                     	;# 
   406  0ED5                     	;# 
   407  0ED6                     	;# 
   408  0ED7                     	;# 
   409  0ED8                     	;# 
   410  0ED9                     	;# 
   411  0EDA                     	;# 
   412  0EDB                     	;# 
   413  0EDC                     	;# 
   414  0EDD                     	;# 
   415  0EDE                     	;# 
   416  0EDF                     	;# 
   417  0EE0                     	;# 
   418  0EE1                     	;# 
   419  0EE1                     	;# 
   420  0EE2                     	;# 
   421  0EE3                     	;# 
   422  0EE3                     	;# 
   423  0EE4                     	;# 
   424  0EE5                     	;# 
   425  0EE5                     	;# 
   426  0EE6                     	;# 
   427  0EE7                     	;# 
   428  0EE7                     	;# 
   429  0EE8                     	;# 
   430  0EE9                     	;# 
   431  0EEA                     	;# 
   432  0EEB                     	;# 
   433  0EEC                     	;# 
   434  0EED                     	;# 
   435  0EEE                     	;# 
   436  0EEF                     	;# 
   437  0F11                     	;# 
   438  0F12                     	;# 
   439  0F13                     	;# 
   440  0F14                     	;# 
   441  0F15                     	;# 
   442  0F16                     	;# 
   443  0F17                     	;# 
   444  0F18                     	;# 
   445  0F19                     	;# 
   446  0F1A                     	;# 
   447  0F1B                     	;# 
   448  0F1C                     	;# 
   449  0F1D                     	;# 
   450  0F1E                     	;# 
   451  0F1F                     	;# 
   452  0F20                     	;# 
   453  0F21                     	;# 
   454  0F21                     	;# 
   455  0F22                     	;# 
   456  0F23                     	;# 
   457  0F23                     	;# 
   458  0F24                     	;# 
   459  0F25                     	;# 
   460  0F25                     	;# 
   461  0F26                     	;# 
   462  0F27                     	;# 
   463  0F27                     	;# 
   464  0F28                     	;# 
   465  0F29                     	;# 
   466  0F2A                     	;# 
   467  0F2B                     	;# 
   468  0F2C                     	;# 
   469  0F2D                     	;# 
   470  0F2E                     	;# 
   471  0F2F                     	;# 
   472  0FE4                     	;# 
   473  0FE5                     	;# 
   474  0FE6                     	;# 
   475  0FE7                     	;# 
   476  0FE8                     	;# 
   477  0FE9                     	;# 
   478  0FEA                     	;# 
   479  0FEB                     	;# 
   480  0FED                     	;# 
   481  0FEE                     	;# 
   482  0FEF                     	;# 
   483  0000                     	;# 
   484  0001                     	;# 
   485  0002                     	;# 
   486  0003                     	;# 
   487  0004                     	;# 
   488  0005                     	;# 
   489  0006                     	;# 
   490  0007                     	;# 
   491  0008                     	;# 
   492  0009                     	;# 
   493  000A                     	;# 
   494  000B                     	;# 
   495  000C                     	;# 
   496  000D                     	;# 
   497  000E                     	;# 
   498  000F                     	;# 
   499  0010                     	;# 
   500  0011                     	;# 
   501  0012                     	;# 
   502  0013                     	;# 
   503  0014                     	;# 
   504  0015                     	;# 
   505  0016                     	;# 
   506  0016                     	;# 
   507  0017                     	;# 
   508  0018                     	;# 
   509  0019                     	;# 
   510  001A                     	;# 
   511  001B                     	;# 
   512  001C                     	;# 
   513  008C                     	;# 
   514  008D                     	;# 
   515  008E                     	;# 
   516  008F                     	;# 
   517  0090                     	;# 
   518  0091                     	;# 
   519  0092                     	;# 
   520  0093                     	;# 
   521  0094                     	;# 
   522  0095                     	;# 
   523  0096                     	;# 
   524  0097                     	;# 
   525  0098                     	;# 
   526  0099                     	;# 
   527  009A                     	;# 
   528  009B                     	;# 
   529  009B                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  0110                     	;# 
   539  0111                     	;# 
   540  0112                     	;# 
   541  0113                     	;# 
   542  0114                     	;# 
   543  0115                     	;# 
   544  0116                     	;# 
   545  0117                     	;# 
   546  0118                     	;# 
   547  0119                     	;# 
   548  011A                     	;# 
   549  011B                     	;# 
   550  011C                     	;# 
   551  011D                     	;# 
   552  011D                     	;# 
   553  011D                     	;# 
   554  011E                     	;# 
   555  011F                     	;# 
   556  018C                     	;# 
   557  018D                     	;# 
   558  018E                     	;# 
   559  018F                     	;# 
   560  0190                     	;# 
   561  0191                     	;# 
   562  0191                     	;# 
   563  0192                     	;# 
   564  0193                     	;# 
   565  0193                     	;# 
   566  0193                     	;# 
   567  0194                     	;# 
   568  0195                     	;# 
   569  0196                     	;# 
   570  0197                     	;# 
   571  0199                     	;# 
   572  0199                     	;# 
   573  0199                     	;# 
   574  019A                     	;# 
   575  019A                     	;# 
   576  019A                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019B                     	;# 
   581  019B                     	;# 
   582  019C                     	;# 
   583  019C                     	;# 
   584  019C                     	;# 
   585  019D                     	;# 
   586  019D                     	;# 
   587  019D                     	;# 
   588  019E                     	;# 
   589  019E                     	;# 
   590  019E                     	;# 
   591  019F                     	;# 
   592  019F                     	;# 
   593  019F                     	;# 
   594  019F                     	;# 
   595  019F                     	;# 
   596  020C                     	;# 
   597  020D                     	;# 
   598  020E                     	;# 
   599  020F                     	;# 
   600  0210                     	;# 
   601  0211                     	;# 
   602  0211                     	;# 
   603  0212                     	;# 
   604  0212                     	;# 
   605  0213                     	;# 
   606  0213                     	;# 
   607  0214                     	;# 
   608  0214                     	;# 
   609  0215                     	;# 
   610  0215                     	;# 
   611  0215                     	;# 
   612  0215                     	;# 
   613  0216                     	;# 
   614  0216                     	;# 
   615  0217                     	;# 
   616  0217                     	;# 
   617  028C                     	;# 
   618  028D                     	;# 
   619  028E                     	;# 
   620  028F                     	;# 
   621  0290                     	;# 
   622  0291                     	;# 
   623  0291                     	;# 
   624  0292                     	;# 
   625  0293                     	;# 
   626  0298                     	;# 
   627  0298                     	;# 
   628  0299                     	;# 
   629  029A                     	;# 
   630  030C                     	;# 
   631  030D                     	;# 
   632  030E                     	;# 
   633  030F                     	;# 
   634  0310                     	;# 
   635  0311                     	;# 
   636  0311                     	;# 
   637  0312                     	;# 
   638  0313                     	;# 
   639  038C                     	;# 
   640  038D                     	;# 
   641  038E                     	;# 
   642  038F                     	;# 
   643  0390                     	;# 
   644  0391                     	;# 
   645  0392                     	;# 
   646  0393                     	;# 
   647  0394                     	;# 
   648  0395                     	;# 
   649  0396                     	;# 
   650  0397                     	;# 
   651  0398                     	;# 
   652  0399                     	;# 
   653  039D                     	;# 
   654  039E                     	;# 
   655  039F                     	;# 
   656  0511                     	;# 
   657  0513                     	;# 
   658  0515                     	;# 
   659  051A                     	;# 
   660  0591                     	;# 
   661  0592                     	;# 
   662  0592                     	;# 
   663  0593                     	;# 
   664  0594                     	;# 
   665  0594                     	;# 
   666  0595                     	;# 
   667  0596                     	;# 
   668  0596                     	;# 
   669  0E91                     	;# 
   670  0E92                     	;# 
   671  0E93                     	;# 
   672  0E94                     	;# 
   673  0E95                     	;# 
   674  0E96                     	;# 
   675  0E97                     	;# 
   676  0E98                     	;# 
   677  0E99                     	;# 
   678  0E9A                     	;# 
   679  0E9B                     	;# 
   680  0E9C                     	;# 
   681  0E9D                     	;# 
   682  0E9E                     	;# 
   683  0E9F                     	;# 
   684  0EA0                     	;# 
   685  0EA1                     	;# 
   686  0EA1                     	;# 
   687  0EA2                     	;# 
   688  0EA3                     	;# 
   689  0EA3                     	;# 
   690  0EA4                     	;# 
   691  0EA5                     	;# 
   692  0EA5                     	;# 
   693  0EA6                     	;# 
   694  0EA7                     	;# 
   695  0EA7                     	;# 
   696  0EA8                     	;# 
   697  0EA9                     	;# 
   698  0EAA                     	;# 
   699  0EAB                     	;# 
   700  0EAC                     	;# 
   701  0EAD                     	;# 
   702  0EAE                     	;# 
   703  0EAF                     	;# 
   704  0EB1                     	;# 
   705  0EB2                     	;# 
   706  0EB3                     	;# 
   707  0EB4                     	;# 
   708  0EB5                     	;# 
   709  0EB6                     	;# 
   710  0EB7                     	;# 
   711  0EB8                     	;# 
   712  0EB9                     	;# 
   713  0EBA                     	;# 
   714  0EBB                     	;# 
   715  0EBC                     	;# 
   716  0EBD                     	;# 
   717  0EBE                     	;# 
   718  0EBF                     	;# 
   719  0EC0                     	;# 
   720  0EC1                     	;# 
   721  0EC1                     	;# 
   722  0EC2                     	;# 
   723  0EC3                     	;# 
   724  0EC3                     	;# 
   725  0EC4                     	;# 
   726  0EC5                     	;# 
   727  0EC5                     	;# 
   728  0EC6                     	;# 
   729  0EC7                     	;# 
   730  0EC7                     	;# 
   731  0EC8                     	;# 
   732  0EC9                     	;# 
   733  0ECA                     	;# 
   734  0ECB                     	;# 
   735  0ECC                     	;# 
   736  0ECD                     	;# 
   737  0ECE                     	;# 
   738  0ECF                     	;# 
   739  0ED1                     	;# 
   740  0ED2                     	;# 
   741  0ED3                     	;# 
   742  0ED4                     	;# 
   743  0ED5                     	;# 
   744  0ED6                     	;# 
   745  0ED7                     	;# 
   746  0ED8                     	;# 
   747  0ED9                     	;# 
   748  0EDA                     	;# 
   749  0EDB                     	;# 
   750  0EDC                     	;# 
   751  0EDD                     	;# 
   752  0EDE                     	;# 
   753  0EDF                     	;# 
   754  0EE0                     	;# 
   755  0EE1                     	;# 
   756  0EE1                     	;# 
   757  0EE2                     	;# 
   758  0EE3                     	;# 
   759  0EE3                     	;# 
   760  0EE4                     	;# 
   761  0EE5                     	;# 
   762  0EE5                     	;# 
   763  0EE6                     	;# 
   764  0EE7                     	;# 
   765  0EE7                     	;# 
   766  0EE8                     	;# 
   767  0EE9                     	;# 
   768  0EEA                     	;# 
   769  0EEB                     	;# 
   770  0EEC                     	;# 
   771  0EED                     	;# 
   772  0EEE                     	;# 
   773  0EEF                     	;# 
   774  0F11                     	;# 
   775  0F12                     	;# 
   776  0F13                     	;# 
   777  0F14                     	;# 
   778  0F15                     	;# 
   779  0F16                     	;# 
   780  0F17                     	;# 
   781  0F18                     	;# 
   782  0F19                     	;# 
   783  0F1A                     	;# 
   784  0F1B                     	;# 
   785  0F1C                     	;# 
   786  0F1D                     	;# 
   787  0F1E                     	;# 
   788  0F1F                     	;# 
   789  0F20                     	;# 
   790  0F21                     	;# 
   791  0F21                     	;# 
   792  0F22                     	;# 
   793  0F23                     	;# 
   794  0F23                     	;# 
   795  0F24                     	;# 
   796  0F25                     	;# 
   797  0F25                     	;# 
   798  0F26                     	;# 
   799  0F27                     	;# 
   800  0F27                     	;# 
   801  0F28                     	;# 
   802  0F29                     	;# 
   803  0F2A                     	;# 
   804  0F2B                     	;# 
   805  0F2C                     	;# 
   806  0F2D                     	;# 
   807  0F2E                     	;# 
   808  0F2F                     	;# 
   809  0FE4                     	;# 
   810  0FE5                     	;# 
   811  0FE6                     	;# 
   812  0FE7                     	;# 
   813  0FE8                     	;# 
   814  0FE9                     	;# 
   815  0FEA                     	;# 
   816  0FEB                     	;# 
   817  0FED                     	;# 
   818  0FEE                     	;# 
   819  0FEF                     	;# 
   820  0000                     	;# 
   821  0001                     	;# 
   822  0002                     	;# 
   823  0003                     	;# 
   824  0004                     	;# 
   825  0005                     	;# 
   826  0006                     	;# 
   827  0007                     	;# 
   828  0008                     	;# 
   829  0009                     	;# 
   830  000A                     	;# 
   831  000B                     	;# 
   832  000C                     	;# 
   833  000D                     	;# 
   834  000E                     	;# 
   835  000F                     	;# 
   836  0010                     	;# 
   837  0011                     	;# 
   838  0012                     	;# 
   839  0013                     	;# 
   840  0014                     	;# 
   841  0015                     	;# 
   842  0016                     	;# 
   843  0016                     	;# 
   844  0017                     	;# 
   845  0018                     	;# 
   846  0019                     	;# 
   847  001A                     	;# 
   848  001B                     	;# 
   849  001C                     	;# 
   850  008C                     	;# 
   851  008D                     	;# 
   852  008E                     	;# 
   853  008F                     	;# 
   854  0090                     	;# 
   855  0091                     	;# 
   856  0092                     	;# 
   857  0093                     	;# 
   858  0094                     	;# 
   859  0095                     	;# 
   860  0096                     	;# 
   861  0097                     	;# 
   862  0098                     	;# 
   863  0099                     	;# 
   864  009A                     	;# 
   865  009B                     	;# 
   866  009B                     	;# 
   867  009C                     	;# 
   868  009D                     	;# 
   869  009E                     	;# 
   870  009F                     	;# 
   871  010C                     	;# 
   872  010D                     	;# 
   873  010E                     	;# 
   874  010F                     	;# 
   875  0110                     	;# 
   876  0111                     	;# 
   877  0112                     	;# 
   878  0113                     	;# 
   879  0114                     	;# 
   880  0115                     	;# 
   881  0116                     	;# 
   882  0117                     	;# 
   883  0118                     	;# 
   884  0119                     	;# 
   885  011A                     	;# 
   886  011B                     	;# 
   887  011C                     	;# 
   888  011D                     	;# 
   889  011D                     	;# 
   890  011D                     	;# 
   891  011E                     	;# 
   892  011F                     	;# 
   893  018C                     	;# 
   894  018D                     	;# 
   895  018E                     	;# 
   896  018F                     	;# 
   897  0190                     	;# 
   898  0191                     	;# 
   899  0191                     	;# 
   900  0192                     	;# 
   901  0193                     	;# 
   902  0193                     	;# 
   903  0193                     	;# 
   904  0194                     	;# 
   905  0195                     	;# 
   906  0196                     	;# 
   907  0197                     	;# 
   908  0199                     	;# 
   909  0199                     	;# 
   910  0199                     	;# 
   911  019A                     	;# 
   912  019A                     	;# 
   913  019A                     	;# 
   914  019B                     	;# 
   915  019B                     	;# 
   916  019B                     	;# 
   917  019B                     	;# 
   918  019B                     	;# 
   919  019C                     	;# 
   920  019C                     	;# 
   921  019C                     	;# 
   922  019D                     	;# 
   923  019D                     	;# 
   924  019D                     	;# 
   925  019E                     	;# 
   926  019E                     	;# 
   927  019E                     	;# 
   928  019F                     	;# 
   929  019F                     	;# 
   930  019F                     	;# 
   931  019F                     	;# 
   932  019F                     	;# 
   933  020C                     	;# 
   934  020D                     	;# 
   935  020E                     	;# 
   936  020F                     	;# 
   937  0210                     	;# 
   938  0211                     	;# 
   939  0211                     	;# 
   940  0212                     	;# 
   941  0212                     	;# 
   942  0213                     	;# 
   943  0213                     	;# 
   944  0214                     	;# 
   945  0214                     	;# 
   946  0215                     	;# 
   947  0215                     	;# 
   948  0215                     	;# 
   949  0215                     	;# 
   950  0216                     	;# 
   951  0216                     	;# 
   952  0217                     	;# 
   953  0217                     	;# 
   954  028C                     	;# 
   955  028D                     	;# 
   956  028E                     	;# 
   957  028F                     	;# 
   958  0290                     	;# 
   959  0291                     	;# 
   960  0291                     	;# 
   961  0292                     	;# 
   962  0293                     	;# 
   963  0298                     	;# 
   964  0298                     	;# 
   965  0299                     	;# 
   966  029A                     	;# 
   967  030C                     	;# 
   968  030D                     	;# 
   969  030E                     	;# 
   970  030F                     	;# 
   971  0310                     	;# 
   972  0311                     	;# 
   973  0311                     	;# 
   974  0312                     	;# 
   975  0313                     	;# 
   976  038C                     	;# 
   977  038D                     	;# 
   978  038E                     	;# 
   979  038F                     	;# 
   980  0390                     	;# 
   981  0391                     	;# 
   982  0392                     	;# 
   983  0393                     	;# 
   984  0394                     	;# 
   985  0395                     	;# 
   986  0396                     	;# 
   987  0397                     	;# 
   988  0398                     	;# 
   989  0399                     	;# 
   990  039D                     	;# 
   991  039E                     	;# 
   992  039F                     	;# 
   993  0511                     	;# 
   994  0513                     	;# 
   995  0515                     	;# 
   996  051A                     	;# 
   997  0591                     	;# 
   998  0592                     	;# 
   999  0592                     	;# 
  1000  0593                     	;# 
  1001  0594                     	;# 
  1002  0594                     	;# 
  1003  0595                     	;# 
  1004  0596                     	;# 
  1005  0596                     	;# 
  1006  0E91                     	;# 
  1007  0E92                     	;# 
  1008  0E93                     	;# 
  1009  0E94                     	;# 
  1010  0E95                     	;# 
  1011  0E96                     	;# 
  1012  0E97                     	;# 
  1013  0E98                     	;# 
  1014  0E99                     	;# 
  1015  0E9A                     	;# 
  1016  0E9B                     	;# 
  1017  0E9C                     	;# 
  1018  0E9D                     	;# 
  1019  0E9E                     	;# 
  1020  0E9F                     	;# 
  1021  0EA0                     	;# 
  1022  0EA1                     	;# 
  1023  0EA1                     	;# 
  1024  0EA2                     	;# 
  1025  0EA3                     	;# 
  1026  0EA3                     	;# 
  1027  0EA4                     	;# 
  1028  0EA5                     	;# 
  1029  0EA5                     	;# 
  1030  0EA6                     	;# 
  1031  0EA7                     	;# 
  1032  0EA7                     	;# 
  1033  0EA8                     	;# 
  1034  0EA9                     	;# 
  1035  0EAA                     	;# 
  1036  0EAB                     	;# 
  1037  0EAC                     	;# 
  1038  0EAD                     	;# 
  1039  0EAE                     	;# 
  1040  0EAF                     	;# 
  1041  0EB1                     	;# 
  1042  0EB2                     	;# 
  1043  0EB3                     	;# 
  1044  0EB4                     	;# 
  1045  0EB5                     	;# 
  1046  0EB6                     	;# 
  1047  0EB7                     	;# 
  1048  0EB8                     	;# 
  1049  0EB9                     	;# 
  1050  0EBA                     	;# 
  1051  0EBB                     	;# 
  1052  0EBC                     	;# 
  1053  0EBD                     	;# 
  1054  0EBE                     	;# 
  1055  0EBF                     	;# 
  1056  0EC0                     	;# 
  1057  0EC1                     	;# 
  1058  0EC1                     	;# 
  1059  0EC2                     	;# 
  1060  0EC3                     	;# 
  1061  0EC3                     	;# 
  1062  0EC4                     	;# 
  1063  0EC5                     	;# 
  1064  0EC5                     	;# 
  1065  0EC6                     	;# 
  1066  0EC7                     	;# 
  1067  0EC7                     	;# 
  1068  0EC8                     	;# 
  1069  0EC9                     	;# 
  1070  0ECA                     	;# 
  1071  0ECB                     	;# 
  1072  0ECC                     	;# 
  1073  0ECD                     	;# 
  1074  0ECE                     	;# 
  1075  0ECF                     	;# 
  1076  0ED1                     	;# 
  1077  0ED2                     	;# 
  1078  0ED3                     	;# 
  1079  0ED4                     	;# 
  1080  0ED5                     	;# 
  1081  0ED6                     	;# 
  1082  0ED7                     	;# 
  1083  0ED8                     	;# 
  1084  0ED9                     	;# 
  1085  0EDA                     	;# 
  1086  0EDB                     	;# 
  1087  0EDC                     	;# 
  1088  0EDD                     	;# 
  1089  0EDE                     	;# 
  1090  0EDF                     	;# 
  1091  0EE0                     	;# 
  1092  0EE1                     	;# 
  1093  0EE1                     	;# 
  1094  0EE2                     	;# 
  1095  0EE3                     	;# 
  1096  0EE3                     	;# 
  1097  0EE4                     	;# 
  1098  0EE5                     	;# 
  1099  0EE5                     	;# 
  1100  0EE6                     	;# 
  1101  0EE7                     	;# 
  1102  0EE7                     	;# 
  1103  0EE8                     	;# 
  1104  0EE9                     	;# 
  1105  0EEA                     	;# 
  1106  0EEB                     	;# 
  1107  0EEC                     	;# 
  1108  0EED                     	;# 
  1109  0EEE                     	;# 
  1110  0EEF                     	;# 
  1111  0F11                     	;# 
  1112  0F12                     	;# 
  1113  0F13                     	;# 
  1114  0F14                     	;# 
  1115  0F15                     	;# 
  1116  0F16                     	;# 
  1117  0F17                     	;# 
  1118  0F18                     	;# 
  1119  0F19                     	;# 
  1120  0F1A                     	;# 
  1121  0F1B                     	;# 
  1122  0F1C                     	;# 
  1123  0F1D                     	;# 
  1124  0F1E                     	;# 
  1125  0F1F                     	;# 
  1126  0F20                     	;# 
  1127  0F21                     	;# 
  1128  0F21                     	;# 
  1129  0F22                     	;# 
  1130  0F23                     	;# 
  1131  0F23                     	;# 
  1132  0F24                     	;# 
  1133  0F25                     	;# 
  1134  0F25                     	;# 
  1135  0F26                     	;# 
  1136  0F27                     	;# 
  1137  0F27                     	;# 
  1138  0F28                     	;# 
  1139  0F29                     	;# 
  1140  0F2A                     	;# 
  1141  0F2B                     	;# 
  1142  0F2C                     	;# 
  1143  0F2D                     	;# 
  1144  0F2E                     	;# 
  1145  0F2F                     	;# 
  1146  0FE4                     	;# 
  1147  0FE5                     	;# 
  1148  0FE6                     	;# 
  1149  0FE7                     	;# 
  1150  0FE8                     	;# 
  1151  0FE9                     	;# 
  1152  0FEA                     	;# 
  1153  0FEB                     	;# 
  1154  0FED                     	;# 
  1155  0FEE                     	;# 
  1156  0FEF                     	;# 
  1157  0000                     	;# 
  1158  0001                     	;# 
  1159  0002                     	;# 
  1160  0003                     	;# 
  1161  0004                     	;# 
  1162  0005                     	;# 
  1163  0006                     	;# 
  1164  0007                     	;# 
  1165  0008                     	;# 
  1166  0009                     	;# 
  1167  000A                     	;# 
  1168  000B                     	;# 
  1169  000C                     	;# 
  1170  000D                     	;# 
  1171  000E                     	;# 
  1172  000F                     	;# 
  1173  0010                     	;# 
  1174  0011                     	;# 
  1175  0012                     	;# 
  1176  0013                     	;# 
  1177  0014                     	;# 
  1178  0015                     	;# 
  1179  0016                     	;# 
  1180  0016                     	;# 
  1181  0017                     	;# 
  1182  0018                     	;# 
  1183  0019                     	;# 
  1184  001A                     	;# 
  1185  001B                     	;# 
  1186  001C                     	;# 
  1187  008C                     	;# 
  1188  008D                     	;# 
  1189  008E                     	;# 
  1190  008F                     	;# 
  1191  0090                     	;# 
  1192  0091                     	;# 
  1193  0092                     	;# 
  1194  0093                     	;# 
  1195  0094                     	;# 
  1196  0095                     	;# 
  1197  0096                     	;# 
  1198  0097                     	;# 
  1199  0098                     	;# 
  1200  0099                     	;# 
  1201  009A                     	;# 
  1202  009B                     	;# 
  1203  009B                     	;# 
  1204  009C                     	;# 
  1205  009D                     	;# 
  1206  009E                     	;# 
  1207  009F                     	;# 
  1208  010C                     	;# 
  1209  010D                     	;# 
  1210  010E                     	;# 
  1211  010F                     	;# 
  1212  0110                     	;# 
  1213  0111                     	;# 
  1214  0112                     	;# 
  1215  0113                     	;# 
  1216  0114                     	;# 
  1217  0115                     	;# 
  1218  0116                     	;# 
  1219  0117                     	;# 
  1220  0118                     	;# 
  1221  0119                     	;# 
  1222  011A                     	;# 
  1223  011B                     	;# 
  1224  011C                     	;# 
  1225  011D                     	;# 
  1226  011D                     	;# 
  1227  011D                     	;# 
  1228  011E                     	;# 
  1229  011F                     	;# 
  1230  018C                     	;# 
  1231  018D                     	;# 
  1232  018E                     	;# 
  1233  018F                     	;# 
  1234  0190                     	;# 
  1235  0191                     	;# 
  1236  0191                     	;# 
  1237  0192                     	;# 
  1238  0193                     	;# 
  1239  0193                     	;# 
  1240  0193                     	;# 
  1241  0194                     	;# 
  1242  0195                     	;# 
  1243  0196                     	;# 
  1244  0197                     	;# 
  1245  0199                     	;# 
  1246  0199                     	;# 
  1247  0199                     	;# 
  1248  019A                     	;# 
  1249  019A                     	;# 
  1250  019A                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019D                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019E                     	;# 
  1264  019E                     	;# 
  1265  019F                     	;# 
  1266  019F                     	;# 
  1267  019F                     	;# 
  1268  019F                     	;# 
  1269  019F                     	;# 
  1270  020C                     	;# 
  1271  020D                     	;# 
  1272  020E                     	;# 
  1273  020F                     	;# 
  1274  0210                     	;# 
  1275  0211                     	;# 
  1276  0211                     	;# 
  1277  0212                     	;# 
  1278  0212                     	;# 
  1279  0213                     	;# 
  1280  0213                     	;# 
  1281  0214                     	;# 
  1282  0214                     	;# 
  1283  0215                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  028C                     	;# 
  1292  028D                     	;# 
  1293  028E                     	;# 
  1294  028F                     	;# 
  1295  0290                     	;# 
  1296  0291                     	;# 
  1297  0291                     	;# 
  1298  0292                     	;# 
  1299  0293                     	;# 
  1300  0298                     	;# 
  1301  0298                     	;# 
  1302  0299                     	;# 
  1303  029A                     	;# 
  1304  030C                     	;# 
  1305  030D                     	;# 
  1306  030E                     	;# 
  1307  030F                     	;# 
  1308  0310                     	;# 
  1309  0311                     	;# 
  1310  0311                     	;# 
  1311  0312                     	;# 
  1312  0313                     	;# 
  1313  038C                     	;# 
  1314  038D                     	;# 
  1315  038E                     	;# 
  1316  038F                     	;# 
  1317  0390                     	;# 
  1318  0391                     	;# 
  1319  0392                     	;# 
  1320  0393                     	;# 
  1321  0394                     	;# 
  1322  0395                     	;# 
  1323  0396                     	;# 
  1324  0397                     	;# 
  1325  0398                     	;# 
  1326  0399                     	;# 
  1327  039D                     	;# 
  1328  039E                     	;# 
  1329  039F                     	;# 
  1330  0511                     	;# 
  1331  0513                     	;# 
  1332  0515                     	;# 
  1333  051A                     	;# 
  1334  0591                     	;# 
  1335  0592                     	;# 
  1336  0592                     	;# 
  1337  0593                     	;# 
  1338  0594                     	;# 
  1339  0594                     	;# 
  1340  0595                     	;# 
  1341  0596                     	;# 
  1342  0596                     	;# 
  1343  0E91                     	;# 
  1344  0E92                     	;# 
  1345  0E93                     	;# 
  1346  0E94                     	;# 
  1347  0E95                     	;# 
  1348  0E96                     	;# 
  1349  0E97                     	;# 
  1350  0E98                     	;# 
  1351  0E99                     	;# 
  1352  0E9A                     	;# 
  1353  0E9B                     	;# 
  1354  0E9C                     	;# 
  1355  0E9D                     	;# 
  1356  0E9E                     	;# 
  1357  0E9F                     	;# 
  1358  0EA0                     	;# 
  1359  0EA1                     	;# 
  1360  0EA1                     	;# 
  1361  0EA2                     	;# 
  1362  0EA3                     	;# 
  1363  0EA3                     	;# 
  1364  0EA4                     	;# 
  1365  0EA5                     	;# 
  1366  0EA5                     	;# 
  1367  0EA6                     	;# 
  1368  0EA7                     	;# 
  1369  0EA7                     	;# 
  1370  0EA8                     	;# 
  1371  0EA9                     	;# 
  1372  0EAA                     	;# 
  1373  0EAB                     	;# 
  1374  0EAC                     	;# 
  1375  0EAD                     	;# 
  1376  0EAE                     	;# 
  1377  0EAF                     	;# 
  1378  0EB1                     	;# 
  1379  0EB2                     	;# 
  1380  0EB3                     	;# 
  1381  0EB4                     	;# 
  1382  0EB5                     	;# 
  1383  0EB6                     	;# 
  1384  0EB7                     	;# 
  1385  0EB8                     	;# 
  1386  0EB9                     	;# 
  1387  0EBA                     	;# 
  1388  0EBB                     	;# 
  1389  0EBC                     	;# 
  1390  0EBD                     	;# 
  1391  0EBE                     	;# 
  1392  0EBF                     	;# 
  1393  0EC0                     	;# 
  1394  0EC1                     	;# 
  1395  0EC1                     	;# 
  1396  0EC2                     	;# 
  1397  0EC3                     	;# 
  1398  0EC3                     	;# 
  1399  0EC4                     	;# 
  1400  0EC5                     	;# 
  1401  0EC5                     	;# 
  1402  0EC6                     	;# 
  1403  0EC7                     	;# 
  1404  0EC7                     	;# 
  1405  0EC8                     	;# 
  1406  0EC9                     	;# 
  1407  0ECA                     	;# 
  1408  0ECB                     	;# 
  1409  0ECC                     	;# 
  1410  0ECD                     	;# 
  1411  0ECE                     	;# 
  1412  0ECF                     	;# 
  1413  0ED1                     	;# 
  1414  0ED2                     	;# 
  1415  0ED3                     	;# 
  1416  0ED4                     	;# 
  1417  0ED5                     	;# 
  1418  0ED6                     	;# 
  1419  0ED7                     	;# 
  1420  0ED8                     	;# 
  1421  0ED9                     	;# 
  1422  0EDA                     	;# 
  1423  0EDB                     	;# 
  1424  0EDC                     	;# 
  1425  0EDD                     	;# 
  1426  0EDE                     	;# 
  1427  0EDF                     	;# 
  1428  0EE0                     	;# 
  1429  0EE1                     	;# 
  1430  0EE1                     	;# 
  1431  0EE2                     	;# 
  1432  0EE3                     	;# 
  1433  0EE3                     	;# 
  1434  0EE4                     	;# 
  1435  0EE5                     	;# 
  1436  0EE5                     	;# 
  1437  0EE6                     	;# 
  1438  0EE7                     	;# 
  1439  0EE7                     	;# 
  1440  0EE8                     	;# 
  1441  0EE9                     	;# 
  1442  0EEA                     	;# 
  1443  0EEB                     	;# 
  1444  0EEC                     	;# 
  1445  0EED                     	;# 
  1446  0EEE                     	;# 
  1447  0EEF                     	;# 
  1448  0F11                     	;# 
  1449  0F12                     	;# 
  1450  0F13                     	;# 
  1451  0F14                     	;# 
  1452  0F15                     	;# 
  1453  0F16                     	;# 
  1454  0F17                     	;# 
  1455  0F18                     	;# 
  1456  0F19                     	;# 
  1457  0F1A                     	;# 
  1458  0F1B                     	;# 
  1459  0F1C                     	;# 
  1460  0F1D                     	;# 
  1461  0F1E                     	;# 
  1462  0F1F                     	;# 
  1463  0F20                     	;# 
  1464  0F21                     	;# 
  1465  0F21                     	;# 
  1466  0F22                     	;# 
  1467  0F23                     	;# 
  1468  0F23                     	;# 
  1469  0F24                     	;# 
  1470  0F25                     	;# 
  1471  0F25                     	;# 
  1472  0F26                     	;# 
  1473  0F27                     	;# 
  1474  0F27                     	;# 
  1475  0F28                     	;# 
  1476  0F29                     	;# 
  1477  0F2A                     	;# 
  1478  0F2B                     	;# 
  1479  0F2C                     	;# 
  1480  0F2D                     	;# 
  1481  0F2E                     	;# 
  1482  0F2F                     	;# 
  1483  0FE4                     	;# 
  1484  0FE5                     	;# 
  1485  0FE6                     	;# 
  1486  0FE7                     	;# 
  1487  0FE8                     	;# 
  1488  0FE9                     	;# 
  1489  0FEA                     	;# 
  1490  0FEB                     	;# 
  1491  0FED                     	;# 
  1492  0FEE                     	;# 
  1493  0FEF                     	;# 
  1494  0000                     	;# 
  1495  0001                     	;# 
  1496  0002                     	;# 
  1497  0003                     	;# 
  1498  0004                     	;# 
  1499  0005                     	;# 
  1500  0006                     	;# 
  1501  0007                     	;# 
  1502  0008                     	;# 
  1503  0009                     	;# 
  1504  000A                     	;# 
  1505  000B                     	;# 
  1506  000C                     	;# 
  1507  000D                     	;# 
  1508  000E                     	;# 
  1509  000F                     	;# 
  1510  0010                     	;# 
  1511  0011                     	;# 
  1512  0012                     	;# 
  1513  0013                     	;# 
  1514  0014                     	;# 
  1515  0015                     	;# 
  1516  0016                     	;# 
  1517  0016                     	;# 
  1518  0017                     	;# 
  1519  0018                     	;# 
  1520  0019                     	;# 
  1521  001A                     	;# 
  1522  001B                     	;# 
  1523  001C                     	;# 
  1524  008C                     	;# 
  1525  008D                     	;# 
  1526  008E                     	;# 
  1527  008F                     	;# 
  1528  0090                     	;# 
  1529  0091                     	;# 
  1530  0092                     	;# 
  1531  0093                     	;# 
  1532  0094                     	;# 
  1533  0095                     	;# 
  1534  0096                     	;# 
  1535  0097                     	;# 
  1536  0098                     	;# 
  1537  0099                     	;# 
  1538  009A                     	;# 
  1539  009B                     	;# 
  1540  009B                     	;# 
  1541  009C                     	;# 
  1542  009D                     	;# 
  1543  009E                     	;# 
  1544  009F                     	;# 
  1545  010C                     	;# 
  1546  010D                     	;# 
  1547  010E                     	;# 
  1548  010F                     	;# 
  1549  0110                     	;# 
  1550  0111                     	;# 
  1551  0112                     	;# 
  1552  0113                     	;# 
  1553  0114                     	;# 
  1554  0115                     	;# 
  1555  0116                     	;# 
  1556  0117                     	;# 
  1557  0118                     	;# 
  1558  0119                     	;# 
  1559  011A                     	;# 
  1560  011B                     	;# 
  1561  011C                     	;# 
  1562  011D                     	;# 
  1563  011D                     	;# 
  1564  011D                     	;# 
  1565  011E                     	;# 
  1566  011F                     	;# 
  1567  018C                     	;# 
  1568  018D                     	;# 
  1569  018E                     	;# 
  1570  018F                     	;# 
  1571  0190                     	;# 
  1572  0191                     	;# 
  1573  0191                     	;# 
  1574  0192                     	;# 
  1575  0193                     	;# 
  1576  0193                     	;# 
  1577  0193                     	;# 
  1578  0194                     	;# 
  1579  0195                     	;# 
  1580  0196                     	;# 
  1581  0197                     	;# 
  1582  0199                     	;# 
  1583  0199                     	;# 
  1584  0199                     	;# 
  1585  019A                     	;# 
  1586  019A                     	;# 
  1587  019A                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019B                     	;# 
  1591  019B                     	;# 
  1592  019B                     	;# 
  1593  019C                     	;# 
  1594  019C                     	;# 
  1595  019C                     	;# 
  1596  019D                     	;# 
  1597  019D                     	;# 
  1598  019D                     	;# 
  1599  019E                     	;# 
  1600  019E                     	;# 
  1601  019E                     	;# 
  1602  019F                     	;# 
  1603  019F                     	;# 
  1604  019F                     	;# 
  1605  019F                     	;# 
  1606  019F                     	;# 
  1607  020C                     	;# 
  1608  020D                     	;# 
  1609  020E                     	;# 
  1610  020F                     	;# 
  1611  0210                     	;# 
  1612  0211                     	;# 
  1613  0211                     	;# 
  1614  0212                     	;# 
  1615  0212                     	;# 
  1616  0213                     	;# 
  1617  0213                     	;# 
  1618  0214                     	;# 
  1619  0214                     	;# 
  1620  0215                     	;# 
  1621  0215                     	;# 
  1622  0215                     	;# 
  1623  0215                     	;# 
  1624  0216                     	;# 
  1625  0216                     	;# 
  1626  0217                     	;# 
  1627  0217                     	;# 
  1628  028C                     	;# 
  1629  028D                     	;# 
  1630  028E                     	;# 
  1631  028F                     	;# 
  1632  0290                     	;# 
  1633  0291                     	;# 
  1634  0291                     	;# 
  1635  0292                     	;# 
  1636  0293                     	;# 
  1637  0298                     	;# 
  1638  0298                     	;# 
  1639  0299                     	;# 
  1640  029A                     	;# 
  1641  030C                     	;# 
  1642  030D                     	;# 
  1643  030E                     	;# 
  1644  030F                     	;# 
  1645  0310                     	;# 
  1646  0311                     	;# 
  1647  0311                     	;# 
  1648  0312                     	;# 
  1649  0313                     	;# 
  1650  038C                     	;# 
  1651  038D                     	;# 
  1652  038E                     	;# 
  1653  038F                     	;# 
  1654  0390                     	;# 
  1655  0391                     	;# 
  1656  0392                     	;# 
  1657  0393                     	;# 
  1658  0394                     	;# 
  1659  0395                     	;# 
  1660  0396                     	;# 
  1661  0397                     	;# 
  1662  0398                     	;# 
  1663  0399                     	;# 
  1664  039D                     	;# 
  1665  039E                     	;# 
  1666  039F                     	;# 
  1667  0511                     	;# 
  1668  0513                     	;# 
  1669  0515                     	;# 
  1670  051A                     	;# 
  1671  0591                     	;# 
  1672  0592                     	;# 
  1673  0592                     	;# 
  1674  0593                     	;# 
  1675  0594                     	;# 
  1676  0594                     	;# 
  1677  0595                     	;# 
  1678  0596                     	;# 
  1679  0596                     	;# 
  1680  0E91                     	;# 
  1681  0E92                     	;# 
  1682  0E93                     	;# 
  1683  0E94                     	;# 
  1684  0E95                     	;# 
  1685  0E96                     	;# 
  1686  0E97                     	;# 
  1687  0E98                     	;# 
  1688  0E99                     	;# 
  1689  0E9A                     	;# 
  1690  0E9B                     	;# 
  1691  0E9C                     	;# 
  1692  0E9D                     	;# 
  1693  0E9E                     	;# 
  1694  0E9F                     	;# 
  1695  0EA0                     	;# 
  1696  0EA1                     	;# 
  1697  0EA1                     	;# 
  1698  0EA2                     	;# 
  1699  0EA3                     	;# 
  1700  0EA3                     	;# 
  1701  0EA4                     	;# 
  1702  0EA5                     	;# 
  1703  0EA5                     	;# 
  1704  0EA6                     	;# 
  1705  0EA7                     	;# 
  1706  0EA7                     	;# 
  1707  0EA8                     	;# 
  1708  0EA9                     	;# 
  1709  0EAA                     	;# 
  1710  0EAB                     	;# 
  1711  0EAC                     	;# 
  1712  0EAD                     	;# 
  1713  0EAE                     	;# 
  1714  0EAF                     	;# 
  1715  0EB1                     	;# 
  1716  0EB2                     	;# 
  1717  0EB3                     	;# 
  1718  0EB4                     	;# 
  1719  0EB5                     	;# 
  1720  0EB6                     	;# 
  1721  0EB7                     	;# 
  1722  0EB8                     	;# 
  1723  0EB9                     	;# 
  1724  0EBA                     	;# 
  1725  0EBB                     	;# 
  1726  0EBC                     	;# 
  1727  0EBD                     	;# 
  1728  0EBE                     	;# 
  1729  0EBF                     	;# 
  1730  0EC0                     	;# 
  1731  0EC1                     	;# 
  1732  0EC1                     	;# 
  1733  0EC2                     	;# 
  1734  0EC3                     	;# 
  1735  0EC3                     	;# 
  1736  0EC4                     	;# 
  1737  0EC5                     	;# 
  1738  0EC5                     	;# 
  1739  0EC6                     	;# 
  1740  0EC7                     	;# 
  1741  0EC7                     	;# 
  1742  0EC8                     	;# 
  1743  0EC9                     	;# 
  1744  0ECA                     	;# 
  1745  0ECB                     	;# 
  1746  0ECC                     	;# 
  1747  0ECD                     	;# 
  1748  0ECE                     	;# 
  1749  0ECF                     	;# 
  1750  0ED1                     	;# 
  1751  0ED2                     	;# 
  1752  0ED3                     	;# 
  1753  0ED4                     	;# 
  1754  0ED5                     	;# 
  1755  0ED6                     	;# 
  1756  0ED7                     	;# 
  1757  0ED8                     	;# 
  1758  0ED9                     	;# 
  1759  0EDA                     	;# 
  1760  0EDB                     	;# 
  1761  0EDC                     	;# 
  1762  0EDD                     	;# 
  1763  0EDE                     	;# 
  1764  0EDF                     	;# 
  1765  0EE0                     	;# 
  1766  0EE1                     	;# 
  1767  0EE1                     	;# 
  1768  0EE2                     	;# 
  1769  0EE3                     	;# 
  1770  0EE3                     	;# 
  1771  0EE4                     	;# 
  1772  0EE5                     	;# 
  1773  0EE5                     	;# 
  1774  0EE6                     	;# 
  1775  0EE7                     	;# 
  1776  0EE7                     	;# 
  1777  0EE8                     	;# 
  1778  0EE9                     	;# 
  1779  0EEA                     	;# 
  1780  0EEB                     	;# 
  1781  0EEC                     	;# 
  1782  0EED                     	;# 
  1783  0EEE                     	;# 
  1784  0EEF                     	;# 
  1785  0F11                     	;# 
  1786  0F12                     	;# 
  1787  0F13                     	;# 
  1788  0F14                     	;# 
  1789  0F15                     	;# 
  1790  0F16                     	;# 
  1791  0F17                     	;# 
  1792  0F18                     	;# 
  1793  0F19                     	;# 
  1794  0F1A                     	;# 
  1795  0F1B                     	;# 
  1796  0F1C                     	;# 
  1797  0F1D                     	;# 
  1798  0F1E                     	;# 
  1799  0F1F                     	;# 
  1800  0F20                     	;# 
  1801  0F21                     	;# 
  1802  0F21                     	;# 
  1803  0F22                     	;# 
  1804  0F23                     	;# 
  1805  0F23                     	;# 
  1806  0F24                     	;# 
  1807  0F25                     	;# 
  1808  0F25                     	;# 
  1809  0F26                     	;# 
  1810  0F27                     	;# 
  1811  0F27                     	;# 
  1812  0F28                     	;# 
  1813  0F29                     	;# 
  1814  0F2A                     	;# 
  1815  0F2B                     	;# 
  1816  0F2C                     	;# 
  1817  0F2D                     	;# 
  1818  0F2E                     	;# 
  1819  0F2F                     	;# 
  1820  0FE4                     	;# 
  1821  0FE5                     	;# 
  1822  0FE6                     	;# 
  1823  0FE7                     	;# 
  1824  0FE8                     	;# 
  1825  0FE9                     	;# 
  1826  0FEA                     	;# 
  1827  0FEB                     	;# 
  1828  0FED                     	;# 
  1829  0FEE                     	;# 
  1830  0FEF                     	;# 
  1831  0000                     	;# 
  1832  0001                     	;# 
  1833  0002                     	;# 
  1834  0003                     	;# 
  1835  0004                     	;# 
  1836  0005                     	;# 
  1837  0006                     	;# 
  1838  0007                     	;# 
  1839  0008                     	;# 
  1840  0009                     	;# 
  1841  000A                     	;# 
  1842  000B                     	;# 
  1843  000C                     	;# 
  1844  000D                     	;# 
  1845  000E                     	;# 
  1846  000F                     	;# 
  1847  0010                     	;# 
  1848  0011                     	;# 
  1849  0012                     	;# 
  1850  0013                     	;# 
  1851  0014                     	;# 
  1852  0015                     	;# 
  1853  0016                     	;# 
  1854  0016                     	;# 
  1855  0017                     	;# 
  1856  0018                     	;# 
  1857  0019                     	;# 
  1858  001A                     	;# 
  1859  001B                     	;# 
  1860  001C                     	;# 
  1861  008C                     	;# 
  1862  008D                     	;# 
  1863  008E                     	;# 
  1864  008F                     	;# 
  1865  0090                     	;# 
  1866  0091                     	;# 
  1867  0092                     	;# 
  1868  0093                     	;# 
  1869  0094                     	;# 
  1870  0095                     	;# 
  1871  0096                     	;# 
  1872  0097                     	;# 
  1873  0098                     	;# 
  1874  0099                     	;# 
  1875  009A                     	;# 
  1876  009B                     	;# 
  1877  009B                     	;# 
  1878  009C                     	;# 
  1879  009D                     	;# 
  1880  009E                     	;# 
  1881  009F                     	;# 
  1882  010C                     	;# 
  1883  010D                     	;# 
  1884  010E                     	;# 
  1885  010F                     	;# 
  1886  0110                     	;# 
  1887  0111                     	;# 
  1888  0112                     	;# 
  1889  0113                     	;# 
  1890  0114                     	;# 
  1891  0115                     	;# 
  1892  0116                     	;# 
  1893  0117                     	;# 
  1894  0118                     	;# 
  1895  0119                     	;# 
  1896  011A                     	;# 
  1897  011B                     	;# 
  1898  011C                     	;# 
  1899  011D                     	;# 
  1900  011D                     	;# 
  1901  011D                     	;# 
  1902  011E                     	;# 
  1903  011F                     	;# 
  1904  018C                     	;# 
  1905  018D                     	;# 
  1906  018E                     	;# 
  1907  018F                     	;# 
  1908  0190                     	;# 
  1909  0191                     	;# 
  1910  0191                     	;# 
  1911  0192                     	;# 
  1912  0193                     	;# 
  1913  0193                     	;# 
  1914  0193                     	;# 
  1915  0194                     	;# 
  1916  0195                     	;# 
  1917  0196                     	;# 
  1918  0197                     	;# 
  1919  0199                     	;# 
  1920  0199                     	;# 
  1921  0199                     	;# 
  1922  019A                     	;# 
  1923  019A                     	;# 
  1924  019A                     	;# 
  1925  019B                     	;# 
  1926  019B                     	;# 
  1927  019B                     	;# 
  1928  019B                     	;# 
  1929  019B                     	;# 
  1930  019C                     	;# 
  1931  019C                     	;# 
  1932  019C                     	;# 
  1933  019D                     	;# 
  1934  019D                     	;# 
  1935  019D                     	;# 
  1936  019E                     	;# 
  1937  019E                     	;# 
  1938  019E                     	;# 
  1939  019F                     	;# 
  1940  019F                     	;# 
  1941  019F                     	;# 
  1942  019F                     	;# 
  1943  019F                     	;# 
  1944  020C                     	;# 
  1945  020D                     	;# 
  1946  020E                     	;# 
  1947  020F                     	;# 
  1948  0210                     	;# 
  1949  0211                     	;# 
  1950  0211                     	;# 
  1951  0212                     	;# 
  1952  0212                     	;# 
  1953  0213                     	;# 
  1954  0213                     	;# 
  1955  0214                     	;# 
  1956  0214                     	;# 
  1957  0215                     	;# 
  1958  0215                     	;# 
  1959  0215                     	;# 
  1960  0215                     	;# 
  1961  0216                     	;# 
  1962  0216                     	;# 
  1963  0217                     	;# 
  1964  0217                     	;# 
  1965  028C                     	;# 
  1966  028D                     	;# 
  1967  028E                     	;# 
  1968  028F                     	;# 
  1969  0290                     	;# 
  1970  0291                     	;# 
  1971  0291                     	;# 
  1972  0292                     	;# 
  1973  0293                     	;# 
  1974  0298                     	;# 
  1975  0298                     	;# 
  1976  0299                     	;# 
  1977  029A                     	;# 
  1978  030C                     	;# 
  1979  030D                     	;# 
  1980  030E                     	;# 
  1981  030F                     	;# 
  1982  0310                     	;# 
  1983  0311                     	;# 
  1984  0311                     	;# 
  1985  0312                     	;# 
  1986  0313                     	;# 
  1987  038C                     	;# 
  1988  038D                     	;# 
  1989  038E                     	;# 
  1990  038F                     	;# 
  1991  0390                     	;# 
  1992  0391                     	;# 
  1993  0392                     	;# 
  1994  0393                     	;# 
  1995  0394                     	;# 
  1996  0395                     	;# 
  1997  0396                     	;# 
  1998  0397                     	;# 
  1999  0398                     	;# 
  2000  0399                     	;# 
  2001  039D                     	;# 
  2002  039E                     	;# 
  2003  039F                     	;# 
  2004  0511                     	;# 
  2005  0513                     	;# 
  2006  0515                     	;# 
  2007  051A                     	;# 
  2008  0591                     	;# 
  2009  0592                     	;# 
  2010  0592                     	;# 
  2011  0593                     	;# 
  2012  0594                     	;# 
  2013  0594                     	;# 
  2014  0595                     	;# 
  2015  0596                     	;# 
  2016  0596                     	;# 
  2017  0E91                     	;# 
  2018  0E92                     	;# 
  2019  0E93                     	;# 
  2020  0E94                     	;# 
  2021  0E95                     	;# 
  2022  0E96                     	;# 
  2023  0E97                     	;# 
  2024  0E98                     	;# 
  2025  0E99                     	;# 
  2026  0E9A                     	;# 
  2027  0E9B                     	;# 
  2028  0E9C                     	;# 
  2029  0E9D                     	;# 
  2030  0E9E                     	;# 
  2031  0E9F                     	;# 
  2032  0EA0                     	;# 
  2033  0EA1                     	;# 
  2034  0EA1                     	;# 
  2035  0EA2                     	;# 
  2036  0EA3                     	;# 
  2037  0EA3                     	;# 
  2038  0EA4                     	;# 
  2039  0EA5                     	;# 
  2040  0EA5                     	;# 
  2041  0EA6                     	;# 
  2042  0EA7                     	;# 
  2043  0EA7                     	;# 
  2044  0EA8                     	;# 
  2045  0EA9                     	;# 
  2046  0EAA                     	;# 
  2047  0EAB                     	;# 
  2048  0EAC                     	;# 
  2049  0EAD                     	;# 
  2050  0EAE                     	;# 
  2051  0EAF                     	;# 
  2052  0EB1                     	;# 
  2053  0EB2                     	;# 
  2054  0EB3                     	;# 
  2055  0EB4                     	;# 
  2056  0EB5                     	;# 
  2057  0EB6                     	;# 
  2058  0EB7                     	;# 
  2059  0EB8                     	;# 
  2060  0EB9                     	;# 
  2061  0EBA                     	;# 
  2062  0EBB                     	;# 
  2063  0EBC                     	;# 
  2064  0EBD                     	;# 
  2065  0EBE                     	;# 
  2066  0EBF                     	;# 
  2067  0EC0                     	;# 
  2068  0EC1                     	;# 
  2069  0EC1                     	;# 
  2070  0EC2                     	;# 
  2071  0EC3                     	;# 
  2072  0EC3                     	;# 
  2073  0EC4                     	;# 
  2074  0EC5                     	;# 
  2075  0EC5                     	;# 
  2076  0EC6                     	;# 
  2077  0EC7                     	;# 
  2078  0EC7                     	;# 
  2079  0EC8                     	;# 
  2080  0EC9                     	;# 
  2081  0ECA                     	;# 
  2082  0ECB                     	;# 
  2083  0ECC                     	;# 
  2084  0ECD                     	;# 
  2085  0ECE                     	;# 
  2086  0ECF                     	;# 
  2087  0ED1                     	;# 
  2088  0ED2                     	;# 
  2089  0ED3                     	;# 
  2090  0ED4                     	;# 
  2091  0ED5                     	;# 
  2092  0ED6                     	;# 
  2093  0ED7                     	;# 
  2094  0ED8                     	;# 
  2095  0ED9                     	;# 
  2096  0EDA                     	;# 
  2097  0EDB                     	;# 
  2098  0EDC                     	;# 
  2099  0EDD                     	;# 
  2100  0EDE                     	;# 
  2101  0EDF                     	;# 
  2102  0EE0                     	;# 
  2103  0EE1                     	;# 
  2104  0EE1                     	;# 
  2105  0EE2                     	;# 
  2106  0EE3                     	;# 
  2107  0EE3                     	;# 
  2108  0EE4                     	;# 
  2109  0EE5                     	;# 
  2110  0EE5                     	;# 
  2111  0EE6                     	;# 
  2112  0EE7                     	;# 
  2113  0EE7                     	;# 
  2114  0EE8                     	;# 
  2115  0EE9                     	;# 
  2116  0EEA                     	;# 
  2117  0EEB                     	;# 
  2118  0EEC                     	;# 
  2119  0EED                     	;# 
  2120  0EEE                     	;# 
  2121  0EEF                     	;# 
  2122  0F11                     	;# 
  2123  0F12                     	;# 
  2124  0F13                     	;# 
  2125  0F14                     	;# 
  2126  0F15                     	;# 
  2127  0F16                     	;# 
  2128  0F17                     	;# 
  2129  0F18                     	;# 
  2130  0F19                     	;# 
  2131  0F1A                     	;# 
  2132  0F1B                     	;# 
  2133  0F1C                     	;# 
  2134  0F1D                     	;# 
  2135  0F1E                     	;# 
  2136  0F1F                     	;# 
  2137  0F20                     	;# 
  2138  0F21                     	;# 
  2139  0F21                     	;# 
  2140  0F22                     	;# 
  2141  0F23                     	;# 
  2142  0F23                     	;# 
  2143  0F24                     	;# 
  2144  0F25                     	;# 
  2145  0F25                     	;# 
  2146  0F26                     	;# 
  2147  0F27                     	;# 
  2148  0F27                     	;# 
  2149  0F28                     	;# 
  2150  0F29                     	;# 
  2151  0F2A                     	;# 
  2152  0F2B                     	;# 
  2153  0F2C                     	;# 
  2154  0F2D                     	;# 
  2155  0F2E                     	;# 
  2156  0F2F                     	;# 
  2157  0FE4                     	;# 
  2158  0FE5                     	;# 
  2159  0FE6                     	;# 
  2160  0FE7                     	;# 
  2161  0FE8                     	;# 
  2162  0FE9                     	;# 
  2163  0FEA                     	;# 
  2164  0FEB                     	;# 
  2165  0FED                     	;# 
  2166  0FEE                     	;# 
  2167  0FEF                     	;# 
  2168  0000                     	;# 
  2169  0001                     	;# 
  2170  0002                     	;# 
  2171  0003                     	;# 
  2172  0004                     	;# 
  2173  0005                     	;# 
  2174  0006                     	;# 
  2175  0007                     	;# 
  2176  0008                     	;# 
  2177  0009                     	;# 
  2178  000A                     	;# 
  2179  000B                     	;# 
  2180  000C                     	;# 
  2181  000D                     	;# 
  2182  000E                     	;# 
  2183  000F                     	;# 
  2184  0010                     	;# 
  2185  0011                     	;# 
  2186  0012                     	;# 
  2187  0013                     	;# 
  2188  0014                     	;# 
  2189  0015                     	;# 
  2190  0016                     	;# 
  2191  0016                     	;# 
  2192  0017                     	;# 
  2193  0018                     	;# 
  2194  0019                     	;# 
  2195  001A                     	;# 
  2196  001B                     	;# 
  2197  001C                     	;# 
  2198  008C                     	;# 
  2199  008D                     	;# 
  2200  008E                     	;# 
  2201  008F                     	;# 
  2202  0090                     	;# 
  2203  0091                     	;# 
  2204  0092                     	;# 
  2205  0093                     	;# 
  2206  0094                     	;# 
  2207  0095                     	;# 
  2208  0096                     	;# 
  2209  0097                     	;# 
  2210  0098                     	;# 
  2211  0099                     	;# 
  2212  009A                     	;# 
  2213  009B                     	;# 
  2214  009B                     	;# 
  2215  009C                     	;# 
  2216  009D                     	;# 
  2217  009E                     	;# 
  2218  009F                     	;# 
  2219  010C                     	;# 
  2220  010D                     	;# 
  2221  010E                     	;# 
  2222  010F                     	;# 
  2223  0110                     	;# 
  2224  0111                     	;# 
  2225  0112                     	;# 
  2226  0113                     	;# 
  2227  0114                     	;# 
  2228  0115                     	;# 
  2229  0116                     	;# 
  2230  0117                     	;# 
  2231  0118                     	;# 
  2232  0119                     	;# 
  2233  011A                     	;# 
  2234  011B                     	;# 
  2235  011C                     	;# 
  2236  011D                     	;# 
  2237  011D                     	;# 
  2238  011D                     	;# 
  2239  011E                     	;# 
  2240  011F                     	;# 
  2241  018C                     	;# 
  2242  018D                     	;# 
  2243  018E                     	;# 
  2244  018F                     	;# 
  2245  0190                     	;# 
  2246  0191                     	;# 
  2247  0191                     	;# 
  2248  0192                     	;# 
  2249  0193                     	;# 
  2250  0193                     	;# 
  2251  0193                     	;# 
  2252  0194                     	;# 
  2253  0195                     	;# 
  2254  0196                     	;# 
  2255  0197                     	;# 
  2256  0199                     	;# 
  2257  0199                     	;# 
  2258  0199                     	;# 
  2259  019A                     	;# 
  2260  019A                     	;# 
  2261  019A                     	;# 
  2262  019B                     	;# 
  2263  019B                     	;# 
  2264  019B                     	;# 
  2265  019B                     	;# 
  2266  019B                     	;# 
  2267  019C                     	;# 
  2268  019C                     	;# 
  2269  019C                     	;# 
  2270  019D                     	;# 
  2271  019D                     	;# 
  2272  019D                     	;# 
  2273  019E                     	;# 
  2274  019E                     	;# 
  2275  019E                     	;# 
  2276  019F                     	;# 
  2277  019F                     	;# 
  2278  019F                     	;# 
  2279  019F                     	;# 
  2280  019F                     	;# 
  2281  020C                     	;# 
  2282  020D                     	;# 
  2283  020E                     	;# 
  2284  020F                     	;# 
  2285  0210                     	;# 
  2286  0211                     	;# 
  2287  0211                     	;# 
  2288  0212                     	;# 
  2289  0212                     	;# 
  2290  0213                     	;# 
  2291  0213                     	;# 
  2292  0214                     	;# 
  2293  0214                     	;# 
  2294  0215                     	;# 
  2295  0215                     	;# 
  2296  0215                     	;# 
  2297  0215                     	;# 
  2298  0216                     	;# 
  2299  0216                     	;# 
  2300  0217                     	;# 
  2301  0217                     	;# 
  2302  028C                     	;# 
  2303  028D                     	;# 
  2304  028E                     	;# 
  2305  028F                     	;# 
  2306  0290                     	;# 
  2307  0291                     	;# 
  2308  0291                     	;# 
  2309  0292                     	;# 
  2310  0293                     	;# 
  2311  0298                     	;# 
  2312  0298                     	;# 
  2313  0299                     	;# 
  2314  029A                     	;# 
  2315  030C                     	;# 
  2316  030D                     	;# 
  2317  030E                     	;# 
  2318  030F                     	;# 
  2319  0310                     	;# 
  2320  0311                     	;# 
  2321  0311                     	;# 
  2322  0312                     	;# 
  2323  0313                     	;# 
  2324  038C                     	;# 
  2325  038D                     	;# 
  2326  038E                     	;# 
  2327  038F                     	;# 
  2328  0390                     	;# 
  2329  0391                     	;# 
  2330  0392                     	;# 
  2331  0393                     	;# 
  2332  0394                     	;# 
  2333  0395                     	;# 
  2334  0396                     	;# 
  2335  0397                     	;# 
  2336  0398                     	;# 
  2337  0399                     	;# 
  2338  039D                     	;# 
  2339  039E                     	;# 
  2340  039F                     	;# 
  2341  0511                     	;# 
  2342  0513                     	;# 
  2343  0515                     	;# 
  2344  051A                     	;# 
  2345  0591                     	;# 
  2346  0592                     	;# 
  2347  0592                     	;# 
  2348  0593                     	;# 
  2349  0594                     	;# 
  2350  0594                     	;# 
  2351  0595                     	;# 
  2352  0596                     	;# 
  2353  0596                     	;# 
  2354  0E91                     	;# 
  2355  0E92                     	;# 
  2356  0E93                     	;# 
  2357  0E94                     	;# 
  2358  0E95                     	;# 
  2359  0E96                     	;# 
  2360  0E97                     	;# 
  2361  0E98                     	;# 
  2362  0E99                     	;# 
  2363  0E9A                     	;# 
  2364  0E9B                     	;# 
  2365  0E9C                     	;# 
  2366  0E9D                     	;# 
  2367  0E9E                     	;# 
  2368  0E9F                     	;# 
  2369  0EA0                     	;# 
  2370  0EA1                     	;# 
  2371  0EA1                     	;# 
  2372  0EA2                     	;# 
  2373  0EA3                     	;# 
  2374  0EA3                     	;# 
  2375  0EA4                     	;# 
  2376  0EA5                     	;# 
  2377  0EA5                     	;# 
  2378  0EA6                     	;# 
  2379  0EA7                     	;# 
  2380  0EA7                     	;# 
  2381  0EA8                     	;# 
  2382  0EA9                     	;# 
  2383  0EAA                     	;# 
  2384  0EAB                     	;# 
  2385  0EAC                     	;# 
  2386  0EAD                     	;# 
  2387  0EAE                     	;# 
  2388  0EAF                     	;# 
  2389  0EB1                     	;# 
  2390  0EB2                     	;# 
  2391  0EB3                     	;# 
  2392  0EB4                     	;# 
  2393  0EB5                     	;# 
  2394  0EB6                     	;# 
  2395  0EB7                     	;# 
  2396  0EB8                     	;# 
  2397  0EB9                     	;# 
  2398  0EBA                     	;# 
  2399  0EBB                     	;# 
  2400  0EBC                     	;# 
  2401  0EBD                     	;# 
  2402  0EBE                     	;# 
  2403  0EBF                     	;# 
  2404  0EC0                     	;# 
  2405  0EC1                     	;# 
  2406  0EC1                     	;# 
  2407  0EC2                     	;# 
  2408  0EC3                     	;# 
  2409  0EC3                     	;# 
  2410  0EC4                     	;# 
  2411  0EC5                     	;# 
  2412  0EC5                     	;# 
  2413  0EC6                     	;# 
  2414  0EC7                     	;# 
  2415  0EC7                     	;# 
  2416  0EC8                     	;# 
  2417  0EC9                     	;# 
  2418  0ECA                     	;# 
  2419  0ECB                     	;# 
  2420  0ECC                     	;# 
  2421  0ECD                     	;# 
  2422  0ECE                     	;# 
  2423  0ECF                     	;# 
  2424  0ED1                     	;# 
  2425  0ED2                     	;# 
  2426  0ED3                     	;# 
  2427  0ED4                     	;# 
  2428  0ED5                     	;# 
  2429  0ED6                     	;# 
  2430  0ED7                     	;# 
  2431  0ED8                     	;# 
  2432  0ED9                     	;# 
  2433  0EDA                     	;# 
  2434  0EDB                     	;# 
  2435  0EDC                     	;# 
  2436  0EDD                     	;# 
  2437  0EDE                     	;# 
  2438  0EDF                     	;# 
  2439  0EE0                     	;# 
  2440  0EE1                     	;# 
  2441  0EE1                     	;# 
  2442  0EE2                     	;# 
  2443  0EE3                     	;# 
  2444  0EE3                     	;# 
  2445  0EE4                     	;# 
  2446  0EE5                     	;# 
  2447  0EE5                     	;# 
  2448  0EE6                     	;# 
  2449  0EE7                     	;# 
  2450  0EE7                     	;# 
  2451  0EE8                     	;# 
  2452  0EE9                     	;# 
  2453  0EEA                     	;# 
  2454  0EEB                     	;# 
  2455  0EEC                     	;# 
  2456  0EED                     	;# 
  2457  0EEE                     	;# 
  2458  0EEF                     	;# 
  2459  0F11                     	;# 
  2460  0F12                     	;# 
  2461  0F13                     	;# 
  2462  0F14                     	;# 
  2463  0F15                     	;# 
  2464  0F16                     	;# 
  2465  0F17                     	;# 
  2466  0F18                     	;# 
  2467  0F19                     	;# 
  2468  0F1A                     	;# 
  2469  0F1B                     	;# 
  2470  0F1C                     	;# 
  2471  0F1D                     	;# 
  2472  0F1E                     	;# 
  2473  0F1F                     	;# 
  2474  0F20                     	;# 
  2475  0F21                     	;# 
  2476  0F21                     	;# 
  2477  0F22                     	;# 
  2478  0F23                     	;# 
  2479  0F23                     	;# 
  2480  0F24                     	;# 
  2481  0F25                     	;# 
  2482  0F25                     	;# 
  2483  0F26                     	;# 
  2484  0F27                     	;# 
  2485  0F27                     	;# 
  2486  0F28                     	;# 
  2487  0F29                     	;# 
  2488  0F2A                     	;# 
  2489  0F2B                     	;# 
  2490  0F2C                     	;# 
  2491  0F2D                     	;# 
  2492  0F2E                     	;# 
  2493  0F2F                     	;# 
  2494  0FE4                     	;# 
  2495  0FE5                     	;# 
  2496  0FE6                     	;# 
  2497  0FE7                     	;# 
  2498  0FE8                     	;# 
  2499  0FE9                     	;# 
  2500  0FEA                     	;# 
  2501  0FEB                     	;# 
  2502  0FED                     	;# 
  2503  0FEE                     	;# 
  2504  0FEF                     	;# 
  2505  0000                     	;# 
  2506  0001                     	;# 
  2507  0002                     	;# 
  2508  0003                     	;# 
  2509  0004                     	;# 
  2510  0005                     	;# 
  2511  0006                     	;# 
  2512  0007                     	;# 
  2513  0008                     	;# 
  2514  0009                     	;# 
  2515  000A                     	;# 
  2516  000B                     	;# 
  2517  000C                     	;# 
  2518  000D                     	;# 
  2519  000E                     	;# 
  2520  000F                     	;# 
  2521  0010                     	;# 
  2522  0011                     	;# 
  2523  0012                     	;# 
  2524  0013                     	;# 
  2525  0014                     	;# 
  2526  0015                     	;# 
  2527  0016                     	;# 
  2528  0016                     	;# 
  2529  0017                     	;# 
  2530  0018                     	;# 
  2531  0019                     	;# 
  2532  001A                     	;# 
  2533  001B                     	;# 
  2534  001C                     	;# 
  2535  008C                     	;# 
  2536  008D                     	;# 
  2537  008E                     	;# 
  2538  008F                     	;# 
  2539  0090                     	;# 
  2540  0091                     	;# 
  2541  0092                     	;# 
  2542  0093                     	;# 
  2543  0094                     	;# 
  2544  0095                     	;# 
  2545  0096                     	;# 
  2546  0097                     	;# 
  2547  0098                     	;# 
  2548  0099                     	;# 
  2549  009A                     	;# 
  2550  009B                     	;# 
  2551  009B                     	;# 
  2552  009C                     	;# 
  2553  009D                     	;# 
  2554  009E                     	;# 
  2555  009F                     	;# 
  2556  010C                     	;# 
  2557  010D                     	;# 
  2558  010E                     	;# 
  2559  010F                     	;# 
  2560  0110                     	;# 
  2561  0111                     	;# 
  2562  0112                     	;# 
  2563  0113                     	;# 
  2564  0114                     	;# 
  2565  0115                     	;# 
  2566  0116                     	;# 
  2567  0117                     	;# 
  2568  0118                     	;# 
  2569  0119                     	;# 
  2570  011A                     	;# 
  2571  011B                     	;# 
  2572  011C                     	;# 
  2573  011D                     	;# 
  2574  011D                     	;# 
  2575  011D                     	;# 
  2576  011E                     	;# 
  2577  011F                     	;# 
  2578  018C                     	;# 
  2579  018D                     	;# 
  2580  018E                     	;# 
  2581  018F                     	;# 
  2582  0190                     	;# 
  2583  0191                     	;# 
  2584  0191                     	;# 
  2585  0192                     	;# 
  2586  0193                     	;# 
  2587  0193                     	;# 
  2588  0193                     	;# 
  2589  0194                     	;# 
  2590  0195                     	;# 
  2591  0196                     	;# 
  2592  0197                     	;# 
  2593  0199                     	;# 
  2594  0199                     	;# 
  2595  0199                     	;# 
  2596  019A                     	;# 
  2597  019A                     	;# 
  2598  019A                     	;# 
  2599  019B                     	;# 
  2600  019B                     	;# 
  2601  019B                     	;# 
  2602  019B                     	;# 
  2603  019B                     	;# 
  2604  019C                     	;# 
  2605  019C                     	;# 
  2606  019C                     	;# 
  2607  019D                     	;# 
  2608  019D                     	;# 
  2609  019D                     	;# 
  2610  019E                     	;# 
  2611  019E                     	;# 
  2612  019E                     	;# 
  2613  019F                     	;# 
  2614  019F                     	;# 
  2615  019F                     	;# 
  2616  019F                     	;# 
  2617  019F                     	;# 
  2618  020C                     	;# 
  2619  020D                     	;# 
  2620  020E                     	;# 
  2621  020F                     	;# 
  2622  0210                     	;# 
  2623  0211                     	;# 
  2624  0211                     	;# 
  2625  0212                     	;# 
  2626  0212                     	;# 
  2627  0213                     	;# 
  2628  0213                     	;# 
  2629  0214                     	;# 
  2630  0214                     	;# 
  2631  0215                     	;# 
  2632  0215                     	;# 
  2633  0215                     	;# 
  2634  0215                     	;# 
  2635  0216                     	;# 
  2636  0216                     	;# 
  2637  0217                     	;# 
  2638  0217                     	;# 
  2639  028C                     	;# 
  2640  028D                     	;# 
  2641  028E                     	;# 
  2642  028F                     	;# 
  2643  0290                     	;# 
  2644  0291                     	;# 
  2645  0291                     	;# 
  2646  0292                     	;# 
  2647  0293                     	;# 
  2648  0298                     	;# 
  2649  0298                     	;# 
  2650  0299                     	;# 
  2651  029A                     	;# 
  2652  030C                     	;# 
  2653  030D                     	;# 
  2654  030E                     	;# 
  2655  030F                     	;# 
  2656  0310                     	;# 
  2657  0311                     	;# 
  2658  0311                     	;# 
  2659  0312                     	;# 
  2660  0313                     	;# 
  2661  038C                     	;# 
  2662  038D                     	;# 
  2663  038E                     	;# 
  2664  038F                     	;# 
  2665  0390                     	;# 
  2666  0391                     	;# 
  2667  0392                     	;# 
  2668  0393                     	;# 
  2669  0394                     	;# 
  2670  0395                     	;# 
  2671  0396                     	;# 
  2672  0397                     	;# 
  2673  0398                     	;# 
  2674  0399                     	;# 
  2675  039D                     	;# 
  2676  039E                     	;# 
  2677  039F                     	;# 
  2678  0511                     	;# 
  2679  0513                     	;# 
  2680  0515                     	;# 
  2681  051A                     	;# 
  2682  0591                     	;# 
  2683  0592                     	;# 
  2684  0592                     	;# 
  2685  0593                     	;# 
  2686  0594                     	;# 
  2687  0594                     	;# 
  2688  0595                     	;# 
  2689  0596                     	;# 
  2690  0596                     	;# 
  2691  0E91                     	;# 
  2692  0E92                     	;# 
  2693  0E93                     	;# 
  2694  0E94                     	;# 
  2695  0E95                     	;# 
  2696  0E96                     	;# 
  2697  0E97                     	;# 
  2698  0E98                     	;# 
  2699  0E99                     	;# 
  2700  0E9A                     	;# 
  2701  0E9B                     	;# 
  2702  0E9C                     	;# 
  2703  0E9D                     	;# 
  2704  0E9E                     	;# 
  2705  0E9F                     	;# 
  2706  0EA0                     	;# 
  2707  0EA1                     	;# 
  2708  0EA1                     	;# 
  2709  0EA2                     	;# 
  2710  0EA3                     	;# 
  2711  0EA3                     	;# 
  2712  0EA4                     	;# 
  2713  0EA5                     	;# 
  2714  0EA5                     	;# 
  2715  0EA6                     	;# 
  2716  0EA7                     	;# 
  2717  0EA7                     	;# 
  2718  0EA8                     	;# 
  2719  0EA9                     	;# 
  2720  0EAA                     	;# 
  2721  0EAB                     	;# 
  2722  0EAC                     	;# 
  2723  0EAD                     	;# 
  2724  0EAE                     	;# 
  2725  0EAF                     	;# 
  2726  0EB1                     	;# 
  2727  0EB2                     	;# 
  2728  0EB3                     	;# 
  2729  0EB4                     	;# 
  2730  0EB5                     	;# 
  2731  0EB6                     	;# 
  2732  0EB7                     	;# 
  2733  0EB8                     	;# 
  2734  0EB9                     	;# 
  2735  0EBA                     	;# 
  2736  0EBB                     	;# 
  2737  0EBC                     	;# 
  2738  0EBD                     	;# 
  2739  0EBE                     	;# 
  2740  0EBF                     	;# 
  2741  0EC0                     	;# 
  2742  0EC1                     	;# 
  2743  0EC1                     	;# 
  2744  0EC2                     	;# 
  2745  0EC3                     	;# 
  2746  0EC3                     	;# 
  2747  0EC4                     	;# 
  2748  0EC5                     	;# 
  2749  0EC5                     	;# 
  2750  0EC6                     	;# 
  2751  0EC7                     	;# 
  2752  0EC7                     	;# 
  2753  0EC8                     	;# 
  2754  0EC9                     	;# 
  2755  0ECA                     	;# 
  2756  0ECB                     	;# 
  2757  0ECC                     	;# 
  2758  0ECD                     	;# 
  2759  0ECE                     	;# 
  2760  0ECF                     	;# 
  2761  0ED1                     	;# 
  2762  0ED2                     	;# 
  2763  0ED3                     	;# 
  2764  0ED4                     	;# 
  2765  0ED5                     	;# 
  2766  0ED6                     	;# 
  2767  0ED7                     	;# 
  2768  0ED8                     	;# 
  2769  0ED9                     	;# 
  2770  0EDA                     	;# 
  2771  0EDB                     	;# 
  2772  0EDC                     	;# 
  2773  0EDD                     	;# 
  2774  0EDE                     	;# 
  2775  0EDF                     	;# 
  2776  0EE0                     	;# 
  2777  0EE1                     	;# 
  2778  0EE1                     	;# 
  2779  0EE2                     	;# 
  2780  0EE3                     	;# 
  2781  0EE3                     	;# 
  2782  0EE4                     	;# 
  2783  0EE5                     	;# 
  2784  0EE5                     	;# 
  2785  0EE6                     	;# 
  2786  0EE7                     	;# 
  2787  0EE7                     	;# 
  2788  0EE8                     	;# 
  2789  0EE9                     	;# 
  2790  0EEA                     	;# 
  2791  0EEB                     	;# 
  2792  0EEC                     	;# 
  2793  0EED                     	;# 
  2794  0EEE                     	;# 
  2795  0EEF                     	;# 
  2796  0F11                     	;# 
  2797  0F12                     	;# 
  2798  0F13                     	;# 
  2799  0F14                     	;# 
  2800  0F15                     	;# 
  2801  0F16                     	;# 
  2802  0F17                     	;# 
  2803  0F18                     	;# 
  2804  0F19                     	;# 
  2805  0F1A                     	;# 
  2806  0F1B                     	;# 
  2807  0F1C                     	;# 
  2808  0F1D                     	;# 
  2809  0F1E                     	;# 
  2810  0F1F                     	;# 
  2811  0F20                     	;# 
  2812  0F21                     	;# 
  2813  0F21                     	;# 
  2814  0F22                     	;# 
  2815  0F23                     	;# 
  2816  0F23                     	;# 
  2817  0F24                     	;# 
  2818  0F25                     	;# 
  2819  0F25                     	;# 
  2820  0F26                     	;# 
  2821  0F27                     	;# 
  2822  0F27                     	;# 
  2823  0F28                     	;# 
  2824  0F29                     	;# 
  2825  0F2A                     	;# 
  2826  0F2B                     	;# 
  2827  0F2C                     	;# 
  2828  0F2D                     	;# 
  2829  0F2E                     	;# 
  2830  0F2F                     	;# 
  2831  0FE4                     	;# 
  2832  0FE5                     	;# 
  2833  0FE6                     	;# 
  2834  0FE7                     	;# 
  2835  0FE8                     	;# 
  2836  0FE9                     	;# 
  2837  0FEA                     	;# 
  2838  0FEB                     	;# 
  2839  0FED                     	;# 
  2840  0FEE                     	;# 
  2841  0FEF                     	;# 
  2842                           
  2843                           	psect	idataBANK4
  2844  2B48                     __pidataBANK4:	
  2845                           
  2846                           ;initializer for _configReg
  2847  2B48  3400               	retlw	0
  2848  2B49  3490               	retlw	144
  2849  2B4A  341F               	retlw	31
  2850  2B4B  34C4               	retlw	196
  2851  2B4C  3400               	retlw	0
  2852  2B4D  3490               	retlw	144
  2853                           
  2854                           	psect	idataBANK5
  2855  1300                     __pidataBANK5:	
  2856                           
  2857                           ;initializer for _tempChannels
  2858  1300  340C               	retlw	12
  2859  1301  340A               	retlw	10
  2860  1302  3408               	retlw	8
  2861  1303  3409               	retlw	9
  2862  1304  340B               	retlw	11
  2863                           
  2864                           ;initializer for SSD1306_Test@F7528
  2865  1305  348D               	retlw	141
  2866  1306  3414               	retlw	20
  2867                           
  2868                           	psect	stringtext1
  2869  1000                     __pstringtext1:	
  2870  1000                     _OledFont:	
  2871  1000  3400               	retlw	0
  2872  1001  3400               	retlw	0
  2873  1002  3400               	retlw	0
  2874  1003  3400               	retlw	0
  2875  1004  3400               	retlw	0
  2876  1005  3400               	retlw	0
  2877  1006  3400               	retlw	0
  2878  1007  3400               	retlw	0
  2879  1008  3400               	retlw	0
  2880  1009  3400               	retlw	0
  2881  100A  345F               	retlw	95
  2882  100B  3400               	retlw	0
  2883  100C  3400               	retlw	0
  2884  100D  3400               	retlw	0
  2885  100E  3400               	retlw	0
  2886  100F  3400               	retlw	0
  2887  1010  3400               	retlw	0
  2888  1011  3400               	retlw	0
  2889  1012  3407               	retlw	7
  2890  1013  3400               	retlw	0
  2891  1014  3407               	retlw	7
  2892  1015  3400               	retlw	0
  2893  1016  3400               	retlw	0
  2894  1017  3400               	retlw	0
  2895  1018  3400               	retlw	0
  2896  1019  3414               	retlw	20
  2897  101A  347F               	retlw	127
  2898  101B  3414               	retlw	20
  2899  101C  347F               	retlw	127
  2900  101D  3414               	retlw	20
  2901  101E  3400               	retlw	0
  2902  101F  3400               	retlw	0
  2903  1020  3400               	retlw	0
  2904  1021  3424               	retlw	36
  2905  1022  342A               	retlw	42
  2906  1023  347F               	retlw	127
  2907  1024  342A               	retlw	42
  2908  1025  3412               	retlw	18
  2909  1026  3400               	retlw	0
  2910  1027  3400               	retlw	0
  2911  1028  3400               	retlw	0
  2912  1029  3423               	retlw	35
  2913  102A  3413               	retlw	19
  2914  102B  3408               	retlw	8
  2915  102C  3464               	retlw	100
  2916  102D  3462               	retlw	98
  2917  102E  3400               	retlw	0
  2918  102F  3400               	retlw	0
  2919  1030  3400               	retlw	0
  2920  1031  3436               	retlw	54
  2921  1032  3449               	retlw	73
  2922  1033  3455               	retlw	85
  2923  1034  3422               	retlw	34
  2924  1035  3450               	retlw	80
  2925  1036  3400               	retlw	0
  2926  1037  3400               	retlw	0
  2927  1038  3400               	retlw	0
  2928  1039  3400               	retlw	0
  2929  103A  3405               	retlw	5
  2930  103B  3403               	retlw	3
  2931  103C  3400               	retlw	0
  2932  103D  3400               	retlw	0
  2933  103E  3400               	retlw	0
  2934  103F  3400               	retlw	0
  2935  1040  3400               	retlw	0
  2936  1041  341C               	retlw	28
  2937  1042  3422               	retlw	34
  2938  1043  3441               	retlw	65
  2939  1044  3400               	retlw	0
  2940  1045  3400               	retlw	0
  2941  1046  3400               	retlw	0
  2942  1047  3400               	retlw	0
  2943  1048  3400               	retlw	0
  2944  1049  3441               	retlw	65
  2945  104A  3422               	retlw	34
  2946  104B  341C               	retlw	28
  2947  104C  3400               	retlw	0
  2948  104D  3400               	retlw	0
  2949  104E  3400               	retlw	0
  2950  104F  3400               	retlw	0
  2951  1050  3400               	retlw	0
  2952  1051  3408               	retlw	8
  2953  1052  342A               	retlw	42
  2954  1053  341C               	retlw	28
  2955  1054  342A               	retlw	42
  2956  1055  3408               	retlw	8
  2957  1056  3400               	retlw	0
  2958  1057  3400               	retlw	0
  2959  1058  3400               	retlw	0
  2960  1059  3408               	retlw	8
  2961  105A  3408               	retlw	8
  2962  105B  343E               	retlw	62
  2963  105C  3408               	retlw	8
  2964  105D  3408               	retlw	8
  2965  105E  3400               	retlw	0
  2966  105F  3400               	retlw	0
  2967  1060  3400               	retlw	0
  2968  1061  34A0               	retlw	160
  2969  1062  3460               	retlw	96
  2970  1063  3400               	retlw	0
  2971  1064  3400               	retlw	0
  2972  1065  3400               	retlw	0
  2973  1066  3400               	retlw	0
  2974  1067  3400               	retlw	0
  2975  1068  3400               	retlw	0
  2976  1069  3408               	retlw	8
  2977  106A  3408               	retlw	8
  2978  106B  3408               	retlw	8
  2979  106C  3408               	retlw	8
  2980  106D  3408               	retlw	8
  2981  106E  3400               	retlw	0
  2982  106F  3400               	retlw	0
  2983  1070  3400               	retlw	0
  2984  1071  3460               	retlw	96
  2985  1072  3460               	retlw	96
  2986  1073  3400               	retlw	0
  2987  1074  3400               	retlw	0
  2988  1075  3400               	retlw	0
  2989  1076  3400               	retlw	0
  2990  1077  3400               	retlw	0
  2991  1078  3400               	retlw	0
  2992  1079  3420               	retlw	32
  2993  107A  3410               	retlw	16
  2994  107B  3408               	retlw	8
  2995  107C  3404               	retlw	4
  2996  107D  3402               	retlw	2
  2997  107E  3400               	retlw	0
  2998  107F  3400               	retlw	0
  2999  1080  3400               	retlw	0
  3000  1081  343E               	retlw	62
  3001  1082  3451               	retlw	81
  3002  1083  3449               	retlw	73
  3003  1084  3445               	retlw	69
  3004  1085  343E               	retlw	62
  3005  1086  3400               	retlw	0
  3006  1087  3400               	retlw	0
  3007  1088  3400               	retlw	0
  3008  1089  3400               	retlw	0
  3009  108A  3442               	retlw	66
  3010  108B  347F               	retlw	127
  3011  108C  3440               	retlw	64
  3012  108D  3400               	retlw	0
  3013  108E  3400               	retlw	0
  3014  108F  3400               	retlw	0
  3015  1090  3400               	retlw	0
  3016  1091  3462               	retlw	98
  3017  1092  3451               	retlw	81
  3018  1093  3449               	retlw	73
  3019  1094  3449               	retlw	73
  3020  1095  3446               	retlw	70
  3021  1096  3400               	retlw	0
  3022  1097  3400               	retlw	0
  3023  1098  3400               	retlw	0
  3024  1099  3422               	retlw	34
  3025  109A  3441               	retlw	65
  3026  109B  3449               	retlw	73
  3027  109C  3449               	retlw	73
  3028  109D  3436               	retlw	54
  3029  109E  3400               	retlw	0
  3030  109F  3400               	retlw	0
  3031  10A0  3400               	retlw	0
  3032  10A1  3418               	retlw	24
  3033  10A2  3414               	retlw	20
  3034  10A3  3412               	retlw	18
  3035  10A4  347F               	retlw	127
  3036  10A5  3410               	retlw	16
  3037  10A6  3400               	retlw	0
  3038  10A7  3400               	retlw	0
  3039  10A8  3400               	retlw	0
  3040  10A9  3427               	retlw	39
  3041  10AA  3445               	retlw	69
  3042  10AB  3445               	retlw	69
  3043  10AC  3445               	retlw	69
  3044  10AD  3439               	retlw	57
  3045  10AE  3400               	retlw	0
  3046  10AF  3400               	retlw	0
  3047  10B0  3400               	retlw	0
  3048  10B1  343C               	retlw	60
  3049  10B2  344A               	retlw	74
  3050  10B3  3449               	retlw	73
  3051  10B4  3449               	retlw	73
  3052  10B5  3430               	retlw	48
  3053  10B6  3400               	retlw	0
  3054  10B7  3400               	retlw	0
  3055  10B8  3400               	retlw	0
  3056  10B9  3401               	retlw	1
  3057  10BA  3471               	retlw	113
  3058  10BB  3409               	retlw	9
  3059  10BC  3405               	retlw	5
  3060  10BD  3403               	retlw	3
  3061  10BE  3400               	retlw	0
  3062  10BF  3400               	retlw	0
  3063  10C0  3400               	retlw	0
  3064  10C1  3436               	retlw	54
  3065  10C2  3449               	retlw	73
  3066  10C3  3449               	retlw	73
  3067  10C4  3449               	retlw	73
  3068  10C5  3436               	retlw	54
  3069  10C6  3400               	retlw	0
  3070  10C7  3400               	retlw	0
  3071  10C8  3400               	retlw	0
  3072  10C9  3406               	retlw	6
  3073  10CA  3449               	retlw	73
  3074  10CB  3449               	retlw	73
  3075  10CC  3429               	retlw	41
  3076  10CD  341E               	retlw	30
  3077  10CE  3400               	retlw	0
  3078  10CF  3400               	retlw	0
  3079  10D0  3400               	retlw	0
  3080  10D1  3400               	retlw	0
  3081  10D2  3436               	retlw	54
  3082  10D3  3436               	retlw	54
  3083  10D4  3400               	retlw	0
  3084  10D5  3400               	retlw	0
  3085  10D6  3400               	retlw	0
  3086  10D7  3400               	retlw	0
  3087  10D8  3400               	retlw	0
  3088  10D9  3400               	retlw	0
  3089  10DA  34AC               	retlw	172
  3090  10DB  346C               	retlw	108
  3091  10DC  3400               	retlw	0
  3092  10DD  3400               	retlw	0
  3093  10DE  3400               	retlw	0
  3094  10DF  3400               	retlw	0
  3095  10E0  3400               	retlw	0
  3096  10E1  3408               	retlw	8
  3097  10E2  3414               	retlw	20
  3098  10E3  3422               	retlw	34
  3099  10E4  3441               	retlw	65
  3100  10E5  3400               	retlw	0
  3101  10E6  3400               	retlw	0
  3102  10E7  3400               	retlw	0
  3103  10E8  3400               	retlw	0
  3104  10E9  3414               	retlw	20
  3105  10EA  3414               	retlw	20
  3106  10EB  3414               	retlw	20
  3107  10EC  3414               	retlw	20
  3108  10ED  3414               	retlw	20
  3109  10EE  3400               	retlw	0
  3110  10EF  3400               	retlw	0
  3111  10F0  3400               	retlw	0
  3112  10F1  3441               	retlw	65
  3113  10F2  3422               	retlw	34
  3114  10F3  3414               	retlw	20
  3115  10F4  3408               	retlw	8
  3116  10F5  3400               	retlw	0
  3117  10F6  3400               	retlw	0
  3118  10F7  3400               	retlw	0
  3119  10F8  3400               	retlw	0
  3120  10F9  3402               	retlw	2
  3121  10FA  3401               	retlw	1
  3122  10FB  3451               	retlw	81
  3123  10FC  3409               	retlw	9
  3124  10FD  3406               	retlw	6
  3125  10FE  3400               	retlw	0
  3126  10FF  3400               	retlw	0
  3127  1100  3400               	retlw	0
  3128  1101  3432               	retlw	50
  3129  1102  3449               	retlw	73
  3130  1103  3479               	retlw	121
  3131  1104  3441               	retlw	65
  3132  1105  343E               	retlw	62
  3133  1106  3400               	retlw	0
  3134  1107  3400               	retlw	0
  3135  1108  3400               	retlw	0
  3136  1109  347E               	retlw	126
  3137  110A  3409               	retlw	9
  3138  110B  3409               	retlw	9
  3139  110C  3409               	retlw	9
  3140  110D  347E               	retlw	126
  3141  110E  3400               	retlw	0
  3142  110F  3400               	retlw	0
  3143  1110  3400               	retlw	0
  3144  1111  347F               	retlw	127
  3145  1112  3449               	retlw	73
  3146  1113  3449               	retlw	73
  3147  1114  3449               	retlw	73
  3148  1115  3436               	retlw	54
  3149  1116  3400               	retlw	0
  3150  1117  3400               	retlw	0
  3151  1118  3400               	retlw	0
  3152  1119  343E               	retlw	62
  3153  111A  3441               	retlw	65
  3154  111B  3441               	retlw	65
  3155  111C  3441               	retlw	65
  3156  111D  3422               	retlw	34
  3157  111E  3400               	retlw	0
  3158  111F  3400               	retlw	0
  3159  1120  3400               	retlw	0
  3160  1121  347F               	retlw	127
  3161  1122  3441               	retlw	65
  3162  1123  3441               	retlw	65
  3163  1124  3422               	retlw	34
  3164  1125  341C               	retlw	28
  3165  1126  3400               	retlw	0
  3166  1127  3400               	retlw	0
  3167  1128  3400               	retlw	0
  3168  1129  347F               	retlw	127
  3169  112A  3449               	retlw	73
  3170  112B  3449               	retlw	73
  3171  112C  3449               	retlw	73
  3172  112D  3441               	retlw	65
  3173  112E  3400               	retlw	0
  3174  112F  3400               	retlw	0
  3175  1130  3400               	retlw	0
  3176  1131  347F               	retlw	127
  3177  1132  3409               	retlw	9
  3178  1133  3409               	retlw	9
  3179  1134  3409               	retlw	9
  3180  1135  3401               	retlw	1
  3181  1136  3400               	retlw	0
  3182  1137  3400               	retlw	0
  3183  1138  3400               	retlw	0
  3184  1139  343E               	retlw	62
  3185  113A  3441               	retlw	65
  3186  113B  3441               	retlw	65
  3187  113C  3451               	retlw	81
  3188  113D  3472               	retlw	114
  3189  113E  3400               	retlw	0
  3190  113F  3400               	retlw	0
  3191  1140  3400               	retlw	0
  3192  1141  347F               	retlw	127
  3193  1142  3408               	retlw	8
  3194  1143  3408               	retlw	8
  3195  1144  3408               	retlw	8
  3196  1145  347F               	retlw	127
  3197  1146  3400               	retlw	0
  3198  1147  3400               	retlw	0
  3199  1148  3400               	retlw	0
  3200  1149  3441               	retlw	65
  3201  114A  347F               	retlw	127
  3202  114B  3441               	retlw	65
  3203  114C  3400               	retlw	0
  3204  114D  3400               	retlw	0
  3205  114E  3400               	retlw	0
  3206  114F  3400               	retlw	0
  3207  1150  3400               	retlw	0
  3208  1151  3420               	retlw	32
  3209  1152  3440               	retlw	64
  3210  1153  3441               	retlw	65
  3211  1154  343F               	retlw	63
  3212  1155  3401               	retlw	1
  3213  1156  3400               	retlw	0
  3214  1157  3400               	retlw	0
  3215  1158  3400               	retlw	0
  3216  1159  347F               	retlw	127
  3217  115A  3408               	retlw	8
  3218  115B  3414               	retlw	20
  3219  115C  3422               	retlw	34
  3220  115D  3441               	retlw	65
  3221  115E  3400               	retlw	0
  3222  115F  3400               	retlw	0
  3223  1160  3400               	retlw	0
  3224  1161  347F               	retlw	127
  3225  1162  3440               	retlw	64
  3226  1163  3440               	retlw	64
  3227  1164  3440               	retlw	64
  3228  1165  3440               	retlw	64
  3229  1166  3400               	retlw	0
  3230  1167  3400               	retlw	0
  3231  1168  3400               	retlw	0
  3232  1169  347F               	retlw	127
  3233  116A  3402               	retlw	2
  3234  116B  340C               	retlw	12
  3235  116C  3402               	retlw	2
  3236  116D  347F               	retlw	127
  3237  116E  3400               	retlw	0
  3238  116F  3400               	retlw	0
  3239  1170  3400               	retlw	0
  3240  1171  347F               	retlw	127
  3241  1172  3404               	retlw	4
  3242  1173  3408               	retlw	8
  3243  1174  3410               	retlw	16
  3244  1175  347F               	retlw	127
  3245  1176  3400               	retlw	0
  3246  1177  3400               	retlw	0
  3247  1178  3400               	retlw	0
  3248  1179  343E               	retlw	62
  3249  117A  3441               	retlw	65
  3250  117B  3441               	retlw	65
  3251  117C  3441               	retlw	65
  3252  117D  343E               	retlw	62
  3253  117E  3400               	retlw	0
  3254  117F  3400               	retlw	0
  3255  1180  3400               	retlw	0
  3256  1181  347F               	retlw	127
  3257  1182  3409               	retlw	9
  3258  1183  3409               	retlw	9
  3259  1184  3409               	retlw	9
  3260  1185  3406               	retlw	6
  3261  1186  3400               	retlw	0
  3262  1187  3400               	retlw	0
  3263  1188  3400               	retlw	0
  3264  1189  343E               	retlw	62
  3265  118A  3441               	retlw	65
  3266  118B  3451               	retlw	81
  3267  118C  3421               	retlw	33
  3268  118D  345E               	retlw	94
  3269  118E  3400               	retlw	0
  3270  118F  3400               	retlw	0
  3271  1190  3400               	retlw	0
  3272  1191  347F               	retlw	127
  3273  1192  3409               	retlw	9
  3274  1193  3419               	retlw	25
  3275  1194  3429               	retlw	41
  3276  1195  3446               	retlw	70
  3277  1196  3400               	retlw	0
  3278  1197  3400               	retlw	0
  3279  1198  3400               	retlw	0
  3280  1199  3426               	retlw	38
  3281  119A  3449               	retlw	73
  3282  119B  3449               	retlw	73
  3283  119C  3449               	retlw	73
  3284  119D  3432               	retlw	50
  3285  119E  3400               	retlw	0
  3286  119F  3400               	retlw	0
  3287  11A0  3400               	retlw	0
  3288  11A1  3401               	retlw	1
  3289  11A2  3401               	retlw	1
  3290  11A3  347F               	retlw	127
  3291  11A4  3401               	retlw	1
  3292  11A5  3401               	retlw	1
  3293  11A6  3400               	retlw	0
  3294  11A7  3400               	retlw	0
  3295  11A8  3400               	retlw	0
  3296  11A9  343F               	retlw	63
  3297  11AA  3440               	retlw	64
  3298  11AB  3440               	retlw	64
  3299  11AC  3440               	retlw	64
  3300  11AD  343F               	retlw	63
  3301  11AE  3400               	retlw	0
  3302  11AF  3400               	retlw	0
  3303  11B0  3400               	retlw	0
  3304  11B1  341F               	retlw	31
  3305  11B2  3420               	retlw	32
  3306  11B3  3440               	retlw	64
  3307  11B4  3420               	retlw	32
  3308  11B5  341F               	retlw	31
  3309  11B6  3400               	retlw	0
  3310  11B7  3400               	retlw	0
  3311  11B8  3400               	retlw	0
  3312  11B9  343F               	retlw	63
  3313  11BA  3440               	retlw	64
  3314  11BB  3438               	retlw	56
  3315  11BC  3440               	retlw	64
  3316  11BD  343F               	retlw	63
  3317  11BE  3400               	retlw	0
  3318  11BF  3400               	retlw	0
  3319  11C0  3400               	retlw	0
  3320  11C1  3463               	retlw	99
  3321  11C2  3414               	retlw	20
  3322  11C3  3408               	retlw	8
  3323  11C4  3414               	retlw	20
  3324  11C5  3463               	retlw	99
  3325  11C6  3400               	retlw	0
  3326  11C7  3400               	retlw	0
  3327  11C8  3400               	retlw	0
  3328  11C9  3403               	retlw	3
  3329  11CA  3404               	retlw	4
  3330  11CB  3478               	retlw	120
  3331  11CC  3404               	retlw	4
  3332  11CD  3403               	retlw	3
  3333  11CE  3400               	retlw	0
  3334  11CF  3400               	retlw	0
  3335  11D0  3400               	retlw	0
  3336  11D1  3461               	retlw	97
  3337  11D2  3451               	retlw	81
  3338  11D3  3449               	retlw	73
  3339  11D4  3445               	retlw	69
  3340  11D5  3443               	retlw	67
  3341  11D6  3400               	retlw	0
  3342  11D7  3400               	retlw	0
  3343  11D8  3400               	retlw	0
  3344  11D9  347F               	retlw	127
  3345  11DA  3441               	retlw	65
  3346  11DB  3441               	retlw	65
  3347  11DC  3400               	retlw	0
  3348  11DD  3400               	retlw	0
  3349  11DE  3400               	retlw	0
  3350  11DF  3400               	retlw	0
  3351  11E0  3400               	retlw	0
  3352  11E1  3402               	retlw	2
  3353  11E2  3404               	retlw	4
  3354  11E3  3408               	retlw	8
  3355  11E4  3410               	retlw	16
  3356  11E5  3420               	retlw	32
  3357  11E6  3400               	retlw	0
  3358  11E7  3400               	retlw	0
  3359  11E8  3400               	retlw	0
  3360  11E9  3441               	retlw	65
  3361  11EA  3441               	retlw	65
  3362  11EB  347F               	retlw	127
  3363  11EC  3400               	retlw	0
  3364  11ED  3400               	retlw	0
  3365  11EE  3400               	retlw	0
  3366  11EF  3400               	retlw	0
  3367  11F0  3400               	retlw	0
  3368  11F1  3404               	retlw	4
  3369  11F2  3402               	retlw	2
  3370  11F3  3401               	retlw	1
  3371  11F4  3402               	retlw	2
  3372  11F5  3404               	retlw	4
  3373  11F6  3400               	retlw	0
  3374  11F7  3400               	retlw	0
  3375  11F8  3400               	retlw	0
  3376  11F9  3480               	retlw	128
  3377  11FA  3480               	retlw	128
  3378  11FB  3480               	retlw	128
  3379  11FC  3480               	retlw	128
  3380  11FD  3480               	retlw	128
  3381  11FE  3400               	retlw	0
  3382  11FF  3400               	retlw	0
  3383  1200  3400               	retlw	0
  3384  1201  3401               	retlw	1
  3385  1202  3402               	retlw	2
  3386  1203  3404               	retlw	4
  3387  1204  3400               	retlw	0
  3388  1205  3400               	retlw	0
  3389  1206  3400               	retlw	0
  3390  1207  3400               	retlw	0
  3391  1208  3400               	retlw	0
  3392  1209  3420               	retlw	32
  3393  120A  3454               	retlw	84
  3394  120B  3454               	retlw	84
  3395  120C  3454               	retlw	84
  3396  120D  3478               	retlw	120
  3397  120E  3400               	retlw	0
  3398  120F  3400               	retlw	0
  3399  1210  3400               	retlw	0
  3400  1211  347F               	retlw	127
  3401  1212  3448               	retlw	72
  3402  1213  3444               	retlw	68
  3403  1214  3444               	retlw	68
  3404  1215  3438               	retlw	56
  3405  1216  3400               	retlw	0
  3406  1217  3400               	retlw	0
  3407  1218  3400               	retlw	0
  3408  1219  3438               	retlw	56
  3409  121A  3444               	retlw	68
  3410  121B  3444               	retlw	68
  3411  121C  3428               	retlw	40
  3412  121D  3400               	retlw	0
  3413  121E  3400               	retlw	0
  3414  121F  3400               	retlw	0
  3415  1220  3400               	retlw	0
  3416  1221  3438               	retlw	56
  3417  1222  3444               	retlw	68
  3418  1223  3444               	retlw	68
  3419  1224  3448               	retlw	72
  3420  1225  347F               	retlw	127
  3421  1226  3400               	retlw	0
  3422  1227  3400               	retlw	0
  3423  1228  3400               	retlw	0
  3424  1229  3438               	retlw	56
  3425  122A  3454               	retlw	84
  3426  122B  3454               	retlw	84
  3427  122C  3454               	retlw	84
  3428  122D  3418               	retlw	24
  3429  122E  3400               	retlw	0
  3430  122F  3400               	retlw	0
  3431  1230  3400               	retlw	0
  3432  1231  3408               	retlw	8
  3433  1232  347E               	retlw	126
  3434  1233  3409               	retlw	9
  3435  1234  3402               	retlw	2
  3436  1235  3400               	retlw	0
  3437  1236  3400               	retlw	0
  3438  1237  3400               	retlw	0
  3439  1238  3400               	retlw	0
  3440  1239  3418               	retlw	24
  3441  123A  34A4               	retlw	164
  3442  123B  34A4               	retlw	164
  3443  123C  34A4               	retlw	164
  3444  123D  347C               	retlw	124
  3445  123E  3400               	retlw	0
  3446  123F  3400               	retlw	0
  3447  1240  3400               	retlw	0
  3448  1241  347F               	retlw	127
  3449  1242  3408               	retlw	8
  3450  1243  3404               	retlw	4
  3451  1244  3404               	retlw	4
  3452  1245  3478               	retlw	120
  3453  1246  3400               	retlw	0
  3454  1247  3400               	retlw	0
  3455  1248  3400               	retlw	0
  3456  1249  3400               	retlw	0
  3457  124A  347D               	retlw	125
  3458  124B  3400               	retlw	0
  3459  124C  3400               	retlw	0
  3460  124D  3400               	retlw	0
  3461  124E  3400               	retlw	0
  3462  124F  3400               	retlw	0
  3463  1250  3400               	retlw	0
  3464  1251  3480               	retlw	128
  3465  1252  3484               	retlw	132
  3466  1253  347D               	retlw	125
  3467  1254  3400               	retlw	0
  3468  1255  3400               	retlw	0
  3469  1256  3400               	retlw	0
  3470  1257  3400               	retlw	0
  3471  1258  3400               	retlw	0
  3472  1259  347F               	retlw	127
  3473  125A  3410               	retlw	16
  3474  125B  3428               	retlw	40
  3475  125C  3444               	retlw	68
  3476  125D  3400               	retlw	0
  3477  125E  3400               	retlw	0
  3478  125F  3400               	retlw	0
  3479  1260  3400               	retlw	0
  3480  1261  3441               	retlw	65
  3481  1262  347F               	retlw	127
  3482  1263  3440               	retlw	64
  3483  1264  3400               	retlw	0
  3484  1265  3400               	retlw	0
  3485  1266  3400               	retlw	0
  3486  1267  3400               	retlw	0
  3487  1268  3400               	retlw	0
  3488  1269  347C               	retlw	124
  3489  126A  3404               	retlw	4
  3490  126B  3418               	retlw	24
  3491  126C  3404               	retlw	4
  3492  126D  3478               	retlw	120
  3493  126E  3400               	retlw	0
  3494  126F  3400               	retlw	0
  3495  1270  3400               	retlw	0
  3496  1271  347C               	retlw	124
  3497  1272  3408               	retlw	8
  3498  1273  3404               	retlw	4
  3499  1274  347C               	retlw	124
  3500  1275  3400               	retlw	0
  3501  1276  3400               	retlw	0
  3502  1277  3400               	retlw	0
  3503  1278  3400               	retlw	0
  3504  1279  3438               	retlw	56
  3505  127A  3444               	retlw	68
  3506  127B  3444               	retlw	68
  3507  127C  3438               	retlw	56
  3508  127D  3400               	retlw	0
  3509  127E  3400               	retlw	0
  3510  127F  3400               	retlw	0
  3511  1280  3400               	retlw	0
  3512  1281  34FC               	retlw	252
  3513  1282  3424               	retlw	36
  3514  1283  3424               	retlw	36
  3515  1284  3418               	retlw	24
  3516  1285  3400               	retlw	0
  3517  1286  3400               	retlw	0
  3518  1287  3400               	retlw	0
  3519  1288  3400               	retlw	0
  3520  1289  3418               	retlw	24
  3521  128A  3424               	retlw	36
  3522  128B  3424               	retlw	36
  3523  128C  34FC               	retlw	252
  3524  128D  3400               	retlw	0
  3525  128E  3400               	retlw	0
  3526  128F  3400               	retlw	0
  3527  1290  3400               	retlw	0
  3528  1291  3400               	retlw	0
  3529  1292  347C               	retlw	124
  3530  1293  3408               	retlw	8
  3531  1294  3404               	retlw	4
  3532  1295  3400               	retlw	0
  3533  1296  3400               	retlw	0
  3534  1297  3400               	retlw	0
  3535  1298  3400               	retlw	0
  3536  1299  3448               	retlw	72
  3537  129A  3454               	retlw	84
  3538  129B  3454               	retlw	84
  3539  129C  3424               	retlw	36
  3540  129D  3400               	retlw	0
  3541  129E  3400               	retlw	0
  3542  129F  3400               	retlw	0
  3543  12A0  3400               	retlw	0
  3544  12A1  3404               	retlw	4
  3545  12A2  347F               	retlw	127
  3546  12A3  3444               	retlw	68
  3547  12A4  3400               	retlw	0
  3548  12A5  3400               	retlw	0
  3549  12A6  3400               	retlw	0
  3550  12A7  3400               	retlw	0
  3551  12A8  3400               	retlw	0
  3552  12A9  343C               	retlw	60
  3553  12AA  3440               	retlw	64
  3554  12AB  3440               	retlw	64
  3555  12AC  347C               	retlw	124
  3556  12AD  3400               	retlw	0
  3557  12AE  3400               	retlw	0
  3558  12AF  3400               	retlw	0
  3559  12B0  3400               	retlw	0
  3560  12B1  341C               	retlw	28
  3561  12B2  3420               	retlw	32
  3562  12B3  3440               	retlw	64
  3563  12B4  3420               	retlw	32
  3564  12B5  341C               	retlw	28
  3565  12B6  3400               	retlw	0
  3566  12B7  3400               	retlw	0
  3567  12B8  3400               	retlw	0
  3568  12B9  343C               	retlw	60
  3569  12BA  3440               	retlw	64
  3570  12BB  3430               	retlw	48
  3571  12BC  3440               	retlw	64
  3572  12BD  343C               	retlw	60
  3573  12BE  3400               	retlw	0
  3574  12BF  3400               	retlw	0
  3575  12C0  3400               	retlw	0
  3576  12C1  3444               	retlw	68
  3577  12C2  3428               	retlw	40
  3578  12C3  3410               	retlw	16
  3579  12C4  3428               	retlw	40
  3580  12C5  3444               	retlw	68
  3581  12C6  3400               	retlw	0
  3582  12C7  3400               	retlw	0
  3583  12C8  3400               	retlw	0
  3584  12C9  341C               	retlw	28
  3585  12CA  34A0               	retlw	160
  3586  12CB  34A0               	retlw	160
  3587  12CC  347C               	retlw	124
  3588  12CD  3400               	retlw	0
  3589  12CE  3400               	retlw	0
  3590  12CF  3400               	retlw	0
  3591  12D0  3400               	retlw	0
  3592  12D1  3444               	retlw	68
  3593  12D2  3464               	retlw	100
  3594  12D3  3454               	retlw	84
  3595  12D4  344C               	retlw	76
  3596  12D5  3444               	retlw	68
  3597  12D6  3400               	retlw	0
  3598  12D7  3400               	retlw	0
  3599  12D8  3400               	retlw	0
  3600  12D9  3408               	retlw	8
  3601  12DA  3436               	retlw	54
  3602  12DB  3441               	retlw	65
  3603  12DC  3400               	retlw	0
  3604  12DD  3400               	retlw	0
  3605  12DE  3400               	retlw	0
  3606  12DF  3400               	retlw	0
  3607  12E0  3400               	retlw	0
  3608  12E1  3400               	retlw	0
  3609  12E2  347F               	retlw	127
  3610  12E3  3400               	retlw	0
  3611  12E4  3400               	retlw	0
  3612  12E5  3400               	retlw	0
  3613  12E6  3400               	retlw	0
  3614  12E7  3400               	retlw	0
  3615  12E8  3400               	retlw	0
  3616  12E9  3441               	retlw	65
  3617  12EA  3436               	retlw	54
  3618  12EB  3408               	retlw	8
  3619  12EC  3400               	retlw	0
  3620  12ED  3400               	retlw	0
  3621  12EE  3400               	retlw	0
  3622  12EF  3400               	retlw	0
  3623  12F0  3400               	retlw	0
  3624  12F1  3402               	retlw	2
  3625  12F2  3401               	retlw	1
  3626  12F3  3401               	retlw	1
  3627  12F4  3402               	retlw	2
  3628  12F5  3401               	retlw	1
  3629  12F6  3400               	retlw	0
  3630  12F7  3400               	retlw	0
  3631  12F8  3400               	retlw	0
  3632  12F9  3402               	retlw	2
  3633  12FA  3405               	retlw	5
  3634  12FB  3405               	retlw	5
  3635  12FC  3402               	retlw	2
  3636  12FD  3400               	retlw	0
  3637  12FE  3400               	retlw	0
  3638  12FF  3400               	retlw	0
  3639  1300                     __end_of_OledFont:	
  3640                           
  3641                           	psect	stringtext2
  3642  1800                     __pstringtext2:	
  3643  1800                     ltc6804@crc15Table:	
  3644  1800  3400               	retlw	0
  3645  1801  3400               	retlw	0
  3646  1802  3499               	retlw	153
  3647  1803  34C5               	retlw	197
  3648  1804  34AB               	retlw	171
  3649  1805  34CE               	retlw	206
  3650  1806  3432               	retlw	50
  3651  1807  340B               	retlw	11
  3652  1808  34CF               	retlw	207
  3653  1809  34D8               	retlw	216
  3654  180A  3456               	retlw	86
  3655  180B  341D               	retlw	29
  3656  180C  3464               	retlw	100
  3657  180D  3416               	retlw	22
  3658  180E  34FD               	retlw	253
  3659  180F  34D3               	retlw	211
  3660  1810  3407               	retlw	7
  3661  1811  34F4               	retlw	244
  3662  1812  349E               	retlw	158
  3663  1813  3431               	retlw	49
  3664  1814  34AC               	retlw	172
  3665  1815  343A               	retlw	58
  3666  1816  3435               	retlw	53
  3667  1817  34FF               	retlw	255
  3668  1818  34C8               	retlw	200
  3669  1819  342C               	retlw	44
  3670  181A  3451               	retlw	81
  3671  181B  34E9               	retlw	233
  3672  181C  3463               	retlw	99
  3673  181D  34E2               	retlw	226
  3674  181E  34FA               	retlw	250
  3675  181F  3427               	retlw	39
  3676  1820  3497               	retlw	151
  3677  1821  34AD               	retlw	173
  3678  1822  340E               	retlw	14
  3679  1823  3468               	retlw	104
  3680  1824  343C               	retlw	60
  3681  1825  3463               	retlw	99
  3682  1826  34A5               	retlw	165
  3683  1827  34A6               	retlw	166
  3684  1828  3458               	retlw	88
  3685  1829  3475               	retlw	117
  3686  182A  34C1               	retlw	193
  3687  182B  34B0               	retlw	176
  3688  182C  34F3               	retlw	243
  3689  182D  34BB               	retlw	187
  3690  182E  346A               	retlw	106
  3691  182F  347E               	retlw	126
  3692  1830  3490               	retlw	144
  3693  1831  3459               	retlw	89
  3694  1832  3409               	retlw	9
  3695  1833  349C               	retlw	156
  3696  1834  343B               	retlw	59
  3697  1835  3497               	retlw	151
  3698  1836  34A2               	retlw	162
  3699  1837  3452               	retlw	82
  3700  1838  345F               	retlw	95
  3701  1839  3481               	retlw	129
  3702  183A  34C6               	retlw	198
  3703  183B  3444               	retlw	68
  3704  183C  34F4               	retlw	244
  3705  183D  344F               	retlw	79
  3706  183E  346D               	retlw	109
  3707  183F  348A               	retlw	138
  3708  1840  342E               	retlw	46
  3709  1841  345B               	retlw	91
  3710  1842  34B7               	retlw	183
  3711  1843  349E               	retlw	158
  3712  1844  3485               	retlw	133
  3713  1845  3495               	retlw	149
  3714  1846  341C               	retlw	28
  3715  1847  3450               	retlw	80
  3716  1848  34E1               	retlw	225
  3717  1849  3483               	retlw	131
  3718  184A  3478               	retlw	120
  3719  184B  3446               	retlw	70
  3720  184C  344A               	retlw	74
  3721  184D  344D               	retlw	77
  3722  184E  34D3               	retlw	211
  3723  184F  3488               	retlw	136
  3724  1850  3429               	retlw	41
  3725  1851  34AF               	retlw	175
  3726  1852  34B0               	retlw	176
  3727  1853  346A               	retlw	106
  3728  1854  3482               	retlw	130
  3729  1855  3461               	retlw	97
  3730  1856  341B               	retlw	27
  3731  1857  34A4               	retlw	164
  3732  1858  34E6               	retlw	230
  3733  1859  3477               	retlw	119
  3734  185A  347F               	retlw	127
  3735  185B  34B2               	retlw	178
  3736  185C  344D               	retlw	77
  3737  185D  34B9               	retlw	185
  3738  185E  34D4               	retlw	212
  3739  185F  347C               	retlw	124
  3740  1860  34B9               	retlw	185
  3741  1861  34F6               	retlw	246
  3742  1862  3420               	retlw	32
  3743  1863  3433               	retlw	51
  3744  1864  3412               	retlw	18
  3745  1865  3438               	retlw	56
  3746  1866  348B               	retlw	139
  3747  1867  34FD               	retlw	253
  3748  1868  3476               	retlw	118
  3749  1869  342E               	retlw	46
  3750  186A  34EF               	retlw	239
  3751  186B  34EB               	retlw	235
  3752  186C  34DD               	retlw	221
  3753  186D  34E0               	retlw	224
  3754  186E  3444               	retlw	68
  3755  186F  3425               	retlw	37
  3756  1870  34BE               	retlw	190
  3757  1871  3402               	retlw	2
  3758  1872  3427               	retlw	39
  3759  1873  34C7               	retlw	199
  3760  1874  3415               	retlw	21
  3761  1875  34CC               	retlw	204
  3762  1876  348C               	retlw	140
  3763  1877  3409               	retlw	9
  3764  1878  3471               	retlw	113
  3765  1879  34DA               	retlw	218
  3766  187A  34E8               	retlw	232
  3767  187B  341F               	retlw	31
  3768  187C  34DA               	retlw	218
  3769  187D  3414               	retlw	20
  3770  187E  3443               	retlw	67
  3771  187F  34D1               	retlw	209
  3772  1880  34C5               	retlw	197
  3773  1881  34F3               	retlw	243
  3774  1882  345C               	retlw	92
  3775  1883  3436               	retlw	54
  3776  1884  346E               	retlw	110
  3777  1885  343D               	retlw	61
  3778  1886  34F7               	retlw	247
  3779  1887  34F8               	retlw	248
  3780  1888  340A               	retlw	10
  3781  1889  342B               	retlw	43
  3782  188A  3493               	retlw	147
  3783  188B  34EE               	retlw	238
  3784  188C  34A1               	retlw	161
  3785  188D  34E5               	retlw	229
  3786  188E  3438               	retlw	56
  3787  188F  3420               	retlw	32
  3788  1890  34C2               	retlw	194
  3789  1891  3407               	retlw	7
  3790  1892  345B               	retlw	91
  3791  1893  34C2               	retlw	194
  3792  1894  3469               	retlw	105
  3793  1895  34C9               	retlw	201
  3794  1896  34F0               	retlw	240
  3795  1897  340C               	retlw	12
  3796  1898  340D               	retlw	13
  3797  1899  34DF               	retlw	223
  3798  189A  3494               	retlw	148
  3799  189B  341A               	retlw	26
  3800  189C  34A6               	retlw	166
  3801  189D  3411               	retlw	17
  3802  189E  343F               	retlw	63
  3803  189F  34D4               	retlw	212
  3804  18A0  3452               	retlw	82
  3805  18A1  345E               	retlw	94
  3806  18A2  34CB               	retlw	203
  3807  18A3  349B               	retlw	155
  3808  18A4  34F9               	retlw	249
  3809  18A5  3490               	retlw	144
  3810  18A6  3460               	retlw	96
  3811  18A7  3455               	retlw	85
  3812  18A8  349D               	retlw	157
  3813  18A9  3486               	retlw	134
  3814  18AA  3404               	retlw	4
  3815  18AB  3443               	retlw	67
  3816  18AC  3436               	retlw	54
  3817  18AD  3448               	retlw	72
  3818  18AE  34AF               	retlw	175
  3819  18AF  348D               	retlw	141
  3820  18B0  3455               	retlw	85
  3821  18B1  34AA               	retlw	170
  3822  18B2  34CC               	retlw	204
  3823  18B3  346F               	retlw	111
  3824  18B4  34FE               	retlw	254
  3825  18B5  3464               	retlw	100
  3826  18B6  3467               	retlw	103
  3827  18B7  34A1               	retlw	161
  3828  18B8  349A               	retlw	154
  3829  18B9  3472               	retlw	114
  3830  18BA  3403               	retlw	3
  3831  18BB  34B7               	retlw	183
  3832  18BC  3431               	retlw	49
  3833  18BD  34BC               	retlw	188
  3834  18BE  34A8               	retlw	168
  3835  18BF  3479               	retlw	121
  3836  18C0  34EB               	retlw	235
  3837  18C1  34A8               	retlw	168
  3838  18C2  3472               	retlw	114
  3839  18C3  346D               	retlw	109
  3840  18C4  3440               	retlw	64
  3841  18C5  3466               	retlw	102
  3842  18C6  34D9               	retlw	217
  3843  18C7  34A3               	retlw	163
  3844  18C8  3424               	retlw	36
  3845  18C9  3470               	retlw	112
  3846  18CA  34BD               	retlw	189
  3847  18CB  34B5               	retlw	181
  3848  18CC  348F               	retlw	143
  3849  18CD  34BE               	retlw	190
  3850  18CE  3416               	retlw	22
  3851  18CF  347B               	retlw	123
  3852  18D0  34EC               	retlw	236
  3853  18D1  345C               	retlw	92
  3854  18D2  3475               	retlw	117
  3855  18D3  3499               	retlw	153
  3856  18D4  3447               	retlw	71
  3857  18D5  3492               	retlw	146
  3858  18D6  34DE               	retlw	222
  3859  18D7  3457               	retlw	87
  3860  18D8  3423               	retlw	35
  3861  18D9  3484               	retlw	132
  3862  18DA  34BA               	retlw	186
  3863  18DB  3441               	retlw	65
  3864  18DC  3488               	retlw	136
  3865  18DD  344A               	retlw	74
  3866  18DE  3411               	retlw	17
  3867  18DF  348F               	retlw	143
  3868  18E0  347C               	retlw	124
  3869  18E1  3405               	retlw	5
  3870  18E2  34E5               	retlw	229
  3871  18E3  34C0               	retlw	192
  3872  18E4  34D7               	retlw	215
  3873  18E5  34CB               	retlw	203
  3874  18E6  344E               	retlw	78
  3875  18E7  340E               	retlw	14
  3876  18E8  34B3               	retlw	179
  3877  18E9  34DD               	retlw	221
  3878  18EA  342A               	retlw	42
  3879  18EB  3418               	retlw	24
  3880  18EC  3418               	retlw	24
  3881  18ED  3413               	retlw	19
  3882  18EE  3481               	retlw	129
  3883  18EF  34D6               	retlw	214
  3884  18F0  347B               	retlw	123
  3885  18F1  34F1               	retlw	241
  3886  18F2  34E2               	retlw	226
  3887  18F3  3434               	retlw	52
  3888  18F4  34D0               	retlw	208
  3889  18F5  343F               	retlw	63
  3890  18F6  3449               	retlw	73
  3891  18F7  34FA               	retlw	250
  3892  18F8  34B4               	retlw	180
  3893  18F9  3429               	retlw	41
  3894  18FA  342D               	retlw	45
  3895  18FB  34EC               	retlw	236
  3896  18FC  341F               	retlw	31
  3897  18FD  34E7               	retlw	231
  3898  18FE  3486               	retlw	134
  3899  18FF  3422               	retlw	34
  3900  1900  3413               	retlw	19
  3901  1901  34A2               	retlw	162
  3902  1902  348A               	retlw	138
  3903  1903  3467               	retlw	103
  3904  1904  34B8               	retlw	184
  3905  1905  346C               	retlw	108
  3906  1906  3421               	retlw	33
  3907  1907  34A9               	retlw	169
  3908  1908  34DC               	retlw	220
  3909  1909  347A               	retlw	122
  3910  190A  3445               	retlw	69
  3911  190B  34BF               	retlw	191
  3912  190C  3477               	retlw	119
  3913  190D  34B4               	retlw	180
  3914  190E  34EE               	retlw	238
  3915  190F  3471               	retlw	113
  3916  1910  3414               	retlw	20
  3917  1911  3456               	retlw	86
  3918  1912  348D               	retlw	141
  3919  1913  3493               	retlw	147
  3920  1914  34BF               	retlw	191
  3921  1915  3498               	retlw	152
  3922  1916  3426               	retlw	38
  3923  1917  345D               	retlw	93
  3924  1918  34DB               	retlw	219
  3925  1919  348E               	retlw	142
  3926  191A  3442               	retlw	66
  3927  191B  344B               	retlw	75
  3928  191C  3470               	retlw	112
  3929  191D  3440               	retlw	64
  3930  191E  34E9               	retlw	233
  3931  191F  3485               	retlw	133
  3932  1920  3484               	retlw	132
  3933  1921  340F               	retlw	15
  3934  1922  341D               	retlw	29
  3935  1923  34CA               	retlw	202
  3936  1924  342F               	retlw	47
  3937  1925  34C1               	retlw	193
  3938  1926  346F               	retlw	111
  3939  1927  344B               	retlw	75
  3940  1928  344B               	retlw	75
  3941  1929  34D7               	retlw	215
  3942  192A  34D2               	retlw	210
  3943  192B  3412               	retlw	18
  3944  192C  34E0               	retlw	224
  3945  192D  3419               	retlw	25
  3946  192E  3479               	retlw	121
  3947  192F  34DC               	retlw	220
  3948  1930  3483               	retlw	131
  3949  1931  34FB               	retlw	251
  3950  1932  341A               	retlw	26
  3951  1933  343E               	retlw	62
  3952  1934  3428               	retlw	40
  3953  1935  3435               	retlw	53
  3954  1936  34B1               	retlw	177
  3955  1937  34F0               	retlw	240
  3956  1938  344C               	retlw	76
  3957  1939  3423               	retlw	35
  3958  193A  34D5               	retlw	213
  3959  193B  34E6               	retlw	230
  3960  193C  34E7               	retlw	231
  3961  193D  34ED               	retlw	237
  3962  193E  347E               	retlw	126
  3963  193F  3428               	retlw	40
  3964  1940  343D               	retlw	61
  3965  1941  34F9               	retlw	249
  3966  1942  34A4               	retlw	164
  3967  1943  343C               	retlw	60
  3968  1944  3496               	retlw	150
  3969  1945  3437               	retlw	55
  3970  1946  340F               	retlw	15
  3971  1947  34F2               	retlw	242
  3972  1948  34F2               	retlw	242
  3973  1949  3421               	retlw	33
  3974  194A  346B               	retlw	107
  3975  194B  34E4               	retlw	228
  3976  194C  3459               	retlw	89
  3977  194D  34EF               	retlw	239
  3978  194E  34C0               	retlw	192
  3979  194F  342A               	retlw	42
  3980  1950  343A               	retlw	58
  3981  1951  340D               	retlw	13
  3982  1952  34A3               	retlw	163
  3983  1953  34C8               	retlw	200
  3984  1954  3491               	retlw	145
  3985  1955  34C3               	retlw	195
  3986  1956  3408               	retlw	8
  3987  1957  3406               	retlw	6
  3988  1958  34F5               	retlw	245
  3989  1959  34D5               	retlw	213
  3990  195A  346C               	retlw	108
  3991  195B  3410               	retlw	16
  3992  195C  345E               	retlw	94
  3993  195D  341B               	retlw	27
  3994  195E  34C7               	retlw	199
  3995  195F  34DE               	retlw	222
  3996  1960  34AA               	retlw	170
  3997  1961  3454               	retlw	84
  3998  1962  3433               	retlw	51
  3999  1963  3491               	retlw	145
  4000  1964  3401               	retlw	1
  4001  1965  349A               	retlw	154
  4002  1966  3498               	retlw	152
  4003  1967  345F               	retlw	95
  4004  1968  3465               	retlw	101
  4005  1969  348C               	retlw	140
  4006  196A  34FC               	retlw	252
  4007  196B  3449               	retlw	73
  4008  196C  34CE               	retlw	206
  4009  196D  3442               	retlw	66
  4010  196E  3457               	retlw	87
  4011  196F  3487               	retlw	135
  4012  1970  34AD               	retlw	173
  4013  1971  34A0               	retlw	160
  4014  1972  3434               	retlw	52
  4015  1973  3465               	retlw	101
  4016  1974  3406               	retlw	6
  4017  1975  346E               	retlw	110
  4018  1976  349F               	retlw	159
  4019  1977  34AB               	retlw	171
  4020  1978  3462               	retlw	98
  4021  1979  3478               	retlw	120
  4022  197A  34FB               	retlw	251
  4023  197B  34BD               	retlw	189
  4024  197C  34C9               	retlw	201
  4025  197D  34B6               	retlw	182
  4026  197E  3450               	retlw	80
  4027  197F  3473               	retlw	115
  4028  1980  34D6               	retlw	214
  4029  1981  3451               	retlw	81
  4030  1982  344F               	retlw	79
  4031  1983  3494               	retlw	148
  4032  1984  347D               	retlw	125
  4033  1985  349F               	retlw	159
  4034  1986  34E4               	retlw	228
  4035  1987  345A               	retlw	90
  4036  1988  3419               	retlw	25
  4037  1989  3489               	retlw	137
  4038  198A  3480               	retlw	128
  4039  198B  344C               	retlw	76
  4040  198C  34B2               	retlw	178
  4041  198D  3447               	retlw	71
  4042  198E  342B               	retlw	43
  4043  198F  3482               	retlw	130
  4044  1990  34D1               	retlw	209
  4045  1991  34A5               	retlw	165
  4046  1992  3448               	retlw	72
  4047  1993  3460               	retlw	96
  4048  1994  347A               	retlw	122
  4049  1995  346B               	retlw	107
  4050  1996  34E3               	retlw	227
  4051  1997  34AE               	retlw	174
  4052  1998  341E               	retlw	30
  4053  1999  347D               	retlw	125
  4054  199A  3487               	retlw	135
  4055  199B  34B8               	retlw	184
  4056  199C  34B5               	retlw	181
  4057  199D  34B3               	retlw	179
  4058  199E  342C               	retlw	44
  4059  199F  3476               	retlw	118
  4060  19A0  3441               	retlw	65
  4061  19A1  34FC               	retlw	252
  4062  19A2  34D8               	retlw	216
  4063  19A3  3439               	retlw	57
  4064  19A4  34EA               	retlw	234
  4065  19A5  3432               	retlw	50
  4066  19A6  3473               	retlw	115
  4067  19A7  34F7               	retlw	247
  4068  19A8  348E               	retlw	142
  4069  19A9  3424               	retlw	36
  4070  19AA  3417               	retlw	23
  4071  19AB  34E1               	retlw	225
  4072  19AC  3425               	retlw	37
  4073  19AD  34EA               	retlw	234
  4074  19AE  34BC               	retlw	188
  4075  19AF  342F               	retlw	47
  4076  19B0  3446               	retlw	70
  4077  19B1  3408               	retlw	8
  4078  19B2  34DF               	retlw	223
  4079  19B3  34CD               	retlw	205
  4080  19B4  34ED               	retlw	237
  4081  19B5  34C6               	retlw	198
  4082  19B6  3474               	retlw	116
  4083  19B7  3403               	retlw	3
  4084  19B8  3489               	retlw	137
  4085  19B9  34D0               	retlw	208
  4086  19BA  3410               	retlw	16
  4087  19BB  3415               	retlw	21
  4088  19BC  3422               	retlw	34
  4089  19BD  341E               	retlw	30
  4090  19BE  34BB               	retlw	187
  4091  19BF  34DB               	retlw	219
  4092  19C0  34F8               	retlw	248
  4093  19C1  340A               	retlw	10
  4094  19C2  3461               	retlw	97
  4095  19C3  34CF               	retlw	207
  4096  19C4  3453               	retlw	83
  4097  19C5  34C4               	retlw	196
  4098  19C6  34CA               	retlw	202
  4099  19C7  3401               	retlw	1
  4100  19C8  3437               	retlw	55
  4101  19C9  34D2               	retlw	210
  4102  19CA  34AE               	retlw	174
  4103  19CB  3417               	retlw	23
  4104  19CC  349C               	retlw	156
  4105  19CD  341C               	retlw	28
  4106  19CE  3405               	retlw	5
  4107  19CF  34D9               	retlw	217
  4108  19D0  34FF               	retlw	255
  4109  19D1  34FE               	retlw	254
  4110  19D2  3466               	retlw	102
  4111  19D3  343B               	retlw	59
  4112  19D4  3454               	retlw	84
  4113  19D5  3430               	retlw	48
  4114  19D6  34CD               	retlw	205
  4115  19D7  34F5               	retlw	245
  4116  19D8  3430               	retlw	48
  4117  19D9  3426               	retlw	38
  4118  19DA  34A9               	retlw	169
  4119  19DB  34E3               	retlw	227
  4120  19DC  349B               	retlw	155
  4121  19DD  34E8               	retlw	232
  4122  19DE  3402               	retlw	2
  4123  19DF  342D               	retlw	45
  4124  19E0  346F               	retlw	111
  4125  19E1  34A7               	retlw	167
  4126  19E2  34F6               	retlw	246
  4127  19E3  3462               	retlw	98
  4128  19E4  34C4               	retlw	196
  4129  19E5  3469               	retlw	105
  4130  19E6  345D               	retlw	93
  4131  19E7  34AC               	retlw	172
  4132  19E8  34A0               	retlw	160
  4133  19E9  347F               	retlw	127
  4134  19EA  3439               	retlw	57
  4135  19EB  34BA               	retlw	186
  4136  19EC  340B               	retlw	11
  4137  19ED  34B1               	retlw	177
  4138  19EE  3492               	retlw	146
  4139  19EF  3474               	retlw	116
  4140  19F0  3468               	retlw	104
  4141  19F1  3453               	retlw	83
  4142  19F2  34F1               	retlw	241
  4143  19F3  3496               	retlw	150
  4144  19F4  34C3               	retlw	195
  4145  19F5  349D               	retlw	157
  4146  19F6  345A               	retlw	90
  4147  19F7  3458               	retlw	88
  4148  19F8  34A7               	retlw	167
  4149  19F9  348B               	retlw	139
  4150  19FA  343E               	retlw	62
  4151  19FB  344E               	retlw	78
  4152  19FC  340C               	retlw	12
  4153  19FD  3445               	retlw	69
  4154  19FE  3495               	retlw	149
  4155  19FF  3480               	retlw	128
  4156  1A00                     __end_ofltc6804@crc15Table:	
  4157                           
  4158                           	psect	stringtext3
  4159  1A00                     __pstringtext3:	
  4160  1A00                     _crc15Table:	
  4161  1A00  3400               	retlw	0
  4162  1A01  3400               	retlw	0
  4163  1A02  3499               	retlw	153
  4164  1A03  34C5               	retlw	197
  4165  1A04  34AB               	retlw	171
  4166  1A05  34CE               	retlw	206
  4167  1A06  3432               	retlw	50
  4168  1A07  340B               	retlw	11
  4169  1A08  34CF               	retlw	207
  4170  1A09  34D8               	retlw	216
  4171  1A0A  3456               	retlw	86
  4172  1A0B  341D               	retlw	29
  4173  1A0C  3464               	retlw	100
  4174  1A0D  3416               	retlw	22
  4175  1A0E  34FD               	retlw	253
  4176  1A0F  34D3               	retlw	211
  4177  1A10  3407               	retlw	7
  4178  1A11  34F4               	retlw	244
  4179  1A12  349E               	retlw	158
  4180  1A13  3431               	retlw	49
  4181  1A14  34AC               	retlw	172
  4182  1A15  343A               	retlw	58
  4183  1A16  3435               	retlw	53
  4184  1A17  34FF               	retlw	255
  4185  1A18  34C8               	retlw	200
  4186  1A19  342C               	retlw	44
  4187  1A1A  3451               	retlw	81
  4188  1A1B  34E9               	retlw	233
  4189  1A1C  3463               	retlw	99
  4190  1A1D  34E2               	retlw	226
  4191  1A1E  34FA               	retlw	250
  4192  1A1F  3427               	retlw	39
  4193  1A20  3497               	retlw	151
  4194  1A21  34AD               	retlw	173
  4195  1A22  340E               	retlw	14
  4196  1A23  3468               	retlw	104
  4197  1A24  343C               	retlw	60
  4198  1A25  3463               	retlw	99
  4199  1A26  34A5               	retlw	165
  4200  1A27  34A6               	retlw	166
  4201  1A28  3458               	retlw	88
  4202  1A29  3475               	retlw	117
  4203  1A2A  34C1               	retlw	193
  4204  1A2B  34B0               	retlw	176
  4205  1A2C  34F3               	retlw	243
  4206  1A2D  34BB               	retlw	187
  4207  1A2E  346A               	retlw	106
  4208  1A2F  347E               	retlw	126
  4209  1A30  3490               	retlw	144
  4210  1A31  3459               	retlw	89
  4211  1A32  3409               	retlw	9
  4212  1A33  349C               	retlw	156
  4213  1A34  343B               	retlw	59
  4214  1A35  3497               	retlw	151
  4215  1A36  34A2               	retlw	162
  4216  1A37  3452               	retlw	82
  4217  1A38  345F               	retlw	95
  4218  1A39  3481               	retlw	129
  4219  1A3A  34C6               	retlw	198
  4220  1A3B  3444               	retlw	68
  4221  1A3C  34F4               	retlw	244
  4222  1A3D  344F               	retlw	79
  4223  1A3E  346D               	retlw	109
  4224  1A3F  348A               	retlw	138
  4225  1A40  342E               	retlw	46
  4226  1A41  345B               	retlw	91
  4227  1A42  34B7               	retlw	183
  4228  1A43  349E               	retlw	158
  4229  1A44  3485               	retlw	133
  4230  1A45  3495               	retlw	149
  4231  1A46  341C               	retlw	28
  4232  1A47  3450               	retlw	80
  4233  1A48  34E1               	retlw	225
  4234  1A49  3483               	retlw	131
  4235  1A4A  3478               	retlw	120
  4236  1A4B  3446               	retlw	70
  4237  1A4C  344A               	retlw	74
  4238  1A4D  344D               	retlw	77
  4239  1A4E  34D3               	retlw	211
  4240  1A4F  3488               	retlw	136
  4241  1A50  3429               	retlw	41
  4242  1A51  34AF               	retlw	175
  4243  1A52  34B0               	retlw	176
  4244  1A53  346A               	retlw	106
  4245  1A54  3482               	retlw	130
  4246  1A55  3461               	retlw	97
  4247  1A56  341B               	retlw	27
  4248  1A57  34A4               	retlw	164
  4249  1A58  34E6               	retlw	230
  4250  1A59  3477               	retlw	119
  4251  1A5A  347F               	retlw	127
  4252  1A5B  34B2               	retlw	178
  4253  1A5C  344D               	retlw	77
  4254  1A5D  34B9               	retlw	185
  4255  1A5E  34D4               	retlw	212
  4256  1A5F  347C               	retlw	124
  4257  1A60  34B9               	retlw	185
  4258  1A61  34F6               	retlw	246
  4259  1A62  3420               	retlw	32
  4260  1A63  3433               	retlw	51
  4261  1A64  3412               	retlw	18
  4262  1A65  3438               	retlw	56
  4263  1A66  348B               	retlw	139
  4264  1A67  34FD               	retlw	253
  4265  1A68  3476               	retlw	118
  4266  1A69  342E               	retlw	46
  4267  1A6A  34EF               	retlw	239
  4268  1A6B  34EB               	retlw	235
  4269  1A6C  34DD               	retlw	221
  4270  1A6D  34E0               	retlw	224
  4271  1A6E  3444               	retlw	68
  4272  1A6F  3425               	retlw	37
  4273  1A70  34BE               	retlw	190
  4274  1A71  3402               	retlw	2
  4275  1A72  3427               	retlw	39
  4276  1A73  34C7               	retlw	199
  4277  1A74  3415               	retlw	21
  4278  1A75  34CC               	retlw	204
  4279  1A76  348C               	retlw	140
  4280  1A77  3409               	retlw	9
  4281  1A78  3471               	retlw	113
  4282  1A79  34DA               	retlw	218
  4283  1A7A  34E8               	retlw	232
  4284  1A7B  341F               	retlw	31
  4285  1A7C  34DA               	retlw	218
  4286  1A7D  3414               	retlw	20
  4287  1A7E  3443               	retlw	67
  4288  1A7F  34D1               	retlw	209
  4289  1A80  34C5               	retlw	197
  4290  1A81  34F3               	retlw	243
  4291  1A82  345C               	retlw	92
  4292  1A83  3436               	retlw	54
  4293  1A84  346E               	retlw	110
  4294  1A85  343D               	retlw	61
  4295  1A86  34F7               	retlw	247
  4296  1A87  34F8               	retlw	248
  4297  1A88  340A               	retlw	10
  4298  1A89  342B               	retlw	43
  4299  1A8A  3493               	retlw	147
  4300  1A8B  34EE               	retlw	238
  4301  1A8C  34A1               	retlw	161
  4302  1A8D  34E5               	retlw	229
  4303  1A8E  3438               	retlw	56
  4304  1A8F  3420               	retlw	32
  4305  1A90  34C2               	retlw	194
  4306  1A91  3407               	retlw	7
  4307  1A92  345B               	retlw	91
  4308  1A93  34C2               	retlw	194
  4309  1A94  3469               	retlw	105
  4310  1A95  34C9               	retlw	201
  4311  1A96  34F0               	retlw	240
  4312  1A97  340C               	retlw	12
  4313  1A98  340D               	retlw	13
  4314  1A99  34DF               	retlw	223
  4315  1A9A  3494               	retlw	148
  4316  1A9B  341A               	retlw	26
  4317  1A9C  34A6               	retlw	166
  4318  1A9D  3411               	retlw	17
  4319  1A9E  343F               	retlw	63
  4320  1A9F  34D4               	retlw	212
  4321  1AA0  3452               	retlw	82
  4322  1AA1  345E               	retlw	94
  4323  1AA2  34CB               	retlw	203
  4324  1AA3  349B               	retlw	155
  4325  1AA4  34F9               	retlw	249
  4326  1AA5  3490               	retlw	144
  4327  1AA6  3460               	retlw	96
  4328  1AA7  3455               	retlw	85
  4329  1AA8  349D               	retlw	157
  4330  1AA9  3486               	retlw	134
  4331  1AAA  3404               	retlw	4
  4332  1AAB  3443               	retlw	67
  4333  1AAC  3436               	retlw	54
  4334  1AAD  3448               	retlw	72
  4335  1AAE  34AF               	retlw	175
  4336  1AAF  348D               	retlw	141
  4337  1AB0  3455               	retlw	85
  4338  1AB1  34AA               	retlw	170
  4339  1AB2  34CC               	retlw	204
  4340  1AB3  346F               	retlw	111
  4341  1AB4  34FE               	retlw	254
  4342  1AB5  3464               	retlw	100
  4343  1AB6  3467               	retlw	103
  4344  1AB7  34A1               	retlw	161
  4345  1AB8  349A               	retlw	154
  4346  1AB9  3472               	retlw	114
  4347  1ABA  3403               	retlw	3
  4348  1ABB  34B7               	retlw	183
  4349  1ABC  3431               	retlw	49
  4350  1ABD  34BC               	retlw	188
  4351  1ABE  34A8               	retlw	168
  4352  1ABF  3479               	retlw	121
  4353  1AC0  34EB               	retlw	235
  4354  1AC1  34A8               	retlw	168
  4355  1AC2  3472               	retlw	114
  4356  1AC3  346D               	retlw	109
  4357  1AC4  3440               	retlw	64
  4358  1AC5  3466               	retlw	102
  4359  1AC6  34D9               	retlw	217
  4360  1AC7  34A3               	retlw	163
  4361  1AC8  3424               	retlw	36
  4362  1AC9  3470               	retlw	112
  4363  1ACA  34BD               	retlw	189
  4364  1ACB  34B5               	retlw	181
  4365  1ACC  348F               	retlw	143
  4366  1ACD  34BE               	retlw	190
  4367  1ACE  3416               	retlw	22
  4368  1ACF  347B               	retlw	123
  4369  1AD0  34EC               	retlw	236
  4370  1AD1  345C               	retlw	92
  4371  1AD2  3475               	retlw	117
  4372  1AD3  3499               	retlw	153
  4373  1AD4  3447               	retlw	71
  4374  1AD5  3492               	retlw	146
  4375  1AD6  34DE               	retlw	222
  4376  1AD7  3457               	retlw	87
  4377  1AD8  3423               	retlw	35
  4378  1AD9  3484               	retlw	132
  4379  1ADA  34BA               	retlw	186
  4380  1ADB  3441               	retlw	65
  4381  1ADC  3488               	retlw	136
  4382  1ADD  344A               	retlw	74
  4383  1ADE  3411               	retlw	17
  4384  1ADF  348F               	retlw	143
  4385  1AE0  347C               	retlw	124
  4386  1AE1  3405               	retlw	5
  4387  1AE2  34E5               	retlw	229
  4388  1AE3  34C0               	retlw	192
  4389  1AE4  34D7               	retlw	215
  4390  1AE5  34CB               	retlw	203
  4391  1AE6  344E               	retlw	78
  4392  1AE7  340E               	retlw	14
  4393  1AE8  34B3               	retlw	179
  4394  1AE9  34DD               	retlw	221
  4395  1AEA  342A               	retlw	42
  4396  1AEB  3418               	retlw	24
  4397  1AEC  3418               	retlw	24
  4398  1AED  3413               	retlw	19
  4399  1AEE  3481               	retlw	129
  4400  1AEF  34D6               	retlw	214
  4401  1AF0  347B               	retlw	123
  4402  1AF1  34F1               	retlw	241
  4403  1AF2  34E2               	retlw	226
  4404  1AF3  3434               	retlw	52
  4405  1AF4  34D0               	retlw	208
  4406  1AF5  343F               	retlw	63
  4407  1AF6  3449               	retlw	73
  4408  1AF7  34FA               	retlw	250
  4409  1AF8  34B4               	retlw	180
  4410  1AF9  3429               	retlw	41
  4411  1AFA  342D               	retlw	45
  4412  1AFB  34EC               	retlw	236
  4413  1AFC  341F               	retlw	31
  4414  1AFD  34E7               	retlw	231
  4415  1AFE  3486               	retlw	134
  4416  1AFF  3422               	retlw	34
  4417  1B00  3413               	retlw	19
  4418  1B01  34A2               	retlw	162
  4419  1B02  348A               	retlw	138
  4420  1B03  3467               	retlw	103
  4421  1B04  34B8               	retlw	184
  4422  1B05  346C               	retlw	108
  4423  1B06  3421               	retlw	33
  4424  1B07  34A9               	retlw	169
  4425  1B08  34DC               	retlw	220
  4426  1B09  347A               	retlw	122
  4427  1B0A  3445               	retlw	69
  4428  1B0B  34BF               	retlw	191
  4429  1B0C  3477               	retlw	119
  4430  1B0D  34B4               	retlw	180
  4431  1B0E  34EE               	retlw	238
  4432  1B0F  3471               	retlw	113
  4433  1B10  3414               	retlw	20
  4434  1B11  3456               	retlw	86
  4435  1B12  348D               	retlw	141
  4436  1B13  3493               	retlw	147
  4437  1B14  34BF               	retlw	191
  4438  1B15  3498               	retlw	152
  4439  1B16  3426               	retlw	38
  4440  1B17  345D               	retlw	93
  4441  1B18  34DB               	retlw	219
  4442  1B19  348E               	retlw	142
  4443  1B1A  3442               	retlw	66
  4444  1B1B  344B               	retlw	75
  4445  1B1C  3470               	retlw	112
  4446  1B1D  3440               	retlw	64
  4447  1B1E  34E9               	retlw	233
  4448  1B1F  3485               	retlw	133
  4449  1B20  3484               	retlw	132
  4450  1B21  340F               	retlw	15
  4451  1B22  341D               	retlw	29
  4452  1B23  34CA               	retlw	202
  4453  1B24  342F               	retlw	47
  4454  1B25  34C1               	retlw	193
  4455  1B26  346F               	retlw	111
  4456  1B27  344B               	retlw	75
  4457  1B28  344B               	retlw	75
  4458  1B29  34D7               	retlw	215
  4459  1B2A  34D2               	retlw	210
  4460  1B2B  3412               	retlw	18
  4461  1B2C  34E0               	retlw	224
  4462  1B2D  3419               	retlw	25
  4463  1B2E  3479               	retlw	121
  4464  1B2F  34DC               	retlw	220
  4465  1B30  3483               	retlw	131
  4466  1B31  34FB               	retlw	251
  4467  1B32  341A               	retlw	26
  4468  1B33  343E               	retlw	62
  4469  1B34  3428               	retlw	40
  4470  1B35  3435               	retlw	53
  4471  1B36  34B1               	retlw	177
  4472  1B37  34F0               	retlw	240
  4473  1B38  344C               	retlw	76
  4474  1B39  3423               	retlw	35
  4475  1B3A  34D5               	retlw	213
  4476  1B3B  34E6               	retlw	230
  4477  1B3C  34E7               	retlw	231
  4478  1B3D  34ED               	retlw	237
  4479  1B3E  347E               	retlw	126
  4480  1B3F  3428               	retlw	40
  4481  1B40  343D               	retlw	61
  4482  1B41  34F9               	retlw	249
  4483  1B42  34A4               	retlw	164
  4484  1B43  343C               	retlw	60
  4485  1B44  3496               	retlw	150
  4486  1B45  3437               	retlw	55
  4487  1B46  340F               	retlw	15
  4488  1B47  34F2               	retlw	242
  4489  1B48  34F2               	retlw	242
  4490  1B49  3421               	retlw	33
  4491  1B4A  346B               	retlw	107
  4492  1B4B  34E4               	retlw	228
  4493  1B4C  3459               	retlw	89
  4494  1B4D  34EF               	retlw	239
  4495  1B4E  34C0               	retlw	192
  4496  1B4F  342A               	retlw	42
  4497  1B50  343A               	retlw	58
  4498  1B51  340D               	retlw	13
  4499  1B52  34A3               	retlw	163
  4500  1B53  34C8               	retlw	200
  4501  1B54  3491               	retlw	145
  4502  1B55  34C3               	retlw	195
  4503  1B56  3408               	retlw	8
  4504  1B57  3406               	retlw	6
  4505  1B58  34F5               	retlw	245
  4506  1B59  34D5               	retlw	213
  4507  1B5A  346C               	retlw	108
  4508  1B5B  3410               	retlw	16
  4509  1B5C  345E               	retlw	94
  4510  1B5D  341B               	retlw	27
  4511  1B5E  34C7               	retlw	199
  4512  1B5F  34DE               	retlw	222
  4513  1B60  34AA               	retlw	170
  4514  1B61  3454               	retlw	84
  4515  1B62  3433               	retlw	51
  4516  1B63  3491               	retlw	145
  4517  1B64  3401               	retlw	1
  4518  1B65  349A               	retlw	154
  4519  1B66  3498               	retlw	152
  4520  1B67  345F               	retlw	95
  4521  1B68  3465               	retlw	101
  4522  1B69  348C               	retlw	140
  4523  1B6A  34FC               	retlw	252
  4524  1B6B  3449               	retlw	73
  4525  1B6C  34CE               	retlw	206
  4526  1B6D  3442               	retlw	66
  4527  1B6E  3457               	retlw	87
  4528  1B6F  3487               	retlw	135
  4529  1B70  34AD               	retlw	173
  4530  1B71  34A0               	retlw	160
  4531  1B72  3434               	retlw	52
  4532  1B73  3465               	retlw	101
  4533  1B74  3406               	retlw	6
  4534  1B75  346E               	retlw	110
  4535  1B76  349F               	retlw	159
  4536  1B77  34AB               	retlw	171
  4537  1B78  3462               	retlw	98
  4538  1B79  3478               	retlw	120
  4539  1B7A  34FB               	retlw	251
  4540  1B7B  34BD               	retlw	189
  4541  1B7C  34C9               	retlw	201
  4542  1B7D  34B6               	retlw	182
  4543  1B7E  3450               	retlw	80
  4544  1B7F  3473               	retlw	115
  4545  1B80  34D6               	retlw	214
  4546  1B81  3451               	retlw	81
  4547  1B82  344F               	retlw	79
  4548  1B83  3494               	retlw	148
  4549  1B84  347D               	retlw	125
  4550  1B85  349F               	retlw	159
  4551  1B86  34E4               	retlw	228
  4552  1B87  345A               	retlw	90
  4553  1B88  3419               	retlw	25
  4554  1B89  3489               	retlw	137
  4555  1B8A  3480               	retlw	128
  4556  1B8B  344C               	retlw	76
  4557  1B8C  34B2               	retlw	178
  4558  1B8D  3447               	retlw	71
  4559  1B8E  342B               	retlw	43
  4560  1B8F  3482               	retlw	130
  4561  1B90  34D1               	retlw	209
  4562  1B91  34A5               	retlw	165
  4563  1B92  3448               	retlw	72
  4564  1B93  3460               	retlw	96
  4565  1B94  347A               	retlw	122
  4566  1B95  346B               	retlw	107
  4567  1B96  34E3               	retlw	227
  4568  1B97  34AE               	retlw	174
  4569  1B98  341E               	retlw	30
  4570  1B99  347D               	retlw	125
  4571  1B9A  3487               	retlw	135
  4572  1B9B  34B8               	retlw	184
  4573  1B9C  34B5               	retlw	181
  4574  1B9D  34B3               	retlw	179
  4575  1B9E  342C               	retlw	44
  4576  1B9F  3476               	retlw	118
  4577  1BA0  3441               	retlw	65
  4578  1BA1  34FC               	retlw	252
  4579  1BA2  34D8               	retlw	216
  4580  1BA3  3439               	retlw	57
  4581  1BA4  34EA               	retlw	234
  4582  1BA5  3432               	retlw	50
  4583  1BA6  3473               	retlw	115
  4584  1BA7  34F7               	retlw	247
  4585  1BA8  348E               	retlw	142
  4586  1BA9  3424               	retlw	36
  4587  1BAA  3417               	retlw	23
  4588  1BAB  34E1               	retlw	225
  4589  1BAC  3425               	retlw	37
  4590  1BAD  34EA               	retlw	234
  4591  1BAE  34BC               	retlw	188
  4592  1BAF  342F               	retlw	47
  4593  1BB0  3446               	retlw	70
  4594  1BB1  3408               	retlw	8
  4595  1BB2  34DF               	retlw	223
  4596  1BB3  34CD               	retlw	205
  4597  1BB4  34ED               	retlw	237
  4598  1BB5  34C6               	retlw	198
  4599  1BB6  3474               	retlw	116
  4600  1BB7  3403               	retlw	3
  4601  1BB8  3489               	retlw	137
  4602  1BB9  34D0               	retlw	208
  4603  1BBA  3410               	retlw	16
  4604  1BBB  3415               	retlw	21
  4605  1BBC  3422               	retlw	34
  4606  1BBD  341E               	retlw	30
  4607  1BBE  34BB               	retlw	187
  4608  1BBF  34DB               	retlw	219
  4609  1BC0  34F8               	retlw	248
  4610  1BC1  340A               	retlw	10
  4611  1BC2  3461               	retlw	97
  4612  1BC3  34CF               	retlw	207
  4613  1BC4  3453               	retlw	83
  4614  1BC5  34C4               	retlw	196
  4615  1BC6  34CA               	retlw	202
  4616  1BC7  3401               	retlw	1
  4617  1BC8  3437               	retlw	55
  4618  1BC9  34D2               	retlw	210
  4619  1BCA  34AE               	retlw	174
  4620  1BCB  3417               	retlw	23
  4621  1BCC  349C               	retlw	156
  4622  1BCD  341C               	retlw	28
  4623  1BCE  3405               	retlw	5
  4624  1BCF  34D9               	retlw	217
  4625  1BD0  34FF               	retlw	255
  4626  1BD1  34FE               	retlw	254
  4627  1BD2  3466               	retlw	102
  4628  1BD3  343B               	retlw	59
  4629  1BD4  3454               	retlw	84
  4630  1BD5  3430               	retlw	48
  4631  1BD6  34CD               	retlw	205
  4632  1BD7  34F5               	retlw	245
  4633  1BD8  3430               	retlw	48
  4634  1BD9  3426               	retlw	38
  4635  1BDA  34A9               	retlw	169
  4636  1BDB  34E3               	retlw	227
  4637  1BDC  349B               	retlw	155
  4638  1BDD  34E8               	retlw	232
  4639  1BDE  3402               	retlw	2
  4640  1BDF  342D               	retlw	45
  4641  1BE0  346F               	retlw	111
  4642  1BE1  34A7               	retlw	167
  4643  1BE2  34F6               	retlw	246
  4644  1BE3  3462               	retlw	98
  4645  1BE4  34C4               	retlw	196
  4646  1BE5  3469               	retlw	105
  4647  1BE6  345D               	retlw	93
  4648  1BE7  34AC               	retlw	172
  4649  1BE8  34A0               	retlw	160
  4650  1BE9  347F               	retlw	127
  4651  1BEA  3439               	retlw	57
  4652  1BEB  34BA               	retlw	186
  4653  1BEC  340B               	retlw	11
  4654  1BED  34B1               	retlw	177
  4655  1BEE  3492               	retlw	146
  4656  1BEF  3474               	retlw	116
  4657  1BF0  3468               	retlw	104
  4658  1BF1  3453               	retlw	83
  4659  1BF2  34F1               	retlw	241
  4660  1BF3  3496               	retlw	150
  4661  1BF4  34C3               	retlw	195
  4662  1BF5  349D               	retlw	157
  4663  1BF6  345A               	retlw	90
  4664  1BF7  3458               	retlw	88
  4665  1BF8  34A7               	retlw	167
  4666  1BF9  348B               	retlw	139
  4667  1BFA  343E               	retlw	62
  4668  1BFB  344E               	retlw	78
  4669  1BFC  340C               	retlw	12
  4670  1BFD  3445               	retlw	69
  4671  1BFE  3495               	retlw	149
  4672  1BFF  3480               	retlw	128
  4673  1C00                     __end_of_crc15Table:	
  4674                           
  4675                           	psect	stringtext4
  4676  3000                     __pstringtext4:	
  4677  3000                     __powers_:	
  4678  3000  3400               	retlw	0
  4679  3001  3400               	retlw	0
  4680  3002  3480               	retlw	128
  4681  3003  343F               	retlw	63
  4682  3004  3400               	retlw	0
  4683  3005  3400               	retlw	0
  4684  3006  3420               	retlw	32
  4685  3007  3441               	retlw	65
  4686  3008  3400               	retlw	0
  4687  3009  3400               	retlw	0
  4688  300A  34C8               	retlw	200
  4689  300B  3442               	retlw	66
  4690  300C  3400               	retlw	0
  4691  300D  3400               	retlw	0
  4692  300E  347A               	retlw	122
  4693  300F  3444               	retlw	68
  4694  3010  3400               	retlw	0
  4695  3011  3440               	retlw	64
  4696  3012  341C               	retlw	28
  4697  3013  3446               	retlw	70
  4698  3014  3400               	retlw	0
  4699  3015  3450               	retlw	80
  4700  3016  34C3               	retlw	195
  4701  3017  3447               	retlw	71
  4702  3018  3400               	retlw	0
  4703  3019  3424               	retlw	36
  4704  301A  3474               	retlw	116
  4705  301B  3449               	retlw	73
  4706  301C  3480               	retlw	128
  4707  301D  3496               	retlw	150
  4708  301E  3418               	retlw	24
  4709  301F  344B               	retlw	75
  4710  3020  3420               	retlw	32
  4711  3021  34BC               	retlw	188
  4712  3022  34BE               	retlw	190
  4713  3023  344C               	retlw	76
  4714  3024  3428               	retlw	40
  4715  3025  346B               	retlw	107
  4716  3026  346E               	retlw	110
  4717  3027  344E               	retlw	78
  4718  3028  34F9               	retlw	249
  4719  3029  3402               	retlw	2
  4720  302A  3415               	retlw	21
  4721  302B  3450               	retlw	80
  4722  302C  34EC               	retlw	236
  4723  302D  3478               	retlw	120
  4724  302E  34AD               	retlw	173
  4725  302F  3460               	retlw	96
  4726  3030  34CA               	retlw	202
  4727  3031  34F2               	retlw	242
  4728  3032  3449               	retlw	73
  4729  3033  3471               	retlw	113
  4730  3034                     __end_of__powers_:	
  4731                           
  4732                           	psect	stringtext5
  4733  3034                     __pstringtext5:	
  4734  3034                     __npowers_:	
  4735  3034  3400               	retlw	0
  4736  3035  3400               	retlw	0
  4737  3036  3480               	retlw	128
  4738  3037  343F               	retlw	63
  4739  3038  34CD               	retlw	205
  4740  3039  34CC               	retlw	204
  4741  303A  34CC               	retlw	204
  4742  303B  343D               	retlw	61
  4743  303C  340A               	retlw	10
  4744  303D  34D7               	retlw	215
  4745  303E  3423               	retlw	35
  4746  303F  343C               	retlw	60
  4747  3040  346F               	retlw	111
  4748  3041  3412               	retlw	18
  4749  3042  3483               	retlw	131
  4750  3043  343A               	retlw	58
  4751  3044  3417               	retlw	23
  4752  3045  34B7               	retlw	183
  4753  3046  34D1               	retlw	209
  4754  3047  3438               	retlw	56
  4755  3048  34AC               	retlw	172
  4756  3049  34C5               	retlw	197
  4757  304A  3427               	retlw	39
  4758  304B  3437               	retlw	55
  4759  304C  34BD               	retlw	189
  4760  304D  3437               	retlw	55
  4761  304E  3486               	retlw	134
  4762  304F  3435               	retlw	53
  4763  3050  3495               	retlw	149
  4764  3051  34BF               	retlw	191
  4765  3052  34D6               	retlw	214
  4766  3053  3433               	retlw	51
  4767  3054  3477               	retlw	119
  4768  3055  34CC               	retlw	204
  4769  3056  342B               	retlw	43
  4770  3057  3432               	retlw	50
  4771  3058  345F               	retlw	95
  4772  3059  3470               	retlw	112
  4773  305A  3489               	retlw	137
  4774  305B  3430               	retlw	48
  4775  305C  34FF               	retlw	255
  4776  305D  34E6               	retlw	230
  4777  305E  34DB               	retlw	219
  4778  305F  342E               	retlw	46
  4779  3060  3408               	retlw	8
  4780  3061  34E5               	retlw	229
  4781  3062  343C               	retlw	60
  4782  3063  341E               	retlw	30
  4783  3064  3460               	retlw	96
  4784  3065  3442               	retlw	66
  4785  3066  34A2               	retlw	162
  4786  3067  340D               	retlw	13
  4787  3068                     __end_of__npowers_:	
  4788                           
  4789                           	psect	stringtext6
  4790  3068                     __pstringtext6:	
  4791  3068                     _temperatures:	
  4792  3068  3494               	retlw	148
  4793  3069  3476               	retlw	118
  4794  306A  3467               	retlw	103
  4795  306B  345C               	retlw	92
  4796  306C  3454               	retlw	84
  4797  306D  344E               	retlw	78
  4798  306E  3448               	retlw	72
  4799  306F  3443               	retlw	67
  4800  3070  343F               	retlw	63
  4801  3071  343C               	retlw	60
  4802  3072  3438               	retlw	56
  4803  3073  3435               	retlw	53
  4804  3074  3433               	retlw	51
  4805  3075  3430               	retlw	48
  4806  3076  342D               	retlw	45
  4807  3077  342B               	retlw	43
  4808  3078  3429               	retlw	41
  4809  3079  3427               	retlw	39
  4810  307A  3425               	retlw	37
  4811  307B  3422               	retlw	34
  4812  307C  3421               	retlw	33
  4813  307D  341F               	retlw	31
  4814  307E  341D               	retlw	29
  4815  307F  341B               	retlw	27
  4816  3080  3419               	retlw	25
  4817  3081  3417               	retlw	23
  4818  3082  3416               	retlw	22
  4819  3083  3414               	retlw	20
  4820  3084  3412               	retlw	18
  4821  3085  3410               	retlw	16
  4822  3086  340F               	retlw	15
  4823  3087  340D               	retlw	13
  4824  3088  340B               	retlw	11
  4825  3089  3409               	retlw	9
  4826  308A  3407               	retlw	7
  4827  308B  3405               	retlw	5
  4828  308C  3403               	retlw	3
  4829  308D  3401               	retlw	1
  4830  308E  34FF               	retlw	255
  4831  308F  34FD               	retlw	253
  4832  3090  34FB               	retlw	251
  4833  3091  34F8               	retlw	248
  4834  3092  34F5               	retlw	245
  4835  3093  34F2               	retlw	242
  4836  3094  34EF               	retlw	239
  4837  3095  34EB               	retlw	235
  4838  3096  34E6               	retlw	230
  4839  3097  34E0               	retlw	224
  4840  3098  34D6               	retlw	214
  4841  3099  34EF               	retlw	239
  4842  309A                     __end_of_temperatures:	
  4843                           
  4844                           	psect	stringtext7
  4845  309A                     __pstringtext7:	
  4846  309A                     _dpowers:	
  4847  309A  3401               	retlw	1
  4848  309B  3400               	retlw	0
  4849  309C  3400               	retlw	0
  4850  309D  3400               	retlw	0
  4851  309E  340A               	retlw	10
  4852  309F  3400               	retlw	0
  4853  30A0  3400               	retlw	0
  4854  30A1  3400               	retlw	0
  4855  30A2  3464               	retlw	100
  4856  30A3  3400               	retlw	0
  4857  30A4  3400               	retlw	0
  4858  30A5  3400               	retlw	0
  4859  30A6  34E8               	retlw	232
  4860  30A7  3403               	retlw	3
  4861  30A8  3400               	retlw	0
  4862  30A9  3400               	retlw	0
  4863  30AA  3410               	retlw	16
  4864  30AB  3427               	retlw	39
  4865  30AC  3400               	retlw	0
  4866  30AD  3400               	retlw	0
  4867  30AE  34A0               	retlw	160
  4868  30AF  3486               	retlw	134
  4869  30B0  3401               	retlw	1
  4870  30B1  3400               	retlw	0
  4871  30B2  3440               	retlw	64
  4872  30B3  3442               	retlw	66
  4873  30B4  340F               	retlw	15
  4874  30B5  3400               	retlw	0
  4875  30B6  3480               	retlw	128
  4876  30B7  3496               	retlw	150
  4877  30B8  3498               	retlw	152
  4878  30B9  3400               	retlw	0
  4879  30BA  3400               	retlw	0
  4880  30BB  34E1               	retlw	225
  4881  30BC  34F5               	retlw	245
  4882  30BD  3405               	retlw	5
  4883  30BE  3400               	retlw	0
  4884  30BF  34CA               	retlw	202
  4885  30C0  349A               	retlw	154
  4886  30C1  343B               	retlw	59
  4887  30C2                     __end_of_dpowers:	
  4888                           
  4889                           	psect	stringtext8
  4890  3159                     __pstringtext8:	
  4891  3159                     _t0:	
  4892  3159  3433               	retlw	51
  4893  315A  3413               	retlw	19
  4894  315B  3495               	retlw	149
  4895  315C  3443               	retlw	67
  4896  315D                     __end_of_t0:	
  4897                           
  4898                           	psect	stringtext9
  4899  315D                     __pstringtext9:	
  4900  315D                     _Beta:	
  4901  315D  3489               	retlw	137
  4902  315E  340F               	retlw	15
  4903  315F                     __end_of_Beta:	
  4904                           
  4905                           	psect	stringtext10
  4906  315F                     __pstringtext10:	
  4907  315F                     LTC6804_rdcfg@BYTES_IN_REG:	
  4908  315F  3408               	retlw	8
  4909  3160                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4910                           
  4911                           	psect	stringtext11
  4912  3160                     __pstringtext11:	
  4913  3160                     LTC6804_wrcfg@BYTES_IN_REG:	
  4914  3160  3406               	retlw	6
  4915  3161                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4916                           
  4917                           	psect	stringtext12
  4918  3161                     __pstringtext12:	
  4919  3161                     LTC6804_rdaux_reg@REG_LEN:	
  4920  3161  3408               	retlw	8
  4921  3162                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4922                           
  4923                           	psect	stringtext13
  4924  3162                     __pstringtext13:	
  4925  3162                     LTC6804_rdaux@GPIO_IN_REG:	
  4926  3162  3403               	retlw	3
  4927  3163                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4928                           
  4929                           	psect	stringtext14
  4930  3163                     __pstringtext14:	
  4931  3163                     LTC6804_rdaux@BYT_IN_REG:	
  4932  3163  3406               	retlw	6
  4933  3164                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4934                           
  4935                           	psect	stringtext15
  4936  3164                     __pstringtext15:	
  4937  3164                     LTC6804_rdaux@NUM_RX_BYT:	
  4938  3164  3408               	retlw	8
  4939  3165                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4940                           
  4941                           	psect	stringtext16
  4942  3165                     __pstringtext16:	
  4943  3165                     LTC6804_rdcv_reg@REG_LEN:	
  4944  3165  3408               	retlw	8
  4945  3166                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4946                           
  4947                           	psect	stringtext17
  4948  3166                     __pstringtext17:	
  4949  3166                     LTC6804_rdcv@CELL_IN_REG:	
  4950  3166  3403               	retlw	3
  4951  3167                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4952                           
  4953                           	psect	stringtext18
  4954  3167                     __pstringtext18:	
  4955  3167                     LTC6804_rdcv@BYT_IN_REG:	
  4956  3167  3406               	retlw	6
  4957  3168                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4958                           
  4959                           	psect	stringtext19
  4960  3168                     __pstringtext19:	
  4961  3168                     LTC6804_rdcv@NUM_RX_BYT:	
  4962  3168  3408               	retlw	8
  4963  3169                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4964                           
  4965                           	psect	stringtext20
  4966  30C2                     __pstringtext20:	
  4967  30C2                     LTC6804_rdstat_reg@REG_LEN:	
  4968  30C2  3408               	retlw	8
  4969  30C3                     __end_ofLTC6804_rdstat_reg@REG_LEN:	
  4970  0012                     _PIR2bits	set	18
  4971  001C                     _T2CON	set	28
  4972  001B                     _PR2	set	27
  4973  0011                     _PIR1bits	set	17
  4974  000B                     _INTCONbits	set	11
  4975  0092                     _PIE2bits	set	146
  4976  0095                     _OPTION_REG	set	149
  4977  009F                     _ADCON2	set	159
  4978  009E                     _ADCON1	set	158
  4979  009D                     _ADCON0	set	157
  4980  009B                     _ADRESL	set	155
  4981  009C                     _ADRESH	set	156
  4982  009D                     _ADCON0bits	set	157
  4983  008E                     _TRISCbits	set	142
  4984  008D                     _TRISBbits	set	141
  4985  008C                     _TRISAbits	set	140
  4986  008F                     _TRISDbits	set	143
  4987  0091                     _PIE1bits	set	145
  4988  011D                     _APFCON1bits	set	285
  4989  010D                     _LATBbits	set	269
  4990  010C                     _LATAbits	set	268
  4991  010F                     _LATDbits	set	271
  4992  019B                     _SPBRGL	set	411
  4993  019C                     _SPBRGH	set	412
  4994  019D                     _RCSTAbits	set	413
  4995  019E                     _TXSTAbits	set	414
  4996  018F                     _ANSELD	set	399
  4997  018D                     _ANSELB	set	397
  4998  018C                     _ANSELA	set	396
  4999  019A                     _TXREG	set	410
  5000  0211                     _SSP1BUF	set	529
  5001  0215                     _SSP1CON1bits	set	533
  5002  0215                     _SSP1CON1	set	533
  5003  0214                     _SSP1STATbits	set	532
  5004  0217                     _SSP1CON3bits	set	535
  5005  0214                     _SSPSTAT	set	532
  5006  0212                     _SSPADD	set	530
  5007  0215                     _SSPCON1	set	533
  5008  0214                     _SSPSTATbits	set	532
  5009  0216                     _SSPCON2bits	set	534
  5010  0211                     _SSPBUF	set	529
  5011  020F                     _WPUD	set	527
  5012  029A                     _CCP2CON	set	666
  5013  30C3                     STR_3:	
  5014  30C3  344D               	retlw	77	;'M'
  5015  30C4  3461               	retlw	97	;'a'
  5016  30C5  3478               	retlw	120	;'x'
  5017  30C6  3420               	retlw	32	;' '
  5018  30C7  3444               	retlw	68	;'D'
  5019  30C8  3469               	retlw	105	;'i'
  5020  30C9  3466               	retlw	102	;'f'
  5021  30CA  3466               	retlw	102	;'f'
  5022  30CB  3465               	retlw	101	;'e'
  5023  30CC  3472               	retlw	114	;'r'
  5024  30CD  3465               	retlw	101	;'e'
  5025  30CE  346E               	retlw	110	;'n'
  5026  30CF  3463               	retlw	99	;'c'
  5027  30D0  3465               	retlw	101	;'e'
  5028  30D1  3420               	retlw	32	;' '
  5029  30D2  343D               	retlw	61	;'='
  5030  30D3  3420               	retlw	32	;' '
  5031  30D4  3456               	retlw	86	;'V'
  5032  30D5  3425               	retlw	37	;'%'
  5033  30D6  3469               	retlw	105	;'i'
  5034  30D7  3420               	retlw	32	;' '
  5035  30D8  3426               	retlw	38	;'&'
  5036  30D9  3420               	retlw	32	;' '
  5037  30DA  3456               	retlw	86	;'V'
  5038  30DB  3425               	retlw	37	;'%'
  5039  30DC  3469               	retlw	105	;'i'
  5040  30DD  3420               	retlw	32	;' '
  5041  30DE  3440               	retlw	64	;'@'
  5042  30DF  3420               	retlw	32	;' '
  5043  30E0  3425               	retlw	37	;'%'
  5044  30E1  3430               	retlw	48	;'0'
  5045  30E2  342E               	retlw	46	;'.'
  5046  30E3  3434               	retlw	52	;'4'
  5047  30E4  3466               	retlw	102	;'f'
  5048  30E5  3456               	retlw	86	;'V'
  5049  30E6  340A               	retlw	10
  5050  30E7  340D               	retlw	13
  5051  30E8  3400               	retlw	0
  5052                           
  5053                           	psect	stringtext21
  5054  30E9                     __pstringtext21:	
  5055  30E9                     STR_2:	
  5056  30E9  3450               	retlw	80	;'P'
  5057  30EA  3461               	retlw	97	;'a'
  5058  30EB  3463               	retlw	99	;'c'
  5059  30EC  346B               	retlw	107	;'k'
  5060  30ED  3420               	retlw	32	;' '
  5061  30EE  3456               	retlw	86	;'V'
  5062  30EF  346F               	retlw	111	;'o'
  5063  30F0  346C               	retlw	108	;'l'
  5064  30F1  3474               	retlw	116	;'t'
  5065  30F2  3461               	retlw	97	;'a'
  5066  30F3  3467               	retlw	103	;'g'
  5067  30F4  3465               	retlw	101	;'e'
  5068  30F5  343A               	retlw	58	;':'
  5069  30F6  3420               	retlw	32	;' '
  5070  30F7  3425               	retlw	37	;'%'
  5071  30F8  3430               	retlw	48	;'0'
  5072  30F9  342E               	retlw	46	;'.'
  5073  30FA  3434               	retlw	52	;'4'
  5074  30FB  3466               	retlw	102	;'f'
  5075  30FC  3456               	retlw	86	;'V'
  5076  30FD  340A               	retlw	10
  5077  30FE  340D               	retlw	13
  5078  30FF  3400               	retlw	0
  5079                           
  5080                           	psect	stringtext22
  5081  3100                     __pstringtext22:	
  5082  3100                     STR_6:	
  5083  3100  3448               	retlw	72	;'H'
  5084  3101  3469               	retlw	105	;'i'
  5085  3102  3467               	retlw	103	;'g'
  5086  3103  3468               	retlw	104	;'h'
  5087  3104  3465               	retlw	101	;'e'
  5088  3105  3473               	retlw	115	;'s'
  5089  3106  3474               	retlw	116	;'t'
  5090  3107  3420               	retlw	32	;' '
  5091  3108  3454               	retlw	84	;'T'
  5092  3109  3465               	retlw	101	;'e'
  5093  310A  346D               	retlw	109	;'m'
  5094  310B  3470               	retlw	112	;'p'
  5095  310C  343A               	retlw	58	;':'
  5096  310D  3420               	retlw	32	;' '
  5097  310E  3425               	retlw	37	;'%'
  5098  310F  3469               	retlw	105	;'i'
  5099  3110  3443               	retlw	67	;'C'
  5100  3111  340A               	retlw	10
  5101  3112  340D               	retlw	13
  5102  3113  3400               	retlw	0
  5103                           
  5104                           	psect	stringtext23
  5105  3114                     __pstringtext23:	
  5106  3114                     STR_4:	
  5107  3114  3463               	retlw	99	;'c'
  5108  3115  3475               	retlw	117	;'u'
  5109  3116  3472               	retlw	114	;'r'
  5110  3117  3472               	retlw	114	;'r'
  5111  3118  3465               	retlw	101	;'e'
  5112  3119  346E               	retlw	110	;'n'
  5113  311A  3474               	retlw	116	;'t'
  5114  311B  3420               	retlw	32	;' '
  5115  311C  343D               	retlw	61	;'='
  5116  311D  3420               	retlw	32	;' '
  5117  311E  3425               	retlw	37	;'%'
  5118  311F  3430               	retlw	48	;'0'
  5119  3120  342E               	retlw	46	;'.'
  5120  3121  3434               	retlw	52	;'4'
  5121  3122  3466               	retlw	102	;'f'
  5122  3123  3441               	retlw	65	;'A'
  5123  3124  340A               	retlw	10
  5124  3125  340D               	retlw	13
  5125  3126  3400               	retlw	0
  5126                           
  5127                           	psect	stringtext24
  5128  3127                     __pstringtext24:	
  5129  3127                     STR_5:	
  5130  3127  3454               	retlw	84	;'T'
  5131  3128  3465               	retlw	101	;'e'
  5132  3129  346D               	retlw	109	;'m'
  5133  312A  3470               	retlw	112	;'p'
  5134  312B  3425               	retlw	37	;'%'
  5135  312C  3469               	retlw	105	;'i'
  5136  312D  3420               	retlw	32	;' '
  5137  312E  343D               	retlw	61	;'='
  5138  312F  3420               	retlw	32	;' '
  5139  3130  3425               	retlw	37	;'%'
  5140  3131  3469               	retlw	105	;'i'
  5141  3132  3443               	retlw	67	;'C'
  5142  3133  340A               	retlw	10
  5143  3134  340D               	retlw	13
  5144  3135  3400               	retlw	0
  5145                           
  5146                           	psect	stringtext25
  5147  3136                     __pstringtext25:	
  5148  3136                     STR_1:	
  5149  3136  3456               	retlw	86	;'V'
  5150  3137  3425               	retlw	37	;'%'
  5151  3138  3469               	retlw	105	;'i'
  5152  3139  3420               	retlw	32	;' '
  5153  313A  343D               	retlw	61	;'='
  5154  313B  3420               	retlw	32	;' '
  5155  313C  3425               	retlw	37	;'%'
  5156  313D  3430               	retlw	48	;'0'
  5157  313E  342E               	retlw	46	;'.'
  5158  313F  3434               	retlw	52	;'4'
  5159  3140  3466               	retlw	102	;'f'
  5160  3141  3456               	retlw	86	;'V'
  5161  3142  340A               	retlw	10
  5162  3143  340D               	retlw	13
  5163  3144  3400               	retlw	0
  5164                           
  5165                           	psect	stringtext26
  5166  3145                     __pstringtext26:	
  5167  3145                     STR_8:	
  5168  3145  341B               	retlw	27
  5169  3146  345B               	retlw	91	;'['
  5170  3147  3432               	retlw	50	;'2'
  5171  3148  344B               	retlw	75	;'K'
  5172  3149  3420               	retlw	32	;' '
  5173  314A  341B               	retlw	27
  5174  314B  345B               	retlw	91	;'['
  5175  314C  3441               	retlw	65	;'A'
  5176  314D  3420               	retlw	32	;' '
  5177  314E  340D               	retlw	13
  5178  314F  3400               	retlw	0
  5179                           
  5180                           	psect	stringtext27
  5181  3150                     __pstringtext27:	
  5182  3150                     STR_7:	
  5183  3150  341B               	retlw	27
  5184  3151  345B               	retlw	91	;'['
  5185  3152  3432               	retlw	50	;'2'
  5186  3153  344B               	retlw	75	;'K'
  5187  3154  3420               	retlw	32	;' '
  5188  3155  341B               	retlw	27
  5189  3156  345B               	retlw	91	;'['
  5190  3157  3441               	retlw	65	;'A'
  5191  3158  3400               	retlw	0
  5192                           
  5193                           	psect	stringtext28
  5194  0000                     __pstringtext28:	
  5195                           
  5196                           ; #config settings
  5197  0000                     
  5198                           	psect	cinit
  5199  0077                     start_initialization:	
  5200  0077                     __initialization:	
  5201                           
  5202                           ; Initialize objects allocated to BANK4
  5203  0077  3048               	movlw	low __pidataBANK4
  5204  0078  0084               	movwf	4
  5205  0079  30AB               	movlw	(high __pidataBANK4)| (0+128)
  5206  007A  0085               	movwf	5
  5207  007B  306A               	movlw	low __pdataBANK4
  5208  007C  0086               	movwf	6
  5209  007D  3002               	movlw	high __pdataBANK4
  5210  007E  0087               	movwf	7
  5211  007F  3006               	movlw	6
  5212  0080  31AB  2342  3180   	fcall	init_ram
  5213                           
  5214                           ; Initialize objects allocated to BANK5
  5215  0083  3000               	movlw	low __pidataBANK5
  5216  0084  0084               	movwf	4
  5217  0085  3093               	movlw	(high __pidataBANK5)| (0+128)
  5218  0086  0085               	movwf	5
  5219  0087  30E2               	movlw	low __pdataBANK5
  5220  0088  0086               	movwf	6
  5221  0089  3002               	movlw	high __pdataBANK5
  5222  008A  0087               	movwf	7
  5223  008B  3007               	movlw	7
  5224  008C  31AB  2342  3180   	fcall	init_ram
  5225                           
  5226                           ; Clear objects allocated to COMMON
  5227  008F  01FA               	clrf	__pbssCOMMON& (0+127)
  5228  0090  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5229                           
  5230                           ; Clear objects allocated to BANK2
  5231  0091  0022               	movlb	2	; select bank2
  5232  0092  01ED               	clrf	__pbssBANK2& (0+127)
  5233  0093  01EE               	clrf	(__pbssBANK2+1)& (0+127)
  5234  0094  01EF               	clrf	(__pbssBANK2+2)& (0+127)
  5235                           
  5236                           ; Clear objects allocated to BANK5
  5237  0095  30A0               	movlw	low __pbssBANK5
  5238  0096  0084               	movwf	4
  5239  0097  3002               	movlw	high __pbssBANK5
  5240  0098  0085               	movwf	5
  5241  0099  3042               	movlw	66
  5242  009A  31AB  233C  3180   	fcall	clear_ram0
  5243                           
  5244                           ; Clear objects allocated to BANK6
  5245  009D  3020               	movlw	low __pbssBANK6
  5246  009E  0084               	movwf	4
  5247  009F  3003               	movlw	high __pbssBANK6
  5248  00A0  0085               	movwf	5
  5249  00A1  3018               	movlw	24
  5250  00A2  31AB  233C         	fcall	clear_ram0
  5251  00A4                     end_of_initialization:	
  5252                           ;End of C runtime variable initialization code
  5253                           
  5254  00A4                     __end_of__initialization:	
  5255  00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5256  00A5  0020               	movlb	0
  5257  00A6  319C  2CFF         	ljmp	_main	;jump to C main() function
  5258                           
  5259                           	psect	bssCOMMON
  5260  007A                     __pbssCOMMON:	
  5261  007A                     _z:	
  5262  007A                     	ds	2
  5263                           
  5264                           	psect	bssBANK2
  5265  016D                     __pbssBANK2:	
  5266  016D                     _cmd:	
  5267  016D                     	ds	3
  5268                           
  5269                           	psect	dataBANK4
  5270  026A                     __pdataBANK4:	
  5271  026A                     _configReg:	
  5272  026A                     	ds	6
  5273                           
  5274                           	psect	bssBANK5
  5275  02A0                     __pbssBANK5:	
  5276  02A0                     _currentBool:	
  5277  02A0                     	ds	2
  5278  02A2                     _uartBool:	
  5279  02A2                     	ds	2
  5280  02A4                     _k:	
  5281  02A4                     	ds	2
  5282  02A6                     _j:	
  5283  02A6                     	ds	2
  5284  02A8                     _n:	
  5285  02A8                     	ds	2
  5286  02AA                     _str:	
  5287  02AA                     	ds	50
  5288  02DC                     _ADSTAT:	
  5289  02DC                     	ds	2
  5290  02DE                     _ADAX:	
  5291  02DE                     	ds	2
  5292  02E0                     _ADCV:	
  5293  02E0                     	ds	2
  5294                           
  5295                           	psect	dataBANK5
  5296  02E2                     __pdataBANK5:	
  5297  02E2                     _tempChannels:	
  5298  02E2                     	ds	5
  5299  02E7                     SSD1306_Test@F7528:	
  5300  02E7                     	ds	2
  5301                           
  5302                           	psect	bssBANK6
  5303  0320                     __pbssBANK6:	
  5304  0320                     measureVoltages@F7579:	
  5305  0320                     	ds	24
  5306                           
  5307                           	psect	inittext
  5308  2B42                     init_ram:	
  5309  2B42  00FE               	movwf	126
  5310  2B43                     initloop:	
  5311  2B43  0012               	moviw fsr0++
  5312  2B44  001E               	movwi fsr1++
  5313  2B45  0BFE               	decfsz	126,f
  5314  2B46  2B43               	goto	initloop
  5315  2B47  3400               	retlw	0
  5316                           
  5317                           	psect	clrtext
  5318  2B3C                     clear_ram0:	
  5319                           ;	Called with FSR0 containing the base address, and
  5320                           ;	WREG with the size to clear
  5321                           
  5322  2B3C  0064               	clrwdt	;clear the watchdog before getting into this loop
  5323  2B3D                     clrloop0:	
  5324  2B3D  0180               	clrf	0	;clear RAM location pointed to by FSR
  5325  2B3E  3101               	addfsr 0,1
  5326  2B3F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5327  2B40  2B3D               	goto	clrloop0	;have we reached the end yet?
  5328  2B41  3400               	retlw	0	;all done for this memory range, return
  5329                           
  5330                           	psect	cstackBANK4
  5331  0220                     __pcstackBANK4:	
  5332  0220                     main@voltages:	
  5333                           
  5334                           ; 48 bytes @ 0x0
  5335  0220                     	ds	48
  5336  0250                     main@temps:	
  5337                           
  5338                           ; 10 bytes @ 0x30
  5339  0250                     	ds	10
  5340  025A                     main@highestTemp:	
  5341                           
  5342                           ; 2 bytes @ 0x3A
  5343  025A                     	ds	2
  5344  025C                     main@numFaults:	
  5345                           
  5346                           ; 2 bytes @ 0x3C
  5347  025C                     	ds	2
  5348  025E                     main@totalVoltage:	
  5349                           
  5350                           ; 4 bytes @ 0x3E
  5351  025E                     	ds	4
  5352  0262                     main@current:	
  5353                           
  5354                           ; 4 bytes @ 0x42
  5355  0262                     	ds	4
  5356  0266                     main@currentIndex:	
  5357                           
  5358                           ; 2 bytes @ 0x46
  5359  0266                     	ds	2
  5360  0268                     main@i:	
  5361                           
  5362                           ; 2 bytes @ 0x48
  5363  0268                     	ds	2
  5364                           
  5365                           	psect	cstackBANK3
  5366  01A0                     __pcstackBANK3:	
  5367  01A0                     main@currentBuff:	
  5368                           
  5369                           ; 80 bytes @ 0x0
  5370  01A0                     	ds	80
  5371                           
  5372                           	psect	cstackBANK2
  5373  0120                     __pcstackBANK2:	
  5374  0120                     ??_sprintf:	
  5375  0120                     cellBalancing@boolean:	
  5376                           ; 1 bytes @ 0x0
  5377                           
  5378                           
  5379                           ; 1 bytes @ 0x0
  5380  0120                     	ds	1
  5381  0121                     cellBalancing@minVoltage:	
  5382                           
  5383                           ; 4 bytes @ 0x1
  5384  0121                     	ds	4
  5385  0125                     cellBalancing@i:	
  5386                           
  5387                           ; 2 bytes @ 0x5
  5388  0125                     	ds	1
  5389  0126                     _sprintf$2170:	
  5390                           
  5391                           ; 4 bytes @ 0x6
  5392  0126                     	ds	1
  5393  0127                     cellBalancing@i_1295:	
  5394                           
  5395                           ; 2 bytes @ 0x7
  5396  0127                     	ds	2
  5397  0129                     cellBalancing@voltages:	
  5398                           
  5399                           ; 1 bytes @ 0x9
  5400  0129                     	ds	1
  5401  012A                     ??_measureVoltages:	
  5402  012A                     sprintf@ap:	
  5403                           ; 1 bytes @ 0xA
  5404                           
  5405                           
  5406                           ; 1 bytes @ 0xA
  5407  012A                     	ds	1
  5408  012B                     sprintf@tmpval:	
  5409                           
  5410                           ; 4 bytes @ 0xB
  5411  012B                     	ds	3
  5412  012E                     measureVoltages@ltcData:	
  5413                           
  5414                           ; 24 bytes @ 0xE
  5415  012E                     	ds	1
  5416  012F                     sprintf@val:	
  5417                           
  5418                           ; 4 bytes @ 0xF
  5419  012F                     	ds	4
  5420  0133                     sprintf@exp:	
  5421                           
  5422                           ; 2 bytes @ 0x13
  5423  0133                     	ds	2
  5424  0135                     sprintf@flag:	
  5425                           
  5426                           ; 2 bytes @ 0x15
  5427  0135                     	ds	2
  5428  0137                     sprintf@width:	
  5429                           
  5430                           ; 2 bytes @ 0x17
  5431  0137                     	ds	2
  5432  0139                     sprintf@fval:	
  5433                           
  5434                           ; 4 bytes @ 0x19
  5435  0139                     	ds	4
  5436  013D                     sprintf@prec:	
  5437                           
  5438                           ; 2 bytes @ 0x1D
  5439  013D                     	ds	2
  5440  013F                     sprintf@sp:	
  5441                           
  5442                           ; 1 bytes @ 0x1F
  5443  013F                     	ds	1
  5444  0140                     sprintf@c:	
  5445                           
  5446                           ; 1 bytes @ 0x20
  5447  0140                     	ds	1
  5448  0141                     ?_clearScreen:	
  5449  0141                     ?_writeVoltages:	
  5450                           ; 1 bytes @ 0x21
  5451                           
  5452  0141                     ?_writeTemps:	
  5453                           ; 1 bytes @ 0x21
  5454                           
  5455  0141                     ?_writeCurrent:	
  5456                           ; 1 bytes @ 0x21
  5457                           
  5458  0141                     writeVoltages@length:	
  5459                           ; 1 bytes @ 0x21
  5460                           
  5461  0141                     writeTemps@highestTemp:	
  5462                           ; 2 bytes @ 0x21
  5463                           
  5464  0141                     clearScreen@numLines:	
  5465                           ; 2 bytes @ 0x21
  5466                           
  5467  0141                     writeCurrent@current:	
  5468                           ; 2 bytes @ 0x21
  5469                           
  5470                           
  5471                           ; 4 bytes @ 0x21
  5472  0141                     	ds	2
  5473  0143                     ??_clearScreen:	
  5474  0143                     writeTemps@numTemps:	
  5475                           ; 1 bytes @ 0x23
  5476                           
  5477  0143                     writeVoltages@totalVoltage:	
  5478                           ; 2 bytes @ 0x23
  5479                           
  5480                           
  5481                           ; 4 bytes @ 0x23
  5482  0143                     	ds	2
  5483  0145                     writeTemps@temps:	
  5484                           
  5485                           ; 1 bytes @ 0x25
  5486  0145                     	ds	1
  5487  0146                     measureVoltages@pecError:	
  5488  0146                     writeTemps@k:	
  5489                           ; 1 bytes @ 0x26
  5490                           
  5491  0146                     clearScreen@j:	
  5492                           ; 2 bytes @ 0x26
  5493                           
  5494                           
  5495                           ; 2 bytes @ 0x26
  5496  0146                     	ds	1
  5497  0147                     ??_writeVoltages:	
  5498  0147                     measureVoltages@errorCount:	
  5499                           ; 1 bytes @ 0x27
  5500                           
  5501                           
  5502                           ; 2 bytes @ 0x27
  5503  0147                     	ds	2
  5504  0149                     measureVoltages@voltages:	
  5505                           
  5506                           ; 1 bytes @ 0x29
  5507  0149                     	ds	1
  5508  014A                     measureVoltages@i:	
  5509                           
  5510                           ; 2 bytes @ 0x2A
  5511  014A                     	ds	1
  5512  014B                     _writeVoltages$2166:	
  5513                           
  5514                           ; 4 bytes @ 0x2B
  5515  014B                     	ds	4
  5516  014F                     writeVoltages@maxCell:	
  5517                           
  5518                           ; 2 bytes @ 0x2F
  5519  014F                     	ds	2
  5520  0151                     writeVoltages@minCell:	
  5521                           
  5522                           ; 2 bytes @ 0x31
  5523  0151                     	ds	2
  5524  0153                     writeVoltages@volts:	
  5525                           
  5526                           ; 1 bytes @ 0x33
  5527  0153                     	ds	1
  5528  0154                     writeVoltages@k:	
  5529                           
  5530                           ; 2 bytes @ 0x34
  5531  0154                     	ds	2
  5532  0156                     ?_writeValuesToUart:	
  5533  0156                     writeValuesToUart@voltageArrLength:	
  5534                           ; 1 bytes @ 0x36
  5535                           
  5536                           
  5537                           ; 2 bytes @ 0x36
  5538  0156                     	ds	2
  5539  0158                     writeValuesToUart@totalVoltage:	
  5540                           
  5541                           ; 4 bytes @ 0x38
  5542  0158                     	ds	4
  5543  015C                     writeValuesToUart@temperatureArr:	
  5544                           
  5545                           ; 1 bytes @ 0x3C
  5546  015C                     	ds	1
  5547  015D                     writeValuesToUart@temperatureArrLength:	
  5548                           
  5549                           ; 2 bytes @ 0x3D
  5550  015D                     	ds	2
  5551  015F                     writeValuesToUart@temperatureHigh:	
  5552                           
  5553                           ; 2 bytes @ 0x3F
  5554  015F                     	ds	2
  5555  0161                     writeValuesToUart@current:	
  5556                           
  5557                           ; 4 bytes @ 0x41
  5558  0161                     	ds	4
  5559  0165                     writeValuesToUart@uartLines:	
  5560                           
  5561                           ; 2 bytes @ 0x45
  5562  0165                     	ds	2
  5563  0167                     writeValuesToUart@voltageArr:	
  5564                           
  5565                           ; 1 bytes @ 0x47
  5566  0167                     	ds	1
  5567  0168                     ??_main:	
  5568                           
  5569                           ; 1 bytes @ 0x48
  5570  0168                     	ds	3
  5571  016B                     main@soc:	
  5572                           
  5573                           ; 2 bytes @ 0x4B
  5574  016B                     	ds	2
  5575                           
  5576                           	psect	cstackBANK1
  5577  00A0                     __pcstackBANK1:	
  5578  00A0                     ??_fround:	
  5579  00A0                     ??_scale:	
  5580                           ; 1 bytes @ 0x0
  5581                           
  5582                           
  5583                           ; 1 bytes @ 0x0
  5584  00A0                     	ds	16
  5585  00B0                     _scale$2169:	
  5586                           
  5587                           ; 4 bytes @ 0x10
  5588  00B0                     	ds	4
  5589  00B4                     scale@scl:	
  5590  00B4                     _fround$2168:	
  5591                           ; 1 bytes @ 0x14
  5592                           
  5593                           
  5594                           ; 4 bytes @ 0x14
  5595  00B4                     	ds	1
  5596  00B5                     ?___fltol:	
  5597  00B5                     ___fltol@f1:	
  5598                           ; 4 bytes @ 0x15
  5599                           
  5600                           
  5601                           ; 4 bytes @ 0x15
  5602  00B5                     	ds	3
  5603  00B8                     _fround$2167:	
  5604                           
  5605                           ; 4 bytes @ 0x18
  5606  00B8                     	ds	1
  5607  00B9                     ??___fltol:	
  5608                           
  5609                           ; 1 bytes @ 0x19
  5610  00B9                     	ds	3
  5611  00BC                     fround@prec:	
  5612                           
  5613                           ; 1 bytes @ 0x1C
  5614  00BC                     	ds	1
  5615  00BD                     ?___fladd:	
  5616  00BD                     ___fladd@b:	
  5617                           ; 4 bytes @ 0x1D
  5618                           
  5619                           
  5620                           ; 4 bytes @ 0x1D
  5621  00BD                     	ds	1
  5622  00BE                     ___fltol@sign1:	
  5623                           
  5624                           ; 1 bytes @ 0x1E
  5625  00BE                     	ds	1
  5626  00BF                     ___fltol@exp1:	
  5627                           
  5628                           ; 1 bytes @ 0x1F
  5629  00BF                     	ds	1
  5630  00C0                     ?_calculateTemp:	
  5631  00C0                     calculateTemp@adcValue:	
  5632                           ; 2 bytes @ 0x20
  5633                           
  5634                           
  5635                           ; 2 bytes @ 0x20
  5636  00C0                     	ds	1
  5637  00C1                     ___fladd@a:	
  5638                           
  5639                           ; 4 bytes @ 0x21
  5640  00C1                     	ds	1
  5641  00C2                     ??_calculateTemp:	
  5642                           
  5643                           ; 1 bytes @ 0x22
  5644  00C2                     	ds	2
  5645  00C4                     calculateTemp@voltage:	
  5646                           
  5647                           ; 4 bytes @ 0x24
  5648  00C4                     	ds	1
  5649  00C5                     ??___fladd:	
  5650                           
  5651                           ; 1 bytes @ 0x25
  5652  00C5                     	ds	3
  5653  00C8                     ?_getTemps:	
  5654  00C8                     getTemps@numTemps:	
  5655                           ; 2 bytes @ 0x28
  5656                           
  5657                           
  5658                           ; 2 bytes @ 0x28
  5659  00C8                     	ds	2
  5660  00CA                     ??_getTemps:	
  5661                           
  5662                           ; 1 bytes @ 0x2A
  5663  00CA                     	ds	4
  5664  00CE                     getTemps@highestTemp:	
  5665                           
  5666                           ; 2 bytes @ 0x2E
  5667  00CE                     	ds	2
  5668  00D0                     getTemps@temperatures:	
  5669                           
  5670                           ; 1 bytes @ 0x30
  5671  00D0                     	ds	1
  5672  00D1                     ___fladd@signs:	
  5673  00D1                     getTemps@inc:	
  5674                           ; 1 bytes @ 0x31
  5675                           
  5676                           
  5677                           ; 2 bytes @ 0x31
  5678  00D1                     	ds	1
  5679  00D2                     ___fladd@aexp:	
  5680                           
  5681                           ; 1 bytes @ 0x32
  5682  00D2                     	ds	1
  5683  00D3                     ___fladd@bexp:	
  5684                           
  5685                           ; 1 bytes @ 0x33
  5686  00D3                     	ds	1
  5687  00D4                     ___fladd@grs:	
  5688                           
  5689                           ; 1 bytes @ 0x34
  5690  00D4                     	ds	1
  5691  00D5                     ?___flge:	
  5692  00D5                     ?_avgBuff:	
  5693                           ; 1 bit 
  5694                           
  5695  00D5                     ?_sumVoltages:	
  5696                           ; 4 bytes @ 0x35
  5697                           
  5698  00D5                     ?_calculateCurrent:	
  5699                           ; 4 bytes @ 0x35
  5700                           
  5701  00D5                     ?___flsub:	
  5702                           ; 4 bytes @ 0x35
  5703                           
  5704  00D5                     avgBuff@size:	
  5705                           ; 4 bytes @ 0x35
  5706                           
  5707  00D5                     sumVoltages@numVoltages:	
  5708                           ; 2 bytes @ 0x35
  5709                           
  5710  00D5                     calculateCurrent@adcValue:	
  5711                           ; 2 bytes @ 0x35
  5712                           
  5713  00D5                     ___flge@ff1:	
  5714                           ; 4 bytes @ 0x35
  5715                           
  5716  00D5                     ___flsub@a:	
  5717                           ; 4 bytes @ 0x35
  5718                           
  5719                           
  5720                           ; 4 bytes @ 0x35
  5721  00D5                     	ds	4
  5722  00D9                     ??_avgBuff:	
  5723  00D9                     ??_sumVoltages:	
  5724                           ; 1 bytes @ 0x39
  5725                           
  5726  00D9                     calculateCurrent@curr:	
  5727                           ; 1 bytes @ 0x39
  5728                           
  5729  00D9                     ___flge@ff2:	
  5730                           ; 4 bytes @ 0x39
  5731                           
  5732  00D9                     ___flsub@b:	
  5733                           ; 4 bytes @ 0x39
  5734                           
  5735                           
  5736                           ; 4 bytes @ 0x39
  5737  00D9                     	ds	2
  5738  00DB                     avgBuff@buff:	
  5739  00DB                     sumVoltages@voltages:	
  5740                           ; 1 bytes @ 0x3B
  5741                           
  5742                           
  5743                           ; 1 bytes @ 0x3B
  5744  00DB                     	ds	1
  5745  00DC                     avgBuff@total:	
  5746  00DC                     sumVoltages@totalVoltage:	
  5747                           ; 4 bytes @ 0x3C
  5748                           
  5749                           
  5750                           ; 4 bytes @ 0x3C
  5751  00DC                     	ds	1
  5752  00DD                     ??___flge:	
  5753  00DD                     _calculateCurrent$2165:	
  5754                           ; 1 bytes @ 0x3D
  5755                           
  5756                           
  5757                           ; 4 bytes @ 0x3D
  5758  00DD                     	ds	3
  5759  00E0                     avgBuff@inc:	
  5760  00E0                     sumVoltages@i:	
  5761                           ; 2 bytes @ 0x40
  5762                           
  5763                           
  5764                           ; 2 bytes @ 0x40
  5765  00E0                     	ds	1
  5766  00E1                     ?_getCurrent:	
  5767                           
  5768                           ; 4 bytes @ 0x41
  5769  00E1                     	ds	4
  5770  00E5                     ?_cellBalancing:	
  5771  00E5                     ?_sprintf:	
  5772                           ; 1 bytes @ 0x45
  5773                           
  5774  00E5                     cellBalancing@numVoltages:	
  5775                           ; 2 bytes @ 0x45
  5776                           
  5777  00E5                     sprintf@f:	
  5778                           ; 2 bytes @ 0x45
  5779                           
  5780  00E5                     getCurrent@currentValue:	
  5781                           ; 2 bytes @ 0x45
  5782                           
  5783                           
  5784                           ; 4 bytes @ 0x45
  5785  00E5                     	ds	2
  5786  00E7                     ??_cellBalancing:	
  5787                           
  5788                           ; 1 bytes @ 0x47
  5789  00E7                     	ds	2
  5790  00E9                     ?_measureVoltages:	
  5791  00E9                     measureVoltages@totalVoltage:	
  5792                           ; 1 bytes @ 0x49
  5793                           
  5794                           
  5795                           ; 2 bytes @ 0x49
  5796  00E9                     	ds	2
  5797  00EB                     measureVoltages@numVoltages:	
  5798                           
  5799                           ; 2 bytes @ 0x4B
  5800  00EB                     	ds	4
  5801  00EF                     ??_writeTemps:	
  5802                           
  5803                           ; 1 bytes @ 0x4F
  5804  00EF                     	ds	1
  5805                           
  5806                           	psect	cstackCOMMON
  5807  0070                     __pcstackCOMMON:	
  5808  0070                     ?_isdigit:	
  5809  0070                     ?_setup:	
  5810                           ; 1 bit 
  5811                           
  5812  0070                     ?_uartDisable:	
  5813                           ; 1 bytes @ 0x0
  5814                           
  5815  0070                     ??_uartDisable:	
  5816                           ; 1 bytes @ 0x0
  5817                           
  5818  0070                     ?_timerSetup:	
  5819                           ; 1 bytes @ 0x0
  5820                           
  5821  0070                     ?_adcSetup:	
  5822                           ; 1 bytes @ 0x0
  5823                           
  5824  0070                     ?_uartSetup:	
  5825                           ; 1 bytes @ 0x0
  5826                           
  5827  0070                     ?_i2cSetup:	
  5828                           ; 1 bytes @ 0x0
  5829                           
  5830  0070                     ?_spiSetup:	
  5831                           ; 1 bytes @ 0x0
  5832                           
  5833  0070                     ?_LTC6804_initialize:	
  5834                           ; 1 bytes @ 0x0
  5835                           
  5836  0070                     ?_uartEnable:	
  5837                           ; 1 bytes @ 0x0
  5838                           
  5839  0070                     ?_timer0Setup:	
  5840                           ; 1 bytes @ 0x0
  5841                           
  5842  0070                     ?_timer2Setup:	
  5843                           ; 1 bytes @ 0x0
  5844                           
  5845  0070                     ?_LTC6804_adcv:	
  5846                           ; 1 bytes @ 0x0
  5847                           
  5848  0070                     ?_wakeup_idle:	
  5849                           ; 1 bytes @ 0x0
  5850                           
  5851  0070                     ?_spi_write:	
  5852                           ; 1 bytes @ 0x0
  5853                           
  5854  0070                     ?_spi_read:	
  5855                           ; 1 bytes @ 0x0
  5856                           
  5857  0070                     ?_main:	
  5858                           ; 1 bytes @ 0x0
  5859                           
  5860  0070                     ?_ISR:	
  5861                           ; 1 bytes @ 0x0
  5862                           
  5863  0070                     ??_ISR:	
  5864                           ; 1 bytes @ 0x0
  5865                           
  5866                           
  5867                           ; 1 bytes @ 0x0
  5868  0070                     	ds	2
  5869  0072                     ??_timerSetup:	
  5870  0072                     ??_adcSetup:	
  5871                           ; 1 bytes @ 0x2
  5872                           
  5873  0072                     ??_uartSetup:	
  5874                           ; 1 bytes @ 0x2
  5875                           
  5876  0072                     ??_i2cSetup:	
  5877                           ; 1 bytes @ 0x2
  5878                           
  5879  0072                     ??_spiSetup:	
  5880                           ; 1 bytes @ 0x2
  5881                           
  5882  0072                     ??_uartEnable:	
  5883                           ; 1 bytes @ 0x2
  5884                           
  5885  0072                     ??_timer0Setup:	
  5886                           ; 1 bytes @ 0x2
  5887                           
  5888  0072                     ??_timer2Setup:	
  5889                           ; 1 bytes @ 0x2
  5890                           
  5891  0072                     ?_setDischarge:	
  5892                           ; 1 bytes @ 0x2
  5893                           
  5894  0072                     ??_wakeup_idle:	
  5895                           ; 1 bytes @ 0x2
  5896                           
  5897  0072                     ?_set_adc:	
  5898                           ; 1 bytes @ 0x2
  5899                           
  5900  0072                     ??_spi_write:	
  5901                           ; 1 bytes @ 0x2
  5902                           
  5903  0072                     ??_spi_read:	
  5904                           ; 1 bytes @ 0x2
  5905                           
  5906  0072                     ??_isdigit:	
  5907                           ; 1 bytes @ 0x2
  5908                           
  5909  0072                     ?___bmul:	
  5910                           ; 1 bytes @ 0x2
  5911                           
  5912  0072                     ?_adcRead:	
  5913                           ; 1 bytes @ 0x2
  5914                           
  5915  0072                     ?__Umul8_16:	
  5916                           ; 2 bytes @ 0x2
  5917                           
  5918  0072                     ?___wmul:	
  5919                           ; 2 bytes @ 0x2
  5920                           
  5921  0072                     ?___awmod:	
  5922                           ; 2 bytes @ 0x2
  5923                           
  5924  0072                     ?__tdiv_to_l_:	
  5925                           ; 2 bytes @ 0x2
  5926                           
  5927  0072                     ?__div_to_l_:	
  5928                           ; 4 bytes @ 0x2
  5929                           
  5930  0072                     ?___flneg:	
  5931                           ; 4 bytes @ 0x2
  5932                           
  5933  0072                     ?___lldiv:	
  5934                           ; 4 bytes @ 0x2
  5935                           
  5936  0072                     set_adc@DCP:	
  5937                           ; 4 bytes @ 0x2
  5938                           
  5939  0072                     ___bmul@multiplicand:	
  5940                           ; 1 bytes @ 0x2
  5941                           
  5942  0072                     _isdigit$1767:	
  5943                           ; 1 bytes @ 0x2
  5944                           
  5945  0072                     __Umul8_16@multiplicand:	
  5946                           ; 1 bytes @ 0x2
  5947                           
  5948  0072                     setDischarge@index:	
  5949                           ; 1 bytes @ 0x2
  5950                           
  5951  0072                     ___wmul@multiplier:	
  5952                           ; 2 bytes @ 0x2
  5953                           
  5954  0072                     ___awmod@divisor:	
  5955                           ; 2 bytes @ 0x2
  5956                           
  5957  0072                     __div_to_l_@f1:	
  5958                           ; 2 bytes @ 0x2
  5959                           
  5960  0072                     ___flneg@f1:	
  5961                           ; 4 bytes @ 0x2
  5962                           
  5963  0072                     __tdiv_to_l_@f1:	
  5964                           ; 4 bytes @ 0x2
  5965                           
  5966  0072                     ___lldiv@divisor:	
  5967                           ; 4 bytes @ 0x2
  5968                           
  5969                           
  5970                           ; 4 bytes @ 0x2
  5971  0072                     	ds	1
  5972  0073                     ??___bmul:	
  5973  0073                     set_adc@CH:	
  5974                           ; 1 bytes @ 0x3
  5975                           
  5976  0073                     spi_write@readData:	
  5977                           ; 1 bytes @ 0x3
  5978                           
  5979  0073                     spi_read@data:	
  5980                           ; 1 bytes @ 0x3
  5981                           
  5982  0073                     isdigit@c:	
  5983                           ; 1 bytes @ 0x3
  5984                           
  5985                           
  5986                           ; 1 bytes @ 0x3
  5987  0073                     	ds	1
  5988  0074                     ??__Umul8_16:	
  5989  0074                     ??___xxtofl:	
  5990                           ; 1 bytes @ 0x4
  5991                           
  5992  0074                     setDischarge@boolean:	
  5993                           ; 1 bytes @ 0x4
  5994                           
  5995  0074                     set_adc@CHG:	
  5996                           ; 1 bytes @ 0x4
  5997                           
  5998  0074                     spi_write@data:	
  5999                           ; 1 bytes @ 0x4
  6000                           
  6001  0074                     spi_read@readData:	
  6002                           ; 1 bytes @ 0x4
  6003                           
  6004  0074                     ___bmul@product:	
  6005                           ; 1 bytes @ 0x4
  6006                           
  6007  0074                     ___wmul@multiplicand:	
  6008                           ; 1 bytes @ 0x4
  6009                           
  6010  0074                     ___awmod@dividend:	
  6011                           ; 2 bytes @ 0x4
  6012                           
  6013                           
  6014                           ; 2 bytes @ 0x4
  6015  0074                     	ds	1
  6016  0075                     ??_setDischarge:	
  6017  0075                     ?_spi_write_array:	
  6018                           ; 1 bytes @ 0x5
  6019                           
  6020  0075                     ??_set_adc:	
  6021                           ; 1 bytes @ 0x5
  6022                           
  6023  0075                     spi_write_array@data:	
  6024                           ; 1 bytes @ 0x5
  6025                           
  6026  0075                     ___bmul@multiplier:	
  6027                           ; 1 bytes @ 0x5
  6028                           
  6029                           
  6030                           ; 1 bytes @ 0x5
  6031  0075                     	ds	1
  6032  0076                     ?_spi_write_read:	
  6033  0076                     ??_spi_write_array:	
  6034                           ; 1 bytes @ 0x6
  6035                           
  6036  0076                     ??___wmul:	
  6037                           ; 1 bytes @ 0x6
  6038                           
  6039  0076                     ??___awmod:	
  6040                           ; 1 bytes @ 0x6
  6041                           
  6042  0076                     ??___flneg:	
  6043                           ; 1 bytes @ 0x6
  6044                           
  6045  0076                     ?_pec15_calc:	
  6046                           ; 1 bytes @ 0x6
  6047                           
  6048  0076                     spi_write_read@tx_len:	
  6049                           ; 2 bytes @ 0x6
  6050                           
  6051  0076                     pec15_calc@data:	
  6052                           ; 1 bytes @ 0x6
  6053                           
  6054  0076                     ___wmul@product:	
  6055                           ; 2 bytes @ 0x6
  6056                           
  6057  0076                     __div_to_l_@f2:	
  6058                           ; 2 bytes @ 0x6
  6059                           
  6060  0076                     __tdiv_to_l_@f2:	
  6061                           ; 4 bytes @ 0x6
  6062                           
  6063  0076                     ___lldiv@dividend:	
  6064                           ; 4 bytes @ 0x6
  6065                           
  6066                           
  6067                           ; 4 bytes @ 0x6
  6068  0076                     	ds	1
  6069  0077                     set_adc@MD:	
  6070  0077                     spi_write_array@len:	
  6071                           ; 1 bytes @ 0x7
  6072                           
  6073  0077                     spi_write_read@rx_data:	
  6074                           ; 1 bytes @ 0x7
  6075                           
  6076  0077                     ___awmod@counter:	
  6077                           ; 1 bytes @ 0x7
  6078                           
  6079                           
  6080                           ; 1 bytes @ 0x7
  6081  0077                     	ds	1
  6082  0078                     set_adc@md_bits:	
  6083  0078                     spi_write_array@i:	
  6084                           ; 1 bytes @ 0x8
  6085                           
  6086  0078                     spi_write_read@rx_len:	
  6087                           ; 1 bytes @ 0x8
  6088                           
  6089  0078                     ___awmod@sign:	
  6090                           ; 1 bytes @ 0x8
  6091                           
  6092                           
  6093                           ; 1 bytes @ 0x8
  6094  0078                     	ds	1
  6095  0079                     ??_LTC6804_adcv:	
  6096  0079                     ?_LTC6804_wrcfg:	
  6097                           ; 1 bytes @ 0x9
  6098                           
  6099  0079                     ??___awdiv:	
  6100                           ; 1 bytes @ 0x9
  6101                           
  6102  0079                     LTC6804_wrcfg@config:	
  6103                           ; 1 bytes @ 0x9
  6104                           
  6105                           
  6106                           ; 1 bytes @ 0x9
  6107  0079                     	ds	1
  6108  007A                     ??_setup:	
  6109  007A                     ??_getCurrent:	
  6110                           ; 1 bytes @ 0xA
  6111                           
  6112  007A                     ??_writeValuesToUart:	
  6113                           ; 1 bytes @ 0xA
  6114                           
  6115  007A                     ??_writeCurrent:	
  6116                           ; 1 bytes @ 0xA
  6117                           
  6118  007A                     ??_calculateCurrent:	
  6119                           ; 1 bytes @ 0xA
  6120                           
  6121  007A                     ??___flsub:	
  6122                           ; 1 bytes @ 0xA
  6123                           
  6124                           
  6125                           	psect	cstackBANK0
  6126  0020                     __pcstackBANK0:	
  6127                           ; 1 bytes @ 0xA
  6128                           
  6129  0020                     ??_adcRead:	
  6130  0020                     ??_pec15_calc:	
  6131                           ; 1 bytes @ 0x0
  6132                           
  6133  0020                     ??_spi_write_read:	
  6134                           ; 1 bytes @ 0x0
  6135                           
  6136  0020                     ??__tdiv_to_l_:	
  6137                           ; 1 bytes @ 0x0
  6138                           
  6139  0020                     ??__div_to_l_:	
  6140                           ; 1 bytes @ 0x0
  6141                           
  6142  0020                     ??___lldiv:	
  6143                           ; 1 bytes @ 0x0
  6144                           
  6145  0020                     ?___awdiv:	
  6146                           ; 1 bytes @ 0x0
  6147                           
  6148  0020                     ___awdiv@divisor:	
  6149                           ; 2 bytes @ 0x0
  6150                           
  6151  0020                     __Umul8_16@product:	
  6152                           ; 2 bytes @ 0x0
  6153                           
  6154                           
  6155                           ; 2 bytes @ 0x0
  6156  0020                     	ds	1
  6157  0021                     ___lldiv@quotient:	
  6158                           
  6159                           ; 4 bytes @ 0x1
  6160  0021                     	ds	1
  6161  0022                     spi_write_read@i:	
  6162  0022                     ___awdiv@dividend:	
  6163                           ; 1 bytes @ 0x2
  6164                           
  6165  0022                     __Umul8_16@word_mpld:	
  6166                           ; 2 bytes @ 0x2
  6167                           
  6168                           
  6169                           ; 2 bytes @ 0x2
  6170  0022                     	ds	1
  6171  0023                     spi_write_read@i_1421:	
  6172                           
  6173                           ; 1 bytes @ 0x3
  6174  0023                     	ds	1
  6175  0024                     spi_write_read@tx_Data:	
  6176  0024                     ___awdiv@counter:	
  6177                           ; 1 bytes @ 0x4
  6178                           
  6179  0024                     __Umul8_16@multiplier:	
  6180                           ; 1 bytes @ 0x4
  6181                           
  6182  0024                     __tdiv_to_l_@quot:	
  6183                           ; 1 bytes @ 0x4
  6184                           
  6185                           
  6186                           ; 4 bytes @ 0x4
  6187  0024                     	ds	1
  6188  0025                     ___awdiv@sign:	
  6189  0025                     ___lldiv@counter:	
  6190                           ; 1 bytes @ 0x5
  6191                           
  6192  0025                     __div_to_l_@quot:	
  6193                           ; 1 bytes @ 0x5
  6194                           
  6195                           
  6196                           ; 4 bytes @ 0x5
  6197  0025                     	ds	1
  6198  0026                     ?___llmod:	
  6199  0026                     ___awdiv@quotient:	
  6200                           ; 4 bytes @ 0x6
  6201                           
  6202  0026                     ___llmod@divisor:	
  6203                           ; 2 bytes @ 0x6
  6204                           
  6205                           
  6206                           ; 4 bytes @ 0x6
  6207  0026                     	ds	1
  6208  0027                     adcRead@ch:	
  6209                           
  6210                           ; 1 bytes @ 0x7
  6211  0027                     	ds	1
  6212  0028                     __tdiv_to_l_@cntr:	
  6213  0028                     adcRead@ansHigh:	
  6214                           ; 1 bytes @ 0x8
  6215                           
  6216                           
  6217                           ; 2 bytes @ 0x8
  6218  0028                     	ds	1
  6219  0029                     __div_to_l_@cntr:	
  6220  0029                     __tdiv_to_l_@exp1:	
  6221                           ; 1 bytes @ 0x9
  6222                           
  6223  0029                     pec15_calc@addr:	
  6224                           ; 1 bytes @ 0x9
  6225                           
  6226                           
  6227                           ; 2 bytes @ 0x9
  6228  0029                     	ds	1
  6229  002A                     __div_to_l_@exp1:	
  6230  002A                     adcRead@ansLow:	
  6231                           ; 1 bytes @ 0xA
  6232                           
  6233  002A                     ___llmod@dividend:	
  6234                           ; 2 bytes @ 0xA
  6235                           
  6236                           
  6237                           ; 4 bytes @ 0xA
  6238  002A                     	ds	1
  6239  002B                     pec15_calc@len:	
  6240                           
  6241                           ; 1 bytes @ 0xB
  6242  002B                     	ds	1
  6243  002C                     pec15_calc@i:	
  6244  002C                     adcRead@total:	
  6245                           ; 1 bytes @ 0xC
  6246                           
  6247                           
  6248                           ; 2 bytes @ 0xC
  6249  002C                     	ds	1
  6250  002D                     pec15_calc@remainder:	
  6251                           
  6252                           ; 2 bytes @ 0xD
  6253  002D                     	ds	1
  6254  002E                     ??___llmod:	
  6255  002E                     ?___xxtofl:	
  6256                           ; 1 bytes @ 0xE
  6257                           
  6258  002E                     ___xxtofl@val:	
  6259                           ; 4 bytes @ 0xE
  6260                           
  6261                           
  6262                           ; 4 bytes @ 0xE
  6263  002E                     	ds	1
  6264  002F                     ??_LTC6804_wrcfg:	
  6265  002F                     ?_LTC6804_rdcv_reg:	
  6266                           ; 1 bytes @ 0xF
  6267                           
  6268  002F                     LTC6804_rdcv_reg@total_ic:	
  6269                           ; 1 bytes @ 0xF
  6270                           
  6271  002F                     ___llmod@counter:	
  6272                           ; 1 bytes @ 0xF
  6273                           
  6274  002F                     LTC6804_adcv@cmd:	
  6275                           ; 1 bytes @ 0xF
  6276                           
  6277                           
  6278                           ; 4 bytes @ 0xF
  6279  002F                     	ds	1
  6280  0030                     LTC6804_rdcv_reg@data:	
  6281                           
  6282                           ; 1 bytes @ 0x10
  6283  0030                     	ds	1
  6284  0031                     ??_LTC6804_rdcv_reg:	
  6285                           
  6286                           ; 1 bytes @ 0x11
  6287  0031                     	ds	1
  6288  0032                     ___xxtofl@sign:	
  6289                           
  6290                           ; 1 bytes @ 0x12
  6291  0032                     	ds	1
  6292  0033                     ___xxtofl@exp:	
  6293  0033                     LTC6804_adcv@cmd_pec:	
  6294                           ; 1 bytes @ 0x13
  6295                           
  6296  0033                     LTC6804_wrcfg@cmd:	
  6297                           ; 2 bytes @ 0x13
  6298                           
  6299                           
  6300                           ; 12 bytes @ 0x13
  6301  0033                     	ds	1
  6302  0034                     ___xxtofl@arg:	
  6303                           
  6304                           ; 4 bytes @ 0x14
  6305  0034                     	ds	1
  6306  0035                     LTC6804_rdcv_reg@cmd_pec:	
  6307                           
  6308                           ; 2 bytes @ 0x15
  6309  0035                     	ds	2
  6310  0037                     LTC6804_rdcv_reg@cmd:	
  6311                           
  6312                           ; 4 bytes @ 0x17
  6313  0037                     	ds	1
  6314  0038                     ?___fldiv:	
  6315  0038                     ___fldiv@a:	
  6316                           ; 4 bytes @ 0x18
  6317                           
  6318                           
  6319                           ; 4 bytes @ 0x18
  6320  0038                     	ds	3
  6321  003B                     LTC6804_rdcv_reg@reg:	
  6322                           
  6323                           ; 1 bytes @ 0x1B
  6324  003B                     	ds	1
  6325  003C                     ?_LTC6804_rdcv:	
  6326  003C                     LTC6804_rdcv@total_ic:	
  6327                           ; 1 bytes @ 0x1C
  6328                           
  6329  003C                     ___fldiv@b:	
  6330                           ; 1 bytes @ 0x1C
  6331                           
  6332                           
  6333                           ; 4 bytes @ 0x1C
  6334  003C                     	ds	1
  6335  003D                     LTC6804_rdcv@cell_codes:	
  6336                           
  6337                           ; 1 bytes @ 0x1D
  6338  003D                     	ds	1
  6339  003E                     ??_LTC6804_rdcv:	
  6340                           
  6341                           ; 1 bytes @ 0x1E
  6342  003E                     	ds	1
  6343  003F                     LTC6804_wrcfg@CMD_LEN:	
  6344                           
  6345                           ; 1 bytes @ 0x1F
  6346  003F                     	ds	1
  6347  0040                     ??___fldiv:	
  6348  0040                     LTC6804_wrcfg@cfg_pec:	
  6349                           ; 1 bytes @ 0x20
  6350                           
  6351                           
  6352                           ; 2 bytes @ 0x20
  6353  0040                     	ds	2
  6354  0042                     LTC6804_wrcfg@total_ic:	
  6355                           
  6356                           ; 1 bytes @ 0x22
  6357  0042                     	ds	1
  6358  0043                     LTC6804_wrcfg@current_byte:	
  6359  0043                     LTC6804_rdcv@cell_data:	
  6360                           ; 1 bytes @ 0x23
  6361                           
  6362                           
  6363                           ; 8 bytes @ 0x23
  6364  0043                     	ds	1
  6365  0044                     LTC6804_wrcfg@current_ic:	
  6366                           
  6367                           ; 1 bytes @ 0x24
  6368  0044                     	ds	1
  6369  0045                     LTC6804_wrcfg@cmd_index:	
  6370  0045                     ___fldiv@sign:	
  6371                           ; 1 bytes @ 0x25
  6372                           
  6373                           
  6374                           ; 1 bytes @ 0x25
  6375  0045                     	ds	1
  6376  0046                     ??_LTC6804_initialize:	
  6377  0046                     ___fldiv@rem:	
  6378                           ; 1 bytes @ 0x26
  6379                           
  6380                           
  6381                           ; 4 bytes @ 0x26
  6382  0046                     	ds	4
  6383  004A                     ___fldiv@new_exp:	
  6384                           
  6385                           ; 2 bytes @ 0x2A
  6386  004A                     	ds	1
  6387  004B                     LTC6804_rdcv@pec_error:	
  6388                           
  6389                           ; 1 bytes @ 0x2B
  6390  004B                     	ds	1
  6391  004C                     LTC6804_rdcv@parsed_cell:	
  6392  004C                     ___fldiv@grs:	
  6393                           ; 2 bytes @ 0x2C
  6394                           
  6395                           
  6396                           ; 4 bytes @ 0x2C
  6397  004C                     	ds	2
  6398  004E                     LTC6804_rdcv@received_pec:	
  6399                           
  6400                           ; 2 bytes @ 0x2E
  6401  004E                     	ds	2
  6402  0050                     ___fldiv@bexp:	
  6403  0050                     LTC6804_rdcv@data_pec:	
  6404                           ; 1 bytes @ 0x30
  6405                           
  6406                           
  6407                           ; 2 bytes @ 0x30
  6408  0050                     	ds	1
  6409  0051                     ___fldiv@aexp:	
  6410                           
  6411                           ; 1 bytes @ 0x31
  6412  0051                     	ds	1
  6413  0052                     ?___flmul:	
  6414  0052                     LTC6804_rdcv@reg:	
  6415                           ; 4 bytes @ 0x32
  6416                           
  6417  0052                     ___flmul@b:	
  6418                           ; 1 bytes @ 0x32
  6419                           
  6420                           
  6421                           ; 4 bytes @ 0x32
  6422  0052                     	ds	1
  6423  0053                     LTC6804_rdcv@current_ic:	
  6424                           
  6425                           ; 1 bytes @ 0x33
  6426  0053                     	ds	1
  6427  0054                     LTC6804_rdcv@current_cell:	
  6428                           
  6429                           ; 1 bytes @ 0x34
  6430  0054                     	ds	1
  6431  0055                     LTC6804_rdcv@current_ic_1339:	
  6432                           
  6433                           ; 1 bytes @ 0x35
  6434  0055                     	ds	1
  6435  0056                     LTC6804_rdcv@current_cell_1340:	
  6436  0056                     ___flmul@a:	
  6437                           ; 1 bytes @ 0x36
  6438                           
  6439                           
  6440                           ; 4 bytes @ 0x36
  6441  0056                     	ds	1
  6442  0057                     LTC6804_rdcv@cell_reg:	
  6443                           
  6444                           ; 1 bytes @ 0x37
  6445  0057                     	ds	1
  6446  0058                     LTC6804_rdcv@data_counter:	
  6447                           
  6448                           ; 1 bytes @ 0x38
  6449  0058                     	ds	2
  6450  005A                     ??___flmul:	
  6451                           
  6452                           ; 1 bytes @ 0x3A
  6453  005A                     	ds	5
  6454  005F                     ___flmul@sign:	
  6455                           
  6456                           ; 1 bytes @ 0x3F
  6457  005F                     	ds	1
  6458  0060                     ___flmul@aexp:	
  6459                           
  6460                           ; 1 bytes @ 0x40
  6461  0060                     	ds	1
  6462  0061                     ___flmul@grs:	
  6463                           
  6464                           ; 4 bytes @ 0x41
  6465  0061                     	ds	4
  6466  0065                     ___flmul@bexp:	
  6467                           
  6468                           ; 1 bytes @ 0x45
  6469  0065                     	ds	1
  6470  0066                     ___flmul@prod:	
  6471                           
  6472                           ; 4 bytes @ 0x46
  6473  0066                     	ds	4
  6474  006A                     ___flmul@temp:	
  6475                           
  6476                           ; 2 bytes @ 0x4A
  6477  006A                     	ds	2
  6478  006C                     ?_fround:	
  6479  006C                     ?_scale:	
  6480                           ; 4 bytes @ 0x4C
  6481                           
  6482                           
  6483                           ; 4 bytes @ 0x4C
  6484  006C                     	ds	4
  6485                           
  6486                           	psect	maintext
  6487  1CFF                     __pmaintext:	
  6488 ;;
  6489 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  6490 ;;
  6491 ;; *************** function _main *****************
  6492 ;; Defined at:
  6493 ;;		line 46 in file "main.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;		None
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  i               2   72[BANK4 ] int 
  6498 ;;  currentBuff    80    0[BANK3 ] float [20]
  6499 ;;  voltages       48    0[BANK4 ] float [12]
  6500 ;;  temps          10   48[BANK4 ] int [5]
  6501 ;;  current         4   66[BANK4 ] float 
  6502 ;;  totalVoltage    4   62[BANK4 ] float 
  6503 ;;  currentIndex    2   70[BANK4 ] int 
  6504 ;;  numFaults       2   60[BANK4 ] int 
  6505 ;;  highestTemp     2   58[BANK4 ] int 
  6506 ;;  soc             2   75[BANK2 ] int 
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6511 ;; Tracked objects:
  6512 ;;		On entry : B1F/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6517 ;;      Locals:         0       0       0       2      80      74       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6518 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6519 ;;      Totals:         0       0       0       5      80      74       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6520 ;;Total ram usage:      159 bytes
  6521 ;; Hardware stack levels required when called:    8
  6522 ;; This function calls:
  6523 ;;		___flge
  6524 ;;		_avgBuff
  6525 ;;		_cellBalancing
  6526 ;;		_getCurrent
  6527 ;;		_getTemps
  6528 ;;		_measureVoltages
  6529 ;;		_setup
  6530 ;;		_writeValuesToUart
  6531 ;; This function is called by:
  6532 ;;		Startup code after reset
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           
  6537                           ;psect for function _main
  6538  1CFF                     _main:	
  6539                           
  6540                           ;main.c: 47: float voltages[12];
  6541                           ;main.c: 48: float totalVoltage;
  6542                           ;main.c: 50: int currentIndex = 0;
  6543                           
  6544                           ;incstack = 0
  6545                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6546  1CFF  0024               	movlb	4	; select bank4
  6547  1D00  01E6               	clrf	main@currentIndex^(0+512)
  6548  1D01  01E7               	clrf	(main@currentIndex+1)^(0+512)
  6549                           
  6550                           ;main.c: 51: float currentBuff[20];
  6551                           ;main.c: 52: float current = 0;
  6552  1D02  3000               	movlw	0
  6553  1D03  00E5               	movwf	(main@current+3)^(0+512)
  6554  1D04  3000               	movlw	0
  6555  1D05  00E4               	movwf	(main@current+2)^(0+512)
  6556  1D06  3000               	movlw	0
  6557  1D07  00E3               	movwf	(main@current+1)^(0+512)
  6558  1D08  3000               	movlw	0
  6559  1D09  00E2               	movwf	main@current^(0+512)
  6560                           
  6561                           ;main.c: 54: int temps[5];
  6562                           ;main.c: 55: int highestTemp;
  6563                           ;main.c: 57: int numFaults = 0;
  6564  1D0A  01DC               	clrf	main@numFaults^(0+512)
  6565  1D0B  01DD               	clrf	(main@numFaults+1)^(0+512)
  6566                           
  6567                           ;main.c: 58: int soc = 0;
  6568  1D0C  0022               	movlb	2	; select bank2
  6569  1D0D  01EB               	clrf	main@soc^(0+256)
  6570  1D0E  01EC               	clrf	(main@soc+1)^(0+256)
  6571                           
  6572                           ;main.c: 60: setup();
  6573  1D0F  31AC  2457  319C   	fcall	_setup
  6574                           
  6575                           ;main.c: 62: _delay((unsigned long)((1000)*(32000000/4000.0)));
  6576  1D12  3029               	movlw	41
  6577  1D13  0022               	movlb	2	; select bank2
  6578  1D14  00E9               	movwf	(??_main^(0+256)+1)
  6579  1D15  3096               	movlw	150
  6580  1D16  00E8               	movwf	??_main^(0+256)
  6581  1D17  307F               	movlw	127
  6582  1D18                     u11767:	
  6583  1D18  0B89               	decfsz	9,f
  6584  1D19  2D18               	goto	u11767
  6585  1D1A  0BE8               	decfsz	??_main^(0+256),f
  6586  1D1B  2D18               	goto	u11767
  6587  1D1C  0BE9               	decfsz	(??_main^(0+256)+1),f
  6588  1D1D  2D18               	goto	u11767
  6589                           
  6590                           ;main.c: 64: LATDbits.LATD5 = 0;
  6591  1D1E  0022               	movlb	2	; select bank2
  6592  1D1F  128F               	bcf	15,5	;volatile
  6593                           
  6594                           ;main.c: 65: LATDbits.LATD4 = 0;
  6595  1D20  120F               	bcf	15,4	;volatile
  6596                           
  6597                           ;main.c: 67: LATDbits.LATD5 = 1;
  6598  1D21  168F               	bsf	15,5	;volatile
  6599  1D22                     l8116:	
  6600                           ;main.c: 77: while(1){
  6601                           
  6602                           
  6603                           ;main.c: 81: LATAbits.LATA5 ^= 1;
  6604  1D22  0022               	movlb	2	; select bank2
  6605  1D23  0E0C               	swapf	12,w	;volatile
  6606  1D24  00E8               	movwf	??_main^(0+256)
  6607  1D25  0C68               	rrf	??_main^(0+256),w
  6608  1D26  3901               	andlw	1
  6609  1D27  00E8               	movwf	??_main^(0+256)
  6610  1D28  3001               	movlw	1
  6611  1D29  06E8               	xorwf	??_main^(0+256),f
  6612  1D2A  0EE8               	swapf	??_main^(0+256),f
  6613  1D2B  0DE8               	rlf	??_main^(0+256),f
  6614  1D2C  080C               	movf	12,w	;volatile
  6615  1D2D  0668               	xorwf	??_main^(0+256),w
  6616  1D2E  39DF               	andlw	-33
  6617  1D2F  0668               	xorwf	??_main^(0+256),w
  6618  1D30  008C               	movwf	12	;volatile
  6619                           
  6620                           ;main.c: 85: measureVoltages(voltages, &totalVoltage, 12);
  6621  1D31  305E               	movlw	low main@totalVoltage
  6622  1D32  0021               	movlb	1	; select bank1
  6623  1D33  00E9               	movwf	measureVoltages@totalVoltage^(0+128)
  6624  1D34  3002               	movlw	high main@totalVoltage
  6625  1D35  00EA               	movwf	(measureVoltages@totalVoltage+1)^(0+128)
  6626  1D36  300C               	movlw	12
  6627  1D37  00EB               	movwf	measureVoltages@numVoltages^(0+128)
  6628  1D38  3000               	movlw	0
  6629  1D39  00EC               	movwf	(measureVoltages@numVoltages^(0+128)+1)
  6630  1D3A  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6631  1D3B  31A6  26E5  319C   	fcall	_measureVoltages
  6632                           
  6633                           ;main.c: 87: highestTemp = getTemps(temps, 5);
  6634  1D3E  3005               	movlw	5
  6635  1D3F  0021               	movlb	1	; select bank1
  6636  1D40  00C8               	movwf	getTemps@numTemps^(0+128)
  6637  1D41  3000               	movlw	0
  6638  1D42  00C9               	movwf	(getTemps@numTemps^(0+128)+1)
  6639  1D43  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  6640  1D44  31A1  2147  319C   	fcall	_getTemps
  6641  1D47  0021               	movlb	1	; select bank1
  6642  1D48  0849               	movf	(?_getTemps+1)^(0+128),w
  6643  1D49  0024               	movlb	4	; select bank4
  6644  1D4A  00DB               	movwf	(main@highestTemp+1)^(0+512)
  6645  1D4B  0021               	movlb	1	; select bank1
  6646  1D4C  0848               	movf	?_getTemps^(0+128),w
  6647  1D4D  0024               	movlb	4	; select bank4
  6648  1D4E  00DA               	movwf	main@highestTemp^(0+512)
  6649                           
  6650                           ;main.c: 89: if(currentBool == 1){
  6651  1D4F  0025               	movlb	5	; select bank5
  6652  1D50  0320               	decf	_currentBool^(0+640),w
  6653  1D51  0421               	iorwf	(_currentBool+1)^(0+640),w
  6654  1D52  1D03               	btfss	3,2
  6655  1D53  2DAA               	goto	l8138
  6656                           
  6657                           ;main.c: 90: currentBuff[currentIndex] = getCurrent();
  6658  1D54  31AD  254B  319C   	fcall	_getCurrent
  6659  1D57  0024               	movlb	4	; select bank4
  6660  1D58  0866               	movf	main@currentIndex^(0+512),w
  6661  1D59  0022               	movlb	2	; select bank2
  6662  1D5A  00E8               	movwf	??_main^(0+256)
  6663  1D5B  3001               	movlw	1
  6664  1D5C                     u11325:	
  6665  1D5C  35E8               	lslf	??_main^(0+256),f
  6666  1D5D  3EFF               	addlw	-1
  6667  1D5E  1D03               	skipz
  6668  1D5F  2D5C               	goto	u11325
  6669  1D60  3568               	lslf	??_main^(0+256),w
  6670  1D61  3EA0               	addlw	(low (main@currentBuff| (0+256)))& (0+255)
  6671  1D62  0086               	movwf	6
  6672  1D63  3001               	movlw	1	; select bank3/4
  6673  1D64  0087               	movwf	7
  6674  1D65  0021               	movlb	1	; select bank1
  6675  1D66  0861               	movf	?_getCurrent^(0+128),w
  6676  1D67  3FC0               	movwi [0]fsr1
  6677  1D68  0862               	movf	(?_getCurrent+1)^(0+128),w
  6678  1D69  3FC1               	movwi [1]fsr1
  6679  1D6A  0863               	movf	(?_getCurrent+2)^(0+128),w
  6680  1D6B  3FC2               	movwi [2]fsr1
  6681  1D6C  0864               	movf	(?_getCurrent+3)^(0+128),w
  6682  1D6D  3FC3               	movwi [3]fsr1
  6683                           
  6684                           ;main.c: 91: currentIndex ++;
  6685  1D6E  3001               	movlw	1
  6686  1D6F  0024               	movlb	4	; select bank4
  6687  1D70  07E6               	addwf	main@currentIndex^(0+512),f
  6688  1D71  3000               	movlw	0
  6689  1D72  3DE7               	addwfc	(main@currentIndex+1)^(0+512),f
  6690                           
  6691                           ;main.c: 92: if(currentIndex >= 20){
  6692  1D73  0867               	movf	(main@currentIndex+1)^(0+512),w
  6693  1D74  3A80               	xorlw	128
  6694  1D75  0022               	movlb	2	; select bank2
  6695  1D76  00E8               	movwf	??_main^(0+256)
  6696  1D77  3080               	movlw	128
  6697  1D78  0268               	subwf	??_main^(0+256),w
  6698  1D79  1D03               	skipz
  6699  1D7A  2D7E               	goto	u11335
  6700  1D7B  3014               	movlw	20
  6701  1D7C  0024               	movlb	4	; select bank4
  6702  1D7D  0266               	subwf	main@currentIndex^(0+512),w
  6703  1D7E                     u11335:	
  6704  1D7E  1C03               	skipc
  6705  1D7F  2DA7               	goto	l8136
  6706                           
  6707                           ;main.c: 93: cellBalancing(voltages, 12);
  6708  1D80  300C               	movlw	12
  6709  1D81  0021               	movlb	1	; select bank1
  6710  1D82  00E5               	movwf	cellBalancing@numVoltages^(0+128)
  6711  1D83  3000               	movlw	0
  6712  1D84  00E6               	movwf	(cellBalancing@numVoltages^(0+128)+1)
  6713  1D85  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6714  1D86  319C  241F  319C   	fcall	_cellBalancing
  6715                           
  6716                           ;main.c: 94: current = avgBuff(currentBuff, currentIndex);
  6717  1D89  0024               	movlb	4	; select bank4
  6718  1D8A  0867               	movf	(main@currentIndex+1)^(0+512),w
  6719  1D8B  0021               	movlb	1	; select bank1
  6720  1D8C  00D6               	movwf	(avgBuff@size+1)^(0+128)
  6721  1D8D  0024               	movlb	4	; select bank4
  6722  1D8E  0866               	movf	main@currentIndex^(0+512),w
  6723  1D8F  0021               	movlb	1	; select bank1
  6724  1D90  00D5               	movwf	avgBuff@size^(0+128)
  6725  1D91  30A0               	movlw	(low (main@currentBuff| (0+256)))& (0+255)
  6726  1D92  31A1  21C6  319C   	fcall	_avgBuff
  6727  1D95  0021               	movlb	1	; select bank1
  6728  1D96  0858               	movf	(?_avgBuff+3)^(0+128),w
  6729  1D97  0024               	movlb	4	; select bank4
  6730  1D98  00E5               	movwf	(main@current+3)^(0+512)
  6731  1D99  0021               	movlb	1	; select bank1
  6732  1D9A  0857               	movf	(?_avgBuff+2)^(0+128),w
  6733  1D9B  0024               	movlb	4	; select bank4
  6734  1D9C  00E4               	movwf	(main@current+2)^(0+512)
  6735  1D9D  0021               	movlb	1	; select bank1
  6736  1D9E  0856               	movf	(?_avgBuff+1)^(0+128),w
  6737  1D9F  0024               	movlb	4	; select bank4
  6738  1DA0  00E3               	movwf	(main@current+1)^(0+512)
  6739  1DA1  0021               	movlb	1	; select bank1
  6740  1DA2  0855               	movf	?_avgBuff^(0+128),w
  6741  1DA3  0024               	movlb	4	; select bank4
  6742  1DA4  00E2               	movwf	main@current^(0+512)
  6743                           
  6744                           ;main.c: 95: currentIndex = 0;
  6745  1DA5  01E6               	clrf	main@currentIndex^(0+512)
  6746  1DA6  01E7               	clrf	(main@currentIndex+1)^(0+512)
  6747  1DA7                     l8136:	
  6748                           
  6749                           ;main.c: 96: }
  6750                           ;main.c: 97: currentBool = 0;
  6751  1DA7  0025               	movlb	5	; select bank5
  6752  1DA8  01A0               	clrf	_currentBool^(0+640)
  6753  1DA9  01A1               	clrf	(_currentBool+1)^(0+640)
  6754  1DAA                     l8138:	
  6755                           
  6756                           ;main.c: 98: }
  6757                           ;main.c: 103: for(int i = 0; i <5; i++){
  6758  1DAA  0024               	movlb	4	; select bank4
  6759  1DAB  01E8               	clrf	main@i^(0+512)
  6760  1DAC  01E9               	clrf	(main@i+1)^(0+512)
  6761  1DAD  0869               	movf	(main@i+1)^(0+512),w
  6762  1DAE  3A80               	xorlw	128
  6763  1DAF  0022               	movlb	2	; select bank2
  6764  1DB0  00E8               	movwf	??_main^(0+256)
  6765  1DB1  3080               	movlw	128
  6766  1DB2  0268               	subwf	??_main^(0+256),w
  6767  1DB3  1D03               	skipz
  6768  1DB4  2DB8               	goto	u11345
  6769  1DB5  3005               	movlw	5
  6770  1DB6  0024               	movlb	4	; select bank4
  6771  1DB7  0268               	subwf	main@i^(0+512),w
  6772  1DB8                     u11345:	
  6773  1DB8  1803               	btfsc	3,0
  6774  1DB9  2DFD               	goto	l8150
  6775  1DBA                     l8144:	
  6776                           
  6777                           ;main.c: 104: if(temps[i] >= 40 || temps[i] <= 10){
  6778  1DBA  0024               	movlb	4	; select bank4
  6779  1DBB  3568               	lslf	main@i^(0+512),w
  6780  1DBC  3E50               	addlw	(low (main@temps| (0+512)))& (0+255)
  6781  1DBD  0086               	movwf	6
  6782  1DBE  3002               	movlw	2	; select bank4/5
  6783  1DBF  0087               	movwf	7
  6784  1DC0  3F40               	moviw [0]fsr1
  6785  1DC1  0022               	movlb	2	; select bank2
  6786  1DC2  00E8               	movwf	??_main^(0+256)
  6787  1DC3  3F41               	moviw [1]fsr1
  6788  1DC4  00E9               	movwf	(??_main^(0+256)+1)
  6789  1DC5  0869               	movf	(??_main+1)^(0+256),w
  6790  1DC6  3A80               	xorlw	128
  6791  1DC7  00EA               	movwf	(??_main+2)^(0+256)
  6792  1DC8  3080               	movlw	128
  6793  1DC9  026A               	subwf	(??_main+2)^(0+256),w
  6794  1DCA  1D03               	skipz
  6795  1DCB  2DCE               	goto	u11355
  6796  1DCC  3028               	movlw	40
  6797  1DCD  0268               	subwf	??_main^(0+256),w
  6798  1DCE                     u11355:	
  6799  1DCE  1803               	skipnc
  6800  1DCF  2DE6               	goto	l8148
  6801  1DD0  0024               	movlb	4	; select bank4
  6802  1DD1  3568               	lslf	main@i^(0+512),w
  6803  1DD2  3E50               	addlw	(low (main@temps| (0+512)))& (0+255)
  6804  1DD3  0086               	movwf	6
  6805  1DD4  3002               	movlw	2	; select bank4/5
  6806  1DD5  0087               	movwf	7
  6807  1DD6  3F40               	moviw [0]fsr1
  6808  1DD7  0022               	movlb	2	; select bank2
  6809  1DD8  00E8               	movwf	??_main^(0+256)
  6810  1DD9  3F41               	moviw [1]fsr1
  6811  1DDA  00E9               	movwf	(??_main^(0+256)+1)
  6812  1DDB  0869               	movf	(??_main+1)^(0+256),w
  6813  1DDC  3A80               	xorlw	128
  6814  1DDD  00EA               	movwf	(??_main+2)^(0+256)
  6815  1DDE  3080               	movlw	128
  6816  1DDF  026A               	subwf	(??_main+2)^(0+256),w
  6817  1DE0  1D03               	skipz
  6818  1DE1  2DE4               	goto	u11365
  6819  1DE2  300B               	movlw	11
  6820  1DE3  0268               	subwf	??_main^(0+256),w
  6821  1DE4                     u11365:	
  6822  1DE4  1803               	skipnc
  6823  1DE5  2DEB               	goto	l88
  6824  1DE6                     l8148:	
  6825                           
  6826                           ;main.c: 105: numFaults++;
  6827  1DE6  3001               	movlw	1
  6828  1DE7  0024               	movlb	4	; select bank4
  6829  1DE8  07DC               	addwf	main@numFaults^(0+512),f
  6830  1DE9  3000               	movlw	0
  6831  1DEA  3DDD               	addwfc	(main@numFaults+1)^(0+512),f
  6832  1DEB                     l88:	
  6833  1DEB  3001               	movlw	1
  6834  1DEC  0024               	movlb	4	; select bank4
  6835  1DED  07E8               	addwf	main@i^(0+512),f
  6836  1DEE  3000               	movlw	0
  6837  1DEF  3DE9               	addwfc	(main@i+1)^(0+512),f
  6838  1DF0  0869               	movf	(main@i+1)^(0+512),w
  6839  1DF1  3A80               	xorlw	128
  6840  1DF2  0022               	movlb	2	; select bank2
  6841  1DF3  00E8               	movwf	??_main^(0+256)
  6842  1DF4  3080               	movlw	128
  6843  1DF5  0268               	subwf	??_main^(0+256),w
  6844  1DF6  1D03               	skipz
  6845  1DF7  2DFB               	goto	u11375
  6846  1DF8  3005               	movlw	5
  6847  1DF9  0024               	movlb	4	; select bank4
  6848  1DFA  0268               	subwf	main@i^(0+512),w
  6849  1DFB                     u11375:	
  6850  1DFB  1C03               	skipc
  6851  1DFC  2DBA               	goto	l8144
  6852  1DFD                     l8150:	
  6853                           
  6854                           ;main.c: 106: }
  6855                           ;main.c: 107: }
  6856                           ;main.c: 109: if(current >= 10){
  6857  1DFD  0024               	movlb	4	; select bank4
  6858  1DFE  0865               	movf	(main@current+3)^(0+512),w
  6859  1DFF  0021               	movlb	1	; select bank1
  6860  1E00  00D8               	movwf	(___flge@ff1+3)^(0+128)
  6861  1E01  0024               	movlb	4	; select bank4
  6862  1E02  0864               	movf	(main@current+2)^(0+512),w
  6863  1E03  0021               	movlb	1	; select bank1
  6864  1E04  00D7               	movwf	(___flge@ff1+2)^(0+128)
  6865  1E05  0024               	movlb	4	; select bank4
  6866  1E06  0863               	movf	(main@current+1)^(0+512),w
  6867  1E07  0021               	movlb	1	; select bank1
  6868  1E08  00D6               	movwf	(___flge@ff1+1)^(0+128)
  6869  1E09  0024               	movlb	4	; select bank4
  6870  1E0A  0862               	movf	main@current^(0+512),w
  6871  1E0B  0021               	movlb	1	; select bank1
  6872  1E0C  00D5               	movwf	___flge@ff1^(0+128)
  6873  1E0D  3041               	movlw	65
  6874  1E0E  00DC               	movwf	(___flge@ff2+3)^(0+128)
  6875  1E0F  3020               	movlw	32
  6876  1E10  00DB               	movwf	(___flge@ff2+2)^(0+128)
  6877  1E11  3000               	movlw	0
  6878  1E12  00DA               	movwf	(___flge@ff2+1)^(0+128)
  6879  1E13  3000               	movlw	0
  6880  1E14  00D9               	movwf	___flge@ff2^(0+128)
  6881  1E15  31A3  23F3  319C   	fcall	___flge
  6882  1E18  1C03               	btfss	3,0
  6883  1E19  2E1F               	goto	l91
  6884                           
  6885                           ;main.c: 110: numFaults++;
  6886  1E1A  3001               	movlw	1
  6887  1E1B  0024               	movlb	4	; select bank4
  6888  1E1C  07DC               	addwf	main@numFaults^(0+512),f
  6889  1E1D  3000               	movlw	0
  6890  1E1E  3DDD               	addwfc	(main@numFaults+1)^(0+512),f
  6891  1E1F                     l91:	
  6892                           
  6893                           ;main.c: 111: }
  6894                           ;main.c: 115: if(numFaults >= 10){
  6895  1E1F  0024               	movlb	4	; select bank4
  6896  1E20  085D               	movf	(main@numFaults+1)^(0+512),w
  6897  1E21  3A80               	xorlw	128
  6898  1E22  0022               	movlb	2	; select bank2
  6899  1E23  00E8               	movwf	??_main^(0+256)
  6900  1E24  3080               	movlw	128
  6901  1E25  0268               	subwf	??_main^(0+256),w
  6902  1E26  1D03               	skipz
  6903  1E27  2E2B               	goto	u11395
  6904  1E28  300A               	movlw	10
  6905  1E29  0024               	movlb	4	; select bank4
  6906  1E2A  025C               	subwf	main@numFaults^(0+512),w
  6907  1E2B                     u11395:	
  6908  1E2B  1C03               	skipc
  6909  1E2C  2E2F               	goto	l8156
  6910                           
  6911                           ;main.c: 116: LATDbits.LATD5 = 0;
  6912  1E2D  0022               	movlb	2	; select bank2
  6913  1E2E  128F               	bcf	15,5	;volatile
  6914  1E2F                     l8156:	
  6915                           
  6916                           ;main.c: 117: }
  6917                           ;main.c: 122: if(uartBool == 1){
  6918  1E2F  0025               	movlb	5	; select bank5
  6919  1E30  0322               	decf	_uartBool^(0+640),w
  6920  1E31  0423               	iorwf	(_uartBool+1)^(0+640),w
  6921  1E32  1D03               	btfss	3,2
  6922  1E33  2D22               	goto	l8116
  6923                           
  6924                           ;main.c: 123: writeValuesToUart(voltages, 12, totalVoltage, temps, 5, highestTemp, curre
      +                          nt, 21);
  6925  1E34  300C               	movlw	12
  6926  1E35  0022               	movlb	2	; select bank2
  6927  1E36  00D6               	movwf	writeValuesToUart@voltageArrLength^(0+256)
  6928  1E37  3000               	movlw	0
  6929  1E38  00D7               	movwf	(writeValuesToUart@voltageArrLength^(0+256)+1)
  6930  1E39  0024               	movlb	4	; select bank4
  6931  1E3A  0861               	movf	(main@totalVoltage+3)^(0+512),w
  6932  1E3B  0022               	movlb	2	; select bank2
  6933  1E3C  00DB               	movwf	(writeValuesToUart@totalVoltage+3)^(0+256)
  6934  1E3D  0024               	movlb	4	; select bank4
  6935  1E3E  0860               	movf	(main@totalVoltage+2)^(0+512),w
  6936  1E3F  0022               	movlb	2	; select bank2
  6937  1E40  00DA               	movwf	(writeValuesToUart@totalVoltage+2)^(0+256)
  6938  1E41  0024               	movlb	4	; select bank4
  6939  1E42  085F               	movf	(main@totalVoltage+1)^(0+512),w
  6940  1E43  0022               	movlb	2	; select bank2
  6941  1E44  00D9               	movwf	(writeValuesToUart@totalVoltage+1)^(0+256)
  6942  1E45  0024               	movlb	4	; select bank4
  6943  1E46  085E               	movf	main@totalVoltage^(0+512),w
  6944  1E47  0022               	movlb	2	; select bank2
  6945  1E48  00D8               	movwf	writeValuesToUart@totalVoltage^(0+256)
  6946  1E49  3050               	movlw	(low (main@temps| (0+512)))& (0+255)
  6947  1E4A  00E8               	movwf	??_main^(0+256)
  6948  1E4B  0868               	movf	??_main^(0+256),w
  6949  1E4C  00DC               	movwf	writeValuesToUart@temperatureArr^(0+256)
  6950  1E4D  3005               	movlw	5
  6951  1E4E  00DD               	movwf	writeValuesToUart@temperatureArrLength^(0+256)
  6952  1E4F  3000               	movlw	0
  6953  1E50  00DE               	movwf	(writeValuesToUart@temperatureArrLength^(0+256)+1)
  6954  1E51  0024               	movlb	4	; select bank4
  6955  1E52  085B               	movf	(main@highestTemp+1)^(0+512),w
  6956  1E53  0022               	movlb	2	; select bank2
  6957  1E54  00E0               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+256)
  6958  1E55  0024               	movlb	4	; select bank4
  6959  1E56  085A               	movf	main@highestTemp^(0+512),w
  6960  1E57  0022               	movlb	2	; select bank2
  6961  1E58  00DF               	movwf	writeValuesToUart@temperatureHigh^(0+256)
  6962  1E59  0024               	movlb	4	; select bank4
  6963  1E5A  0865               	movf	(main@current+3)^(0+512),w
  6964  1E5B  0022               	movlb	2	; select bank2
  6965  1E5C  00E4               	movwf	(writeValuesToUart@current+3)^(0+256)
  6966  1E5D  0024               	movlb	4	; select bank4
  6967  1E5E  0864               	movf	(main@current+2)^(0+512),w
  6968  1E5F  0022               	movlb	2	; select bank2
  6969  1E60  00E3               	movwf	(writeValuesToUart@current+2)^(0+256)
  6970  1E61  0024               	movlb	4	; select bank4
  6971  1E62  0863               	movf	(main@current+1)^(0+512),w
  6972  1E63  0022               	movlb	2	; select bank2
  6973  1E64  00E2               	movwf	(writeValuesToUart@current+1)^(0+256)
  6974  1E65  0024               	movlb	4	; select bank4
  6975  1E66  0862               	movf	main@current^(0+512),w
  6976  1E67  0022               	movlb	2	; select bank2
  6977  1E68  00E1               	movwf	writeValuesToUart@current^(0+256)
  6978  1E69  3015               	movlw	21
  6979  1E6A  00E5               	movwf	writeValuesToUart@uartLines^(0+256)
  6980  1E6B  3000               	movlw	0
  6981  1E6C  00E6               	movwf	(writeValuesToUart@uartLines^(0+256)+1)
  6982  1E6D  3020               	movlw	(low (main@voltages| (0+512)))& (0+255)
  6983  1E6E  31AC  24DC  319C   	fcall	_writeValuesToUart
  6984                           
  6985                           ;main.c: 124: uartBool = 0;
  6986  1E71  0025               	movlb	5	; select bank5
  6987  1E72  01A2               	clrf	_uartBool^(0+640)
  6988  1E73  01A3               	clrf	(_uartBool+1)^(0+640)
  6989  1E74  2D22               	goto	l8116
  6990  1E75                     __end_of_main:	
  6991                           
  6992                           	psect	text1
  6993  2CDC                     __ptext1:	
  6994 ;; *************** function _writeValuesToUart *****************
  6995 ;; Defined at:
  6996 ;;		line 11 in file "uart.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  voltageArr      1    wreg     PTR float 
  6999 ;;		 -> main@voltages(48), 
  7000 ;;  voltageArrLe    2   54[BANK2 ] int 
  7001 ;;  totalVoltage    4   56[BANK2 ] float 
  7002 ;;  temperatureA    1   60[BANK2 ] PTR int 
  7003 ;;		 -> main@temps(10), 
  7004 ;;  temperatureA    2   61[BANK2 ] int 
  7005 ;;  temperatureH    2   63[BANK2 ] int 
  7006 ;;  current         4   65[BANK2 ] float 
  7007 ;;  uartLines       2   69[BANK2 ] int 
  7008 ;; Auto vars:     Size  Location     Type
  7009 ;;  voltageArr      1   71[BANK2 ] PTR float 
  7010 ;;		 -> main@voltages(48), 
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7020 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7021 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7023 ;;      Totals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7024 ;;Total ram usage:       18 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    7
  7027 ;; This function calls:
  7028 ;;		_clearScreen
  7029 ;;		_writeCurrent
  7030 ;;		_writeTemps
  7031 ;;		_writeVoltages
  7032 ;; This function is called by:
  7033 ;;		_main
  7034 ;; This function uses a non-reentrant model
  7035 ;;
  7036                           
  7037                           
  7038                           ;psect for function _writeValuesToUart
  7039  2CDC                     _writeValuesToUart:	
  7040                           
  7041                           ;incstack = 0
  7042                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7043                           ;writeValuesToUart@voltageArr stored from wreg
  7044  2CDC  0022               	movlb	2	; select bank2
  7045  2CDD  00E7               	movwf	writeValuesToUart@voltageArr^(0+256)
  7046                           
  7047                           ;uart.c: 12: clearScreen(uartLines);
  7048  2CDE  0866               	movf	(writeValuesToUart@uartLines+1)^(0+256),w
  7049  2CDF  00C2               	movwf	(clearScreen@numLines+1)^(0+256)
  7050  2CE0  0865               	movf	writeValuesToUart@uartLines^(0+256),w
  7051  2CE1  00C1               	movwf	clearScreen@numLines^(0+256)
  7052  2CE2  31AD  250F  31AC   	fcall	_clearScreen
  7053                           
  7054                           ;uart.c: 13: writeVoltages(voltageArr, voltageArrLength, totalVoltage);
  7055  2CE5  0022               	movlb	2	; select bank2
  7056  2CE6  0857               	movf	(writeValuesToUart@voltageArrLength+1)^(0+256),w
  7057  2CE7  00C2               	movwf	(writeVoltages@length+1)^(0+256)
  7058  2CE8  0856               	movf	writeValuesToUart@voltageArrLength^(0+256),w
  7059  2CE9  00C1               	movwf	writeVoltages@length^(0+256)
  7060  2CEA  085B               	movf	(writeValuesToUart@totalVoltage+3)^(0+256),w
  7061  2CEB  00C6               	movwf	(writeVoltages@totalVoltage+3)^(0+256)
  7062  2CEC  085A               	movf	(writeValuesToUart@totalVoltage+2)^(0+256),w
  7063  2CED  00C5               	movwf	(writeVoltages@totalVoltage+2)^(0+256)
  7064  2CEE  0859               	movf	(writeValuesToUart@totalVoltage+1)^(0+256),w
  7065  2CEF  00C4               	movwf	(writeVoltages@totalVoltage+1)^(0+256)
  7066  2CF0  0858               	movf	writeValuesToUart@totalVoltage^(0+256),w
  7067  2CF1  00C3               	movwf	writeVoltages@totalVoltage^(0+256)
  7068  2CF2  0867               	movf	writeValuesToUart@voltageArr^(0+256),w
  7069  2CF3  3193  2307  31AC   	fcall	_writeVoltages
  7070                           
  7071                           ;uart.c: 14: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength);
  7072  2CF6  0022               	movlb	2	; select bank2
  7073  2CF7  0860               	movf	(writeValuesToUart@temperatureHigh+1)^(0+256),w
  7074  2CF8  00C2               	movwf	(writeTemps@highestTemp+1)^(0+256)
  7075  2CF9  085F               	movf	writeValuesToUart@temperatureHigh^(0+256),w
  7076  2CFA  00C1               	movwf	writeTemps@highestTemp^(0+256)
  7077  2CFB  085E               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+256),w
  7078  2CFC  00C4               	movwf	(writeTemps@numTemps+1)^(0+256)
  7079  2CFD  085D               	movf	writeValuesToUart@temperatureArrLength^(0+256),w
  7080  2CFE  00C3               	movwf	writeTemps@numTemps^(0+256)
  7081  2CFF  085C               	movf	writeValuesToUart@temperatureArr^(0+256),w
  7082  2D00  31A0  2010  31AC   	fcall	_writeTemps
  7083                           
  7084                           ;uart.c: 15: writeCurrent(current);
  7085  2D03  0022               	movlb	2	; select bank2
  7086  2D04  0864               	movf	(writeValuesToUart@current+3)^(0+256),w
  7087  2D05  00C4               	movwf	(writeCurrent@current+3)^(0+256)
  7088  2D06  0863               	movf	(writeValuesToUart@current+2)^(0+256),w
  7089  2D07  00C3               	movwf	(writeCurrent@current+2)^(0+256)
  7090  2D08  0862               	movf	(writeValuesToUart@current+1)^(0+256),w
  7091  2D09  00C2               	movwf	(writeCurrent@current+1)^(0+256)
  7092  2D0A  0861               	movf	writeValuesToUart@current^(0+256),w
  7093  2D0B  00C1               	movwf	writeCurrent@current^(0+256)
  7094  2D0C  31AC  2437         	fcall	_writeCurrent
  7095  2D0E  0008               	return
  7096  2D0F                     __end_of_writeValuesToUart:	
  7097                           
  7098                           	psect	text2
  7099  1307                     __ptext2:	
  7100 ;; *************** function _writeVoltages *****************
  7101 ;; Defined at:
  7102 ;;		line 18 in file "uart.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  volts           1    wreg     PTR float 
  7105 ;;		 -> main@voltages(48), 
  7106 ;;  length          2   33[BANK2 ] int 
  7107 ;;  totalVoltage    4   35[BANK2 ] float 
  7108 ;; Auto vars:     Size  Location     Type
  7109 ;;  volts           1   51[BANK2 ] PTR float 
  7110 ;;		 -> main@voltages(48), 
  7111 ;;  k               2   52[BANK2 ] int 
  7112 ;;  minCell         2   49[BANK2 ] int 
  7113 ;;  maxCell         2   47[BANK2 ] int 
  7114 ;; Return value:  Size  Location     Type
  7115 ;;                  1    wreg      void 
  7116 ;; Registers used:
  7117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7123 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7124 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7125 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7126 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7127 ;;Total ram usage:       21 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; Hardware stack levels required when called:    6
  7130 ;; This function calls:
  7131 ;;		___fladd
  7132 ;;		___flge
  7133 ;;		___flneg
  7134 ;;		_sprintf
  7135 ;;		_uartEnable
  7136 ;; This function is called by:
  7137 ;;		_writeValuesToUart
  7138 ;; This function uses a non-reentrant model
  7139 ;;
  7140                           
  7141                           
  7142                           ;psect for function _writeVoltages
  7143  1307                     _writeVoltages:	
  7144                           
  7145                           ;incstack = 0
  7146                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7147                           ;writeVoltages@volts stored from wreg
  7148  1307  0022               	movlb	2	; select bank2
  7149  1308  00D3               	movwf	writeVoltages@volts^(0+256)
  7150                           
  7151                           ;uart.c: 19: int maxCell = 0;
  7152  1309  01CF               	clrf	writeVoltages@maxCell^(0+256)
  7153  130A  01D0               	clrf	(writeVoltages@maxCell+1)^(0+256)
  7154                           
  7155                           ;uart.c: 20: int minCell = 0;
  7156  130B  01D1               	clrf	writeVoltages@minCell^(0+256)
  7157  130C  01D2               	clrf	(writeVoltages@minCell+1)^(0+256)
  7158                           
  7159                           ;uart.c: 21: for(int k = 0; k < length; k++){
  7160  130D  01D4               	clrf	writeVoltages@k^(0+256)
  7161  130E  01D5               	clrf	(writeVoltages@k+1)^(0+256)
  7162  130F                     l236:	
  7163  130F  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7164  1310  3A80               	xorlw	128
  7165  1311  00C7               	movwf	??_writeVoltages^(0+256)
  7166  1312  0842               	movf	(writeVoltages@length+1)^(0+256),w
  7167  1313  3A80               	xorlw	128
  7168  1314  0247               	subwf	??_writeVoltages^(0+256),w
  7169  1315  1D03               	skipz
  7170  1316  2B19               	goto	u10975
  7171  1317  0841               	movf	writeVoltages@length^(0+256),w
  7172  1318  0254               	subwf	writeVoltages@k^(0+256),w
  7173  1319                     u10975:	
  7174  1319  1803               	btfsc	3,0
  7175  131A  2BC7               	goto	l7880
  7176                           
  7177                           ;uart.c: 22: if(volts[k]<volts[minCell]){
  7178  131B  0022               	movlb	2	; select bank2
  7179  131C  0854               	movf	writeVoltages@k^(0+256),w
  7180  131D  00C7               	movwf	??_writeVoltages^(0+256)
  7181  131E  3001               	movlw	1
  7182  131F                     u10895:	
  7183  131F  35C7               	lslf	??_writeVoltages^(0+256),f
  7184  1320  3EFF               	addlw	-1
  7185  1321  1D03               	skipz
  7186  1322  2B1F               	goto	u10895
  7187  1323  3547               	lslf	??_writeVoltages^(0+256),w
  7188  1324  0753               	addwf	writeVoltages@volts^(0+256),w
  7189  1325  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7190  1326  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7191  1327  0086               	movwf	6
  7192  1328  3002               	movlw	2	; select bank4/5
  7193  1329  0087               	movwf	7
  7194  132A  3F40               	moviw [0]fsr1
  7195  132B  0021               	movlb	1	; select bank1
  7196  132C  00D5               	movwf	___flge@ff1^(0+128)
  7197  132D  3F41               	moviw [1]fsr1
  7198  132E  00D6               	movwf	(___flge@ff1+1)^(0+128)
  7199  132F  3F42               	moviw [2]fsr1
  7200  1330  00D7               	movwf	(___flge@ff1+2)^(0+128)
  7201  1331  3F43               	moviw [3]fsr1
  7202  1332  00D8               	movwf	(___flge@ff1+3)^(0+128)
  7203  1333  0022               	movlb	2	; select bank2
  7204  1334  0851               	movf	writeVoltages@minCell^(0+256),w
  7205  1335  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7206  1336  3001               	movlw	1
  7207  1337                     u10905:	
  7208  1337  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7209  1338  3EFF               	addlw	-1
  7210  1339  1D03               	skipz
  7211  133A  2B37               	goto	u10905
  7212  133B  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7213  133C  0753               	addwf	writeVoltages@volts^(0+256),w
  7214  133D  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7215  133E  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7216  133F  0086               	movwf	6
  7217  1340  3002               	movlw	2	; select bank4/5
  7218  1341  0087               	movwf	7
  7219  1342  3F40               	moviw [0]fsr1
  7220  1343  0021               	movlb	1	; select bank1
  7221  1344  00D9               	movwf	___flge@ff2^(0+128)
  7222  1345  3F41               	moviw [1]fsr1
  7223  1346  00DA               	movwf	(___flge@ff2+1)^(0+128)
  7224  1347  3F42               	moviw [2]fsr1
  7225  1348  00DB               	movwf	(___flge@ff2+2)^(0+128)
  7226  1349  3F43               	moviw [3]fsr1
  7227  134A  00DC               	movwf	(___flge@ff2+3)^(0+128)
  7228  134B  31A3  23F3  3193   	fcall	___flge
  7229  134E  1803               	btfsc	3,0
  7230  134F  2B56               	goto	l7870
  7231                           
  7232                           ;uart.c: 23: minCell = k;
  7233  1350  0022               	movlb	2	; select bank2
  7234  1351  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7235  1352  00D2               	movwf	(writeVoltages@minCell+1)^(0+256)
  7236  1353  0854               	movf	writeVoltages@k^(0+256),w
  7237  1354  00D1               	movwf	writeVoltages@minCell^(0+256)
  7238                           
  7239                           ;uart.c: 24: }else if(volts[k] > volts[maxCell]){
  7240  1355  2B90               	goto	l7874
  7241  1356                     l7870:	
  7242  1356  0022               	movlb	2	; select bank2
  7243  1357  084F               	movf	writeVoltages@maxCell^(0+256),w
  7244  1358  00C7               	movwf	??_writeVoltages^(0+256)
  7245  1359  3001               	movlw	1
  7246  135A                     u10925:	
  7247  135A  35C7               	lslf	??_writeVoltages^(0+256),f
  7248  135B  3EFF               	addlw	-1
  7249  135C  1D03               	skipz
  7250  135D  2B5A               	goto	u10925
  7251  135E  3547               	lslf	??_writeVoltages^(0+256),w
  7252  135F  0753               	addwf	writeVoltages@volts^(0+256),w
  7253  1360  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7254  1361  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7255  1362  0086               	movwf	6
  7256  1363  3002               	movlw	2	; select bank4/5
  7257  1364  0087               	movwf	7
  7258  1365  3F40               	moviw [0]fsr1
  7259  1366  0021               	movlb	1	; select bank1
  7260  1367  00D5               	movwf	___flge@ff1^(0+128)
  7261  1368  3F41               	moviw [1]fsr1
  7262  1369  00D6               	movwf	(___flge@ff1+1)^(0+128)
  7263  136A  3F42               	moviw [2]fsr1
  7264  136B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  7265  136C  3F43               	moviw [3]fsr1
  7266  136D  00D8               	movwf	(___flge@ff1+3)^(0+128)
  7267  136E  0022               	movlb	2	; select bank2
  7268  136F  0854               	movf	writeVoltages@k^(0+256),w
  7269  1370  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7270  1371  3001               	movlw	1
  7271  1372                     u10935:	
  7272  1372  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7273  1373  3EFF               	addlw	-1
  7274  1374  1D03               	skipz
  7275  1375  2B72               	goto	u10935
  7276  1376  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7277  1377  0753               	addwf	writeVoltages@volts^(0+256),w
  7278  1378  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7279  1379  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7280  137A  0086               	movwf	6
  7281  137B  3002               	movlw	2	; select bank4/5
  7282  137C  0087               	movwf	7
  7283  137D  3F40               	moviw [0]fsr1
  7284  137E  0021               	movlb	1	; select bank1
  7285  137F  00D9               	movwf	___flge@ff2^(0+128)
  7286  1380  3F41               	moviw [1]fsr1
  7287  1381  00DA               	movwf	(___flge@ff2+1)^(0+128)
  7288  1382  3F42               	moviw [2]fsr1
  7289  1383  00DB               	movwf	(___flge@ff2+2)^(0+128)
  7290  1384  3F43               	moviw [3]fsr1
  7291  1385  00DC               	movwf	(___flge@ff2+3)^(0+128)
  7292  1386  31A3  23F3  3193   	fcall	___flge
  7293  1389  1803               	btfsc	3,0
  7294  138A  2B90               	goto	l7874
  7295                           
  7296                           ;uart.c: 25: maxCell = k;
  7297  138B  0022               	movlb	2	; select bank2
  7298  138C  0855               	movf	(writeVoltages@k+1)^(0+256),w
  7299  138D  00D0               	movwf	(writeVoltages@maxCell+1)^(0+256)
  7300  138E  0854               	movf	writeVoltages@k^(0+256),w
  7301  138F  00CF               	movwf	writeVoltages@maxCell^(0+256)
  7302  1390                     l7874:	
  7303                           
  7304                           ;uart.c: 26: }
  7305                           ;uart.c: 28: sprintf(&str[0], "V%i = %0.4fV\n\r", k+1, volts[k]);
  7306  1390  3036               	movlw	low (STR_1| (0+32768))
  7307  1391  0021               	movlb	1	; select bank1
  7308  1392  00E5               	movwf	sprintf@f^(0+128)
  7309  1393  30B1               	movlw	high (STR_1| (0+32768))
  7310  1394  00E6               	movwf	(sprintf@f^(0+128)+1)
  7311  1395  0022               	movlb	2	; select bank2
  7312  1396  0854               	movf	writeVoltages@k^(0+256),w
  7313  1397  3E01               	addlw	1
  7314  1398  0021               	movlb	1	; select bank1
  7315  1399  00E7               	movwf	(?_sprintf^(0+128)+2)
  7316  139A  3000               	movlw	0
  7317  139B  0022               	movlb	2	; select bank2
  7318  139C  3D55               	addwfc	(writeVoltages@k+1)^(0+256),w
  7319  139D  0021               	movlb	1	; select bank1
  7320  139E  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7321  139F  0022               	movlb	2	; select bank2
  7322  13A0  0854               	movf	writeVoltages@k^(0+256),w
  7323  13A1  00C7               	movwf	??_writeVoltages^(0+256)
  7324  13A2  3001               	movlw	1
  7325  13A3                     u10955:	
  7326  13A3  35C7               	lslf	??_writeVoltages^(0+256),f
  7327  13A4  3EFF               	addlw	-1
  7328  13A5  1D03               	skipz
  7329  13A6  2BA3               	goto	u10955
  7330  13A7  3547               	lslf	??_writeVoltages^(0+256),w
  7331  13A8  0753               	addwf	writeVoltages@volts^(0+256),w
  7332  13A9  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7333  13AA  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7334  13AB  0086               	movwf	6
  7335  13AC  3002               	movlw	2	; select bank4/5
  7336  13AD  0087               	movwf	7
  7337  13AE  3F40               	moviw [0]fsr1
  7338  13AF  0021               	movlb	1	; select bank1
  7339  13B0  00E9               	movwf	(?_sprintf^(0+128)+4)
  7340  13B1  3F41               	moviw [1]fsr1
  7341  13B2  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7342  13B3  3F42               	moviw [2]fsr1
  7343  13B4  00EB               	movwf	((?_sprintf+2)^(0+128)+4)
  7344  13B5  3F43               	moviw [3]fsr1
  7345  13B6  00EC               	movwf	((?_sprintf+3)^(0+128)+4)
  7346  13B7  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7347  13B8  3188  209F  3193   	fcall	_sprintf
  7348                           
  7349                           ;uart.c: 29: uartEnable();
  7350  13BB  31AB  232E  3193   	fcall	_uartEnable
  7351  13BE                     l241:	
  7352                           ;uart.c: 30: while(PIE1bits.TXIE);
  7353                           
  7354  13BE  0021               	movlb	1	; select bank1
  7355  13BF  1A11               	btfsc	17,4	;volatile
  7356  13C0  2BBE               	goto	l241
  7357  13C1  3001               	movlw	1
  7358  13C2  0022               	movlb	2	; select bank2
  7359  13C3  07D4               	addwf	writeVoltages@k^(0+256),f
  7360  13C4  3000               	movlw	0
  7361  13C5  3DD5               	addwfc	(writeVoltages@k+1)^(0+256),f
  7362  13C6  2B0F               	goto	l236
  7363  13C7                     l7880:	
  7364                           
  7365                           ;uart.c: 31: }
  7366                           ;uart.c: 33: sprintf(&str[0], "Pack Voltage: %0.4fV\n\r", totalVoltage);
  7367  13C7  30E9               	movlw	low (STR_2| (0+32768))
  7368  13C8  0021               	movlb	1	; select bank1
  7369  13C9  00E5               	movwf	sprintf@f^(0+128)
  7370  13CA  30B0               	movlw	high (STR_2| (0+32768))
  7371  13CB  00E6               	movwf	(sprintf@f^(0+128)+1)
  7372  13CC  0022               	movlb	2	; select bank2
  7373  13CD  0846               	movf	(writeVoltages@totalVoltage+3)^(0+256),w
  7374  13CE  0021               	movlb	1	; select bank1
  7375  13CF  00EA               	movwf	((?_sprintf+3)^(0+128)+2)
  7376  13D0  0022               	movlb	2	; select bank2
  7377  13D1  0845               	movf	(writeVoltages@totalVoltage+2)^(0+256),w
  7378  13D2  0021               	movlb	1	; select bank1
  7379  13D3  00E9               	movwf	((?_sprintf+2)^(0+128)+2)
  7380  13D4  0022               	movlb	2	; select bank2
  7381  13D5  0844               	movf	(writeVoltages@totalVoltage+1)^(0+256),w
  7382  13D6  0021               	movlb	1	; select bank1
  7383  13D7  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7384  13D8  0022               	movlb	2	; select bank2
  7385  13D9  0843               	movf	writeVoltages@totalVoltage^(0+256),w
  7386  13DA  0021               	movlb	1	; select bank1
  7387  13DB  00E7               	movwf	(?_sprintf^(0+128)+2)
  7388  13DC  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7389  13DD  3188  209F  3193   	fcall	_sprintf
  7390                           
  7391                           ;uart.c: 34: uartEnable();
  7392  13E0  31AB  232E  3193   	fcall	_uartEnable
  7393  13E3                     l245:	
  7394                           ;uart.c: 35: while(PIE1bits.TXIE);
  7395                           
  7396  13E3  0021               	movlb	1	; select bank1
  7397  13E4  1A11               	btfsc	17,4	;volatile
  7398  13E5  2BE3               	goto	l245
  7399                           
  7400                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7401  13E6  0022               	movlb	2	; select bank2
  7402  13E7  084F               	movf	writeVoltages@maxCell^(0+256),w
  7403  13E8  00C7               	movwf	??_writeVoltages^(0+256)
  7404  13E9  3001               	movlw	1
  7405  13EA                     u10995:	
  7406  13EA  35C7               	lslf	??_writeVoltages^(0+256),f
  7407  13EB  3EFF               	addlw	-1
  7408  13EC  1D03               	skipz
  7409  13ED  2BEA               	goto	u10995
  7410  13EE  3547               	lslf	??_writeVoltages^(0+256),w
  7411  13EF  0753               	addwf	writeVoltages@volts^(0+256),w
  7412  13F0  00C8               	movwf	(??_writeVoltages+1)^(0+256)
  7413  13F1  0848               	movf	(??_writeVoltages+1)^(0+256),w
  7414  13F2  0086               	movwf	6
  7415  13F3  3002               	movlw	2	; select bank4/5
  7416  13F4  0087               	movwf	7
  7417  13F5  3F40               	moviw [0]fsr1
  7418  13F6  0021               	movlb	1	; select bank1
  7419  13F7  00BD               	movwf	___fladd@b^(0+128)
  7420  13F8  3F41               	moviw [1]fsr1
  7421  13F9  00BE               	movwf	(___fladd@b+1)^(0+128)
  7422  13FA  3F42               	moviw [2]fsr1
  7423  13FB  00BF               	movwf	(___fladd@b+2)^(0+128)
  7424  13FC  3F43               	moviw [3]fsr1
  7425  13FD  00C0               	movwf	(___fladd@b+3)^(0+128)
  7426  13FE  0022               	movlb	2	; select bank2
  7427  13FF  0851               	movf	writeVoltages@minCell^(0+256),w
  7428  1400  00C9               	movwf	(??_writeVoltages+2)^(0+256)
  7429  1401  3001               	movlw	1
  7430  1402                     u11005:	
  7431  1402  35C9               	lslf	(??_writeVoltages+2)^(0+256),f
  7432  1403  3EFF               	addlw	-1
  7433  1404  1D03               	skipz
  7434  1405  2C02               	goto	u11005
  7435  1406  3549               	lslf	(??_writeVoltages+2)^(0+256),w
  7436  1407  0753               	addwf	writeVoltages@volts^(0+256),w
  7437  1408  00CA               	movwf	(??_writeVoltages+3)^(0+256)
  7438  1409  084A               	movf	(??_writeVoltages+3)^(0+256),w
  7439  140A  0086               	movwf	6
  7440  140B  3002               	movlw	2	; select bank4/5
  7441  140C  0087               	movwf	7
  7442  140D  3F40               	moviw [0]fsr1
  7443  140E  00F2               	movwf	___flneg@f1
  7444  140F  3F41               	moviw [1]fsr1
  7445  1410  00F3               	movwf	___flneg@f1+1
  7446  1411  3F42               	moviw [2]fsr1
  7447  1412  00F4               	movwf	___flneg@f1+2
  7448  1413  3F43               	moviw [3]fsr1
  7449  1414  00F5               	movwf	___flneg@f1+3
  7450  1415  31AB  2357  3193   	fcall	___flneg
  7451  1418  0875               	movf	?___flneg+3,w
  7452  1419  0021               	movlb	1	; select bank1
  7453  141A  00C4               	movwf	(___fladd@a+3)^(0+128)
  7454  141B  0874               	movf	?___flneg+2,w
  7455  141C  00C3               	movwf	(___fladd@a+2)^(0+128)
  7456  141D  0873               	movf	?___flneg+1,w
  7457  141E  00C2               	movwf	(___fladd@a+1)^(0+128)
  7458  141F  0872               	movf	?___flneg,w
  7459  1420  00C1               	movwf	___fladd@a^(0+128)
  7460  1421  3185  25F9  3193   	fcall	___fladd
  7461  1424  0021               	movlb	1	; select bank1
  7462  1425  0840               	movf	(?___fladd+3)^(0+128),w
  7463  1426  0022               	movlb	2	; select bank2
  7464  1427  00CE               	movwf	(_writeVoltages$2166+3)^(0+256)
  7465  1428  0021               	movlb	1	; select bank1
  7466  1429  083F               	movf	(?___fladd+2)^(0+128),w
  7467  142A  0022               	movlb	2	; select bank2
  7468  142B  00CD               	movwf	(_writeVoltages$2166+2)^(0+256)
  7469  142C  0021               	movlb	1	; select bank1
  7470  142D  083E               	movf	(?___fladd+1)^(0+128),w
  7471  142E  0022               	movlb	2	; select bank2
  7472  142F  00CC               	movwf	(_writeVoltages$2166+1)^(0+256)
  7473  1430  0021               	movlb	1	; select bank1
  7474  1431  083D               	movf	?___fladd^(0+128),w
  7475  1432  0022               	movlb	2	; select bank2
  7476  1433  00CB               	movwf	_writeVoltages$2166^(0+256)
  7477                           
  7478                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7479  1434  30C3               	movlw	low (STR_3| (0+32768))
  7480  1435  0021               	movlb	1	; select bank1
  7481  1436  00E5               	movwf	sprintf@f^(0+128)
  7482  1437  30B0               	movlw	high (STR_3| (0+32768))
  7483  1438  00E6               	movwf	(sprintf@f^(0+128)+1)
  7484  1439  0022               	movlb	2	; select bank2
  7485  143A  0851               	movf	writeVoltages@minCell^(0+256),w
  7486  143B  3E01               	addlw	1
  7487  143C  0021               	movlb	1	; select bank1
  7488  143D  00E7               	movwf	(?_sprintf^(0+128)+2)
  7489  143E  3000               	movlw	0
  7490  143F  0022               	movlb	2	; select bank2
  7491  1440  3D52               	addwfc	(writeVoltages@minCell+1)^(0+256),w
  7492  1441  0021               	movlb	1	; select bank1
  7493  1442  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7494  1443  0022               	movlb	2	; select bank2
  7495  1444  084F               	movf	writeVoltages@maxCell^(0+256),w
  7496  1445  3E01               	addlw	1
  7497  1446  0021               	movlb	1	; select bank1
  7498  1447  00E9               	movwf	(?_sprintf^(0+128)+4)
  7499  1448  3000               	movlw	0
  7500  1449  0022               	movlb	2	; select bank2
  7501  144A  3D50               	addwfc	(writeVoltages@maxCell+1)^(0+256),w
  7502  144B  0021               	movlb	1	; select bank1
  7503  144C  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7504  144D  0022               	movlb	2	; select bank2
  7505  144E  084E               	movf	(_writeVoltages$2166+3)^(0+256),w
  7506  144F  0021               	movlb	1	; select bank1
  7507  1450  00EE               	movwf	((?_sprintf+3)^(0+128)+6)
  7508  1451  0022               	movlb	2	; select bank2
  7509  1452  084D               	movf	(_writeVoltages$2166+2)^(0+256),w
  7510  1453  0021               	movlb	1	; select bank1
  7511  1454  00ED               	movwf	((?_sprintf+2)^(0+128)+6)
  7512  1455  0022               	movlb	2	; select bank2
  7513  1456  084C               	movf	(_writeVoltages$2166+1)^(0+256),w
  7514  1457  0021               	movlb	1	; select bank1
  7515  1458  00EC               	movwf	((?_sprintf+1)^(0+128)+6)
  7516  1459  0022               	movlb	2	; select bank2
  7517  145A  084B               	movf	_writeVoltages$2166^(0+256),w
  7518  145B  0021               	movlb	1	; select bank1
  7519  145C  00EB               	movwf	(?_sprintf^(0+128)+6)
  7520  145D  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7521  145E  3188  209F  3193   	fcall	_sprintf
  7522                           
  7523                           ;uart.c: 38: uartEnable();
  7524  1461  31AB  232E  3193   	fcall	_uartEnable
  7525  1464                     l248:	
  7526                           ;uart.c: 39: while(PIE1bits.TXIE);
  7527                           
  7528  1464  0021               	movlb	1	; select bank1
  7529  1465  1E11               	btfss	17,4	;volatile
  7530  1466  0008               	return
  7531  1467  2C64               	goto	l248
  7532  1468                     __end_of_writeVoltages:	
  7533                           
  7534                           	psect	text3
  7535  2010                     __ptext3:	
  7536 ;; *************** function _writeTemps *****************
  7537 ;; Defined at:
  7538 ;;		line 48 in file "uart.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  temps           1    wreg     PTR int 
  7541 ;;		 -> main@temps(10), 
  7542 ;;  highestTemp     2   33[BANK2 ] int 
  7543 ;;  numTemps        2   35[BANK2 ] int 
  7544 ;; Auto vars:     Size  Location     Type
  7545 ;;  temps           1   37[BANK2 ] PTR int 
  7546 ;;		 -> main@temps(10), 
  7547 ;;  k               2   38[BANK2 ] int 
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      void 
  7550 ;; Registers used:
  7551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7557 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7558 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7559 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7560 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7561 ;;Total ram usage:        8 bytes
  7562 ;; Hardware stack levels used:    1
  7563 ;; Hardware stack levels required when called:    6
  7564 ;; This function calls:
  7565 ;;		_sprintf
  7566 ;;		_uartEnable
  7567 ;; This function is called by:
  7568 ;;		_writeValuesToUart
  7569 ;; This function uses a non-reentrant model
  7570 ;;
  7571                           
  7572                           
  7573                           ;psect for function _writeTemps
  7574  2010                     _writeTemps:	
  7575                           
  7576                           ;incstack = 0
  7577                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7578                           ;writeTemps@temps stored from wreg
  7579  2010  0022               	movlb	2	; select bank2
  7580  2011  00C5               	movwf	writeTemps@temps^(0+256)
  7581                           
  7582                           ;uart.c: 49: for(int k = 0; k<numTemps; k++){
  7583  2012  01C6               	clrf	writeTemps@k^(0+256)
  7584  2013  01C7               	clrf	(writeTemps@k+1)^(0+256)
  7585  2014                     l260:	
  7586  2014  0847               	movf	(writeTemps@k+1)^(0+256),w
  7587  2015  3A80               	xorlw	128
  7588  2016  0021               	movlb	1	; select bank1
  7589  2017  00EF               	movwf	??_writeTemps^(0+128)
  7590  2018  0022               	movlb	2	; select bank2
  7591  2019  0844               	movf	(writeTemps@numTemps+1)^(0+256),w
  7592  201A  3A80               	xorlw	128
  7593  201B  0021               	movlb	1	; select bank1
  7594  201C  026F               	subwf	??_writeTemps^(0+128),w
  7595  201D  1D03               	skipz
  7596  201E  2822               	goto	u11035
  7597  201F  0022               	movlb	2	; select bank2
  7598  2020  0843               	movf	writeTemps@numTemps^(0+256),w
  7599  2021  0246               	subwf	writeTemps@k^(0+256),w
  7600  2022                     u11035:	
  7601  2022  1803               	btfsc	3,0
  7602  2023  2852               	goto	l7898
  7603                           
  7604                           ;uart.c: 50: sprintf(&str[n], "Temp%i = %iC\n\r", k+1, temps[k]);
  7605  2024  3027               	movlw	low (STR_5| (0+32768))
  7606  2025  0021               	movlb	1	; select bank1
  7607  2026  00E5               	movwf	sprintf@f^(0+128)
  7608  2027  30B1               	movlw	high (STR_5| (0+32768))
  7609  2028  00E6               	movwf	(sprintf@f^(0+128)+1)
  7610  2029  0022               	movlb	2	; select bank2
  7611  202A  0846               	movf	writeTemps@k^(0+256),w
  7612  202B  3E01               	addlw	1
  7613  202C  0021               	movlb	1	; select bank1
  7614  202D  00E7               	movwf	(?_sprintf^(0+128)+2)
  7615  202E  3000               	movlw	0
  7616  202F  0022               	movlb	2	; select bank2
  7617  2030  3D47               	addwfc	(writeTemps@k+1)^(0+256),w
  7618  2031  0021               	movlb	1	; select bank1
  7619  2032  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7620  2033  0022               	movlb	2	; select bank2
  7621  2034  3546               	lslf	writeTemps@k^(0+256),w
  7622  2035  0745               	addwf	writeTemps@temps^(0+256),w
  7623  2036  0021               	movlb	1	; select bank1
  7624  2037  00EF               	movwf	??_writeTemps^(0+128)
  7625  2038  086F               	movf	??_writeTemps^(0+128),w
  7626  2039  0086               	movwf	6
  7627  203A  3002               	movlw	2	; select bank4/5
  7628  203B  0087               	movwf	7
  7629  203C  3F40               	moviw [0]fsr1
  7630  203D  00E9               	movwf	(?_sprintf^(0+128)+4)
  7631  203E  3F41               	moviw [1]fsr1
  7632  203F  00EA               	movwf	((?_sprintf+1)^(0+128)+4)
  7633  2040  0025               	movlb	5	; select bank5
  7634  2041  0828               	movf	_n^(0+640),w
  7635  2042  3EAA               	addlw	(low (_str| (0+512)))& (0+255)
  7636  2043  3188  209F  31A0   	fcall	_sprintf
  7637                           
  7638                           ;uart.c: 51: uartEnable();
  7639  2046  31AB  232E  31A0   	fcall	_uartEnable
  7640  2049                     l262:	
  7641                           ;uart.c: 52: while(PIE1bits.TXIE);
  7642                           
  7643  2049  0021               	movlb	1	; select bank1
  7644  204A  1A11               	btfsc	17,4	;volatile
  7645  204B  2849               	goto	l262
  7646  204C  3001               	movlw	1
  7647  204D  0022               	movlb	2	; select bank2
  7648  204E  07C6               	addwf	writeTemps@k^(0+256),f
  7649  204F  3000               	movlw	0
  7650  2050  3DC7               	addwfc	(writeTemps@k+1)^(0+256),f
  7651  2051  2814               	goto	l260
  7652  2052                     l7898:	
  7653                           
  7654                           ;uart.c: 53: }
  7655                           ;uart.c: 56: sprintf(&str[0], "Highest Temp: %iC\n\r", highestTemp);
  7656  2052  3000               	movlw	low (STR_6| (0+32768))
  7657  2053  0021               	movlb	1	; select bank1
  7658  2054  00E5               	movwf	sprintf@f^(0+128)
  7659  2055  30B1               	movlw	high (STR_6| (0+32768))
  7660  2056  00E6               	movwf	(sprintf@f^(0+128)+1)
  7661  2057  0022               	movlb	2	; select bank2
  7662  2058  0842               	movf	(writeTemps@highestTemp+1)^(0+256),w
  7663  2059  0021               	movlb	1	; select bank1
  7664  205A  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7665  205B  0022               	movlb	2	; select bank2
  7666  205C  0841               	movf	writeTemps@highestTemp^(0+256),w
  7667  205D  0021               	movlb	1	; select bank1
  7668  205E  00E7               	movwf	(?_sprintf^(0+128)+2)
  7669  205F  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7670  2060  3188  209F  31A0   	fcall	_sprintf
  7671                           
  7672                           ;uart.c: 57: uartEnable();
  7673  2063  31AB  232E  31A0   	fcall	_uartEnable
  7674  2066                     l266:	
  7675                           ;uart.c: 58: while(PIE1bits.TXIE);
  7676                           
  7677  2066  0021               	movlb	1	; select bank1
  7678  2067  1E11               	btfss	17,4	;volatile
  7679  2068  0008               	return
  7680  2069  2866               	goto	l266
  7681  206A                     __end_of_writeTemps:	
  7682                           
  7683                           	psect	text4
  7684  2C37                     __ptext4:	
  7685 ;; *************** function _writeCurrent *****************
  7686 ;; Defined at:
  7687 ;;		line 43 in file "uart.c"
  7688 ;; Parameters:    Size  Location     Type
  7689 ;;  current         4   33[BANK2 ] float 
  7690 ;; Auto vars:     Size  Location     Type
  7691 ;;		None
  7692 ;; Return value:  Size  Location     Type
  7693 ;;                  1    wreg      void 
  7694 ;; Registers used:
  7695 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7696 ;; Tracked objects:
  7697 ;;		On entry : 0/0
  7698 ;;		On exit  : 0/0
  7699 ;;		Unchanged: 0/0
  7700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7701 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7704 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7705 ;;Total ram usage:        4 bytes
  7706 ;; Hardware stack levels used:    1
  7707 ;; Hardware stack levels required when called:    6
  7708 ;; This function calls:
  7709 ;;		_sprintf
  7710 ;;		_uartEnable
  7711 ;; This function is called by:
  7712 ;;		_writeValuesToUart
  7713 ;; This function uses a non-reentrant model
  7714 ;;
  7715                           
  7716                           
  7717                           ;psect for function _writeCurrent
  7718  2C37                     _writeCurrent:	
  7719                           
  7720                           ;uart.c: 44: sprintf(&str[0], "current = %0.4fA\n\r", current);
  7721                           
  7722                           ;incstack = 0
  7723                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7724  2C37  3014               	movlw	low (STR_4| (0+32768))
  7725  2C38  0021               	movlb	1	; select bank1
  7726  2C39  00E5               	movwf	sprintf@f^(0+128)
  7727  2C3A  30B1               	movlw	high (STR_4| (0+32768))
  7728  2C3B  00E6               	movwf	(sprintf@f^(0+128)+1)
  7729  2C3C  0022               	movlb	2	; select bank2
  7730  2C3D  0844               	movf	(writeCurrent@current+3)^(0+256),w
  7731  2C3E  0021               	movlb	1	; select bank1
  7732  2C3F  00EA               	movwf	((?_sprintf+3)^(0+128)+2)
  7733  2C40  0022               	movlb	2	; select bank2
  7734  2C41  0843               	movf	(writeCurrent@current+2)^(0+256),w
  7735  2C42  0021               	movlb	1	; select bank1
  7736  2C43  00E9               	movwf	((?_sprintf+2)^(0+128)+2)
  7737  2C44  0022               	movlb	2	; select bank2
  7738  2C45  0842               	movf	(writeCurrent@current+1)^(0+256),w
  7739  2C46  0021               	movlb	1	; select bank1
  7740  2C47  00E8               	movwf	((?_sprintf+1)^(0+128)+2)
  7741  2C48  0022               	movlb	2	; select bank2
  7742  2C49  0841               	movf	writeCurrent@current^(0+256),w
  7743  2C4A  0021               	movlb	1	; select bank1
  7744  2C4B  00E7               	movwf	(?_sprintf^(0+128)+2)
  7745  2C4C  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7746  2C4D  3188  209F  31AC   	fcall	_sprintf
  7747                           
  7748                           ;uart.c: 45: uartEnable();
  7749  2C50  31AB  232E  31AC   	fcall	_uartEnable
  7750  2C53                     l254:	
  7751                           ;uart.c: 46: while(PIE1bits.TXIE);
  7752                           
  7753  2C53  0021               	movlb	1	; select bank1
  7754  2C54  1E11               	btfss	17,4	;volatile
  7755  2C55  0008               	return
  7756  2C56  2C53               	goto	l254
  7757  2C57                     __end_of_writeCurrent:	
  7758                           
  7759                           	psect	text5
  7760  2D0F                     __ptext5:	
  7761 ;; *************** function _clearScreen *****************
  7762 ;; Defined at:
  7763 ;;		line 61 in file "uart.c"
  7764 ;; Parameters:    Size  Location     Type
  7765 ;;  numLines        2   33[BANK2 ] int 
  7766 ;; Auto vars:     Size  Location     Type
  7767 ;;  j               2   38[BANK2 ] int 
  7768 ;; Return value:  Size  Location     Type
  7769 ;;                  1    wreg      void 
  7770 ;; Registers used:
  7771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7772 ;; Tracked objects:
  7773 ;;		On entry : 0/0
  7774 ;;		On exit  : 0/0
  7775 ;;		Unchanged: 0/0
  7776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7777 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7778 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7779 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7780 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7781 ;;Total ram usage:        7 bytes
  7782 ;; Hardware stack levels used:    1
  7783 ;; Hardware stack levels required when called:    6
  7784 ;; This function calls:
  7785 ;;		_sprintf
  7786 ;;		_uartEnable
  7787 ;; This function is called by:
  7788 ;;		_writeValuesToUart
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           
  7793                           ;psect for function _clearScreen
  7794  2D0F                     _clearScreen:	
  7795                           
  7796                           ;uart.c: 62: int j = 0;
  7797                           
  7798                           ;incstack = 0
  7799                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7800  2D0F  0022               	movlb	2	; select bank2
  7801  2D10  01C6               	clrf	clearScreen@j^(0+256)
  7802  2D11  01C7               	clrf	(clearScreen@j+1)^(0+256)
  7803                           
  7804                           ;uart.c: 64: for(j = 0; j < numLines-1; j++){
  7805  2D12  01C6               	clrf	clearScreen@j^(0+256)
  7806  2D13  01C7               	clrf	(clearScreen@j+1)^(0+256)
  7807  2D14                     l7858:	
  7808  2D14  0841               	movf	clearScreen@numLines^(0+256),w
  7809  2D15  3EFF               	addlw	255
  7810  2D16  00C3               	movwf	??_clearScreen^(0+256)
  7811  2D17  30FF               	movlw	255
  7812  2D18  3D42               	addwfc	(clearScreen@numLines+1)^(0+256),w
  7813  2D19  00C4               	movwf	(??_clearScreen+1)^(0+256)
  7814  2D1A  0847               	movf	(clearScreen@j+1)^(0+256),w
  7815  2D1B  3A80               	xorlw	128
  7816  2D1C  00C5               	movwf	(??_clearScreen+2)^(0+256)
  7817  2D1D  0844               	movf	(??_clearScreen+1)^(0+256),w
  7818  2D1E  3A80               	xorlw	128
  7819  2D1F  0245               	subwf	(??_clearScreen+2)^(0+256),w
  7820  2D20  1D03               	skipz
  7821  2D21  2D24               	goto	u10875
  7822  2D22  0843               	movf	??_clearScreen^(0+256),w
  7823  2D23  0246               	subwf	clearScreen@j^(0+256),w
  7824  2D24                     u10875:	
  7825  2D24  1803               	btfsc	3,0
  7826  2D25  2D3B               	goto	l7860
  7827                           
  7828                           ;uart.c: 65: sprintf(&str[0], "\33[2K \033[A");
  7829  2D26  3050               	movlw	low (STR_7| (0+32768))
  7830  2D27  0021               	movlb	1	; select bank1
  7831  2D28  00E5               	movwf	sprintf@f^(0+128)
  7832  2D29  30B1               	movlw	high (STR_7| (0+32768))
  7833  2D2A  00E6               	movwf	(sprintf@f^(0+128)+1)
  7834  2D2B  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7835  2D2C  3188  209F  31AD   	fcall	_sprintf
  7836                           
  7837                           ;uart.c: 66: uartEnable();
  7838  2D2F  31AB  232E  31AD   	fcall	_uartEnable
  7839  2D32                     l274:	
  7840                           ;uart.c: 67: while(PIE1bits.TXIE);
  7841                           
  7842  2D32  0021               	movlb	1	; select bank1
  7843  2D33  1A11               	btfsc	17,4	;volatile
  7844  2D34  2D32               	goto	l274
  7845  2D35  3001               	movlw	1
  7846  2D36  0022               	movlb	2	; select bank2
  7847  2D37  07C6               	addwf	clearScreen@j^(0+256),f
  7848  2D38  3000               	movlw	0
  7849  2D39  3DC7               	addwfc	(clearScreen@j+1)^(0+256),f
  7850  2D3A  2D14               	goto	l7858
  7851  2D3B                     l7860:	
  7852                           
  7853                           ;uart.c: 68: }
  7854                           ;uart.c: 70: sprintf(&str[0], "\33[2K \033[A \r");
  7855  2D3B  3045               	movlw	low (STR_8| (0+32768))
  7856  2D3C  0021               	movlb	1	; select bank1
  7857  2D3D  00E5               	movwf	sprintf@f^(0+128)
  7858  2D3E  30B1               	movlw	high (STR_8| (0+32768))
  7859  2D3F  00E6               	movwf	(sprintf@f^(0+128)+1)
  7860  2D40  30AA               	movlw	(low (_str| (0+512)))& (0+255)
  7861  2D41  3188  209F  31AD   	fcall	_sprintf
  7862                           
  7863                           ;uart.c: 71: uartEnable();
  7864  2D44  31AB  232E  31AD   	fcall	_uartEnable
  7865  2D47                     l278:	
  7866                           ;uart.c: 72: while(PIE1bits.TXIE);
  7867                           
  7868  2D47  0021               	movlb	1	; select bank1
  7869  2D48  1E11               	btfss	17,4	;volatile
  7870  2D49  0008               	return
  7871  2D4A  2D47               	goto	l278
  7872  2D4B                     __end_of_clearScreen:	
  7873                           
  7874                           	psect	text6
  7875  2B2E                     __ptext6:	
  7876 ;; *************** function _uartEnable *****************
  7877 ;; Defined at:
  7878 ;;		line 75 in file "uart.c"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;		None
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;		None
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		None
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7895 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7896 ;;Total ram usage:        0 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:    2
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_writeVoltages
  7903 ;;		_writeCurrent
  7904 ;;		_writeTemps
  7905 ;;		_clearScreen
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function _uartEnable
  7911  2B2E                     _uartEnable:	
  7912                           
  7913                           ;uart.c: 76: PIE1bits.TXIE = 1;
  7914                           
  7915                           ;incstack = 0
  7916                           ; Regs used in _uartEnable: []
  7917  2B2E  0021               	movlb	1	; select bank1
  7918  2B2F  1611               	bsf	17,4	;volatile
  7919  2B30  0008               	return
  7920  2B31                     __end_of_uartEnable:	
  7921                           
  7922                           	psect	text7
  7923  089F                     __ptext7:	
  7924 ;; *************** function _sprintf *****************
  7925 ;; Defined at:
  7926 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7927 ;; Parameters:    Size  Location     Type
  7928 ;;  sp              1    wreg     PTR unsigned char 
  7929 ;;		 -> str(50), 
  7930 ;;  f               2   69[BANK1 ] PTR const unsigned char 
  7931 ;;		 -> STR_8(11), STR_7(9), STR_6(20), STR_5(15), 
  7932 ;;		 -> STR_4(19), STR_3(38), STR_2(23), STR_1(15), 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  sp              1   31[BANK2 ] PTR unsigned char 
  7935 ;;		 -> str(50), 
  7936 ;;  fval            4   25[BANK2 ] PTR unsigned char 
  7937 ;;  val             4   15[BANK2 ] unsigned long 
  7938 ;;  tmpval          4   11[BANK2 ] struct .
  7939 ;;  prec            2   29[BANK2 ] int 
  7940 ;;  width           2   23[BANK2 ] int 
  7941 ;;  flag            2   21[BANK2 ] unsigned short 
  7942 ;;  exp             2   19[BANK2 ] int 
  7943 ;;  cp              2    0        PTR const unsigned char 
  7944 ;;  len             2    0        unsigned int 
  7945 ;;  c               1   32[BANK2 ] char 
  7946 ;;  ap              1   10[BANK2 ] PTR void [1]
  7947 ;;		 -> ?_sprintf(2), 
  7948 ;;  d               1    0        unsigned char 
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  2   69[BANK1 ] int 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7953 ;; Tracked objects:
  7954 ;;		On entry : 0/0
  7955 ;;		On exit  : 0/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7958 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7959 ;;      Locals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7961 ;;      Totals:         0       0      10      33       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7962 ;;Total ram usage:       43 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    5
  7965 ;; This function calls:
  7966 ;;		___awdiv
  7967 ;;		___fladd
  7968 ;;		___flge
  7969 ;;		___flmul
  7970 ;;		___flneg
  7971 ;;		___flsub
  7972 ;;		___fltol
  7973 ;;		___lldiv
  7974 ;;		___llmod
  7975 ;;		___wmul
  7976 ;;		___xxtofl
  7977 ;;		__div_to_l_
  7978 ;;		__tdiv_to_l_
  7979 ;;		_fround
  7980 ;;		_isdigit
  7981 ;;		_scale
  7982 ;; This function is called by:
  7983 ;;		_writeVoltages
  7984 ;;		_writeCurrent
  7985 ;;		_writeTemps
  7986 ;;		_clearScreen
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           
  7990                           
  7991                           ;psect for function _sprintf
  7992  089F                     _sprintf:	
  7993                           
  7994                           ;incstack = 0
  7995                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7996                           ;sprintf@sp stored from wreg
  7997  089F  0022               	movlb	2	; select bank2
  7998  08A0  00BF               	movwf	sprintf@sp^(0+256)
  7999                           
  8000                           ;doprnt.c: 494: va_list ap;
  8001                           ;doprnt.c: 499: signed char c;
  8002                           ;doprnt.c: 501: int width;
  8003                           ;doprnt.c: 504: int prec;
  8004                           ;doprnt.c: 508: unsigned short flag;
  8005                           ;doprnt.c: 515: char d;
  8006                           ;doprnt.c: 516: double fval;
  8007                           ;doprnt.c: 517: int exp;
  8008                           ;doprnt.c: 523: union {
  8009                           ;doprnt.c: 524: unsigned long vd;
  8010                           ;doprnt.c: 525: double integ;
  8011                           ;doprnt.c: 526: } tmpval;
  8012                           ;doprnt.c: 528: unsigned long val;
  8013                           ;doprnt.c: 529: unsigned len;
  8014                           ;doprnt.c: 530: const char * cp;
  8015                           ;doprnt.c: 533: *ap = __va_start();
  8016  08A1  30E7               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8017  08A2  00A0               	movwf	??_sprintf^(0+256)
  8018  08A3  0820               	movf	??_sprintf^(0+256),w
  8019  08A4  00AA               	movwf	sprintf@ap^(0+256)
  8020  08A5                     l7732:	
  8021                           ;doprnt.c: 536: while(c = *f++) {
  8022                           
  8023  08A5  0021               	movlb	1	; select bank1
  8024  08A6  0866               	movf	(sprintf@f+1)^(0+128),w
  8025  08A7  0022               	movlb	2	; select bank2
  8026  08A8  00A1               	movwf	(??_sprintf^(0+256)+1)
  8027  08A9  0021               	movlb	1	; select bank1
  8028  08AA  0865               	movf	sprintf@f^(0+128),w
  8029  08AB  0022               	movlb	2	; select bank2
  8030  08AC  00A0               	movwf	??_sprintf^(0+256)
  8031  08AD  0021               	movlb	1	; select bank1
  8032  08AE  0AE5               	incf	sprintf@f^(0+128),f
  8033  08AF  1903               	skipnz
  8034  08B0  0AE6               	incf	(sprintf@f+1)^(0+128),f
  8035  08B1  0022               	movlb	2	; select bank2
  8036  08B2  0820               	movf	??_sprintf^(0+256),w
  8037  08B3  0084               	movwf	4
  8038  08B4  0821               	movf	(??_sprintf+1)^(0+256),w
  8039  08B5  0085               	movwf	5
  8040  08B6  0800               	movf	0,w	;code access
  8041  08B7  00A2               	movwf	(??_sprintf+2)^(0+256)
  8042  08B8  0822               	movf	(??_sprintf+2)^(0+256),w
  8043  08B9  00C0               	movwf	sprintf@c^(0+256)
  8044  08BA  0840               	movf	sprintf@c^(0+256),w
  8045  08BB  1903               	btfsc	3,2
  8046  08BC  2FFA               	goto	l7734
  8047                           
  8048                           ;doprnt.c: 538: if(c != '%')
  8049  08BD  3025               	movlw	37
  8050  08BE  0640               	xorwf	sprintf@c^(0+256),w
  8051  08BF  1903               	btfsc	3,2
  8052  08C0  28CE               	goto	l7422
  8053                           
  8054                           ;doprnt.c: 540: {
  8055                           ;doprnt.c: 541: ((*sp++ = (c)));
  8056  08C1  0840               	movf	sprintf@c^(0+256),w
  8057  08C2  00A0               	movwf	??_sprintf^(0+256)
  8058  08C3  083F               	movf	sprintf@sp^(0+256),w
  8059  08C4  0086               	movwf	6
  8060  08C5  3002               	movlw	2	; select bank4/5
  8061  08C6  0087               	movwf	7
  8062  08C7  0820               	movf	??_sprintf^(0+256),w
  8063  08C8  0081               	movwf	1
  8064  08C9  3001               	movlw	1
  8065  08CA  00A0               	movwf	??_sprintf^(0+256)
  8066  08CB  0820               	movf	??_sprintf^(0+256),w
  8067  08CC  07BF               	addwf	sprintf@sp^(0+256),f
  8068                           
  8069                           ;doprnt.c: 542: continue;
  8070  08CD  28A5               	goto	l7732
  8071  08CE                     l7422:	
  8072                           
  8073                           ;doprnt.c: 543: }
  8074                           ;doprnt.c: 546: width = 0;
  8075  08CE  01B7               	clrf	sprintf@width^(0+256)
  8076  08CF  01B8               	clrf	(sprintf@width+1)^(0+256)
  8077                           
  8078                           ;doprnt.c: 548: flag = 0;
  8079  08D0  01B5               	clrf	sprintf@flag^(0+256)
  8080  08D1  01B6               	clrf	(sprintf@flag+1)^(0+256)
  8081                           
  8082                           ;doprnt.c: 551: switch(*f) {
  8083                           
  8084                           ;doprnt.c: 550: for(;;) {
  8085  08D2  28DA               	goto	l7428
  8086  08D3                     l838:	
  8087                           ;doprnt.c: 579: case '0':
  8088                           
  8089                           
  8090                           ;doprnt.c: 580: flag |= 0x04;
  8091  08D3  0022               	movlb	2	; select bank2
  8092  08D4  1535               	bsf	sprintf@flag^(0+256),2
  8093                           
  8094                           ;doprnt.c: 581: f++;
  8095  08D5  3001               	movlw	1
  8096  08D6  0021               	movlb	1	; select bank1
  8097  08D7  07E5               	addwf	sprintf@f^(0+128),f
  8098  08D8  3000               	movlw	0
  8099  08D9  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8100  08DA                     l7428:	
  8101                           ;doprnt.c: 584: }
  8102                           
  8103                           ;doprnt.c: 582: continue;
  8104                           
  8105  08DA  0021               	movlb	1	; select bank1
  8106  08DB  0865               	movf	sprintf@f^(0+128),w
  8107  08DC  0084               	movwf	4
  8108  08DD  0866               	movf	(sprintf@f+1)^(0+128),w
  8109  08DE  0085               	movwf	5
  8110  08DF  0800               	movf	0,w	;code access
  8111                           
  8112                           ; Switch size 1, requested type "space"
  8113                           ; Number of cases is 1, Range of values is 48 to 48
  8114                           ; switch strategies available:
  8115                           ; Name         Instructions Cycles
  8116                           ; simple_byte            4     3 (average)
  8117                           ; direct_byte           11     9 (fixed)
  8118                           ; jumptable            263     9 (fixed)
  8119                           ;	Chosen strategy is simple_byte
  8120  08E0  3A30               	xorlw	48	; case 48
  8121  08E1  1903               	skipnz
  8122  08E2  28D3               	goto	l838
  8123  08E3  28E4               	goto	l7430
  8124  08E4                     l7430:	
  8125                           ;doprnt.c: 586: }
  8126                           
  8127                           ;doprnt.c: 585: break;
  8128                           
  8129                           
  8130                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  8131  08E4  0865               	movf	sprintf@f^(0+128),w
  8132  08E5  0084               	movwf	4
  8133  08E6  0866               	movf	(sprintf@f+1)^(0+128),w
  8134  08E7  0085               	movwf	5
  8135  08E8  0800               	movf	0,w	;code access
  8136  08E9  31A0  2002  3188   	fcall	_isdigit
  8137  08EC  1C03               	btfss	3,0
  8138  08ED  2922               	goto	l7442
  8139                           
  8140                           ;doprnt.c: 598: width = 0;
  8141  08EE  0022               	movlb	2	; select bank2
  8142  08EF  01B7               	clrf	sprintf@width^(0+256)
  8143  08F0  01B8               	clrf	(sprintf@width+1)^(0+256)
  8144  08F1                     l7434:	
  8145                           ;doprnt.c: 599: do {
  8146                           
  8147                           
  8148                           ;doprnt.c: 600: width *= 10;
  8149  08F1  300A               	movlw	10
  8150  08F2  00F2               	movwf	___wmul@multiplier
  8151  08F3  3000               	movlw	0
  8152  08F4  00F3               	movwf	___wmul@multiplier+1
  8153  08F5  0022               	movlb	2	; select bank2
  8154  08F6  0838               	movf	(sprintf@width+1)^(0+256),w
  8155  08F7  00F5               	movwf	___wmul@multiplicand+1
  8156  08F8  0837               	movf	sprintf@width^(0+256),w
  8157  08F9  00F4               	movwf	___wmul@multiplicand
  8158  08FA  31AB  23DE  3188   	fcall	___wmul
  8159  08FD  0873               	movf	?___wmul+1,w
  8160  08FE  0022               	movlb	2	; select bank2
  8161  08FF  00B8               	movwf	(sprintf@width+1)^(0+256)
  8162  0900  0872               	movf	?___wmul,w
  8163  0901  00B7               	movwf	sprintf@width^(0+256)
  8164                           
  8165                           ;doprnt.c: 601: width += *f++ - '0';
  8166  0902  0021               	movlb	1	; select bank1
  8167  0903  0865               	movf	sprintf@f^(0+128),w
  8168  0904  0084               	movwf	4
  8169  0905  0866               	movf	(sprintf@f+1)^(0+128),w
  8170  0906  0085               	movwf	5
  8171  0907  0800               	movf	0,w	;code access
  8172  0908  3ED0               	addlw	208
  8173  0909  0022               	movlb	2	; select bank2
  8174  090A  00A0               	movwf	??_sprintf^(0+256)
  8175  090B  30FF               	movlw	255
  8176  090C  1803               	skipnc
  8177  090D  3000               	movlw	0
  8178  090E  00A1               	movwf	(??_sprintf^(0+256)+1)
  8179  090F  0820               	movf	??_sprintf^(0+256),w
  8180  0910  07B7               	addwf	sprintf@width^(0+256),f
  8181  0911  0821               	movf	(??_sprintf+1)^(0+256),w
  8182  0912  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  8183  0913  3001               	movlw	1
  8184  0914  0021               	movlb	1	; select bank1
  8185  0915  07E5               	addwf	sprintf@f^(0+128),f
  8186  0916  3000               	movlw	0
  8187  0917  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8188                           
  8189                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  8190  0918  0865               	movf	sprintf@f^(0+128),w
  8191  0919  0084               	movwf	4
  8192  091A  0866               	movf	(sprintf@f+1)^(0+128),w
  8193  091B  0085               	movwf	5
  8194  091C  0800               	movf	0,w	;code access
  8195  091D  31A0  2002  3188   	fcall	_isdigit
  8196  0920  1803               	btfsc	3,0
  8197  0921  28F1               	goto	l7434
  8198  0922                     l7442:	
  8199                           
  8200                           ;doprnt.c: 608: }
  8201                           ;doprnt.c: 611: if(*f == '.') {
  8202  0922  0021               	movlb	1	; select bank1
  8203  0923  0865               	movf	sprintf@f^(0+128),w
  8204  0924  0084               	movwf	4
  8205  0925  0866               	movf	(sprintf@f+1)^(0+128),w
  8206  0926  0085               	movwf	5
  8207  0927  0012               	moviw fsr0++
  8208  0928  3A2E               	xorlw	46
  8209  0929  1D03               	btfss	3,2
  8210  092A  2967               	goto	l7456
  8211                           
  8212                           ;doprnt.c: 612: flag |= 0x4000;
  8213  092B  0022               	movlb	2	; select bank2
  8214  092C  1736               	bsf	(sprintf@flag^(0+256)+1),6
  8215                           
  8216                           ;doprnt.c: 613: f++;
  8217  092D  3001               	movlw	1
  8218  092E  0021               	movlb	1	; select bank1
  8219  092F  07E5               	addwf	sprintf@f^(0+128),f
  8220  0930  3000               	movlw	0
  8221  0931  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8222                           
  8223                           ;doprnt.c: 620: {
  8224                           ;doprnt.c: 621: prec = 0;
  8225  0932  0022               	movlb	2	; select bank2
  8226  0933  01BD               	clrf	sprintf@prec^(0+256)
  8227  0934  01BE               	clrf	(sprintf@prec+1)^(0+256)
  8228  0935                     l7454:	
  8229                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  8230                           
  8231  0935  0021               	movlb	1	; select bank1
  8232  0936  0865               	movf	sprintf@f^(0+128),w
  8233  0937  0084               	movwf	4
  8234  0938  0866               	movf	(sprintf@f+1)^(0+128),w
  8235  0939  0085               	movwf	5
  8236  093A  0800               	movf	0,w	;code access
  8237  093B  31A0  2002  3188   	fcall	_isdigit
  8238  093E  1C03               	btfss	3,0
  8239  093F  296E               	goto	l7462
  8240                           
  8241                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  8242  0940  0021               	movlb	1	; select bank1
  8243  0941  0865               	movf	sprintf@f^(0+128),w
  8244  0942  0084               	movwf	4
  8245  0943  0866               	movf	(sprintf@f+1)^(0+128),w
  8246  0944  0085               	movwf	5
  8247  0945  0800               	movf	0,w	;code access
  8248  0946  0022               	movlb	2	; select bank2
  8249  0947  00A0               	movwf	??_sprintf^(0+256)
  8250  0948  01A1               	clrf	(??_sprintf^(0+256)+1)
  8251  0949  083E               	movf	(sprintf@prec+1)^(0+256),w
  8252  094A  00F3               	movwf	___wmul@multiplier+1
  8253  094B  083D               	movf	sprintf@prec^(0+256),w
  8254  094C  00F2               	movwf	___wmul@multiplier
  8255  094D  300A               	movlw	10
  8256  094E  00F4               	movwf	___wmul@multiplicand
  8257  094F  3000               	movlw	0
  8258  0950  00F5               	movwf	___wmul@multiplicand+1
  8259  0951  31AB  23DE  3188   	fcall	___wmul
  8260  0954  0022               	movlb	2	; select bank2
  8261  0955  0820               	movf	??_sprintf^(0+256),w
  8262  0956  0772               	addwf	?___wmul,w
  8263  0957  00A2               	movwf	(??_sprintf+2)^(0+256)
  8264  0958  0821               	movf	(??_sprintf+1)^(0+256),w
  8265  0959  3D73               	addwfc	?___wmul+1,w
  8266  095A  00A3               	movwf	(??_sprintf+3)^(0+256)
  8267  095B  0822               	movf	(??_sprintf+2)^(0+256),w
  8268  095C  3ED0               	addlw	208
  8269  095D  00BD               	movwf	sprintf@prec^(0+256)
  8270  095E  30FF               	movlw	255
  8271  095F  3D23               	addwfc	(??_sprintf+3)^(0+256),w
  8272  0960  00BE               	movwf	(sprintf@prec+1)^(0+256)
  8273  0961  3001               	movlw	1
  8274  0962  0021               	movlb	1	; select bank1
  8275  0963  07E5               	addwf	sprintf@f^(0+128),f
  8276  0964  3000               	movlw	0
  8277  0965  3DE6               	addwfc	(sprintf@f+1)^(0+128),f
  8278  0966  2935               	goto	l7454
  8279  0967                     l7456:	
  8280                           ;doprnt.c: 624: }
  8281                           ;doprnt.c: 625: } else {
  8282                           
  8283                           
  8284                           ;doprnt.c: 626: prec = 0;
  8285  0967  0022               	movlb	2	; select bank2
  8286  0968  01BD               	clrf	sprintf@prec^(0+256)
  8287  0969  01BE               	clrf	(sprintf@prec+1)^(0+256)
  8288                           
  8289                           ;doprnt.c: 628: flag |= 0x1000;
  8290  096A  1636               	bsf	(sprintf@flag^(0+256)+1),4
  8291                           
  8292                           ;doprnt.c: 630: }
  8293                           ;doprnt.c: 635: switch(c = *f++) {
  8294  096B  296E               	goto	l7462
  8295  096C                     l853:	
  8296                           ;doprnt.c: 662: case 'f':
  8297                           
  8298                           ;doprnt.c: 638: goto alldone;
  8299                           
  8300                           ;doprnt.c: 637: case 0:
  8301                           
  8302                           
  8303                           ;doprnt.c: 663: flag |= 0x400;
  8304  096C  1536               	bsf	(sprintf@flag^(0+256)+1),2
  8305                           
  8306                           ;doprnt.c: 698: case 'i':
  8307                           ;doprnt.c: 699: break;
  8308                           
  8309                           ;doprnt.c: 697: case 'd':
  8310                           
  8311                           ;doprnt.c: 664: break;
  8312  096D  298E               	goto	l7464
  8313  096E                     l7462:	
  8314                           ;doprnt.c: 822: }
  8315                           
  8316                           ;doprnt.c: 813: continue;
  8317                           
  8318                           ;doprnt.c: 802: default:
  8319                           
  8320  096E  0021               	movlb	1	; select bank1
  8321  096F  0866               	movf	(sprintf@f+1)^(0+128),w
  8322  0970  0022               	movlb	2	; select bank2
  8323  0971  00A1               	movwf	(??_sprintf^(0+256)+1)
  8324  0972  0021               	movlb	1	; select bank1
  8325  0973  0865               	movf	sprintf@f^(0+128),w
  8326  0974  0022               	movlb	2	; select bank2
  8327  0975  00A0               	movwf	??_sprintf^(0+256)
  8328  0976  0021               	movlb	1	; select bank1
  8329  0977  0AE5               	incf	sprintf@f^(0+128),f
  8330  0978  1903               	skipnz
  8331  0979  0AE6               	incf	(sprintf@f+1)^(0+128),f
  8332  097A  0022               	movlb	2	; select bank2
  8333  097B  0820               	movf	??_sprintf^(0+256),w
  8334  097C  0084               	movwf	4
  8335  097D  0821               	movf	(??_sprintf+1)^(0+256),w
  8336  097E  0085               	movwf	5
  8337  097F  0800               	movf	0,w	;code access
  8338  0980  00C0               	movwf	sprintf@c^(0+256)
  8339                           
  8340                           ; Switch size 1, requested type "space"
  8341                           ; Number of cases is 4, Range of values is 0 to 105
  8342                           ; switch strategies available:
  8343                           ; Name         Instructions Cycles
  8344                           ; simple_byte           13     7 (average)
  8345                           ; direct_byte          218     6 (fixed)
  8346                           ; jumptable            260     6 (fixed)
  8347                           ;	Chosen strategy is simple_byte
  8348  0981  3A00               	xorlw	0	; case 0
  8349  0982  1903               	skipnz
  8350  0983  2FFA               	goto	l7734
  8351  0984  3A64               	xorlw	100	; case 100
  8352  0985  1903               	skipnz
  8353  0986  298E               	goto	l7464
  8354  0987  3A02               	xorlw	2	; case 102
  8355  0988  1903               	skipnz
  8356  0989  296C               	goto	l853
  8357  098A  3A0F               	xorlw	15	; case 105
  8358  098B  1903               	skipnz
  8359  098C  298E               	goto	l7464
  8360  098D  28A5               	goto	l7732
  8361  098E                     l7464:	
  8362                           
  8363                           ;doprnt.c: 825: if(flag & (0x700)) {
  8364  098E  3000               	movlw	0
  8365  098F  0535               	andwf	sprintf@flag^(0+256),w
  8366  0990  00A0               	movwf	??_sprintf^(0+256)
  8367  0991  3007               	movlw	7
  8368  0992  0536               	andwf	(sprintf@flag+1)^(0+256),w
  8369  0993  00A1               	movwf	(??_sprintf+1)^(0+256)
  8370  0994  0820               	movf	??_sprintf^(0+256),w
  8371  0995  0421               	iorwf	(??_sprintf^(0+256)+1),w
  8372  0996  1903               	btfsc	3,2
  8373  0997  2E7A               	goto	l7640
  8374                           
  8375                           ;doprnt.c: 827: if(flag & 0x1000)
  8376  0998  1E36               	btfss	(sprintf@flag+1)^(0+256),4
  8377  0999  299E               	goto	l7470
  8378                           
  8379                           ;doprnt.c: 829: prec = 6;
  8380  099A  3006               	movlw	6
  8381  099B  00BD               	movwf	sprintf@prec^(0+256)
  8382  099C  3000               	movlw	0
  8383  099D  00BE               	movwf	(sprintf@prec^(0+256)+1)
  8384  099E                     l7470:	
  8385                           
  8386                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8387  099E  082A               	movf	sprintf@ap^(0+256),w
  8388  099F  0086               	movwf	6
  8389  09A0  0187               	clrf	7
  8390  09A1  3F40               	moviw [0]fsr1
  8391  09A2  00B9               	movwf	sprintf@fval^(0+256)
  8392  09A3  3F41               	moviw [1]fsr1
  8393  09A4  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8394  09A5  3F42               	moviw [2]fsr1
  8395  09A6  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8396  09A7  3F43               	moviw [3]fsr1
  8397  09A8  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8398  09A9  3004               	movlw	4
  8399  09AA  00A0               	movwf	??_sprintf^(0+256)
  8400  09AB  0820               	movf	??_sprintf^(0+256),w
  8401  09AC  07AA               	addwf	sprintf@ap^(0+256),f
  8402                           
  8403                           ;doprnt.c: 831: if(fval < 0.0) {
  8404  09AD  083C               	movf	(sprintf@fval+3)^(0+256),w
  8405  09AE  0021               	movlb	1	; select bank1
  8406  09AF  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8407  09B0  0022               	movlb	2	; select bank2
  8408  09B1  083B               	movf	(sprintf@fval+2)^(0+256),w
  8409  09B2  0021               	movlb	1	; select bank1
  8410  09B3  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8411  09B4  0022               	movlb	2	; select bank2
  8412  09B5  083A               	movf	(sprintf@fval+1)^(0+256),w
  8413  09B6  0021               	movlb	1	; select bank1
  8414  09B7  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8415  09B8  0022               	movlb	2	; select bank2
  8416  09B9  0839               	movf	sprintf@fval^(0+256),w
  8417  09BA  0021               	movlb	1	; select bank1
  8418  09BB  00D5               	movwf	___flge@ff1^(0+128)
  8419  09BC  3000               	movlw	0
  8420  09BD  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8421  09BE  3000               	movlw	0
  8422  09BF  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8423  09C0  3000               	movlw	0
  8424  09C1  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8425  09C2  3000               	movlw	0
  8426  09C3  00D9               	movwf	___flge@ff2^(0+128)
  8427  09C4  31A3  23F3  3188   	fcall	___flge
  8428  09C7  1803               	btfsc	3,0
  8429  09C8  29E2               	goto	l7480
  8430                           
  8431                           ;doprnt.c: 832: fval = -fval;
  8432  09C9  0022               	movlb	2	; select bank2
  8433  09CA  083C               	movf	(sprintf@fval+3)^(0+256),w
  8434  09CB  00F5               	movwf	___flneg@f1+3
  8435  09CC  083B               	movf	(sprintf@fval+2)^(0+256),w
  8436  09CD  00F4               	movwf	___flneg@f1+2
  8437  09CE  083A               	movf	(sprintf@fval+1)^(0+256),w
  8438  09CF  00F3               	movwf	___flneg@f1+1
  8439  09D0  0839               	movf	sprintf@fval^(0+256),w
  8440  09D1  00F2               	movwf	___flneg@f1
  8441  09D2  31AB  2357  3188   	fcall	___flneg
  8442  09D5  0875               	movf	?___flneg+3,w
  8443  09D6  0022               	movlb	2	; select bank2
  8444  09D7  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8445  09D8  0874               	movf	?___flneg+2,w
  8446  09D9  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8447  09DA  0873               	movf	?___flneg+1,w
  8448  09DB  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8449  09DC  0872               	movf	?___flneg,w
  8450  09DD  00B9               	movwf	sprintf@fval^(0+256)
  8451                           
  8452                           ;doprnt.c: 833: flag |= 0x03;
  8453  09DE  3003               	movlw	3
  8454  09DF  04B5               	iorwf	sprintf@flag^(0+256),f
  8455  09E0  3000               	movlw	0
  8456  09E1  04B6               	iorwf	(sprintf@flag+1)^(0+256),f
  8457  09E2                     l7480:	
  8458                           
  8459                           ;doprnt.c: 834: }
  8460                           ;doprnt.c: 835: exp = 0;
  8461  09E2  0022               	movlb	2	; select bank2
  8462  09E3  01B3               	clrf	sprintf@exp^(0+256)
  8463  09E4  01B4               	clrf	(sprintf@exp+1)^(0+256)
  8464                           
  8465                           ;doprnt.c: 836: if( fval!=0) {
  8466  09E5  083C               	movf	(sprintf@fval+3)^(0+256),w
  8467  09E6  043B               	iorwf	(sprintf@fval+2)^(0+256),w
  8468  09E7  043A               	iorwf	(sprintf@fval+1)^(0+256),w
  8469  09E8  0439               	iorwf	sprintf@fval^(0+256),w
  8470  09E9  1903               	skipnz
  8471  09EA  2AB8               	goto	l861
  8472                           
  8473                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8474  09EB  0839               	movf	sprintf@fval^(0+256),w
  8475  09EC  00A0               	movwf	??_sprintf^(0+256)
  8476  09ED  083A               	movf	(sprintf@fval+1)^(0+256),w
  8477  09EE  00A1               	movwf	(??_sprintf^(0+256)+1)
  8478  09EF  083B               	movf	(sprintf@fval+2)^(0+256),w
  8479  09F0  00A2               	movwf	(??_sprintf^(0+256)+2)
  8480  09F1  083C               	movf	(sprintf@fval+3)^(0+256),w
  8481  09F2  00A3               	movwf	(??_sprintf^(0+256)+3)
  8482  09F3  1003               	clrc
  8483  09F4  0D22               	rlf	(??_sprintf^(0+256)+2),w
  8484  09F5  0D23               	rlf	(??_sprintf^(0+256)+3),w
  8485  09F6  3E82               	addlw	130
  8486  09F7  00B3               	movwf	sprintf@exp^(0+256)
  8487  09F8  30FF               	movlw	255
  8488  09F9  1803               	skipnc
  8489  09FA  3000               	movlw	0
  8490  09FB  00B4               	movwf	(sprintf@exp^(0+256)+1)
  8491                           
  8492                           ;doprnt.c: 838: exp--;
  8493  09FC  30FF               	movlw	255
  8494  09FD  07B3               	addwf	sprintf@exp^(0+256),f
  8495  09FE  30FF               	movlw	255
  8496  09FF  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8497                           
  8498                           ;doprnt.c: 839: exp *= 3;
  8499  0A00  3003               	movlw	3
  8500  0A01  00F2               	movwf	___wmul@multiplier
  8501  0A02  3000               	movlw	0
  8502  0A03  00F3               	movwf	___wmul@multiplier+1
  8503  0A04  0834               	movf	(sprintf@exp+1)^(0+256),w
  8504  0A05  00F5               	movwf	___wmul@multiplicand+1
  8505  0A06  0833               	movf	sprintf@exp^(0+256),w
  8506  0A07  00F4               	movwf	___wmul@multiplicand
  8507  0A08  31AB  23DE  3188   	fcall	___wmul
  8508  0A0B  0873               	movf	?___wmul+1,w
  8509  0A0C  0022               	movlb	2	; select bank2
  8510  0A0D  00B4               	movwf	(sprintf@exp+1)^(0+256)
  8511  0A0E  0872               	movf	?___wmul,w
  8512  0A0F  00B3               	movwf	sprintf@exp^(0+256)
  8513                           
  8514                           ;doprnt.c: 840: exp /= 10;
  8515  0A10  300A               	movlw	10
  8516  0A11  0020               	movlb	0	; select bank0
  8517  0A12  00A0               	movwf	___awdiv@divisor
  8518  0A13  3000               	movlw	0
  8519  0A14  00A1               	movwf	___awdiv@divisor+1
  8520  0A15  0022               	movlb	2	; select bank2
  8521  0A16  0834               	movf	(sprintf@exp+1)^(0+256),w
  8522  0A17  0020               	movlb	0	; select bank0
  8523  0A18  00A3               	movwf	___awdiv@dividend+1
  8524  0A19  0022               	movlb	2	; select bank2
  8525  0A1A  0833               	movf	sprintf@exp^(0+256),w
  8526  0A1B  0020               	movlb	0	; select bank0
  8527  0A1C  00A2               	movwf	___awdiv@dividend
  8528  0A1D  31AE  26B2  3188   	fcall	___awdiv
  8529  0A20  0020               	movlb	0	; select bank0
  8530  0A21  0821               	movf	?___awdiv+1,w
  8531  0A22  0022               	movlb	2	; select bank2
  8532  0A23  00B4               	movwf	(sprintf@exp+1)^(0+256)
  8533  0A24  0020               	movlb	0	; select bank0
  8534  0A25  0820               	movf	?___awdiv,w
  8535  0A26  0022               	movlb	2	; select bank2
  8536  0A27  00B3               	movwf	sprintf@exp^(0+256)
  8537                           
  8538                           ;doprnt.c: 841: if(exp < 0)
  8539  0A28  1FB4               	btfss	(sprintf@exp+1)^(0+256),7
  8540  0A29  2A2E               	goto	l7496
  8541                           
  8542                           ;doprnt.c: 842: exp--;
  8543  0A2A  30FF               	movlw	255
  8544  0A2B  07B3               	addwf	sprintf@exp^(0+256),f
  8545  0A2C  30FF               	movlw	255
  8546  0A2D  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8547  0A2E                     l7496:	
  8548                           
  8549                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8550  0A2E  0333               	decf	sprintf@exp^(0+256),w
  8551  0A2F  3AFF               	xorlw	255
  8552  0A30  3180  20A8  3188   	fcall	_scale
  8553  0A33  0020               	movlb	0	; select bank0
  8554  0A34  086F               	movf	?_scale+3,w
  8555  0A35  0022               	movlb	2	; select bank2
  8556  0A36  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8557  0A37  0020               	movlb	0	; select bank0
  8558  0A38  086E               	movf	?_scale+2,w
  8559  0A39  0022               	movlb	2	; select bank2
  8560  0A3A  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8561  0A3B  0020               	movlb	0	; select bank0
  8562  0A3C  086D               	movf	?_scale+1,w
  8563  0A3D  0022               	movlb	2	; select bank2
  8564  0A3E  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8565  0A3F  0020               	movlb	0	; select bank0
  8566  0A40  086C               	movf	?_scale,w
  8567  0A41  0022               	movlb	2	; select bank2
  8568  0A42  00AB               	movwf	sprintf@tmpval^(0+256)
  8569                           
  8570                           ;doprnt.c: 847: tmpval.integ *= fval;
  8571  0A43  083C               	movf	(sprintf@fval+3)^(0+256),w
  8572  0A44  0020               	movlb	0	; select bank0
  8573  0A45  00D5               	movwf	___flmul@b+3
  8574  0A46  0022               	movlb	2	; select bank2
  8575  0A47  083B               	movf	(sprintf@fval+2)^(0+256),w
  8576  0A48  0020               	movlb	0	; select bank0
  8577  0A49  00D4               	movwf	___flmul@b+2
  8578  0A4A  0022               	movlb	2	; select bank2
  8579  0A4B  083A               	movf	(sprintf@fval+1)^(0+256),w
  8580  0A4C  0020               	movlb	0	; select bank0
  8581  0A4D  00D3               	movwf	___flmul@b+1
  8582  0A4E  0022               	movlb	2	; select bank2
  8583  0A4F  0839               	movf	sprintf@fval^(0+256),w
  8584  0A50  0020               	movlb	0	; select bank0
  8585  0A51  00D2               	movwf	___flmul@b
  8586  0A52  0022               	movlb	2	; select bank2
  8587  0A53  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8588  0A54  0020               	movlb	0	; select bank0
  8589  0A55  00D9               	movwf	___flmul@a+3
  8590  0A56  0022               	movlb	2	; select bank2
  8591  0A57  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8592  0A58  0020               	movlb	0	; select bank0
  8593  0A59  00D8               	movwf	___flmul@a+2
  8594  0A5A  0022               	movlb	2	; select bank2
  8595  0A5B  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8596  0A5C  0020               	movlb	0	; select bank0
  8597  0A5D  00D7               	movwf	___flmul@a+1
  8598  0A5E  0022               	movlb	2	; select bank2
  8599  0A5F  082B               	movf	sprintf@tmpval^(0+256),w
  8600  0A60  0020               	movlb	0	; select bank0
  8601  0A61  00D6               	movwf	___flmul@a
  8602  0A62  3183  23CD  3188   	fcall	___flmul
  8603  0A65  0020               	movlb	0	; select bank0
  8604  0A66  0855               	movf	?___flmul+3,w
  8605  0A67  0022               	movlb	2	; select bank2
  8606  0A68  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8607  0A69  0020               	movlb	0	; select bank0
  8608  0A6A  0854               	movf	?___flmul+2,w
  8609  0A6B  0022               	movlb	2	; select bank2
  8610  0A6C  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8611  0A6D  0020               	movlb	0	; select bank0
  8612  0A6E  0853               	movf	?___flmul+1,w
  8613  0A6F  0022               	movlb	2	; select bank2
  8614  0A70  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8615  0A71  0020               	movlb	0	; select bank0
  8616  0A72  0852               	movf	?___flmul,w
  8617  0A73  0022               	movlb	2	; select bank2
  8618  0A74  00AB               	movwf	sprintf@tmpval^(0+256)
  8619                           
  8620                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8621  0A75  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8622  0A76  0021               	movlb	1	; select bank1
  8623  0A77  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8624  0A78  0022               	movlb	2	; select bank2
  8625  0A79  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8626  0A7A  0021               	movlb	1	; select bank1
  8627  0A7B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8628  0A7C  0022               	movlb	2	; select bank2
  8629  0A7D  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8630  0A7E  0021               	movlb	1	; select bank1
  8631  0A7F  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8632  0A80  0022               	movlb	2	; select bank2
  8633  0A81  082B               	movf	sprintf@tmpval^(0+256),w
  8634  0A82  0021               	movlb	1	; select bank1
  8635  0A83  00D5               	movwf	___flge@ff1^(0+128)
  8636  0A84  303F               	movlw	63
  8637  0A85  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8638  0A86  3080               	movlw	128
  8639  0A87  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8640  0A88  3000               	movlw	0
  8641  0A89  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8642  0A8A  3000               	movlw	0
  8643  0A8B  00D9               	movwf	___flge@ff2^(0+128)
  8644  0A8C  31A3  23F3  3188   	fcall	___flge
  8645  0A8F  1803               	btfsc	3,0
  8646  0A90  2A96               	goto	l7504
  8647                           
  8648                           ;doprnt.c: 849: exp--;
  8649  0A91  30FF               	movlw	255
  8650  0A92  0022               	movlb	2	; select bank2
  8651  0A93  07B3               	addwf	sprintf@exp^(0+256),f
  8652  0A94  30FF               	movlw	255
  8653  0A95  2AB7               	goto	L2
  8654  0A96                     l7504:	
  8655                           
  8656                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8657  0A96  0022               	movlb	2	; select bank2
  8658  0A97  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8659  0A98  0021               	movlb	1	; select bank1
  8660  0A99  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8661  0A9A  0022               	movlb	2	; select bank2
  8662  0A9B  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8663  0A9C  0021               	movlb	1	; select bank1
  8664  0A9D  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8665  0A9E  0022               	movlb	2	; select bank2
  8666  0A9F  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8667  0AA0  0021               	movlb	1	; select bank1
  8668  0AA1  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8669  0AA2  0022               	movlb	2	; select bank2
  8670  0AA3  082B               	movf	sprintf@tmpval^(0+256),w
  8671  0AA4  0021               	movlb	1	; select bank1
  8672  0AA5  00D5               	movwf	___flge@ff1^(0+128)
  8673  0AA6  3041               	movlw	65
  8674  0AA7  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8675  0AA8  3020               	movlw	32
  8676  0AA9  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8677  0AAA  3000               	movlw	0
  8678  0AAB  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8679  0AAC  3000               	movlw	0
  8680  0AAD  00D9               	movwf	___flge@ff2^(0+128)
  8681  0AAE  31A3  23F3  3188   	fcall	___flge
  8682  0AB1  1C03               	btfss	3,0
  8683  0AB2  2AB8               	goto	l861
  8684                           
  8685                           ;doprnt.c: 851: exp++;
  8686  0AB3  3001               	movlw	1
  8687  0AB4  0022               	movlb	2	; select bank2
  8688  0AB5  07B3               	addwf	sprintf@exp^(0+256),f
  8689  0AB6  3000               	movlw	0
  8690  0AB7                     L2:	
  8691  0AB7  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8692  0AB8                     l861:	
  8693                           
  8694                           ;doprnt.c: 852: }
  8695                           ;doprnt.c: 1112: if(prec <= 12)
  8696  0AB8  0022               	movlb	2	; select bank2
  8697  0AB9  083E               	movf	(sprintf@prec+1)^(0+256),w
  8698  0ABA  3A80               	xorlw	128
  8699  0ABB  00A0               	movwf	??_sprintf^(0+256)
  8700  0ABC  3080               	movlw	128
  8701  0ABD  0220               	subwf	??_sprintf^(0+256),w
  8702  0ABE  1D03               	skipz
  8703  0ABF  2AC2               	goto	u10285
  8704  0AC0  300D               	movlw	13
  8705  0AC1  023D               	subwf	sprintf@prec^(0+256),w
  8706  0AC2                     u10285:	
  8707  0AC2  1803               	skipnc
  8708  0AC3  2AFC               	goto	l7510
  8709                           
  8710                           ;doprnt.c: 1113: fval += fround(prec);
  8711  0AC4  0022               	movlb	2	; select bank2
  8712  0AC5  083D               	movf	sprintf@prec^(0+256),w
  8713  0AC6  3195  25F7  3188   	fcall	_fround
  8714  0AC9  0020               	movlb	0	; select bank0
  8715  0ACA  086F               	movf	?_fround+3,w
  8716  0ACB  0021               	movlb	1	; select bank1
  8717  0ACC  00C0               	movwf	(___fladd@b+3)^(0+128)
  8718  0ACD  0020               	movlb	0	; select bank0
  8719  0ACE  086E               	movf	?_fround+2,w
  8720  0ACF  0021               	movlb	1	; select bank1
  8721  0AD0  00BF               	movwf	(___fladd@b+2)^(0+128)
  8722  0AD1  0020               	movlb	0	; select bank0
  8723  0AD2  086D               	movf	?_fround+1,w
  8724  0AD3  0021               	movlb	1	; select bank1
  8725  0AD4  00BE               	movwf	(___fladd@b+1)^(0+128)
  8726  0AD5  0020               	movlb	0	; select bank0
  8727  0AD6  086C               	movf	?_fround,w
  8728  0AD7  0021               	movlb	1	; select bank1
  8729  0AD8  00BD               	movwf	___fladd@b^(0+128)
  8730  0AD9  0022               	movlb	2	; select bank2
  8731  0ADA  083C               	movf	(sprintf@fval+3)^(0+256),w
  8732  0ADB  0021               	movlb	1	; select bank1
  8733  0ADC  00C4               	movwf	(___fladd@a+3)^(0+128)
  8734  0ADD  0022               	movlb	2	; select bank2
  8735  0ADE  083B               	movf	(sprintf@fval+2)^(0+256),w
  8736  0ADF  0021               	movlb	1	; select bank1
  8737  0AE0  00C3               	movwf	(___fladd@a+2)^(0+128)
  8738  0AE1  0022               	movlb	2	; select bank2
  8739  0AE2  083A               	movf	(sprintf@fval+1)^(0+256),w
  8740  0AE3  0021               	movlb	1	; select bank1
  8741  0AE4  00C2               	movwf	(___fladd@a+1)^(0+128)
  8742  0AE5  0022               	movlb	2	; select bank2
  8743  0AE6  0839               	movf	sprintf@fval^(0+256),w
  8744  0AE7  0021               	movlb	1	; select bank1
  8745  0AE8  00C1               	movwf	___fladd@a^(0+128)
  8746  0AE9  3185  25F9  3188   	fcall	___fladd
  8747  0AEC  0021               	movlb	1	; select bank1
  8748  0AED  0840               	movf	(?___fladd+3)^(0+128),w
  8749  0AEE  0022               	movlb	2	; select bank2
  8750  0AEF  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8751  0AF0  0021               	movlb	1	; select bank1
  8752  0AF1  083F               	movf	(?___fladd+2)^(0+128),w
  8753  0AF2  0022               	movlb	2	; select bank2
  8754  0AF3  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8755  0AF4  0021               	movlb	1	; select bank1
  8756  0AF5  083E               	movf	(?___fladd+1)^(0+128),w
  8757  0AF6  0022               	movlb	2	; select bank2
  8758  0AF7  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8759  0AF8  0021               	movlb	1	; select bank1
  8760  0AF9  083D               	movf	?___fladd^(0+128),w
  8761  0AFA  0022               	movlb	2	; select bank2
  8762  0AFB  00B9               	movwf	sprintf@fval^(0+256)
  8763  0AFC                     l7510:	
  8764                           
  8765                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8766  0AFC  0022               	movlb	2	; select bank2
  8767  0AFD  0834               	movf	(sprintf@exp+1)^(0+256),w
  8768  0AFE  3A80               	xorlw	128
  8769  0AFF  00A0               	movwf	??_sprintf^(0+256)
  8770  0B00  3080               	movlw	128
  8771  0B01  0220               	subwf	??_sprintf^(0+256),w
  8772  0B02  1D03               	skipz
  8773  0B03  2B06               	goto	u10295
  8774  0B04  300A               	movlw	10
  8775  0B05  0233               	subwf	sprintf@exp^(0+256),w
  8776  0B06                     u10295:	
  8777  0B06  1803               	skipnc
  8778  0B07  2B34               	goto	l7518
  8779  0B08  0022               	movlb	2	; select bank2
  8780  0B09  083C               	movf	(sprintf@fval+3)^(0+256),w
  8781  0B0A  043B               	iorwf	(sprintf@fval+2)^(0+256),w
  8782  0B0B  043A               	iorwf	(sprintf@fval+1)^(0+256),w
  8783  0B0C  0439               	iorwf	sprintf@fval^(0+256),w
  8784  0B0D  1903               	skipnz
  8785  0B0E  2B91               	goto	l7532
  8786  0B0F  083C               	movf	(sprintf@fval+3)^(0+256),w
  8787  0B10  0021               	movlb	1	; select bank1
  8788  0B11  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8789  0B12  0022               	movlb	2	; select bank2
  8790  0B13  083B               	movf	(sprintf@fval+2)^(0+256),w
  8791  0B14  0021               	movlb	1	; select bank1
  8792  0B15  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8793  0B16  0022               	movlb	2	; select bank2
  8794  0B17  083A               	movf	(sprintf@fval+1)^(0+256),w
  8795  0B18  0021               	movlb	1	; select bank1
  8796  0B19  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8797  0B1A  0022               	movlb	2	; select bank2
  8798  0B1B  0839               	movf	sprintf@fval^(0+256),w
  8799  0B1C  0021               	movlb	1	; select bank1
  8800  0B1D  00B5               	movwf	___fltol@f1^(0+128)
  8801  0B1E  31A0  20C8  3188   	fcall	___fltol
  8802  0B21  0021               	movlb	1	; select bank1
  8803  0B22  0838               	movf	(?___fltol+3)^(0+128),w
  8804  0B23  0437               	iorwf	(?___fltol+2)^(0+128),w
  8805  0B24  0436               	iorwf	(?___fltol+1)^(0+128),w
  8806  0B25  0435               	iorwf	?___fltol^(0+128),w
  8807  0B26  1D03               	skipz
  8808  0B27  2B91               	goto	l7532
  8809  0B28  0022               	movlb	2	; select bank2
  8810  0B29  0834               	movf	(sprintf@exp+1)^(0+256),w
  8811  0B2A  3A80               	xorlw	128
  8812  0B2B  00A0               	movwf	??_sprintf^(0+256)
  8813  0B2C  3080               	movlw	128
  8814  0B2D  0220               	subwf	??_sprintf^(0+256),w
  8815  0B2E  1D03               	skipz
  8816  0B2F  2B32               	goto	u10325
  8817  0B30  3002               	movlw	2
  8818  0B31  0233               	subwf	sprintf@exp^(0+256),w
  8819  0B32                     u10325:	
  8820  0B32  1C03               	skipc
  8821  0B33  2B91               	goto	l7532
  8822  0B34                     l7518:	
  8823                           
  8824                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8825  0B34  0022               	movlb	2	; select bank2
  8826  0B35  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8827  0B36  0021               	movlb	1	; select bank1
  8828  0B37  00D8               	movwf	(___flge@ff1+3)^(0+128)
  8829  0B38  0022               	movlb	2	; select bank2
  8830  0B39  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8831  0B3A  0021               	movlb	1	; select bank1
  8832  0B3B  00D7               	movwf	(___flge@ff1+2)^(0+128)
  8833  0B3C  0022               	movlb	2	; select bank2
  8834  0B3D  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8835  0B3E  0021               	movlb	1	; select bank1
  8836  0B3F  00D6               	movwf	(___flge@ff1+1)^(0+128)
  8837  0B40  0022               	movlb	2	; select bank2
  8838  0B41  082B               	movf	sprintf@tmpval^(0+256),w
  8839  0B42  0021               	movlb	1	; select bank1
  8840  0B43  00D5               	movwf	___flge@ff1^(0+128)
  8841  0B44  3040               	movlw	64
  8842  0B45  00DC               	movwf	(___flge@ff2+3)^(0+128)
  8843  0B46  3089               	movlw	137
  8844  0B47  00DB               	movwf	(___flge@ff2+2)^(0+128)
  8845  0B48  3070               	movlw	112
  8846  0B49  00DA               	movwf	(___flge@ff2+1)^(0+128)
  8847  0B4A  305F               	movlw	95
  8848  0B4B  00D9               	movwf	___flge@ff2^(0+128)
  8849  0B4C  31A3  23F3  3188   	fcall	___flge
  8850  0B4F  1803               	btfsc	3,0
  8851  0B50  2B53               	goto	l7522
  8852                           
  8853                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8854  0B51  30F7               	movlw	247
  8855  0B52  2B54               	goto	L3
  8856  0B53                     l7522:	
  8857                           ;doprnt.c: 1122: }else{
  8858                           
  8859                           
  8860                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8861  0B53  30F8               	movlw	248
  8862  0B54                     L3:	
  8863  0B54  0022               	movlb	2	; select bank2
  8864  0B55  07B3               	addwf	sprintf@exp^(0+256),f
  8865  0B56  30FF               	movlw	255
  8866  0B57  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  8867                           
  8868                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8869  0B58  0833               	movf	sprintf@exp^(0+256),w
  8870  0B59  3180  20A8  3188   	fcall	_scale
  8871  0B5C  0020               	movlb	0	; select bank0
  8872  0B5D  086F               	movf	?_scale+3,w
  8873  0B5E  0022               	movlb	2	; select bank2
  8874  0B5F  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  8875  0B60  0020               	movlb	0	; select bank0
  8876  0B61  086E               	movf	?_scale+2,w
  8877  0B62  0022               	movlb	2	; select bank2
  8878  0B63  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  8879  0B64  0020               	movlb	0	; select bank0
  8880  0B65  086D               	movf	?_scale+1,w
  8881  0B66  0022               	movlb	2	; select bank2
  8882  0B67  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  8883  0B68  0020               	movlb	0	; select bank0
  8884  0B69  086C               	movf	?_scale,w
  8885  0B6A  0022               	movlb	2	; select bank2
  8886  0B6B  00AB               	movwf	sprintf@tmpval^(0+256)
  8887  0B6C  083C               	movf	(sprintf@fval+3)^(0+256),w
  8888  0B6D  00F5               	movwf	__div_to_l_@f1+3
  8889  0B6E  083B               	movf	(sprintf@fval+2)^(0+256),w
  8890  0B6F  00F4               	movwf	__div_to_l_@f1+2
  8891  0B70  083A               	movf	(sprintf@fval+1)^(0+256),w
  8892  0B71  00F3               	movwf	__div_to_l_@f1+1
  8893  0B72  0839               	movf	sprintf@fval^(0+256),w
  8894  0B73  00F2               	movwf	__div_to_l_@f1
  8895  0B74  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  8896  0B75  00F9               	movwf	__div_to_l_@f2+3
  8897  0B76  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  8898  0B77  00F8               	movwf	__div_to_l_@f2+2
  8899  0B78  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  8900  0B79  00F7               	movwf	__div_to_l_@f2+1
  8901  0B7A  082B               	movf	sprintf@tmpval^(0+256),w
  8902  0B7B  00F6               	movwf	__div_to_l_@f2
  8903  0B7C  31A5  2543  3188   	fcall	__div_to_l_
  8904  0B7F  0875               	movf	?__div_to_l_+3,w
  8905  0B80  0022               	movlb	2	; select bank2
  8906  0B81  00B2               	movwf	(sprintf@val+3)^(0+256)
  8907  0B82  0874               	movf	?__div_to_l_+2,w
  8908  0B83  00B1               	movwf	(sprintf@val+2)^(0+256)
  8909  0B84  0873               	movf	?__div_to_l_+1,w
  8910  0B85  00B0               	movwf	(sprintf@val+1)^(0+256)
  8911  0B86  0872               	movf	?__div_to_l_,w
  8912  0B87  00AF               	movwf	sprintf@val^(0+256)
  8913                           
  8914                           ;doprnt.c: 1129: fval = 0.0;
  8915  0B88  3000               	movlw	0
  8916  0B89  00BC               	movwf	(sprintf@fval+3)^(0+256)
  8917  0B8A  3000               	movlw	0
  8918  0B8B  00BB               	movwf	(sprintf@fval+2)^(0+256)
  8919  0B8C  3000               	movlw	0
  8920  0B8D  00BA               	movwf	(sprintf@fval+1)^(0+256)
  8921  0B8E  3000               	movlw	0
  8922  0B8F  00B9               	movwf	sprintf@fval^(0+256)
  8923                           
  8924                           ;doprnt.c: 1130: } else {
  8925  0B90  2BFC               	goto	l7536
  8926  0B91                     l7532:	
  8927                           
  8928                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8929  0B91  0022               	movlb	2	; select bank2
  8930  0B92  083C               	movf	(sprintf@fval+3)^(0+256),w
  8931  0B93  0021               	movlb	1	; select bank1
  8932  0B94  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8933  0B95  0022               	movlb	2	; select bank2
  8934  0B96  083B               	movf	(sprintf@fval+2)^(0+256),w
  8935  0B97  0021               	movlb	1	; select bank1
  8936  0B98  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8937  0B99  0022               	movlb	2	; select bank2
  8938  0B9A  083A               	movf	(sprintf@fval+1)^(0+256),w
  8939  0B9B  0021               	movlb	1	; select bank1
  8940  0B9C  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8941  0B9D  0022               	movlb	2	; select bank2
  8942  0B9E  0839               	movf	sprintf@fval^(0+256),w
  8943  0B9F  0021               	movlb	1	; select bank1
  8944  0BA0  00B5               	movwf	___fltol@f1^(0+128)
  8945  0BA1  31A0  20C8  3188   	fcall	___fltol
  8946  0BA4  0021               	movlb	1	; select bank1
  8947  0BA5  0838               	movf	(?___fltol+3)^(0+128),w
  8948  0BA6  0022               	movlb	2	; select bank2
  8949  0BA7  00B2               	movwf	(sprintf@val+3)^(0+256)
  8950  0BA8  0021               	movlb	1	; select bank1
  8951  0BA9  0837               	movf	(?___fltol+2)^(0+128),w
  8952  0BAA  0022               	movlb	2	; select bank2
  8953  0BAB  00B1               	movwf	(sprintf@val+2)^(0+256)
  8954  0BAC  0021               	movlb	1	; select bank1
  8955  0BAD  0836               	movf	(?___fltol+1)^(0+128),w
  8956  0BAE  0022               	movlb	2	; select bank2
  8957  0BAF  00B0               	movwf	(sprintf@val+1)^(0+256)
  8958  0BB0  0021               	movlb	1	; select bank1
  8959  0BB1  0835               	movf	?___fltol^(0+128),w
  8960  0BB2  0022               	movlb	2	; select bank2
  8961  0BB3  00AF               	movwf	sprintf@val^(0+256)
  8962                           
  8963                           ;doprnt.c: 1132: fval -= (double)val;
  8964  0BB4  0832               	movf	(sprintf@val+3)^(0+256),w
  8965  0BB5  0020               	movlb	0	; select bank0
  8966  0BB6  00B1               	movwf	___xxtofl@val+3
  8967  0BB7  0022               	movlb	2	; select bank2
  8968  0BB8  0831               	movf	(sprintf@val+2)^(0+256),w
  8969  0BB9  0020               	movlb	0	; select bank0
  8970  0BBA  00B0               	movwf	___xxtofl@val+2
  8971  0BBB  0022               	movlb	2	; select bank2
  8972  0BBC  0830               	movf	(sprintf@val+1)^(0+256),w
  8973  0BBD  0020               	movlb	0	; select bank0
  8974  0BBE  00AF               	movwf	___xxtofl@val+1
  8975  0BBF  0022               	movlb	2	; select bank2
  8976  0BC0  082F               	movf	sprintf@val^(0+256),w
  8977  0BC1  0020               	movlb	0	; select bank0
  8978  0BC2  00AE               	movwf	___xxtofl@val
  8979  0BC3  3000               	movlw	0
  8980  0BC4  31A3  235D  3188   	fcall	___xxtofl
  8981  0BC7  0020               	movlb	0	; select bank0
  8982  0BC8  0831               	movf	?___xxtofl+3,w
  8983  0BC9  0021               	movlb	1	; select bank1
  8984  0BCA  00D8               	movwf	(___flsub@a+3)^(0+128)
  8985  0BCB  0020               	movlb	0	; select bank0
  8986  0BCC  0830               	movf	?___xxtofl+2,w
  8987  0BCD  0021               	movlb	1	; select bank1
  8988  0BCE  00D7               	movwf	(___flsub@a+2)^(0+128)
  8989  0BCF  0020               	movlb	0	; select bank0
  8990  0BD0  082F               	movf	?___xxtofl+1,w
  8991  0BD1  0021               	movlb	1	; select bank1
  8992  0BD2  00D6               	movwf	(___flsub@a+1)^(0+128)
  8993  0BD3  0020               	movlb	0	; select bank0
  8994  0BD4  082E               	movf	?___xxtofl,w
  8995  0BD5  0021               	movlb	1	; select bank1
  8996  0BD6  00D5               	movwf	___flsub@a^(0+128)
  8997  0BD7  0022               	movlb	2	; select bank2
  8998  0BD8  083C               	movf	(sprintf@fval+3)^(0+256),w
  8999  0BD9  0021               	movlb	1	; select bank1
  9000  0BDA  00DC               	movwf	(___flsub@b+3)^(0+128)
  9001  0BDB  0022               	movlb	2	; select bank2
  9002  0BDC  083B               	movf	(sprintf@fval+2)^(0+256),w
  9003  0BDD  0021               	movlb	1	; select bank1
  9004  0BDE  00DB               	movwf	(___flsub@b+2)^(0+128)
  9005  0BDF  0022               	movlb	2	; select bank2
  9006  0BE0  083A               	movf	(sprintf@fval+1)^(0+256),w
  9007  0BE1  0021               	movlb	1	; select bank1
  9008  0BE2  00DA               	movwf	(___flsub@b+1)^(0+128)
  9009  0BE3  0022               	movlb	2	; select bank2
  9010  0BE4  0839               	movf	sprintf@fval^(0+256),w
  9011  0BE5  0021               	movlb	1	; select bank1
  9012  0BE6  00D9               	movwf	___flsub@b^(0+128)
  9013  0BE7  319C  2400  3188   	fcall	___flsub
  9014  0BEA  0021               	movlb	1	; select bank1
  9015  0BEB  0858               	movf	(?___flsub+3)^(0+128),w
  9016  0BEC  0022               	movlb	2	; select bank2
  9017  0BED  00BC               	movwf	(sprintf@fval+3)^(0+256)
  9018  0BEE  0021               	movlb	1	; select bank1
  9019  0BEF  0857               	movf	(?___flsub+2)^(0+128),w
  9020  0BF0  0022               	movlb	2	; select bank2
  9021  0BF1  00BB               	movwf	(sprintf@fval+2)^(0+256)
  9022  0BF2  0021               	movlb	1	; select bank1
  9023  0BF3  0856               	movf	(?___flsub+1)^(0+128),w
  9024  0BF4  0022               	movlb	2	; select bank2
  9025  0BF5  00BA               	movwf	(sprintf@fval+1)^(0+256)
  9026  0BF6  0021               	movlb	1	; select bank1
  9027  0BF7  0855               	movf	?___flsub^(0+128),w
  9028  0BF8  0022               	movlb	2	; select bank2
  9029  0BF9  00B9               	movwf	sprintf@fval^(0+256)
  9030                           
  9031                           ;doprnt.c: 1133: exp = 0;
  9032  0BFA  01B3               	clrf	sprintf@exp^(0+256)
  9033  0BFB  01B4               	clrf	(sprintf@exp+1)^(0+256)
  9034  0BFC                     l7536:	
  9035                           
  9036                           ;doprnt.c: 1134: }
  9037                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9038  0BFC  01C0               	clrf	sprintf@c^(0+256)
  9039  0BFD  0AC0               	incf	sprintf@c^(0+256),f
  9040  0BFE  300A               	movlw	10
  9041  0BFF  0640               	xorwf	sprintf@c^(0+256),w
  9042  0C00  1903               	btfsc	3,2
  9043  0C01  2C2F               	goto	l7548
  9044  0C02                     l7542:	
  9045                           
  9046                           ;doprnt.c: 1137: if(val < dpowers[c])
  9047  0C02  0840               	movf	sprintf@c^(0+256),w
  9048  0C03  00A0               	movwf	??_sprintf^(0+256)
  9049  0C04  01A1               	clrf	(??_sprintf^(0+256)+1)
  9050  0C05  35A0               	lslf	??_sprintf^(0+256),f
  9051  0C06  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9052  0C07  35A0               	lslf	??_sprintf^(0+256),f
  9053  0C08  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9054  0C09  309A               	movlw	low (_dpowers| (0+32768))
  9055  0C0A  0720               	addwf	??_sprintf^(0+256),w
  9056  0C0B  0084               	movwf	4
  9057  0C0C  30B0               	movlw	high (_dpowers| (0+32768))
  9058  0C0D  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9059  0C0E  0085               	movwf	5
  9060  0C0F  3F00               	moviw [0]fsr0
  9061  0C10  00A2               	movwf	(??_sprintf+2)^(0+256)
  9062  0C11  3F01               	moviw [1]fsr0
  9063  0C12  00A3               	movwf	((??_sprintf+2)^(0+256)+1)
  9064  0C13  3F02               	moviw [2]fsr0
  9065  0C14  00A4               	movwf	((??_sprintf+2)^(0+256)+2)
  9066  0C15  3F03               	moviw [3]fsr0
  9067  0C16  00A5               	movwf	((??_sprintf+2)^(0+256)+3)
  9068  0C17  0825               	movf	(??_sprintf+5)^(0+256),w
  9069  0C18  0232               	subwf	(sprintf@val+3)^(0+256),w
  9070  0C19  1D03               	skipz
  9071  0C1A  2C25               	goto	u10355
  9072  0C1B  0824               	movf	(??_sprintf+4)^(0+256),w
  9073  0C1C  0231               	subwf	(sprintf@val+2)^(0+256),w
  9074  0C1D  1D03               	skipz
  9075  0C1E  2C25               	goto	u10355
  9076  0C1F  0823               	movf	(??_sprintf+3)^(0+256),w
  9077  0C20  0230               	subwf	(sprintf@val+1)^(0+256),w
  9078  0C21  1D03               	skipz
  9079  0C22  2C25               	goto	u10355
  9080  0C23  0822               	movf	(??_sprintf+2)^(0+256),w
  9081  0C24  022F               	subwf	sprintf@val^(0+256),w
  9082  0C25                     u10355:	
  9083  0C25  1C03               	btfss	3,0
  9084  0C26  2C2F               	goto	l7548
  9085                           
  9086                           ;doprnt.c: 1138: break;
  9087  0C27  3001               	movlw	1
  9088  0C28  00A0               	movwf	??_sprintf^(0+256)
  9089  0C29  0820               	movf	??_sprintf^(0+256),w
  9090  0C2A  07C0               	addwf	sprintf@c^(0+256),f
  9091  0C2B  300A               	movlw	10
  9092  0C2C  0640               	xorwf	sprintf@c^(0+256),w
  9093  0C2D  1D03               	btfss	3,2
  9094  0C2E  2C02               	goto	l7542
  9095  0C2F                     l7548:	
  9096                           
  9097                           ;doprnt.c: 1142: width -= prec + c + exp;
  9098  0C2F  0840               	movf	sprintf@c^(0+256),w
  9099  0C30  00A0               	movwf	??_sprintf^(0+256)
  9100  0C31  01A1               	clrf	(??_sprintf^(0+256)+1)
  9101  0C32  1BA0               	btfsc	??_sprintf^(0+256),7
  9102  0C33  03A1               	decf	(??_sprintf^(0+256)+1),f
  9103  0C34  083D               	movf	sprintf@prec^(0+256),w
  9104  0C35  0720               	addwf	??_sprintf^(0+256),w
  9105  0C36  00A2               	movwf	(??_sprintf+2)^(0+256)
  9106  0C37  083E               	movf	(sprintf@prec+1)^(0+256),w
  9107  0C38  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9108  0C39  00A3               	movwf	(??_sprintf+3)^(0+256)
  9109  0C3A  0833               	movf	sprintf@exp^(0+256),w
  9110  0C3B  0722               	addwf	(??_sprintf+2)^(0+256),w
  9111  0C3C  00A4               	movwf	(??_sprintf+4)^(0+256)
  9112  0C3D  0834               	movf	(sprintf@exp+1)^(0+256),w
  9113  0C3E  3D23               	addwfc	(??_sprintf+3)^(0+256),w
  9114  0C3F  00A5               	movwf	(??_sprintf+5)^(0+256)
  9115  0C40  0824               	movf	(??_sprintf+4)^(0+256),w
  9116  0C41  02B7               	subwf	sprintf@width^(0+256),f
  9117  0C42  0825               	movf	(??_sprintf+5)^(0+256),w
  9118  0C43  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
  9119                           
  9120                           ;doprnt.c: 1143: if(
  9121                           ;doprnt.c: 1147: prec)
  9122  0C44  083D               	movf	sprintf@prec^(0+256),w
  9123  0C45  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9124  0C46  1903               	btfsc	3,2
  9125  0C47  2C4C               	goto	l7552
  9126                           
  9127                           ;doprnt.c: 1148: width--;
  9128  0C48  30FF               	movlw	255
  9129  0C49  07B7               	addwf	sprintf@width^(0+256),f
  9130  0C4A  30FF               	movlw	255
  9131  0C4B  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9132  0C4C                     l7552:	
  9133                           
  9134                           ;doprnt.c: 1149: if(flag & 0x03)
  9135  0C4C  3003               	movlw	3
  9136  0C4D  0535               	andwf	sprintf@flag^(0+256),w
  9137  0C4E  00A0               	movwf	??_sprintf^(0+256)
  9138  0C4F  3000               	movlw	0
  9139  0C50  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9140  0C51  00A1               	movwf	(??_sprintf+1)^(0+256)
  9141  0C52  0820               	movf	??_sprintf^(0+256),w
  9142  0C53  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9143  0C54  1903               	btfsc	3,2
  9144  0C55  2C5A               	goto	l7556
  9145                           
  9146                           ;doprnt.c: 1150: width--;
  9147  0C56  30FF               	movlw	255
  9148  0C57  07B7               	addwf	sprintf@width^(0+256),f
  9149  0C58  30FF               	movlw	255
  9150  0C59  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9151  0C5A                     l7556:	
  9152                           
  9153                           ;doprnt.c: 1153: if(flag & 0x04) {
  9154  0C5A  1D35               	btfss	sprintf@flag^(0+256),2
  9155  0C5B  2CA0               	goto	l7578
  9156                           
  9157                           ;doprnt.c: 1157: if(flag & 0x03)
  9158  0C5C  3003               	movlw	3
  9159  0C5D  0535               	andwf	sprintf@flag^(0+256),w
  9160  0C5E  00A0               	movwf	??_sprintf^(0+256)
  9161  0C5F  3000               	movlw	0
  9162  0C60  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9163  0C61  00A1               	movwf	(??_sprintf+1)^(0+256)
  9164  0C62  0820               	movf	??_sprintf^(0+256),w
  9165  0C63  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9166  0C64  1903               	btfsc	3,2
  9167  0C65  2C72               	goto	l7570
  9168                           
  9169                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  9170  0C66  302D               	movlw	45
  9171  0C67  00A0               	movwf	??_sprintf^(0+256)
  9172  0C68  083F               	movf	sprintf@sp^(0+256),w
  9173  0C69  0086               	movwf	6
  9174  0C6A  3002               	movlw	2	; select bank4/5
  9175  0C6B  0087               	movwf	7
  9176  0C6C  0820               	movf	??_sprintf^(0+256),w
  9177  0C6D  0081               	movwf	1
  9178  0C6E  3001               	movlw	1
  9179  0C6F  00A0               	movwf	??_sprintf^(0+256)
  9180  0C70  0820               	movf	??_sprintf^(0+256),w
  9181  0C71  07BF               	addwf	sprintf@sp^(0+256),f
  9182  0C72                     l7570:	
  9183                           ;doprnt.c: 1168: while(width > 0) {
  9184                           
  9185  0C72  0838               	movf	(sprintf@width+1)^(0+256),w
  9186  0C73  3A80               	xorlw	128
  9187  0C74  00A0               	movwf	??_sprintf^(0+256)
  9188  0C75  3080               	movlw	128
  9189  0C76  0220               	subwf	??_sprintf^(0+256),w
  9190  0C77  1D03               	skipz
  9191  0C78  2C7B               	goto	u10415
  9192  0C79  3001               	movlw	1
  9193  0C7A  0237               	subwf	sprintf@width^(0+256),w
  9194  0C7B                     u10415:	
  9195  0C7B  1C03               	btfss	3,0
  9196  0C7C  2CC3               	goto	l7594
  9197                           
  9198                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  9199  0C7D  3030               	movlw	48
  9200  0C7E  0022               	movlb	2	; select bank2
  9201  0C7F  00A0               	movwf	??_sprintf^(0+256)
  9202  0C80  083F               	movf	sprintf@sp^(0+256),w
  9203  0C81  0086               	movwf	6
  9204  0C82  3002               	movlw	2	; select bank4/5
  9205  0C83  0087               	movwf	7
  9206  0C84  0820               	movf	??_sprintf^(0+256),w
  9207  0C85  0081               	movwf	1
  9208  0C86  3001               	movlw	1
  9209  0C87  00A0               	movwf	??_sprintf^(0+256)
  9210  0C88  0820               	movf	??_sprintf^(0+256),w
  9211  0C89  07BF               	addwf	sprintf@sp^(0+256),f
  9212                           
  9213                           ;doprnt.c: 1170: width--;
  9214  0C8A  30FF               	movlw	255
  9215  0C8B  07B7               	addwf	sprintf@width^(0+256),f
  9216  0C8C  30FF               	movlw	255
  9217  0C8D  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9218  0C8E  2C72               	goto	l7570
  9219  0C8F                     l7572:	
  9220                           ;doprnt.c: 1175: {
  9221                           ;doprnt.c: 1180: while(width > 0) {
  9222                           
  9223                           ;doprnt.c: 1171: }
  9224                           ;doprnt.c: 1173: } else
  9225                           
  9226                           
  9227                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  9228  0C8F  3020               	movlw	32
  9229  0C90  0022               	movlb	2	; select bank2
  9230  0C91  00A0               	movwf	??_sprintf^(0+256)
  9231  0C92  083F               	movf	sprintf@sp^(0+256),w
  9232  0C93  0086               	movwf	6
  9233  0C94  3002               	movlw	2	; select bank4/5
  9234  0C95  0087               	movwf	7
  9235  0C96  0820               	movf	??_sprintf^(0+256),w
  9236  0C97  0081               	movwf	1
  9237  0C98  3001               	movlw	1
  9238  0C99  00A0               	movwf	??_sprintf^(0+256)
  9239  0C9A  0820               	movf	??_sprintf^(0+256),w
  9240  0C9B  07BF               	addwf	sprintf@sp^(0+256),f
  9241                           
  9242                           ;doprnt.c: 1182: width--;
  9243  0C9C  30FF               	movlw	255
  9244  0C9D  07B7               	addwf	sprintf@width^(0+256),f
  9245  0C9E  30FF               	movlw	255
  9246  0C9F  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9247  0CA0                     l7578:	
  9248  0CA0  0022               	movlb	2	; select bank2
  9249  0CA1  0838               	movf	(sprintf@width+1)^(0+256),w
  9250  0CA2  3A80               	xorlw	128
  9251  0CA3  00A0               	movwf	??_sprintf^(0+256)
  9252  0CA4  3080               	movlw	128
  9253  0CA5  0220               	subwf	??_sprintf^(0+256),w
  9254  0CA6  1D03               	skipz
  9255  0CA7  2CAA               	goto	u10425
  9256  0CA8  3001               	movlw	1
  9257  0CA9  0237               	subwf	sprintf@width^(0+256),w
  9258  0CAA                     u10425:	
  9259  0CAA  1803               	skipnc
  9260  0CAB  2C8F               	goto	l7572
  9261                           
  9262                           ;doprnt.c: 1183: }
  9263                           ;doprnt.c: 1188: if(flag & 0x03)
  9264  0CAC  3003               	movlw	3
  9265  0CAD  0022               	movlb	2	; select bank2
  9266  0CAE  0535               	andwf	sprintf@flag^(0+256),w
  9267  0CAF  00A0               	movwf	??_sprintf^(0+256)
  9268  0CB0  3000               	movlw	0
  9269  0CB1  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9270  0CB2  00A1               	movwf	(??_sprintf+1)^(0+256)
  9271  0CB3  0820               	movf	??_sprintf^(0+256),w
  9272  0CB4  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9273  0CB5  1903               	btfsc	3,2
  9274  0CB6  2CC3               	goto	l7594
  9275                           
  9276                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9277  0CB7  302D               	movlw	45
  9278  0CB8                     L7:	
  9279  0CB8  00A0               	movwf	??_sprintf^(0+256)
  9280  0CB9  083F               	movf	sprintf@sp^(0+256),w
  9281  0CBA  0086               	movwf	6
  9282  0CBB  3002               	movlw	2	; select bank4/5
  9283  0CBC  0087               	movwf	7
  9284  0CBD  0820               	movf	??_sprintf^(0+256),w
  9285  0CBE  0081               	movwf	1
  9286  0CBF  3001               	movlw	1
  9287  0CC0  00A0               	movwf	??_sprintf^(0+256)
  9288  0CC1  0820               	movf	??_sprintf^(0+256),w
  9289  0CC2  07BF               	addwf	sprintf@sp^(0+256),f
  9290  0CC3                     l7594:	
  9291  0CC3  30FF               	movlw	255
  9292  0CC4  0022               	movlb	2	; select bank2
  9293  0CC5  00A0               	movwf	??_sprintf^(0+256)
  9294  0CC6  0820               	movf	??_sprintf^(0+256),w
  9295  0CC7  07C0               	addwf	sprintf@c^(0+256),f
  9296  0CC8  0A40               	incf	sprintf@c^(0+256),w
  9297  0CC9  1903               	btfsc	3,2
  9298  0CCA  2D34               	goto	l7602
  9299                           
  9300                           ;doprnt.c: 1200: {
  9301                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9302                           
  9303                           ;doprnt.c: 1195: }
  9304                           ;doprnt.c: 1196: while(c--) {
  9305  0CCB  0840               	movf	sprintf@c^(0+256),w
  9306  0CCC  00A0               	movwf	??_sprintf^(0+256)
  9307  0CCD  01A1               	clrf	(??_sprintf^(0+256)+1)
  9308  0CCE  35A0               	lslf	??_sprintf^(0+256),f
  9309  0CCF  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9310  0CD0  35A0               	lslf	??_sprintf^(0+256),f
  9311  0CD1  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9312  0CD2  309A               	movlw	low (_dpowers| (0+32768))
  9313  0CD3  0720               	addwf	??_sprintf^(0+256),w
  9314  0CD4  0084               	movwf	4
  9315  0CD5  30B0               	movlw	high (_dpowers| (0+32768))
  9316  0CD6  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9317  0CD7  0085               	movwf	5
  9318  0CD8  3F00               	moviw [0]fsr0
  9319  0CD9  00F2               	movwf	___lldiv@divisor
  9320  0CDA  3F01               	moviw [1]fsr0
  9321  0CDB  00F3               	movwf	___lldiv@divisor+1
  9322  0CDC  3F02               	moviw [2]fsr0
  9323  0CDD  00F4               	movwf	___lldiv@divisor+2
  9324  0CDE  3F03               	moviw [3]fsr0
  9325  0CDF  00F5               	movwf	___lldiv@divisor+3
  9326  0CE0  0832               	movf	(sprintf@val+3)^(0+256),w
  9327  0CE1  00F9               	movwf	___lldiv@dividend+3
  9328  0CE2  0831               	movf	(sprintf@val+2)^(0+256),w
  9329  0CE3  00F8               	movwf	___lldiv@dividend+2
  9330  0CE4  0830               	movf	(sprintf@val+1)^(0+256),w
  9331  0CE5  00F7               	movwf	___lldiv@dividend+1
  9332  0CE6  082F               	movf	sprintf@val^(0+256),w
  9333  0CE7  00F6               	movwf	___lldiv@dividend
  9334  0CE8  31AF  2704  3188   	fcall	___lldiv
  9335  0CEB  0875               	movf	?___lldiv+3,w
  9336  0CEC  0022               	movlb	2	; select bank2
  9337  0CED  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9338  0CEE  0874               	movf	?___lldiv+2,w
  9339  0CEF  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9340  0CF0  0873               	movf	?___lldiv+1,w
  9341  0CF1  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9342  0CF2  0872               	movf	?___lldiv,w
  9343  0CF3  00AB               	movwf	sprintf@tmpval^(0+256)
  9344                           
  9345                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9346  0CF4  3000               	movlw	0
  9347  0CF5  0020               	movlb	0	; select bank0
  9348  0CF6  00A9               	movwf	___llmod@divisor+3
  9349  0CF7  3000               	movlw	0
  9350  0CF8  00A8               	movwf	___llmod@divisor+2
  9351  0CF9  3000               	movlw	0
  9352  0CFA  00A7               	movwf	___llmod@divisor+1
  9353  0CFB  300A               	movlw	10
  9354  0CFC  00A6               	movwf	___llmod@divisor
  9355  0CFD  0022               	movlb	2	; select bank2
  9356  0CFE  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  9357  0CFF  0020               	movlb	0	; select bank0
  9358  0D00  00AD               	movwf	___llmod@dividend+3
  9359  0D01  0022               	movlb	2	; select bank2
  9360  0D02  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  9361  0D03  0020               	movlb	0	; select bank0
  9362  0D04  00AC               	movwf	___llmod@dividend+2
  9363  0D05  0022               	movlb	2	; select bank2
  9364  0D06  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  9365  0D07  0020               	movlb	0	; select bank0
  9366  0D08  00AB               	movwf	___llmod@dividend+1
  9367  0D09  0022               	movlb	2	; select bank2
  9368  0D0A  082B               	movf	sprintf@tmpval^(0+256),w
  9369  0D0B  0020               	movlb	0	; select bank0
  9370  0D0C  00AA               	movwf	___llmod@dividend
  9371  0D0D  31AD  2589  3188   	fcall	___llmod
  9372  0D10  0020               	movlb	0	; select bank0
  9373  0D11  0829               	movf	?___llmod+3,w
  9374  0D12  0022               	movlb	2	; select bank2
  9375  0D13  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9376  0D14  0020               	movlb	0	; select bank0
  9377  0D15  0828               	movf	?___llmod+2,w
  9378  0D16  0022               	movlb	2	; select bank2
  9379  0D17  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9380  0D18  0020               	movlb	0	; select bank0
  9381  0D19  0827               	movf	?___llmod+1,w
  9382  0D1A  0022               	movlb	2	; select bank2
  9383  0D1B  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9384  0D1C  0020               	movlb	0	; select bank0
  9385  0D1D  0826               	movf	?___llmod,w
  9386  0D1E  0022               	movlb	2	; select bank2
  9387  0D1F  00AB               	movwf	sprintf@tmpval^(0+256)
  9388                           
  9389                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9390  0D20  082B               	movf	sprintf@tmpval^(0+256),w
  9391  0D21  3E30               	addlw	48
  9392  0D22  2CB8               	goto	L7
  9393  0D23                     l7596:	
  9394                           ;doprnt.c: 1204: }
  9395                           ;doprnt.c: 1206: }
  9396                           ;doprnt.c: 1207: while(exp > 0) {
  9397                           
  9398                           
  9399                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9400  0D23  3030               	movlw	48
  9401  0D24  0022               	movlb	2	; select bank2
  9402  0D25  00A0               	movwf	??_sprintf^(0+256)
  9403  0D26  083F               	movf	sprintf@sp^(0+256),w
  9404  0D27  0086               	movwf	6
  9405  0D28  3002               	movlw	2	; select bank4/5
  9406  0D29  0087               	movwf	7
  9407  0D2A  0820               	movf	??_sprintf^(0+256),w
  9408  0D2B  0081               	movwf	1
  9409  0D2C  3001               	movlw	1
  9410  0D2D  00A0               	movwf	??_sprintf^(0+256)
  9411  0D2E  0820               	movf	??_sprintf^(0+256),w
  9412  0D2F  07BF               	addwf	sprintf@sp^(0+256),f
  9413                           
  9414                           ;doprnt.c: 1209: exp--;
  9415  0D30  30FF               	movlw	255
  9416  0D31  07B3               	addwf	sprintf@exp^(0+256),f
  9417  0D32  30FF               	movlw	255
  9418  0D33  3DB4               	addwfc	(sprintf@exp+1)^(0+256),f
  9419  0D34                     l7602:	
  9420  0D34  0834               	movf	(sprintf@exp+1)^(0+256),w
  9421  0D35  3A80               	xorlw	128
  9422  0D36  00A0               	movwf	??_sprintf^(0+256)
  9423  0D37  3080               	movlw	128
  9424  0D38  0220               	subwf	??_sprintf^(0+256),w
  9425  0D39  1D03               	skipz
  9426  0D3A  2D3D               	goto	u10455
  9427  0D3B  3001               	movlw	1
  9428  0D3C  0233               	subwf	sprintf@exp^(0+256),w
  9429  0D3D                     u10455:	
  9430  0D3D  1803               	skipnc
  9431  0D3E  2D23               	goto	l7596
  9432                           
  9433                           ;doprnt.c: 1210: }
  9434                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9435  0D3F  0022               	movlb	2	; select bank2
  9436  0D40  083E               	movf	(sprintf@prec+1)^(0+256),w
  9437  0D41  3A80               	xorlw	128
  9438  0D42  00A0               	movwf	??_sprintf^(0+256)
  9439  0D43  3080               	movlw	128
  9440  0D44  0220               	subwf	??_sprintf^(0+256),w
  9441  0D45  1D03               	skipz
  9442  0D46  2D49               	goto	u10465
  9443  0D47  3009               	movlw	9
  9444  0D48  023D               	subwf	sprintf@prec^(0+256),w
  9445  0D49                     u10465:	
  9446  0D49  1C03               	skipc
  9447  0D4A  2D4E               	goto	l7608
  9448                           
  9449                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9450  0D4B  3008               	movlw	8
  9451  0D4C  0022               	movlb	2	; select bank2
  9452  0D4D  2D50               	goto	L5
  9453  0D4E                     l7608:	
  9454                           
  9455                           ;doprnt.c: 1213: else
  9456                           ;doprnt.c: 1214: c = prec;
  9457  0D4E  0022               	movlb	2	; select bank2
  9458  0D4F  083D               	movf	sprintf@prec^(0+256),w
  9459  0D50                     L5:	
  9460  0D50  00A0               	movwf	??_sprintf^(0+256)
  9461  0D51  0820               	movf	??_sprintf^(0+256),w
  9462  0D52  00C0               	movwf	sprintf@c^(0+256)
  9463                           
  9464                           ;doprnt.c: 1215: prec -= c;
  9465  0D53  0840               	movf	sprintf@c^(0+256),w
  9466  0D54  00A0               	movwf	??_sprintf^(0+256)
  9467  0D55  01A1               	clrf	(??_sprintf^(0+256)+1)
  9468  0D56  1BA0               	btfsc	??_sprintf^(0+256),7
  9469  0D57  03A1               	decf	(??_sprintf^(0+256)+1),f
  9470  0D58  0820               	movf	??_sprintf^(0+256),w
  9471  0D59  02BD               	subwf	sprintf@prec^(0+256),f
  9472  0D5A  0821               	movf	(??_sprintf+1)^(0+256),w
  9473  0D5B  3BBE               	subwfb	(sprintf@prec+1)^(0+256),f
  9474                           
  9475                           ;doprnt.c: 1219: if(c)
  9476  0D5C  0840               	movf	sprintf@c^(0+256),w
  9477  0D5D  1903               	btfsc	3,2
  9478  0D5E  2D6B               	goto	l7616
  9479                           
  9480                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9481  0D5F  302E               	movlw	46
  9482  0D60  00A0               	movwf	??_sprintf^(0+256)
  9483  0D61  083F               	movf	sprintf@sp^(0+256),w
  9484  0D62  0086               	movwf	6
  9485  0D63  3002               	movlw	2	; select bank4/5
  9486  0D64  0087               	movwf	7
  9487  0D65  0820               	movf	??_sprintf^(0+256),w
  9488  0D66  0081               	movwf	1
  9489  0D67  3001               	movlw	1
  9490  0D68  00A0               	movwf	??_sprintf^(0+256)
  9491  0D69  0820               	movf	??_sprintf^(0+256),w
  9492  0D6A  07BF               	addwf	sprintf@sp^(0+256),f
  9493  0D6B                     l7616:	
  9494                           
  9495                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9496  0D6B  0840               	movf	sprintf@c^(0+256),w
  9497  0D6C  3180  20A8  3188   	fcall	_scale
  9498  0D6F  0020               	movlb	0	; select bank0
  9499  0D70  086F               	movf	?_scale+3,w
  9500  0D71  0022               	movlb	2	; select bank2
  9501  0D72  00A9               	movwf	(_sprintf$2170+3)^(0+256)
  9502  0D73  0020               	movlb	0	; select bank0
  9503  0D74  086E               	movf	?_scale+2,w
  9504  0D75  0022               	movlb	2	; select bank2
  9505  0D76  00A8               	movwf	(_sprintf$2170+2)^(0+256)
  9506  0D77  0020               	movlb	0	; select bank0
  9507  0D78  086D               	movf	?_scale+1,w
  9508  0D79  0022               	movlb	2	; select bank2
  9509  0D7A  00A7               	movwf	(_sprintf$2170+1)^(0+256)
  9510  0D7B  0020               	movlb	0	; select bank0
  9511  0D7C  086C               	movf	?_scale,w
  9512  0D7D  0022               	movlb	2	; select bank2
  9513  0D7E  00A6               	movwf	_sprintf$2170^(0+256)
  9514                           
  9515                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9516  0D7F  0829               	movf	(_sprintf$2170+3)^(0+256),w
  9517  0D80  0020               	movlb	0	; select bank0
  9518  0D81  00D9               	movwf	___flmul@a+3
  9519  0D82  0022               	movlb	2	; select bank2
  9520  0D83  0828               	movf	(_sprintf$2170+2)^(0+256),w
  9521  0D84  0020               	movlb	0	; select bank0
  9522  0D85  00D8               	movwf	___flmul@a+2
  9523  0D86  0022               	movlb	2	; select bank2
  9524  0D87  0827               	movf	(_sprintf$2170+1)^(0+256),w
  9525  0D88  0020               	movlb	0	; select bank0
  9526  0D89  00D7               	movwf	___flmul@a+1
  9527  0D8A  0022               	movlb	2	; select bank2
  9528  0D8B  0826               	movf	_sprintf$2170^(0+256),w
  9529  0D8C  0020               	movlb	0	; select bank0
  9530  0D8D  00D6               	movwf	___flmul@a
  9531  0D8E  0022               	movlb	2	; select bank2
  9532  0D8F  083C               	movf	(sprintf@fval+3)^(0+256),w
  9533  0D90  0020               	movlb	0	; select bank0
  9534  0D91  00D5               	movwf	___flmul@b+3
  9535  0D92  0022               	movlb	2	; select bank2
  9536  0D93  083B               	movf	(sprintf@fval+2)^(0+256),w
  9537  0D94  0020               	movlb	0	; select bank0
  9538  0D95  00D4               	movwf	___flmul@b+2
  9539  0D96  0022               	movlb	2	; select bank2
  9540  0D97  083A               	movf	(sprintf@fval+1)^(0+256),w
  9541  0D98  0020               	movlb	0	; select bank0
  9542  0D99  00D3               	movwf	___flmul@b+1
  9543  0D9A  0022               	movlb	2	; select bank2
  9544  0D9B  0839               	movf	sprintf@fval^(0+256),w
  9545  0D9C  0020               	movlb	0	; select bank0
  9546  0D9D  00D2               	movwf	___flmul@b
  9547  0D9E  3183  23CD  3188   	fcall	___flmul
  9548  0DA1  0020               	movlb	0	; select bank0
  9549  0DA2  0855               	movf	?___flmul+3,w
  9550  0DA3  0021               	movlb	1	; select bank1
  9551  0DA4  00B8               	movwf	(___fltol@f1+3)^(0+128)
  9552  0DA5  0020               	movlb	0	; select bank0
  9553  0DA6  0854               	movf	?___flmul+2,w
  9554  0DA7  0021               	movlb	1	; select bank1
  9555  0DA8  00B7               	movwf	(___fltol@f1+2)^(0+128)
  9556  0DA9  0020               	movlb	0	; select bank0
  9557  0DAA  0853               	movf	?___flmul+1,w
  9558  0DAB  0021               	movlb	1	; select bank1
  9559  0DAC  00B6               	movwf	(___fltol@f1+1)^(0+128)
  9560  0DAD  0020               	movlb	0	; select bank0
  9561  0DAE  0852               	movf	?___flmul,w
  9562  0DAF  0021               	movlb	1	; select bank1
  9563  0DB0  00B5               	movwf	___fltol@f1^(0+128)
  9564  0DB1  31A0  20C8  3188   	fcall	___fltol
  9565  0DB4  0021               	movlb	1	; select bank1
  9566  0DB5  0838               	movf	(?___fltol+3)^(0+128),w
  9567  0DB6  0022               	movlb	2	; select bank2
  9568  0DB7  00B2               	movwf	(sprintf@val+3)^(0+256)
  9569  0DB8  0021               	movlb	1	; select bank1
  9570  0DB9  0837               	movf	(?___fltol+2)^(0+128),w
  9571  0DBA  0022               	movlb	2	; select bank2
  9572  0DBB  00B1               	movwf	(sprintf@val+2)^(0+256)
  9573  0DBC  0021               	movlb	1	; select bank1
  9574  0DBD  0836               	movf	(?___fltol+1)^(0+128),w
  9575  0DBE  0022               	movlb	2	; select bank2
  9576  0DBF  00B0               	movwf	(sprintf@val+1)^(0+256)
  9577  0DC0  0021               	movlb	1	; select bank1
  9578  0DC1  0835               	movf	?___fltol^(0+128),w
  9579  0DC2                     L6:	
  9580  0DC2  0022               	movlb	2	; select bank2
  9581  0DC3  00AF               	movwf	sprintf@val^(0+256)
  9582  0DC4  30FF               	movlw	255
  9583  0DC5  00A0               	movwf	??_sprintf^(0+256)
  9584  0DC6  0820               	movf	??_sprintf^(0+256),w
  9585  0DC7  07C0               	addwf	sprintf@c^(0+256),f
  9586  0DC8  0A40               	incf	sprintf@c^(0+256),w
  9587  0DC9  1903               	btfsc	3,2
  9588  0DCA  2E75               	goto	l7638
  9589                           
  9590                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9591                           
  9592                           ;doprnt.c: 1228: while(c--) {
  9593  0DCB  0840               	movf	sprintf@c^(0+256),w
  9594  0DCC  00A0               	movwf	??_sprintf^(0+256)
  9595  0DCD  01A1               	clrf	(??_sprintf^(0+256)+1)
  9596  0DCE  35A0               	lslf	??_sprintf^(0+256),f
  9597  0DCF  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9598  0DD0  35A0               	lslf	??_sprintf^(0+256),f
  9599  0DD1  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9600  0DD2  309A               	movlw	low (_dpowers| (0+32768))
  9601  0DD3  0720               	addwf	??_sprintf^(0+256),w
  9602  0DD4  0084               	movwf	4
  9603  0DD5  30B0               	movlw	high (_dpowers| (0+32768))
  9604  0DD6  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9605  0DD7  0085               	movwf	5
  9606  0DD8  3F00               	moviw [0]fsr0
  9607  0DD9  00F2               	movwf	___lldiv@divisor
  9608  0DDA  3F01               	moviw [1]fsr0
  9609  0DDB  00F3               	movwf	___lldiv@divisor+1
  9610  0DDC  3F02               	moviw [2]fsr0
  9611  0DDD  00F4               	movwf	___lldiv@divisor+2
  9612  0DDE  3F03               	moviw [3]fsr0
  9613  0DDF  00F5               	movwf	___lldiv@divisor+3
  9614  0DE0  0832               	movf	(sprintf@val+3)^(0+256),w
  9615  0DE1  00F9               	movwf	___lldiv@dividend+3
  9616  0DE2  0831               	movf	(sprintf@val+2)^(0+256),w
  9617  0DE3  00F8               	movwf	___lldiv@dividend+2
  9618  0DE4  0830               	movf	(sprintf@val+1)^(0+256),w
  9619  0DE5  00F7               	movwf	___lldiv@dividend+1
  9620  0DE6  082F               	movf	sprintf@val^(0+256),w
  9621  0DE7  00F6               	movwf	___lldiv@dividend
  9622  0DE8  31AF  2704  3188   	fcall	___lldiv
  9623  0DEB  0875               	movf	?___lldiv+3,w
  9624  0DEC  0022               	movlb	2	; select bank2
  9625  0DED  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9626  0DEE  0874               	movf	?___lldiv+2,w
  9627  0DEF  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9628  0DF0  0873               	movf	?___lldiv+1,w
  9629  0DF1  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9630  0DF2  0872               	movf	?___lldiv,w
  9631  0DF3  00AB               	movwf	sprintf@tmpval^(0+256)
  9632                           
  9633                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9634  0DF4  3000               	movlw	0
  9635  0DF5  0020               	movlb	0	; select bank0
  9636  0DF6  00A9               	movwf	___llmod@divisor+3
  9637  0DF7  3000               	movlw	0
  9638  0DF8  00A8               	movwf	___llmod@divisor+2
  9639  0DF9  3000               	movlw	0
  9640  0DFA  00A7               	movwf	___llmod@divisor+1
  9641  0DFB  300A               	movlw	10
  9642  0DFC  00A6               	movwf	___llmod@divisor
  9643  0DFD  0022               	movlb	2	; select bank2
  9644  0DFE  082E               	movf	(sprintf@tmpval+3)^(0+256),w
  9645  0DFF  0020               	movlb	0	; select bank0
  9646  0E00  00AD               	movwf	___llmod@dividend+3
  9647  0E01  0022               	movlb	2	; select bank2
  9648  0E02  082D               	movf	(sprintf@tmpval+2)^(0+256),w
  9649  0E03  0020               	movlb	0	; select bank0
  9650  0E04  00AC               	movwf	___llmod@dividend+2
  9651  0E05  0022               	movlb	2	; select bank2
  9652  0E06  082C               	movf	(sprintf@tmpval+1)^(0+256),w
  9653  0E07  0020               	movlb	0	; select bank0
  9654  0E08  00AB               	movwf	___llmod@dividend+1
  9655  0E09  0022               	movlb	2	; select bank2
  9656  0E0A  082B               	movf	sprintf@tmpval^(0+256),w
  9657  0E0B  0020               	movlb	0	; select bank0
  9658  0E0C  00AA               	movwf	___llmod@dividend
  9659  0E0D  31AD  2589  3188   	fcall	___llmod
  9660  0E10  0020               	movlb	0	; select bank0
  9661  0E11  0829               	movf	?___llmod+3,w
  9662  0E12  0022               	movlb	2	; select bank2
  9663  0E13  00AE               	movwf	(sprintf@tmpval+3)^(0+256)
  9664  0E14  0020               	movlb	0	; select bank0
  9665  0E15  0828               	movf	?___llmod+2,w
  9666  0E16  0022               	movlb	2	; select bank2
  9667  0E17  00AD               	movwf	(sprintf@tmpval+2)^(0+256)
  9668  0E18  0020               	movlb	0	; select bank0
  9669  0E19  0827               	movf	?___llmod+1,w
  9670  0E1A  0022               	movlb	2	; select bank2
  9671  0E1B  00AC               	movwf	(sprintf@tmpval+1)^(0+256)
  9672  0E1C  0020               	movlb	0	; select bank0
  9673  0E1D  0826               	movf	?___llmod,w
  9674  0E1E  0022               	movlb	2	; select bank2
  9675  0E1F  00AB               	movwf	sprintf@tmpval^(0+256)
  9676                           
  9677                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9678  0E20  082B               	movf	sprintf@tmpval^(0+256),w
  9679  0E21  3E30               	addlw	48
  9680  0E22  00A0               	movwf	??_sprintf^(0+256)
  9681  0E23  083F               	movf	sprintf@sp^(0+256),w
  9682  0E24  0086               	movwf	6
  9683  0E25  3002               	movlw	2	; select bank4/5
  9684  0E26  0087               	movwf	7
  9685  0E27  0820               	movf	??_sprintf^(0+256),w
  9686  0E28  0081               	movwf	1
  9687  0E29  3001               	movlw	1
  9688  0E2A  00A0               	movwf	??_sprintf^(0+256)
  9689  0E2B  0820               	movf	??_sprintf^(0+256),w
  9690  0E2C  07BF               	addwf	sprintf@sp^(0+256),f
  9691                           
  9692                           ;doprnt.c: 1232: val %= dpowers[c];
  9693  0E2D  0840               	movf	sprintf@c^(0+256),w
  9694  0E2E  00A0               	movwf	??_sprintf^(0+256)
  9695  0E2F  01A1               	clrf	(??_sprintf^(0+256)+1)
  9696  0E30  35A0               	lslf	??_sprintf^(0+256),f
  9697  0E31  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9698  0E32  35A0               	lslf	??_sprintf^(0+256),f
  9699  0E33  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9700  0E34  309A               	movlw	low (_dpowers| (0+32768))
  9701  0E35  0720               	addwf	??_sprintf^(0+256),w
  9702  0E36  0084               	movwf	4
  9703  0E37  30B0               	movlw	high (_dpowers| (0+32768))
  9704  0E38  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9705  0E39  0085               	movwf	5
  9706  0E3A  3F00               	moviw [0]fsr0
  9707  0E3B  0020               	movlb	0	; select bank0
  9708  0E3C  00A6               	movwf	___llmod@divisor
  9709  0E3D  3F01               	moviw [1]fsr0
  9710  0E3E  00A7               	movwf	___llmod@divisor+1
  9711  0E3F  3F02               	moviw [2]fsr0
  9712  0E40  00A8               	movwf	___llmod@divisor+2
  9713  0E41  3F03               	moviw [3]fsr0
  9714  0E42  00A9               	movwf	___llmod@divisor+3
  9715  0E43  0022               	movlb	2	; select bank2
  9716  0E44  0832               	movf	(sprintf@val+3)^(0+256),w
  9717  0E45  0020               	movlb	0	; select bank0
  9718  0E46  00AD               	movwf	___llmod@dividend+3
  9719  0E47  0022               	movlb	2	; select bank2
  9720  0E48  0831               	movf	(sprintf@val+2)^(0+256),w
  9721  0E49  0020               	movlb	0	; select bank0
  9722  0E4A  00AC               	movwf	___llmod@dividend+2
  9723  0E4B  0022               	movlb	2	; select bank2
  9724  0E4C  0830               	movf	(sprintf@val+1)^(0+256),w
  9725  0E4D  0020               	movlb	0	; select bank0
  9726  0E4E  00AB               	movwf	___llmod@dividend+1
  9727  0E4F  0022               	movlb	2	; select bank2
  9728  0E50  082F               	movf	sprintf@val^(0+256),w
  9729  0E51  0020               	movlb	0	; select bank0
  9730  0E52  00AA               	movwf	___llmod@dividend
  9731  0E53  31AD  2589  3188   	fcall	___llmod
  9732  0E56  0020               	movlb	0	; select bank0
  9733  0E57  0829               	movf	?___llmod+3,w
  9734  0E58  0022               	movlb	2	; select bank2
  9735  0E59  00B2               	movwf	(sprintf@val+3)^(0+256)
  9736  0E5A  0020               	movlb	0	; select bank0
  9737  0E5B  0828               	movf	?___llmod+2,w
  9738  0E5C  0022               	movlb	2	; select bank2
  9739  0E5D  00B1               	movwf	(sprintf@val+2)^(0+256)
  9740  0E5E  0020               	movlb	0	; select bank0
  9741  0E5F  0827               	movf	?___llmod+1,w
  9742  0E60  0022               	movlb	2	; select bank2
  9743  0E61  00B0               	movwf	(sprintf@val+1)^(0+256)
  9744  0E62  0020               	movlb	0	; select bank0
  9745  0E63  0826               	movf	?___llmod,w
  9746  0E64  2DC2               	goto	L6
  9747  0E65                     l7632:	
  9748                           ;doprnt.c: 1233: }
  9749                           ;doprnt.c: 1235: while(prec) {
  9750                           
  9751                           
  9752                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9753  0E65  3030               	movlw	48
  9754  0E66  00A0               	movwf	??_sprintf^(0+256)
  9755  0E67  083F               	movf	sprintf@sp^(0+256),w
  9756  0E68  0086               	movwf	6
  9757  0E69  3002               	movlw	2	; select bank4/5
  9758  0E6A  0087               	movwf	7
  9759  0E6B  0820               	movf	??_sprintf^(0+256),w
  9760  0E6C  0081               	movwf	1
  9761  0E6D  3001               	movlw	1
  9762  0E6E  00A0               	movwf	??_sprintf^(0+256)
  9763  0E6F  0820               	movf	??_sprintf^(0+256),w
  9764  0E70  07BF               	addwf	sprintf@sp^(0+256),f
  9765                           
  9766                           ;doprnt.c: 1237: prec--;
  9767  0E71  30FF               	movlw	255
  9768  0E72  07BD               	addwf	sprintf@prec^(0+256),f
  9769  0E73  30FF               	movlw	255
  9770  0E74  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
  9771  0E75                     l7638:	
  9772  0E75  083D               	movf	sprintf@prec^(0+256),w
  9773  0E76  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9774  0E77  1903               	btfsc	3,2
  9775  0E78  28A5               	goto	l7732
  9776  0E79  2E65               	goto	l7632
  9777  0E7A                     l7640:	
  9778                           ;doprnt.c: 1238: }
  9779                           ;doprnt.c: 1245: continue;
  9780                           
  9781                           
  9782                           ;doprnt.c: 1246: }
  9783                           ;doprnt.c: 1253: {
  9784                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9785  0E7A  082A               	movf	sprintf@ap^(0+256),w
  9786  0E7B  0086               	movwf	6
  9787  0E7C  0187               	clrf	7
  9788  0E7D  3F40               	moviw [0]fsr1
  9789  0E7E  00A0               	movwf	??_sprintf^(0+256)
  9790  0E7F  3F41               	moviw [1]fsr1
  9791  0E80  00A1               	movwf	(??_sprintf^(0+256)+1)
  9792  0E81  0820               	movf	??_sprintf^(0+256),w
  9793  0E82  00AF               	movwf	sprintf@val^(0+256)
  9794  0E83  0821               	movf	(??_sprintf+1)^(0+256),w
  9795  0E84  00B0               	movwf	(sprintf@val+1)^(0+256)
  9796  0E85  0D89               	rlf	9,f
  9797  0E86  3B89               	subwfb	9,f
  9798  0E87  0989               	comf	9,f
  9799  0E88  00B1               	movwf	(sprintf@val+2)^(0+256)
  9800  0E89  00B2               	movwf	(sprintf@val+3)^(0+256)
  9801  0E8A  3002               	movlw	2
  9802  0E8B  00A0               	movwf	??_sprintf^(0+256)
  9803  0E8C  0820               	movf	??_sprintf^(0+256),w
  9804  0E8D  07AA               	addwf	sprintf@ap^(0+256),f
  9805                           
  9806                           ;doprnt.c: 1261: if((long)val < 0) {
  9807  0E8E  1FB2               	btfss	(sprintf@val+3)^(0+256),7
  9808  0E8F  2E9F               	goto	l7650
  9809                           
  9810                           ;doprnt.c: 1262: flag |= 0x03;
  9811  0E90  3003               	movlw	3
  9812  0E91  04B5               	iorwf	sprintf@flag^(0+256),f
  9813  0E92  3000               	movlw	0
  9814  0E93  04B6               	iorwf	(sprintf@flag+1)^(0+256),f
  9815                           
  9816                           ;doprnt.c: 1263: val = -val;
  9817  0E94  09AF               	comf	sprintf@val^(0+256),f
  9818  0E95  09B0               	comf	(sprintf@val+1)^(0+256),f
  9819  0E96  09B1               	comf	(sprintf@val+2)^(0+256),f
  9820  0E97  09B2               	comf	(sprintf@val+3)^(0+256),f
  9821  0E98  0AAF               	incf	sprintf@val^(0+256),f
  9822  0E99  1903               	skipnz
  9823  0E9A  0AB0               	incf	(sprintf@val+1)^(0+256),f
  9824  0E9B  1903               	skipnz
  9825  0E9C  0AB1               	incf	(sprintf@val+2)^(0+256),f
  9826  0E9D  1903               	skipnz
  9827  0E9E  0AB2               	incf	(sprintf@val+3)^(0+256),f
  9828  0E9F                     l7650:	
  9829                           
  9830                           ;doprnt.c: 1264: }
  9831                           ;doprnt.c: 1266: }
  9832                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9833  0E9F  083D               	movf	sprintf@prec^(0+256),w
  9834  0EA0  043E               	iorwf	(sprintf@prec+1)^(0+256),w
  9835  0EA1  1D03               	btfss	3,2
  9836  0EA2  2EAD               	goto	l7656
  9837  0EA3  0832               	movf	(sprintf@val+3)^(0+256),w
  9838  0EA4  0431               	iorwf	(sprintf@val+2)^(0+256),w
  9839  0EA5  0430               	iorwf	(sprintf@val+1)^(0+256),w
  9840  0EA6  042F               	iorwf	sprintf@val^(0+256),w
  9841  0EA7  1D03               	skipz
  9842  0EA8  2EAD               	goto	l7656
  9843                           
  9844                           ;doprnt.c: 1291: prec++;
  9845  0EA9  3001               	movlw	1
  9846  0EAA  07BD               	addwf	sprintf@prec^(0+256),f
  9847  0EAB  3000               	movlw	0
  9848  0EAC  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
  9849  0EAD                     l7656:	
  9850                           
  9851                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9852  0EAD  01C0               	clrf	sprintf@c^(0+256)
  9853  0EAE  0AC0               	incf	sprintf@c^(0+256),f
  9854  0EAF  300A               	movlw	10
  9855  0EB0  0640               	xorwf	sprintf@c^(0+256),w
  9856  0EB1  1903               	btfsc	3,2
  9857  0EB2  2EE0               	goto	l7668
  9858  0EB3                     l7662:	
  9859                           
  9860                           ;doprnt.c: 1306: if(val < dpowers[c])
  9861  0EB3  0840               	movf	sprintf@c^(0+256),w
  9862  0EB4  00A0               	movwf	??_sprintf^(0+256)
  9863  0EB5  01A1               	clrf	(??_sprintf^(0+256)+1)
  9864  0EB6  35A0               	lslf	??_sprintf^(0+256),f
  9865  0EB7  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9866  0EB8  35A0               	lslf	??_sprintf^(0+256),f
  9867  0EB9  0DA1               	rlf	(??_sprintf^(0+256)+1),f
  9868  0EBA  309A               	movlw	low (_dpowers| (0+32768))
  9869  0EBB  0720               	addwf	??_sprintf^(0+256),w
  9870  0EBC  0084               	movwf	4
  9871  0EBD  30B0               	movlw	high (_dpowers| (0+32768))
  9872  0EBE  3D21               	addwfc	(??_sprintf+1)^(0+256),w
  9873  0EBF  0085               	movwf	5
  9874  0EC0  3F00               	moviw [0]fsr0
  9875  0EC1  00A2               	movwf	(??_sprintf+2)^(0+256)
  9876  0EC2  3F01               	moviw [1]fsr0
  9877  0EC3  00A3               	movwf	((??_sprintf+2)^(0+256)+1)
  9878  0EC4  3F02               	moviw [2]fsr0
  9879  0EC5  00A4               	movwf	((??_sprintf+2)^(0+256)+2)
  9880  0EC6  3F03               	moviw [3]fsr0
  9881  0EC7  00A5               	movwf	((??_sprintf+2)^(0+256)+3)
  9882  0EC8  0825               	movf	(??_sprintf+5)^(0+256),w
  9883  0EC9  0232               	subwf	(sprintf@val+3)^(0+256),w
  9884  0ECA  1D03               	skipz
  9885  0ECB  2ED6               	goto	u10545
  9886  0ECC  0824               	movf	(??_sprintf+4)^(0+256),w
  9887  0ECD  0231               	subwf	(sprintf@val+2)^(0+256),w
  9888  0ECE  1D03               	skipz
  9889  0ECF  2ED6               	goto	u10545
  9890  0ED0  0823               	movf	(??_sprintf+3)^(0+256),w
  9891  0ED1  0230               	subwf	(sprintf@val+1)^(0+256),w
  9892  0ED2  1D03               	skipz
  9893  0ED3  2ED6               	goto	u10545
  9894  0ED4  0822               	movf	(??_sprintf+2)^(0+256),w
  9895  0ED5  022F               	subwf	sprintf@val^(0+256),w
  9896  0ED6                     u10545:	
  9897  0ED6  1C03               	btfss	3,0
  9898  0ED7  2EE0               	goto	l7668
  9899                           
  9900                           ;doprnt.c: 1307: break;
  9901  0ED8  3001               	movlw	1
  9902  0ED9  00A0               	movwf	??_sprintf^(0+256)
  9903  0EDA  0820               	movf	??_sprintf^(0+256),w
  9904  0EDB  07C0               	addwf	sprintf@c^(0+256),f
  9905  0EDC  300A               	movlw	10
  9906  0EDD  0640               	xorwf	sprintf@c^(0+256),w
  9907  0EDE  1D03               	btfss	3,2
  9908  0EDF  2EB3               	goto	l7662
  9909  0EE0                     l7668:	
  9910                           
  9911                           ;doprnt.c: 1339: if(c < prec)
  9912  0EE0  0840               	movf	sprintf@c^(0+256),w
  9913  0EE1  00A0               	movwf	??_sprintf^(0+256)
  9914  0EE2  01A1               	clrf	(??_sprintf^(0+256)+1)
  9915  0EE3  1BA0               	btfsc	??_sprintf^(0+256),7
  9916  0EE4  03A1               	decf	(??_sprintf^(0+256)+1),f
  9917  0EE5  0821               	movf	(??_sprintf+1)^(0+256),w
  9918  0EE6  3A80               	xorlw	128
  9919  0EE7  00A2               	movwf	(??_sprintf+2)^(0+256)
  9920  0EE8  083E               	movf	(sprintf@prec+1)^(0+256),w
  9921  0EE9  3A80               	xorlw	128
  9922  0EEA  0222               	subwf	(??_sprintf+2)^(0+256),w
  9923  0EEB  1D03               	skipz
  9924  0EEC  2EEF               	goto	u10565
  9925  0EED  083D               	movf	sprintf@prec^(0+256),w
  9926  0EEE  0220               	subwf	??_sprintf^(0+256),w
  9927  0EEF                     u10565:	
  9928  0EEF  1803               	skipnc
  9929  0EF0  2EF7               	goto	l7672
  9930                           
  9931                           ;doprnt.c: 1340: c = prec;
  9932  0EF1  0022               	movlb	2	; select bank2
  9933  0EF2  083D               	movf	sprintf@prec^(0+256),w
  9934  0EF3  00A0               	movwf	??_sprintf^(0+256)
  9935  0EF4  0820               	movf	??_sprintf^(0+256),w
  9936  0EF5  00C0               	movwf	sprintf@c^(0+256)
  9937  0EF6  2F0F               	goto	l913
  9938  0EF7                     l7672:	
  9939                           
  9940                           ;doprnt.c: 1341: else if(prec < c)
  9941  0EF7  0022               	movlb	2	; select bank2
  9942  0EF8  0840               	movf	sprintf@c^(0+256),w
  9943  0EF9  00A0               	movwf	??_sprintf^(0+256)
  9944  0EFA  01A1               	clrf	(??_sprintf^(0+256)+1)
  9945  0EFB  1BA0               	btfsc	??_sprintf^(0+256),7
  9946  0EFC  03A1               	decf	(??_sprintf^(0+256)+1),f
  9947  0EFD  083E               	movf	(sprintf@prec+1)^(0+256),w
  9948  0EFE  3A80               	xorlw	128
  9949  0EFF  00A2               	movwf	(??_sprintf+2)^(0+256)
  9950  0F00  0821               	movf	(??_sprintf+1)^(0+256),w
  9951  0F01  3A80               	xorlw	128
  9952  0F02  0222               	subwf	(??_sprintf+2)^(0+256),w
  9953  0F03  1D03               	skipz
  9954  0F04  2F07               	goto	u10575
  9955  0F05  0820               	movf	??_sprintf^(0+256),w
  9956  0F06  023D               	subwf	sprintf@prec^(0+256),w
  9957  0F07                     u10575:	
  9958  0F07  1803               	skipnc
  9959  0F08  2F0F               	goto	l913
  9960                           
  9961                           ;doprnt.c: 1342: prec = c;
  9962  0F09  0022               	movlb	2	; select bank2
  9963  0F0A  0840               	movf	sprintf@c^(0+256),w
  9964  0F0B  00BD               	movwf	sprintf@prec^(0+256)
  9965  0F0C  01BE               	clrf	(sprintf@prec+1)^(0+256)
  9966  0F0D  1BBD               	btfsc	sprintf@prec^(0+256),7
  9967  0F0E  03BE               	decf	(sprintf@prec+1)^(0+256),f
  9968  0F0F                     l913:	
  9969                           
  9970                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9971  0F0F  0022               	movlb	2	; select bank2
  9972  0F10  0837               	movf	sprintf@width^(0+256),w
  9973  0F11  0438               	iorwf	(sprintf@width+1)^(0+256),w
  9974  0F12  1903               	btfsc	3,2
  9975  0F13  2F22               	goto	l7680
  9976  0F14  3003               	movlw	3
  9977  0F15  0535               	andwf	sprintf@flag^(0+256),w
  9978  0F16  00A0               	movwf	??_sprintf^(0+256)
  9979  0F17  3000               	movlw	0
  9980  0F18  0536               	andwf	(sprintf@flag+1)^(0+256),w
  9981  0F19  00A1               	movwf	(??_sprintf+1)^(0+256)
  9982  0F1A  0820               	movf	??_sprintf^(0+256),w
  9983  0F1B  0421               	iorwf	(??_sprintf^(0+256)+1),w
  9984  0F1C  1903               	btfsc	3,2
  9985  0F1D  2F22               	goto	l7680
  9986                           
  9987                           ;doprnt.c: 1346: width--;
  9988  0F1E  30FF               	movlw	255
  9989  0F1F  07B7               	addwf	sprintf@width^(0+256),f
  9990  0F20  30FF               	movlw	255
  9991  0F21  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
  9992  0F22                     l7680:	
  9993                           
  9994                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9995  0F22  1F36               	btfss	(sprintf@flag+1)^(0+256),6
  9996  0F23  2F39               	goto	l7688
  9997                           
  9998                           ;doprnt.c: 1349: if(width > prec)
  9999  0F24  083E               	movf	(sprintf@prec+1)^(0+256),w
 10000  0F25  3A80               	xorlw	128
 10001  0F26  00A0               	movwf	??_sprintf^(0+256)
 10002  0F27  0838               	movf	(sprintf@width+1)^(0+256),w
 10003  0F28  3A80               	xorlw	128
 10004  0F29  0220               	subwf	??_sprintf^(0+256),w
 10005  0F2A  1D03               	skipz
 10006  0F2B  2F2E               	goto	u10615
 10007  0F2C  0837               	movf	sprintf@width^(0+256),w
 10008  0F2D  023D               	subwf	sprintf@prec^(0+256),w
 10009  0F2E                     u10615:	
 10010  0F2E  1803               	skipnc
 10011  0F2F  2F36               	goto	l7686
 10012                           
 10013                           ;doprnt.c: 1350: width -= prec;
 10014  0F30  0022               	movlb	2	; select bank2
 10015  0F31  083D               	movf	sprintf@prec^(0+256),w
 10016  0F32  02B7               	subwf	sprintf@width^(0+256),f
 10017  0F33  083E               	movf	(sprintf@prec+1)^(0+256),w
 10018  0F34  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
 10019  0F35  2F39               	goto	l7688
 10020  0F36                     l7686:	
 10021                           
 10022                           ;doprnt.c: 1351: else
 10023                           ;doprnt.c: 1352: width = 0;
 10024  0F36  0022               	movlb	2	; select bank2
 10025  0F37  01B7               	clrf	sprintf@width^(0+256)
 10026  0F38  01B8               	clrf	(sprintf@width+1)^(0+256)
 10027  0F39                     l7688:	
 10028                           
 10029                           ;doprnt.c: 1353: }
 10030                           ;doprnt.c: 1381: if(width > c)
 10031  0F39  0840               	movf	sprintf@c^(0+256),w
 10032  0F3A  00A0               	movwf	??_sprintf^(0+256)
 10033  0F3B  01A1               	clrf	(??_sprintf^(0+256)+1)
 10034  0F3C  1BA0               	btfsc	??_sprintf^(0+256),7
 10035  0F3D  03A1               	decf	(??_sprintf^(0+256)+1),f
 10036  0F3E  0821               	movf	(??_sprintf+1)^(0+256),w
 10037  0F3F  3A80               	xorlw	128
 10038  0F40  00A2               	movwf	(??_sprintf+2)^(0+256)
 10039  0F41  0838               	movf	(sprintf@width+1)^(0+256),w
 10040  0F42  3A80               	xorlw	128
 10041  0F43  0222               	subwf	(??_sprintf+2)^(0+256),w
 10042  0F44  1D03               	skipz
 10043  0F45  2F48               	goto	u10625
 10044  0F46  0837               	movf	sprintf@width^(0+256),w
 10045  0F47  0220               	subwf	??_sprintf^(0+256),w
 10046  0F48                     u10625:	
 10047  0F48  1803               	skipnc
 10048  0F49  2F55               	goto	l7692
 10049                           
 10050                           ;doprnt.c: 1382: width -= c;
 10051  0F4A  0022               	movlb	2	; select bank2
 10052  0F4B  0840               	movf	sprintf@c^(0+256),w
 10053  0F4C  00A0               	movwf	??_sprintf^(0+256)
 10054  0F4D  01A1               	clrf	(??_sprintf^(0+256)+1)
 10055  0F4E  1BA0               	btfsc	??_sprintf^(0+256),7
 10056  0F4F  03A1               	decf	(??_sprintf^(0+256)+1),f
 10057  0F50  0820               	movf	??_sprintf^(0+256),w
 10058  0F51  02B7               	subwf	sprintf@width^(0+256),f
 10059  0F52  0821               	movf	(??_sprintf+1)^(0+256),w
 10060  0F53  3BB8               	subwfb	(sprintf@width+1)^(0+256),f
 10061  0F54  2F58               	goto	l7694
 10062  0F55                     l7692:	
 10063                           
 10064                           ;doprnt.c: 1383: else
 10065                           ;doprnt.c: 1384: width = 0;
 10066  0F55  0022               	movlb	2	; select bank2
 10067  0F56  01B7               	clrf	sprintf@width^(0+256)
 10068  0F57  01B8               	clrf	(sprintf@width+1)^(0+256)
 10069  0F58                     l7694:	
 10070                           
 10071                           ;doprnt.c: 1387: if(flag & 0x04) {
 10072  0F58  1D35               	btfss	sprintf@flag^(0+256),2
 10073  0F59  2F85               	goto	l7710
 10074                           
 10075                           ;doprnt.c: 1392: if(flag & 0x03)
 10076  0F5A  3003               	movlw	3
 10077  0F5B  0535               	andwf	sprintf@flag^(0+256),w
 10078  0F5C  00A0               	movwf	??_sprintf^(0+256)
 10079  0F5D  3000               	movlw	0
 10080  0F5E  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10081  0F5F  00A1               	movwf	(??_sprintf+1)^(0+256)
 10082  0F60  0820               	movf	??_sprintf^(0+256),w
 10083  0F61  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10084  0F62  1903               	btfsc	3,2
 10085  0F63  2F70               	goto	l7702
 10086                           
 10087                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 10088  0F64  302D               	movlw	45
 10089  0F65  00A0               	movwf	??_sprintf^(0+256)
 10090  0F66  083F               	movf	sprintf@sp^(0+256),w
 10091  0F67  0086               	movwf	6
 10092  0F68  3002               	movlw	2	; select bank4/5
 10093  0F69  0087               	movwf	7
 10094  0F6A  0820               	movf	??_sprintf^(0+256),w
 10095  0F6B  0081               	movwf	1
 10096  0F6C  3001               	movlw	1
 10097  0F6D  00A0               	movwf	??_sprintf^(0+256)
 10098  0F6E  0820               	movf	??_sprintf^(0+256),w
 10099  0F6F  07BF               	addwf	sprintf@sp^(0+256),f
 10100  0F70                     l7702:	
 10101                           
 10102                           ;doprnt.c: 1415: if(width)
 10103  0F70  0837               	movf	sprintf@width^(0+256),w
 10104  0F71  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10105  0F72  1903               	btfsc	3,2
 10106  0F73  2FB3               	goto	l7730
 10107                           
 10108                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 10109                           
 10110                           ;doprnt.c: 1416: do
 10111  0F74  3030               	movlw	48
 10112  0F75  00A0               	movwf	??_sprintf^(0+256)
 10113  0F76  083F               	movf	sprintf@sp^(0+256),w
 10114  0F77  0086               	movwf	6
 10115  0F78  3002               	movlw	2	; select bank4/5
 10116  0F79  0087               	movwf	7
 10117  0F7A  0820               	movf	??_sprintf^(0+256),w
 10118  0F7B  0081               	movwf	1
 10119  0F7C  3001               	movlw	1
 10120  0F7D  00A0               	movwf	??_sprintf^(0+256)
 10121  0F7E  0820               	movf	??_sprintf^(0+256),w
 10122  0F7F  07BF               	addwf	sprintf@sp^(0+256),f
 10123                           
 10124                           ;doprnt.c: 1418: while(--width);
 10125  0F80  30FF               	movlw	255
 10126  0F81  07B7               	addwf	sprintf@width^(0+256),f
 10127  0F82  30FF               	movlw	255
 10128  0F83  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10129  0F84  2F70               	goto	l7702
 10130  0F85                     l7710:	
 10131                           ;doprnt.c: 1420: } else
 10132                           
 10133                           
 10134                           ;doprnt.c: 1422: {
 10135                           ;doprnt.c: 1424: if(width
 10136                           ;doprnt.c: 1428: )
 10137  0F85  0837               	movf	sprintf@width^(0+256),w
 10138  0F86  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10139  0F87  1903               	btfsc	3,2
 10140  0F88  2F9D               	goto	l7718
 10141  0F89                     l7712:	
 10142                           ;doprnt.c: 1429: do
 10143                           
 10144                           
 10145                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 10146  0F89  3020               	movlw	32
 10147  0F8A  00A0               	movwf	??_sprintf^(0+256)
 10148  0F8B  083F               	movf	sprintf@sp^(0+256),w
 10149  0F8C  0086               	movwf	6
 10150  0F8D  3002               	movlw	2	; select bank4/5
 10151  0F8E  0087               	movwf	7
 10152  0F8F  0820               	movf	??_sprintf^(0+256),w
 10153  0F90  0081               	movwf	1
 10154  0F91  3001               	movlw	1
 10155  0F92  00A0               	movwf	??_sprintf^(0+256)
 10156  0F93  0820               	movf	??_sprintf^(0+256),w
 10157  0F94  07BF               	addwf	sprintf@sp^(0+256),f
 10158                           
 10159                           ;doprnt.c: 1431: while(--width);
 10160  0F95  30FF               	movlw	255
 10161  0F96  07B7               	addwf	sprintf@width^(0+256),f
 10162  0F97  30FF               	movlw	255
 10163  0F98  3DB8               	addwfc	(sprintf@width+1)^(0+256),f
 10164  0F99  0837               	movf	sprintf@width^(0+256),w
 10165  0F9A  0438               	iorwf	(sprintf@width+1)^(0+256),w
 10166  0F9B  1D03               	btfss	3,2
 10167  0F9C  2F89               	goto	l7712
 10168  0F9D                     l7718:	
 10169                           
 10170                           ;doprnt.c: 1438: if(flag & 0x03)
 10171  0F9D  3003               	movlw	3
 10172  0F9E  0535               	andwf	sprintf@flag^(0+256),w
 10173  0F9F  00A0               	movwf	??_sprintf^(0+256)
 10174  0FA0  3000               	movlw	0
 10175  0FA1  0536               	andwf	(sprintf@flag+1)^(0+256),w
 10176  0FA2  00A1               	movwf	(??_sprintf+1)^(0+256)
 10177  0FA3  0820               	movf	??_sprintf^(0+256),w
 10178  0FA4  0421               	iorwf	(??_sprintf^(0+256)+1),w
 10179  0FA5  1903               	btfsc	3,2
 10180  0FA6  2FB3               	goto	l7730
 10181                           
 10182                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10183  0FA7  302D               	movlw	45
 10184  0FA8                     L8:	
 10185  0FA8  00A0               	movwf	??_sprintf^(0+256)
 10186  0FA9  083F               	movf	sprintf@sp^(0+256),w
 10187  0FAA  0086               	movwf	6
 10188  0FAB  3002               	movlw	2	; select bank4/5
 10189  0FAC  0087               	movwf	7
 10190  0FAD  0820               	movf	??_sprintf^(0+256),w
 10191  0FAE  0081               	movwf	1
 10192  0FAF  3001               	movlw	1
 10193  0FB0  00A0               	movwf	??_sprintf^(0+256)
 10194  0FB1  0820               	movf	??_sprintf^(0+256),w
 10195  0FB2  07BF               	addwf	sprintf@sp^(0+256),f
 10196  0FB3                     l7730:	
 10197  0FB3  30FF               	movlw	255
 10198  0FB4  07BD               	addwf	sprintf@prec^(0+256),f
 10199  0FB5  30FF               	movlw	255
 10200  0FB6  3DBE               	addwfc	(sprintf@prec+1)^(0+256),f
 10201  0FB7  0A3D               	incf	sprintf@prec^(0+256),w
 10202  0FB8  1903               	btfsc	3,2
 10203  0FB9  0A3E               	incf	(sprintf@prec+1)^(0+256),w
 10204  0FBA  1903               	btfsc	3,2
 10205  0FBB  28A5               	goto	l7732
 10206                           
 10207                           ;doprnt.c: 1478: {
 10208                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10209                           
 10210                           ;doprnt.c: 1469: }
 10211                           ;doprnt.c: 1474: while(prec--) {
 10212  0FBC  3000               	movlw	0
 10213  0FBD  0020               	movlb	0	; select bank0
 10214  0FBE  00A9               	movwf	___llmod@divisor+3
 10215  0FBF  3000               	movlw	0
 10216  0FC0  00A8               	movwf	___llmod@divisor+2
 10217  0FC1  3000               	movlw	0
 10218  0FC2  00A7               	movwf	___llmod@divisor+1
 10219  0FC3  300A               	movlw	10
 10220  0FC4  00A6               	movwf	___llmod@divisor
 10221  0FC5  0022               	movlb	2	; select bank2
 10222  0FC6  083E               	movf	(sprintf@prec+1)^(0+256),w
 10223  0FC7  0085               	movwf	5
 10224  0FC8  083D               	movf	sprintf@prec^(0+256),w
 10225  0FC9  0084               	movwf	4
 10226  0FCA  3584               	lslf	4,f
 10227  0FCB  0D85               	rlf	5,f
 10228  0FCC  3584               	lslf	4,f
 10229  0FCD  0D85               	rlf	5,f
 10230  0FCE  309A               	movlw	low (_dpowers| (0+32768))
 10231  0FCF  0784               	addwf	4,f
 10232  0FD0  30B0               	movlw	high (_dpowers| (0+32768))
 10233  0FD1  3D85               	addwfc	5,f
 10234  0FD2  3F00               	moviw [0]fsr0
 10235  0FD3  00F2               	movwf	___lldiv@divisor
 10236  0FD4  3F01               	moviw [1]fsr0
 10237  0FD5  00F3               	movwf	___lldiv@divisor+1
 10238  0FD6  3F02               	moviw [2]fsr0
 10239  0FD7  00F4               	movwf	___lldiv@divisor+2
 10240  0FD8  3F03               	moviw [3]fsr0
 10241  0FD9  00F5               	movwf	___lldiv@divisor+3
 10242  0FDA  0832               	movf	(sprintf@val+3)^(0+256),w
 10243  0FDB  00F9               	movwf	___lldiv@dividend+3
 10244  0FDC  0831               	movf	(sprintf@val+2)^(0+256),w
 10245  0FDD  00F8               	movwf	___lldiv@dividend+2
 10246  0FDE  0830               	movf	(sprintf@val+1)^(0+256),w
 10247  0FDF  00F7               	movwf	___lldiv@dividend+1
 10248  0FE0  082F               	movf	sprintf@val^(0+256),w
 10249  0FE1  00F6               	movwf	___lldiv@dividend
 10250  0FE2  31AF  2704  3188   	fcall	___lldiv
 10251  0FE5  0875               	movf	?___lldiv+3,w
 10252  0FE6  0020               	movlb	0	; select bank0
 10253  0FE7  00AD               	movwf	___llmod@dividend+3
 10254  0FE8  0874               	movf	?___lldiv+2,w
 10255  0FE9  00AC               	movwf	___llmod@dividend+2
 10256  0FEA  0873               	movf	?___lldiv+1,w
 10257  0FEB  00AB               	movwf	___llmod@dividend+1
 10258  0FEC  0872               	movf	?___lldiv,w
 10259  0FED  00AA               	movwf	___llmod@dividend
 10260  0FEE  31AD  2589  3188   	fcall	___llmod
 10261  0FF1  0020               	movlb	0	; select bank0
 10262  0FF2  0826               	movf	?___llmod,w
 10263  0FF3  3E30               	addlw	48
 10264  0FF4  0022               	movlb	2	; select bank2
 10265  0FF5  00A0               	movwf	??_sprintf^(0+256)
 10266  0FF6  0820               	movf	??_sprintf^(0+256),w
 10267  0FF7  00C0               	movwf	sprintf@c^(0+256)
 10268                           
 10269                           ;doprnt.c: 1523: }
 10270                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10271  0FF8  0840               	movf	sprintf@c^(0+256),w
 10272  0FF9  2FA8               	goto	L8
 10273  0FFA                     l7734:	
 10274                           ;doprnt.c: 1525: }
 10275                           ;doprnt.c: 1533: }
 10276                           ;doprnt.c: 1535: alldone:
 10277                           
 10278                           
 10279                           ;doprnt.c: 1538: *sp = 0;
 10280  0FFA  083F               	movf	sprintf@sp^(0+256),w
 10281  0FFB  0086               	movwf	6
 10282  0FFC  3002               	movlw	2	; select bank4/5
 10283  0FFD  0087               	movwf	7
 10284  0FFE  0181               	clrf	1
 10285  0FFF  0008               	return
 10286  1000                     __end_of_sprintf:	
 10287                           ;doprnt.c: 1540: return 0;
 10288                           ;	Return value of _sprintf is never used
 10289                           
 10290                           
 10291                           	psect	text8
 10292  00A8                     __ptext8:	
 10293 ;; *************** function _scale *****************
 10294 ;; Defined at:
 10295 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10296 ;; Parameters:    Size  Location     Type
 10297 ;;  scl             1    wreg     char 
 10298 ;; Auto vars:     Size  Location     Type
 10299 ;;  scl             1   20[BANK1 ] char 
 10300 ;; Return value:  Size  Location     Type
 10301 ;;                  4   76[BANK0 ] char 
 10302 ;; Registers used:
 10303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10304 ;; Tracked objects:
 10305 ;;		On entry : 0/0
 10306 ;;		On exit  : 0/0
 10307 ;;		Unchanged: 0/0
 10308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10310 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10311 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10312 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10313 ;;Total ram usage:       25 bytes
 10314 ;; Hardware stack levels used:    1
 10315 ;; Hardware stack levels required when called:    4
 10316 ;; This function calls:
 10317 ;;		___awdiv
 10318 ;;		___awmod
 10319 ;;		___flmul
 10320 ;; This function is called by:
 10321 ;;		_sprintf
 10322 ;; This function uses a non-reentrant model
 10323 ;;
 10324                           
 10325                           
 10326                           ;psect for function _scale
 10327  00A8                     _scale:	
 10328                           
 10329                           ;incstack = 0
 10330                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10331                           ;scale@scl stored from wreg
 10332  00A8  0021               	movlb	1	; select bank1
 10333  00A9  00B4               	movwf	scale@scl^(0+128)
 10334                           
 10335                           ;doprnt.c: 428: if(scl < 0) {
 10336  00AA  1FB4               	btfss	scale@scl^(0+128),7
 10337  00AB  2A3D               	goto	l7102
 10338                           
 10339                           ;doprnt.c: 429: scl = -scl;
 10340  00AC  09B4               	comf	scale@scl^(0+128),f
 10341  00AD  0AB4               	incf	scale@scl^(0+128),f
 10342                           
 10343                           ;doprnt.c: 430: if(scl>=110)
 10344  00AE  0834               	movf	scale@scl^(0+128),w
 10345  00AF  3A80               	xorlw	128
 10346  00B0  3E12               	addlw	-238
 10347  00B1  1C03               	skipc
 10348  00B2  2998               	goto	l7092
 10349                           
 10350                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10351  00B3  300A               	movlw	10
 10352  00B4  0020               	movlb	0	; select bank0
 10353  00B5  00A0               	movwf	___awdiv@divisor
 10354  00B6  3000               	movlw	0
 10355  00B7  00A1               	movwf	___awdiv@divisor+1
 10356  00B8  0021               	movlb	1	; select bank1
 10357  00B9  0834               	movf	scale@scl^(0+128),w
 10358  00BA  00F4               	movwf	___awmod@dividend
 10359  00BB  01F5               	clrf	___awmod@dividend+1
 10360  00BC  1BF4               	btfsc	___awmod@dividend,7
 10361  00BD  03F5               	decf	___awmod@dividend+1,f
 10362  00BE  3064               	movlw	100
 10363  00BF  00F2               	movwf	___awmod@divisor
 10364  00C0  3000               	movlw	0
 10365  00C1  00F3               	movwf	___awmod@divisor+1
 10366  00C2  31AD  25CC  3180   	fcall	___awmod
 10367  00C5  0873               	movf	?___awmod+1,w
 10368  00C6  0020               	movlb	0	; select bank0
 10369  00C7  00A3               	movwf	___awdiv@dividend+1
 10370  00C8  0872               	movf	?___awmod,w
 10371  00C9  00A2               	movwf	___awdiv@dividend
 10372  00CA  31AE  26B2  3180   	fcall	___awdiv
 10373  00CD  0020               	movlb	0	; select bank0
 10374  00CE  0820               	movf	?___awdiv,w
 10375  00CF  0021               	movlb	1	; select bank1
 10376  00D0  00A0               	movwf	??_scale^(0+128)
 10377  00D1  0020               	movlb	0	; select bank0
 10378  00D2  0821               	movf	?___awdiv+1,w
 10379  00D3  0021               	movlb	1	; select bank1
 10380  00D4  00A1               	movwf	(??_scale^(0+128)+1)
 10381  00D5  35A0               	lslf	??_scale^(0+128),f
 10382  00D6  0DA1               	rlf	(??_scale^(0+128)+1),f
 10383  00D7  35A0               	lslf	??_scale^(0+128),f
 10384  00D8  0DA1               	rlf	(??_scale^(0+128)+1),f
 10385  00D9  0820               	movf	??_scale^(0+128),w
 10386  00DA  3E24               	addlw	36
 10387  00DB  00A2               	movwf	(??_scale+2)^(0+128)
 10388  00DC  3000               	movlw	0
 10389  00DD  3D21               	addwfc	(??_scale+1)^(0+128),w
 10390  00DE  00A3               	movwf	(??_scale+3)^(0+128)
 10391  00DF  3034               	movlw	low (__npowers_| (0+32768))
 10392  00E0  0722               	addwf	(??_scale+2)^(0+128),w
 10393  00E1  0084               	movwf	4
 10394  00E2  30B0               	movlw	high (__npowers_| (0+32768))
 10395  00E3  3D23               	addwfc	(??_scale+3)^(0+128),w
 10396  00E4  0085               	movwf	5
 10397  00E5  3F00               	moviw [0]fsr0
 10398  00E6  00A4               	movwf	(??_scale+4)^(0+128)
 10399  00E7  3F01               	moviw [1]fsr0
 10400  00E8  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10401  00E9  3F02               	moviw [2]fsr0
 10402  00EA  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10403  00EB  3F03               	moviw [3]fsr0
 10404  00EC  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10405  00ED  0827               	movf	(??_scale+7)^(0+128),w
 10406  00EE  0020               	movlb	0	; select bank0
 10407  00EF  00D5               	movwf	___flmul@b+3
 10408  00F0  0021               	movlb	1	; select bank1
 10409  00F1  0826               	movf	(??_scale+6)^(0+128),w
 10410  00F2  0020               	movlb	0	; select bank0
 10411  00F3  00D4               	movwf	___flmul@b+2
 10412  00F4  0021               	movlb	1	; select bank1
 10413  00F5  0825               	movf	(??_scale+5)^(0+128),w
 10414  00F6  0020               	movlb	0	; select bank0
 10415  00F7  00D3               	movwf	___flmul@b+1
 10416  00F8  0021               	movlb	1	; select bank1
 10417  00F9  0824               	movf	(??_scale+4)^(0+128),w
 10418  00FA  0020               	movlb	0	; select bank0
 10419  00FB  00D2               	movwf	___flmul@b
 10420  00FC  3064               	movlw	100
 10421  00FD  00A0               	movwf	___awdiv@divisor
 10422  00FE  3000               	movlw	0
 10423  00FF  00A1               	movwf	___awdiv@divisor+1
 10424  0100  0021               	movlb	1	; select bank1
 10425  0101  0834               	movf	scale@scl^(0+128),w
 10426  0102  0020               	movlb	0	; select bank0
 10427  0103  00A2               	movwf	___awdiv@dividend
 10428  0104  01A3               	clrf	___awdiv@dividend+1
 10429  0105  1BA2               	btfsc	___awdiv@dividend,7
 10430  0106  03A3               	decf	___awdiv@dividend+1,f
 10431  0107  31AE  26B2  3180   	fcall	___awdiv
 10432  010A  0020               	movlb	0	; select bank0
 10433  010B  0820               	movf	?___awdiv,w
 10434  010C  0021               	movlb	1	; select bank1
 10435  010D  00A8               	movwf	(??_scale+8)^(0+128)
 10436  010E  0020               	movlb	0	; select bank0
 10437  010F  0821               	movf	?___awdiv+1,w
 10438  0110  0021               	movlb	1	; select bank1
 10439  0111  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10440  0112  35A8               	lslf	(??_scale+8)^(0+128),f
 10441  0113  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10442  0114  35A8               	lslf	(??_scale+8)^(0+128),f
 10443  0115  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10444  0116  0828               	movf	(??_scale+8)^(0+128),w
 10445  0117  3E48               	addlw	72
 10446  0118  00AA               	movwf	(??_scale+10)^(0+128)
 10447  0119  3000               	movlw	0
 10448  011A  3D29               	addwfc	(??_scale+9)^(0+128),w
 10449  011B  00AB               	movwf	(??_scale+11)^(0+128)
 10450  011C  3034               	movlw	low (__npowers_| (0+32768))
 10451  011D  072A               	addwf	(??_scale+10)^(0+128),w
 10452  011E  0084               	movwf	4
 10453  011F  30B0               	movlw	high (__npowers_| (0+32768))
 10454  0120  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10455  0121  0085               	movwf	5
 10456  0122  3F00               	moviw [0]fsr0
 10457  0123  00AC               	movwf	(??_scale+12)^(0+128)
 10458  0124  3F01               	moviw [1]fsr0
 10459  0125  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10460  0126  3F02               	moviw [2]fsr0
 10461  0127  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10462  0128  3F03               	moviw [3]fsr0
 10463  0129  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10464  012A  082F               	movf	(??_scale+15)^(0+128),w
 10465  012B  0020               	movlb	0	; select bank0
 10466  012C  00D9               	movwf	___flmul@a+3
 10467  012D  0021               	movlb	1	; select bank1
 10468  012E  082E               	movf	(??_scale+14)^(0+128),w
 10469  012F  0020               	movlb	0	; select bank0
 10470  0130  00D8               	movwf	___flmul@a+2
 10471  0131  0021               	movlb	1	; select bank1
 10472  0132  082D               	movf	(??_scale+13)^(0+128),w
 10473  0133  0020               	movlb	0	; select bank0
 10474  0134  00D7               	movwf	___flmul@a+1
 10475  0135  0021               	movlb	1	; select bank1
 10476  0136  082C               	movf	(??_scale+12)^(0+128),w
 10477  0137  0020               	movlb	0	; select bank0
 10478  0138  00D6               	movwf	___flmul@a
 10479  0139  3183  23CD  3180   	fcall	___flmul
 10480  013C  0020               	movlb	0	; select bank0
 10481  013D  0855               	movf	?___flmul+3,w
 10482  013E  0021               	movlb	1	; select bank1
 10483  013F  00B3               	movwf	(_scale$2169+3)^(0+128)
 10484  0140  0020               	movlb	0	; select bank0
 10485  0141  0854               	movf	?___flmul+2,w
 10486  0142  0021               	movlb	1	; select bank1
 10487  0143  00B2               	movwf	(_scale$2169+2)^(0+128)
 10488  0144  0020               	movlb	0	; select bank0
 10489  0145  0853               	movf	?___flmul+1,w
 10490  0146  0021               	movlb	1	; select bank1
 10491  0147  00B1               	movwf	(_scale$2169+1)^(0+128)
 10492  0148  0020               	movlb	0	; select bank0
 10493  0149  0852               	movf	?___flmul,w
 10494  014A  0021               	movlb	1	; select bank1
 10495  014B  00B0               	movwf	_scale$2169^(0+128)
 10496                           
 10497                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10498  014C  300A               	movlw	10
 10499  014D  00F2               	movwf	___awmod@divisor
 10500  014E  3000               	movlw	0
 10501  014F  00F3               	movwf	___awmod@divisor+1
 10502  0150  0834               	movf	scale@scl^(0+128),w
 10503  0151  00F4               	movwf	___awmod@dividend
 10504  0152  01F5               	clrf	___awmod@dividend+1
 10505  0153  1BF4               	btfsc	___awmod@dividend,7
 10506  0154  03F5               	decf	___awmod@dividend+1,f
 10507  0155  31AD  25CC  3180   	fcall	___awmod
 10508  0158  0873               	movf	?___awmod+1,w
 10509  0159  0085               	movwf	5
 10510  015A  0872               	movf	?___awmod,w
 10511  015B  0084               	movwf	4
 10512  015C  3584               	lslf	4,f
 10513  015D  0D85               	rlf	5,f
 10514  015E  3584               	lslf	4,f
 10515  015F  0D85               	rlf	5,f
 10516  0160  3034               	movlw	low (__npowers_| (0+32768))
 10517  0161  0784               	addwf	4,f
 10518  0162  30B0               	movlw	high (__npowers_| (0+32768))
 10519  0163  3D85               	addwfc	5,f
 10520  0164  3F00               	moviw [0]fsr0
 10521  0165  0021               	movlb	1	; select bank1
 10522  0166  00A0               	movwf	??_scale^(0+128)
 10523  0167  3F01               	moviw [1]fsr0
 10524  0168  00A1               	movwf	(??_scale^(0+128)+1)
 10525  0169  3F02               	moviw [2]fsr0
 10526  016A  00A2               	movwf	(??_scale^(0+128)+2)
 10527  016B  3F03               	moviw [3]fsr0
 10528  016C  00A3               	movwf	(??_scale^(0+128)+3)
 10529  016D  0823               	movf	(??_scale+3)^(0+128),w
 10530  016E  0020               	movlb	0	; select bank0
 10531  016F  00D5               	movwf	___flmul@b+3
 10532  0170  0021               	movlb	1	; select bank1
 10533  0171  0822               	movf	(??_scale+2)^(0+128),w
 10534  0172  0020               	movlb	0	; select bank0
 10535  0173  00D4               	movwf	___flmul@b+2
 10536  0174  0021               	movlb	1	; select bank1
 10537  0175  0821               	movf	(??_scale+1)^(0+128),w
 10538  0176  0020               	movlb	0	; select bank0
 10539  0177  00D3               	movwf	___flmul@b+1
 10540  0178  0021               	movlb	1	; select bank1
 10541  0179  0820               	movf	??_scale^(0+128),w
 10542  017A  0020               	movlb	0	; select bank0
 10543  017B  00D2               	movwf	___flmul@b
 10544  017C  0021               	movlb	1	; select bank1
 10545  017D  0833               	movf	(_scale$2169+3)^(0+128),w
 10546  017E  0020               	movlb	0	; select bank0
 10547  017F  00D9               	movwf	___flmul@a+3
 10548  0180  0021               	movlb	1	; select bank1
 10549  0181  0832               	movf	(_scale$2169+2)^(0+128),w
 10550  0182  0020               	movlb	0	; select bank0
 10551  0183  00D8               	movwf	___flmul@a+2
 10552  0184  0021               	movlb	1	; select bank1
 10553  0185  0831               	movf	(_scale$2169+1)^(0+128),w
 10554  0186  0020               	movlb	0	; select bank0
 10555  0187  00D7               	movwf	___flmul@a+1
 10556  0188  0021               	movlb	1	; select bank1
 10557  0189  0830               	movf	_scale$2169^(0+128),w
 10558  018A  0020               	movlb	0	; select bank0
 10559  018B  00D6               	movwf	___flmul@a
 10560  018C  3183  23CD         	fcall	___flmul
 10561  018E  0020               	movlb	0	; select bank0
 10562  018F  0855               	movf	?___flmul+3,w
 10563  0190  00EF               	movwf	?_scale+3
 10564  0191  0854               	movf	?___flmul+2,w
 10565  0192  00EE               	movwf	?_scale+2
 10566  0193  0853               	movf	?___flmul+1,w
 10567  0194  00ED               	movwf	?_scale+1
 10568  0195  0852               	movf	?___flmul,w
 10569  0196  00EC               	movwf	?_scale
 10570  0197  0008               	return
 10571  0198                     l7092:	
 10572                           
 10573                           ;doprnt.c: 432: else if(scl > 10)
 10574  0198  0021               	movlb	1	; select bank1
 10575  0199  0834               	movf	scale@scl^(0+128),w
 10576  019A  3A80               	xorlw	128
 10577  019B  3E75               	addlw	-139
 10578  019C  1C03               	skipc
 10579  019D  2A17               	goto	l7098
 10580                           
 10581                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10582  019E  300A               	movlw	10
 10583  019F  00F2               	movwf	___awmod@divisor
 10584  01A0  3000               	movlw	0
 10585  01A1  00F3               	movwf	___awmod@divisor+1
 10586  01A2  0834               	movf	scale@scl^(0+128),w
 10587  01A3  00F4               	movwf	___awmod@dividend
 10588  01A4  01F5               	clrf	___awmod@dividend+1
 10589  01A5  1BF4               	btfsc	___awmod@dividend,7
 10590  01A6  03F5               	decf	___awmod@dividend+1,f
 10591  01A7  31AD  25CC  3180   	fcall	___awmod
 10592  01AA  0873               	movf	?___awmod+1,w
 10593  01AB  0085               	movwf	5
 10594  01AC  0872               	movf	?___awmod,w
 10595  01AD  0084               	movwf	4
 10596  01AE  3584               	lslf	4,f
 10597  01AF  0D85               	rlf	5,f
 10598  01B0  3584               	lslf	4,f
 10599  01B1  0D85               	rlf	5,f
 10600  01B2  3034               	movlw	low (__npowers_| (0+32768))
 10601  01B3  0784               	addwf	4,f
 10602  01B4  30B0               	movlw	high (__npowers_| (0+32768))
 10603  01B5  3D85               	addwfc	5,f
 10604  01B6  3F00               	moviw [0]fsr0
 10605  01B7  0021               	movlb	1	; select bank1
 10606  01B8  00A0               	movwf	??_scale^(0+128)
 10607  01B9  3F01               	moviw [1]fsr0
 10608  01BA  00A1               	movwf	(??_scale^(0+128)+1)
 10609  01BB  3F02               	moviw [2]fsr0
 10610  01BC  00A2               	movwf	(??_scale^(0+128)+2)
 10611  01BD  3F03               	moviw [3]fsr0
 10612  01BE  00A3               	movwf	(??_scale^(0+128)+3)
 10613  01BF  0823               	movf	(??_scale+3)^(0+128),w
 10614  01C0  0020               	movlb	0	; select bank0
 10615  01C1  00D5               	movwf	___flmul@b+3
 10616  01C2  0021               	movlb	1	; select bank1
 10617  01C3  0822               	movf	(??_scale+2)^(0+128),w
 10618  01C4  0020               	movlb	0	; select bank0
 10619  01C5  00D4               	movwf	___flmul@b+2
 10620  01C6  0021               	movlb	1	; select bank1
 10621  01C7  0821               	movf	(??_scale+1)^(0+128),w
 10622  01C8  0020               	movlb	0	; select bank0
 10623  01C9  00D3               	movwf	___flmul@b+1
 10624  01CA  0021               	movlb	1	; select bank1
 10625  01CB  0820               	movf	??_scale^(0+128),w
 10626  01CC  0020               	movlb	0	; select bank0
 10627  01CD  00D2               	movwf	___flmul@b
 10628  01CE  300A               	movlw	10
 10629  01CF  00A0               	movwf	___awdiv@divisor
 10630  01D0  3000               	movlw	0
 10631  01D1  00A1               	movwf	___awdiv@divisor+1
 10632  01D2  0021               	movlb	1	; select bank1
 10633  01D3  0834               	movf	scale@scl^(0+128),w
 10634  01D4  0020               	movlb	0	; select bank0
 10635  01D5  00A2               	movwf	___awdiv@dividend
 10636  01D6  01A3               	clrf	___awdiv@dividend+1
 10637  01D7  1BA2               	btfsc	___awdiv@dividend,7
 10638  01D8  03A3               	decf	___awdiv@dividend+1,f
 10639  01D9  31AE  26B2  3180   	fcall	___awdiv
 10640  01DC  0020               	movlb	0	; select bank0
 10641  01DD  0820               	movf	?___awdiv,w
 10642  01DE  0021               	movlb	1	; select bank1
 10643  01DF  00A4               	movwf	(??_scale+4)^(0+128)
 10644  01E0  0020               	movlb	0	; select bank0
 10645  01E1  0821               	movf	?___awdiv+1,w
 10646  01E2  0021               	movlb	1	; select bank1
 10647  01E3  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10648  01E4  35A4               	lslf	(??_scale+4)^(0+128),f
 10649  01E5  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10650  01E6  35A4               	lslf	(??_scale+4)^(0+128),f
 10651  01E7  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10652  01E8  0824               	movf	(??_scale+4)^(0+128),w
 10653  01E9  3E24               	addlw	36
 10654  01EA  00A6               	movwf	(??_scale+6)^(0+128)
 10655  01EB  3000               	movlw	0
 10656  01EC  3D25               	addwfc	(??_scale+5)^(0+128),w
 10657  01ED  00A7               	movwf	(??_scale+7)^(0+128)
 10658  01EE  3034               	movlw	low (__npowers_| (0+32768))
 10659  01EF  0726               	addwf	(??_scale+6)^(0+128),w
 10660  01F0  0084               	movwf	4
 10661  01F1  30B0               	movlw	high (__npowers_| (0+32768))
 10662  01F2  3D27               	addwfc	(??_scale+7)^(0+128),w
 10663  01F3  0085               	movwf	5
 10664  01F4  3F00               	moviw [0]fsr0
 10665  01F5  00A8               	movwf	(??_scale+8)^(0+128)
 10666  01F6  3F01               	moviw [1]fsr0
 10667  01F7  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10668  01F8  3F02               	moviw [2]fsr0
 10669  01F9  00AA               	movwf	((??_scale+8)^(0+128)+2)
 10670  01FA  3F03               	moviw [3]fsr0
 10671  01FB  00AB               	movwf	((??_scale+8)^(0+128)+3)
 10672  01FC  082B               	movf	(??_scale+11)^(0+128),w
 10673  01FD  0020               	movlb	0	; select bank0
 10674  01FE  00D9               	movwf	___flmul@a+3
 10675  01FF  0021               	movlb	1	; select bank1
 10676  0200  082A               	movf	(??_scale+10)^(0+128),w
 10677  0201  0020               	movlb	0	; select bank0
 10678  0202  00D8               	movwf	___flmul@a+2
 10679  0203  0021               	movlb	1	; select bank1
 10680  0204  0829               	movf	(??_scale+9)^(0+128),w
 10681  0205  0020               	movlb	0	; select bank0
 10682  0206  00D7               	movwf	___flmul@a+1
 10683  0207  0021               	movlb	1	; select bank1
 10684  0208  0828               	movf	(??_scale+8)^(0+128),w
 10685  0209  0020               	movlb	0	; select bank0
 10686  020A  00D6               	movwf	___flmul@a
 10687  020B  3183  23CD         	fcall	___flmul
 10688  020D  0020               	movlb	0	; select bank0
 10689  020E  0855               	movf	?___flmul+3,w
 10690  020F  00EF               	movwf	?_scale+3
 10691  0210  0854               	movf	?___flmul+2,w
 10692  0211  00EE               	movwf	?_scale+2
 10693  0212  0853               	movf	?___flmul+1,w
 10694  0213  00ED               	movwf	?_scale+1
 10695  0214  0852               	movf	?___flmul,w
 10696  0215  00EC               	movwf	?_scale
 10697  0216  0008               	return
 10698  0217                     l7098:	
 10699                           
 10700                           ;doprnt.c: 434: return _npowers_[scl];
 10701  0217  0021               	movlb	1	; select bank1
 10702  0218  0834               	movf	scale@scl^(0+128),w
 10703  0219  00A0               	movwf	??_scale^(0+128)
 10704  021A  01A1               	clrf	(??_scale^(0+128)+1)
 10705  021B  35A0               	lslf	??_scale^(0+128),f
 10706  021C  0DA1               	rlf	(??_scale^(0+128)+1),f
 10707  021D  35A0               	lslf	??_scale^(0+128),f
 10708  021E  0DA1               	rlf	(??_scale^(0+128)+1),f
 10709  021F  3034               	movlw	low (__npowers_| (0+32768))
 10710  0220  0720               	addwf	??_scale^(0+128),w
 10711  0221  0084               	movwf	4
 10712  0222  30B0               	movlw	high (__npowers_| (0+32768))
 10713  0223  3D21               	addwfc	(??_scale+1)^(0+128),w
 10714  0224  0085               	movwf	5
 10715  0225  3F00               	moviw [0]fsr0
 10716  0226  00A2               	movwf	(??_scale+2)^(0+128)
 10717  0227  3F01               	moviw [1]fsr0
 10718  0228  00A3               	movwf	((??_scale+2)^(0+128)+1)
 10719  0229  3F02               	moviw [2]fsr0
 10720  022A  00A4               	movwf	((??_scale+2)^(0+128)+2)
 10721  022B  3F03               	moviw [3]fsr0
 10722  022C  00A5               	movwf	((??_scale+2)^(0+128)+3)
 10723  022D  0825               	movf	(??_scale+5)^(0+128),w
 10724  022E  0020               	movlb	0	; select bank0
 10725  022F  00EF               	movwf	?_scale+3
 10726  0230  0021               	movlb	1	; select bank1
 10727  0231  0824               	movf	(??_scale+4)^(0+128),w
 10728  0232  0020               	movlb	0	; select bank0
 10729  0233  00EE               	movwf	?_scale+2
 10730  0234  0021               	movlb	1	; select bank1
 10731  0235  0823               	movf	(??_scale+3)^(0+128),w
 10732  0236  0020               	movlb	0	; select bank0
 10733  0237  00ED               	movwf	?_scale+1
 10734  0238  0021               	movlb	1	; select bank1
 10735  0239  0822               	movf	(??_scale+2)^(0+128),w
 10736  023A  0020               	movlb	0	; select bank0
 10737  023B  00EC               	movwf	?_scale
 10738  023C  0008               	return
 10739  023D                     l7102:	
 10740                           
 10741                           ;doprnt.c: 435: }
 10742                           ;doprnt.c: 436: if(scl>=110)
 10743  023D  0021               	movlb	1	; select bank1
 10744  023E  0834               	movf	scale@scl^(0+128),w
 10745  023F  3A80               	xorlw	128
 10746  0240  3E12               	addlw	-238
 10747  0241  1C03               	skipc
 10748  0242  2B28               	goto	l7110
 10749                           
 10750                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10751  0243  300A               	movlw	10
 10752  0244  0020               	movlb	0	; select bank0
 10753  0245  00A0               	movwf	___awdiv@divisor
 10754  0246  3000               	movlw	0
 10755  0247  00A1               	movwf	___awdiv@divisor+1
 10756  0248  0021               	movlb	1	; select bank1
 10757  0249  0834               	movf	scale@scl^(0+128),w
 10758  024A  00F4               	movwf	___awmod@dividend
 10759  024B  01F5               	clrf	___awmod@dividend+1
 10760  024C  1BF4               	btfsc	___awmod@dividend,7
 10761  024D  03F5               	decf	___awmod@dividend+1,f
 10762  024E  3064               	movlw	100
 10763  024F  00F2               	movwf	___awmod@divisor
 10764  0250  3000               	movlw	0
 10765  0251  00F3               	movwf	___awmod@divisor+1
 10766  0252  31AD  25CC  3180   	fcall	___awmod
 10767  0255  0873               	movf	?___awmod+1,w
 10768  0256  0020               	movlb	0	; select bank0
 10769  0257  00A3               	movwf	___awdiv@dividend+1
 10770  0258  0872               	movf	?___awmod,w
 10771  0259  00A2               	movwf	___awdiv@dividend
 10772  025A  31AE  26B2  3180   	fcall	___awdiv
 10773  025D  0020               	movlb	0	; select bank0
 10774  025E  0820               	movf	?___awdiv,w
 10775  025F  0021               	movlb	1	; select bank1
 10776  0260  00A0               	movwf	??_scale^(0+128)
 10777  0261  0020               	movlb	0	; select bank0
 10778  0262  0821               	movf	?___awdiv+1,w
 10779  0263  0021               	movlb	1	; select bank1
 10780  0264  00A1               	movwf	(??_scale^(0+128)+1)
 10781  0265  35A0               	lslf	??_scale^(0+128),f
 10782  0266  0DA1               	rlf	(??_scale^(0+128)+1),f
 10783  0267  35A0               	lslf	??_scale^(0+128),f
 10784  0268  0DA1               	rlf	(??_scale^(0+128)+1),f
 10785  0269  0820               	movf	??_scale^(0+128),w
 10786  026A  3E24               	addlw	36
 10787  026B  00A2               	movwf	(??_scale+2)^(0+128)
 10788  026C  3000               	movlw	0
 10789  026D  3D21               	addwfc	(??_scale+1)^(0+128),w
 10790  026E  00A3               	movwf	(??_scale+3)^(0+128)
 10791  026F  3000               	movlw	low (__powers_| (0+32768))
 10792  0270  0722               	addwf	(??_scale+2)^(0+128),w
 10793  0271  0084               	movwf	4
 10794  0272  30B0               	movlw	high (__powers_| (0+32768))
 10795  0273  3D23               	addwfc	(??_scale+3)^(0+128),w
 10796  0274  0085               	movwf	5
 10797  0275  3F00               	moviw [0]fsr0
 10798  0276  00A4               	movwf	(??_scale+4)^(0+128)
 10799  0277  3F01               	moviw [1]fsr0
 10800  0278  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10801  0279  3F02               	moviw [2]fsr0
 10802  027A  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10803  027B  3F03               	moviw [3]fsr0
 10804  027C  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10805  027D  0827               	movf	(??_scale+7)^(0+128),w
 10806  027E  0020               	movlb	0	; select bank0
 10807  027F  00D5               	movwf	___flmul@b+3
 10808  0280  0021               	movlb	1	; select bank1
 10809  0281  0826               	movf	(??_scale+6)^(0+128),w
 10810  0282  0020               	movlb	0	; select bank0
 10811  0283  00D4               	movwf	___flmul@b+2
 10812  0284  0021               	movlb	1	; select bank1
 10813  0285  0825               	movf	(??_scale+5)^(0+128),w
 10814  0286  0020               	movlb	0	; select bank0
 10815  0287  00D3               	movwf	___flmul@b+1
 10816  0288  0021               	movlb	1	; select bank1
 10817  0289  0824               	movf	(??_scale+4)^(0+128),w
 10818  028A  0020               	movlb	0	; select bank0
 10819  028B  00D2               	movwf	___flmul@b
 10820  028C  3064               	movlw	100
 10821  028D  00A0               	movwf	___awdiv@divisor
 10822  028E  3000               	movlw	0
 10823  028F  00A1               	movwf	___awdiv@divisor+1
 10824  0290  0021               	movlb	1	; select bank1
 10825  0291  0834               	movf	scale@scl^(0+128),w
 10826  0292  0020               	movlb	0	; select bank0
 10827  0293  00A2               	movwf	___awdiv@dividend
 10828  0294  01A3               	clrf	___awdiv@dividend+1
 10829  0295  1BA2               	btfsc	___awdiv@dividend,7
 10830  0296  03A3               	decf	___awdiv@dividend+1,f
 10831  0297  31AE  26B2  3180   	fcall	___awdiv
 10832  029A  0020               	movlb	0	; select bank0
 10833  029B  0820               	movf	?___awdiv,w
 10834  029C  0021               	movlb	1	; select bank1
 10835  029D  00A8               	movwf	(??_scale+8)^(0+128)
 10836  029E  0020               	movlb	0	; select bank0
 10837  029F  0821               	movf	?___awdiv+1,w
 10838  02A0  0021               	movlb	1	; select bank1
 10839  02A1  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10840  02A2  35A8               	lslf	(??_scale+8)^(0+128),f
 10841  02A3  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10842  02A4  35A8               	lslf	(??_scale+8)^(0+128),f
 10843  02A5  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10844  02A6  0828               	movf	(??_scale+8)^(0+128),w
 10845  02A7  3E48               	addlw	72
 10846  02A8  00AA               	movwf	(??_scale+10)^(0+128)
 10847  02A9  3000               	movlw	0
 10848  02AA  3D29               	addwfc	(??_scale+9)^(0+128),w
 10849  02AB  00AB               	movwf	(??_scale+11)^(0+128)
 10850  02AC  3000               	movlw	low (__powers_| (0+32768))
 10851  02AD  072A               	addwf	(??_scale+10)^(0+128),w
 10852  02AE  0084               	movwf	4
 10853  02AF  30B0               	movlw	high (__powers_| (0+32768))
 10854  02B0  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10855  02B1  0085               	movwf	5
 10856  02B2  3F00               	moviw [0]fsr0
 10857  02B3  00AC               	movwf	(??_scale+12)^(0+128)
 10858  02B4  3F01               	moviw [1]fsr0
 10859  02B5  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10860  02B6  3F02               	moviw [2]fsr0
 10861  02B7  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10862  02B8  3F03               	moviw [3]fsr0
 10863  02B9  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10864  02BA  082F               	movf	(??_scale+15)^(0+128),w
 10865  02BB  0020               	movlb	0	; select bank0
 10866  02BC  00D9               	movwf	___flmul@a+3
 10867  02BD  0021               	movlb	1	; select bank1
 10868  02BE  082E               	movf	(??_scale+14)^(0+128),w
 10869  02BF  0020               	movlb	0	; select bank0
 10870  02C0  00D8               	movwf	___flmul@a+2
 10871  02C1  0021               	movlb	1	; select bank1
 10872  02C2  082D               	movf	(??_scale+13)^(0+128),w
 10873  02C3  0020               	movlb	0	; select bank0
 10874  02C4  00D7               	movwf	___flmul@a+1
 10875  02C5  0021               	movlb	1	; select bank1
 10876  02C6  082C               	movf	(??_scale+12)^(0+128),w
 10877  02C7  0020               	movlb	0	; select bank0
 10878  02C8  00D6               	movwf	___flmul@a
 10879  02C9  3183  23CD  3180   	fcall	___flmul
 10880  02CC  0020               	movlb	0	; select bank0
 10881  02CD  0855               	movf	?___flmul+3,w
 10882  02CE  0021               	movlb	1	; select bank1
 10883  02CF  00B3               	movwf	(_scale$2169+3)^(0+128)
 10884  02D0  0020               	movlb	0	; select bank0
 10885  02D1  0854               	movf	?___flmul+2,w
 10886  02D2  0021               	movlb	1	; select bank1
 10887  02D3  00B2               	movwf	(_scale$2169+2)^(0+128)
 10888  02D4  0020               	movlb	0	; select bank0
 10889  02D5  0853               	movf	?___flmul+1,w
 10890  02D6  0021               	movlb	1	; select bank1
 10891  02D7  00B1               	movwf	(_scale$2169+1)^(0+128)
 10892  02D8  0020               	movlb	0	; select bank0
 10893  02D9  0852               	movf	?___flmul,w
 10894  02DA  0021               	movlb	1	; select bank1
 10895  02DB  00B0               	movwf	_scale$2169^(0+128)
 10896                           
 10897                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10898  02DC  300A               	movlw	10
 10899  02DD  00F2               	movwf	___awmod@divisor
 10900  02DE  3000               	movlw	0
 10901  02DF  00F3               	movwf	___awmod@divisor+1
 10902  02E0  0834               	movf	scale@scl^(0+128),w
 10903  02E1  00F4               	movwf	___awmod@dividend
 10904  02E2  01F5               	clrf	___awmod@dividend+1
 10905  02E3  1BF4               	btfsc	___awmod@dividend,7
 10906  02E4  03F5               	decf	___awmod@dividend+1,f
 10907  02E5  31AD  25CC  3180   	fcall	___awmod
 10908  02E8  0873               	movf	?___awmod+1,w
 10909  02E9  0085               	movwf	5
 10910  02EA  0872               	movf	?___awmod,w
 10911  02EB  0084               	movwf	4
 10912  02EC  3584               	lslf	4,f
 10913  02ED  0D85               	rlf	5,f
 10914  02EE  3584               	lslf	4,f
 10915  02EF  0D85               	rlf	5,f
 10916  02F0  3000               	movlw	low (__powers_| (0+32768))
 10917  02F1  0784               	addwf	4,f
 10918  02F2  30B0               	movlw	high (__powers_| (0+32768))
 10919  02F3  3D85               	addwfc	5,f
 10920  02F4  3F00               	moviw [0]fsr0
 10921  02F5  0021               	movlb	1	; select bank1
 10922  02F6  00A0               	movwf	??_scale^(0+128)
 10923  02F7  3F01               	moviw [1]fsr0
 10924  02F8  00A1               	movwf	(??_scale^(0+128)+1)
 10925  02F9  3F02               	moviw [2]fsr0
 10926  02FA  00A2               	movwf	(??_scale^(0+128)+2)
 10927  02FB  3F03               	moviw [3]fsr0
 10928  02FC  00A3               	movwf	(??_scale^(0+128)+3)
 10929  02FD  0823               	movf	(??_scale+3)^(0+128),w
 10930  02FE  0020               	movlb	0	; select bank0
 10931  02FF  00D5               	movwf	___flmul@b+3
 10932  0300  0021               	movlb	1	; select bank1
 10933  0301  0822               	movf	(??_scale+2)^(0+128),w
 10934  0302  0020               	movlb	0	; select bank0
 10935  0303  00D4               	movwf	___flmul@b+2
 10936  0304  0021               	movlb	1	; select bank1
 10937  0305  0821               	movf	(??_scale+1)^(0+128),w
 10938  0306  0020               	movlb	0	; select bank0
 10939  0307  00D3               	movwf	___flmul@b+1
 10940  0308  0021               	movlb	1	; select bank1
 10941  0309  0820               	movf	??_scale^(0+128),w
 10942  030A  0020               	movlb	0	; select bank0
 10943  030B  00D2               	movwf	___flmul@b
 10944  030C  0021               	movlb	1	; select bank1
 10945  030D  0833               	movf	(_scale$2169+3)^(0+128),w
 10946  030E  0020               	movlb	0	; select bank0
 10947  030F  00D9               	movwf	___flmul@a+3
 10948  0310  0021               	movlb	1	; select bank1
 10949  0311  0832               	movf	(_scale$2169+2)^(0+128),w
 10950  0312  0020               	movlb	0	; select bank0
 10951  0313  00D8               	movwf	___flmul@a+2
 10952  0314  0021               	movlb	1	; select bank1
 10953  0315  0831               	movf	(_scale$2169+1)^(0+128),w
 10954  0316  0020               	movlb	0	; select bank0
 10955  0317  00D7               	movwf	___flmul@a+1
 10956  0318  0021               	movlb	1	; select bank1
 10957  0319  0830               	movf	_scale$2169^(0+128),w
 10958  031A  0020               	movlb	0	; select bank0
 10959  031B  00D6               	movwf	___flmul@a
 10960  031C  3183  23CD         	fcall	___flmul
 10961  031E  0020               	movlb	0	; select bank0
 10962  031F  0855               	movf	?___flmul+3,w
 10963  0320  00EF               	movwf	?_scale+3
 10964  0321  0854               	movf	?___flmul+2,w
 10965  0322  00EE               	movwf	?_scale+2
 10966  0323  0853               	movf	?___flmul+1,w
 10967  0324  00ED               	movwf	?_scale+1
 10968  0325  0852               	movf	?___flmul,w
 10969  0326  00EC               	movwf	?_scale
 10970  0327  0008               	return
 10971  0328                     l7110:	
 10972                           
 10973                           ;doprnt.c: 438: else if(scl > 10)
 10974  0328  0021               	movlb	1	; select bank1
 10975  0329  0834               	movf	scale@scl^(0+128),w
 10976  032A  3A80               	xorlw	128
 10977  032B  3E75               	addlw	-139
 10978  032C  1C03               	skipc
 10979  032D  2BA7               	goto	l7116
 10980                           
 10981                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10982  032E  300A               	movlw	10
 10983  032F  00F2               	movwf	___awmod@divisor
 10984  0330  3000               	movlw	0
 10985  0331  00F3               	movwf	___awmod@divisor+1
 10986  0332  0834               	movf	scale@scl^(0+128),w
 10987  0333  00F4               	movwf	___awmod@dividend
 10988  0334  01F5               	clrf	___awmod@dividend+1
 10989  0335  1BF4               	btfsc	___awmod@dividend,7
 10990  0336  03F5               	decf	___awmod@dividend+1,f
 10991  0337  31AD  25CC  3180   	fcall	___awmod
 10992  033A  0873               	movf	?___awmod+1,w
 10993  033B  0085               	movwf	5
 10994  033C  0872               	movf	?___awmod,w
 10995  033D  0084               	movwf	4
 10996  033E  3584               	lslf	4,f
 10997  033F  0D85               	rlf	5,f
 10998  0340  3584               	lslf	4,f
 10999  0341  0D85               	rlf	5,f
 11000  0342  3000               	movlw	low (__powers_| (0+32768))
 11001  0343  0784               	addwf	4,f
 11002  0344  30B0               	movlw	high (__powers_| (0+32768))
 11003  0345  3D85               	addwfc	5,f
 11004  0346  3F00               	moviw [0]fsr0
 11005  0347  0021               	movlb	1	; select bank1
 11006  0348  00A0               	movwf	??_scale^(0+128)
 11007  0349  3F01               	moviw [1]fsr0
 11008  034A  00A1               	movwf	(??_scale^(0+128)+1)
 11009  034B  3F02               	moviw [2]fsr0
 11010  034C  00A2               	movwf	(??_scale^(0+128)+2)
 11011  034D  3F03               	moviw [3]fsr0
 11012  034E  00A3               	movwf	(??_scale^(0+128)+3)
 11013  034F  0823               	movf	(??_scale+3)^(0+128),w
 11014  0350  0020               	movlb	0	; select bank0
 11015  0351  00D5               	movwf	___flmul@b+3
 11016  0352  0021               	movlb	1	; select bank1
 11017  0353  0822               	movf	(??_scale+2)^(0+128),w
 11018  0354  0020               	movlb	0	; select bank0
 11019  0355  00D4               	movwf	___flmul@b+2
 11020  0356  0021               	movlb	1	; select bank1
 11021  0357  0821               	movf	(??_scale+1)^(0+128),w
 11022  0358  0020               	movlb	0	; select bank0
 11023  0359  00D3               	movwf	___flmul@b+1
 11024  035A  0021               	movlb	1	; select bank1
 11025  035B  0820               	movf	??_scale^(0+128),w
 11026  035C  0020               	movlb	0	; select bank0
 11027  035D  00D2               	movwf	___flmul@b
 11028  035E  300A               	movlw	10
 11029  035F  00A0               	movwf	___awdiv@divisor
 11030  0360  3000               	movlw	0
 11031  0361  00A1               	movwf	___awdiv@divisor+1
 11032  0362  0021               	movlb	1	; select bank1
 11033  0363  0834               	movf	scale@scl^(0+128),w
 11034  0364  0020               	movlb	0	; select bank0
 11035  0365  00A2               	movwf	___awdiv@dividend
 11036  0366  01A3               	clrf	___awdiv@dividend+1
 11037  0367  1BA2               	btfsc	___awdiv@dividend,7
 11038  0368  03A3               	decf	___awdiv@dividend+1,f
 11039  0369  31AE  26B2  3180   	fcall	___awdiv
 11040  036C  0020               	movlb	0	; select bank0
 11041  036D  0820               	movf	?___awdiv,w
 11042  036E  0021               	movlb	1	; select bank1
 11043  036F  00A4               	movwf	(??_scale+4)^(0+128)
 11044  0370  0020               	movlb	0	; select bank0
 11045  0371  0821               	movf	?___awdiv+1,w
 11046  0372  0021               	movlb	1	; select bank1
 11047  0373  00A5               	movwf	((??_scale+4)^(0+128)+1)
 11048  0374  35A4               	lslf	(??_scale+4)^(0+128),f
 11049  0375  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 11050  0376  35A4               	lslf	(??_scale+4)^(0+128),f
 11051  0377  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 11052  0378  0824               	movf	(??_scale+4)^(0+128),w
 11053  0379  3E24               	addlw	36
 11054  037A  00A6               	movwf	(??_scale+6)^(0+128)
 11055  037B  3000               	movlw	0
 11056  037C  3D25               	addwfc	(??_scale+5)^(0+128),w
 11057  037D  00A7               	movwf	(??_scale+7)^(0+128)
 11058  037E  3000               	movlw	low (__powers_| (0+32768))
 11059  037F  0726               	addwf	(??_scale+6)^(0+128),w
 11060  0380  0084               	movwf	4
 11061  0381  30B0               	movlw	high (__powers_| (0+32768))
 11062  0382  3D27               	addwfc	(??_scale+7)^(0+128),w
 11063  0383  0085               	movwf	5
 11064  0384  3F00               	moviw [0]fsr0
 11065  0385  00A8               	movwf	(??_scale+8)^(0+128)
 11066  0386  3F01               	moviw [1]fsr0
 11067  0387  00A9               	movwf	((??_scale+8)^(0+128)+1)
 11068  0388  3F02               	moviw [2]fsr0
 11069  0389  00AA               	movwf	((??_scale+8)^(0+128)+2)
 11070  038A  3F03               	moviw [3]fsr0
 11071  038B  00AB               	movwf	((??_scale+8)^(0+128)+3)
 11072  038C  082B               	movf	(??_scale+11)^(0+128),w
 11073  038D  0020               	movlb	0	; select bank0
 11074  038E  00D9               	movwf	___flmul@a+3
 11075  038F  0021               	movlb	1	; select bank1
 11076  0390  082A               	movf	(??_scale+10)^(0+128),w
 11077  0391  0020               	movlb	0	; select bank0
 11078  0392  00D8               	movwf	___flmul@a+2
 11079  0393  0021               	movlb	1	; select bank1
 11080  0394  0829               	movf	(??_scale+9)^(0+128),w
 11081  0395  0020               	movlb	0	; select bank0
 11082  0396  00D7               	movwf	___flmul@a+1
 11083  0397  0021               	movlb	1	; select bank1
 11084  0398  0828               	movf	(??_scale+8)^(0+128),w
 11085  0399  0020               	movlb	0	; select bank0
 11086  039A  00D6               	movwf	___flmul@a
 11087  039B  3183  23CD         	fcall	___flmul
 11088  039D  0020               	movlb	0	; select bank0
 11089  039E  0855               	movf	?___flmul+3,w
 11090  039F  00EF               	movwf	?_scale+3
 11091  03A0  0854               	movf	?___flmul+2,w
 11092  03A1  00EE               	movwf	?_scale+2
 11093  03A2  0853               	movf	?___flmul+1,w
 11094  03A3  00ED               	movwf	?_scale+1
 11095  03A4  0852               	movf	?___flmul,w
 11096  03A5  00EC               	movwf	?_scale
 11097  03A6  0008               	return
 11098  03A7                     l7116:	
 11099                           
 11100                           ;doprnt.c: 440: return _powers_[scl];
 11101  03A7  0021               	movlb	1	; select bank1
 11102  03A8  0834               	movf	scale@scl^(0+128),w
 11103  03A9  00A0               	movwf	??_scale^(0+128)
 11104  03AA  01A1               	clrf	(??_scale^(0+128)+1)
 11105  03AB  35A0               	lslf	??_scale^(0+128),f
 11106  03AC  0DA1               	rlf	(??_scale^(0+128)+1),f
 11107  03AD  35A0               	lslf	??_scale^(0+128),f
 11108  03AE  0DA1               	rlf	(??_scale^(0+128)+1),f
 11109  03AF  3000               	movlw	low (__powers_| (0+32768))
 11110  03B0  0720               	addwf	??_scale^(0+128),w
 11111  03B1  0084               	movwf	4
 11112  03B2  30B0               	movlw	high (__powers_| (0+32768))
 11113  03B3  3D21               	addwfc	(??_scale+1)^(0+128),w
 11114  03B4  0085               	movwf	5
 11115  03B5  3F00               	moviw [0]fsr0
 11116  03B6  00A2               	movwf	(??_scale+2)^(0+128)
 11117  03B7  3F01               	moviw [1]fsr0
 11118  03B8  00A3               	movwf	((??_scale+2)^(0+128)+1)
 11119  03B9  3F02               	moviw [2]fsr0
 11120  03BA  00A4               	movwf	((??_scale+2)^(0+128)+2)
 11121  03BB  3F03               	moviw [3]fsr0
 11122  03BC  00A5               	movwf	((??_scale+2)^(0+128)+3)
 11123  03BD  0825               	movf	(??_scale+5)^(0+128),w
 11124  03BE  0020               	movlb	0	; select bank0
 11125  03BF  00EF               	movwf	?_scale+3
 11126  03C0  0021               	movlb	1	; select bank1
 11127  03C1  0824               	movf	(??_scale+4)^(0+128),w
 11128  03C2  0020               	movlb	0	; select bank0
 11129  03C3  00EE               	movwf	?_scale+2
 11130  03C4  0021               	movlb	1	; select bank1
 11131  03C5  0823               	movf	(??_scale+3)^(0+128),w
 11132  03C6  0020               	movlb	0	; select bank0
 11133  03C7  00ED               	movwf	?_scale+1
 11134  03C8  0021               	movlb	1	; select bank1
 11135  03C9  0822               	movf	(??_scale+2)^(0+128),w
 11136  03CA  0020               	movlb	0	; select bank0
 11137  03CB  00EC               	movwf	?_scale
 11138  03CC  0008               	return
 11139  03CD                     __end_of_scale:	
 11140                           
 11141                           	psect	text9
 11142  2002                     __ptext9:	
 11143 ;; *************** function _isdigit *****************
 11144 ;; Defined at:
 11145 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11146 ;; Parameters:    Size  Location     Type
 11147 ;;  c               1    wreg     unsigned char 
 11148 ;; Auto vars:     Size  Location     Type
 11149 ;;  c               1    3[COMMON] unsigned char 
 11150 ;; Return value:  Size  Location     Type
 11151 ;;		None               void
 11152 ;; Registers used:
 11153 ;;		wreg, status,2, status,0
 11154 ;; Tracked objects:
 11155 ;;		On entry : 0/0
 11156 ;;		On exit  : 0/0
 11157 ;;		Unchanged: 0/0
 11158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11162 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11163 ;;Total ram usage:        2 bytes
 11164 ;; Hardware stack levels used:    1
 11165 ;; Hardware stack levels required when called:    2
 11166 ;; This function calls:
 11167 ;;		Nothing
 11168 ;; This function is called by:
 11169 ;;		_sprintf
 11170 ;; This function uses a non-reentrant model
 11171 ;;
 11172                           
 11173                           
 11174                           ;psect for function _isdigit
 11175  2002                     _isdigit:	
 11176                           
 11177                           ;incstack = 0
 11178                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11179                           ;isdigit@c stored from wreg
 11180  2002  00F3               	movwf	isdigit@c
 11181  2003  01F2               	clrf	_isdigit$1767
 11182  2004  303A               	movlw	58
 11183  2005  0273               	subwf	isdigit@c,w
 11184  2006  1803               	skipnc
 11185  2007  280E               	goto	l7128
 11186  2008  3030               	movlw	48
 11187  2009  0273               	subwf	isdigit@c,w
 11188  200A  1C03               	skipc
 11189  200B  280E               	goto	l7128
 11190  200C  01F2               	clrf	_isdigit$1767
 11191  200D  0AF2               	incf	_isdigit$1767,f
 11192  200E                     l7128:	
 11193  200E  0C72               	rrf	_isdigit$1767,w
 11194  200F  0008               	return
 11195  2010                     __end_of_isdigit:	
 11196                           
 11197                           	psect	text10
 11198  15F7                     __ptext10:	
 11199 ;; *************** function _fround *****************
 11200 ;; Defined at:
 11201 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  prec            1    wreg     unsigned char 
 11204 ;; Auto vars:     Size  Location     Type
 11205 ;;  prec            1   28[BANK1 ] unsigned char 
 11206 ;; Return value:  Size  Location     Type
 11207 ;;                  4   76[BANK0 ] unsigned char 
 11208 ;; Registers used:
 11209 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11210 ;; Tracked objects:
 11211 ;;		On entry : 0/0
 11212 ;;		On exit  : 0/0
 11213 ;;		Unchanged: 0/0
 11214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11216 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11217 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11218 ;;      Totals:         0       4      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11219 ;;Total ram usage:       33 bytes
 11220 ;; Hardware stack levels used:    1
 11221 ;; Hardware stack levels required when called:    4
 11222 ;; This function calls:
 11223 ;;		___awdiv
 11224 ;;		___awmod
 11225 ;;		___flmul
 11226 ;; This function is called by:
 11227 ;;		_sprintf
 11228 ;; This function uses a non-reentrant model
 11229 ;;
 11230                           
 11231                           
 11232                           ;psect for function _fround
 11233  15F7                     _fround:	
 11234                           
 11235                           ;incstack = 0
 11236                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11237                           ;fround@prec stored from wreg
 11238  15F7  0021               	movlb	1	; select bank1
 11239  15F8  00BC               	movwf	fround@prec^(0+128)
 11240                           
 11241                           ;doprnt.c: 413: if(prec>=110)
 11242  15F9  306E               	movlw	110
 11243  15FA  023C               	subwf	fround@prec^(0+128),w
 11244  15FB  1C03               	skipc
 11245  15FC  2F16               	goto	l7068
 11246                           
 11247                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11248  15FD  300A               	movlw	10
 11249  15FE  0020               	movlb	0	; select bank0
 11250  15FF  00A0               	movwf	___awdiv@divisor
 11251  1600  3000               	movlw	0
 11252  1601  00A1               	movwf	___awdiv@divisor+1
 11253  1602  0021               	movlb	1	; select bank1
 11254  1603  083C               	movf	fround@prec^(0+128),w
 11255  1604  00A0               	movwf	??_fround^(0+128)
 11256  1605  01A1               	clrf	(??_fround^(0+128)+1)
 11257  1606  0820               	movf	??_fround^(0+128),w
 11258  1607  00F4               	movwf	___awmod@dividend
 11259  1608  0821               	movf	(??_fround+1)^(0+128),w
 11260  1609  00F5               	movwf	___awmod@dividend+1
 11261  160A  3064               	movlw	100
 11262  160B  00F2               	movwf	___awmod@divisor
 11263  160C  3000               	movlw	0
 11264  160D  00F3               	movwf	___awmod@divisor+1
 11265  160E  31AD  25CC  3195   	fcall	___awmod
 11266  1611  0873               	movf	?___awmod+1,w
 11267  1612  0020               	movlb	0	; select bank0
 11268  1613  00A3               	movwf	___awdiv@dividend+1
 11269  1614  0872               	movf	?___awmod,w
 11270  1615  00A2               	movwf	___awdiv@dividend
 11271  1616  31AE  26B2  3195   	fcall	___awdiv
 11272  1619  0020               	movlb	0	; select bank0
 11273  161A  0820               	movf	?___awdiv,w
 11274  161B  0021               	movlb	1	; select bank1
 11275  161C  00A2               	movwf	(??_fround+2)^(0+128)
 11276  161D  0020               	movlb	0	; select bank0
 11277  161E  0821               	movf	?___awdiv+1,w
 11278  161F  0021               	movlb	1	; select bank1
 11279  1620  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11280  1621  35A2               	lslf	(??_fround+2)^(0+128),f
 11281  1622  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11282  1623  35A2               	lslf	(??_fround+2)^(0+128),f
 11283  1624  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11284  1625  0822               	movf	(??_fround+2)^(0+128),w
 11285  1626  3E24               	addlw	36
 11286  1627  00A4               	movwf	(??_fround+4)^(0+128)
 11287  1628  3000               	movlw	0
 11288  1629  3D23               	addwfc	(??_fround+3)^(0+128),w
 11289  162A  00A5               	movwf	(??_fround+5)^(0+128)
 11290  162B  3034               	movlw	low (__npowers_| (0+32768))
 11291  162C  0724               	addwf	(??_fround+4)^(0+128),w
 11292  162D  0084               	movwf	4
 11293  162E  30B0               	movlw	high (__npowers_| (0+32768))
 11294  162F  3D25               	addwfc	(??_fround+5)^(0+128),w
 11295  1630  0085               	movwf	5
 11296  1631  3F00               	moviw [0]fsr0
 11297  1632  00A6               	movwf	(??_fround+6)^(0+128)
 11298  1633  3F01               	moviw [1]fsr0
 11299  1634  00A7               	movwf	((??_fround+6)^(0+128)+1)
 11300  1635  3F02               	moviw [2]fsr0
 11301  1636  00A8               	movwf	((??_fround+6)^(0+128)+2)
 11302  1637  3F03               	moviw [3]fsr0
 11303  1638  00A9               	movwf	((??_fround+6)^(0+128)+3)
 11304  1639  0829               	movf	(??_fround+9)^(0+128),w
 11305  163A  0020               	movlb	0	; select bank0
 11306  163B  00D5               	movwf	___flmul@b+3
 11307  163C  0021               	movlb	1	; select bank1
 11308  163D  0828               	movf	(??_fround+8)^(0+128),w
 11309  163E  0020               	movlb	0	; select bank0
 11310  163F  00D4               	movwf	___flmul@b+2
 11311  1640  0021               	movlb	1	; select bank1
 11312  1641  0827               	movf	(??_fround+7)^(0+128),w
 11313  1642  0020               	movlb	0	; select bank0
 11314  1643  00D3               	movwf	___flmul@b+1
 11315  1644  0021               	movlb	1	; select bank1
 11316  1645  0826               	movf	(??_fround+6)^(0+128),w
 11317  1646  0020               	movlb	0	; select bank0
 11318  1647  00D2               	movwf	___flmul@b
 11319  1648  3064               	movlw	100
 11320  1649  00A0               	movwf	___awdiv@divisor
 11321  164A  3000               	movlw	0
 11322  164B  00A1               	movwf	___awdiv@divisor+1
 11323  164C  0021               	movlb	1	; select bank1
 11324  164D  083C               	movf	fround@prec^(0+128),w
 11325  164E  00AA               	movwf	(??_fround+10)^(0+128)
 11326  164F  01AB               	clrf	((??_fround+10)^(0+128)+1)
 11327  1650  082A               	movf	(??_fround+10)^(0+128),w
 11328  1651  0020               	movlb	0	; select bank0
 11329  1652  00A2               	movwf	___awdiv@dividend
 11330  1653  0021               	movlb	1	; select bank1
 11331  1654  082B               	movf	(??_fround+11)^(0+128),w
 11332  1655  0020               	movlb	0	; select bank0
 11333  1656  00A3               	movwf	___awdiv@dividend+1
 11334  1657  31AE  26B2  3195   	fcall	___awdiv
 11335  165A  0020               	movlb	0	; select bank0
 11336  165B  0820               	movf	?___awdiv,w
 11337  165C  0021               	movlb	1	; select bank1
 11338  165D  00AC               	movwf	(??_fround+12)^(0+128)
 11339  165E  0020               	movlb	0	; select bank0
 11340  165F  0821               	movf	?___awdiv+1,w
 11341  1660  0021               	movlb	1	; select bank1
 11342  1661  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11343  1662  35AC               	lslf	(??_fround+12)^(0+128),f
 11344  1663  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11345  1664  35AC               	lslf	(??_fround+12)^(0+128),f
 11346  1665  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11347  1666  082C               	movf	(??_fround+12)^(0+128),w
 11348  1667  3E48               	addlw	72
 11349  1668  00AE               	movwf	(??_fround+14)^(0+128)
 11350  1669  3000               	movlw	0
 11351  166A  3D2D               	addwfc	(??_fround+13)^(0+128),w
 11352  166B  00AF               	movwf	(??_fround+15)^(0+128)
 11353  166C  3034               	movlw	low (__npowers_| (0+32768))
 11354  166D  072E               	addwf	(??_fround+14)^(0+128),w
 11355  166E  0084               	movwf	4
 11356  166F  30B0               	movlw	high (__npowers_| (0+32768))
 11357  1670  3D2F               	addwfc	(??_fround+15)^(0+128),w
 11358  1671  0085               	movwf	5
 11359  1672  3F00               	moviw [0]fsr0
 11360  1673  00B0               	movwf	(??_fround+16)^(0+128)
 11361  1674  3F01               	moviw [1]fsr0
 11362  1675  00B1               	movwf	((??_fround+16)^(0+128)+1)
 11363  1676  3F02               	moviw [2]fsr0
 11364  1677  00B2               	movwf	((??_fround+16)^(0+128)+2)
 11365  1678  3F03               	moviw [3]fsr0
 11366  1679  00B3               	movwf	((??_fround+16)^(0+128)+3)
 11367  167A  0833               	movf	(??_fround+19)^(0+128),w
 11368  167B  0020               	movlb	0	; select bank0
 11369  167C  00D9               	movwf	___flmul@a+3
 11370  167D  0021               	movlb	1	; select bank1
 11371  167E  0832               	movf	(??_fround+18)^(0+128),w
 11372  167F  0020               	movlb	0	; select bank0
 11373  1680  00D8               	movwf	___flmul@a+2
 11374  1681  0021               	movlb	1	; select bank1
 11375  1682  0831               	movf	(??_fround+17)^(0+128),w
 11376  1683  0020               	movlb	0	; select bank0
 11377  1684  00D7               	movwf	___flmul@a+1
 11378  1685  0021               	movlb	1	; select bank1
 11379  1686  0830               	movf	(??_fround+16)^(0+128),w
 11380  1687  0020               	movlb	0	; select bank0
 11381  1688  00D6               	movwf	___flmul@a
 11382  1689  3183  23CD  3195   	fcall	___flmul
 11383  168C  0020               	movlb	0	; select bank0
 11384  168D  0855               	movf	?___flmul+3,w
 11385  168E  0021               	movlb	1	; select bank1
 11386  168F  00BB               	movwf	(_fround$2167+3)^(0+128)
 11387  1690  0020               	movlb	0	; select bank0
 11388  1691  0854               	movf	?___flmul+2,w
 11389  1692  0021               	movlb	1	; select bank1
 11390  1693  00BA               	movwf	(_fround$2167+2)^(0+128)
 11391  1694  0020               	movlb	0	; select bank0
 11392  1695  0853               	movf	?___flmul+1,w
 11393  1696  0021               	movlb	1	; select bank1
 11394  1697  00B9               	movwf	(_fround$2167+1)^(0+128)
 11395  1698  0020               	movlb	0	; select bank0
 11396  1699  0852               	movf	?___flmul,w
 11397  169A  0021               	movlb	1	; select bank1
 11398  169B  00B8               	movwf	_fround$2167^(0+128)
 11399                           
 11400                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11401  169C  300A               	movlw	10
 11402  169D  00F2               	movwf	___awmod@divisor
 11403  169E  3000               	movlw	0
 11404  169F  00F3               	movwf	___awmod@divisor+1
 11405  16A0  083C               	movf	fround@prec^(0+128),w
 11406  16A1  00A0               	movwf	??_fround^(0+128)
 11407  16A2  01A1               	clrf	(??_fround^(0+128)+1)
 11408  16A3  0820               	movf	??_fround^(0+128),w
 11409  16A4  00F4               	movwf	___awmod@dividend
 11410  16A5  0821               	movf	(??_fround+1)^(0+128),w
 11411  16A6  00F5               	movwf	___awmod@dividend+1
 11412  16A7  31AD  25CC  3195   	fcall	___awmod
 11413  16AA  0873               	movf	?___awmod+1,w
 11414  16AB  0085               	movwf	5
 11415  16AC  0872               	movf	?___awmod,w
 11416  16AD  0084               	movwf	4
 11417  16AE  3584               	lslf	4,f
 11418  16AF  0D85               	rlf	5,f
 11419  16B0  3584               	lslf	4,f
 11420  16B1  0D85               	rlf	5,f
 11421  16B2  3034               	movlw	low (__npowers_| (0+32768))
 11422  16B3  0784               	addwf	4,f
 11423  16B4  30B0               	movlw	high (__npowers_| (0+32768))
 11424  16B5  3D85               	addwfc	5,f
 11425  16B6  3F00               	moviw [0]fsr0
 11426  16B7  0021               	movlb	1	; select bank1
 11427  16B8  00A2               	movwf	(??_fround+2)^(0+128)
 11428  16B9  3F01               	moviw [1]fsr0
 11429  16BA  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11430  16BB  3F02               	moviw [2]fsr0
 11431  16BC  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11432  16BD  3F03               	moviw [3]fsr0
 11433  16BE  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11434  16BF  0825               	movf	(??_fround+5)^(0+128),w
 11435  16C0  0020               	movlb	0	; select bank0
 11436  16C1  00D5               	movwf	___flmul@b+3
 11437  16C2  0021               	movlb	1	; select bank1
 11438  16C3  0824               	movf	(??_fround+4)^(0+128),w
 11439  16C4  0020               	movlb	0	; select bank0
 11440  16C5  00D4               	movwf	___flmul@b+2
 11441  16C6  0021               	movlb	1	; select bank1
 11442  16C7  0823               	movf	(??_fround+3)^(0+128),w
 11443  16C8  0020               	movlb	0	; select bank0
 11444  16C9  00D3               	movwf	___flmul@b+1
 11445  16CA  0021               	movlb	1	; select bank1
 11446  16CB  0822               	movf	(??_fround+2)^(0+128),w
 11447  16CC  0020               	movlb	0	; select bank0
 11448  16CD  00D2               	movwf	___flmul@b
 11449  16CE  0021               	movlb	1	; select bank1
 11450  16CF  083B               	movf	(_fround$2167+3)^(0+128),w
 11451  16D0  0020               	movlb	0	; select bank0
 11452  16D1  00D9               	movwf	___flmul@a+3
 11453  16D2  0021               	movlb	1	; select bank1
 11454  16D3  083A               	movf	(_fround$2167+2)^(0+128),w
 11455  16D4  0020               	movlb	0	; select bank0
 11456  16D5  00D8               	movwf	___flmul@a+2
 11457  16D6  0021               	movlb	1	; select bank1
 11458  16D7  0839               	movf	(_fround$2167+1)^(0+128),w
 11459  16D8  0020               	movlb	0	; select bank0
 11460  16D9  00D7               	movwf	___flmul@a+1
 11461  16DA  0021               	movlb	1	; select bank1
 11462  16DB  0838               	movf	_fround$2167^(0+128),w
 11463  16DC  0020               	movlb	0	; select bank0
 11464  16DD  00D6               	movwf	___flmul@a
 11465  16DE  3183  23CD  3195   	fcall	___flmul
 11466  16E1  0020               	movlb	0	; select bank0
 11467  16E2  0855               	movf	?___flmul+3,w
 11468  16E3  0021               	movlb	1	; select bank1
 11469  16E4  00B7               	movwf	(_fround$2168+3)^(0+128)
 11470  16E5  0020               	movlb	0	; select bank0
 11471  16E6  0854               	movf	?___flmul+2,w
 11472  16E7  0021               	movlb	1	; select bank1
 11473  16E8  00B6               	movwf	(_fround$2168+2)^(0+128)
 11474  16E9  0020               	movlb	0	; select bank0
 11475  16EA  0853               	movf	?___flmul+1,w
 11476  16EB  0021               	movlb	1	; select bank1
 11477  16EC  00B5               	movwf	(_fround$2168+1)^(0+128)
 11478  16ED  0020               	movlb	0	; select bank0
 11479  16EE  0852               	movf	?___flmul,w
 11480  16EF  0021               	movlb	1	; select bank1
 11481  16F0  00B4               	movwf	_fround$2168^(0+128)
 11482                           
 11483                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11484  16F1  303F               	movlw	63
 11485  16F2  0020               	movlb	0	; select bank0
 11486  16F3  00D5               	movwf	___flmul@b+3
 11487  16F4  3000               	movlw	0
 11488  16F5  00D4               	movwf	___flmul@b+2
 11489  16F6  3000               	movlw	0
 11490  16F7  00D3               	movwf	___flmul@b+1
 11491  16F8  3000               	movlw	0
 11492  16F9  00D2               	movwf	___flmul@b
 11493  16FA  0021               	movlb	1	; select bank1
 11494  16FB  0837               	movf	(_fround$2168+3)^(0+128),w
 11495  16FC  0020               	movlb	0	; select bank0
 11496  16FD  00D9               	movwf	___flmul@a+3
 11497  16FE  0021               	movlb	1	; select bank1
 11498  16FF  0836               	movf	(_fround$2168+2)^(0+128),w
 11499  1700  0020               	movlb	0	; select bank0
 11500  1701  00D8               	movwf	___flmul@a+2
 11501  1702  0021               	movlb	1	; select bank1
 11502  1703  0835               	movf	(_fround$2168+1)^(0+128),w
 11503  1704  0020               	movlb	0	; select bank0
 11504  1705  00D7               	movwf	___flmul@a+1
 11505  1706  0021               	movlb	1	; select bank1
 11506  1707  0834               	movf	_fround$2168^(0+128),w
 11507  1708  0020               	movlb	0	; select bank0
 11508  1709  00D6               	movwf	___flmul@a
 11509  170A  3183  23CD         	fcall	___flmul
 11510  170C  0020               	movlb	0	; select bank0
 11511  170D  0855               	movf	?___flmul+3,w
 11512  170E  00EF               	movwf	?_fround+3
 11513  170F  0854               	movf	?___flmul+2,w
 11514  1710  00EE               	movwf	?_fround+2
 11515  1711  0853               	movf	?___flmul+1,w
 11516  1712  00ED               	movwf	?_fround+1
 11517  1713  0852               	movf	?___flmul,w
 11518  1714  00EC               	movwf	?_fround
 11519  1715  0008               	return
 11520  1716                     l7068:	
 11521                           
 11522                           ;doprnt.c: 415: else if(prec > 10)
 11523  1716  300B               	movlw	11
 11524  1717  0021               	movlb	1	; select bank1
 11525  1718  023C               	subwf	fround@prec^(0+128),w
 11526  1719  1C03               	skipc
 11527  171A  2FC6               	goto	l7076
 11528                           
 11529                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11530  171B  300A               	movlw	10
 11531  171C  00F2               	movwf	___awmod@divisor
 11532  171D  3000               	movlw	0
 11533  171E  00F3               	movwf	___awmod@divisor+1
 11534  171F  083C               	movf	fround@prec^(0+128),w
 11535  1720  00A0               	movwf	??_fround^(0+128)
 11536  1721  01A1               	clrf	(??_fround^(0+128)+1)
 11537  1722  0820               	movf	??_fround^(0+128),w
 11538  1723  00F4               	movwf	___awmod@dividend
 11539  1724  0821               	movf	(??_fround+1)^(0+128),w
 11540  1725  00F5               	movwf	___awmod@dividend+1
 11541  1726  31AD  25CC  3195   	fcall	___awmod
 11542  1729  0873               	movf	?___awmod+1,w
 11543  172A  0085               	movwf	5
 11544  172B  0872               	movf	?___awmod,w
 11545  172C  0084               	movwf	4
 11546  172D  3584               	lslf	4,f
 11547  172E  0D85               	rlf	5,f
 11548  172F  3584               	lslf	4,f
 11549  1730  0D85               	rlf	5,f
 11550  1731  3034               	movlw	low (__npowers_| (0+32768))
 11551  1732  0784               	addwf	4,f
 11552  1733  30B0               	movlw	high (__npowers_| (0+32768))
 11553  1734  3D85               	addwfc	5,f
 11554  1735  3F00               	moviw [0]fsr0
 11555  1736  0021               	movlb	1	; select bank1
 11556  1737  00A2               	movwf	(??_fround+2)^(0+128)
 11557  1738  3F01               	moviw [1]fsr0
 11558  1739  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11559  173A  3F02               	moviw [2]fsr0
 11560  173B  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11561  173C  3F03               	moviw [3]fsr0
 11562  173D  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11563  173E  0825               	movf	(??_fround+5)^(0+128),w
 11564  173F  0020               	movlb	0	; select bank0
 11565  1740  00D5               	movwf	___flmul@b+3
 11566  1741  0021               	movlb	1	; select bank1
 11567  1742  0824               	movf	(??_fround+4)^(0+128),w
 11568  1743  0020               	movlb	0	; select bank0
 11569  1744  00D4               	movwf	___flmul@b+2
 11570  1745  0021               	movlb	1	; select bank1
 11571  1746  0823               	movf	(??_fround+3)^(0+128),w
 11572  1747  0020               	movlb	0	; select bank0
 11573  1748  00D3               	movwf	___flmul@b+1
 11574  1749  0021               	movlb	1	; select bank1
 11575  174A  0822               	movf	(??_fround+2)^(0+128),w
 11576  174B  0020               	movlb	0	; select bank0
 11577  174C  00D2               	movwf	___flmul@b
 11578  174D  300A               	movlw	10
 11579  174E  00A0               	movwf	___awdiv@divisor
 11580  174F  3000               	movlw	0
 11581  1750  00A1               	movwf	___awdiv@divisor+1
 11582  1751  0021               	movlb	1	; select bank1
 11583  1752  083C               	movf	fround@prec^(0+128),w
 11584  1753  00A6               	movwf	(??_fround+6)^(0+128)
 11585  1754  01A7               	clrf	((??_fround+6)^(0+128)+1)
 11586  1755  0826               	movf	(??_fround+6)^(0+128),w
 11587  1756  0020               	movlb	0	; select bank0
 11588  1757  00A2               	movwf	___awdiv@dividend
 11589  1758  0021               	movlb	1	; select bank1
 11590  1759  0827               	movf	(??_fround+7)^(0+128),w
 11591  175A  0020               	movlb	0	; select bank0
 11592  175B  00A3               	movwf	___awdiv@dividend+1
 11593  175C  31AE  26B2  3195   	fcall	___awdiv
 11594  175F  0020               	movlb	0	; select bank0
 11595  1760  0820               	movf	?___awdiv,w
 11596  1761  0021               	movlb	1	; select bank1
 11597  1762  00A8               	movwf	(??_fround+8)^(0+128)
 11598  1763  0020               	movlb	0	; select bank0
 11599  1764  0821               	movf	?___awdiv+1,w
 11600  1765  0021               	movlb	1	; select bank1
 11601  1766  00A9               	movwf	((??_fround+8)^(0+128)+1)
 11602  1767  35A8               	lslf	(??_fround+8)^(0+128),f
 11603  1768  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11604  1769  35A8               	lslf	(??_fround+8)^(0+128),f
 11605  176A  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11606  176B  0828               	movf	(??_fround+8)^(0+128),w
 11607  176C  3E24               	addlw	36
 11608  176D  00AA               	movwf	(??_fround+10)^(0+128)
 11609  176E  3000               	movlw	0
 11610  176F  3D29               	addwfc	(??_fround+9)^(0+128),w
 11611  1770  00AB               	movwf	(??_fround+11)^(0+128)
 11612  1771  3034               	movlw	low (__npowers_| (0+32768))
 11613  1772  072A               	addwf	(??_fround+10)^(0+128),w
 11614  1773  0084               	movwf	4
 11615  1774  30B0               	movlw	high (__npowers_| (0+32768))
 11616  1775  3D2B               	addwfc	(??_fround+11)^(0+128),w
 11617  1776  0085               	movwf	5
 11618  1777  3F00               	moviw [0]fsr0
 11619  1778  00AC               	movwf	(??_fround+12)^(0+128)
 11620  1779  3F01               	moviw [1]fsr0
 11621  177A  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11622  177B  3F02               	moviw [2]fsr0
 11623  177C  00AE               	movwf	((??_fround+12)^(0+128)+2)
 11624  177D  3F03               	moviw [3]fsr0
 11625  177E  00AF               	movwf	((??_fround+12)^(0+128)+3)
 11626  177F  082F               	movf	(??_fround+15)^(0+128),w
 11627  1780  0020               	movlb	0	; select bank0
 11628  1781  00D9               	movwf	___flmul@a+3
 11629  1782  0021               	movlb	1	; select bank1
 11630  1783  082E               	movf	(??_fround+14)^(0+128),w
 11631  1784  0020               	movlb	0	; select bank0
 11632  1785  00D8               	movwf	___flmul@a+2
 11633  1786  0021               	movlb	1	; select bank1
 11634  1787  082D               	movf	(??_fround+13)^(0+128),w
 11635  1788  0020               	movlb	0	; select bank0
 11636  1789  00D7               	movwf	___flmul@a+1
 11637  178A  0021               	movlb	1	; select bank1
 11638  178B  082C               	movf	(??_fround+12)^(0+128),w
 11639  178C  0020               	movlb	0	; select bank0
 11640  178D  00D6               	movwf	___flmul@a
 11641  178E  3183  23CD  3195   	fcall	___flmul
 11642  1791  0020               	movlb	0	; select bank0
 11643  1792  0855               	movf	?___flmul+3,w
 11644  1793  0021               	movlb	1	; select bank1
 11645  1794  00BB               	movwf	(_fround$2167+3)^(0+128)
 11646  1795  0020               	movlb	0	; select bank0
 11647  1796  0854               	movf	?___flmul+2,w
 11648  1797  0021               	movlb	1	; select bank1
 11649  1798  00BA               	movwf	(_fround$2167+2)^(0+128)
 11650  1799  0020               	movlb	0	; select bank0
 11651  179A  0853               	movf	?___flmul+1,w
 11652  179B  0021               	movlb	1	; select bank1
 11653  179C  00B9               	movwf	(_fround$2167+1)^(0+128)
 11654  179D  0020               	movlb	0	; select bank0
 11655  179E  0852               	movf	?___flmul,w
 11656  179F  0021               	movlb	1	; select bank1
 11657  17A0  00B8               	movwf	_fround$2167^(0+128)
 11658                           
 11659                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11660  17A1  303F               	movlw	63
 11661  17A2  0020               	movlb	0	; select bank0
 11662  17A3  00D5               	movwf	___flmul@b+3
 11663  17A4  3000               	movlw	0
 11664  17A5  00D4               	movwf	___flmul@b+2
 11665  17A6  3000               	movlw	0
 11666  17A7  00D3               	movwf	___flmul@b+1
 11667  17A8  3000               	movlw	0
 11668  17A9  00D2               	movwf	___flmul@b
 11669  17AA  0021               	movlb	1	; select bank1
 11670  17AB  083B               	movf	(_fround$2167+3)^(0+128),w
 11671  17AC  0020               	movlb	0	; select bank0
 11672  17AD  00D9               	movwf	___flmul@a+3
 11673  17AE  0021               	movlb	1	; select bank1
 11674  17AF  083A               	movf	(_fround$2167+2)^(0+128),w
 11675  17B0  0020               	movlb	0	; select bank0
 11676  17B1  00D8               	movwf	___flmul@a+2
 11677  17B2  0021               	movlb	1	; select bank1
 11678  17B3  0839               	movf	(_fround$2167+1)^(0+128),w
 11679  17B4  0020               	movlb	0	; select bank0
 11680  17B5  00D7               	movwf	___flmul@a+1
 11681  17B6  0021               	movlb	1	; select bank1
 11682  17B7  0838               	movf	_fround$2167^(0+128),w
 11683  17B8  0020               	movlb	0	; select bank0
 11684  17B9  00D6               	movwf	___flmul@a
 11685  17BA  3183  23CD         	fcall	___flmul
 11686  17BC  0020               	movlb	0	; select bank0
 11687  17BD  0855               	movf	?___flmul+3,w
 11688  17BE  00EF               	movwf	?_fround+3
 11689  17BF  0854               	movf	?___flmul+2,w
 11690  17C0  00EE               	movwf	?_fround+2
 11691  17C1  0853               	movf	?___flmul+1,w
 11692  17C2  00ED               	movwf	?_fround+1
 11693  17C3  0852               	movf	?___flmul,w
 11694  17C4  00EC               	movwf	?_fround
 11695  17C5  0008               	return
 11696  17C6                     l7076:	
 11697                           
 11698                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11699  17C6  303F               	movlw	63
 11700  17C7  0020               	movlb	0	; select bank0
 11701  17C8  00D5               	movwf	___flmul@b+3
 11702  17C9  3000               	movlw	0
 11703  17CA  00D4               	movwf	___flmul@b+2
 11704  17CB  3000               	movlw	0
 11705  17CC  00D3               	movwf	___flmul@b+1
 11706  17CD  3000               	movlw	0
 11707  17CE  00D2               	movwf	___flmul@b
 11708  17CF  0021               	movlb	1	; select bank1
 11709  17D0  083C               	movf	fround@prec^(0+128),w
 11710  17D1  00A0               	movwf	??_fround^(0+128)
 11711  17D2  01A1               	clrf	(??_fround^(0+128)+1)
 11712  17D3  35A0               	lslf	??_fround^(0+128),f
 11713  17D4  0DA1               	rlf	(??_fround^(0+128)+1),f
 11714  17D5  35A0               	lslf	??_fround^(0+128),f
 11715  17D6  0DA1               	rlf	(??_fround^(0+128)+1),f
 11716  17D7  3034               	movlw	low (__npowers_| (0+32768))
 11717  17D8  0720               	addwf	??_fround^(0+128),w
 11718  17D9  0084               	movwf	4
 11719  17DA  30B0               	movlw	high (__npowers_| (0+32768))
 11720  17DB  3D21               	addwfc	(??_fround+1)^(0+128),w
 11721  17DC  0085               	movwf	5
 11722  17DD  3F00               	moviw [0]fsr0
 11723  17DE  00A2               	movwf	(??_fround+2)^(0+128)
 11724  17DF  3F01               	moviw [1]fsr0
 11725  17E0  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11726  17E1  3F02               	moviw [2]fsr0
 11727  17E2  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11728  17E3  3F03               	moviw [3]fsr0
 11729  17E4  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11730  17E5  0825               	movf	(??_fround+5)^(0+128),w
 11731  17E6  0020               	movlb	0	; select bank0
 11732  17E7  00D9               	movwf	___flmul@a+3
 11733  17E8  0021               	movlb	1	; select bank1
 11734  17E9  0824               	movf	(??_fround+4)^(0+128),w
 11735  17EA  0020               	movlb	0	; select bank0
 11736  17EB  00D8               	movwf	___flmul@a+2
 11737  17EC  0021               	movlb	1	; select bank1
 11738  17ED  0823               	movf	(??_fround+3)^(0+128),w
 11739  17EE  0020               	movlb	0	; select bank0
 11740  17EF  00D7               	movwf	___flmul@a+1
 11741  17F0  0021               	movlb	1	; select bank1
 11742  17F1  0822               	movf	(??_fround+2)^(0+128),w
 11743  17F2  0020               	movlb	0	; select bank0
 11744  17F3  00D6               	movwf	___flmul@a
 11745  17F4  3183  23CD         	fcall	___flmul
 11746  17F6  0020               	movlb	0	; select bank0
 11747  17F7  0855               	movf	?___flmul+3,w
 11748  17F8  00EF               	movwf	?_fround+3
 11749  17F9  0854               	movf	?___flmul+2,w
 11750  17FA  00EE               	movwf	?_fround+2
 11751  17FB  0853               	movf	?___flmul+1,w
 11752  17FC  00ED               	movwf	?_fround+1
 11753  17FD  0852               	movf	?___flmul,w
 11754  17FE  00EC               	movwf	?_fround
 11755  17FF  0008               	return
 11756  1800                     __end_of_fround:	
 11757                           
 11758                           	psect	text11
 11759  2DCC                     __ptext11:	
 11760 ;; *************** function ___awmod *****************
 11761 ;; Defined at:
 11762 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11763 ;; Parameters:    Size  Location     Type
 11764 ;;  divisor         2    2[COMMON] int 
 11765 ;;  dividend        2    4[COMMON] int 
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;  sign            1    8[COMMON] unsigned char 
 11768 ;;  counter         1    7[COMMON] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  2    2[COMMON] int 
 11771 ;; Registers used:
 11772 ;;		wreg, status,2, status,0
 11773 ;; Tracked objects:
 11774 ;;		On entry : 0/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11779 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11781 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11782 ;;Total ram usage:        7 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:    2
 11785 ;; This function calls:
 11786 ;;		Nothing
 11787 ;; This function is called by:
 11788 ;;		_fround
 11789 ;;		_scale
 11790 ;; This function uses a non-reentrant model
 11791 ;;
 11792                           
 11793                           
 11794                           ;psect for function ___awmod
 11795  2DCC                     ___awmod:	
 11796                           
 11797                           ;incstack = 0
 11798                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11799  2DCC  01F8               	clrf	___awmod@sign
 11800  2DCD  1FF5               	btfss	___awmod@dividend+1,7
 11801  2DCE  2DD6               	goto	l6678
 11802  2DCF  09F4               	comf	___awmod@dividend,f
 11803  2DD0  09F5               	comf	___awmod@dividend+1,f
 11804  2DD1  0AF4               	incf	___awmod@dividend,f
 11805  2DD2  1903               	skipnz
 11806  2DD3  0AF5               	incf	___awmod@dividend+1,f
 11807  2DD4  01F8               	clrf	___awmod@sign
 11808  2DD5  0AF8               	incf	___awmod@sign,f
 11809  2DD6                     l6678:	
 11810  2DD6  1FF3               	btfss	___awmod@divisor+1,7
 11811  2DD7  2DDD               	goto	l6682
 11812  2DD8  09F2               	comf	___awmod@divisor,f
 11813  2DD9  09F3               	comf	___awmod@divisor+1,f
 11814  2DDA  0AF2               	incf	___awmod@divisor,f
 11815  2DDB  1903               	skipnz
 11816  2DDC  0AF3               	incf	___awmod@divisor+1,f
 11817  2DDD                     l6682:	
 11818  2DDD  0872               	movf	___awmod@divisor,w
 11819  2DDE  0473               	iorwf	___awmod@divisor+1,w
 11820  2DDF  1903               	btfsc	3,2
 11821  2DE0  2E04               	goto	l6700
 11822  2DE1  01F7               	clrf	___awmod@counter
 11823  2DE2  0AF7               	incf	___awmod@counter,f
 11824  2DE3                     l6690:	
 11825  2DE3  1BF3               	btfsc	___awmod@divisor+1,7
 11826  2DE4  2DEF               	goto	l6692
 11827  2DE5  3001               	movlw	1
 11828  2DE6                     u8575:	
 11829  2DE6  35F2               	lslf	___awmod@divisor,f
 11830  2DE7  0DF3               	rlf	___awmod@divisor+1,f
 11831  2DE8  0B89               	decfsz	9,f
 11832  2DE9  2DE6               	goto	u8575
 11833  2DEA  3001               	movlw	1
 11834  2DEB  00F6               	movwf	??___awmod
 11835  2DEC  0876               	movf	??___awmod,w
 11836  2DED  07F7               	addwf	___awmod@counter,f
 11837  2DEE  2DE3               	goto	l6690
 11838  2DEF                     l6692:	
 11839  2DEF  0873               	movf	___awmod@divisor+1,w
 11840  2DF0  0275               	subwf	___awmod@dividend+1,w
 11841  2DF1  1D03               	skipz
 11842  2DF2  2DF5               	goto	u8595
 11843  2DF3  0872               	movf	___awmod@divisor,w
 11844  2DF4  0274               	subwf	___awmod@dividend,w
 11845  2DF5                     u8595:	
 11846  2DF5  1C03               	skipc
 11847  2DF6  2DFB               	goto	l6696
 11848  2DF7  0872               	movf	___awmod@divisor,w
 11849  2DF8  02F4               	subwf	___awmod@dividend,f
 11850  2DF9  0873               	movf	___awmod@divisor+1,w
 11851  2DFA  3BF5               	subwfb	___awmod@dividend+1,f
 11852  2DFB                     l6696:	
 11853  2DFB  3001               	movlw	1
 11854  2DFC                     u8605:	
 11855  2DFC  36F3               	lsrf	___awmod@divisor+1,f
 11856  2DFD  0CF2               	rrf	___awmod@divisor,f
 11857  2DFE  0B89               	decfsz	9,f
 11858  2DFF  2DFC               	goto	u8605
 11859  2E00  3001               	movlw	1
 11860  2E01  02F7               	subwf	___awmod@counter,f
 11861  2E02  1D03               	btfss	3,2
 11862  2E03  2DEF               	goto	l6692
 11863  2E04                     l6700:	
 11864  2E04  0878               	movf	___awmod@sign,w
 11865  2E05  1903               	btfsc	3,2
 11866  2E06  2E0C               	goto	l6704
 11867  2E07  09F4               	comf	___awmod@dividend,f
 11868  2E08  09F5               	comf	___awmod@dividend+1,f
 11869  2E09  0AF4               	incf	___awmod@dividend,f
 11870  2E0A  1903               	skipnz
 11871  2E0B  0AF5               	incf	___awmod@dividend+1,f
 11872  2E0C                     l6704:	
 11873  2E0C  0875               	movf	___awmod@dividend+1,w
 11874  2E0D  00F3               	movwf	?___awmod+1
 11875  2E0E  0874               	movf	___awmod@dividend,w
 11876  2E0F  00F2               	movwf	?___awmod
 11877  2E10  0008               	return
 11878  2E11                     __end_of___awmod:	
 11879                           
 11880                           	psect	text12
 11881  2EB2                     __ptext12:	
 11882 ;; *************** function ___awdiv *****************
 11883 ;; Defined at:
 11884 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;  divisor         2    0[BANK0 ] int 
 11887 ;;  dividend        2    2[BANK0 ] int 
 11888 ;; Auto vars:     Size  Location     Type
 11889 ;;  quotient        2    6[BANK0 ] int 
 11890 ;;  sign            1    5[BANK0 ] unsigned char 
 11891 ;;  counter         1    4[BANK0 ] unsigned char 
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  2    0[BANK0 ] int 
 11894 ;; Registers used:
 11895 ;;		wreg, status,2, status,0
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11901 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11902 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11903 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11904 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11905 ;;Total ram usage:        9 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:    2
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_fround
 11912 ;;		_scale
 11913 ;;		_sprintf
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           
 11918                           ;psect for function ___awdiv
 11919  2EB2                     ___awdiv:	
 11920                           
 11921                           ;incstack = 0
 11922                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11923  2EB2  0020               	movlb	0	; select bank0
 11924  2EB3  01A5               	clrf	___awdiv@sign
 11925  2EB4  1FA1               	btfss	___awdiv@divisor+1,7
 11926  2EB5  2EBD               	goto	l6634
 11927  2EB6  09A0               	comf	___awdiv@divisor,f
 11928  2EB7  09A1               	comf	___awdiv@divisor+1,f
 11929  2EB8  0AA0               	incf	___awdiv@divisor,f
 11930  2EB9  1903               	skipnz
 11931  2EBA  0AA1               	incf	___awdiv@divisor+1,f
 11932  2EBB  01A5               	clrf	___awdiv@sign
 11933  2EBC  0AA5               	incf	___awdiv@sign,f
 11934  2EBD                     l6634:	
 11935  2EBD  1FA3               	btfss	___awdiv@dividend+1,7
 11936  2EBE  2EC8               	goto	l6640
 11937  2EBF  09A2               	comf	___awdiv@dividend,f
 11938  2EC0  09A3               	comf	___awdiv@dividend+1,f
 11939  2EC1  0AA2               	incf	___awdiv@dividend,f
 11940  2EC2  1903               	skipnz
 11941  2EC3  0AA3               	incf	___awdiv@dividend+1,f
 11942  2EC4  3001               	movlw	1
 11943  2EC5  00F9               	movwf	??___awdiv
 11944  2EC6  0879               	movf	??___awdiv,w
 11945  2EC7  06A5               	xorwf	___awdiv@sign,f
 11946  2EC8                     l6640:	
 11947  2EC8  01A6               	clrf	___awdiv@quotient
 11948  2EC9  01A7               	clrf	___awdiv@quotient+1
 11949  2ECA  0820               	movf	___awdiv@divisor,w
 11950  2ECB  0421               	iorwf	___awdiv@divisor+1,w
 11951  2ECC  1903               	btfsc	3,2
 11952  2ECD  2EF7               	goto	l6662
 11953  2ECE  01A4               	clrf	___awdiv@counter
 11954  2ECF  0AA4               	incf	___awdiv@counter,f
 11955  2ED0                     l6650:	
 11956  2ED0  1BA1               	btfsc	___awdiv@divisor+1,7
 11957  2ED1  2EDC               	goto	l6652
 11958  2ED2  3001               	movlw	1
 11959  2ED3                     u8475:	
 11960  2ED3  35A0               	lslf	___awdiv@divisor,f
 11961  2ED4  0DA1               	rlf	___awdiv@divisor+1,f
 11962  2ED5  0B89               	decfsz	9,f
 11963  2ED6  2ED3               	goto	u8475
 11964  2ED7  3001               	movlw	1
 11965  2ED8  00F9               	movwf	??___awdiv
 11966  2ED9  0879               	movf	??___awdiv,w
 11967  2EDA  07A4               	addwf	___awdiv@counter,f
 11968  2EDB  2ED0               	goto	l6650
 11969  2EDC                     l6652:	
 11970  2EDC  3001               	movlw	1
 11971  2EDD                     u8495:	
 11972  2EDD  35A6               	lslf	___awdiv@quotient,f
 11973  2EDE  0DA7               	rlf	___awdiv@quotient+1,f
 11974  2EDF  0B89               	decfsz	9,f
 11975  2EE0  2EDD               	goto	u8495
 11976  2EE1  0821               	movf	___awdiv@divisor+1,w
 11977  2EE2  0223               	subwf	___awdiv@dividend+1,w
 11978  2EE3  1D03               	skipz
 11979  2EE4  2EE7               	goto	u8505
 11980  2EE5  0820               	movf	___awdiv@divisor,w
 11981  2EE6  0222               	subwf	___awdiv@dividend,w
 11982  2EE7                     u8505:	
 11983  2EE7  1C03               	skipc
 11984  2EE8  2EEE               	goto	l6658
 11985  2EE9  0820               	movf	___awdiv@divisor,w
 11986  2EEA  02A2               	subwf	___awdiv@dividend,f
 11987  2EEB  0821               	movf	___awdiv@divisor+1,w
 11988  2EEC  3BA3               	subwfb	___awdiv@dividend+1,f
 11989  2EED  1426               	bsf	___awdiv@quotient,0
 11990  2EEE                     l6658:	
 11991  2EEE  3001               	movlw	1
 11992  2EEF                     u8515:	
 11993  2EEF  36A1               	lsrf	___awdiv@divisor+1,f
 11994  2EF0  0CA0               	rrf	___awdiv@divisor,f
 11995  2EF1  0B89               	decfsz	9,f
 11996  2EF2  2EEF               	goto	u8515
 11997  2EF3  3001               	movlw	1
 11998  2EF4  02A4               	subwf	___awdiv@counter,f
 11999  2EF5  1D03               	btfss	3,2
 12000  2EF6  2EDC               	goto	l6652
 12001  2EF7                     l6662:	
 12002  2EF7  0825               	movf	___awdiv@sign,w
 12003  2EF8  1903               	btfsc	3,2
 12004  2EF9  2EFF               	goto	l6666
 12005  2EFA  09A6               	comf	___awdiv@quotient,f
 12006  2EFB  09A7               	comf	___awdiv@quotient+1,f
 12007  2EFC  0AA6               	incf	___awdiv@quotient,f
 12008  2EFD  1903               	skipnz
 12009  2EFE  0AA7               	incf	___awdiv@quotient+1,f
 12010  2EFF                     l6666:	
 12011  2EFF  0827               	movf	___awdiv@quotient+1,w
 12012  2F00  00A1               	movwf	?___awdiv+1
 12013  2F01  0826               	movf	___awdiv@quotient,w
 12014  2F02  00A0               	movwf	?___awdiv
 12015  2F03  0008               	return
 12016  2F04                     __end_of___awdiv:	
 12017                           
 12018                           	psect	text13
 12019  248D                     __ptext13:	
 12020 ;; *************** function __tdiv_to_l_ *****************
 12021 ;; Defined at:
 12022 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12023 ;; Parameters:    Size  Location     Type
 12024 ;;  f1              4    2[COMMON] float 
 12025 ;;  f2              4    6[COMMON] float 
 12026 ;; Auto vars:     Size  Location     Type
 12027 ;;  quot            4    4[BANK0 ] unsigned long 
 12028 ;;  exp1            1    9[BANK0 ] unsigned char 
 12029 ;;  cntr            1    8[BANK0 ] unsigned char 
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  4    2[COMMON] unsigned long 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12039 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12040 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12042 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12043 ;;Total ram usage:       18 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    2
 12046 ;; This function calls:
 12047 ;;		Nothing
 12048 ;; This function is called by:
 12049 ;;		_sprintf
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           
 12054                           ;psect for function __tdiv_to_l_
 12055  248D                     __tdiv_to_l_:	
 12056                           
 12057                           ;incstack = 0
 12058                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 12059  248D  0872               	movf	__tdiv_to_l_@f1,w
 12060  248E  0020               	movlb	0	; select bank0
 12061  248F  00A0               	movwf	??__tdiv_to_l_
 12062  2490  0873               	movf	__tdiv_to_l_@f1+1,w
 12063  2491  00A1               	movwf	??__tdiv_to_l_+1
 12064  2492  0874               	movf	__tdiv_to_l_@f1+2,w
 12065  2493  00A2               	movwf	??__tdiv_to_l_+2
 12066  2494  1003               	clrc
 12067  2495  0D21               	rlf	??__tdiv_to_l_+1,w
 12068  2496  0D22               	rlf	??__tdiv_to_l_+2,w
 12069  2497  00A3               	movwf	??__tdiv_to_l_+3
 12070  2498  0823               	movf	??__tdiv_to_l_+3,w
 12071  2499  00A9               	movwf	__tdiv_to_l_@exp1
 12072  249A  0829               	movf	__tdiv_to_l_@exp1,w
 12073  249B  1D03               	btfss	3,2
 12074  249C  2CA6               	goto	l7138
 12075  249D  3000               	movlw	0
 12076  249E  00F5               	movwf	?__tdiv_to_l_+3
 12077  249F  3000               	movlw	0
 12078  24A0  00F4               	movwf	?__tdiv_to_l_+2
 12079  24A1  3000               	movlw	0
 12080  24A2  00F3               	movwf	?__tdiv_to_l_+1
 12081  24A3  3000               	movlw	0
 12082  24A4  00F2               	movwf	?__tdiv_to_l_
 12083  24A5  0008               	return
 12084  24A6                     l7138:	
 12085  24A6  0876               	movf	__tdiv_to_l_@f2,w
 12086  24A7  00A0               	movwf	??__tdiv_to_l_
 12087  24A8  0877               	movf	__tdiv_to_l_@f2+1,w
 12088  24A9  00A1               	movwf	??__tdiv_to_l_+1
 12089  24AA  0878               	movf	__tdiv_to_l_@f2+2,w
 12090  24AB  00A2               	movwf	??__tdiv_to_l_+2
 12091  24AC  1003               	clrc
 12092  24AD  0D21               	rlf	??__tdiv_to_l_+1,w
 12093  24AE  0D22               	rlf	??__tdiv_to_l_+2,w
 12094  24AF  00A3               	movwf	??__tdiv_to_l_+3
 12095  24B0  0823               	movf	??__tdiv_to_l_+3,w
 12096  24B1  00A8               	movwf	__tdiv_to_l_@cntr
 12097  24B2  0828               	movf	__tdiv_to_l_@cntr,w
 12098  24B3  1D03               	btfss	3,2
 12099  24B4  2CBE               	goto	l1190
 12100  24B5  3000               	movlw	0
 12101  24B6  00F5               	movwf	?__tdiv_to_l_+3
 12102  24B7  3000               	movlw	0
 12103  24B8  00F4               	movwf	?__tdiv_to_l_+2
 12104  24B9  3000               	movlw	0
 12105  24BA  00F3               	movwf	?__tdiv_to_l_+1
 12106  24BB  3000               	movlw	0
 12107  24BC  00F2               	movwf	?__tdiv_to_l_
 12108  24BD  0008               	return
 12109  24BE                     l1190:	
 12110  24BE  17F3               	bsf	__tdiv_to_l_@f1+1,7
 12111  24BF  30FF               	movlw	255
 12112  24C0  05F2               	andwf	__tdiv_to_l_@f1,f
 12113  24C1  30FF               	movlw	255
 12114  24C2  05F3               	andwf	__tdiv_to_l_@f1+1,f
 12115  24C3  3000               	movlw	0
 12116  24C4  05F4               	andwf	__tdiv_to_l_@f1+2,f
 12117  24C5  17F7               	bsf	__tdiv_to_l_@f2+1,7
 12118  24C6  30FF               	movlw	255
 12119  24C7  05F6               	andwf	__tdiv_to_l_@f2,f
 12120  24C8  30FF               	movlw	255
 12121  24C9  05F7               	andwf	__tdiv_to_l_@f2+1,f
 12122  24CA  3000               	movlw	0
 12123  24CB  05F8               	andwf	__tdiv_to_l_@f2+2,f
 12124  24CC  3000               	movlw	0
 12125  24CD  00A7               	movwf	__tdiv_to_l_@quot+3
 12126  24CE  3000               	movlw	0
 12127  24CF  00A6               	movwf	__tdiv_to_l_@quot+2
 12128  24D0  3000               	movlw	0
 12129  24D1  00A5               	movwf	__tdiv_to_l_@quot+1
 12130  24D2  3000               	movlw	0
 12131  24D3  00A4               	movwf	__tdiv_to_l_@quot
 12132  24D4  307F               	movlw	127
 12133  24D5  02A9               	subwf	__tdiv_to_l_@exp1,f
 12134  24D6  3098               	movlw	152
 12135  24D7  0728               	addwf	__tdiv_to_l_@cntr,w
 12136  24D8  00A0               	movwf	??__tdiv_to_l_
 12137  24D9  0820               	movf	??__tdiv_to_l_,w
 12138  24DA  02A9               	subwf	__tdiv_to_l_@exp1,f
 12139  24DB  3018               	movlw	24
 12140  24DC  00A0               	movwf	??__tdiv_to_l_
 12141  24DD  0820               	movf	??__tdiv_to_l_,w
 12142  24DE  00A8               	movwf	__tdiv_to_l_@cntr
 12143  24DF                     l7152:	
 12144  24DF  3001               	movlw	1
 12145  24E0                     u9455:	
 12146  24E0  35A4               	lslf	__tdiv_to_l_@quot,f
 12147  24E1  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12148  24E2  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12149  24E3  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12150  24E4  0B89               	decfsz	9,f
 12151  24E5  2CE0               	goto	u9455
 12152  24E6  0878               	movf	__tdiv_to_l_@f2+2,w
 12153  24E7  0274               	subwf	__tdiv_to_l_@f1+2,w
 12154  24E8  1D03               	skipz
 12155  24E9  2CF0               	goto	u9465
 12156  24EA  0877               	movf	__tdiv_to_l_@f2+1,w
 12157  24EB  0273               	subwf	__tdiv_to_l_@f1+1,w
 12158  24EC  1D03               	skipz
 12159  24ED  2CF0               	goto	u9465
 12160  24EE  0876               	movf	__tdiv_to_l_@f2,w
 12161  24EF  0272               	subwf	__tdiv_to_l_@f1,w
 12162  24F0                     u9465:	
 12163  24F0  1C03               	skipc
 12164  24F1  2CF9               	goto	l7160
 12165  24F2  0876               	movf	__tdiv_to_l_@f2,w
 12166  24F3  02F2               	subwf	__tdiv_to_l_@f1,f
 12167  24F4  0877               	movf	__tdiv_to_l_@f2+1,w
 12168  24F5  3BF3               	subwfb	__tdiv_to_l_@f1+1,f
 12169  24F6  0878               	movf	__tdiv_to_l_@f2+2,w
 12170  24F7  3BF4               	subwfb	__tdiv_to_l_@f1+2,f
 12171  24F8  1424               	bsf	__tdiv_to_l_@quot,0
 12172  24F9                     l7160:	
 12173  24F9  3001               	movlw	1
 12174  24FA                     u9475:	
 12175  24FA  35F2               	lslf	__tdiv_to_l_@f1,f
 12176  24FB  0DF3               	rlf	__tdiv_to_l_@f1+1,f
 12177  24FC  0DF4               	rlf	__tdiv_to_l_@f1+2,f
 12178  24FD  0B89               	decfsz	9,f
 12179  24FE  2CFA               	goto	u9475
 12180  24FF  3001               	movlw	1
 12181  2500  02A8               	subwf	__tdiv_to_l_@cntr,f
 12182  2501  1D03               	btfss	3,2
 12183  2502  2CDF               	goto	l7152
 12184  2503  1FA9               	btfss	__tdiv_to_l_@exp1,7
 12185  2504  2D21               	goto	l7172
 12186  2505  0829               	movf	__tdiv_to_l_@exp1,w
 12187  2506  3A80               	xorlw	128
 12188  2507  3E97               	addlw	151
 12189  2508  1803               	skipnc
 12190  2509  2D13               	goto	l7170
 12191  250A  3000               	movlw	0
 12192  250B  00F5               	movwf	?__tdiv_to_l_+3
 12193  250C  3000               	movlw	0
 12194  250D  00F4               	movwf	?__tdiv_to_l_+2
 12195  250E  3000               	movlw	0
 12196  250F  00F3               	movwf	?__tdiv_to_l_+1
 12197  2510  3000               	movlw	0
 12198  2511  00F2               	movwf	?__tdiv_to_l_
 12199  2512  0008               	return
 12200  2513                     l7170:	
 12201  2513  3001               	movlw	1
 12202  2514                     u9515:	
 12203  2514  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 12204  2515  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 12205  2516  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 12206  2517  0CA4               	rrf	__tdiv_to_l_@quot,f
 12207  2518  0B89               	decfsz	9,f
 12208  2519  2D14               	goto	u9515
 12209  251A  3001               	movlw	1
 12210  251B  00A0               	movwf	??__tdiv_to_l_
 12211  251C  0820               	movf	??__tdiv_to_l_,w
 12212  251D  07A9               	addwf	__tdiv_to_l_@exp1,f
 12213  251E  1903               	btfsc	3,2
 12214  251F  2D3A               	goto	l7180
 12215  2520  2D13               	goto	l7170
 12216  2521                     l7172:	
 12217  2521  3018               	movlw	24
 12218  2522  0229               	subwf	__tdiv_to_l_@exp1,w
 12219  2523  1C03               	skipc
 12220  2524  2D37               	goto	l1200
 12221  2525  3000               	movlw	0
 12222  2526  00F5               	movwf	?__tdiv_to_l_+3
 12223  2527  3000               	movlw	0
 12224  2528  00F4               	movwf	?__tdiv_to_l_+2
 12225  2529  3000               	movlw	0
 12226  252A  00F3               	movwf	?__tdiv_to_l_+1
 12227  252B  3000               	movlw	0
 12228  252C  00F2               	movwf	?__tdiv_to_l_
 12229  252D  0008               	return
 12230  252E                     l7178:	
 12231  252E  3001               	movlw	1
 12232  252F                     u9545:	
 12233  252F  35A4               	lslf	__tdiv_to_l_@quot,f
 12234  2530  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12235  2531  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12236  2532  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12237  2533  0B89               	decfsz	9,f
 12238  2534  2D2F               	goto	u9545
 12239  2535  3001               	movlw	1
 12240  2536  02A9               	subwf	__tdiv_to_l_@exp1,f
 12241  2537                     l1200:	
 12242  2537  0829               	movf	__tdiv_to_l_@exp1,w
 12243  2538  1D03               	btfss	3,2
 12244  2539  2D2E               	goto	l7178
 12245  253A                     l7180:	
 12246  253A  0827               	movf	__tdiv_to_l_@quot+3,w
 12247  253B  00F5               	movwf	?__tdiv_to_l_+3
 12248  253C  0826               	movf	__tdiv_to_l_@quot+2,w
 12249  253D  00F4               	movwf	?__tdiv_to_l_+2
 12250  253E  0825               	movf	__tdiv_to_l_@quot+1,w
 12251  253F  00F3               	movwf	?__tdiv_to_l_+1
 12252  2540  0824               	movf	__tdiv_to_l_@quot,w
 12253  2541  00F2               	movwf	?__tdiv_to_l_
 12254  2542  0008               	return
 12255  2543                     __end_of__tdiv_to_l_:	
 12256                           
 12257                           	psect	text14
 12258  2543                     __ptext14:	
 12259 ;; *************** function __div_to_l_ *****************
 12260 ;; Defined at:
 12261 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;  f1              4    2[COMMON] unsigned long 
 12264 ;;  f2              4    6[COMMON] unsigned long 
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;  quot            4    5[BANK0 ] unsigned long 
 12267 ;;  exp1            1   10[BANK0 ] unsigned char 
 12268 ;;  cntr            1    9[BANK0 ] unsigned char 
 12269 ;; Return value:  Size  Location     Type
 12270 ;;                  4    2[COMMON] unsigned long 
 12271 ;; Registers used:
 12272 ;;		wreg, status,2, status,0
 12273 ;; Tracked objects:
 12274 ;;		On entry : 0/0
 12275 ;;		On exit  : 0/0
 12276 ;;		Unchanged: 0/0
 12277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12278 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12279 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12280 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12281 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12282 ;;Total ram usage:       19 bytes
 12283 ;; Hardware stack levels used:    1
 12284 ;; Hardware stack levels required when called:    2
 12285 ;; This function calls:
 12286 ;;		Nothing
 12287 ;; This function is called by:
 12288 ;;		_sprintf
 12289 ;; This function uses a non-reentrant model
 12290 ;;
 12291                           
 12292                           
 12293                           ;psect for function __div_to_l_
 12294  2543                     __div_to_l_:	
 12295                           
 12296                           ;incstack = 0
 12297                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 12298  2543  0872               	movf	__div_to_l_@f1,w
 12299  2544  0020               	movlb	0	; select bank0
 12300  2545  00A0               	movwf	??__div_to_l_
 12301  2546  0873               	movf	__div_to_l_@f1+1,w
 12302  2547  00A1               	movwf	??__div_to_l_+1
 12303  2548  0874               	movf	__div_to_l_@f1+2,w
 12304  2549  00A2               	movwf	??__div_to_l_+2
 12305  254A  0875               	movf	__div_to_l_@f1+3,w
 12306  254B  00A3               	movwf	??__div_to_l_+3
 12307  254C  1003               	clrc
 12308  254D  0D22               	rlf	??__div_to_l_+2,w
 12309  254E  0D23               	rlf	??__div_to_l_+3,w
 12310  254F  00A4               	movwf	??__div_to_l_+4
 12311  2550  0824               	movf	??__div_to_l_+4,w
 12312  2551  00AA               	movwf	__div_to_l_@exp1
 12313  2552  082A               	movf	__div_to_l_@exp1,w
 12314  2553  1D03               	btfss	3,2
 12315  2554  2D5E               	goto	l7190
 12316  2555  3000               	movlw	0
 12317  2556  00F5               	movwf	?__div_to_l_+3
 12318  2557  3000               	movlw	0
 12319  2558  00F4               	movwf	?__div_to_l_+2
 12320  2559  3000               	movlw	0
 12321  255A  00F3               	movwf	?__div_to_l_+1
 12322  255B  3000               	movlw	0
 12323  255C  00F2               	movwf	?__div_to_l_
 12324  255D  0008               	return
 12325  255E                     l7190:	
 12326  255E  0876               	movf	__div_to_l_@f2,w
 12327  255F  00A0               	movwf	??__div_to_l_
 12328  2560  0877               	movf	__div_to_l_@f2+1,w
 12329  2561  00A1               	movwf	??__div_to_l_+1
 12330  2562  0878               	movf	__div_to_l_@f2+2,w
 12331  2563  00A2               	movwf	??__div_to_l_+2
 12332  2564  0879               	movf	__div_to_l_@f2+3,w
 12333  2565  00A3               	movwf	??__div_to_l_+3
 12334  2566  1003               	clrc
 12335  2567  0D22               	rlf	??__div_to_l_+2,w
 12336  2568  0D23               	rlf	??__div_to_l_+3,w
 12337  2569  00A4               	movwf	??__div_to_l_+4
 12338  256A  0824               	movf	??__div_to_l_+4,w
 12339  256B  00A9               	movwf	__div_to_l_@cntr
 12340  256C  0829               	movf	__div_to_l_@cntr,w
 12341  256D  1D03               	btfss	3,2
 12342  256E  2D78               	goto	l1148
 12343  256F  3000               	movlw	0
 12344  2570  00F5               	movwf	?__div_to_l_+3
 12345  2571  3000               	movlw	0
 12346  2572  00F4               	movwf	?__div_to_l_+2
 12347  2573  3000               	movlw	0
 12348  2574  00F3               	movwf	?__div_to_l_+1
 12349  2575  3000               	movlw	0
 12350  2576  00F2               	movwf	?__div_to_l_
 12351  2577  0008               	return
 12352  2578                     l1148:	
 12353  2578  17F4               	bsf	__div_to_l_@f1+2,7
 12354  2579  30FF               	movlw	255
 12355  257A  05F2               	andwf	__div_to_l_@f1,f
 12356  257B  30FF               	movlw	255
 12357  257C  05F3               	andwf	__div_to_l_@f1+1,f
 12358  257D  30FF               	movlw	255
 12359  257E  05F4               	andwf	__div_to_l_@f1+2,f
 12360  257F  3000               	movlw	0
 12361  2580  05F5               	andwf	__div_to_l_@f1+3,f
 12362  2581  17F8               	bsf	__div_to_l_@f2+2,7
 12363  2582  30FF               	movlw	255
 12364  2583  05F6               	andwf	__div_to_l_@f2,f
 12365  2584  30FF               	movlw	255
 12366  2585  05F7               	andwf	__div_to_l_@f2+1,f
 12367  2586  30FF               	movlw	255
 12368  2587  05F8               	andwf	__div_to_l_@f2+2,f
 12369  2588  3000               	movlw	0
 12370  2589  05F9               	andwf	__div_to_l_@f2+3,f
 12371  258A  3000               	movlw	0
 12372  258B  00A8               	movwf	__div_to_l_@quot+3
 12373  258C  3000               	movlw	0
 12374  258D  00A7               	movwf	__div_to_l_@quot+2
 12375  258E  3000               	movlw	0
 12376  258F  00A6               	movwf	__div_to_l_@quot+1
 12377  2590  3000               	movlw	0
 12378  2591  00A5               	movwf	__div_to_l_@quot
 12379  2592  307F               	movlw	127
 12380  2593  02AA               	subwf	__div_to_l_@exp1,f
 12381  2594  30A0               	movlw	160
 12382  2595  0729               	addwf	__div_to_l_@cntr,w
 12383  2596  00A0               	movwf	??__div_to_l_
 12384  2597  0820               	movf	??__div_to_l_,w
 12385  2598  02AA               	subwf	__div_to_l_@exp1,f
 12386  2599  3020               	movlw	32
 12387  259A  00A0               	movwf	??__div_to_l_
 12388  259B  0820               	movf	??__div_to_l_,w
 12389  259C  00A9               	movwf	__div_to_l_@cntr
 12390  259D                     l7204:	
 12391  259D  3001               	movlw	1
 12392  259E                     u9585:	
 12393  259E  35A5               	lslf	__div_to_l_@quot,f
 12394  259F  0DA6               	rlf	__div_to_l_@quot+1,f
 12395  25A0  0DA7               	rlf	__div_to_l_@quot+2,f
 12396  25A1  0DA8               	rlf	__div_to_l_@quot+3,f
 12397  25A2  0B89               	decfsz	9,f
 12398  25A3  2D9E               	goto	u9585
 12399  25A4  0879               	movf	__div_to_l_@f2+3,w
 12400  25A5  0275               	subwf	__div_to_l_@f1+3,w
 12401  25A6  1D03               	skipz
 12402  25A7  2DB2               	goto	u9595
 12403  25A8  0878               	movf	__div_to_l_@f2+2,w
 12404  25A9  0274               	subwf	__div_to_l_@f1+2,w
 12405  25AA  1D03               	skipz
 12406  25AB  2DB2               	goto	u9595
 12407  25AC  0877               	movf	__div_to_l_@f2+1,w
 12408  25AD  0273               	subwf	__div_to_l_@f1+1,w
 12409  25AE  1D03               	skipz
 12410  25AF  2DB2               	goto	u9595
 12411  25B0  0876               	movf	__div_to_l_@f2,w
 12412  25B1  0272               	subwf	__div_to_l_@f1,w
 12413  25B2                     u9595:	
 12414  25B2  1C03               	skipc
 12415  25B3  2DBD               	goto	l7212
 12416  25B4  0876               	movf	__div_to_l_@f2,w
 12417  25B5  02F2               	subwf	__div_to_l_@f1,f
 12418  25B6  0877               	movf	__div_to_l_@f2+1,w
 12419  25B7  3BF3               	subwfb	__div_to_l_@f1+1,f
 12420  25B8  0878               	movf	__div_to_l_@f2+2,w
 12421  25B9  3BF4               	subwfb	__div_to_l_@f1+2,f
 12422  25BA  0879               	movf	__div_to_l_@f2+3,w
 12423  25BB  3BF5               	subwfb	__div_to_l_@f1+3,f
 12424  25BC  1425               	bsf	__div_to_l_@quot,0
 12425  25BD                     l7212:	
 12426  25BD  3001               	movlw	1
 12427  25BE                     u9605:	
 12428  25BE  35F2               	lslf	__div_to_l_@f1,f
 12429  25BF  0DF3               	rlf	__div_to_l_@f1+1,f
 12430  25C0  0DF4               	rlf	__div_to_l_@f1+2,f
 12431  25C1  0DF5               	rlf	__div_to_l_@f1+3,f
 12432  25C2  0B89               	decfsz	9,f
 12433  25C3  2DBE               	goto	u9605
 12434  25C4  3001               	movlw	1
 12435  25C5  02A9               	subwf	__div_to_l_@cntr,f
 12436  25C6  1D03               	btfss	3,2
 12437  25C7  2D9D               	goto	l7204
 12438  25C8  1FAA               	btfss	__div_to_l_@exp1,7
 12439  25C9  2DE6               	goto	l7224
 12440  25CA  082A               	movf	__div_to_l_@exp1,w
 12441  25CB  3A80               	xorlw	128
 12442  25CC  3E9F               	addlw	159
 12443  25CD  1803               	skipnc
 12444  25CE  2DD8               	goto	l7222
 12445  25CF  3000               	movlw	0
 12446  25D0  00F5               	movwf	?__div_to_l_+3
 12447  25D1  3000               	movlw	0
 12448  25D2  00F4               	movwf	?__div_to_l_+2
 12449  25D3  3000               	movlw	0
 12450  25D4  00F3               	movwf	?__div_to_l_+1
 12451  25D5  3000               	movlw	0
 12452  25D6  00F2               	movwf	?__div_to_l_
 12453  25D7  0008               	return
 12454  25D8                     l7222:	
 12455  25D8  3001               	movlw	1
 12456  25D9                     u9645:	
 12457  25D9  36A8               	lsrf	__div_to_l_@quot+3,f
 12458  25DA  0CA7               	rrf	__div_to_l_@quot+2,f
 12459  25DB  0CA6               	rrf	__div_to_l_@quot+1,f
 12460  25DC  0CA5               	rrf	__div_to_l_@quot,f
 12461  25DD  0B89               	decfsz	9,f
 12462  25DE  2DD9               	goto	u9645
 12463  25DF  3001               	movlw	1
 12464  25E0  00A0               	movwf	??__div_to_l_
 12465  25E1  0820               	movf	??__div_to_l_,w
 12466  25E2  07AA               	addwf	__div_to_l_@exp1,f
 12467  25E3  1903               	btfsc	3,2
 12468  25E4  2DFF               	goto	l7232
 12469  25E5  2DD8               	goto	l7222
 12470  25E6                     l7224:	
 12471  25E6  3020               	movlw	32
 12472  25E7  022A               	subwf	__div_to_l_@exp1,w
 12473  25E8  1C03               	skipc
 12474  25E9  2DFC               	goto	l1158
 12475  25EA  3000               	movlw	0
 12476  25EB  00F5               	movwf	?__div_to_l_+3
 12477  25EC  3000               	movlw	0
 12478  25ED  00F4               	movwf	?__div_to_l_+2
 12479  25EE  3000               	movlw	0
 12480  25EF  00F3               	movwf	?__div_to_l_+1
 12481  25F0  3000               	movlw	0
 12482  25F1  00F2               	movwf	?__div_to_l_
 12483  25F2  0008               	return
 12484  25F3                     l7230:	
 12485  25F3  3001               	movlw	1
 12486  25F4                     u9675:	
 12487  25F4  35A5               	lslf	__div_to_l_@quot,f
 12488  25F5  0DA6               	rlf	__div_to_l_@quot+1,f
 12489  25F6  0DA7               	rlf	__div_to_l_@quot+2,f
 12490  25F7  0DA8               	rlf	__div_to_l_@quot+3,f
 12491  25F8  0B89               	decfsz	9,f
 12492  25F9  2DF4               	goto	u9675
 12493  25FA  3001               	movlw	1
 12494  25FB  02AA               	subwf	__div_to_l_@exp1,f
 12495  25FC                     l1158:	
 12496  25FC  082A               	movf	__div_to_l_@exp1,w
 12497  25FD  1D03               	btfss	3,2
 12498  25FE  2DF3               	goto	l7230
 12499  25FF                     l7232:	
 12500  25FF  0828               	movf	__div_to_l_@quot+3,w
 12501  2600  00F5               	movwf	?__div_to_l_+3
 12502  2601  0827               	movf	__div_to_l_@quot+2,w
 12503  2602  00F4               	movwf	?__div_to_l_+2
 12504  2603  0826               	movf	__div_to_l_@quot+1,w
 12505  2604  00F3               	movwf	?__div_to_l_+1
 12506  2605  0825               	movf	__div_to_l_@quot,w
 12507  2606  00F2               	movwf	?__div_to_l_
 12508  2607  0008               	return
 12509  2608                     __end_of__div_to_l_:	
 12510                           
 12511                           	psect	text15
 12512  2D89                     __ptext15:	
 12513 ;; *************** function ___llmod *****************
 12514 ;; Defined at:
 12515 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12516 ;; Parameters:    Size  Location     Type
 12517 ;;  divisor         4    6[BANK0 ] unsigned long 
 12518 ;;  dividend        4   10[BANK0 ] unsigned long 
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;  counter         1   15[BANK0 ] unsigned char 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  4    6[BANK0 ] unsigned long 
 12523 ;; Registers used:
 12524 ;;		wreg, status,2, status,0
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/0
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12530 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12531 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12532 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12533 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12534 ;;Total ram usage:       10 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    2
 12537 ;; This function calls:
 12538 ;;		Nothing
 12539 ;; This function is called by:
 12540 ;;		_sprintf
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           
 12545                           ;psect for function ___llmod
 12546  2D89                     ___llmod:	
 12547                           
 12548                           ;incstack = 0
 12549                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12550  2D89  0020               	movlb	0	; select bank0
 12551  2D8A  0829               	movf	___llmod@divisor+3,w
 12552  2D8B  0428               	iorwf	___llmod@divisor+2,w
 12553  2D8C  0427               	iorwf	___llmod@divisor+1,w
 12554  2D8D  0426               	iorwf	___llmod@divisor,w
 12555  2D8E  1903               	skipnz
 12556  2D8F  2DC3               	goto	l7360
 12557  2D90  01AF               	clrf	___llmod@counter
 12558  2D91  0AAF               	incf	___llmod@counter,f
 12559  2D92                     l7350:	
 12560  2D92  1BA9               	btfsc	___llmod@divisor+3,7
 12561  2D93  2DA0               	goto	l7352
 12562  2D94  3001               	movlw	1
 12563  2D95                     u9975:	
 12564  2D95  35A6               	lslf	___llmod@divisor,f
 12565  2D96  0DA7               	rlf	___llmod@divisor+1,f
 12566  2D97  0DA8               	rlf	___llmod@divisor+2,f
 12567  2D98  0DA9               	rlf	___llmod@divisor+3,f
 12568  2D99  0B89               	decfsz	9,f
 12569  2D9A  2D95               	goto	u9975
 12570  2D9B  3001               	movlw	1
 12571  2D9C  00AE               	movwf	??___llmod
 12572  2D9D  082E               	movf	??___llmod,w
 12573  2D9E  07AF               	addwf	___llmod@counter,f
 12574  2D9F  2D92               	goto	l7350
 12575  2DA0                     l7352:	
 12576  2DA0  0829               	movf	___llmod@divisor+3,w
 12577  2DA1  022D               	subwf	___llmod@dividend+3,w
 12578  2DA2  1D03               	skipz
 12579  2DA3  2DAE               	goto	u9995
 12580  2DA4  0828               	movf	___llmod@divisor+2,w
 12581  2DA5  022C               	subwf	___llmod@dividend+2,w
 12582  2DA6  1D03               	skipz
 12583  2DA7  2DAE               	goto	u9995
 12584  2DA8  0827               	movf	___llmod@divisor+1,w
 12585  2DA9  022B               	subwf	___llmod@dividend+1,w
 12586  2DAA  1D03               	skipz
 12587  2DAB  2DAE               	goto	u9995
 12588  2DAC  0826               	movf	___llmod@divisor,w
 12589  2DAD  022A               	subwf	___llmod@dividend,w
 12590  2DAE                     u9995:	
 12591  2DAE  1C03               	skipc
 12592  2DAF  2DB8               	goto	l7356
 12593  2DB0  0826               	movf	___llmod@divisor,w
 12594  2DB1  02AA               	subwf	___llmod@dividend,f
 12595  2DB2  0827               	movf	___llmod@divisor+1,w
 12596  2DB3  3BAB               	subwfb	___llmod@dividend+1,f
 12597  2DB4  0828               	movf	___llmod@divisor+2,w
 12598  2DB5  3BAC               	subwfb	___llmod@dividend+2,f
 12599  2DB6  0829               	movf	___llmod@divisor+3,w
 12600  2DB7  3BAD               	subwfb	___llmod@dividend+3,f
 12601  2DB8                     l7356:	
 12602  2DB8  3001               	movlw	1
 12603  2DB9                     u10005:	
 12604  2DB9  36A9               	lsrf	___llmod@divisor+3,f
 12605  2DBA  0CA8               	rrf	___llmod@divisor+2,f
 12606  2DBB  0CA7               	rrf	___llmod@divisor+1,f
 12607  2DBC  0CA6               	rrf	___llmod@divisor,f
 12608  2DBD  0B89               	decfsz	9,f
 12609  2DBE  2DB9               	goto	u10005
 12610  2DBF  3001               	movlw	1
 12611  2DC0  02AF               	subwf	___llmod@counter,f
 12612  2DC1  1D03               	btfss	3,2
 12613  2DC2  2DA0               	goto	l7352
 12614  2DC3                     l7360:	
 12615  2DC3  082D               	movf	___llmod@dividend+3,w
 12616  2DC4  00A9               	movwf	?___llmod+3
 12617  2DC5  082C               	movf	___llmod@dividend+2,w
 12618  2DC6  00A8               	movwf	?___llmod+2
 12619  2DC7  082B               	movf	___llmod@dividend+1,w
 12620  2DC8  00A7               	movwf	?___llmod+1
 12621  2DC9  082A               	movf	___llmod@dividend,w
 12622  2DCA  00A6               	movwf	?___llmod
 12623  2DCB  0008               	return
 12624  2DCC                     __end_of___llmod:	
 12625                           
 12626                           	psect	text16
 12627  2F04                     __ptext16:	
 12628 ;; *************** function ___lldiv *****************
 12629 ;; Defined at:
 12630 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12631 ;; Parameters:    Size  Location     Type
 12632 ;;  divisor         4    2[COMMON] unsigned long 
 12633 ;;  dividend        4    6[COMMON] unsigned long 
 12634 ;; Auto vars:     Size  Location     Type
 12635 ;;  quotient        4    1[BANK0 ] unsigned long 
 12636 ;;  counter         1    5[BANK0 ] unsigned char 
 12637 ;; Return value:  Size  Location     Type
 12638 ;;                  4    2[COMMON] unsigned long 
 12639 ;; Registers used:
 12640 ;;		wreg, status,2, status,0
 12641 ;; Tracked objects:
 12642 ;;		On entry : 0/0
 12643 ;;		On exit  : 0/0
 12644 ;;		Unchanged: 0/0
 12645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12647 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12649 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12650 ;;Total ram usage:       14 bytes
 12651 ;; Hardware stack levels used:    1
 12652 ;; Hardware stack levels required when called:    2
 12653 ;; This function calls:
 12654 ;;		Nothing
 12655 ;; This function is called by:
 12656 ;;		_sprintf
 12657 ;; This function uses a non-reentrant model
 12658 ;;
 12659                           
 12660                           
 12661                           ;psect for function ___lldiv
 12662  2F04                     ___lldiv:	
 12663                           
 12664                           ;incstack = 0
 12665                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12666  2F04  3000               	movlw	0
 12667  2F05  0020               	movlb	0	; select bank0
 12668  2F06  00A4               	movwf	___lldiv@quotient+3
 12669  2F07  3000               	movlw	0
 12670  2F08  00A3               	movwf	___lldiv@quotient+2
 12671  2F09  3000               	movlw	0
 12672  2F0A  00A2               	movwf	___lldiv@quotient+1
 12673  2F0B  3000               	movlw	0
 12674  2F0C  00A1               	movwf	___lldiv@quotient
 12675  2F0D  0875               	movf	___lldiv@divisor+3,w
 12676  2F0E  0474               	iorwf	___lldiv@divisor+2,w
 12677  2F0F  0473               	iorwf	___lldiv@divisor+1,w
 12678  2F10  0472               	iorwf	___lldiv@divisor,w
 12679  2F11  1903               	skipnz
 12680  2F12  2F4E               	goto	l7340
 12681  2F13  01A5               	clrf	___lldiv@counter
 12682  2F14  0AA5               	incf	___lldiv@counter,f
 12683  2F15                     l7326:	
 12684  2F15  1BF5               	btfsc	___lldiv@divisor+3,7
 12685  2F16  2F23               	goto	l7328
 12686  2F17  3001               	movlw	1
 12687  2F18                     u9905:	
 12688  2F18  35F2               	lslf	___lldiv@divisor,f
 12689  2F19  0DF3               	rlf	___lldiv@divisor+1,f
 12690  2F1A  0DF4               	rlf	___lldiv@divisor+2,f
 12691  2F1B  0DF5               	rlf	___lldiv@divisor+3,f
 12692  2F1C  0B89               	decfsz	9,f
 12693  2F1D  2F18               	goto	u9905
 12694  2F1E  3001               	movlw	1
 12695  2F1F  00A0               	movwf	??___lldiv
 12696  2F20  0820               	movf	??___lldiv,w
 12697  2F21  07A5               	addwf	___lldiv@counter,f
 12698  2F22  2F15               	goto	l7326
 12699  2F23                     l7328:	
 12700  2F23  3001               	movlw	1
 12701  2F24                     u9925:	
 12702  2F24  35A1               	lslf	___lldiv@quotient,f
 12703  2F25  0DA2               	rlf	___lldiv@quotient+1,f
 12704  2F26  0DA3               	rlf	___lldiv@quotient+2,f
 12705  2F27  0DA4               	rlf	___lldiv@quotient+3,f
 12706  2F28  0B89               	decfsz	9,f
 12707  2F29  2F24               	goto	u9925
 12708  2F2A  0875               	movf	___lldiv@divisor+3,w
 12709  2F2B  0279               	subwf	___lldiv@dividend+3,w
 12710  2F2C  1D03               	skipz
 12711  2F2D  2F38               	goto	u9935
 12712  2F2E  0874               	movf	___lldiv@divisor+2,w
 12713  2F2F  0278               	subwf	___lldiv@dividend+2,w
 12714  2F30  1D03               	skipz
 12715  2F31  2F38               	goto	u9935
 12716  2F32  0873               	movf	___lldiv@divisor+1,w
 12717  2F33  0277               	subwf	___lldiv@dividend+1,w
 12718  2F34  1D03               	skipz
 12719  2F35  2F38               	goto	u9935
 12720  2F36  0872               	movf	___lldiv@divisor,w
 12721  2F37  0276               	subwf	___lldiv@dividend,w
 12722  2F38                     u9935:	
 12723  2F38  1C03               	skipc
 12724  2F39  2F43               	goto	l7336
 12725  2F3A  0872               	movf	___lldiv@divisor,w
 12726  2F3B  02F6               	subwf	___lldiv@dividend,f
 12727  2F3C  0873               	movf	___lldiv@divisor+1,w
 12728  2F3D  3BF7               	subwfb	___lldiv@dividend+1,f
 12729  2F3E  0874               	movf	___lldiv@divisor+2,w
 12730  2F3F  3BF8               	subwfb	___lldiv@dividend+2,f
 12731  2F40  0875               	movf	___lldiv@divisor+3,w
 12732  2F41  3BF9               	subwfb	___lldiv@dividend+3,f
 12733  2F42  1421               	bsf	___lldiv@quotient,0
 12734  2F43                     l7336:	
 12735  2F43  3001               	movlw	1
 12736  2F44                     u9945:	
 12737  2F44  36F5               	lsrf	___lldiv@divisor+3,f
 12738  2F45  0CF4               	rrf	___lldiv@divisor+2,f
 12739  2F46  0CF3               	rrf	___lldiv@divisor+1,f
 12740  2F47  0CF2               	rrf	___lldiv@divisor,f
 12741  2F48  0B89               	decfsz	9,f
 12742  2F49  2F44               	goto	u9945
 12743  2F4A  3001               	movlw	1
 12744  2F4B  02A5               	subwf	___lldiv@counter,f
 12745  2F4C  1D03               	btfss	3,2
 12746  2F4D  2F23               	goto	l7328
 12747  2F4E                     l7340:	
 12748  2F4E  0824               	movf	___lldiv@quotient+3,w
 12749  2F4F  00F5               	movwf	?___lldiv+3
 12750  2F50  0823               	movf	___lldiv@quotient+2,w
 12751  2F51  00F4               	movwf	?___lldiv+2
 12752  2F52  0822               	movf	___lldiv@quotient+1,w
 12753  2F53  00F3               	movwf	?___lldiv+1
 12754  2F54  0821               	movf	___lldiv@quotient,w
 12755  2F55  00F2               	movwf	?___lldiv
 12756  2F56  0008               	return
 12757  2F57                     __end_of___lldiv:	
 12758                           
 12759                           	psect	text17
 12760  1C00                     __ptext17:	
 12761 ;; *************** function ___flsub *****************
 12762 ;; Defined at:
 12763 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  a               4   53[BANK1 ] unsigned long 
 12766 ;;  b               4   57[BANK1 ] unsigned long 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;		None
 12769 ;; Return value:  Size  Location     Type
 12770 ;;                  4   53[BANK1 ] unsigned long 
 12771 ;; Registers used:
 12772 ;;		wreg, status,2, status,0, pclath, cstack
 12773 ;; Tracked objects:
 12774 ;;		On entry : 0/0
 12775 ;;		On exit  : 0/0
 12776 ;;		Unchanged: 0/0
 12777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12778 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12781 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12782 ;;Total ram usage:        8 bytes
 12783 ;; Hardware stack levels used:    1
 12784 ;; Hardware stack levels required when called:    3
 12785 ;; This function calls:
 12786 ;;		___fladd
 12787 ;; This function is called by:
 12788 ;;		_sprintf
 12789 ;; This function uses a non-reentrant model
 12790 ;;
 12791                           
 12792                           
 12793                           ;psect for function ___flsub
 12794  1C00                     ___flsub:	
 12795                           
 12796                           ;incstack = 0
 12797                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12798  1C00  3080               	movlw	128
 12799  1C01  0021               	movlb	1	; select bank1
 12800  1C02  06D8               	xorwf	(___flsub@a+3)^(0+128),f
 12801  1C03  085C               	movf	(___flsub@b+3)^(0+128),w
 12802  1C04  00C0               	movwf	(___fladd@b+3)^(0+128)
 12803  1C05  085B               	movf	(___flsub@b+2)^(0+128),w
 12804  1C06  00BF               	movwf	(___fladd@b+2)^(0+128)
 12805  1C07  085A               	movf	(___flsub@b+1)^(0+128),w
 12806  1C08  00BE               	movwf	(___fladd@b+1)^(0+128)
 12807  1C09  0859               	movf	___flsub@b^(0+128),w
 12808  1C0A  00BD               	movwf	___fladd@b^(0+128)
 12809  1C0B  0858               	movf	(___flsub@a+3)^(0+128),w
 12810  1C0C  00C4               	movwf	(___fladd@a+3)^(0+128)
 12811  1C0D  0857               	movf	(___flsub@a+2)^(0+128),w
 12812  1C0E  00C3               	movwf	(___fladd@a+2)^(0+128)
 12813  1C0F  0856               	movf	(___flsub@a+1)^(0+128),w
 12814  1C10  00C2               	movwf	(___fladd@a+1)^(0+128)
 12815  1C11  0855               	movf	___flsub@a^(0+128),w
 12816  1C12  00C1               	movwf	___fladd@a^(0+128)
 12817  1C13  3185  25F9         	fcall	___fladd
 12818  1C15  0021               	movlb	1	; select bank1
 12819  1C16  0840               	movf	(?___fladd+3)^(0+128),w
 12820  1C17  00D8               	movwf	(?___flsub+3)^(0+128)
 12821  1C18  083F               	movf	(?___fladd+2)^(0+128),w
 12822  1C19  00D7               	movwf	(?___flsub+2)^(0+128)
 12823  1C1A  083E               	movf	(?___fladd+1)^(0+128),w
 12824  1C1B  00D6               	movwf	(?___flsub+1)^(0+128)
 12825  1C1C  083D               	movf	?___fladd^(0+128),w
 12826  1C1D  00D5               	movwf	?___flsub^(0+128)
 12827  1C1E  0008               	return
 12828  1C1F                     __end_of___flsub:	
 12829                           
 12830                           	psect	text18
 12831  2B57                     __ptext18:	
 12832 ;; *************** function ___flneg *****************
 12833 ;; Defined at:
 12834 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 12835 ;; Parameters:    Size  Location     Type
 12836 ;;  f1              4    2[COMMON] unsigned long 
 12837 ;; Auto vars:     Size  Location     Type
 12838 ;;		None
 12839 ;; Return value:  Size  Location     Type
 12840 ;;                  4    2[COMMON] unsigned long 
 12841 ;; Registers used:
 12842 ;;		wreg
 12843 ;; Tracked objects:
 12844 ;;		On entry : 0/0
 12845 ;;		On exit  : 0/0
 12846 ;;		Unchanged: 0/0
 12847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12848 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12851 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12852 ;;Total ram usage:        4 bytes
 12853 ;; Hardware stack levels used:    1
 12854 ;; Hardware stack levels required when called:    2
 12855 ;; This function calls:
 12856 ;;		Nothing
 12857 ;; This function is called by:
 12858 ;;		_writeVoltages
 12859 ;;		_sprintf
 12860 ;; This function uses a non-reentrant model
 12861 ;;
 12862                           
 12863                           
 12864                           ;psect for function ___flneg
 12865  2B57                     ___flneg:	
 12866                           
 12867                           ;incstack = 0
 12868                           ; Regs used in ___flneg: [wreg]
 12869  2B57  0875               	movf	___flneg@f1+3,w
 12870  2B58  0474               	iorwf	___flneg@f1+2,w
 12871  2B59  0473               	iorwf	___flneg@f1+1,w
 12872  2B5A  0472               	iorwf	___flneg@f1,w
 12873  2B5B  1903               	skipnz
 12874  2B5C  0008               	return
 12875  2B5D  3080               	movlw	128
 12876  2B5E  06F5               	xorwf	___flneg@f1+3,f
 12877  2B5F  0008               	return
 12878  2B60                     __end_of___flneg:	
 12879                           
 12880                           	psect	text19
 12881  2C57                     __ptext19:	
 12882 ;; *************** function _setup *****************
 12883 ;; Defined at:
 12884 ;;		line 218 in file "main.c"
 12885 ;; Parameters:    Size  Location     Type
 12886 ;;		None
 12887 ;; Auto vars:     Size  Location     Type
 12888 ;;		None
 12889 ;; Return value:  Size  Location     Type
 12890 ;;                  1    wreg      void 
 12891 ;; Registers used:
 12892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12893 ;; Tracked objects:
 12894 ;;		On entry : 0/0
 12895 ;;		On exit  : 0/0
 12896 ;;		Unchanged: 0/0
 12897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12902 ;;Total ram usage:        0 bytes
 12903 ;; Hardware stack levels used:    1
 12904 ;; Hardware stack levels required when called:    6
 12905 ;; This function calls:
 12906 ;;		_LTC6804_initialize
 12907 ;;		_adcSetup
 12908 ;;		_i2cSetup
 12909 ;;		_spiSetup
 12910 ;;		_timerSetup
 12911 ;;		_uartSetup
 12912 ;; This function is called by:
 12913 ;;		_main
 12914 ;; This function uses a non-reentrant model
 12915 ;;
 12916                           
 12917                           
 12918                           ;psect for function _setup
 12919  2C57                     _setup:	
 12920                           
 12921                           ;main.c: 220: TRISDbits.TRISD4 = 0;
 12922                           
 12923                           ;incstack = 0
 12924                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12925  2C57  0021               	movlb	1	; select bank1
 12926  2C58  120F               	bcf	15,4	;volatile
 12927                           
 12928                           ;main.c: 221: TRISDbits.TRISD5 = 0;
 12929  2C59  128F               	bcf	15,5	;volatile
 12930                           
 12931                           ;main.c: 222: TRISAbits.TRISA0 = 1;
 12932  2C5A  140C               	bsf	12,0	;volatile
 12933                           
 12934                           ;main.c: 225: INTCONbits.GIE = 1;
 12935  2C5B  178B               	bsf	11,7	;volatile
 12936                           
 12937                           ;main.c: 226: INTCONbits.PEIE = 1;
 12938  2C5C  170B               	bsf	11,6	;volatile
 12939                           
 12940                           ;main.c: 229: timerSetup();
 12941  2C5D  31AB  2336  31AC   	fcall	_timerSetup
 12942                           
 12943                           ;main.c: 232: TRISAbits.TRISA5 = 0;
 12944  2C60  0021               	movlb	1	; select bank1
 12945  2C61  128C               	bcf	12,5	;volatile
 12946                           
 12947                           ;main.c: 233: LATAbits.LATA5 = 1;
 12948  2C62  0022               	movlb	2	; select bank2
 12949  2C63  168C               	bsf	12,5	;volatile
 12950                           
 12951                           ;main.c: 236: TRISAbits.TRISA4 = 0;
 12952  2C64  0021               	movlb	1	; select bank1
 12953  2C65  120C               	bcf	12,4	;volatile
 12954                           
 12955                           ;main.c: 239: adcSetup();
 12956  2C66  31AB  23F9  31AC   	fcall	_adcSetup
 12957                           
 12958                           ;main.c: 242: uartSetup();
 12959  2C69  31AB  2377  31AC   	fcall	_uartSetup
 12960                           
 12961                           ;main.c: 245: TRISBbits.TRISB6 = 1;
 12962  2C6C  0021               	movlb	1	; select bank1
 12963  2C6D  170D               	bsf	13,6	;volatile
 12964                           
 12965                           ;main.c: 246: TRISBbits.TRISB7 = 1;
 12966  2C6E  178D               	bsf	13,7	;volatile
 12967                           
 12968                           ;main.c: 247: i2cSetup();
 12969  2C6F  31AB  23A6  31AC   	fcall	_i2cSetup
 12970                           
 12971                           ;main.c: 250: TRISCbits.TRISC5 = 0;
 12972  2C72  0021               	movlb	1	; select bank1
 12973  2C73  128E               	bcf	14,5	;volatile
 12974                           
 12975                           ;main.c: 251: TRISCbits.TRISC4 = 1;
 12976  2C74  160E               	bsf	14,4	;volatile
 12977                           
 12978                           ;main.c: 252: TRISCbits.TRISC3 = 0;
 12979  2C75  118E               	bcf	14,3	;volatile
 12980                           
 12981                           ;main.c: 253: TRISDbits.TRISD3 = 0;
 12982  2C76  118F               	bcf	15,3	;volatile
 12983                           
 12984                           ;main.c: 254: spiSetup();
 12985  2C77  31AB  23B7  31AC   	fcall	_spiSetup
 12986                           
 12987                           ;main.c: 257: LTC6804_initialize();
 12988  2C7A  31AB  2395         	fcall	_LTC6804_initialize
 12989  2C7C  0008               	return
 12990  2C7D                     __end_of_setup:	
 12991                           
 12992                           	psect	text20
 12993  2B77                     __ptext20:	
 12994 ;; *************** function _uartSetup *****************
 12995 ;; Defined at:
 12996 ;;		line 83 in file "uart.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;		None
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;		None
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1    wreg      void 
 13003 ;; Registers used:
 13004 ;;		wreg, status,2
 13005 ;; Tracked objects:
 13006 ;;		On entry : 0/0
 13007 ;;		On exit  : 0/0
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13014 ;;Total ram usage:        0 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:    2
 13017 ;; This function calls:
 13018 ;;		Nothing
 13019 ;; This function is called by:
 13020 ;;		_setup
 13021 ;; This function uses a non-reentrant model
 13022 ;;
 13023                           
 13024                           
 13025                           ;psect for function _uartSetup
 13026  2B77                     _uartSetup:	
 13027                           
 13028                           ;uart.c: 84: TXSTAbits.TX9 = 0;
 13029                           
 13030                           ;incstack = 0
 13031                           ; Regs used in _uartSetup: [wreg+status,2]
 13032  2B77  0023               	movlb	3	; select bank3
 13033  2B78  131E               	bcf	30,6	;volatile
 13034                           
 13035                           ;uart.c: 85: TXSTAbits.TXEN = 1;
 13036  2B79  169E               	bsf	30,5	;volatile
 13037                           
 13038                           ;uart.c: 86: TXSTAbits.SYNC = 0;
 13039  2B7A  121E               	bcf	30,4	;volatile
 13040                           
 13041                           ;uart.c: 87: TXSTAbits.BRGH = 0;
 13042  2B7B  111E               	bcf	30,2	;volatile
 13043                           
 13044                           ;uart.c: 88: RCSTAbits.RX9 = 0;
 13045  2B7C  131D               	bcf	29,6	;volatile
 13046                           
 13047                           ;uart.c: 89: RCSTAbits.SPEN = 1;
 13048  2B7D  179D               	bsf	29,7	;volatile
 13049                           
 13050                           ;uart.c: 90: SPBRGH = 0;
 13051  2B7E  019C               	clrf	28	;volatile
 13052                           
 13053                           ;uart.c: 91: SPBRGL = 2;
 13054  2B7F  3002               	movlw	2
 13055  2B80  009B               	movwf	27	;volatile
 13056                           
 13057                           ;uart.c: 92: PIR1bits.TXIF = 0;
 13058  2B81  0020               	movlb	0	; select bank0
 13059  2B82  1211               	bcf	17,4	;volatile
 13060  2B83  0008               	return
 13061  2B84                     __end_of_uartSetup:	
 13062                           
 13063                           	psect	text21
 13064  2B36                     __ptext21:	
 13065 ;; *************** function _timerSetup *****************
 13066 ;; Defined at:
 13067 ;;		line 10 in file "timer.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;		None
 13070 ;; Auto vars:     Size  Location     Type
 13071 ;;		None
 13072 ;; Return value:  Size  Location     Type
 13073 ;;                  1    wreg      void 
 13074 ;; Registers used:
 13075 ;;		wreg, status,2, status,0, pclath, cstack
 13076 ;; Tracked objects:
 13077 ;;		On entry : 0/0
 13078 ;;		On exit  : 0/0
 13079 ;;		Unchanged: 0/0
 13080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13085 ;;Total ram usage:        0 bytes
 13086 ;; Hardware stack levels used:    1
 13087 ;; Hardware stack levels required when called:    3
 13088 ;; This function calls:
 13089 ;;		_timer0Setup
 13090 ;;		_timer2Setup
 13091 ;; This function is called by:
 13092 ;;		_setup
 13093 ;; This function uses a non-reentrant model
 13094 ;;
 13095                           
 13096                           
 13097                           ;psect for function _timerSetup
 13098  2B36                     _timerSetup:	
 13099                           
 13100                           ;timer.c: 11: timer0Setup();
 13101                           
 13102                           ;incstack = 0
 13103                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 13104  2B36  31AB  2331  31AB   	fcall	_timer0Setup
 13105                           
 13106                           ;timer.c: 12: timer2Setup();
 13107  2B39  3187  27F5         	fcall	_timer2Setup
 13108  2B3B  0008               	return
 13109  2B3C                     __end_of_timerSetup:	
 13110                           
 13111                           	psect	text22
 13112  07F5                     __ptext22:	
 13113 ;; *************** function _timer2Setup *****************
 13114 ;; Defined at:
 13115 ;;		line 15 in file "timer.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;		None
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;		None
 13120 ;; Return value:  Size  Location     Type
 13121 ;;                  1    wreg      void 
 13122 ;; Registers used:
 13123 ;;		wreg
 13124 ;; Tracked objects:
 13125 ;;		On entry : 0/0
 13126 ;;		On exit  : 0/0
 13127 ;;		Unchanged: 0/0
 13128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13133 ;;Total ram usage:        0 bytes
 13134 ;; Hardware stack levels used:    1
 13135 ;; Hardware stack levels required when called:    2
 13136 ;; This function calls:
 13137 ;;		Nothing
 13138 ;; This function is called by:
 13139 ;;		_timerSetup
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           
 13144                           ;psect for function _timer2Setup
 13145  07F5                     _timer2Setup:	
 13146                           
 13147                           ;timer.c: 16: CCP2CON = 0x06;
 13148                           
 13149                           ;incstack = 0
 13150                           ; Regs used in _timer2Setup: [wreg]
 13151  07F5  3006               	movlw	6
 13152  07F6  0025               	movlb	5	; select bank5
 13153  07F7  009A               	movwf	26	;volatile
 13154                           
 13155                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 13156  07F8  0021               	movlb	1	; select bank1
 13157  07F9  1491               	bsf	17,1	;volatile
 13158                           
 13159                           ;timer.c: 18: PR2 = 254;
 13160  07FA  30FE               	movlw	254
 13161  07FB  0020               	movlb	0	; select bank0
 13162  07FC  009B               	movwf	27	;volatile
 13163                           
 13164                           ;timer.c: 19: T2CON = 0x4F;
 13165  07FD  304F               	movlw	79
 13166  07FE  009C               	movwf	28	;volatile
 13167  07FF  0008               	return
 13168  0800                     __end_of_timer2Setup:	
 13169                           
 13170                           	psect	text23
 13171  2B31                     __ptext23:	
 13172 ;; *************** function _timer0Setup *****************
 13173 ;; Defined at:
 13174 ;;		line 22 in file "timer.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1    wreg      void 
 13181 ;; Registers used:
 13182 ;;		wreg
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 0/0
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; Hardware stack levels required when called:    2
 13195 ;; This function calls:
 13196 ;;		Nothing
 13197 ;; This function is called by:
 13198 ;;		_timerSetup
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           
 13203                           ;psect for function _timer0Setup
 13204  2B31                     _timer0Setup:	
 13205                           
 13206                           ;timer.c: 23: OPTION_REG = 0b10001110;
 13207                           
 13208                           ;incstack = 0
 13209                           ; Regs used in _timer0Setup: [wreg]
 13210  2B31  308E               	movlw	142
 13211  2B32  0021               	movlb	1	; select bank1
 13212  2B33  0095               	movwf	21	;volatile
 13213                           
 13214                           ;timer.c: 24: INTCONbits.TMR0IE = 1;
 13215  2B34  168B               	bsf	11,5	;volatile
 13216  2B35  0008               	return
 13217  2B36                     __end_of_timer0Setup:	
 13218                           
 13219                           	psect	text24
 13220  2BB7                     __ptext24:	
 13221 ;; *************** function _spiSetup *****************
 13222 ;; Defined at:
 13223 ;;		line 12 in file "spi.c"
 13224 ;; Parameters:    Size  Location     Type
 13225 ;;		None
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;		None
 13228 ;; Return value:  Size  Location     Type
 13229 ;;                  1    wreg      void 
 13230 ;; Registers used:
 13231 ;;		wreg
 13232 ;; Tracked objects:
 13233 ;;		On entry : 0/0
 13234 ;;		On exit  : 0/0
 13235 ;;		Unchanged: 0/0
 13236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;Total ram usage:        0 bytes
 13242 ;; Hardware stack levels used:    1
 13243 ;; Hardware stack levels required when called:    2
 13244 ;; This function calls:
 13245 ;;		Nothing
 13246 ;; This function is called by:
 13247 ;;		_setup
 13248 ;; This function uses a non-reentrant model
 13249 ;;
 13250                           
 13251                           
 13252                           ;psect for function _spiSetup
 13253  2BB7                     _spiSetup:	
 13254                           
 13255                           ;spi.c: 15: LATDbits.LATD3 = 1;
 13256                           
 13257                           ;incstack = 0
 13258                           ; Regs used in _spiSetup: [wreg]
 13259  2BB7  0022               	movlb	2	; select bank2
 13260  2BB8  158F               	bsf	15,3	;volatile
 13261                           
 13262                           ;spi.c: 17: APFCON1bits.SDOSEL = 0;
 13263  2BB9  129D               	bcf	29,5	;volatile
 13264                           
 13265                           ;spi.c: 18: APFCON1bits.SCKSEL = 0;
 13266  2BBA  121D               	bcf	29,4	;volatile
 13267                           
 13268                           ;spi.c: 19: APFCON1bits.SDISEL = 0;
 13269  2BBB  119D               	bcf	29,3	;volatile
 13270                           
 13271                           ;spi.c: 21: SSP1CON3bits.BOEN = 0;
 13272  2BBC  0024               	movlb	4	; select bank4
 13273  2BBD  1217               	bcf	23,4	;volatile
 13274                           
 13275                           ;spi.c: 25: SSP1STATbits.SMP = 1;
 13276  2BBE  1794               	bsf	20,7	;volatile
 13277                           
 13278                           ;spi.c: 26: SSP1STATbits.CKE = 1;
 13279  2BBF  1714               	bsf	20,6	;volatile
 13280                           
 13281                           ;spi.c: 28: SSP1CON1 = 0x12;
 13282  2BC0  3012               	movlw	18
 13283  2BC1  0095               	movwf	21	;volatile
 13284                           
 13285                           ;spi.c: 30: PIE1bits.SSP1IE = 1;
 13286  2BC2  0021               	movlb	1	; select bank1
 13287  2BC3  1591               	bsf	17,3	;volatile
 13288                           
 13289                           ;spi.c: 31: PIR1bits.SSP1IF = 0;
 13290  2BC4  0020               	movlb	0	; select bank0
 13291  2BC5  1191               	bcf	17,3	;volatile
 13292                           
 13293                           ;spi.c: 33: SSP1CON1bits.SSPEN = 1;
 13294  2BC6  0024               	movlb	4	; select bank4
 13295  2BC7  1695               	bsf	21,5	;volatile
 13296  2BC8  0008               	return
 13297  2BC9                     __end_of_spiSetup:	
 13298                           
 13299                           	psect	text25
 13300  2BA6                     __ptext25:	
 13301 ;; *************** function _i2cSetup *****************
 13302 ;; Defined at:
 13303 ;;		line 40 in file "i2c.c"
 13304 ;; Parameters:    Size  Location     Type
 13305 ;;		None
 13306 ;; Auto vars:     Size  Location     Type
 13307 ;;		None
 13308 ;; Return value:  Size  Location     Type
 13309 ;;                  1    wreg      void 
 13310 ;; Registers used:
 13311 ;;		wreg
 13312 ;; Tracked objects:
 13313 ;;		On entry : 0/0
 13314 ;;		On exit  : 0/0
 13315 ;;		Unchanged: 0/0
 13316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13321 ;;Total ram usage:        0 bytes
 13322 ;; Hardware stack levels used:    1
 13323 ;; Hardware stack levels required when called:    2
 13324 ;; This function calls:
 13325 ;;		Nothing
 13326 ;; This function is called by:
 13327 ;;		_setup
 13328 ;; This function uses a non-reentrant model
 13329 ;;
 13330                           
 13331                           
 13332                           ;psect for function _i2cSetup
 13333  2BA6                     _i2cSetup:	
 13334                           
 13335                           ;i2c.c: 41: APFCON1bits.SDISEL = 1;
 13336                           
 13337                           ;incstack = 0
 13338                           ; Regs used in _i2cSetup: [wreg]
 13339  2BA6  0022               	movlb	2	; select bank2
 13340  2BA7  159D               	bsf	29,3	;volatile
 13341                           
 13342                           ;i2c.c: 42: APFCON1bits.SCKSEL = 1;
 13343  2BA8  161D               	bsf	29,4	;volatile
 13344                           
 13345                           ;i2c.c: 43: PIE1bits.SSP1IE = 0;
 13346  2BA9  0021               	movlb	1	; select bank1
 13347  2BAA  1191               	bcf	17,3	;volatile
 13348                           
 13349                           ;i2c.c: 44: PIE2bits.BCL1IE = 0;
 13350  2BAB  1192               	bcf	18,3	;volatile
 13351                           
 13352                           ;i2c.c: 45: PIR1bits.SSP1IF = 0;
 13353  2BAC  0020               	movlb	0	; select bank0
 13354  2BAD  1191               	bcf	17,3	;volatile
 13355                           
 13356                           ;i2c.c: 46: PIR2bits.BCL1IF = 0;
 13357  2BAE  1192               	bcf	18,3	;volatile
 13358                           
 13359                           ;i2c.c: 47: SSPADD = 0x4F;
 13360  2BAF  304F               	movlw	79
 13361  2BB0  0024               	movlb	4	; select bank4
 13362  2BB1  0092               	movwf	18	;volatile
 13363                           
 13364                           ;i2c.c: 48: SSPCON1 = 0x28;
 13365  2BB2  3028               	movlw	40
 13366  2BB3  0095               	movwf	21	;volatile
 13367                           
 13368                           ;i2c.c: 49: SSPSTAT = 0xC0;
 13369  2BB4  30C0               	movlw	192
 13370  2BB5  0094               	movwf	20	;volatile
 13371  2BB6  0008               	return
 13372  2BB7                     __end_of_i2cSetup:	
 13373                           
 13374                           	psect	text26
 13375  2BF9                     __ptext26:	
 13376 ;; *************** function _adcSetup *****************
 13377 ;; Defined at:
 13378 ;;		line 78 in file "adc.c"
 13379 ;; Parameters:    Size  Location     Type
 13380 ;;		None
 13381 ;; Auto vars:     Size  Location     Type
 13382 ;;		None
 13383 ;; Return value:  Size  Location     Type
 13384 ;;                  1    wreg      void 
 13385 ;; Registers used:
 13386 ;;		wreg, status,2
 13387 ;; Tracked objects:
 13388 ;;		On entry : 0/0
 13389 ;;		On exit  : 0/0
 13390 ;;		Unchanged: 0/0
 13391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13396 ;;Total ram usage:        0 bytes
 13397 ;; Hardware stack levels used:    1
 13398 ;; Hardware stack levels required when called:    2
 13399 ;; This function calls:
 13400 ;;		Nothing
 13401 ;; This function is called by:
 13402 ;;		_setup
 13403 ;; This function uses a non-reentrant model
 13404 ;;
 13405                           
 13406                           
 13407                           ;psect for function _adcSetup
 13408  2BF9                     _adcSetup:	
 13409                           
 13410                           ;adc.c: 80: TRISBbits.TRISB5 = 0;
 13411                           
 13412                           ;incstack = 0
 13413                           ; Regs used in _adcSetup: [wreg+status,2]
 13414  2BF9  0021               	movlb	1	; select bank1
 13415  2BFA  128D               	bcf	13,5	;volatile
 13416                           
 13417                           ;adc.c: 83: TRISAbits.TRISA0 = 1;
 13418  2BFB  140C               	bsf	12,0	;volatile
 13419                           
 13420                           ;adc.c: 84: TRISAbits.TRISA1 = 1;
 13421  2BFC  148C               	bsf	12,1	;volatile
 13422                           
 13423                           ;adc.c: 85: TRISAbits.TRISA2 = 1;
 13424  2BFD  150C               	bsf	12,2	;volatile
 13425                           
 13426                           ;adc.c: 86: TRISAbits.TRISA3 = 1;
 13427  2BFE  158C               	bsf	12,3	;volatile
 13428                           
 13429                           ;adc.c: 89: TRISBbits.TRISB0 = 1;
 13430  2BFF  140D               	bsf	13,0	;volatile
 13431                           
 13432                           ;adc.c: 90: TRISBbits.TRISB1 = 1;
 13433  2C00  148D               	bsf	13,1	;volatile
 13434                           
 13435                           ;adc.c: 91: TRISBbits.TRISB2 = 1;
 13436  2C01  150D               	bsf	13,2	;volatile
 13437                           
 13438                           ;adc.c: 92: TRISBbits.TRISB3 = 1;
 13439  2C02  158D               	bsf	13,3	;volatile
 13440                           
 13441                           ;adc.c: 93: TRISBbits.TRISB4 = 1;
 13442  2C03  160D               	bsf	13,4	;volatile
 13443                           
 13444                           ;adc.c: 96: TRISDbits.TRISD1 = 1;
 13445  2C04  148F               	bsf	15,1	;volatile
 13446                           
 13447                           ;adc.c: 99: ANSELA = 0x0F;
 13448  2C05  300F               	movlw	15
 13449  2C06  0023               	movlb	3	; select bank3
 13450  2C07  008C               	movwf	12	;volatile
 13451                           
 13452                           ;adc.c: 100: ANSELB = 0x1F;
 13453  2C08  301F               	movlw	31
 13454  2C09  008D               	movwf	13	;volatile
 13455                           
 13456                           ;adc.c: 101: ANSELD = 0x01;
 13457  2C0A  3001               	movlw	1
 13458  2C0B  008F               	movwf	15	;volatile
 13459                           
 13460                           ;adc.c: 102: TRISDbits.TRISD1 = 1;
 13461  2C0C  0021               	movlb	1	; select bank1
 13462  2C0D  148F               	bsf	15,1	;volatile
 13463                           
 13464                           ;adc.c: 103: WPUD = 0x00;
 13465  2C0E  0024               	movlb	4	; select bank4
 13466  2C0F  018F               	clrf	15	;volatile
 13467                           
 13468                           ;adc.c: 106: ADCON0 = 0x00;
 13469  2C10  0021               	movlb	1	; select bank1
 13470  2C11  019D               	clrf	29	;volatile
 13471                           
 13472                           ;adc.c: 107: ADCON1 = 0x60;
 13473  2C12  3060               	movlw	96
 13474  2C13  009E               	movwf	30	;volatile
 13475                           
 13476                           ;adc.c: 108: ADCON2 = 0x0F;
 13477  2C14  300F               	movlw	15
 13478  2C15  009F               	movwf	31	;volatile
 13479  2C16  0008               	return
 13480  2C17                     __end_of_adcSetup:	
 13481                           
 13482                           	psect	text27
 13483  2B95                     __ptext27:	
 13484 ;; *************** function _LTC6804_initialize *****************
 13485 ;; Defined at:
 13486 ;;		line 302 in file "ltc6804.c"
 13487 ;; Parameters:    Size  Location     Type
 13488 ;;		None
 13489 ;; Auto vars:     Size  Location     Type
 13490 ;;		None
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13502 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13504 ;;Total ram usage:        1 bytes
 13505 ;; Hardware stack levels used:    1
 13506 ;; Hardware stack levels required when called:    5
 13507 ;; This function calls:
 13508 ;;		_LTC6804_wrcfg
 13509 ;;		_set_adc
 13510 ;; This function is called by:
 13511 ;;		_setup
 13512 ;; This function uses a non-reentrant model
 13513 ;;
 13514                           
 13515                           
 13516                           ;psect for function _LTC6804_initialize
 13517  2B95                     _LTC6804_initialize:	
 13518                           
 13519                           ;ltc6804.c: 304: set_adc(2,1,0,0);
 13520                           
 13521                           ;incstack = 0
 13522                           ; Regs used in _LTC6804_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13523  2B95  01F2               	clrf	set_adc@DCP
 13524  2B96  0AF2               	incf	set_adc@DCP,f
 13525  2B97  01F3               	clrf	set_adc@CH
 13526  2B98  01F4               	clrf	set_adc@CHG
 13527  2B99  3002               	movlw	2
 13528  2B9A  31A0  206A  31AB   	fcall	_set_adc
 13529                           
 13530                           ;ltc6804.c: 305: LTC6804_wrcfg(1, configReg);
 13531  2B9D  306A               	movlw	(low (_configReg| (0+512)))& (0+255)
 13532  2B9E  0020               	movlb	0	; select bank0
 13533  2B9F  00C6               	movwf	??_LTC6804_initialize
 13534  2BA0  0846               	movf	??_LTC6804_initialize,w
 13535  2BA1  00F9               	movwf	LTC6804_wrcfg@config
 13536  2BA2  3001               	movlw	1
 13537  2BA3  3188  2001         	fcall	_LTC6804_wrcfg
 13538  2BA5  0008               	return
 13539  2BA6                     __end_of_LTC6804_initialize:	
 13540                           
 13541                           	psect	text28
 13542  206A                     __ptext28:	
 13543 ;; *************** function _set_adc *****************
 13544 ;; Defined at:
 13545 ;;		line 325 in file "ltc6804.c"
 13546 ;; Parameters:    Size  Location     Type
 13547 ;;  MD              1    wreg     unsigned char 
 13548 ;;  DCP             1    2[COMMON] unsigned char 
 13549 ;;  CH              1    3[COMMON] unsigned char 
 13550 ;;  CHG             1    4[COMMON] unsigned char 
 13551 ;; Auto vars:     Size  Location     Type
 13552 ;;  MD              1    7[COMMON] unsigned char 
 13553 ;;  md_bits         1    8[COMMON] unsigned char 
 13554 ;; Return value:  Size  Location     Type
 13555 ;;                  1    wreg      void 
 13556 ;; Registers used:
 13557 ;;		wreg, status,2, status,0
 13558 ;; Tracked objects:
 13559 ;;		On entry : 0/0
 13560 ;;		On exit  : 0/0
 13561 ;;		Unchanged: 0/0
 13562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13563 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13564 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13565 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13566 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13567 ;;Total ram usage:        7 bytes
 13568 ;; Hardware stack levels used:    1
 13569 ;; Hardware stack levels required when called:    2
 13570 ;; This function calls:
 13571 ;;		Nothing
 13572 ;; This function is called by:
 13573 ;;		_LTC6804_initialize
 13574 ;; This function uses a non-reentrant model
 13575 ;;
 13576                           
 13577                           
 13578                           ;psect for function _set_adc
 13579  206A                     _set_adc:	
 13580                           
 13581                           ;incstack = 0
 13582                           ; Regs used in _set_adc: [wreg+status,2+status,0]
 13583                           ;set_adc@MD stored from wreg
 13584  206A  00F7               	movwf	set_adc@MD
 13585                           
 13586                           ;ltc6804.c: 331: char md_bits;
 13587                           ;ltc6804.c: 333: md_bits = (MD & 0x02) >> 1;
 13588  206B  3677               	lsrf	set_adc@MD,w
 13589  206C  3901               	andlw	1
 13590  206D  00F5               	movwf	??_set_adc
 13591  206E  0875               	movf	??_set_adc,w
 13592  206F  00F8               	movwf	set_adc@md_bits
 13593                           
 13594                           ;ltc6804.c: 334: ADCV[0] = md_bits + 0x02;
 13595  2070  0878               	movf	set_adc@md_bits,w
 13596  2071  3E02               	addlw	2
 13597  2072  00F5               	movwf	??_set_adc
 13598  2073  0875               	movf	??_set_adc,w
 13599  2074  0025               	movlb	5	; select bank5
 13600  2075  00E0               	movwf	_ADCV^(0+640)
 13601                           
 13602                           ;ltc6804.c: 335: md_bits = (MD & 0x01) << 7;
 13603  2076  0877               	movf	set_adc@MD,w
 13604  2077  3901               	andlw	1
 13605  2078  00F5               	movwf	??_set_adc
 13606  2079  3006               	movlw	6
 13607  207A                     u6765:	
 13608  207A  35F5               	lslf	??_set_adc,f
 13609  207B  3EFF               	addlw	-1
 13610  207C  1D03               	skipz
 13611  207D  287A               	goto	u6765
 13612  207E  3575               	lslf	??_set_adc,w
 13613  207F  00F6               	movwf	??_set_adc+1
 13614  2080  0876               	movf	??_set_adc+1,w
 13615  2081  00F8               	movwf	set_adc@md_bits
 13616                           
 13617                           ;ltc6804.c: 336: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 13618  2082  0872               	movf	set_adc@DCP,w
 13619  2083  00F5               	movwf	??_set_adc
 13620  2084  3003               	movlw	3
 13621  2085                     u6775:	
 13622  2085  35F5               	lslf	??_set_adc,f
 13623  2086  3EFF               	addlw	-1
 13624  2087  1D03               	skipz
 13625  2088  2885               	goto	u6775
 13626  2089  3575               	lslf	??_set_adc,w
 13627  208A  0778               	addwf	set_adc@md_bits,w
 13628  208B  0773               	addwf	set_adc@CH,w
 13629  208C  3E60               	addlw	96
 13630  208D  00F6               	movwf	??_set_adc+1
 13631  208E  0876               	movf	??_set_adc+1,w
 13632  208F  00E1               	movwf	(_ADCV^(0+640)+1)
 13633                           
 13634                           ;ltc6804.c: 338: md_bits = (MD & 0x02) >> 1;
 13635  2090  3677               	lsrf	set_adc@MD,w
 13636  2091  3901               	andlw	1
 13637  2092  00F5               	movwf	??_set_adc
 13638  2093  0875               	movf	??_set_adc,w
 13639  2094  00F8               	movwf	set_adc@md_bits
 13640                           
 13641                           ;ltc6804.c: 339: ADAX[0] = md_bits + 0x04;
 13642  2095  0878               	movf	set_adc@md_bits,w
 13643  2096  3E04               	addlw	4
 13644  2097  00F5               	movwf	??_set_adc
 13645  2098  0875               	movf	??_set_adc,w
 13646  2099  00DE               	movwf	_ADAX^(0+640)
 13647                           
 13648                           ;ltc6804.c: 340: md_bits = (MD & 0x01) << 7;
 13649  209A  0877               	movf	set_adc@MD,w
 13650  209B  3901               	andlw	1
 13651  209C  00F5               	movwf	??_set_adc
 13652  209D  3006               	movlw	6
 13653  209E                     u6785:	
 13654  209E  35F5               	lslf	??_set_adc,f
 13655  209F  3EFF               	addlw	-1
 13656  20A0  1D03               	skipz
 13657  20A1  289E               	goto	u6785
 13658  20A2  3575               	lslf	??_set_adc,w
 13659  20A3  00F6               	movwf	??_set_adc+1
 13660  20A4  0876               	movf	??_set_adc+1,w
 13661  20A5  00F8               	movwf	set_adc@md_bits
 13662                           
 13663                           ;ltc6804.c: 341: ADAX[1] = md_bits + 0x60 + CHG ;
 13664  20A6  0878               	movf	set_adc@md_bits,w
 13665  20A7  0774               	addwf	set_adc@CHG,w
 13666  20A8  3E60               	addlw	96
 13667  20A9  00F5               	movwf	??_set_adc
 13668  20AA  0875               	movf	??_set_adc,w
 13669  20AB  00DF               	movwf	(_ADAX^(0+640)+1)
 13670                           
 13671                           ;ltc6804.c: 343: md_bits = (MD & 0x02) >> 1;
 13672  20AC  3677               	lsrf	set_adc@MD,w
 13673  20AD  3901               	andlw	1
 13674  20AE  00F5               	movwf	??_set_adc
 13675  20AF  0875               	movf	??_set_adc,w
 13676  20B0  00F8               	movwf	set_adc@md_bits
 13677                           
 13678                           ;ltc6804.c: 344: ADSTAT[0] = md_bits + 0x04;
 13679  20B1  0878               	movf	set_adc@md_bits,w
 13680  20B2  3E04               	addlw	4
 13681  20B3  00F5               	movwf	??_set_adc
 13682  20B4  0875               	movf	??_set_adc,w
 13683  20B5  00DC               	movwf	_ADSTAT^(0+640)
 13684                           
 13685                           ;ltc6804.c: 345: md_bits = (MD & 0x01) << 7;
 13686  20B6  0877               	movf	set_adc@MD,w
 13687  20B7  3901               	andlw	1
 13688  20B8  00F5               	movwf	??_set_adc
 13689  20B9  3006               	movlw	6
 13690  20BA                     u6795:	
 13691  20BA  35F5               	lslf	??_set_adc,f
 13692  20BB  3EFF               	addlw	-1
 13693  20BC  1D03               	skipz
 13694  20BD  28BA               	goto	u6795
 13695  20BE  3575               	lslf	??_set_adc,w
 13696  20BF  00F6               	movwf	??_set_adc+1
 13697  20C0  0876               	movf	??_set_adc+1,w
 13698  20C1  00F8               	movwf	set_adc@md_bits
 13699                           
 13700                           ;ltc6804.c: 346: ADSTAT[1] = md_bits + 0x69;
 13701  20C2  0878               	movf	set_adc@md_bits,w
 13702  20C3  3E69               	addlw	105
 13703  20C4  00F5               	movwf	??_set_adc
 13704  20C5  0875               	movf	??_set_adc,w
 13705  20C6  00DD               	movwf	(_ADSTAT^(0+640)+1)
 13706  20C7  0008               	return
 13707  20C8                     __end_of_set_adc:	
 13708                           
 13709                           	psect	text29
 13710  26E5                     __ptext29:	
 13711 ;; *************** function _measureVoltages *****************
 13712 ;; Defined at:
 13713 ;;		line 95 in file "ltc6804.c"
 13714 ;; Parameters:    Size  Location     Type
 13715 ;;  voltages        1    wreg     PTR float 
 13716 ;;		 -> main@voltages(48), 
 13717 ;;  totalVoltage    2   73[BANK1 ] PTR float 
 13718 ;;		 -> startUp@totalVoltage(4), main@totalVoltage(4), 
 13719 ;;  numVoltages     2   75[BANK1 ] int 
 13720 ;; Auto vars:     Size  Location     Type
 13721 ;;  voltages        1   41[BANK2 ] PTR float 
 13722 ;;		 -> main@voltages(48), 
 13723 ;;  i               2   42[BANK2 ] int 
 13724 ;;  ltcData        24   14[BANK2 ] unsigned int [12][1]
 13725 ;;  errorCount      2   39[BANK2 ] int 
 13726 ;;  pecError        1   38[BANK2 ] unsigned char 
 13727 ;; Return value:  Size  Location     Type
 13728 ;;                  1    wreg      void 
 13729 ;; Registers used:
 13730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13731 ;; Tracked objects:
 13732 ;;		On entry : 0/0
 13733 ;;		On exit  : 0/0
 13734 ;;		Unchanged: 0/0
 13735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13736 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13737 ;;      Locals:         0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13738 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13739 ;;      Totals:         0       0       4      34       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13740 ;;Total ram usage:       38 bytes
 13741 ;; Hardware stack levels used:    1
 13742 ;; Hardware stack levels required when called:    6
 13743 ;; This function calls:
 13744 ;;		_LTC6804_adcv
 13745 ;;		_LTC6804_rdcv
 13746 ;;		___fldiv
 13747 ;;		___flge
 13748 ;;		___flmul
 13749 ;;		___xxtofl
 13750 ;;		_cellBalancing
 13751 ;;		_sumVoltages
 13752 ;; This function is called by:
 13753 ;;		_main
 13754 ;;		_startUp
 13755 ;; This function uses a non-reentrant model
 13756 ;;
 13757                           
 13758                           
 13759                           ;psect for function _measureVoltages
 13760  26E5                     _measureVoltages:	
 13761                           
 13762                           ;incstack = 0
 13763                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13764                           ;measureVoltages@voltages stored from wreg
 13765  26E5  0022               	movlb	2	; select bank2
 13766  26E6  00C9               	movwf	measureVoltages@voltages^(0+256)
 13767                           
 13768                           ;ltc6804.c: 96: int errorCount = 0;
 13769  26E7  01C7               	clrf	measureVoltages@errorCount^(0+256)
 13770  26E8  01C8               	clrf	(measureVoltages@errorCount+1)^(0+256)
 13771                           
 13772                           ;ltc6804.c: 97: char pecError = -1;
 13773  26E9  30FF               	movlw	255
 13774  26EA  00AA               	movwf	??_measureVoltages^(0+256)
 13775  26EB  082A               	movf	??_measureVoltages^(0+256),w
 13776  26EC  00C6               	movwf	measureVoltages@pecError^(0+256)
 13777                           
 13778                           ;ltc6804.c: 98: unsigned int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 13779  26ED  3020               	movlw	low measureVoltages@F7579
 13780  26EE  0086               	movwf	6
 13781  26EF  3003               	movlw	high measureVoltages@F7579
 13782  26F0  0087               	movwf	7
 13783  26F1  302E               	movlw	low measureVoltages@ltcData
 13784  26F2  0084               	movwf	4
 13785  26F3  3001               	movlw	high measureVoltages@ltcData
 13786  26F4  0085               	movwf	5
 13787  26F5  3018               	movlw	24
 13788  26F6  00AA               	movwf	??_measureVoltages^(0+256)
 13789  26F7                     u11170:	
 13790  26F7  0016               	moviw fsr1++
 13791  26F8  001A               	movwi fsr0++
 13792  26F9  0BAA               	decfsz	??_measureVoltages^(0+256),f
 13793  26FA  2EF7               	goto	u11170
 13794                           
 13795                           ;ltc6804.c: 100: LTC6804_adcv();
 13796  26FB  31AC  24AC  31A6   	fcall	_LTC6804_adcv
 13797                           
 13798                           ;ltc6804.c: 101: *totalVoltage = sumVoltages(voltages, numVoltages);
 13799  26FE  0021               	movlb	1	; select bank1
 13800  26FF  086C               	movf	(measureVoltages@numVoltages+1)^(0+128),w
 13801  2700  00D6               	movwf	(sumVoltages@numVoltages+1)^(0+128)
 13802  2701  086B               	movf	measureVoltages@numVoltages^(0+128),w
 13803  2702  00D5               	movwf	sumVoltages@numVoltages^(0+128)
 13804  2703  0022               	movlb	2	; select bank2
 13805  2704  0849               	movf	measureVoltages@voltages^(0+256),w
 13806  2705  31AE  2660  31A6   	fcall	_sumVoltages
 13807  2708  0021               	movlb	1	; select bank1
 13808  2709  0869               	movf	measureVoltages@totalVoltage^(0+128),w
 13809  270A  0086               	movwf	6
 13810  270B  086A               	movf	(measureVoltages@totalVoltage+1)^(0+128),w
 13811  270C  0087               	movwf	7
 13812  270D  0855               	movf	?_sumVoltages^(0+128),w
 13813  270E  3FC0               	movwi [0]fsr1
 13814  270F  0856               	movf	(?_sumVoltages+1)^(0+128),w
 13815  2710  3FC1               	movwi [1]fsr1
 13816  2711  0857               	movf	(?_sumVoltages+2)^(0+128),w
 13817  2712  3FC2               	movwi [2]fsr1
 13818  2713  0858               	movf	(?_sumVoltages+3)^(0+128),w
 13819  2714  3FC3               	movwi [3]fsr1
 13820  2715                     l8024:	
 13821                           ;ltc6804.c: 103: do{
 13822                           
 13823                           
 13824                           ;ltc6804.c: 104: pecError = LTC6804_rdcv(0, 1, ltcData);
 13825  2715  0020               	movlb	0	; select bank0
 13826  2716  01BC               	clrf	LTC6804_rdcv@total_ic
 13827  2717  0ABC               	incf	LTC6804_rdcv@total_ic,f
 13828  2718  302E               	movlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13829  2719  0022               	movlb	2	; select bank2
 13830  271A  00AA               	movwf	??_measureVoltages^(0+256)
 13831  271B  082A               	movf	??_measureVoltages^(0+256),w
 13832  271C  0020               	movlb	0	; select bank0
 13833  271D  00BD               	movwf	LTC6804_rdcv@cell_codes
 13834  271E  3000               	movlw	0
 13835  271F  319E  2675  31A6   	fcall	_LTC6804_rdcv
 13836  2722  0022               	movlb	2	; select bank2
 13837  2723  00AB               	movwf	(??_measureVoltages+1)^(0+256)
 13838  2724  082B               	movf	(??_measureVoltages+1)^(0+256),w
 13839  2725  00C6               	movwf	measureVoltages@pecError^(0+256)
 13840                           
 13841                           ;ltc6804.c: 105: errorCount ++;
 13842  2726  3001               	movlw	1
 13843  2727  07C7               	addwf	measureVoltages@errorCount^(0+256),f
 13844  2728  3000               	movlw	0
 13845  2729  3DC8               	addwfc	(measureVoltages@errorCount+1)^(0+256),f
 13846                           
 13847                           ;ltc6804.c: 106: }while(pecError != 0 && errorCount <= 10);
 13848  272A  0846               	movf	measureVoltages@pecError^(0+256),w
 13849  272B  1903               	btfsc	3,2
 13850  272C  2F38               	goto	l8032
 13851  272D  0848               	movf	(measureVoltages@errorCount+1)^(0+256),w
 13852  272E  3A80               	xorlw	128
 13853  272F  00AA               	movwf	??_measureVoltages^(0+256)
 13854  2730  3080               	movlw	128
 13855  2731  022A               	subwf	??_measureVoltages^(0+256),w
 13856  2732  1D03               	skipz
 13857  2733  2F36               	goto	u11195
 13858  2734  300B               	movlw	11
 13859  2735  0247               	subwf	measureVoltages@errorCount^(0+256),w
 13860  2736                     u11195:	
 13861  2736  1C03               	skipc
 13862  2737  2F15               	goto	l8024
 13863  2738                     l8032:	
 13864                           
 13865                           ;ltc6804.c: 108: for(int i = 0; i< 12; i ++){
 13866  2738  0022               	movlb	2	; select bank2
 13867  2739  01CA               	clrf	measureVoltages@i^(0+256)
 13868  273A  01CB               	clrf	(measureVoltages@i+1)^(0+256)
 13869  273B  084B               	movf	(measureVoltages@i+1)^(0+256),w
 13870  273C  3A80               	xorlw	128
 13871  273D  00AA               	movwf	??_measureVoltages^(0+256)
 13872  273E  3080               	movlw	128
 13873  273F  022A               	subwf	??_measureVoltages^(0+256),w
 13874  2740  1D03               	skipz
 13875  2741  2F44               	goto	u11205
 13876  2742  300C               	movlw	12
 13877  2743  024A               	subwf	measureVoltages@i^(0+256),w
 13878  2744                     u11205:	
 13879  2744  1803               	btfsc	3,0
 13880  2745  2FEA               	goto	l8046
 13881  2746                     l8038:	
 13882                           
 13883                           ;ltc6804.c: 109: voltages[i] = 1.0*((float)ltcData[0][i]/10000.0);
 13884  2746  303F               	movlw	63
 13885  2747  0020               	movlb	0	; select bank0
 13886  2748  00D5               	movwf	___flmul@b+3
 13887  2749  3080               	movlw	128
 13888  274A  00D4               	movwf	___flmul@b+2
 13889  274B  3000               	movlw	0
 13890  274C  00D3               	movwf	___flmul@b+1
 13891  274D  3000               	movlw	0
 13892  274E  00D2               	movwf	___flmul@b
 13893  274F  3046               	movlw	70
 13894  2750  00BB               	movwf	___fldiv@a+3
 13895  2751  301C               	movlw	28
 13896  2752  00BA               	movwf	___fldiv@a+2
 13897  2753  3040               	movlw	64
 13898  2754  00B9               	movwf	___fldiv@a+1
 13899  2755  3000               	movlw	0
 13900  2756  00B8               	movwf	___fldiv@a
 13901  2757  0022               	movlb	2	; select bank2
 13902  2758  354A               	lslf	measureVoltages@i^(0+256),w
 13903  2759  3E2E               	addlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 13904  275A  0086               	movwf	6
 13905  275B  3001               	movlw	1	; select bank2/3
 13906  275C  0087               	movwf	7
 13907  275D  3F40               	moviw [0]fsr1
 13908  275E  00AA               	movwf	??_measureVoltages^(0+256)
 13909  275F  3F41               	moviw [1]fsr1
 13910  2760  00AB               	movwf	(??_measureVoltages^(0+256)+1)
 13911  2761  082A               	movf	??_measureVoltages^(0+256),w
 13912  2762  0020               	movlb	0	; select bank0
 13913  2763  00AE               	movwf	___xxtofl@val
 13914  2764  0022               	movlb	2	; select bank2
 13915  2765  082B               	movf	(??_measureVoltages+1)^(0+256),w
 13916  2766  0020               	movlb	0	; select bank0
 13917  2767  00AF               	movwf	___xxtofl@val+1
 13918  2768  01B0               	clrf	___xxtofl@val+2
 13919  2769  01B1               	clrf	___xxtofl@val+3
 13920  276A  3000               	movlw	0
 13921  276B  31A3  235D  31A6   	fcall	___xxtofl
 13922  276E  0020               	movlb	0	; select bank0
 13923  276F  0831               	movf	?___xxtofl+3,w
 13924  2770  00BF               	movwf	___fldiv@b+3
 13925  2771  0830               	movf	?___xxtofl+2,w
 13926  2772  00BE               	movwf	___fldiv@b+2
 13927  2773  082F               	movf	?___xxtofl+1,w
 13928  2774  00BD               	movwf	___fldiv@b+1
 13929  2775  082E               	movf	?___xxtofl,w
 13930  2776  00BC               	movwf	___fldiv@b
 13931  2777  3194  2468  31A6   	fcall	___fldiv
 13932  277A  0020               	movlb	0	; select bank0
 13933  277B  083B               	movf	?___fldiv+3,w
 13934  277C  00D9               	movwf	___flmul@a+3
 13935  277D  083A               	movf	?___fldiv+2,w
 13936  277E  00D8               	movwf	___flmul@a+2
 13937  277F  0839               	movf	?___fldiv+1,w
 13938  2780  00D7               	movwf	___flmul@a+1
 13939  2781  0838               	movf	?___fldiv,w
 13940  2782  00D6               	movwf	___flmul@a
 13941  2783  3183  23CD  31A6   	fcall	___flmul
 13942  2786  0022               	movlb	2	; select bank2
 13943  2787  084A               	movf	measureVoltages@i^(0+256),w
 13944  2788  00AC               	movwf	(??_measureVoltages+2)^(0+256)
 13945  2789  3001               	movlw	1
 13946  278A                     u11215:	
 13947  278A  35AC               	lslf	(??_measureVoltages+2)^(0+256),f
 13948  278B  3EFF               	addlw	-1
 13949  278C  1D03               	skipz
 13950  278D  2F8A               	goto	u11215
 13951  278E  352C               	lslf	(??_measureVoltages+2)^(0+256),w
 13952  278F  0749               	addwf	measureVoltages@voltages^(0+256),w
 13953  2790  00AD               	movwf	(??_measureVoltages+3)^(0+256)
 13954  2791  082D               	movf	(??_measureVoltages+3)^(0+256),w
 13955  2792  0086               	movwf	6
 13956  2793  3002               	movlw	2	; select bank4/5
 13957  2794  0087               	movwf	7
 13958  2795  0020               	movlb	0	; select bank0
 13959  2796  0852               	movf	?___flmul,w
 13960  2797  3FC0               	movwi [0]fsr1
 13961  2798  0853               	movf	?___flmul+1,w
 13962  2799  3FC1               	movwi [1]fsr1
 13963  279A  0854               	movf	?___flmul+2,w
 13964  279B  3FC2               	movwi [2]fsr1
 13965  279C  0855               	movf	?___flmul+3,w
 13966  279D  3FC3               	movwi [3]fsr1
 13967                           
 13968                           ;ltc6804.c: 110: if(voltages[i] < 0.1){
 13969  279E  0022               	movlb	2	; select bank2
 13970  279F  084A               	movf	measureVoltages@i^(0+256),w
 13971  27A0  00AA               	movwf	??_measureVoltages^(0+256)
 13972  27A1  3001               	movlw	1
 13973  27A2                     u11225:	
 13974  27A2  35AA               	lslf	??_measureVoltages^(0+256),f
 13975  27A3  3EFF               	addlw	-1
 13976  27A4  1D03               	skipz
 13977  27A5  2FA2               	goto	u11225
 13978  27A6  352A               	lslf	??_measureVoltages^(0+256),w
 13979  27A7  0749               	addwf	measureVoltages@voltages^(0+256),w
 13980  27A8  00AB               	movwf	(??_measureVoltages+1)^(0+256)
 13981  27A9  082B               	movf	(??_measureVoltages+1)^(0+256),w
 13982  27AA  0086               	movwf	6
 13983  27AB  3002               	movlw	2	; select bank4/5
 13984  27AC  0087               	movwf	7
 13985  27AD  3F40               	moviw [0]fsr1
 13986  27AE  0021               	movlb	1	; select bank1
 13987  27AF  00D5               	movwf	___flge@ff1^(0+128)
 13988  27B0  3F41               	moviw [1]fsr1
 13989  27B1  00D6               	movwf	(___flge@ff1+1)^(0+128)
 13990  27B2  3F42               	moviw [2]fsr1
 13991  27B3  00D7               	movwf	(___flge@ff1+2)^(0+128)
 13992  27B4  3F43               	moviw [3]fsr1
 13993  27B5  00D8               	movwf	(___flge@ff1+3)^(0+128)
 13994  27B6  303D               	movlw	61
 13995  27B7  00DC               	movwf	(___flge@ff2+3)^(0+128)
 13996  27B8  30CC               	movlw	204
 13997  27B9  00DB               	movwf	(___flge@ff2+2)^(0+128)
 13998  27BA  30CC               	movlw	204
 13999  27BB  00DA               	movwf	(___flge@ff2+1)^(0+128)
 14000  27BC  30CD               	movlw	205
 14001  27BD  00D9               	movwf	___flge@ff2^(0+128)
 14002  27BE  31A3  23F3  31A6   	fcall	___flge
 14003  27C1  1803               	btfsc	3,0
 14004  27C2  2FDA               	goto	l8042
 14005                           
 14006                           ;ltc6804.c: 111: voltages[i] = 0.0;
 14007  27C3  0022               	movlb	2	; select bank2
 14008  27C4  084A               	movf	measureVoltages@i^(0+256),w
 14009  27C5  00AA               	movwf	??_measureVoltages^(0+256)
 14010  27C6  3001               	movlw	1
 14011  27C7                     u11245:	
 14012  27C7  35AA               	lslf	??_measureVoltages^(0+256),f
 14013  27C8  3EFF               	addlw	-1
 14014  27C9  1D03               	skipz
 14015  27CA  2FC7               	goto	u11245
 14016  27CB  352A               	lslf	??_measureVoltages^(0+256),w
 14017  27CC  0749               	addwf	measureVoltages@voltages^(0+256),w
 14018  27CD  00AB               	movwf	(??_measureVoltages+1)^(0+256)
 14019  27CE  082B               	movf	(??_measureVoltages+1)^(0+256),w
 14020  27CF  0086               	movwf	6
 14021  27D0  3002               	movlw	2	; select bank4/5
 14022  27D1  0087               	movwf	7
 14023  27D2  3000               	movlw	0
 14024  27D3  3FC0               	movwi [0]fsr1
 14025  27D4  3000               	movlw	0
 14026  27D5  3FC1               	movwi [1]fsr1
 14027  27D6  3000               	movlw	0
 14028  27D7  3FC2               	movwi [2]fsr1
 14029  27D8  3000               	movlw	0
 14030  27D9  3FC3               	movwi [3]fsr1
 14031  27DA                     l8042:	
 14032  27DA  3001               	movlw	1
 14033  27DB  0022               	movlb	2	; select bank2
 14034  27DC  07CA               	addwf	measureVoltages@i^(0+256),f
 14035  27DD  3000               	movlw	0
 14036  27DE  3DCB               	addwfc	(measureVoltages@i+1)^(0+256),f
 14037  27DF  084B               	movf	(measureVoltages@i+1)^(0+256),w
 14038  27E0  3A80               	xorlw	128
 14039  27E1  00AA               	movwf	??_measureVoltages^(0+256)
 14040  27E2  3080               	movlw	128
 14041  27E3  022A               	subwf	??_measureVoltages^(0+256),w
 14042  27E4  1D03               	skipz
 14043  27E5  2FE8               	goto	u11255
 14044  27E6  300C               	movlw	12
 14045  27E7  024A               	subwf	measureVoltages@i^(0+256),w
 14046  27E8                     u11255:	
 14047  27E8  1C03               	skipc
 14048  27E9  2F46               	goto	l8038
 14049  27EA                     l8046:	
 14050                           
 14051                           ;ltc6804.c: 112: }
 14052                           ;ltc6804.c: 113: }
 14053                           ;ltc6804.c: 115: if(errorCount <= 10){
 14054  27EA  0022               	movlb	2	; select bank2
 14055  27EB  0848               	movf	(measureVoltages@errorCount+1)^(0+256),w
 14056  27EC  3A80               	xorlw	128
 14057  27ED  00AA               	movwf	??_measureVoltages^(0+256)
 14058  27EE  3080               	movlw	128
 14059  27EF  022A               	subwf	??_measureVoltages^(0+256),w
 14060  27F0  1D03               	skipz
 14061  27F1  2FF4               	goto	u11265
 14062  27F2  300B               	movlw	11
 14063  27F3  0247               	subwf	measureVoltages@errorCount^(0+256),w
 14064  27F4                     u11265:	
 14065  27F4  1803               	skipnc
 14066  27F5  0008               	return
 14067                           
 14068                           ;ltc6804.c: 116: cellBalancing(voltages, numVoltages);
 14069  27F6  0021               	movlb	1	; select bank1
 14070  27F7  086C               	movf	(measureVoltages@numVoltages+1)^(0+128),w
 14071  27F8  00E6               	movwf	(cellBalancing@numVoltages+1)^(0+128)
 14072  27F9  086B               	movf	measureVoltages@numVoltages^(0+128),w
 14073  27FA  00E5               	movwf	cellBalancing@numVoltages^(0+128)
 14074  27FB  0022               	movlb	2	; select bank2
 14075  27FC  0849               	movf	measureVoltages@voltages^(0+256),w
 14076  27FD  319C  241F         	fcall	_cellBalancing
 14077  27FF  0008               	return
 14078  2800                     __end_of_measureVoltages:	
 14079                           
 14080                           	psect	text30
 14081  2E60                     __ptext30:	
 14082 ;; *************** function _sumVoltages *****************
 14083 ;; Defined at:
 14084 ;;		line 76 in file "ltc6804.c"
 14085 ;; Parameters:    Size  Location     Type
 14086 ;;  voltages        1    wreg     PTR float 
 14087 ;;		 -> main@voltages(48), 
 14088 ;;  numVoltages     2   53[BANK1 ] int 
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;  voltages        1   59[BANK1 ] PTR float 
 14091 ;;		 -> main@voltages(48), 
 14092 ;;  i               2   64[BANK1 ] int 
 14093 ;;  totalVoltage    4   60[BANK1 ] float 
 14094 ;; Return value:  Size  Location     Type
 14095 ;;                  4   53[BANK1 ] float 
 14096 ;; Registers used:
 14097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14098 ;; Tracked objects:
 14099 ;;		On entry : 0/0
 14100 ;;		On exit  : 0/0
 14101 ;;		Unchanged: 0/0
 14102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14103 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14104 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14105 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14106 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14107 ;;Total ram usage:       13 bytes
 14108 ;; Hardware stack levels used:    1
 14109 ;; Hardware stack levels required when called:    3
 14110 ;; This function calls:
 14111 ;;		___fladd
 14112 ;; This function is called by:
 14113 ;;		_measureVoltages
 14114 ;;		_startUp
 14115 ;; This function uses a non-reentrant model
 14116 ;;
 14117                           
 14118                           
 14119                           ;psect for function _sumVoltages
 14120  2E60                     _sumVoltages:	
 14121                           
 14122                           ;incstack = 0
 14123                           ; Regs used in _sumVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14124                           ;sumVoltages@voltages stored from wreg
 14125  2E60  0021               	movlb	1	; select bank1
 14126  2E61  00DB               	movwf	sumVoltages@voltages^(0+128)
 14127                           
 14128                           ;ltc6804.c: 84: float totalVoltage = 0;
 14129  2E62  3000               	movlw	0
 14130  2E63  00DF               	movwf	(sumVoltages@totalVoltage+3)^(0+128)
 14131  2E64  3000               	movlw	0
 14132  2E65  00DE               	movwf	(sumVoltages@totalVoltage+2)^(0+128)
 14133  2E66  3000               	movlw	0
 14134  2E67  00DD               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 14135  2E68  3000               	movlw	0
 14136  2E69  00DC               	movwf	sumVoltages@totalVoltage^(0+128)
 14137                           
 14138                           ;ltc6804.c: 86: for(int i = 0; i < numVoltages; i++){
 14139  2E6A  01E0               	clrf	sumVoltages@i^(0+128)
 14140  2E6B  01E1               	clrf	(sumVoltages@i+1)^(0+128)
 14141  2E6C                     l7810:	
 14142  2E6C  0861               	movf	(sumVoltages@i+1)^(0+128),w
 14143  2E6D  3A80               	xorlw	128
 14144  2E6E  00D9               	movwf	??_sumVoltages^(0+128)
 14145  2E6F  0856               	movf	(sumVoltages@numVoltages+1)^(0+128),w
 14146  2E70  3A80               	xorlw	128
 14147  2E71  0259               	subwf	??_sumVoltages^(0+128),w
 14148  2E72  1D03               	skipz
 14149  2E73  2E76               	goto	u10835
 14150  2E74  0855               	movf	sumVoltages@numVoltages^(0+128),w
 14151  2E75  0260               	subwf	sumVoltages@i^(0+128),w
 14152  2E76                     u10835:	
 14153  2E76  1803               	btfsc	3,0
 14154  2E77  2EA8               	goto	l7812
 14155                           
 14156                           ;ltc6804.c: 87: totalVoltage += voltages[i];
 14157  2E78  0021               	movlb	1	; select bank1
 14158  2E79  0860               	movf	sumVoltages@i^(0+128),w
 14159  2E7A  00D9               	movwf	??_sumVoltages^(0+128)
 14160  2E7B  3001               	movlw	1
 14161  2E7C                     u10825:	
 14162  2E7C  35D9               	lslf	??_sumVoltages^(0+128),f
 14163  2E7D  3EFF               	addlw	-1
 14164  2E7E  1D03               	skipz
 14165  2E7F  2E7C               	goto	u10825
 14166  2E80  3559               	lslf	??_sumVoltages^(0+128),w
 14167  2E81  075B               	addwf	sumVoltages@voltages^(0+128),w
 14168  2E82  00DA               	movwf	(??_sumVoltages+1)^(0+128)
 14169  2E83  085A               	movf	(??_sumVoltages+1)^(0+128),w
 14170  2E84  0086               	movwf	6
 14171  2E85  3002               	movlw	2	; select bank4/5
 14172  2E86  0087               	movwf	7
 14173  2E87  3F40               	moviw [0]fsr1
 14174  2E88  00BD               	movwf	___fladd@b^(0+128)
 14175  2E89  3F41               	moviw [1]fsr1
 14176  2E8A  00BE               	movwf	(___fladd@b+1)^(0+128)
 14177  2E8B  3F42               	moviw [2]fsr1
 14178  2E8C  00BF               	movwf	(___fladd@b+2)^(0+128)
 14179  2E8D  3F43               	moviw [3]fsr1
 14180  2E8E  00C0               	movwf	(___fladd@b+3)^(0+128)
 14181  2E8F  085F               	movf	(sumVoltages@totalVoltage+3)^(0+128),w
 14182  2E90  00C4               	movwf	(___fladd@a+3)^(0+128)
 14183  2E91  085E               	movf	(sumVoltages@totalVoltage+2)^(0+128),w
 14184  2E92  00C3               	movwf	(___fladd@a+2)^(0+128)
 14185  2E93  085D               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 14186  2E94  00C2               	movwf	(___fladd@a+1)^(0+128)
 14187  2E95  085C               	movf	sumVoltages@totalVoltage^(0+128),w
 14188  2E96  00C1               	movwf	___fladd@a^(0+128)
 14189  2E97  3185  25F9  31AE   	fcall	___fladd
 14190  2E9A  0021               	movlb	1	; select bank1
 14191  2E9B  0840               	movf	(?___fladd+3)^(0+128),w
 14192  2E9C  00DF               	movwf	(sumVoltages@totalVoltage+3)^(0+128)
 14193  2E9D  083F               	movf	(?___fladd+2)^(0+128),w
 14194  2E9E  00DE               	movwf	(sumVoltages@totalVoltage+2)^(0+128)
 14195  2E9F  083E               	movf	(?___fladd+1)^(0+128),w
 14196  2EA0  00DD               	movwf	(sumVoltages@totalVoltage+1)^(0+128)
 14197  2EA1  083D               	movf	?___fladd^(0+128),w
 14198  2EA2  00DC               	movwf	sumVoltages@totalVoltage^(0+128)
 14199  2EA3  3001               	movlw	1
 14200  2EA4  07E0               	addwf	sumVoltages@i^(0+128),f
 14201  2EA5  3000               	movlw	0
 14202  2EA6  3DE1               	addwfc	(sumVoltages@i+1)^(0+128),f
 14203  2EA7  2E6C               	goto	l7810
 14204  2EA8                     l7812:	
 14205                           
 14206                           ;ltc6804.c: 88: }
 14207                           ;ltc6804.c: 91: return (totalVoltage);
 14208  2EA8  0021               	movlb	1	; select bank1
 14209  2EA9  085F               	movf	(sumVoltages@totalVoltage+3)^(0+128),w
 14210  2EAA  00D8               	movwf	(?_sumVoltages+3)^(0+128)
 14211  2EAB  085E               	movf	(sumVoltages@totalVoltage+2)^(0+128),w
 14212  2EAC  00D7               	movwf	(?_sumVoltages+2)^(0+128)
 14213  2EAD  085D               	movf	(sumVoltages@totalVoltage+1)^(0+128),w
 14214  2EAE  00D6               	movwf	(?_sumVoltages+1)^(0+128)
 14215  2EAF  085C               	movf	sumVoltages@totalVoltage^(0+128),w
 14216  2EB0  00D5               	movwf	?_sumVoltages^(0+128)
 14217  2EB1  0008               	return
 14218  2EB2                     __end_of_sumVoltages:	
 14219                           
 14220                           	psect	text31
 14221  1C1F                     __ptext31:	
 14222 ;; *************** function _cellBalancing *****************
 14223 ;; Defined at:
 14224 ;;		line 120 in file "ltc6804.c"
 14225 ;; Parameters:    Size  Location     Type
 14226 ;;  voltages        1    wreg     PTR float 
 14227 ;;		 -> main@voltages(48), 
 14228 ;;  numVoltages     2   69[BANK1 ] int 
 14229 ;; Auto vars:     Size  Location     Type
 14230 ;;  voltages        1    9[BANK2 ] PTR float 
 14231 ;;		 -> main@voltages(48), 
 14232 ;;  i               2    7[BANK2 ] int 
 14233 ;;  i               2    5[BANK2 ] int 
 14234 ;;  minVoltage      4    1[BANK2 ] float 
 14235 ;;  boolean         1    0[BANK2 ] unsigned char 
 14236 ;; Return value:  Size  Location     Type
 14237 ;;                  1    wreg      void 
 14238 ;; Registers used:
 14239 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14245 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14246 ;;      Locals:         0       0       0      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14247 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14248 ;;      Totals:         0       0       4      10       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14249 ;;Total ram usage:       14 bytes
 14250 ;; Hardware stack levels used:    1
 14251 ;; Hardware stack levels required when called:    5
 14252 ;; This function calls:
 14253 ;;		_LTC6804_wrcfg
 14254 ;;		___fladd
 14255 ;;		___flge
 14256 ;;		_setDischarge
 14257 ;; This function is called by:
 14258 ;;		_main
 14259 ;;		_measureVoltages
 14260 ;; This function uses a non-reentrant model
 14261 ;;
 14262                           
 14263                           
 14264                           ;psect for function _cellBalancing
 14265  1C1F                     _cellBalancing:	
 14266                           
 14267                           ;incstack = 0
 14268                           ; Regs used in _cellBalancing: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14269                           ;cellBalancing@voltages stored from wreg
 14270  1C1F  0022               	movlb	2	; select bank2
 14271  1C20  00A9               	movwf	cellBalancing@voltages^(0+256)
 14272                           
 14273                           ;ltc6804.c: 121: float minVoltage = voltages[0];
 14274  1C21  0829               	movf	cellBalancing@voltages^(0+256),w
 14275  1C22  0086               	movwf	6
 14276  1C23  3002               	movlw	2	; select bank4/5
 14277  1C24  0087               	movwf	7
 14278  1C25  3F40               	moviw [0]fsr1
 14279  1C26  00A1               	movwf	cellBalancing@minVoltage^(0+256)
 14280  1C27  3F41               	moviw [1]fsr1
 14281  1C28  00A2               	movwf	(cellBalancing@minVoltage+1)^(0+256)
 14282  1C29  3F42               	moviw [2]fsr1
 14283  1C2A  00A3               	movwf	(cellBalancing@minVoltage+2)^(0+256)
 14284  1C2B  3F43               	moviw [3]fsr1
 14285  1C2C  00A4               	movwf	(cellBalancing@minVoltage+3)^(0+256)
 14286                           
 14287                           ;ltc6804.c: 123: for(int i = 0; i < numVoltages; i++){
 14288  1C2D  01A5               	clrf	cellBalancing@i^(0+256)
 14289  1C2E  01A6               	clrf	(cellBalancing@i+1)^(0+256)
 14290  1C2F                     l7788:	
 14291  1C2F  0826               	movf	(cellBalancing@i+1)^(0+256),w
 14292  1C30  3A80               	xorlw	128
 14293  1C31  0021               	movlb	1	; select bank1
 14294  1C32  00E7               	movwf	??_cellBalancing^(0+128)
 14295  1C33  0866               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 14296  1C34  3A80               	xorlw	128
 14297  1C35  0267               	subwf	??_cellBalancing^(0+128),w
 14298  1C36  1D03               	skipz
 14299  1C37  2C3B               	goto	u10795
 14300  1C38  0865               	movf	cellBalancing@numVoltages^(0+128),w
 14301  1C39  0022               	movlb	2	; select bank2
 14302  1C3A  0225               	subwf	cellBalancing@i^(0+256),w
 14303  1C3B                     u10795:	
 14304  1C3B  1803               	btfsc	3,0
 14305  1C3C  2C8D               	goto	l7790
 14306                           
 14307                           ;ltc6804.c: 124: if(voltages[i] < minVoltage){
 14308  1C3D  0022               	movlb	2	; select bank2
 14309  1C3E  0825               	movf	cellBalancing@i^(0+256),w
 14310  1C3F  0021               	movlb	1	; select bank1
 14311  1C40  00E7               	movwf	??_cellBalancing^(0+128)
 14312  1C41  3001               	movlw	1
 14313  1C42                     u10765:	
 14314  1C42  35E7               	lslf	??_cellBalancing^(0+128),f
 14315  1C43  3EFF               	addlw	-1
 14316  1C44  1D03               	skipz
 14317  1C45  2C42               	goto	u10765
 14318  1C46  3567               	lslf	??_cellBalancing^(0+128),w
 14319  1C47  0022               	movlb	2	; select bank2
 14320  1C48  0729               	addwf	cellBalancing@voltages^(0+256),w
 14321  1C49  0021               	movlb	1	; select bank1
 14322  1C4A  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 14323  1C4B  0868               	movf	(??_cellBalancing+1)^(0+128),w
 14324  1C4C  0086               	movwf	6
 14325  1C4D  3002               	movlw	2	; select bank4/5
 14326  1C4E  0087               	movwf	7
 14327  1C4F  3F40               	moviw [0]fsr1
 14328  1C50  00D5               	movwf	___flge@ff1^(0+128)
 14329  1C51  3F41               	moviw [1]fsr1
 14330  1C52  00D6               	movwf	(___flge@ff1+1)^(0+128)
 14331  1C53  3F42               	moviw [2]fsr1
 14332  1C54  00D7               	movwf	(___flge@ff1+2)^(0+128)
 14333  1C55  3F43               	moviw [3]fsr1
 14334  1C56  00D8               	movwf	(___flge@ff1+3)^(0+128)
 14335  1C57  0022               	movlb	2	; select bank2
 14336  1C58  0824               	movf	(cellBalancing@minVoltage+3)^(0+256),w
 14337  1C59  0021               	movlb	1	; select bank1
 14338  1C5A  00DC               	movwf	(___flge@ff2+3)^(0+128)
 14339  1C5B  0022               	movlb	2	; select bank2
 14340  1C5C  0823               	movf	(cellBalancing@minVoltage+2)^(0+256),w
 14341  1C5D  0021               	movlb	1	; select bank1
 14342  1C5E  00DB               	movwf	(___flge@ff2+2)^(0+128)
 14343  1C5F  0022               	movlb	2	; select bank2
 14344  1C60  0822               	movf	(cellBalancing@minVoltage+1)^(0+256),w
 14345  1C61  0021               	movlb	1	; select bank1
 14346  1C62  00DA               	movwf	(___flge@ff2+1)^(0+128)
 14347  1C63  0022               	movlb	2	; select bank2
 14348  1C64  0821               	movf	cellBalancing@minVoltage^(0+256),w
 14349  1C65  0021               	movlb	1	; select bank1
 14350  1C66  00D9               	movwf	___flge@ff2^(0+128)
 14351  1C67  31A3  23F3  319C   	fcall	___flge
 14352  1C6A  1803               	btfsc	3,0
 14353  1C6B  2C87               	goto	l7786
 14354                           
 14355                           ;ltc6804.c: 125: minVoltage = voltages[i];
 14356  1C6C  0022               	movlb	2	; select bank2
 14357  1C6D  0825               	movf	cellBalancing@i^(0+256),w
 14358  1C6E  0021               	movlb	1	; select bank1
 14359  1C6F  00E7               	movwf	??_cellBalancing^(0+128)
 14360  1C70  3001               	movlw	1
 14361  1C71                     u10785:	
 14362  1C71  35E7               	lslf	??_cellBalancing^(0+128),f
 14363  1C72  3EFF               	addlw	-1
 14364  1C73  1D03               	skipz
 14365  1C74  2C71               	goto	u10785
 14366  1C75  3567               	lslf	??_cellBalancing^(0+128),w
 14367  1C76  0022               	movlb	2	; select bank2
 14368  1C77  0729               	addwf	cellBalancing@voltages^(0+256),w
 14369  1C78  0021               	movlb	1	; select bank1
 14370  1C79  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 14371  1C7A  0868               	movf	(??_cellBalancing+1)^(0+128),w
 14372  1C7B  0086               	movwf	6
 14373  1C7C  3002               	movlw	2	; select bank4/5
 14374  1C7D  0087               	movwf	7
 14375  1C7E  3F40               	moviw [0]fsr1
 14376  1C7F  0022               	movlb	2	; select bank2
 14377  1C80  00A1               	movwf	cellBalancing@minVoltage^(0+256)
 14378  1C81  3F41               	moviw [1]fsr1
 14379  1C82  00A2               	movwf	(cellBalancing@minVoltage+1)^(0+256)
 14380  1C83  3F42               	moviw [2]fsr1
 14381  1C84  00A3               	movwf	(cellBalancing@minVoltage+2)^(0+256)
 14382  1C85  3F43               	moviw [3]fsr1
 14383  1C86  00A4               	movwf	(cellBalancing@minVoltage+3)^(0+256)
 14384  1C87                     l7786:	
 14385  1C87  3001               	movlw	1
 14386  1C88  0022               	movlb	2	; select bank2
 14387  1C89  07A5               	addwf	cellBalancing@i^(0+256),f
 14388  1C8A  3000               	movlw	0
 14389  1C8B  3DA6               	addwfc	(cellBalancing@i+1)^(0+256),f
 14390  1C8C  2C2F               	goto	l7788
 14391  1C8D                     l7790:	
 14392                           
 14393                           ;ltc6804.c: 126: }
 14394                           ;ltc6804.c: 127: }
 14395                           ;ltc6804.c: 128: char boolean;
 14396                           ;ltc6804.c: 129: for(int i = 0; i < numVoltages; i++){
 14397  1C8D  0022               	movlb	2	; select bank2
 14398  1C8E  01A7               	clrf	cellBalancing@i_1295^(0+256)
 14399  1C8F  01A8               	clrf	(cellBalancing@i_1295+1)^(0+256)
 14400  1C90                     l7798:	
 14401  1C90  0828               	movf	(cellBalancing@i_1295+1)^(0+256),w
 14402  1C91  3A80               	xorlw	128
 14403  1C92  0021               	movlb	1	; select bank1
 14404  1C93  00E7               	movwf	??_cellBalancing^(0+128)
 14405  1C94  0866               	movf	(cellBalancing@numVoltages+1)^(0+128),w
 14406  1C95  3A80               	xorlw	128
 14407  1C96  0267               	subwf	??_cellBalancing^(0+128),w
 14408  1C97  1D03               	skipz
 14409  1C98  2C9C               	goto	u10815
 14410  1C99  0865               	movf	cellBalancing@numVoltages^(0+128),w
 14411  1C9A  0022               	movlb	2	; select bank2
 14412  1C9B  0227               	subwf	cellBalancing@i_1295^(0+256),w
 14413  1C9C                     u10815:	
 14414  1C9C  1803               	btfsc	3,0
 14415  1C9D  2CF6               	goto	l7800
 14416                           
 14417                           ;ltc6804.c: 130: boolean = (voltages[i] >= (minVoltage + 0.05));
 14418  1C9E  0022               	movlb	2	; select bank2
 14419  1C9F  0827               	movf	cellBalancing@i_1295^(0+256),w
 14420  1CA0  0021               	movlb	1	; select bank1
 14421  1CA1  00E7               	movwf	??_cellBalancing^(0+128)
 14422  1CA2  3001               	movlw	1
 14423  1CA3                     u10805:	
 14424  1CA3  35E7               	lslf	??_cellBalancing^(0+128),f
 14425  1CA4  3EFF               	addlw	-1
 14426  1CA5  1D03               	skipz
 14427  1CA6  2CA3               	goto	u10805
 14428  1CA7  3567               	lslf	??_cellBalancing^(0+128),w
 14429  1CA8  0022               	movlb	2	; select bank2
 14430  1CA9  0729               	addwf	cellBalancing@voltages^(0+256),w
 14431  1CAA  0021               	movlb	1	; select bank1
 14432  1CAB  00E8               	movwf	(??_cellBalancing+1)^(0+128)
 14433  1CAC  0868               	movf	(??_cellBalancing+1)^(0+128),w
 14434  1CAD  0086               	movwf	6
 14435  1CAE  3002               	movlw	2	; select bank4/5
 14436  1CAF  0087               	movwf	7
 14437  1CB0  3F40               	moviw [0]fsr1
 14438  1CB1  00D5               	movwf	___flge@ff1^(0+128)
 14439  1CB2  3F41               	moviw [1]fsr1
 14440  1CB3  00D6               	movwf	(___flge@ff1+1)^(0+128)
 14441  1CB4  3F42               	moviw [2]fsr1
 14442  1CB5  00D7               	movwf	(___flge@ff1+2)^(0+128)
 14443  1CB6  3F43               	moviw [3]fsr1
 14444  1CB7  00D8               	movwf	(___flge@ff1+3)^(0+128)
 14445  1CB8  303D               	movlw	61
 14446  1CB9  00C0               	movwf	(___fladd@b+3)^(0+128)
 14447  1CBA  304C               	movlw	76
 14448  1CBB  00BF               	movwf	(___fladd@b+2)^(0+128)
 14449  1CBC  30CC               	movlw	204
 14450  1CBD  00BE               	movwf	(___fladd@b+1)^(0+128)
 14451  1CBE  30CD               	movlw	205
 14452  1CBF  00BD               	movwf	___fladd@b^(0+128)
 14453  1CC0  0022               	movlb	2	; select bank2
 14454  1CC1  0824               	movf	(cellBalancing@minVoltage+3)^(0+256),w
 14455  1CC2  0021               	movlb	1	; select bank1
 14456  1CC3  00C4               	movwf	(___fladd@a+3)^(0+128)
 14457  1CC4  0022               	movlb	2	; select bank2
 14458  1CC5  0823               	movf	(cellBalancing@minVoltage+2)^(0+256),w
 14459  1CC6  0021               	movlb	1	; select bank1
 14460  1CC7  00C3               	movwf	(___fladd@a+2)^(0+128)
 14461  1CC8  0022               	movlb	2	; select bank2
 14462  1CC9  0822               	movf	(cellBalancing@minVoltage+1)^(0+256),w
 14463  1CCA  0021               	movlb	1	; select bank1
 14464  1CCB  00C2               	movwf	(___fladd@a+1)^(0+128)
 14465  1CCC  0022               	movlb	2	; select bank2
 14466  1CCD  0821               	movf	cellBalancing@minVoltage^(0+256),w
 14467  1CCE  0021               	movlb	1	; select bank1
 14468  1CCF  00C1               	movwf	___fladd@a^(0+128)
 14469  1CD0  3185  25F9  319C   	fcall	___fladd
 14470  1CD3  0021               	movlb	1	; select bank1
 14471  1CD4  0840               	movf	(?___fladd+3)^(0+128),w
 14472  1CD5  00DC               	movwf	(___flge@ff2+3)^(0+128)
 14473  1CD6  083F               	movf	(?___fladd+2)^(0+128),w
 14474  1CD7  00DB               	movwf	(___flge@ff2+2)^(0+128)
 14475  1CD8  083E               	movf	(?___fladd+1)^(0+128),w
 14476  1CD9  00DA               	movwf	(___flge@ff2+1)^(0+128)
 14477  1CDA  083D               	movf	?___fladd^(0+128),w
 14478  1CDB  00D9               	movwf	___flge@ff2^(0+128)
 14479  1CDC  31A3  23F3  319C   	fcall	___flge
 14480  1CDF  3000               	movlw	0
 14481  1CE0  1803               	btfsc	3,0
 14482  1CE1  3001               	movlw	1
 14483  1CE2  0022               	movlb	2	; select bank2
 14484  1CE3  00A0               	movwf	cellBalancing@boolean^(0+256)
 14485                           
 14486                           ;ltc6804.c: 131: setDischarge(i, boolean);
 14487  1CE4  0828               	movf	(cellBalancing@i_1295+1)^(0+256),w
 14488  1CE5  00F3               	movwf	setDischarge@index+1
 14489  1CE6  0827               	movf	cellBalancing@i_1295^(0+256),w
 14490  1CE7  00F2               	movwf	setDischarge@index
 14491  1CE8  0820               	movf	cellBalancing@boolean^(0+256),w
 14492  1CE9  0021               	movlb	1	; select bank1
 14493  1CEA  00E7               	movwf	??_cellBalancing^(0+128)
 14494  1CEB  0867               	movf	??_cellBalancing^(0+128),w
 14495  1CEC  00F4               	movwf	setDischarge@boolean
 14496  1CED  31A6  2608  319C   	fcall	_setDischarge
 14497  1CF0  3001               	movlw	1
 14498  1CF1  0022               	movlb	2	; select bank2
 14499  1CF2  07A7               	addwf	cellBalancing@i_1295^(0+256),f
 14500  1CF3  3000               	movlw	0
 14501  1CF4  3DA8               	addwfc	(cellBalancing@i_1295+1)^(0+256),f
 14502  1CF5  2C90               	goto	l7798
 14503  1CF6                     l7800:	
 14504                           
 14505                           ;ltc6804.c: 132: }
 14506                           ;ltc6804.c: 133: LTC6804_wrcfg(1, configReg);
 14507  1CF6  306A               	movlw	(low (_configReg| (0+512)))& (0+255)
 14508  1CF7  0021               	movlb	1	; select bank1
 14509  1CF8  00E7               	movwf	??_cellBalancing^(0+128)
 14510  1CF9  0867               	movf	??_cellBalancing^(0+128),w
 14511  1CFA  00F9               	movwf	LTC6804_wrcfg@config
 14512  1CFB  3001               	movlw	1
 14513  1CFC  3188  2001         	fcall	_LTC6804_wrcfg
 14514  1CFE  0008               	return
 14515  1CFF                     __end_of_cellBalancing:	
 14516                           
 14517                           	psect	text32
 14518  2608                     __ptext32:	
 14519 ;; *************** function _setDischarge *****************
 14520 ;; Defined at:
 14521 ;;		line 136 in file "ltc6804.c"
 14522 ;; Parameters:    Size  Location     Type
 14523 ;;  index           2    2[COMMON] int 
 14524 ;;  boolean         1    4[COMMON] unsigned char 
 14525 ;; Auto vars:     Size  Location     Type
 14526 ;;		None
 14527 ;; Return value:  Size  Location     Type
 14528 ;;                  1    wreg      void 
 14529 ;; Registers used:
 14530 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 14531 ;; Tracked objects:
 14532 ;;		On entry : 0/0
 14533 ;;		On exit  : 0/0
 14534 ;;		Unchanged: 0/0
 14535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14536 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14539 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14540 ;;Total ram usage:        4 bytes
 14541 ;; Hardware stack levels used:    1
 14542 ;; Hardware stack levels required when called:    2
 14543 ;; This function calls:
 14544 ;;		Nothing
 14545 ;; This function is called by:
 14546 ;;		_cellBalancing
 14547 ;; This function uses a non-reentrant model
 14548 ;;
 14549                           
 14550                           
 14551                           ;psect for function _setDischarge
 14552  2608                     _setDischarge:	
 14553                           
 14554                           ;ltc6804.c: 137: switch(index){
 14555                           
 14556                           ;incstack = 0
 14557                           ; Regs used in _setDischarge: [wreg-fsr0h+status,2+status,0]
 14558  2608  2ED5               	goto	l5316
 14559  2609                     l5242:	
 14560                           ;ltc6804.c: 138: case 0:
 14561                           
 14562                           
 14563                           ;ltc6804.c: 139: if(boolean){
 14564  2609  0874               	movf	setDischarge@boolean,w
 14565  260A  1903               	btfsc	3,2
 14566  260B  2E13               	goto	l5246
 14567                           
 14568                           ;ltc6804.c: 140: configReg[0][4]= configReg[0][4] | 0x01;
 14569  260C  0024               	movlb	4	; select bank4
 14570  260D  086E               	movf	(_configReg^(0+512)+4),w
 14571  260E  3801               	iorlw	1
 14572  260F  00F5               	movwf	??_setDischarge
 14573  2610  0875               	movf	??_setDischarge,w
 14574  2611  00EE               	movwf	(_configReg^(0+512)+4)
 14575                           
 14576                           ;ltc6804.c: 141: }else{
 14577  2612  0008               	return
 14578  2613                     l5246:	
 14579                           
 14580                           ;ltc6804.c: 142: configReg[0][4]= configReg[0][4] & (~0x01);
 14581  2613  0024               	movlb	4	; select bank4
 14582  2614  086E               	movf	(_configReg^(0+512)+4),w
 14583  2615  39FE               	andlw	254
 14584  2616  00F5               	movwf	??_setDischarge
 14585  2617  0875               	movf	??_setDischarge,w
 14586  2618  00EE               	movwf	(_configReg^(0+512)+4)
 14587                           
 14588                           ;ltc6804.c: 143: }
 14589                           ;ltc6804.c: 144: break;
 14590  2619  0008               	return
 14591  261A                     l5248:	
 14592                           ;ltc6804.c: 145: case 1:
 14593                           
 14594                           
 14595                           ;ltc6804.c: 146: if(boolean){
 14596  261A  0874               	movf	setDischarge@boolean,w
 14597  261B  1903               	btfsc	3,2
 14598  261C  2E24               	goto	l5252
 14599                           
 14600                           ;ltc6804.c: 147: configReg[0][4]= configReg[0][4] | 0x02;
 14601  261D  0024               	movlb	4	; select bank4
 14602  261E  086E               	movf	(_configReg^(0+512)+4),w
 14603  261F  3802               	iorlw	2
 14604  2620  00F5               	movwf	??_setDischarge
 14605  2621  0875               	movf	??_setDischarge,w
 14606  2622  00EE               	movwf	(_configReg^(0+512)+4)
 14607                           
 14608                           ;ltc6804.c: 148: }else{
 14609  2623  0008               	return
 14610  2624                     l5252:	
 14611                           
 14612                           ;ltc6804.c: 149: configReg[0][4]= configReg[0][4] & (~0x02);
 14613  2624  0024               	movlb	4	; select bank4
 14614  2625  086E               	movf	(_configReg^(0+512)+4),w
 14615  2626  39FD               	andlw	253
 14616  2627  00F5               	movwf	??_setDischarge
 14617  2628  0875               	movf	??_setDischarge,w
 14618  2629  00EE               	movwf	(_configReg^(0+512)+4)
 14619                           
 14620                           ;ltc6804.c: 150: }
 14621                           ;ltc6804.c: 151: break;
 14622  262A  0008               	return
 14623  262B                     l5254:	
 14624                           ;ltc6804.c: 152: case 2:
 14625                           
 14626                           
 14627                           ;ltc6804.c: 153: if(boolean){
 14628  262B  0874               	movf	setDischarge@boolean,w
 14629  262C  1903               	btfsc	3,2
 14630  262D  2E35               	goto	l5258
 14631                           
 14632                           ;ltc6804.c: 154: configReg[0][4]= configReg[0][4] | 0x04;
 14633  262E  0024               	movlb	4	; select bank4
 14634  262F  086E               	movf	(_configReg^(0+512)+4),w
 14635  2630  3804               	iorlw	4
 14636  2631  00F5               	movwf	??_setDischarge
 14637  2632  0875               	movf	??_setDischarge,w
 14638  2633  00EE               	movwf	(_configReg^(0+512)+4)
 14639                           
 14640                           ;ltc6804.c: 155: }else{
 14641  2634  0008               	return
 14642  2635                     l5258:	
 14643                           
 14644                           ;ltc6804.c: 156: configReg[0][4]= configReg[0][4] & (~0x04);
 14645  2635  0024               	movlb	4	; select bank4
 14646  2636  086E               	movf	(_configReg^(0+512)+4),w
 14647  2637  39FB               	andlw	251
 14648  2638  00F5               	movwf	??_setDischarge
 14649  2639  0875               	movf	??_setDischarge,w
 14650  263A  00EE               	movwf	(_configReg^(0+512)+4)
 14651                           
 14652                           ;ltc6804.c: 157: }
 14653                           ;ltc6804.c: 158: break;
 14654  263B  0008               	return
 14655  263C                     l5260:	
 14656                           ;ltc6804.c: 159: case 3:
 14657                           
 14658                           
 14659                           ;ltc6804.c: 160: if(boolean){
 14660  263C  0874               	movf	setDischarge@boolean,w
 14661  263D  1903               	btfsc	3,2
 14662  263E  2E46               	goto	l5264
 14663                           
 14664                           ;ltc6804.c: 161: configReg[0][4]= configReg[0][4] | 0x08;
 14665  263F  0024               	movlb	4	; select bank4
 14666  2640  086E               	movf	(_configReg^(0+512)+4),w
 14667  2641  3808               	iorlw	8
 14668  2642  00F5               	movwf	??_setDischarge
 14669  2643  0875               	movf	??_setDischarge,w
 14670  2644  00EE               	movwf	(_configReg^(0+512)+4)
 14671                           
 14672                           ;ltc6804.c: 162: }else{
 14673  2645  0008               	return
 14674  2646                     l5264:	
 14675                           
 14676                           ;ltc6804.c: 163: configReg[0][4]= configReg[0][4] & (~0x08);
 14677  2646  0024               	movlb	4	; select bank4
 14678  2647  086E               	movf	(_configReg^(0+512)+4),w
 14679  2648  39F7               	andlw	247
 14680  2649  00F5               	movwf	??_setDischarge
 14681  264A  0875               	movf	??_setDischarge,w
 14682  264B  00EE               	movwf	(_configReg^(0+512)+4)
 14683                           
 14684                           ;ltc6804.c: 164: }
 14685                           ;ltc6804.c: 165: break;
 14686  264C  0008               	return
 14687  264D                     l5266:	
 14688                           ;ltc6804.c: 166: case 4:
 14689                           
 14690                           
 14691                           ;ltc6804.c: 167: if(boolean){
 14692  264D  0874               	movf	setDischarge@boolean,w
 14693  264E  1903               	btfsc	3,2
 14694  264F  2E57               	goto	l5270
 14695                           
 14696                           ;ltc6804.c: 168: configReg[0][4]= configReg[0][4] | 0x10;
 14697  2650  0024               	movlb	4	; select bank4
 14698  2651  086E               	movf	(_configReg^(0+512)+4),w
 14699  2652  3810               	iorlw	16
 14700  2653  00F5               	movwf	??_setDischarge
 14701  2654  0875               	movf	??_setDischarge,w
 14702  2655  00EE               	movwf	(_configReg^(0+512)+4)
 14703                           
 14704                           ;ltc6804.c: 169: }else{
 14705  2656  0008               	return
 14706  2657                     l5270:	
 14707                           
 14708                           ;ltc6804.c: 170: configReg[0][4]= configReg[0][4] & (~0x10);
 14709  2657  0024               	movlb	4	; select bank4
 14710  2658  086E               	movf	(_configReg^(0+512)+4),w
 14711  2659  39EF               	andlw	239
 14712  265A  00F5               	movwf	??_setDischarge
 14713  265B  0875               	movf	??_setDischarge,w
 14714  265C  00EE               	movwf	(_configReg^(0+512)+4)
 14715                           
 14716                           ;ltc6804.c: 171: }
 14717                           ;ltc6804.c: 172: break;
 14718  265D  0008               	return
 14719  265E                     l5272:	
 14720                           ;ltc6804.c: 173: case 5:
 14721                           
 14722                           
 14723                           ;ltc6804.c: 174: if(boolean){
 14724  265E  0874               	movf	setDischarge@boolean,w
 14725  265F  1903               	btfsc	3,2
 14726  2660  2E68               	goto	l5276
 14727                           
 14728                           ;ltc6804.c: 175: configReg[0][4]= configReg[0][4] | 0x20;
 14729  2661  0024               	movlb	4	; select bank4
 14730  2662  086E               	movf	(_configReg^(0+512)+4),w
 14731  2663  3820               	iorlw	32
 14732  2664  00F5               	movwf	??_setDischarge
 14733  2665  0875               	movf	??_setDischarge,w
 14734  2666  00EE               	movwf	(_configReg^(0+512)+4)
 14735                           
 14736                           ;ltc6804.c: 176: }else{
 14737  2667  0008               	return
 14738  2668                     l5276:	
 14739                           
 14740                           ;ltc6804.c: 177: configReg[0][4]= configReg[0][4] & (~0x20);
 14741  2668  0024               	movlb	4	; select bank4
 14742  2669  086E               	movf	(_configReg^(0+512)+4),w
 14743  266A  39DF               	andlw	223
 14744  266B  00F5               	movwf	??_setDischarge
 14745  266C  0875               	movf	??_setDischarge,w
 14746  266D  00EE               	movwf	(_configReg^(0+512)+4)
 14747                           
 14748                           ;ltc6804.c: 178: }
 14749                           ;ltc6804.c: 179: break;
 14750  266E  0008               	return
 14751  266F                     l5278:	
 14752                           ;ltc6804.c: 180: case 6:
 14753                           
 14754                           
 14755                           ;ltc6804.c: 181: if(boolean){
 14756  266F  0874               	movf	setDischarge@boolean,w
 14757  2670  1903               	btfsc	3,2
 14758  2671  2E79               	goto	l5282
 14759                           
 14760                           ;ltc6804.c: 182: configReg[0][4]= configReg[0][4] | 0x40;
 14761  2672  0024               	movlb	4	; select bank4
 14762  2673  086E               	movf	(_configReg^(0+512)+4),w
 14763  2674  3840               	iorlw	64
 14764  2675  00F5               	movwf	??_setDischarge
 14765  2676  0875               	movf	??_setDischarge,w
 14766  2677  00EE               	movwf	(_configReg^(0+512)+4)
 14767                           
 14768                           ;ltc6804.c: 183: }else{
 14769  2678  0008               	return
 14770  2679                     l5282:	
 14771                           
 14772                           ;ltc6804.c: 184: configReg[0][4]= configReg[0][4] & (~0x40);
 14773  2679  0024               	movlb	4	; select bank4
 14774  267A  086E               	movf	(_configReg^(0+512)+4),w
 14775  267B  39BF               	andlw	191
 14776  267C  00F5               	movwf	??_setDischarge
 14777  267D  0875               	movf	??_setDischarge,w
 14778  267E  00EE               	movwf	(_configReg^(0+512)+4)
 14779                           
 14780                           ;ltc6804.c: 185: }
 14781                           ;ltc6804.c: 186: break;
 14782  267F  0008               	return
 14783  2680                     l5284:	
 14784                           ;ltc6804.c: 187: case 7:
 14785                           
 14786                           
 14787                           ;ltc6804.c: 188: if(boolean){
 14788  2680  0874               	movf	setDischarge@boolean,w
 14789  2681  1903               	btfsc	3,2
 14790  2682  2E8A               	goto	l5288
 14791                           
 14792                           ;ltc6804.c: 189: configReg[0][4]= configReg[0][4] | 0x80;
 14793  2683  0024               	movlb	4	; select bank4
 14794  2684  086E               	movf	(_configReg^(0+512)+4),w
 14795  2685  3880               	iorlw	128
 14796  2686  00F5               	movwf	??_setDischarge
 14797  2687  0875               	movf	??_setDischarge,w
 14798  2688  00EE               	movwf	(_configReg^(0+512)+4)
 14799                           
 14800                           ;ltc6804.c: 190: }else{
 14801  2689  0008               	return
 14802  268A                     l5288:	
 14803                           
 14804                           ;ltc6804.c: 191: configReg[0][4]= configReg[0][4] & (~0x80);
 14805  268A  0024               	movlb	4	; select bank4
 14806  268B  086E               	movf	(_configReg^(0+512)+4),w
 14807  268C  397F               	andlw	127
 14808  268D  00F5               	movwf	??_setDischarge
 14809  268E  0875               	movf	??_setDischarge,w
 14810  268F  00EE               	movwf	(_configReg^(0+512)+4)
 14811                           
 14812                           ;ltc6804.c: 192: }
 14813                           ;ltc6804.c: 193: break;
 14814  2690  0008               	return
 14815  2691                     l5290:	
 14816                           ;ltc6804.c: 194: case 8:
 14817                           
 14818                           
 14819                           ;ltc6804.c: 195: if(boolean){
 14820  2691  0874               	movf	setDischarge@boolean,w
 14821  2692  1903               	btfsc	3,2
 14822  2693  2E9B               	goto	l5294
 14823                           
 14824                           ;ltc6804.c: 196: configReg[0][5]= configReg[0][5] | 0x01;
 14825  2694  0024               	movlb	4	; select bank4
 14826  2695  086F               	movf	(_configReg^(0+512)+5),w
 14827  2696  3801               	iorlw	1
 14828  2697  00F5               	movwf	??_setDischarge
 14829  2698  0875               	movf	??_setDischarge,w
 14830  2699  00EF               	movwf	(_configReg^(0+512)+5)
 14831                           
 14832                           ;ltc6804.c: 197: }else{
 14833  269A  0008               	return
 14834  269B                     l5294:	
 14835                           
 14836                           ;ltc6804.c: 198: configReg[0][5]= configReg[0][5] & (~0x01);
 14837  269B  0024               	movlb	4	; select bank4
 14838  269C  086F               	movf	(_configReg^(0+512)+5),w
 14839  269D  39FE               	andlw	254
 14840  269E  00F5               	movwf	??_setDischarge
 14841  269F  0875               	movf	??_setDischarge,w
 14842  26A0  00EF               	movwf	(_configReg^(0+512)+5)
 14843                           
 14844                           ;ltc6804.c: 199: }
 14845                           ;ltc6804.c: 200: break;
 14846  26A1  0008               	return
 14847  26A2                     l5296:	
 14848                           ;ltc6804.c: 201: case 9:
 14849                           
 14850                           
 14851                           ;ltc6804.c: 202: if(boolean){
 14852  26A2  0874               	movf	setDischarge@boolean,w
 14853  26A3  1903               	btfsc	3,2
 14854  26A4  2EAC               	goto	l5300
 14855                           
 14856                           ;ltc6804.c: 203: configReg[0][5]= configReg[0][5] | 0x02;
 14857  26A5  0024               	movlb	4	; select bank4
 14858  26A6  086F               	movf	(_configReg^(0+512)+5),w
 14859  26A7  3802               	iorlw	2
 14860  26A8  00F5               	movwf	??_setDischarge
 14861  26A9  0875               	movf	??_setDischarge,w
 14862  26AA  00EF               	movwf	(_configReg^(0+512)+5)
 14863                           
 14864                           ;ltc6804.c: 204: }else{
 14865  26AB  0008               	return
 14866  26AC                     l5300:	
 14867                           
 14868                           ;ltc6804.c: 205: configReg[0][5]= configReg[0][5] & (~0x02);
 14869  26AC  0024               	movlb	4	; select bank4
 14870  26AD  086F               	movf	(_configReg^(0+512)+5),w
 14871  26AE  39FD               	andlw	253
 14872  26AF  00F5               	movwf	??_setDischarge
 14873  26B0  0875               	movf	??_setDischarge,w
 14874  26B1  00EF               	movwf	(_configReg^(0+512)+5)
 14875                           
 14876                           ;ltc6804.c: 206: }
 14877                           ;ltc6804.c: 207: break;
 14878  26B2  0008               	return
 14879  26B3                     l5302:	
 14880                           ;ltc6804.c: 208: case 10:
 14881                           
 14882                           
 14883                           ;ltc6804.c: 209: if(boolean){
 14884  26B3  0874               	movf	setDischarge@boolean,w
 14885  26B4  1903               	btfsc	3,2
 14886  26B5  2EBD               	goto	l5306
 14887                           
 14888                           ;ltc6804.c: 210: configReg[0][5]= configReg[0][5] | 0x04;
 14889  26B6  0024               	movlb	4	; select bank4
 14890  26B7  086F               	movf	(_configReg^(0+512)+5),w
 14891  26B8  3804               	iorlw	4
 14892  26B9  00F5               	movwf	??_setDischarge
 14893  26BA  0875               	movf	??_setDischarge,w
 14894  26BB  00EF               	movwf	(_configReg^(0+512)+5)
 14895                           
 14896                           ;ltc6804.c: 211: }else{
 14897  26BC  0008               	return
 14898  26BD                     l5306:	
 14899                           
 14900                           ;ltc6804.c: 212: configReg[0][5]= configReg[0][5] & (~0x04);
 14901  26BD  0024               	movlb	4	; select bank4
 14902  26BE  086F               	movf	(_configReg^(0+512)+5),w
 14903  26BF  39FB               	andlw	251
 14904  26C0  00F5               	movwf	??_setDischarge
 14905  26C1  0875               	movf	??_setDischarge,w
 14906  26C2  00EF               	movwf	(_configReg^(0+512)+5)
 14907                           
 14908                           ;ltc6804.c: 213: }
 14909                           ;ltc6804.c: 214: break;
 14910  26C3  0008               	return
 14911  26C4                     l5308:	
 14912                           ;ltc6804.c: 215: case 11:
 14913                           
 14914                           
 14915                           ;ltc6804.c: 216: if(boolean){
 14916  26C4  0874               	movf	setDischarge@boolean,w
 14917  26C5  1903               	btfsc	3,2
 14918  26C6  2ECE               	goto	l5312
 14919                           
 14920                           ;ltc6804.c: 217: configReg[0][5]= configReg[0][5] | 0x08;
 14921  26C7  0024               	movlb	4	; select bank4
 14922  26C8  086F               	movf	(_configReg^(0+512)+5),w
 14923  26C9  3808               	iorlw	8
 14924  26CA  00F5               	movwf	??_setDischarge
 14925  26CB  0875               	movf	??_setDischarge,w
 14926  26CC  00EF               	movwf	(_configReg^(0+512)+5)
 14927                           
 14928                           ;ltc6804.c: 218: }else{
 14929  26CD  0008               	return
 14930  26CE                     l5312:	
 14931                           
 14932                           ;ltc6804.c: 219: configReg[0][5]= configReg[0][5] & (~0x08);
 14933  26CE  0024               	movlb	4	; select bank4
 14934  26CF  086F               	movf	(_configReg^(0+512)+5),w
 14935  26D0  39F7               	andlw	247
 14936  26D1  00F5               	movwf	??_setDischarge
 14937  26D2  0875               	movf	??_setDischarge,w
 14938  26D3  00EF               	movwf	(_configReg^(0+512)+5)
 14939                           
 14940                           ;ltc6804.c: 224: }
 14941                           
 14942                           ;ltc6804.c: 223: break;
 14943                           
 14944                           ;ltc6804.c: 222: default:
 14945                           
 14946                           ;ltc6804.c: 220: }
 14947                           ;ltc6804.c: 221: break;
 14948  26D4  0008               	return
 14949  26D5                     l5316:	
 14950                           
 14951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14952                           ; Switch size 1, requested type "space"
 14953                           ; Number of cases is 1, Range of values is 0 to 0
 14954                           ; switch strategies available:
 14955                           ; Name         Instructions Cycles
 14956                           ; simple_byte            4     3 (average)
 14957                           ; direct_byte            8     6 (fixed)
 14958                           ; jumptable            260     6 (fixed)
 14959                           ;	Chosen strategy is simple_byte
 14960  26D5  0873               	movf	setDischarge@index+1,w
 14961  26D6  3A00               	xorlw	0	; case 0
 14962  26D7  1903               	skipnz
 14963  26D8  2EDA               	goto	l8450
 14964  26D9  2EE4               	goto	l614
 14965  26DA                     l8450:	
 14966                           
 14967                           ; Switch size 1, requested type "space"
 14968                           ; Number of cases is 12, Range of values is 0 to 11
 14969                           ; switch strategies available:
 14970                           ; Name         Instructions Cycles
 14971                           ; direct_byte           30     6 (fixed)
 14972                           ; simple_byte           37    19 (average)
 14973                           ; jumptable            260     6 (fixed)
 14974                           ;	Chosen strategy is direct_byte
 14975  26DA  0872               	movf	setDischarge@index,w
 14976  26DB  0084               	movwf	4
 14977  26DC  300C               	movlw	12
 14978  26DD  0204               	subwf	4,w
 14979  26DE  1803               	skipnc
 14980  26DF  0008               	return
 14981  26E0  31A8               	movlp	high S8452
 14982  26E1  3504               	lslf	4,w
 14983  26E2  3E00               	addlw	low S8452
 14984  26E3  0082               	movwf	2
 14985  26E4                     l614:	
 14986  26E4  0008               	return
 14987  26E5                     __end_of_setDischarge:	
 14988                           
 14989                           	psect	swtext1
 14990  2800                     __pswtext1:	
 14991  2800                     S8452:	
 14992  2800  31A6  2E09         	ljmp	l5242
 14993  2802  31A6  2E1A         	ljmp	l5248
 14994  2804  31A6  2E2B         	ljmp	l5254
 14995  2806  31A6  2E3C         	ljmp	l5260
 14996  2808  31A6  2E4D         	ljmp	l5266
 14997  280A  31A6  2E5E         	ljmp	l5272
 14998  280C  31A6  2E6F         	ljmp	l5278
 14999  280E  31A6  2E80         	ljmp	l5284
 15000  2810  31A6  2E91         	ljmp	l5290
 15001  2812  31A6  2EA2         	ljmp	l5296
 15002  2814  31A6  2EB3         	ljmp	l5302
 15003  2816  31A6  2EC4         	ljmp	l5308
 15004                           
 15005                           	psect	text33
 15006  23F3                     __ptext33:	
 15007 ;; *************** function ___flge *****************
 15008 ;; Defined at:
 15009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;  ff1             4   53[BANK1 ] void 
 15012 ;;  ff2             4   57[BANK1 ] void 
 15013 ;; Auto vars:     Size  Location     Type
 15014 ;;		None
 15015 ;; Return value:  Size  Location     Type
 15016 ;;		None               void
 15017 ;; Registers used:
 15018 ;;		wreg, status,2, status,0
 15019 ;; Tracked objects:
 15020 ;;		On entry : 0/0
 15021 ;;		On exit  : 0/0
 15022 ;;		Unchanged: 0/0
 15023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15024 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15026 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15027 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15028 ;;Total ram usage:       16 bytes
 15029 ;; Hardware stack levels used:    1
 15030 ;; Hardware stack levels required when called:    2
 15031 ;; This function calls:
 15032 ;;		Nothing
 15033 ;; This function is called by:
 15034 ;;		_main
 15035 ;;		_writeVoltages
 15036 ;;		_measureVoltages
 15037 ;;		_cellBalancing
 15038 ;;		_sprintf
 15039 ;;		_startUp
 15040 ;; This function uses a non-reentrant model
 15041 ;;
 15042                           
 15043                           
 15044                           ;psect for function ___flge
 15045  23F3                     ___flge:	
 15046                           
 15047                           ;incstack = 0
 15048                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15049  23F3  3000               	movlw	0
 15050  23F4  0021               	movlb	1	; select bank1
 15051  23F5  0555               	andwf	___flge@ff1^(0+128),w
 15052  23F6  00DD               	movwf	??___flge^(0+128)
 15053  23F7  3000               	movlw	0
 15054  23F8  0556               	andwf	(___flge@ff1+1)^(0+128),w
 15055  23F9  00DE               	movwf	(??___flge^(0+128)+1)
 15056  23FA  3080               	movlw	128
 15057  23FB  0557               	andwf	(___flge@ff1+2)^(0+128),w
 15058  23FC  00DF               	movwf	(??___flge^(0+128)+2)
 15059  23FD  307F               	movlw	127
 15060  23FE  0558               	andwf	(___flge@ff1+3)^(0+128),w
 15061  23FF  00E0               	movwf	(??___flge^(0+128)+3)
 15062  2400  0860               	movf	(??___flge+3)^(0+128),w
 15063  2401  045F               	iorwf	(??___flge+2)^(0+128),w
 15064  2402  045E               	iorwf	(??___flge+1)^(0+128),w
 15065  2403  045D               	iorwf	??___flge^(0+128),w
 15066  2404  1D03               	skipz
 15067  2405  2C0E               	goto	l1163
 15068  2406  3000               	movlw	0
 15069  2407  00D8               	movwf	(___flge@ff1+3)^(0+128)
 15070  2408  3000               	movlw	0
 15071  2409  00D7               	movwf	(___flge@ff1+2)^(0+128)
 15072  240A  3000               	movlw	0
 15073  240B  00D6               	movwf	(___flge@ff1+1)^(0+128)
 15074  240C  3000               	movlw	0
 15075  240D  00D5               	movwf	___flge@ff1^(0+128)
 15076  240E                     l1163:	
 15077  240E  3000               	movlw	0
 15078  240F  0559               	andwf	___flge@ff2^(0+128),w
 15079  2410  00DD               	movwf	??___flge^(0+128)
 15080  2411  3000               	movlw	0
 15081  2412  055A               	andwf	(___flge@ff2+1)^(0+128),w
 15082  2413  00DE               	movwf	(??___flge^(0+128)+1)
 15083  2414  3080               	movlw	128
 15084  2415  055B               	andwf	(___flge@ff2+2)^(0+128),w
 15085  2416  00DF               	movwf	(??___flge^(0+128)+2)
 15086  2417  307F               	movlw	127
 15087  2418  055C               	andwf	(___flge@ff2+3)^(0+128),w
 15088  2419  00E0               	movwf	(??___flge^(0+128)+3)
 15089  241A  0860               	movf	(??___flge+3)^(0+128),w
 15090  241B  045F               	iorwf	(??___flge+2)^(0+128),w
 15091  241C  045E               	iorwf	(??___flge+1)^(0+128),w
 15092  241D  045D               	iorwf	??___flge^(0+128),w
 15093  241E  1D03               	skipz
 15094  241F  2C28               	goto	l7256
 15095  2420  3000               	movlw	0
 15096  2421  00DC               	movwf	(___flge@ff2+3)^(0+128)
 15097  2422  3000               	movlw	0
 15098  2423  00DB               	movwf	(___flge@ff2+2)^(0+128)
 15099  2424  3000               	movlw	0
 15100  2425  00DA               	movwf	(___flge@ff2+1)^(0+128)
 15101  2426  3000               	movlw	0
 15102  2427  00D9               	movwf	___flge@ff2^(0+128)
 15103  2428                     l7256:	
 15104  2428  1FD8               	btfss	(___flge@ff1+3)^(0+128),7
 15105  2429  2C51               	goto	l7260
 15106  242A  3000               	movlw	0
 15107  242B  00DD               	movwf	??___flge^(0+128)
 15108  242C  3000               	movlw	0
 15109  242D  00DE               	movwf	(??___flge^(0+128)+1)
 15110  242E  3000               	movlw	0
 15111  242F  00DF               	movwf	(??___flge^(0+128)+2)
 15112  2430  3080               	movlw	128
 15113  2431  00E0               	movwf	(??___flge^(0+128)+3)
 15114  2432  0955               	comf	___flge@ff1^(0+128),w
 15115  2433  00E1               	movwf	(??___flge+4)^(0+128)
 15116  2434  0956               	comf	(___flge@ff1+1)^(0+128),w
 15117  2435  00E2               	movwf	((??___flge+4)^(0+128)+1)
 15118  2436  0957               	comf	(___flge@ff1+2)^(0+128),w
 15119  2437  00E3               	movwf	((??___flge+4)^(0+128)+2)
 15120  2438  0958               	comf	(___flge@ff1+3)^(0+128),w
 15121  2439  00E4               	movwf	((??___flge+4)^(0+128)+3)
 15122  243A  0AE1               	incf	(??___flge+4)^(0+128),f
 15123  243B  1903               	skipnz
 15124  243C  0AE2               	incf	((??___flge+4)^(0+128)+1),f
 15125  243D  1903               	skipnz
 15126  243E  0AE3               	incf	((??___flge+4)^(0+128)+2),f
 15127  243F  1903               	skipnz
 15128  2440  0AE4               	incf	((??___flge+4)^(0+128)+3),f
 15129  2441  0861               	movf	(??___flge+4)^(0+128),w
 15130  2442  07DD               	addwf	??___flge^(0+128),f
 15131  2443  0862               	movf	(??___flge+5)^(0+128),w
 15132  2444  3DDE               	addwfc	(??___flge^(0+128)+1),f
 15133  2445  0863               	movf	(??___flge+6)^(0+128),w
 15134  2446  3DDF               	addwfc	(??___flge^(0+128)+2),f
 15135  2447  0864               	movf	(??___flge+7)^(0+128),w
 15136  2448  3DE0               	addwfc	(??___flge^(0+128)+3),f
 15137  2449  0860               	movf	(??___flge+3)^(0+128),w
 15138  244A  00D8               	movwf	(___flge@ff1+3)^(0+128)
 15139  244B  085F               	movf	(??___flge+2)^(0+128),w
 15140  244C  00D7               	movwf	(___flge@ff1+2)^(0+128)
 15141  244D  085E               	movf	(??___flge+1)^(0+128),w
 15142  244E  00D6               	movwf	(___flge@ff1+1)^(0+128)
 15143  244F  085D               	movf	??___flge^(0+128),w
 15144  2450  00D5               	movwf	___flge@ff1^(0+128)
 15145  2451                     l7260:	
 15146  2451  1FDC               	btfss	(___flge@ff2+3)^(0+128),7
 15147  2452  2C7A               	goto	l7264
 15148  2453  3000               	movlw	0
 15149  2454  00DD               	movwf	??___flge^(0+128)
 15150  2455  3000               	movlw	0
 15151  2456  00DE               	movwf	(??___flge^(0+128)+1)
 15152  2457  3000               	movlw	0
 15153  2458  00DF               	movwf	(??___flge^(0+128)+2)
 15154  2459  3080               	movlw	128
 15155  245A  00E0               	movwf	(??___flge^(0+128)+3)
 15156  245B  0959               	comf	___flge@ff2^(0+128),w
 15157  245C  00E1               	movwf	(??___flge+4)^(0+128)
 15158  245D  095A               	comf	(___flge@ff2+1)^(0+128),w
 15159  245E  00E2               	movwf	((??___flge+4)^(0+128)+1)
 15160  245F  095B               	comf	(___flge@ff2+2)^(0+128),w
 15161  2460  00E3               	movwf	((??___flge+4)^(0+128)+2)
 15162  2461  095C               	comf	(___flge@ff2+3)^(0+128),w
 15163  2462  00E4               	movwf	((??___flge+4)^(0+128)+3)
 15164  2463  0AE1               	incf	(??___flge+4)^(0+128),f
 15165  2464  1903               	skipnz
 15166  2465  0AE2               	incf	((??___flge+4)^(0+128)+1),f
 15167  2466  1903               	skipnz
 15168  2467  0AE3               	incf	((??___flge+4)^(0+128)+2),f
 15169  2468  1903               	skipnz
 15170  2469  0AE4               	incf	((??___flge+4)^(0+128)+3),f
 15171  246A  0861               	movf	(??___flge+4)^(0+128),w
 15172  246B  07DD               	addwf	??___flge^(0+128),f
 15173  246C  0862               	movf	(??___flge+5)^(0+128),w
 15174  246D  3DDE               	addwfc	(??___flge^(0+128)+1),f
 15175  246E  0863               	movf	(??___flge+6)^(0+128),w
 15176  246F  3DDF               	addwfc	(??___flge^(0+128)+2),f
 15177  2470  0864               	movf	(??___flge+7)^(0+128),w
 15178  2471  3DE0               	addwfc	(??___flge^(0+128)+3),f
 15179  2472  0860               	movf	(??___flge+3)^(0+128),w
 15180  2473  00DC               	movwf	(___flge@ff2+3)^(0+128)
 15181  2474  085F               	movf	(??___flge+2)^(0+128),w
 15182  2475  00DB               	movwf	(___flge@ff2+2)^(0+128)
 15183  2476  085E               	movf	(??___flge+1)^(0+128),w
 15184  2477  00DA               	movwf	(___flge@ff2+1)^(0+128)
 15185  2478  085D               	movf	??___flge^(0+128),w
 15186  2479  00D9               	movwf	___flge@ff2^(0+128)
 15187  247A                     l7264:	
 15188  247A  3080               	movlw	128
 15189  247B  06D8               	xorwf	(___flge@ff1+3)^(0+128),f
 15190  247C  3080               	movlw	128
 15191  247D  06DC               	xorwf	(___flge@ff2+3)^(0+128),f
 15192  247E  085C               	movf	(___flge@ff2+3)^(0+128),w
 15193  247F  0258               	subwf	(___flge@ff1+3)^(0+128),w
 15194  2480  1D03               	skipz
 15195  2481  0008               	return
 15196  2482  085B               	movf	(___flge@ff2+2)^(0+128),w
 15197  2483  0257               	subwf	(___flge@ff1+2)^(0+128),w
 15198  2484  1D03               	skipz
 15199  2485  0008               	return
 15200  2486  085A               	movf	(___flge@ff2+1)^(0+128),w
 15201  2487  0256               	subwf	(___flge@ff1+1)^(0+128),w
 15202  2488  1D03               	skipz
 15203  2489  0008               	return
 15204  248A  0859               	movf	___flge@ff2^(0+128),w
 15205  248B  0255               	subwf	___flge@ff1^(0+128),w
 15206  248C  0008               	return
 15207  248D                     __end_of___flge:	
 15208                           
 15209                           	psect	text34
 15210  0801                     __ptext34:	
 15211 ;; *************** function _LTC6804_wrcfg *****************
 15212 ;; Defined at:
 15213 ;;		line 1011 in file "ltc6804.c"
 15214 ;; Parameters:    Size  Location     Type
 15215 ;;  total_ic        1    wreg     unsigned char 
 15216 ;;  config          1    9[COMMON] PTR unsigned char [6]
 15217 ;;		 -> configReg(6), 
 15218 ;; Auto vars:     Size  Location     Type
 15219 ;;  total_ic        1   34[BANK0 ] unsigned char 
 15220 ;;  current_byte    1   35[BANK0 ] unsigned char 
 15221 ;;  current_ic      1   36[BANK0 ] unsigned char 
 15222 ;;  cmd            12   19[BANK0 ] unsigned char [12]
 15223 ;;  cfg_pec         2   32[BANK0 ] int 
 15224 ;;  cmd_index       1   37[BANK0 ] unsigned char 
 15225 ;;  CMD_LEN         1   31[BANK0 ] unsigned char 
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15236 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15237 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15238 ;;      Totals:         1      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15239 ;;Total ram usage:       24 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    4
 15242 ;; This function calls:
 15243 ;;		___bmul
 15244 ;;		_pec15_calc
 15245 ;;		_spi_write_array
 15246 ;;		_wakeup_idle
 15247 ;; This function is called by:
 15248 ;;		_cellBalancing
 15249 ;;		_LTC6804_initialize
 15250 ;; This function uses a non-reentrant model
 15251 ;;
 15252                           
 15253                           
 15254                           ;psect for function _LTC6804_wrcfg
 15255  0801                     _LTC6804_wrcfg:	
 15256                           
 15257                           ;incstack = 0
 15258                           ; Regs used in _LTC6804_wrcfg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15259                           ;LTC6804_wrcfg@total_ic stored from wreg
 15260  0801  0020               	movlb	0	; select bank0
 15261  0802  00C2               	movwf	LTC6804_wrcfg@total_ic
 15262                           
 15263                           ;ltc6804.c: 1015: const char BYTES_IN_REG = 6;
 15264                           ;ltc6804.c: 1016: char CMD_LEN = 4+(8*total_ic);
 15265  0803  0842               	movf	LTC6804_wrcfg@total_ic,w
 15266  0804  00AF               	movwf	??_LTC6804_wrcfg
 15267  0805  3002               	movlw	2
 15268  0806                     u6715:	
 15269  0806  35AF               	lslf	??_LTC6804_wrcfg,f
 15270  0807  3EFF               	addlw	-1
 15271  0808  1D03               	skipz
 15272  0809  2806               	goto	u6715
 15273  080A  352F               	lslf	??_LTC6804_wrcfg,w
 15274  080B  3E04               	addlw	4
 15275  080C  00B0               	movwf	??_LTC6804_wrcfg+1
 15276  080D  0830               	movf	??_LTC6804_wrcfg+1,w
 15277  080E  00BF               	movwf	LTC6804_wrcfg@CMD_LEN
 15278                           
 15279                           ;ltc6804.c: 1017: char cmd[12];
 15280                           ;ltc6804.c: 1018: int cfg_pec;
 15281                           ;ltc6804.c: 1019: char cmd_index;
 15282                           ;ltc6804.c: 1024: cmd[0] = 0x00;
 15283  080F  01B3               	clrf	LTC6804_wrcfg@cmd
 15284                           
 15285                           ;ltc6804.c: 1025: cmd[1] = 0x01;
 15286  0810  01B4               	clrf	LTC6804_wrcfg@cmd+1
 15287  0811  0AB4               	incf	LTC6804_wrcfg@cmd+1,f
 15288                           
 15289                           ;ltc6804.c: 1026: cmd[2] = 0x3d;
 15290  0812  303D               	movlw	61
 15291  0813  00AF               	movwf	??_LTC6804_wrcfg
 15292  0814  082F               	movf	??_LTC6804_wrcfg,w
 15293  0815  00B5               	movwf	LTC6804_wrcfg@cmd+2
 15294                           
 15295                           ;ltc6804.c: 1027: cmd[3] = 0x6e;
 15296  0816  306E               	movlw	110
 15297  0817  00AF               	movwf	??_LTC6804_wrcfg
 15298  0818  082F               	movf	??_LTC6804_wrcfg,w
 15299  0819  00B6               	movwf	LTC6804_wrcfg@cmd+3
 15300                           
 15301                           ;ltc6804.c: 1030: cmd_index = 4;
 15302  081A  3004               	movlw	4
 15303  081B  00AF               	movwf	??_LTC6804_wrcfg
 15304  081C  082F               	movf	??_LTC6804_wrcfg,w
 15305  081D  00C5               	movwf	LTC6804_wrcfg@cmd_index
 15306                           
 15307                           ;ltc6804.c: 1031: for (char current_ic = total_ic; current_ic > 0; current_ic--)
 15308  081E  0842               	movf	LTC6804_wrcfg@total_ic,w
 15309  081F  00AF               	movwf	??_LTC6804_wrcfg
 15310  0820  082F               	movf	??_LTC6804_wrcfg,w
 15311  0821  00C4               	movwf	LTC6804_wrcfg@current_ic
 15312  0822  0844               	movf	LTC6804_wrcfg@current_ic,w
 15313  0823  1903               	btfsc	3,2
 15314  0824  288F               	goto	l5370
 15315  0825                     l5344:	
 15316                           
 15317                           ;ltc6804.c: 1032: {
 15318                           ;ltc6804.c: 1035: for (char current_byte = 0; current_byte < BYTES_IN_REG; current_byte+
      +                          +)
 15319  0825  01C3               	clrf	LTC6804_wrcfg@current_byte
 15320  0826  3060               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 15321  0827  0084               	movwf	4
 15322  0828  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 15323  0829  0085               	movwf	5
 15324  082A  0800               	movf	0,w	;code access
 15325  082B  0243               	subwf	LTC6804_wrcfg@current_byte,w
 15326  082C  1803               	btfsc	3,0
 15327  082D  285A               	goto	l5358
 15328  082E                     l5350:	
 15329                           
 15330                           ;ltc6804.c: 1036: {
 15331                           ;ltc6804.c: 1038: cmd[cmd_index] = config[current_ic-1][current_byte];
 15332  082E  3006               	movlw	6
 15333  082F  00AF               	movwf	??_LTC6804_wrcfg
 15334  0830  082F               	movf	??_LTC6804_wrcfg,w
 15335  0831  00F2               	movwf	___bmul@multiplicand
 15336  0832  0844               	movf	LTC6804_wrcfg@current_ic,w
 15337  0833  3EFF               	addlw	-1
 15338  0834  31AB  2384  3188   	fcall	___bmul
 15339  0837  0779               	addwf	LTC6804_wrcfg@config,w
 15340  0838  0020               	movlb	0	; select bank0
 15341  0839  00B0               	movwf	??_LTC6804_wrcfg+1
 15342  083A  0843               	movf	LTC6804_wrcfg@current_byte,w
 15343  083B  0730               	addwf	??_LTC6804_wrcfg+1,w
 15344  083C  00B1               	movwf	??_LTC6804_wrcfg+2
 15345  083D  0831               	movf	??_LTC6804_wrcfg+2,w
 15346  083E  0086               	movwf	6
 15347  083F  3002               	movlw	2	; select bank4/5
 15348  0840  0087               	movwf	7
 15349  0841  0801               	movf	1,w
 15350  0842  00B2               	movwf	??_LTC6804_wrcfg+3
 15351  0843  0845               	movf	LTC6804_wrcfg@cmd_index,w
 15352  0844  3E33               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 15353  0845  0086               	movwf	6
 15354  0846  0187               	clrf	7
 15355  0847  0832               	movf	??_LTC6804_wrcfg+3,w
 15356  0848  0081               	movwf	1
 15357                           
 15358                           ;ltc6804.c: 1039: cmd_index = cmd_index + 1;
 15359  0849  0845               	movf	LTC6804_wrcfg@cmd_index,w
 15360  084A  3E01               	addlw	1
 15361  084B  00AF               	movwf	??_LTC6804_wrcfg
 15362  084C  082F               	movf	??_LTC6804_wrcfg,w
 15363  084D  00C5               	movwf	LTC6804_wrcfg@cmd_index
 15364  084E  3001               	movlw	1
 15365  084F  00AF               	movwf	??_LTC6804_wrcfg
 15366  0850  082F               	movf	??_LTC6804_wrcfg,w
 15367  0851  07C3               	addwf	LTC6804_wrcfg@current_byte,f
 15368  0852  3060               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 15369  0853  0084               	movwf	4
 15370  0854  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 15371  0855  0085               	movwf	5
 15372  0856  0800               	movf	0,w	;code access
 15373  0857  0243               	subwf	LTC6804_wrcfg@current_byte,w
 15374  0858  1C03               	skipc
 15375  0859  282E               	goto	l5350
 15376  085A                     l5358:	
 15377                           
 15378                           ;ltc6804.c: 1040: }
 15379                           ;ltc6804.c: 1042: cfg_pec = (int)pec15_calc(BYTES_IN_REG, &config[current_ic-1][0]);
 15380  085A  3006               	movlw	6
 15381  085B  00AF               	movwf	??_LTC6804_wrcfg
 15382  085C  082F               	movf	??_LTC6804_wrcfg,w
 15383  085D  00F2               	movwf	___bmul@multiplicand
 15384  085E  0844               	movf	LTC6804_wrcfg@current_ic,w
 15385  085F  3EFF               	addlw	-1
 15386  0860  31AB  2384  3188   	fcall	___bmul
 15387  0863  0779               	addwf	LTC6804_wrcfg@config,w
 15388  0864  00F6               	movwf	pec15_calc@data
 15389  0865  3002               	movlw	2
 15390  0866  00F7               	movwf	pec15_calc@data+1
 15391  0867  3060               	movlw	low (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 15392  0868  0084               	movwf	4
 15393  0869  30B1               	movlw	high (LTC6804_wrcfg@BYTES_IN_REG| (0+32768))
 15394  086A  0085               	movwf	5
 15395  086B  0800               	movf	0,w	;code access
 15396  086C  31AE  2611  3188   	fcall	_pec15_calc
 15397  086F  0877               	movf	?_pec15_calc+1,w
 15398  0870  0020               	movlb	0	; select bank0
 15399  0871  00C1               	movwf	LTC6804_wrcfg@cfg_pec+1
 15400  0872  0876               	movf	?_pec15_calc,w
 15401  0873  00C0               	movwf	LTC6804_wrcfg@cfg_pec
 15402                           
 15403                           ;ltc6804.c: 1043: cmd[cmd_index] = (char)(cfg_pec >> 8);
 15404  0874  0841               	movf	LTC6804_wrcfg@cfg_pec+1,w
 15405  0875  00AF               	movwf	??_LTC6804_wrcfg
 15406  0876  0845               	movf	LTC6804_wrcfg@cmd_index,w
 15407  0877  3E33               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 15408  0878  0086               	movwf	6
 15409  0879  0187               	clrf	7
 15410  087A  082F               	movf	??_LTC6804_wrcfg,w
 15411  087B  0081               	movwf	1
 15412                           
 15413                           ;ltc6804.c: 1044: cmd[cmd_index + 1] = (char)cfg_pec;
 15414  087C  0840               	movf	LTC6804_wrcfg@cfg_pec,w
 15415  087D  00AF               	movwf	??_LTC6804_wrcfg
 15416  087E  0845               	movf	LTC6804_wrcfg@cmd_index,w
 15417  087F  3E01               	addlw	1
 15418  0880  3E33               	addlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 15419  0881  0086               	movwf	6
 15420  0882  0187               	clrf	7
 15421  0883  082F               	movf	??_LTC6804_wrcfg,w
 15422  0884  0081               	movwf	1
 15423                           
 15424                           ;ltc6804.c: 1045: cmd_index = cmd_index + 2;
 15425  0885  0845               	movf	LTC6804_wrcfg@cmd_index,w
 15426  0886  3E02               	addlw	2
 15427  0887  00AF               	movwf	??_LTC6804_wrcfg
 15428  0888  082F               	movf	??_LTC6804_wrcfg,w
 15429  0889  00C5               	movwf	LTC6804_wrcfg@cmd_index
 15430  088A  3001               	movlw	1
 15431  088B  02C4               	subwf	LTC6804_wrcfg@current_ic,f
 15432  088C  0844               	movf	LTC6804_wrcfg@current_ic,w
 15433  088D  1D03               	btfss	3,2
 15434  088E  2825               	goto	l5344
 15435  088F                     l5370:	
 15436                           
 15437                           ;ltc6804.c: 1046: }
 15438                           ;ltc6804.c: 1049: wakeup_idle ();
 15439  088F  31AB  234E  3188   	fcall	_wakeup_idle
 15440                           
 15441                           ;ltc6804.c: 1051: LATDbits.LATD3 = 0;
 15442  0892  0022               	movlb	2	; select bank2
 15443  0893  118F               	bcf	15,3	;volatile
 15444                           
 15445                           ;ltc6804.c: 1052: spi_write_array(CMD_LEN, cmd);
 15446  0894  3033               	movlw	(low (LTC6804_wrcfg@cmd| 0))& (0+255)
 15447  0895  0020               	movlb	0	; select bank0
 15448  0896  00AF               	movwf	??_LTC6804_wrcfg
 15449  0897  082F               	movf	??_LTC6804_wrcfg,w
 15450  0898  00F5               	movwf	spi_write_array@data
 15451  0899  083F               	movf	LTC6804_wrcfg@CMD_LEN,w
 15452  089A  31AB  23C9         	fcall	_spi_write_array
 15453                           
 15454                           ;ltc6804.c: 1053: LATDbits.LATD3 = 1;
 15455  089C  0022               	movlb	2	; select bank2
 15456  089D  158F               	bsf	15,3	;volatile
 15457  089E  0008               	return
 15458  089F                     __end_of_LTC6804_wrcfg:	
 15459                           
 15460                           	psect	text35
 15461  1E75                     __ptext35:	
 15462 ;; *************** function _LTC6804_rdcv *****************
 15463 ;; Defined at:
 15464 ;;		line 483 in file "ltc6804.c"
 15465 ;; Parameters:    Size  Location     Type
 15466 ;;  reg             1    wreg     unsigned char 
 15467 ;;  total_ic        1   28[BANK0 ] unsigned char 
 15468 ;;  cell_codes      1   29[BANK0 ] PTR unsigned int [12]
 15469 ;;		 -> measureVoltages@ltcData(24), 
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;  reg             1   50[BANK0 ] unsigned char 
 15472 ;;  current_cell    1   52[BANK0 ] unsigned char 
 15473 ;;  current_cell    1   54[BANK0 ] unsigned char 
 15474 ;;  current_ic      1   51[BANK0 ] unsigned char 
 15475 ;;  current_ic      1   53[BANK0 ] unsigned char 
 15476 ;;  cell_reg        1   55[BANK0 ] unsigned char 
 15477 ;;  cell_data       8   35[BANK0 ] unsigned char [8]
 15478 ;;  data_pec        2   48[BANK0 ] int 
 15479 ;;  received_pec    2   46[BANK0 ] int 
 15480 ;;  parsed_cell     2   44[BANK0 ] int 
 15481 ;;  data_counter    1   56[BANK0 ] unsigned char 
 15482 ;;  pec_error       1   43[BANK0 ] unsigned char 
 15483 ;; Return value:  Size  Location     Type
 15484 ;;                  1    wreg      unsigned char 
 15485 ;; Registers used:
 15486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15487 ;; Tracked objects:
 15488 ;;		On entry : 0/0
 15489 ;;		On exit  : 0/0
 15490 ;;		Unchanged: 0/0
 15491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15493 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15494 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15495 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15496 ;;Total ram usage:       29 bytes
 15497 ;; Hardware stack levels used:    1
 15498 ;; Hardware stack levels required when called:    5
 15499 ;; This function calls:
 15500 ;;		_LTC6804_rdcv_reg
 15501 ;;		___bmul
 15502 ;;		___wmul
 15503 ;;		_pec15_calc
 15504 ;; This function is called by:
 15505 ;;		_measureVoltages
 15506 ;; This function uses a non-reentrant model
 15507 ;;
 15508                           
 15509                           
 15510                           ;psect for function _LTC6804_rdcv
 15511  1E75                     _LTC6804_rdcv:	
 15512                           
 15513                           ;incstack = 0
 15514                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15515                           ;LTC6804_rdcv@reg stored from wreg
 15516  1E75  0020               	movlb	0	; select bank0
 15517  1E76  00D2               	movwf	LTC6804_rdcv@reg
 15518                           
 15519                           ;ltc6804.c: 489: const char NUM_RX_BYT = 8;
 15520                           ;ltc6804.c: 490: const char BYT_IN_REG = 6;
 15521                           ;ltc6804.c: 491: const char CELL_IN_REG = 3;
 15522                           ;ltc6804.c: 493: char cell_data[8];
 15523                           ;ltc6804.c: 494: char pec_error = 0;
 15524  1E77  01CB               	clrf	LTC6804_rdcv@pec_error
 15525                           
 15526                           ;ltc6804.c: 495: int parsed_cell;
 15527                           ;ltc6804.c: 496: int received_pec;
 15528                           ;ltc6804.c: 497: int data_pec;
 15529                           ;ltc6804.c: 498: char data_counter=0;
 15530  1E78  01D8               	clrf	LTC6804_rdcv@data_counter
 15531                           
 15532                           ;ltc6804.c: 501: if (reg == 0)
 15533  1E79  0852               	movf	LTC6804_rdcv@reg,w
 15534  1E7A  1D03               	btfss	3,2
 15535  1E7B  2F43               	goto	l7954
 15536                           
 15537                           ;ltc6804.c: 502: {
 15538                           ;ltc6804.c: 504: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 15539  1E7C  01D7               	clrf	LTC6804_rdcv@cell_reg
 15540  1E7D  0AD7               	incf	LTC6804_rdcv@cell_reg,f
 15541  1E7E                     L10:	
 15542  1E7E  3005               	movlw	5
 15543  1E7F  0257               	subwf	LTC6804_rdcv@cell_reg,w
 15544  1E80  1803               	btfsc	3,0
 15545  1E81  2FFE               	goto	l7986
 15546                           
 15547                           ;ltc6804.c: 505: {
 15548                           ;ltc6804.c: 506: data_counter = 0;
 15549  1E82  01D8               	clrf	LTC6804_rdcv@data_counter
 15550                           
 15551                           ;ltc6804.c: 507: LTC6804_rdcv_reg(cell_reg, total_ic, cell_data);
 15552  1E83  083C               	movf	LTC6804_rdcv@total_ic,w
 15553  1E84  00BE               	movwf	??_LTC6804_rdcv
 15554  1E85  083E               	movf	??_LTC6804_rdcv,w
 15555  1E86  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 15556  1E87  3043               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15557  1E88  00BF               	movwf	??_LTC6804_rdcv+1
 15558  1E89  083F               	movf	??_LTC6804_rdcv+1,w
 15559  1E8A  00B0               	movwf	LTC6804_rdcv_reg@data
 15560  1E8B  0857               	movf	LTC6804_rdcv@cell_reg,w
 15561  1E8C  31AF  27AB  319E   	fcall	_LTC6804_rdcv_reg
 15562                           
 15563                           ;ltc6804.c: 509: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 15564  1E8F  0020               	movlb	0	; select bank0
 15565  1E90  01D3               	clrf	LTC6804_rdcv@current_ic
 15566  1E91                     l650:	
 15567  1E91  083C               	movf	LTC6804_rdcv@total_ic,w
 15568  1E92  0253               	subwf	LTC6804_rdcv@current_ic,w
 15569  1E93  1803               	btfsc	3,0
 15570  1E94  2F3E               	goto	l7950
 15571                           
 15572                           ;ltc6804.c: 510: {
 15573                           ;ltc6804.c: 513: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 15574  1E95  01D4               	clrf	LTC6804_rdcv@current_cell
 15575  1E96  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15576  1E97  0084               	movwf	4
 15577  1E98  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15578  1E99  0085               	movwf	5
 15579  1E9A  0800               	movf	0,w	;code access
 15580  1E9B  0254               	subwf	LTC6804_rdcv@current_cell,w
 15581  1E9C  1803               	btfsc	3,0
 15582  1E9D  2EF3               	goto	l7938
 15583  1E9E                     l7928:	
 15584                           
 15585                           ;ltc6804.c: 514: {
 15586                           ;ltc6804.c: 516: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 15587  1E9E  0858               	movf	LTC6804_rdcv@data_counter,w
 15588  1E9F  3E01               	addlw	1
 15589  1EA0  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15590  1EA1  0086               	movwf	6
 15591  1EA2  0187               	clrf	7
 15592  1EA3  0801               	movf	1,w
 15593  1EA4  00BE               	movwf	??_LTC6804_rdcv
 15594  1EA5  01BF               	clrf	??_LTC6804_rdcv+1
 15595  1EA6  083E               	movf	??_LTC6804_rdcv,w
 15596  1EA7  00BF               	movwf	??_LTC6804_rdcv+1
 15597  1EA8  01BE               	clrf	??_LTC6804_rdcv
 15598  1EA9  0858               	movf	LTC6804_rdcv@data_counter,w
 15599  1EAA  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15600  1EAB  0086               	movwf	6
 15601  1EAC  0187               	clrf	7
 15602  1EAD  0801               	movf	1,w
 15603  1EAE  073E               	addwf	??_LTC6804_rdcv,w
 15604  1EAF  00CC               	movwf	LTC6804_rdcv@parsed_cell
 15605  1EB0  083F               	movf	??_LTC6804_rdcv+1,w
 15606  1EB1  1803               	skipnc
 15607  1EB2  0A3F               	incf	??_LTC6804_rdcv+1,w
 15608  1EB3  00CD               	movwf	LTC6804_rdcv@parsed_cell+1
 15609                           
 15610                           ;ltc6804.c: 519: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 15611  1EB4  3018               	movlw	24
 15612  1EB5  00BE               	movwf	??_LTC6804_rdcv
 15613  1EB6  083E               	movf	??_LTC6804_rdcv,w
 15614  1EB7  00F2               	movwf	___bmul@multiplicand
 15615  1EB8  0853               	movf	LTC6804_rdcv@current_ic,w
 15616  1EB9  31AB  2384  319E   	fcall	___bmul
 15617  1EBC  0020               	movlb	0	; select bank0
 15618  1EBD  073D               	addwf	LTC6804_rdcv@cell_codes,w
 15619  1EBE  00BF               	movwf	??_LTC6804_rdcv+1
 15620  1EBF  0857               	movf	LTC6804_rdcv@cell_reg,w
 15621  1EC0  3EFF               	addlw	255
 15622  1EC1  00F2               	movwf	___wmul@multiplier
 15623  1EC2  30FF               	movlw	255
 15624  1EC3  1803               	skipnc
 15625  1EC4  3000               	movlw	0
 15626  1EC5  00F3               	movwf	___wmul@multiplier+1
 15627  1EC6  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15628  1EC7  0084               	movwf	4
 15629  1EC8  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15630  1EC9  0085               	movwf	5
 15631  1ECA  0800               	movf	0,w	;code access
 15632  1ECB  00C0               	movwf	??_LTC6804_rdcv+2
 15633  1ECC  01C1               	clrf	??_LTC6804_rdcv+3
 15634  1ECD  0840               	movf	??_LTC6804_rdcv+2,w
 15635  1ECE  00F4               	movwf	___wmul@multiplicand
 15636  1ECF  0841               	movf	??_LTC6804_rdcv+3,w
 15637  1ED0  00F5               	movwf	___wmul@multiplicand+1
 15638  1ED1  31AB  23DE  319E   	fcall	___wmul
 15639  1ED4  0872               	movf	?___wmul,w
 15640  1ED5  0020               	movlb	0	; select bank0
 15641  1ED6  0754               	addwf	LTC6804_rdcv@current_cell,w
 15642  1ED7  0709               	addwf	9,w
 15643  1ED8  073F               	addwf	??_LTC6804_rdcv+1,w
 15644  1ED9  00C2               	movwf	??_LTC6804_rdcv+4
 15645  1EDA  0842               	movf	??_LTC6804_rdcv+4,w
 15646  1EDB  0086               	movwf	6
 15647  1EDC  3001               	movlw	1	; select bank2/3
 15648  1EDD  0087               	movwf	7
 15649  1EDE  084C               	movf	LTC6804_rdcv@parsed_cell,w
 15650  1EDF  3FC0               	movwi [0]fsr1
 15651  1EE0  084D               	movf	LTC6804_rdcv@parsed_cell+1,w
 15652  1EE1  3FC1               	movwi [1]fsr1
 15653                           
 15654                           ;ltc6804.c: 520: data_counter = data_counter + 2;
 15655  1EE2  0858               	movf	LTC6804_rdcv@data_counter,w
 15656  1EE3  3E02               	addlw	2
 15657  1EE4  00BE               	movwf	??_LTC6804_rdcv
 15658  1EE5  083E               	movf	??_LTC6804_rdcv,w
 15659  1EE6  00D8               	movwf	LTC6804_rdcv@data_counter
 15660  1EE7  3001               	movlw	1
 15661  1EE8  00BE               	movwf	??_LTC6804_rdcv
 15662  1EE9  083E               	movf	??_LTC6804_rdcv,w
 15663  1EEA  07D4               	addwf	LTC6804_rdcv@current_cell,f
 15664  1EEB  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15665  1EEC  0084               	movwf	4
 15666  1EED  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15667  1EEE  0085               	movwf	5
 15668  1EEF  0800               	movf	0,w	;code access
 15669  1EF0  0254               	subwf	LTC6804_rdcv@current_cell,w
 15670  1EF1  1C03               	skipc
 15671  1EF2  2E9E               	goto	l7928
 15672  1EF3                     l7938:	
 15673                           
 15674                           ;ltc6804.c: 522: }
 15675                           ;ltc6804.c: 524: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 15676  1EF3  0858               	movf	LTC6804_rdcv@data_counter,w
 15677  1EF4  3E01               	addlw	1
 15678  1EF5  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15679  1EF6  0086               	movwf	6
 15680  1EF7  0187               	clrf	7
 15681  1EF8  0801               	movf	1,w
 15682  1EF9  00BE               	movwf	??_LTC6804_rdcv
 15683  1EFA  01BF               	clrf	??_LTC6804_rdcv+1
 15684  1EFB  0858               	movf	LTC6804_rdcv@data_counter,w
 15685  1EFC  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15686  1EFD  0086               	movwf	6
 15687  1EFE  0187               	clrf	7
 15688  1EFF  0801               	movf	1,w
 15689  1F00  00C0               	movwf	??_LTC6804_rdcv+2
 15690  1F01  01C1               	clrf	??_LTC6804_rdcv+3
 15691  1F02  0840               	movf	??_LTC6804_rdcv+2,w
 15692  1F03  00C1               	movwf	??_LTC6804_rdcv+3
 15693  1F04  01C0               	clrf	??_LTC6804_rdcv+2
 15694  1F05  083E               	movf	??_LTC6804_rdcv,w
 15695  1F06  0740               	addwf	??_LTC6804_rdcv+2,w
 15696  1F07  00CE               	movwf	LTC6804_rdcv@received_pec
 15697  1F08  083F               	movf	??_LTC6804_rdcv+1,w
 15698  1F09  3D41               	addwfc	??_LTC6804_rdcv+3,w
 15699  1F0A  00CF               	movwf	LTC6804_rdcv@received_pec+1
 15700                           
 15701                           ;ltc6804.c: 526: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 15702  1F0B  3068               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15703  1F0C  0084               	movwf	4
 15704  1F0D  30B1               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15705  1F0E  0085               	movwf	5
 15706  1F0F  0800               	movf	0,w	;code access
 15707  1F10  00BE               	movwf	??_LTC6804_rdcv
 15708  1F11  083E               	movf	??_LTC6804_rdcv,w
 15709  1F12  00F2               	movwf	___bmul@multiplicand
 15710  1F13  0853               	movf	LTC6804_rdcv@current_ic,w
 15711  1F14  31AB  2384  319E   	fcall	___bmul
 15712  1F17  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15713  1F18  00F6               	movwf	pec15_calc@data
 15714  1F19  3000               	movlw	0
 15715  1F1A  00F7               	movwf	pec15_calc@data+1
 15716  1F1B  3067               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15717  1F1C  0084               	movwf	4
 15718  1F1D  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15719  1F1E  0085               	movwf	5
 15720  1F1F  0800               	movf	0,w	;code access
 15721  1F20  31AE  2611  319E   	fcall	_pec15_calc
 15722  1F23  0877               	movf	?_pec15_calc+1,w
 15723  1F24  0020               	movlb	0	; select bank0
 15724  1F25  00D1               	movwf	LTC6804_rdcv@data_pec+1
 15725  1F26  0876               	movf	?_pec15_calc,w
 15726  1F27  00D0               	movwf	LTC6804_rdcv@data_pec
 15727                           
 15728                           ;ltc6804.c: 527: if(received_pec != data_pec)
 15729  1F28  0851               	movf	LTC6804_rdcv@data_pec+1,w
 15730  1F29  064F               	xorwf	LTC6804_rdcv@received_pec+1,w
 15731  1F2A  1D03               	skipz
 15732  1F2B  2F2E               	goto	u11105
 15733  1F2C  0850               	movf	LTC6804_rdcv@data_pec,w
 15734  1F2D  064E               	xorwf	LTC6804_rdcv@received_pec,w
 15735  1F2E                     u11105:	
 15736  1F2E  1903               	skipnz
 15737  1F2F  2F34               	goto	l7946
 15738                           
 15739                           ;ltc6804.c: 528: {
 15740                           ;ltc6804.c: 529: pec_error = -1;
 15741  1F30  30FF               	movlw	255
 15742  1F31  00BE               	movwf	??_LTC6804_rdcv
 15743  1F32  083E               	movf	??_LTC6804_rdcv,w
 15744  1F33  00CB               	movwf	LTC6804_rdcv@pec_error
 15745  1F34                     l7946:	
 15746                           
 15747                           ;ltc6804.c: 531: }
 15748                           ;ltc6804.c: 532: data_counter=data_counter+2;
 15749  1F34  0858               	movf	LTC6804_rdcv@data_counter,w
 15750  1F35  3E02               	addlw	2
 15751  1F36  00BE               	movwf	??_LTC6804_rdcv
 15752  1F37  083E               	movf	??_LTC6804_rdcv,w
 15753  1F38  00D8               	movwf	LTC6804_rdcv@data_counter
 15754  1F39  3001               	movlw	1
 15755  1F3A  00BE               	movwf	??_LTC6804_rdcv
 15756  1F3B  083E               	movf	??_LTC6804_rdcv,w
 15757  1F3C  07D3               	addwf	LTC6804_rdcv@current_ic,f
 15758  1F3D  2E91               	goto	l650
 15759  1F3E                     l7950:	
 15760  1F3E  3001               	movlw	1
 15761  1F3F  00BE               	movwf	??_LTC6804_rdcv
 15762  1F40  083E               	movf	??_LTC6804_rdcv,w
 15763  1F41  07D7               	addwf	LTC6804_rdcv@cell_reg,f
 15764  1F42  2E7E               	goto	L10
 15765  1F43                     l7954:	
 15766                           ;ltc6804.c: 534: }
 15767                           ;ltc6804.c: 535: }
 15768                           ;ltc6804.c: 536: }
 15769                           
 15770                           
 15771                           ;ltc6804.c: 538: else
 15772                           ;ltc6804.c: 539: {
 15773                           ;ltc6804.c: 541: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 15774  1F43  083C               	movf	LTC6804_rdcv@total_ic,w
 15775  1F44  00BE               	movwf	??_LTC6804_rdcv
 15776  1F45  083E               	movf	??_LTC6804_rdcv,w
 15777  1F46  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 15778  1F47  3043               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15779  1F48  00BF               	movwf	??_LTC6804_rdcv+1
 15780  1F49  083F               	movf	??_LTC6804_rdcv+1,w
 15781  1F4A  00B0               	movwf	LTC6804_rdcv_reg@data
 15782  1F4B  0852               	movf	LTC6804_rdcv@reg,w
 15783  1F4C  31AF  27AB  319E   	fcall	_LTC6804_rdcv_reg
 15784                           
 15785                           ;ltc6804.c: 542: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 15786  1F4F  0020               	movlb	0	; select bank0
 15787  1F50  01D5               	clrf	LTC6804_rdcv@current_ic_1339
 15788  1F51                     l657:	
 15789  1F51  083C               	movf	LTC6804_rdcv@total_ic,w
 15790  1F52  0255               	subwf	LTC6804_rdcv@current_ic_1339,w
 15791  1F53  1803               	btfsc	3,0
 15792  1F54  2FFE               	goto	l7986
 15793                           
 15794                           ;ltc6804.c: 543: {
 15795                           ;ltc6804.c: 545: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 15796  1F55  01D6               	clrf	LTC6804_rdcv@current_cell_1340
 15797  1F56  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15798  1F57  0084               	movwf	4
 15799  1F58  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15800  1F59  0085               	movwf	5
 15801  1F5A  0800               	movf	0,w	;code access
 15802  1F5B  0256               	subwf	LTC6804_rdcv@current_cell_1340,w
 15803  1F5C  1803               	btfsc	3,0
 15804  1F5D  2FB3               	goto	l7974
 15805  1F5E                     l7964:	
 15806                           
 15807                           ;ltc6804.c: 546: {
 15808                           ;ltc6804.c: 548: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 15809  1F5E  0858               	movf	LTC6804_rdcv@data_counter,w
 15810  1F5F  3E01               	addlw	1
 15811  1F60  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15812  1F61  0086               	movwf	6
 15813  1F62  0187               	clrf	7
 15814  1F63  0801               	movf	1,w
 15815  1F64  00BE               	movwf	??_LTC6804_rdcv
 15816  1F65  01BF               	clrf	??_LTC6804_rdcv+1
 15817  1F66  083E               	movf	??_LTC6804_rdcv,w
 15818  1F67  00BF               	movwf	??_LTC6804_rdcv+1
 15819  1F68  01BE               	clrf	??_LTC6804_rdcv
 15820  1F69  0858               	movf	LTC6804_rdcv@data_counter,w
 15821  1F6A  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15822  1F6B  0086               	movwf	6
 15823  1F6C  0187               	clrf	7
 15824  1F6D  0801               	movf	1,w
 15825  1F6E  073E               	addwf	??_LTC6804_rdcv,w
 15826  1F6F  00CC               	movwf	LTC6804_rdcv@parsed_cell
 15827  1F70  083F               	movf	??_LTC6804_rdcv+1,w
 15828  1F71  1803               	skipnc
 15829  1F72  0A3F               	incf	??_LTC6804_rdcv+1,w
 15830  1F73  00CD               	movwf	LTC6804_rdcv@parsed_cell+1
 15831                           
 15832                           ;ltc6804.c: 551: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 15833  1F74  3018               	movlw	24
 15834  1F75  00BE               	movwf	??_LTC6804_rdcv
 15835  1F76  083E               	movf	??_LTC6804_rdcv,w
 15836  1F77  00F2               	movwf	___bmul@multiplicand
 15837  1F78  0855               	movf	LTC6804_rdcv@current_ic_1339,w
 15838  1F79  31AB  2384  319E   	fcall	___bmul
 15839  1F7C  0020               	movlb	0	; select bank0
 15840  1F7D  073D               	addwf	LTC6804_rdcv@cell_codes,w
 15841  1F7E  00BF               	movwf	??_LTC6804_rdcv+1
 15842  1F7F  0852               	movf	LTC6804_rdcv@reg,w
 15843  1F80  3EFF               	addlw	255
 15844  1F81  00F2               	movwf	___wmul@multiplier
 15845  1F82  30FF               	movlw	255
 15846  1F83  1803               	skipnc
 15847  1F84  3000               	movlw	0
 15848  1F85  00F3               	movwf	___wmul@multiplier+1
 15849  1F86  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15850  1F87  0084               	movwf	4
 15851  1F88  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15852  1F89  0085               	movwf	5
 15853  1F8A  0800               	movf	0,w	;code access
 15854  1F8B  00C0               	movwf	??_LTC6804_rdcv+2
 15855  1F8C  01C1               	clrf	??_LTC6804_rdcv+3
 15856  1F8D  0840               	movf	??_LTC6804_rdcv+2,w
 15857  1F8E  00F4               	movwf	___wmul@multiplicand
 15858  1F8F  0841               	movf	??_LTC6804_rdcv+3,w
 15859  1F90  00F5               	movwf	___wmul@multiplicand+1
 15860  1F91  31AB  23DE  319E   	fcall	___wmul
 15861  1F94  0872               	movf	?___wmul,w
 15862  1F95  0020               	movlb	0	; select bank0
 15863  1F96  0756               	addwf	LTC6804_rdcv@current_cell_1340,w
 15864  1F97  0709               	addwf	9,w
 15865  1F98  073F               	addwf	??_LTC6804_rdcv+1,w
 15866  1F99  00C2               	movwf	??_LTC6804_rdcv+4
 15867  1F9A  0842               	movf	??_LTC6804_rdcv+4,w
 15868  1F9B  0086               	movwf	6
 15869  1F9C  3001               	movlw	1	; select bank2/3
 15870  1F9D  0087               	movwf	7
 15871  1F9E  084C               	movf	LTC6804_rdcv@parsed_cell,w
 15872  1F9F  3FC0               	movwi [0]fsr1
 15873  1FA0  084D               	movf	LTC6804_rdcv@parsed_cell+1,w
 15874  1FA1  3FC1               	movwi [1]fsr1
 15875                           
 15876                           ;ltc6804.c: 552: data_counter= data_counter + 2;
 15877  1FA2  0858               	movf	LTC6804_rdcv@data_counter,w
 15878  1FA3  3E02               	addlw	2
 15879  1FA4  00BE               	movwf	??_LTC6804_rdcv
 15880  1FA5  083E               	movf	??_LTC6804_rdcv,w
 15881  1FA6  00D8               	movwf	LTC6804_rdcv@data_counter
 15882  1FA7  3001               	movlw	1
 15883  1FA8  00BE               	movwf	??_LTC6804_rdcv
 15884  1FA9  083E               	movf	??_LTC6804_rdcv,w
 15885  1FAA  07D6               	addwf	LTC6804_rdcv@current_cell_1340,f
 15886  1FAB  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15887  1FAC  0084               	movwf	4
 15888  1FAD  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 15889  1FAE  0085               	movwf	5
 15890  1FAF  0800               	movf	0,w	;code access
 15891  1FB0  0256               	subwf	LTC6804_rdcv@current_cell_1340,w
 15892  1FB1  1C03               	skipc
 15893  1FB2  2F5E               	goto	l7964
 15894  1FB3                     l7974:	
 15895                           
 15896                           ;ltc6804.c: 554: }
 15897                           ;ltc6804.c: 556: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 15898  1FB3  0858               	movf	LTC6804_rdcv@data_counter,w
 15899  1FB4  3E01               	addlw	1
 15900  1FB5  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15901  1FB6  0086               	movwf	6
 15902  1FB7  0187               	clrf	7
 15903  1FB8  0801               	movf	1,w
 15904  1FB9  00BE               	movwf	??_LTC6804_rdcv
 15905  1FBA  01BF               	clrf	??_LTC6804_rdcv+1
 15906  1FBB  0858               	movf	LTC6804_rdcv@data_counter,w
 15907  1FBC  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15908  1FBD  0086               	movwf	6
 15909  1FBE  0187               	clrf	7
 15910  1FBF  0801               	movf	1,w
 15911  1FC0  00C0               	movwf	??_LTC6804_rdcv+2
 15912  1FC1  01C1               	clrf	??_LTC6804_rdcv+3
 15913  1FC2  0840               	movf	??_LTC6804_rdcv+2,w
 15914  1FC3  00C1               	movwf	??_LTC6804_rdcv+3
 15915  1FC4  01C0               	clrf	??_LTC6804_rdcv+2
 15916  1FC5  083E               	movf	??_LTC6804_rdcv,w
 15917  1FC6  0740               	addwf	??_LTC6804_rdcv+2,w
 15918  1FC7  00CE               	movwf	LTC6804_rdcv@received_pec
 15919  1FC8  083F               	movf	??_LTC6804_rdcv+1,w
 15920  1FC9  3D41               	addwfc	??_LTC6804_rdcv+3,w
 15921  1FCA  00CF               	movwf	LTC6804_rdcv@received_pec+1
 15922                           
 15923                           ;ltc6804.c: 558: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 15924  1FCB  3068               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15925  1FCC  0084               	movwf	4
 15926  1FCD  30B1               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 15927  1FCE  0085               	movwf	5
 15928  1FCF  0800               	movf	0,w	;code access
 15929  1FD0  00BE               	movwf	??_LTC6804_rdcv
 15930  1FD1  083E               	movf	??_LTC6804_rdcv,w
 15931  1FD2  00F2               	movwf	___bmul@multiplicand
 15932  1FD3  0855               	movf	LTC6804_rdcv@current_ic_1339,w
 15933  1FD4  31AB  2384  319E   	fcall	___bmul
 15934  1FD7  3E43               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 15935  1FD8  00F6               	movwf	pec15_calc@data
 15936  1FD9  3000               	movlw	0
 15937  1FDA  00F7               	movwf	pec15_calc@data+1
 15938  1FDB  3067               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15939  1FDC  0084               	movwf	4
 15940  1FDD  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 15941  1FDE  0085               	movwf	5
 15942  1FDF  0800               	movf	0,w	;code access
 15943  1FE0  31AE  2611  319E   	fcall	_pec15_calc
 15944  1FE3  0877               	movf	?_pec15_calc+1,w
 15945  1FE4  0020               	movlb	0	; select bank0
 15946  1FE5  00D1               	movwf	LTC6804_rdcv@data_pec+1
 15947  1FE6  0876               	movf	?_pec15_calc,w
 15948  1FE7  00D0               	movwf	LTC6804_rdcv@data_pec
 15949                           
 15950                           ;ltc6804.c: 559: if(received_pec != data_pec)
 15951  1FE8  0851               	movf	LTC6804_rdcv@data_pec+1,w
 15952  1FE9  064F               	xorwf	LTC6804_rdcv@received_pec+1,w
 15953  1FEA  1D03               	skipz
 15954  1FEB  2FEE               	goto	u11155
 15955  1FEC  0850               	movf	LTC6804_rdcv@data_pec,w
 15956  1FED  064E               	xorwf	LTC6804_rdcv@received_pec,w
 15957  1FEE                     u11155:	
 15958  1FEE  1903               	skipnz
 15959  1FEF  2FF4               	goto	l7982
 15960                           
 15961                           ;ltc6804.c: 560: {
 15962                           ;ltc6804.c: 561: pec_error = -1;
 15963  1FF0  30FF               	movlw	255
 15964  1FF1  00BE               	movwf	??_LTC6804_rdcv
 15965  1FF2  083E               	movf	??_LTC6804_rdcv,w
 15966  1FF3  00CB               	movwf	LTC6804_rdcv@pec_error
 15967  1FF4                     l7982:	
 15968                           
 15969                           ;ltc6804.c: 563: }
 15970                           ;ltc6804.c: 564: data_counter= data_counter + 2;
 15971  1FF4  0858               	movf	LTC6804_rdcv@data_counter,w
 15972  1FF5  3E02               	addlw	2
 15973  1FF6  00BE               	movwf	??_LTC6804_rdcv
 15974  1FF7  083E               	movf	??_LTC6804_rdcv,w
 15975  1FF8  00D8               	movwf	LTC6804_rdcv@data_counter
 15976  1FF9  3001               	movlw	1
 15977  1FFA  00BE               	movwf	??_LTC6804_rdcv
 15978  1FFB  083E               	movf	??_LTC6804_rdcv,w
 15979  1FFC  07D5               	addwf	LTC6804_rdcv@current_ic_1339,f
 15980  1FFD  2F51               	goto	l657
 15981  1FFE                     l7986:	
 15982                           
 15983                           ;ltc6804.c: 566: }
 15984                           ;ltc6804.c: 567: }
 15985                           ;ltc6804.c: 571: return(pec_error);
 15986  1FFE  084B               	movf	LTC6804_rdcv@pec_error,w
 15987  1FFF  0008               	return
 15988  2000                     __end_of_LTC6804_rdcv:	
 15989                           
 15990                           	psect	text36
 15991  2BDE                     __ptext36:	
 15992 ;; *************** function ___wmul *****************
 15993 ;; Defined at:
 15994 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 15995 ;; Parameters:    Size  Location     Type
 15996 ;;  multiplier      2    2[COMMON] unsigned int 
 15997 ;;  multiplicand    2    4[COMMON] unsigned int 
 15998 ;; Auto vars:     Size  Location     Type
 15999 ;;  product         2    6[COMMON] unsigned int 
 16000 ;; Return value:  Size  Location     Type
 16001 ;;                  2    2[COMMON] unsigned int 
 16002 ;; Registers used:
 16003 ;;		wreg, status,2, status,0
 16004 ;; Tracked objects:
 16005 ;;		On entry : 0/0
 16006 ;;		On exit  : 0/0
 16007 ;;		Unchanged: 0/0
 16008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16009 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16012 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16013 ;;Total ram usage:        6 bytes
 16014 ;; Hardware stack levels used:    1
 16015 ;; Hardware stack levels required when called:    2
 16016 ;; This function calls:
 16017 ;;		Nothing
 16018 ;; This function is called by:
 16019 ;;		_LTC6804_rdcv
 16020 ;;		_sprintf
 16021 ;;		_LTC6804_rdaux
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           
 16026                           ;psect for function ___wmul
 16027  2BDE                     ___wmul:	
 16028                           
 16029                           ;incstack = 0
 16030                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 16031  2BDE  01F6               	clrf	___wmul@product
 16032  2BDF  01F7               	clrf	___wmul@product+1
 16033  2BE0                     l7238:	
 16034  2BE0  1C72               	btfss	___wmul@multiplier,0
 16035  2BE1  2BE6               	goto	l1019
 16036  2BE2  0874               	movf	___wmul@multiplicand,w
 16037  2BE3  07F6               	addwf	___wmul@product,f
 16038  2BE4  0875               	movf	___wmul@multiplicand+1,w
 16039  2BE5  3DF7               	addwfc	___wmul@product+1,f
 16040  2BE6                     l1019:	
 16041  2BE6  3001               	movlw	1
 16042  2BE7                     u9705:	
 16043  2BE7  35F4               	lslf	___wmul@multiplicand,f
 16044  2BE8  0DF5               	rlf	___wmul@multiplicand+1,f
 16045  2BE9  0B89               	decfsz	9,f
 16046  2BEA  2BE7               	goto	u9705
 16047  2BEB  3001               	movlw	1
 16048  2BEC                     u9715:	
 16049  2BEC  36F3               	lsrf	___wmul@multiplier+1,f
 16050  2BED  0CF2               	rrf	___wmul@multiplier,f
 16051  2BEE  0B89               	decfsz	9,f
 16052  2BEF  2BEC               	goto	u9715
 16053  2BF0  0872               	movf	___wmul@multiplier,w
 16054  2BF1  0473               	iorwf	___wmul@multiplier+1,w
 16055  2BF2  1D03               	btfss	3,2
 16056  2BF3  2BE0               	goto	l7238
 16057  2BF4  0877               	movf	___wmul@product+1,w
 16058  2BF5  00F3               	movwf	?___wmul+1
 16059  2BF6  0876               	movf	___wmul@product,w
 16060  2BF7  00F2               	movwf	?___wmul
 16061  2BF8  0008               	return
 16062  2BF9                     __end_of___wmul:	
 16063                           
 16064                           	psect	text37
 16065  2FAB                     __ptext37:	
 16066 ;; *************** function _LTC6804_rdcv_reg *****************
 16067 ;; Defined at:
 16068 ;;		line 621 in file "ltc6804.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;  reg             1    wreg     unsigned char 
 16071 ;;  total_ic        1   15[BANK0 ] unsigned char 
 16072 ;;  data            1   16[BANK0 ] PTR unsigned char 
 16073 ;;		 -> LTC6804_rdcv@cell_data(8), 
 16074 ;; Auto vars:     Size  Location     Type
 16075 ;;  reg             1   27[BANK0 ] unsigned char 
 16076 ;;  cmd             4   23[BANK0 ] unsigned char [4]
 16077 ;;  cmd_pec         2   21[BANK0 ] int 
 16078 ;; Return value:  Size  Location     Type
 16079 ;;                  1    wreg      void 
 16080 ;; Registers used:
 16081 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16082 ;; Tracked objects:
 16083 ;;		On entry : 0/0
 16084 ;;		On exit  : 0/0
 16085 ;;		Unchanged: 0/0
 16086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16088 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16089 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16090 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16091 ;;Total ram usage:       13 bytes
 16092 ;; Hardware stack levels used:    1
 16093 ;; Hardware stack levels required when called:    4
 16094 ;; This function calls:
 16095 ;;		___bmul
 16096 ;;		_pec15_calc
 16097 ;;		_spi_write_read
 16098 ;;		_wakeup_idle
 16099 ;; This function is called by:
 16100 ;;		_LTC6804_rdcv
 16101 ;; This function uses a non-reentrant model
 16102 ;;
 16103                           
 16104                           
 16105                           ;psect for function _LTC6804_rdcv_reg
 16106  2FAB                     _LTC6804_rdcv_reg:	
 16107                           
 16108                           ;incstack = 0
 16109                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16110                           ;LTC6804_rdcv_reg@reg stored from wreg
 16111  2FAB  0020               	movlb	0	; select bank0
 16112  2FAC  00BB               	movwf	LTC6804_rdcv_reg@reg
 16113                           
 16114                           ;ltc6804.c: 626: const char REG_LEN = 8;
 16115                           ;ltc6804.c: 627: char cmd[4];
 16116                           ;ltc6804.c: 628: int cmd_pec;
 16117                           ;ltc6804.c: 631: if (reg == 1)
 16118  2FAD  033B               	decf	LTC6804_rdcv_reg@reg,w
 16119  2FAE  1D03               	btfss	3,2
 16120  2FAF  2FB2               	goto	l7746
 16121                           
 16122                           ;ltc6804.c: 632: {
 16123                           ;ltc6804.c: 633: cmd[1] = 0x04;
 16124  2FB0  3004               	movlw	4
 16125  2FB1  2FC3               	goto	L11
 16126  2FB2                     l7746:	
 16127                           ;ltc6804.c: 635: }
 16128                           
 16129                           ;ltc6804.c: 634: cmd[0] = 0x00;
 16130                           
 16131                           
 16132                           ;ltc6804.c: 636: else if(reg == 2)
 16133  2FB2  3002               	movlw	2
 16134  2FB3  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 16135  2FB4  1D03               	btfss	3,2
 16136  2FB5  2FB8               	goto	l7752
 16137                           
 16138                           ;ltc6804.c: 637: {
 16139                           ;ltc6804.c: 638: cmd[1] = 0x06;
 16140  2FB6  3006               	movlw	6
 16141  2FB7  2FC3               	goto	L11
 16142  2FB8                     l7752:	
 16143                           ;ltc6804.c: 640: }
 16144                           
 16145                           ;ltc6804.c: 639: cmd[0] = 0x00;
 16146                           
 16147                           
 16148                           ;ltc6804.c: 641: else if(reg == 3)
 16149  2FB8  3003               	movlw	3
 16150  2FB9  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 16151  2FBA  1D03               	btfss	3,2
 16152  2FBB  2FBE               	goto	l7758
 16153                           
 16154                           ;ltc6804.c: 642: {
 16155                           ;ltc6804.c: 643: cmd[1] = 0x08;
 16156  2FBC  3008               	movlw	8
 16157  2FBD  2FC3               	goto	L11
 16158  2FBE                     l7758:	
 16159                           ;ltc6804.c: 645: }
 16160                           
 16161                           ;ltc6804.c: 644: cmd[0] = 0x00;
 16162                           
 16163                           
 16164                           ;ltc6804.c: 646: else if(reg == 4)
 16165  2FBE  3004               	movlw	4
 16166  2FBF  063B               	xorwf	LTC6804_rdcv_reg@reg,w
 16167  2FC0  1D03               	btfss	3,2
 16168  2FC1  2FC7               	goto	l7764
 16169                           
 16170                           ;ltc6804.c: 647: {
 16171                           ;ltc6804.c: 648: cmd[1] = 0x0A;
 16172  2FC2  300A               	movlw	10
 16173  2FC3                     L11:	
 16174  2FC3  00B1               	movwf	??_LTC6804_rdcv_reg
 16175  2FC4  0831               	movf	??_LTC6804_rdcv_reg,w
 16176  2FC5  00B8               	movwf	LTC6804_rdcv_reg@cmd+1
 16177                           
 16178                           ;ltc6804.c: 649: cmd[0] = 0x00;
 16179  2FC6  01B7               	clrf	LTC6804_rdcv_reg@cmd
 16180  2FC7                     l7764:	
 16181                           
 16182                           ;ltc6804.c: 650: }
 16183                           ;ltc6804.c: 653: cmd_pec = pec15_calc(2, cmd);
 16184  2FC7  3037               	movlw	low LTC6804_rdcv_reg@cmd
 16185  2FC8  00F6               	movwf	pec15_calc@data
 16186  2FC9  3000               	movlw	high LTC6804_rdcv_reg@cmd
 16187  2FCA  00F7               	movwf	pec15_calc@data+1
 16188  2FCB  3002               	movlw	2
 16189  2FCC  31AE  2611  31AF   	fcall	_pec15_calc
 16190  2FCF  0877               	movf	?_pec15_calc+1,w
 16191  2FD0  0020               	movlb	0	; select bank0
 16192  2FD1  00B6               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 16193  2FD2  0876               	movf	?_pec15_calc,w
 16194  2FD3  00B5               	movwf	LTC6804_rdcv_reg@cmd_pec
 16195                           
 16196                           ;ltc6804.c: 654: cmd[2] = (char)(cmd_pec >> 8);
 16197  2FD4  0836               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 16198  2FD5  00B1               	movwf	??_LTC6804_rdcv_reg
 16199  2FD6  0831               	movf	??_LTC6804_rdcv_reg,w
 16200  2FD7  00B9               	movwf	LTC6804_rdcv_reg@cmd+2
 16201                           
 16202                           ;ltc6804.c: 655: cmd[3] = (char)(cmd_pec);
 16203  2FD8  0835               	movf	LTC6804_rdcv_reg@cmd_pec,w
 16204  2FD9  00B1               	movwf	??_LTC6804_rdcv_reg
 16205  2FDA  0831               	movf	??_LTC6804_rdcv_reg,w
 16206  2FDB  00BA               	movwf	LTC6804_rdcv_reg@cmd+3
 16207                           
 16208                           ;ltc6804.c: 658: wakeup_idle ();
 16209  2FDC  31AB  234E  31AF   	fcall	_wakeup_idle
 16210                           
 16211                           ;ltc6804.c: 661: LATDbits.LATD3 = 0;
 16212  2FDF  0022               	movlb	2	; select bank2
 16213  2FE0  118F               	bcf	15,3	;volatile
 16214                           
 16215                           ;ltc6804.c: 662: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 16216  2FE1  3004               	movlw	4
 16217  2FE2  0020               	movlb	0	; select bank0
 16218  2FE3  00B1               	movwf	??_LTC6804_rdcv_reg
 16219  2FE4  0831               	movf	??_LTC6804_rdcv_reg,w
 16220  2FE5  00F6               	movwf	spi_write_read@tx_len
 16221  2FE6  0830               	movf	LTC6804_rdcv_reg@data,w
 16222  2FE7  00B2               	movwf	??_LTC6804_rdcv_reg+1
 16223  2FE8  0832               	movf	??_LTC6804_rdcv_reg+1,w
 16224  2FE9  00F7               	movwf	spi_write_read@rx_data
 16225  2FEA  082F               	movf	LTC6804_rdcv_reg@total_ic,w
 16226  2FEB  00B3               	movwf	??_LTC6804_rdcv_reg+2
 16227  2FEC  0833               	movf	??_LTC6804_rdcv_reg+2,w
 16228  2FED  00F2               	movwf	___bmul@multiplicand
 16229  2FEE  3065               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 16230  2FEF  0084               	movwf	4
 16231  2FF0  30B1               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 16232  2FF1  0085               	movwf	5
 16233  2FF2  0800               	movf	0,w	;code access
 16234  2FF3  31AB  2384  31AF   	fcall	___bmul
 16235  2FF6  0020               	movlb	0	; select bank0
 16236  2FF7  00B4               	movwf	??_LTC6804_rdcv_reg+3
 16237  2FF8  0834               	movf	??_LTC6804_rdcv_reg+3,w
 16238  2FF9  00F8               	movwf	spi_write_read@rx_len
 16239  2FFA  3037               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 16240  2FFB  31AC  247D         	fcall	_spi_write_read
 16241                           
 16242                           ;ltc6804.c: 663: LATDbits.LATD3 = 1;
 16243  2FFD  0022               	movlb	2	; select bank2
 16244  2FFE  158F               	bsf	15,3	;volatile
 16245  2FFF  0008               	return
 16246  3000                     __end_of_LTC6804_rdcv_reg:	
 16247                           
 16248                           	psect	text38
 16249  2C7D                     __ptext38:	
 16250 ;; *************** function _spi_write_read *****************
 16251 ;; Defined at:
 16252 ;;		line 1233 in file "ltc6804.c"
 16253 ;; Parameters:    Size  Location     Type
 16254 ;;  tx_Data         1    wreg     PTR unsigned char 
 16255 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 16256 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 16257 ;;  tx_len          1    6[COMMON] unsigned char 
 16258 ;;  rx_data         1    7[COMMON] PTR unsigned char 
 16259 ;;		 -> LTC6804_rdaux@data(8), LTC6804_rdcv@cell_data(8), NULL(0), 
 16260 ;;  rx_len          1    8[COMMON] unsigned char 
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;  tx_Data         1    4[BANK0 ] PTR unsigned char 
 16263 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 16264 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdstat_reg@cmd(4), 
 16265 ;;  i               1    3[BANK0 ] unsigned char 
 16266 ;;  i               1    2[BANK0 ] unsigned char 
 16267 ;; Return value:  Size  Location     Type
 16268 ;;                  1    wreg      void 
 16269 ;; Registers used:
 16270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16271 ;; Tracked objects:
 16272 ;;		On entry : 0/0
 16273 ;;		On exit  : 0/0
 16274 ;;		Unchanged: 0/0
 16275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16276 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16277 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16278 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16279 ;;      Totals:         3       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16280 ;;Total ram usage:        8 bytes
 16281 ;; Hardware stack levels used:    1
 16282 ;; Hardware stack levels required when called:    3
 16283 ;; This function calls:
 16284 ;;		_spi_read
 16285 ;;		_spi_write
 16286 ;; This function is called by:
 16287 ;;		_LTC6804_rdcv_reg
 16288 ;;		_LTC6804_rdstat_reg
 16289 ;;		_LTC6804_rdaux_reg
 16290 ;;		_LTC6804_clrcell
 16291 ;;		_LTC6804_clraux
 16292 ;;		_LTC6804_rdcfg
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           
 16297                           ;psect for function _spi_write_read
 16298  2C7D                     _spi_write_read:	
 16299                           
 16300                           ;incstack = 0
 16301                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16302                           ;spi_write_read@tx_Data stored from wreg
 16303  2C7D  0020               	movlb	0	; select bank0
 16304  2C7E  00A4               	movwf	spi_write_read@tx_Data
 16305                           
 16306                           ;ltc6804.c: 1239: for(char i = 0; i < tx_len; i++)
 16307  2C7F  01A2               	clrf	spi_write_read@i
 16308  2C80                     l7048:	
 16309  2C80  0876               	movf	spi_write_read@tx_len,w
 16310  2C81  0222               	subwf	spi_write_read@i,w
 16311  2C82  1803               	btfsc	3,0
 16312  2C83  2C94               	goto	l7050
 16313                           
 16314                           ;ltc6804.c: 1240: {
 16315                           ;ltc6804.c: 1241: spi_write(tx_Data[i]);
 16316  2C84  0822               	movf	spi_write_read@i,w
 16317  2C85  0724               	addwf	spi_write_read@tx_Data,w
 16318  2C86  00A0               	movwf	??_spi_write_read
 16319  2C87  0820               	movf	??_spi_write_read,w
 16320  2C88  0086               	movwf	6
 16321  2C89  0187               	clrf	7
 16322  2C8A  0801               	movf	1,w
 16323  2C8B  31AB  2360  31AC   	fcall	_spi_write
 16324  2C8E  3001               	movlw	1
 16325  2C8F  0020               	movlb	0	; select bank0
 16326  2C90  00A0               	movwf	??_spi_write_read
 16327  2C91  0820               	movf	??_spi_write_read,w
 16328  2C92  07A2               	addwf	spi_write_read@i,f
 16329  2C93  2C80               	goto	l7048
 16330  2C94                     l7050:	
 16331                           
 16332                           ;ltc6804.c: 1243: }
 16333                           ;ltc6804.c: 1245: for(char i = 0; i < rx_len; i++)
 16334  2C94  01A3               	clrf	spi_write_read@i_1421
 16335  2C95                     l7056:	
 16336  2C95  0878               	movf	spi_write_read@rx_len,w
 16337  2C96  0223               	subwf	spi_write_read@i_1421,w
 16338  2C97  1803               	btfsc	3,0
 16339  2C98  0008               	return
 16340                           
 16341                           ;ltc6804.c: 1246: {
 16342                           ;ltc6804.c: 1247: rx_data[i] = (char)spi_read(0xFF);
 16343  2C99  30FF               	movlw	255
 16344  2C9A  31AB  236B  31AC   	fcall	_spi_read
 16345  2C9D  0020               	movlb	0	; select bank0
 16346  2C9E  00A0               	movwf	??_spi_write_read
 16347  2C9F  0823               	movf	spi_write_read@i_1421,w
 16348  2CA0  0777               	addwf	spi_write_read@rx_data,w
 16349  2CA1  00A1               	movwf	??_spi_write_read+1
 16350  2CA2  0821               	movf	??_spi_write_read+1,w
 16351  2CA3  0086               	movwf	6
 16352  2CA4  0187               	clrf	7
 16353  2CA5  0820               	movf	??_spi_write_read,w
 16354  2CA6  0081               	movwf	1
 16355  2CA7  3001               	movlw	1
 16356  2CA8  00A0               	movwf	??_spi_write_read
 16357  2CA9  0820               	movf	??_spi_write_read,w
 16358  2CAA  07A3               	addwf	spi_write_read@i_1421,f
 16359  2CAB  2C95               	goto	l7056
 16360  2CAC                     __end_of_spi_write_read:	
 16361                           
 16362                           	psect	text39
 16363  2B6B                     __ptext39:	
 16364 ;; *************** function _spi_read *****************
 16365 ;; Defined at:
 16366 ;;		line 42 in file "spi.c"
 16367 ;; Parameters:    Size  Location     Type
 16368 ;;  data            1    wreg     unsigned char 
 16369 ;; Auto vars:     Size  Location     Type
 16370 ;;  data            1    3[COMMON] unsigned char 
 16371 ;;  readData        1    4[COMMON] unsigned char 
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      unsigned char 
 16374 ;; Registers used:
 16375 ;;		wreg
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16383 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16384 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16385 ;;Total ram usage:        3 bytes
 16386 ;; Hardware stack levels used:    1
 16387 ;; Hardware stack levels required when called:    2
 16388 ;; This function calls:
 16389 ;;		Nothing
 16390 ;; This function is called by:
 16391 ;;		_spi_write_read
 16392 ;; This function uses a non-reentrant model
 16393 ;;
 16394                           
 16395                           
 16396                           ;psect for function _spi_read
 16397  2B6B                     _spi_read:	
 16398                           
 16399                           ;incstack = 0
 16400                           ; Regs used in _spi_read: [wreg]
 16401                           ;spi_read@data stored from wreg
 16402  2B6B  00F3               	movwf	spi_read@data
 16403                           
 16404                           ;spi.c: 43: SSP1BUF = data;
 16405  2B6C  0873               	movf	spi_read@data,w
 16406  2B6D  0024               	movlb	4	; select bank4
 16407  2B6E  0091               	movwf	17	;volatile
 16408  2B6F                     l792:	
 16409                           ;spi.c: 44: while(SSP1STATbits.BF == 0);
 16410                           
 16411  2B6F  1C14               	btfss	20,0	;volatile
 16412  2B70  2B6F               	goto	l792
 16413                           
 16414                           ;spi.c: 45: char readData = SSP1BUF;
 16415  2B71  0811               	movf	17,w	;volatile
 16416  2B72  00F2               	movwf	??_spi_read
 16417  2B73  0872               	movf	??_spi_read,w
 16418  2B74  00F4               	movwf	spi_read@readData
 16419                           
 16420                           ;spi.c: 46: return readData;
 16421  2B75  0874               	movf	spi_read@readData,w
 16422  2B76  0008               	return
 16423  2B77                     __end_of_spi_read:	
 16424                           
 16425                           	psect	text40
 16426  2B84                     __ptext40:	
 16427 ;; *************** function ___bmul *****************
 16428 ;; Defined at:
 16429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 16430 ;; Parameters:    Size  Location     Type
 16431 ;;  multiplier      1    wreg     unsigned char 
 16432 ;;  multiplicand    1    2[COMMON] unsigned char 
 16433 ;; Auto vars:     Size  Location     Type
 16434 ;;  multiplier      1    5[COMMON] unsigned char 
 16435 ;;  product         1    4[COMMON] unsigned char 
 16436 ;; Return value:  Size  Location     Type
 16437 ;;                  1    wreg      unsigned char 
 16438 ;; Registers used:
 16439 ;;		wreg, status,2, status,0
 16440 ;; Tracked objects:
 16441 ;;		On entry : 0/0
 16442 ;;		On exit  : 0/0
 16443 ;;		Unchanged: 0/0
 16444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16445 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16448 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16449 ;;Total ram usage:        4 bytes
 16450 ;; Hardware stack levels used:    1
 16451 ;; Hardware stack levels required when called:    2
 16452 ;; This function calls:
 16453 ;;		Nothing
 16454 ;; This function is called by:
 16455 ;;		_LTC6804_rdcv
 16456 ;;		_LTC6804_rdcv_reg
 16457 ;;		_LTC6804_wrcfg
 16458 ;;		_LTC6804_rdstat_reg
 16459 ;;		_LTC6804_rdaux
 16460 ;;		_LTC6804_rdaux_reg
 16461 ;;		_LTC6804_rdcfg
 16462 ;; This function uses a non-reentrant model
 16463 ;;
 16464                           
 16465                           
 16466                           ;psect for function ___bmul
 16467  2B84                     ___bmul:	
 16468                           
 16469                           ;incstack = 0
 16470                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 16471                           ;___bmul@multiplier stored from wreg
 16472  2B84  00F5               	movwf	___bmul@multiplier
 16473  2B85  01F4               	clrf	___bmul@product
 16474  2B86                     l4730:	
 16475  2B86  1C75               	btfss	___bmul@multiplier,0
 16476  2B87  2B8C               	goto	l4734
 16477  2B88  0872               	movf	___bmul@multiplicand,w
 16478  2B89  00F3               	movwf	??___bmul
 16479  2B8A  0873               	movf	??___bmul,w
 16480  2B8B  07F4               	addwf	___bmul@product,f
 16481  2B8C                     l4734:	
 16482  2B8C  1003               	clrc
 16483  2B8D  0DF2               	rlf	___bmul@multiplicand,f
 16484  2B8E  1003               	clrc
 16485  2B8F  0CF5               	rrf	___bmul@multiplier,f
 16486  2B90  0875               	movf	___bmul@multiplier,w
 16487  2B91  1D03               	btfss	3,2
 16488  2B92  2B86               	goto	l4730
 16489  2B93  0874               	movf	___bmul@product,w
 16490  2B94  0008               	return
 16491  2B95                     __end_of___bmul:	
 16492                           
 16493                           	psect	text41
 16494  2CAC                     __ptext41:	
 16495 ;; *************** function _LTC6804_adcv *****************
 16496 ;; Defined at:
 16497 ;;		line 369 in file "ltc6804.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;		None
 16500 ;; Auto vars:     Size  Location     Type
 16501 ;;  cmd             4   15[BANK0 ] unsigned char [4]
 16502 ;;  cmd_pec         2   19[BANK0 ] int 
 16503 ;; Return value:  Size  Location     Type
 16504 ;;                  1    wreg      void 
 16505 ;; Registers used:
 16506 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16507 ;; Tracked objects:
 16508 ;;		On entry : 0/0
 16509 ;;		On exit  : 0/0
 16510 ;;		Unchanged: 0/0
 16511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16513 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16515 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16516 ;;Total ram usage:        7 bytes
 16517 ;; Hardware stack levels used:    1
 16518 ;; Hardware stack levels required when called:    4
 16519 ;; This function calls:
 16520 ;;		_pec15_calc
 16521 ;;		_spi_write_array
 16522 ;;		_wakeup_idle
 16523 ;; This function is called by:
 16524 ;;		_measureVoltages
 16525 ;; This function uses a non-reentrant model
 16526 ;;
 16527                           
 16528                           
 16529                           ;psect for function _LTC6804_adcv
 16530  2CAC                     _LTC6804_adcv:	
 16531                           
 16532                           ;ltc6804.c: 372: char cmd[4];
 16533                           ;ltc6804.c: 373: int cmd_pec;
 16534                           ;ltc6804.c: 376: cmd[0] = ADCV[0];
 16535                           
 16536                           ;incstack = 0
 16537                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16538  2CAC  0025               	movlb	5	; select bank5
 16539  2CAD  0860               	movf	_ADCV^(0+640),w
 16540  2CAE  00F9               	movwf	??_LTC6804_adcv
 16541  2CAF  0879               	movf	??_LTC6804_adcv,w
 16542  2CB0  0020               	movlb	0	; select bank0
 16543  2CB1  00AF               	movwf	LTC6804_adcv@cmd
 16544                           
 16545                           ;ltc6804.c: 377: cmd[1] = ADCV[1];
 16546  2CB2  0025               	movlb	5	; select bank5
 16547  2CB3  0861               	movf	(_ADCV^(0+640)+1),w
 16548  2CB4  00F9               	movwf	??_LTC6804_adcv
 16549  2CB5  0879               	movf	??_LTC6804_adcv,w
 16550  2CB6  0020               	movlb	0	; select bank0
 16551  2CB7  00B0               	movwf	LTC6804_adcv@cmd+1
 16552                           
 16553                           ;ltc6804.c: 380: cmd_pec = pec15_calc(2, ADCV);
 16554  2CB8  30E0               	movlw	low _ADCV
 16555  2CB9  00F6               	movwf	pec15_calc@data
 16556  2CBA  3002               	movlw	high _ADCV
 16557  2CBB  00F7               	movwf	pec15_calc@data+1
 16558  2CBC  3002               	movlw	2
 16559  2CBD  31AE  2611  31AC   	fcall	_pec15_calc
 16560  2CC0  0877               	movf	?_pec15_calc+1,w
 16561  2CC1  0020               	movlb	0	; select bank0
 16562  2CC2  00B4               	movwf	LTC6804_adcv@cmd_pec+1
 16563  2CC3  0876               	movf	?_pec15_calc,w
 16564  2CC4  00B3               	movwf	LTC6804_adcv@cmd_pec
 16565                           
 16566                           ;ltc6804.c: 381: cmd[2] = (char)(cmd_pec >> 8);
 16567  2CC5  0834               	movf	LTC6804_adcv@cmd_pec+1,w
 16568  2CC6  00F9               	movwf	??_LTC6804_adcv
 16569  2CC7  0879               	movf	??_LTC6804_adcv,w
 16570  2CC8  00B1               	movwf	LTC6804_adcv@cmd+2
 16571                           
 16572                           ;ltc6804.c: 382: cmd[3] = (char)(cmd_pec);
 16573  2CC9  0833               	movf	LTC6804_adcv@cmd_pec,w
 16574  2CCA  00F9               	movwf	??_LTC6804_adcv
 16575  2CCB  0879               	movf	??_LTC6804_adcv,w
 16576  2CCC  00B2               	movwf	LTC6804_adcv@cmd+3
 16577                           
 16578                           ;ltc6804.c: 385: wakeup_idle ();
 16579  2CCD  31AB  234E  31AC   	fcall	_wakeup_idle
 16580                           
 16581                           ;ltc6804.c: 388: LATDbits.LATD3 = 0;
 16582  2CD0  0022               	movlb	2	; select bank2
 16583  2CD1  118F               	bcf	15,3	;volatile
 16584                           
 16585                           ;ltc6804.c: 389: spi_write_array(4,cmd);
 16586  2CD2  302F               	movlw	(low (LTC6804_adcv@cmd| 0))& (0+255)
 16587  2CD3  00F9               	movwf	??_LTC6804_adcv
 16588  2CD4  0879               	movf	??_LTC6804_adcv,w
 16589  2CD5  00F5               	movwf	spi_write_array@data
 16590  2CD6  3004               	movlw	4
 16591  2CD7  31AB  23C9         	fcall	_spi_write_array
 16592                           
 16593                           ;ltc6804.c: 390: LATDbits.LATD3 = 1;
 16594  2CD9  0022               	movlb	2	; select bank2
 16595  2CDA  158F               	bsf	15,3	;volatile
 16596  2CDB  0008               	return
 16597  2CDC                     __end_of_LTC6804_adcv:	
 16598                           
 16599                           	psect	text42
 16600  2B4E                     __ptext42:	
 16601 ;; *************** function _wakeup_idle *****************
 16602 ;; Defined at:
 16603 ;;		line 1162 in file "ltc6804.c"
 16604 ;; Parameters:    Size  Location     Type
 16605 ;;		None
 16606 ;; Auto vars:     Size  Location     Type
 16607 ;;		None
 16608 ;; Return value:  Size  Location     Type
 16609 ;;                  1    wreg      void 
 16610 ;; Registers used:
 16611 ;;		wreg
 16612 ;; Tracked objects:
 16613 ;;		On entry : 0/0
 16614 ;;		On exit  : 0/0
 16615 ;;		Unchanged: 0/0
 16616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16621 ;;Total ram usage:        0 bytes
 16622 ;; Hardware stack levels used:    1
 16623 ;; Hardware stack levels required when called:    2
 16624 ;; This function calls:
 16625 ;;		Nothing
 16626 ;; This function is called by:
 16627 ;;		_LTC6804_adcv
 16628 ;;		_LTC6804_rdcv_reg
 16629 ;;		_LTC6804_wrcfg
 16630 ;;		_LTC6804_rdstat_reg
 16631 ;;		_LTC6804_adstat
 16632 ;;		_LTC6804_adax
 16633 ;;		_LTC6804_rdaux_reg
 16634 ;;		_LTC6804_clrcell
 16635 ;;		_LTC6804_clraux
 16636 ;;		_LTC6804_rdcfg
 16637 ;; This function uses a non-reentrant model
 16638 ;;
 16639                           
 16640                           
 16641                           ;psect for function _wakeup_idle
 16642  2B4E                     _wakeup_idle:	
 16643                           
 16644                           ;ltc6804.c: 1164: LATDbits.LATD3 = 0;
 16645                           
 16646                           ;incstack = 0
 16647                           ; Regs used in _wakeup_idle: [wreg]
 16648  2B4E  0022               	movlb	2	; select bank2
 16649  2B4F  118F               	bcf	15,3	;volatile
 16650                           
 16651                           ;ltc6804.c: 1165: _delay((unsigned long)((2)*(32000000/4000000.0)));
 16652  2B50  3005               	movlw	5
 16653  2B51                     u11777:	
 16654  2B51  0B89               	decfsz	9,f
 16655  2B52  2B51               	goto	u11777
 16656  2B53  0000               	nop
 16657                           
 16658                           ;ltc6804.c: 1166: LATDbits.LATD3 = 1;
 16659  2B54  0022               	movlb	2	; select bank2
 16660  2B55  158F               	bsf	15,3	;volatile
 16661  2B56  0008               	return
 16662  2B57                     __end_of_wakeup_idle:	
 16663                           
 16664                           	psect	text43
 16665  2BC9                     __ptext43:	
 16666 ;; *************** function _spi_write_array *****************
 16667 ;; Defined at:
 16668 ;;		line 1213 in file "ltc6804.c"
 16669 ;; Parameters:    Size  Location     Type
 16670 ;;  len             1    wreg     unsigned char 
 16671 ;;  data            1    5[COMMON] PTR unsigned char 
 16672 ;;		 -> LTC6804_wrcfg@cmd(12), LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), LTC6804_adstat@cmd(4), 
 16673 ;; Auto vars:     Size  Location     Type
 16674 ;;  len             1    7[COMMON] unsigned char 
 16675 ;;  i               1    8[COMMON] unsigned char 
 16676 ;; Return value:  Size  Location     Type
 16677 ;;                  1    wreg      void 
 16678 ;; Registers used:
 16679 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16680 ;; Tracked objects:
 16681 ;;		On entry : 0/0
 16682 ;;		On exit  : 0/0
 16683 ;;		Unchanged: 0/0
 16684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16685 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16686 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16687 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16688 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16689 ;;Total ram usage:        4 bytes
 16690 ;; Hardware stack levels used:    1
 16691 ;; Hardware stack levels required when called:    3
 16692 ;; This function calls:
 16693 ;;		_spi_write
 16694 ;; This function is called by:
 16695 ;;		_LTC6804_adcv
 16696 ;;		_LTC6804_wrcfg
 16697 ;;		_LTC6804_adstat
 16698 ;;		_LTC6804_adax
 16699 ;; This function uses a non-reentrant model
 16700 ;;
 16701                           
 16702                           
 16703                           ;psect for function _spi_write_array
 16704  2BC9                     _spi_write_array:	
 16705                           
 16706                           ;incstack = 0
 16707                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16708                           ;spi_write_array@len stored from wreg
 16709  2BC9  00F7               	movwf	spi_write_array@len
 16710                           
 16711                           ;ltc6804.c: 1217: for(char i = 0; i < len; i++)
 16712  2BCA  01F8               	clrf	spi_write_array@i
 16713  2BCB                     l4534:	
 16714  2BCB  0877               	movf	spi_write_array@len,w
 16715  2BCC  0278               	subwf	spi_write_array@i,w
 16716  2BCD  1803               	btfsc	3,0
 16717  2BCE  0008               	return
 16718                           
 16719                           ;ltc6804.c: 1218: {
 16720                           ;ltc6804.c: 1219: spi_write((char)data[i]);
 16721  2BCF  0878               	movf	spi_write_array@i,w
 16722  2BD0  0775               	addwf	spi_write_array@data,w
 16723  2BD1  00F6               	movwf	??_spi_write_array
 16724  2BD2  0876               	movf	??_spi_write_array,w
 16725  2BD3  0086               	movwf	6
 16726  2BD4  0187               	clrf	7
 16727  2BD5  0801               	movf	1,w
 16728  2BD6  31AB  2360  31AB   	fcall	_spi_write
 16729  2BD9  3001               	movlw	1
 16730  2BDA  00F6               	movwf	??_spi_write_array
 16731  2BDB  0876               	movf	??_spi_write_array,w
 16732  2BDC  07F8               	addwf	spi_write_array@i,f
 16733  2BDD  2BCB               	goto	l4534
 16734  2BDE                     __end_of_spi_write_array:	
 16735                           
 16736                           	psect	text44
 16737  2B60                     __ptext44:	
 16738 ;; *************** function _spi_write *****************
 16739 ;; Defined at:
 16740 ;;		line 36 in file "spi.c"
 16741 ;; Parameters:    Size  Location     Type
 16742 ;;  data            1    wreg     unsigned char 
 16743 ;; Auto vars:     Size  Location     Type
 16744 ;;  data            1    4[COMMON] unsigned char 
 16745 ;;  readData        1    3[COMMON] unsigned char 
 16746 ;; Return value:  Size  Location     Type
 16747 ;;                  1    wreg      void 
 16748 ;; Registers used:
 16749 ;;		wreg
 16750 ;; Tracked objects:
 16751 ;;		On entry : 0/0
 16752 ;;		On exit  : 0/0
 16753 ;;		Unchanged: 0/0
 16754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16757 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16759 ;;Total ram usage:        3 bytes
 16760 ;; Hardware stack levels used:    1
 16761 ;; Hardware stack levels required when called:    2
 16762 ;; This function calls:
 16763 ;;		Nothing
 16764 ;; This function is called by:
 16765 ;;		_spi_write_array
 16766 ;;		_spi_write_read
 16767 ;; This function uses a non-reentrant model
 16768 ;;
 16769                           
 16770                           
 16771                           ;psect for function _spi_write
 16772  2B60                     _spi_write:	
 16773                           
 16774                           ;incstack = 0
 16775                           ; Regs used in _spi_write: [wreg]
 16776                           ;spi_write@data stored from wreg
 16777  2B60  00F4               	movwf	spi_write@data
 16778                           
 16779                           ;spi.c: 37: SSP1BUF = data;
 16780  2B61  0874               	movf	spi_write@data,w
 16781  2B62  0024               	movlb	4	; select bank4
 16782  2B63  0091               	movwf	17	;volatile
 16783  2B64                     l786:	
 16784                           ;spi.c: 38: while(SSP1STATbits.BF == 0);
 16785                           
 16786  2B64  1C14               	btfss	20,0	;volatile
 16787  2B65  2B64               	goto	l786
 16788                           
 16789                           ;spi.c: 39: char readData = SSP1BUF;
 16790  2B66  0811               	movf	17,w	;volatile
 16791  2B67  00F2               	movwf	??_spi_write
 16792  2B68  0872               	movf	??_spi_write,w
 16793  2B69  00F3               	movwf	spi_write@readData
 16794  2B6A  0008               	return
 16795  2B6B                     __end_of_spi_write:	
 16796                           
 16797                           	psect	text45
 16798  2E11                     __ptext45:	
 16799 ;; *************** function _pec15_calc *****************
 16800 ;; Defined at:
 16801 ;;		line 1190 in file "ltc6804.c"
 16802 ;; Parameters:    Size  Location     Type
 16803 ;;  len             1    wreg     unsigned char 
 16804 ;;  data            2    6[COMMON] PTR unsigned char 
 16805 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), LTC6804_rdaux@data(8), 
 16806 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), 
 16807 ;;		 -> ADSTAT(2), LTC6804_rdstat_reg@cmd(4), configReg(6), 
 16808 ;; Auto vars:     Size  Location     Type
 16809 ;;  len             1   11[BANK0 ] unsigned char 
 16810 ;;  i               1   12[BANK0 ] unsigned char 
 16811 ;;  remainder       2   13[BANK0 ] int 
 16812 ;;  addr            2    9[BANK0 ] int 
 16813 ;; Return value:  Size  Location     Type
 16814 ;;                  2    6[COMMON] int 
 16815 ;; Registers used:
 16816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 16817 ;; Tracked objects:
 16818 ;;		On entry : 0/0
 16819 ;;		On exit  : 0/0
 16820 ;;		Unchanged: 0/0
 16821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16823 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16824 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16825 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16826 ;;Total ram usage:       17 bytes
 16827 ;; Hardware stack levels used:    1
 16828 ;; Hardware stack levels required when called:    2
 16829 ;; This function calls:
 16830 ;;		Nothing
 16831 ;; This function is called by:
 16832 ;;		_LTC6804_adcv
 16833 ;;		_LTC6804_rdcv
 16834 ;;		_LTC6804_rdcv_reg
 16835 ;;		_LTC6804_wrcfg
 16836 ;;		_LTC6804_rdstat_reg
 16837 ;;		_LTC6804_adstat
 16838 ;;		_LTC6804_adax
 16839 ;;		_LTC6804_rdaux
 16840 ;;		_LTC6804_rdaux_reg
 16841 ;;		_LTC6804_clrcell
 16842 ;;		_LTC6804_clraux
 16843 ;;		_LTC6804_rdcfg
 16844 ;; This function uses a non-reentrant model
 16845 ;;
 16846                           
 16847                           
 16848                           ;psect for function _pec15_calc
 16849  2E11                     _pec15_calc:	
 16850                           
 16851                           ;incstack = 0
 16852                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 16853                           ;pec15_calc@len stored from wreg
 16854  2E11  0020               	movlb	0	; select bank0
 16855  2E12  00AB               	movwf	pec15_calc@len
 16856                           
 16857                           ;ltc6804.c: 1194: int remainder,addr;
 16858                           ;ltc6804.c: 1196: remainder = 16;
 16859  2E13  3010               	movlw	16
 16860  2E14  00AD               	movwf	pec15_calc@remainder
 16861  2E15  3000               	movlw	0
 16862  2E16  00AE               	movwf	pec15_calc@remainder+1
 16863                           
 16864                           ;ltc6804.c: 1197: for(char i = 0; i<len;i++)
 16865  2E17  01AC               	clrf	pec15_calc@i
 16866  2E18                     l4500:	
 16867  2E18  082B               	movf	pec15_calc@len,w
 16868  2E19  022C               	subwf	pec15_calc@i,w
 16869  2E1A  1803               	btfsc	3,0
 16870  2E1B  2E5B               	goto	l4502
 16871                           
 16872                           ;ltc6804.c: 1198: {
 16873                           ;ltc6804.c: 1199: addr = ((remainder>>7)^data[i])&0xff;
 16874  2E1C  082C               	movf	pec15_calc@i,w
 16875  2E1D  00A0               	movwf	??_pec15_calc
 16876  2E1E  01A1               	clrf	??_pec15_calc+1
 16877  2E1F  0820               	movf	??_pec15_calc,w
 16878  2E20  0776               	addwf	pec15_calc@data,w
 16879  2E21  0086               	movwf	6
 16880  2E22  0821               	movf	??_pec15_calc+1,w
 16881  2E23  3D77               	addwfc	pec15_calc@data+1,w
 16882  2E24  0087               	movwf	7
 16883  2E25  0801               	movf	1,w
 16884  2E26  00A2               	movwf	??_pec15_calc+2
 16885  2E27  01A3               	clrf	??_pec15_calc+3
 16886  2E28  082E               	movf	pec15_calc@remainder+1,w
 16887  2E29  00A5               	movwf	??_pec15_calc+5
 16888  2E2A  082D               	movf	pec15_calc@remainder,w
 16889  2E2B  00A4               	movwf	??_pec15_calc+4
 16890  2E2C  3007               	movlw	7
 16891  2E2D  00A6               	movwf	??_pec15_calc+6
 16892  2E2E                     u5145:	
 16893  2E2E  0D25               	rlf	??_pec15_calc+5,w
 16894  2E2F  0CA5               	rrf	??_pec15_calc+5,f
 16895  2E30  0CA4               	rrf	??_pec15_calc+4,f
 16896  2E31  0BA6               	decfsz	??_pec15_calc+6,f
 16897  2E32  2E2E               	goto	u5145
 16898  2E33  0822               	movf	??_pec15_calc+2,w
 16899  2E34  0624               	xorwf	??_pec15_calc+4,w
 16900  2E35  00A7               	movwf	??_pec15_calc+7
 16901  2E36  0823               	movf	??_pec15_calc+3,w
 16902  2E37  0625               	xorwf	??_pec15_calc+5,w
 16903  2E38  00A8               	movwf	??_pec15_calc+8
 16904  2E39  30FF               	movlw	255
 16905  2E3A  0527               	andwf	??_pec15_calc+7,w
 16906  2E3B  00A9               	movwf	pec15_calc@addr
 16907  2E3C  3000               	movlw	0
 16908  2E3D  0528               	andwf	??_pec15_calc+8,w
 16909  2E3E  00AA               	movwf	pec15_calc@addr+1
 16910                           
 16911                           ;ltc6804.c: 1200: remainder = (remainder<<8)^crc15Table[addr];
 16912  2E3F  082A               	movf	pec15_calc@addr+1,w
 16913  2E40  0085               	movwf	5
 16914  2E41  0829               	movf	pec15_calc@addr,w
 16915  2E42  0084               	movwf	4
 16916  2E43  3584               	lslf	4,f
 16917  2E44  0D85               	rlf	5,f
 16918  2E45  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 16919  2E46  0784               	addwf	4,f
 16920  2E47  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 16921  2E48  3D85               	addwfc	5,f
 16922  2E49  3F00               	moviw [0]fsr0
 16923  2E4A  00A0               	movwf	??_pec15_calc
 16924  2E4B  3F01               	moviw [1]fsr0
 16925  2E4C  00A1               	movwf	??_pec15_calc+1
 16926  2E4D  082D               	movf	pec15_calc@remainder,w
 16927  2E4E  00A3               	movwf	??_pec15_calc+3
 16928  2E4F  01A2               	clrf	??_pec15_calc+2
 16929  2E50  0820               	movf	??_pec15_calc,w
 16930  2E51  0622               	xorwf	??_pec15_calc+2,w
 16931  2E52  00AD               	movwf	pec15_calc@remainder
 16932  2E53  0821               	movf	??_pec15_calc+1,w
 16933  2E54  0623               	xorwf	??_pec15_calc+3,w
 16934  2E55  00AE               	movwf	pec15_calc@remainder+1
 16935  2E56  3001               	movlw	1
 16936  2E57  00A0               	movwf	??_pec15_calc
 16937  2E58  0820               	movf	??_pec15_calc,w
 16938  2E59  07AC               	addwf	pec15_calc@i,f
 16939  2E5A  2E18               	goto	l4500
 16940  2E5B                     l4502:	
 16941                           
 16942                           ;ltc6804.c: 1201: }
 16943                           ;ltc6804.c: 1202: return(remainder*2);
 16944  2E5B  352D               	lslf	pec15_calc@remainder,w
 16945  2E5C  00F6               	movwf	?_pec15_calc
 16946  2E5D  0D2E               	rlf	pec15_calc@remainder+1,w
 16947  2E5E  00F7               	movwf	?_pec15_calc+1
 16948  2E5F  0008               	return
 16949  2E60                     __end_of_pec15_calc:	
 16950                           
 16951                           	psect	text46
 16952  2147                     __ptext46:	
 16953 ;; *************** function _getTemps *****************
 16954 ;; Defined at:
 16955 ;;		line 32 in file "adc.c"
 16956 ;; Parameters:    Size  Location     Type
 16957 ;;  temperatures    1    wreg     PTR int 
 16958 ;;		 -> main@temps(10), 
 16959 ;;  numTemps        2   40[BANK1 ] int 
 16960 ;; Auto vars:     Size  Location     Type
 16961 ;;  temperatures    1   48[BANK1 ] PTR int 
 16962 ;;		 -> main@temps(10), 
 16963 ;;  inc             2   49[BANK1 ] int 
 16964 ;;  highestTemp     2   46[BANK1 ] int 
 16965 ;; Return value:  Size  Location     Type
 16966 ;;                  2   40[BANK1 ] int 
 16967 ;; Registers used:
 16968 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16969 ;; Tracked objects:
 16970 ;;		On entry : 0/0
 16971 ;;		On exit  : 0/0
 16972 ;;		Unchanged: 0/0
 16973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16974 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16975 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16976 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16977 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16978 ;;Total ram usage:       11 bytes
 16979 ;; Hardware stack levels used:    1
 16980 ;; Hardware stack levels required when called:    5
 16981 ;; This function calls:
 16982 ;;		_adcRead
 16983 ;;		_calculateTemp
 16984 ;; This function is called by:
 16985 ;;		_main
 16986 ;;		_startUp
 16987 ;; This function uses a non-reentrant model
 16988 ;;
 16989                           
 16990                           
 16991                           ;psect for function _getTemps
 16992  2147                     _getTemps:	
 16993                           
 16994                           ;incstack = 0
 16995                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16996                           ;getTemps@temperatures stored from wreg
 16997  2147  0021               	movlb	1	; select bank1
 16998  2148  00D0               	movwf	getTemps@temperatures^(0+128)
 16999                           
 17000                           ;adc.c: 33: int highestTemp = 0;
 17001  2149  01CE               	clrf	getTemps@highestTemp^(0+128)
 17002  214A  01CF               	clrf	(getTemps@highestTemp+1)^(0+128)
 17003                           
 17004                           ;adc.c: 35: LATBbits.LATB5 = 0;
 17005  214B  0022               	movlb	2	; select bank2
 17006  214C  128D               	bcf	13,5	;volatile
 17007                           
 17008                           ;adc.c: 36: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 17009  214D  0025               	movlb	5	; select bank5
 17010  214E  0862               	movf	_tempChannels^(0+640),w
 17011  214F  31AF  2757  31A1   	fcall	_adcRead
 17012  2152  0873               	movf	?_adcRead+1,w
 17013  2153  0021               	movlb	1	; select bank1
 17014  2154  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 17015  2155  0872               	movf	?_adcRead,w
 17016  2156  00C0               	movwf	calculateTemp@adcValue^(0+128)
 17017  2157  31A2  224D  31A1   	fcall	_calculateTemp
 17018  215A  0021               	movlb	1	; select bank1
 17019  215B  0841               	movf	(?_calculateTemp+1)^(0+128),w
 17020  215C  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 17021  215D  0840               	movf	?_calculateTemp^(0+128),w
 17022  215E  00CE               	movwf	getTemps@highestTemp^(0+128)
 17023                           
 17024                           ;adc.c: 37: temperatures[0] = highestTemp;
 17025  215F  0850               	movf	getTemps@temperatures^(0+128),w
 17026  2160  0086               	movwf	6
 17027  2161  3002               	movlw	2	; select bank4/5
 17028  2162  0087               	movwf	7
 17029  2163  084E               	movf	getTemps@highestTemp^(0+128),w
 17030  2164  3FC0               	movwi [0]fsr1
 17031  2165  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 17032  2166  3FC1               	movwi [1]fsr1
 17033                           
 17034                           ;adc.c: 38: for(int inc = 1; inc < numTemps; inc ++){
 17035  2167  3001               	movlw	1
 17036  2168  00D1               	movwf	getTemps@inc^(0+128)
 17037  2169  3000               	movlw	0
 17038  216A  00D2               	movwf	(getTemps@inc^(0+128)+1)
 17039  216B                     l8068:	
 17040  216B  0852               	movf	(getTemps@inc+1)^(0+128),w
 17041  216C  3A80               	xorlw	128
 17042  216D  00CA               	movwf	??_getTemps^(0+128)
 17043  216E  0849               	movf	(getTemps@numTemps+1)^(0+128),w
 17044  216F  3A80               	xorlw	128
 17045  2170  024A               	subwf	??_getTemps^(0+128),w
 17046  2171  1D03               	skipz
 17047  2172  2975               	goto	u11285
 17048  2173  0848               	movf	getTemps@numTemps^(0+128),w
 17049  2174  0251               	subwf	getTemps@inc^(0+128),w
 17050  2175                     u11285:	
 17051  2175  1803               	btfsc	3,0
 17052  2176  29BE               	goto	l186
 17053                           
 17054                           ;adc.c: 39: temperatures[inc] = calculateTemp(adcRead(tempChannels[inc]));
 17055  2177  0021               	movlb	1	; select bank1
 17056  2178  0851               	movf	getTemps@inc^(0+128),w
 17057  2179  3EE2               	addlw	(low (_tempChannels| (0+512)))& (0+255)
 17058  217A  0086               	movwf	6
 17059  217B  3002               	movlw	2	; select bank5/6
 17060  217C  0087               	movwf	7
 17061  217D  0801               	movf	1,w
 17062  217E  31AF  2757  31A1   	fcall	_adcRead
 17063  2181  0873               	movf	?_adcRead+1,w
 17064  2182  0021               	movlb	1	; select bank1
 17065  2183  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 17066  2184  0872               	movf	?_adcRead,w
 17067  2185  00C0               	movwf	calculateTemp@adcValue^(0+128)
 17068  2186  31A2  224D  31A1   	fcall	_calculateTemp
 17069  2189  0021               	movlb	1	; select bank1
 17070  218A  3551               	lslf	getTemps@inc^(0+128),w
 17071  218B  0750               	addwf	getTemps@temperatures^(0+128),w
 17072  218C  00CA               	movwf	??_getTemps^(0+128)
 17073  218D  084A               	movf	??_getTemps^(0+128),w
 17074  218E  0086               	movwf	6
 17075  218F  3002               	movlw	2	; select bank4/5
 17076  2190  0087               	movwf	7
 17077  2191  0840               	movf	?_calculateTemp^(0+128),w
 17078  2192  3FC0               	movwi [0]fsr1
 17079  2193  0841               	movf	(?_calculateTemp+1)^(0+128),w
 17080  2194  3FC1               	movwi [1]fsr1
 17081                           
 17082                           ;adc.c: 40: if(temperatures[inc] > highestTemp){
 17083  2195  3551               	lslf	getTemps@inc^(0+128),w
 17084  2196  0750               	addwf	getTemps@temperatures^(0+128),w
 17085  2197  00CA               	movwf	??_getTemps^(0+128)
 17086  2198  084A               	movf	??_getTemps^(0+128),w
 17087  2199  0086               	movwf	6
 17088  219A  3002               	movlw	2	; select bank4/5
 17089  219B  0087               	movwf	7
 17090  219C  3F40               	moviw [0]fsr1
 17091  219D  00CB               	movwf	(??_getTemps+1)^(0+128)
 17092  219E  3F41               	moviw [1]fsr1
 17093  219F  00CC               	movwf	((??_getTemps+1)^(0+128)+1)
 17094  21A0  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 17095  21A1  3A80               	xorlw	128
 17096  21A2  00CD               	movwf	(??_getTemps+3)^(0+128)
 17097  21A3  084C               	movf	(??_getTemps+2)^(0+128),w
 17098  21A4  3A80               	xorlw	128
 17099  21A5  024D               	subwf	(??_getTemps+3)^(0+128),w
 17100  21A6  1D03               	skipz
 17101  21A7  29AA               	goto	u11275
 17102  21A8  084B               	movf	(??_getTemps+1)^(0+128),w
 17103  21A9  024E               	subwf	getTemps@highestTemp^(0+128),w
 17104  21AA                     u11275:	
 17105  21AA  1803               	skipnc
 17106  21AB  29B8               	goto	l8066
 17107                           
 17108                           ;adc.c: 41: highestTemp = temperatures[inc];
 17109  21AC  0021               	movlb	1	; select bank1
 17110  21AD  3551               	lslf	getTemps@inc^(0+128),w
 17111  21AE  0750               	addwf	getTemps@temperatures^(0+128),w
 17112  21AF  00CA               	movwf	??_getTemps^(0+128)
 17113  21B0  084A               	movf	??_getTemps^(0+128),w
 17114  21B1  0086               	movwf	6
 17115  21B2  3002               	movlw	2	; select bank4/5
 17116  21B3  0087               	movwf	7
 17117  21B4  3F40               	moviw [0]fsr1
 17118  21B5  00CE               	movwf	getTemps@highestTemp^(0+128)
 17119  21B6  3F41               	moviw [1]fsr1
 17120  21B7  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 17121  21B8                     l8066:	
 17122  21B8  3001               	movlw	1
 17123  21B9  0021               	movlb	1	; select bank1
 17124  21BA  07D1               	addwf	getTemps@inc^(0+128),f
 17125  21BB  3000               	movlw	0
 17126  21BC  3DD2               	addwfc	(getTemps@inc+1)^(0+128),f
 17127  21BD  296B               	goto	l8068
 17128  21BE                     l186:	
 17129                           
 17130                           ;adc.c: 42: }
 17131                           ;adc.c: 43: }
 17132                           ;adc.c: 45: LATBbits.LATB5 = 1;
 17133  21BE  0022               	movlb	2	; select bank2
 17134  21BF  168D               	bsf	13,5	;volatile
 17135                           
 17136                           ;adc.c: 46: return highestTemp;
 17137  21C0  0021               	movlb	1	; select bank1
 17138  21C1  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 17139  21C2  00C9               	movwf	(?_getTemps+1)^(0+128)
 17140  21C3  084E               	movf	getTemps@highestTemp^(0+128),w
 17141  21C4  00C8               	movwf	?_getTemps^(0+128)
 17142  21C5  0008               	return
 17143  21C6                     __end_of_getTemps:	
 17144                           
 17145                           	psect	text47
 17146  224D                     __ptext47:	
 17147 ;; *************** function _calculateTemp *****************
 17148 ;; Defined at:
 17149 ;;		line 12 in file "adc.c"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  adcValue        2   32[BANK1 ] int 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;  voltage         4   36[BANK1 ] float 
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  2   32[BANK1 ] int 
 17156 ;; Registers used:
 17157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17163 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17164 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17165 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17166 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;Total ram usage:        8 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:    4
 17170 ;; This function calls:
 17171 ;;		___fldiv
 17172 ;;		___flmul
 17173 ;;		___fltol
 17174 ;;		___xxtofl
 17175 ;; This function is called by:
 17176 ;;		_getTemps
 17177 ;; This function uses a non-reentrant model
 17178 ;;
 17179                           
 17180                           
 17181                           ;psect for function _calculateTemp
 17182  224D                     _calculateTemp:	
 17183                           
 17184                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 17185                           
 17186                           ;incstack = 0
 17187                           ; Regs used in _calculateTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17188  224D  3040               	movlw	64
 17189  224E  0020               	movlb	0	; select bank0
 17190  224F  00D5               	movwf	___flmul@b+3
 17191  2250  30A0               	movlw	160
 17192  2251  00D4               	movwf	___flmul@b+2
 17193  2252  3000               	movlw	0
 17194  2253  00D3               	movwf	___flmul@b+1
 17195  2254  3000               	movlw	0
 17196  2255  00D2               	movwf	___flmul@b
 17197  2256  3045               	movlw	69
 17198  2257  00BB               	movwf	___fldiv@a+3
 17199  2258  3080               	movlw	128
 17200  2259  00BA               	movwf	___fldiv@a+2
 17201  225A  3000               	movlw	0
 17202  225B  00B9               	movwf	___fldiv@a+1
 17203  225C  3000               	movlw	0
 17204  225D  00B8               	movwf	___fldiv@a
 17205  225E  0021               	movlb	1	; select bank1
 17206  225F  0840               	movf	calculateTemp@adcValue^(0+128),w
 17207  2260  0020               	movlb	0	; select bank0
 17208  2261  00AE               	movwf	___xxtofl@val
 17209  2262  0021               	movlb	1	; select bank1
 17210  2263  0841               	movf	(calculateTemp@adcValue+1)^(0+128),w
 17211  2264  0020               	movlb	0	; select bank0
 17212  2265  00AF               	movwf	___xxtofl@val+1
 17213  2266  0D89               	rlf	9,f
 17214  2267  3B89               	subwfb	9,f
 17215  2268  0989               	comf	9,f
 17216  2269  00B0               	movwf	___xxtofl@val+2
 17217  226A  00B1               	movwf	___xxtofl@val+3
 17218  226B  3001               	movlw	1
 17219  226C  31A3  235D  31A2   	fcall	___xxtofl
 17220  226F  0020               	movlb	0	; select bank0
 17221  2270  0831               	movf	?___xxtofl+3,w
 17222  2271  00BF               	movwf	___fldiv@b+3
 17223  2272  0830               	movf	?___xxtofl+2,w
 17224  2273  00BE               	movwf	___fldiv@b+2
 17225  2274  082F               	movf	?___xxtofl+1,w
 17226  2275  00BD               	movwf	___fldiv@b+1
 17227  2276  082E               	movf	?___xxtofl,w
 17228  2277  00BC               	movwf	___fldiv@b
 17229  2278  3194  2468  31A2   	fcall	___fldiv
 17230  227B  0020               	movlb	0	; select bank0
 17231  227C  083B               	movf	?___fldiv+3,w
 17232  227D  00D9               	movwf	___flmul@a+3
 17233  227E  083A               	movf	?___fldiv+2,w
 17234  227F  00D8               	movwf	___flmul@a+2
 17235  2280  0839               	movf	?___fldiv+1,w
 17236  2281  00D7               	movwf	___flmul@a+1
 17237  2282  0838               	movf	?___fldiv,w
 17238  2283  00D6               	movwf	___flmul@a
 17239  2284  3183  23CD  31A2   	fcall	___flmul
 17240  2287  0020               	movlb	0	; select bank0
 17241  2288  0855               	movf	?___flmul+3,w
 17242  2289  0021               	movlb	1	; select bank1
 17243  228A  00C7               	movwf	(calculateTemp@voltage+3)^(0+128)
 17244  228B  0020               	movlb	0	; select bank0
 17245  228C  0854               	movf	?___flmul+2,w
 17246  228D  0021               	movlb	1	; select bank1
 17247  228E  00C6               	movwf	(calculateTemp@voltage+2)^(0+128)
 17248  228F  0020               	movlb	0	; select bank0
 17249  2290  0853               	movf	?___flmul+1,w
 17250  2291  0021               	movlb	1	; select bank1
 17251  2292  00C5               	movwf	(calculateTemp@voltage+1)^(0+128)
 17252  2293  0020               	movlb	0	; select bank0
 17253  2294  0852               	movf	?___flmul,w
 17254  2295  0021               	movlb	1	; select bank1
 17255  2296  00C4               	movwf	calculateTemp@voltage^(0+128)
 17256                           
 17257                           ;adc.c: 14: return temperatures[(int)(voltage*10)];
 17258  2297  0847               	movf	(calculateTemp@voltage+3)^(0+128),w
 17259  2298  0020               	movlb	0	; select bank0
 17260  2299  00D9               	movwf	___flmul@a+3
 17261  229A  0021               	movlb	1	; select bank1
 17262  229B  0846               	movf	(calculateTemp@voltage+2)^(0+128),w
 17263  229C  0020               	movlb	0	; select bank0
 17264  229D  00D8               	movwf	___flmul@a+2
 17265  229E  0021               	movlb	1	; select bank1
 17266  229F  0845               	movf	(calculateTemp@voltage+1)^(0+128),w
 17267  22A0  0020               	movlb	0	; select bank0
 17268  22A1  00D7               	movwf	___flmul@a+1
 17269  22A2  0021               	movlb	1	; select bank1
 17270  22A3  0844               	movf	calculateTemp@voltage^(0+128),w
 17271  22A4  0020               	movlb	0	; select bank0
 17272  22A5  00D6               	movwf	___flmul@a
 17273  22A6  3041               	movlw	65
 17274  22A7  00D5               	movwf	___flmul@b+3
 17275  22A8  3020               	movlw	32
 17276  22A9  00D4               	movwf	___flmul@b+2
 17277  22AA  3000               	movlw	0
 17278  22AB  00D3               	movwf	___flmul@b+1
 17279  22AC  3000               	movlw	0
 17280  22AD  00D2               	movwf	___flmul@b
 17281  22AE  3183  23CD  31A2   	fcall	___flmul
 17282  22B1  0020               	movlb	0	; select bank0
 17283  22B2  0855               	movf	?___flmul+3,w
 17284  22B3  0021               	movlb	1	; select bank1
 17285  22B4  00B8               	movwf	(___fltol@f1+3)^(0+128)
 17286  22B5  0020               	movlb	0	; select bank0
 17287  22B6  0854               	movf	?___flmul+2,w
 17288  22B7  0021               	movlb	1	; select bank1
 17289  22B8  00B7               	movwf	(___fltol@f1+2)^(0+128)
 17290  22B9  0020               	movlb	0	; select bank0
 17291  22BA  0853               	movf	?___flmul+1,w
 17292  22BB  0021               	movlb	1	; select bank1
 17293  22BC  00B6               	movwf	(___fltol@f1+1)^(0+128)
 17294  22BD  0020               	movlb	0	; select bank0
 17295  22BE  0852               	movf	?___flmul,w
 17296  22BF  0021               	movlb	1	; select bank1
 17297  22C0  00B5               	movwf	___fltol@f1^(0+128)
 17298  22C1  31A0  20C8         	fcall	___fltol
 17299  22C3  0021               	movlb	1	; select bank1
 17300  22C4  0836               	movf	(?___fltol+1)^(0+128),w
 17301  22C5  0085               	movwf	5
 17302  22C6  0835               	movf	?___fltol^(0+128),w
 17303  22C7  0084               	movwf	4
 17304  22C8  3068               	movlw	low (_temperatures| (0+32768))
 17305  22C9  0784               	addwf	4,f
 17306  22CA  30B0               	movlw	high (_temperatures| (0+32768))
 17307  22CB  3D85               	addwfc	5,f
 17308  22CC  0800               	movf	0,w	;code access
 17309  22CD  00C2               	movwf	??_calculateTemp^(0+128)
 17310  22CE  01C3               	clrf	(??_calculateTemp^(0+128)+1)
 17311  22CF  0842               	movf	??_calculateTemp^(0+128),w
 17312  22D0  00C0               	movwf	?_calculateTemp^(0+128)
 17313  22D1  0843               	movf	(??_calculateTemp+1)^(0+128),w
 17314  22D2  00C1               	movwf	(?_calculateTemp+1)^(0+128)
 17315  22D3  0008               	return
 17316  22D4                     __end_of_calculateTemp:	
 17317                           
 17318                           	psect	text48
 17319  20C8                     __ptext48:	
 17320 ;; *************** function ___fltol *****************
 17321 ;; Defined at:
 17322 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 17323 ;; Parameters:    Size  Location     Type
 17324 ;;  f1              4   21[BANK1 ] int 
 17325 ;; Auto vars:     Size  Location     Type
 17326 ;;  exp1            1   31[BANK1 ] unsigned char 
 17327 ;;  sign1           1   30[BANK1 ] unsigned char 
 17328 ;; Return value:  Size  Location     Type
 17329 ;;                  4   21[BANK1 ] long 
 17330 ;; Registers used:
 17331 ;;		wreg, status,2, status,0
 17332 ;; Tracked objects:
 17333 ;;		On entry : 0/0
 17334 ;;		On exit  : 0/0
 17335 ;;		Unchanged: 0/0
 17336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17337 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17338 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17339 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17340 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17341 ;;Total ram usage:       11 bytes
 17342 ;; Hardware stack levels used:    1
 17343 ;; Hardware stack levels required when called:    2
 17344 ;; This function calls:
 17345 ;;		Nothing
 17346 ;; This function is called by:
 17347 ;;		_calculateTemp
 17348 ;;		_sprintf
 17349 ;;		_startUp
 17350 ;; This function uses a non-reentrant model
 17351 ;;
 17352                           
 17353                           
 17354                           ;psect for function ___fltol
 17355  20C8                     ___fltol:	
 17356                           
 17357                           ;incstack = 0
 17358                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 17359  20C8  0021               	movlb	1	; select bank1
 17360  20C9  0835               	movf	___fltol@f1^(0+128),w
 17361  20CA  00B9               	movwf	??___fltol^(0+128)
 17362  20CB  0836               	movf	(___fltol@f1+1)^(0+128),w
 17363  20CC  00BA               	movwf	(??___fltol^(0+128)+1)
 17364  20CD  0837               	movf	(___fltol@f1+2)^(0+128),w
 17365  20CE  00BB               	movwf	(??___fltol^(0+128)+2)
 17366  20CF  0838               	movf	(___fltol@f1+3)^(0+128),w
 17367  20D0  00BC               	movwf	(??___fltol^(0+128)+3)
 17368  20D1  1003               	clrc
 17369  20D2  0D3B               	rlf	(??___fltol^(0+128)+2),w
 17370  20D3  0D3C               	rlf	(??___fltol^(0+128)+3),w
 17371  20D4  00BD               	movwf	(??___fltol+4)^(0+128)
 17372  20D5  083D               	movf	(??___fltol+4)^(0+128),w
 17373  20D6  00BF               	movwf	___fltol@exp1^(0+128)
 17374  20D7  083F               	movf	___fltol@exp1^(0+128),w
 17375  20D8  1D03               	btfss	3,2
 17376  20D9  28E3               	goto	l7290
 17377  20DA  3000               	movlw	0
 17378  20DB  00B8               	movwf	(?___fltol+3)^(0+128)
 17379  20DC  3000               	movlw	0
 17380  20DD  00B7               	movwf	(?___fltol+2)^(0+128)
 17381  20DE  3000               	movlw	0
 17382  20DF  00B6               	movwf	(?___fltol+1)^(0+128)
 17383  20E0  3000               	movlw	0
 17384  20E1  00B5               	movwf	?___fltol^(0+128)
 17385  20E2  0008               	return
 17386  20E3                     l7290:	
 17387  20E3  0835               	movf	___fltol@f1^(0+128),w
 17388  20E4  00B9               	movwf	??___fltol^(0+128)
 17389  20E5  0836               	movf	(___fltol@f1+1)^(0+128),w
 17390  20E6  00BA               	movwf	(??___fltol^(0+128)+1)
 17391  20E7  0837               	movf	(___fltol@f1+2)^(0+128),w
 17392  20E8  00BB               	movwf	(??___fltol^(0+128)+2)
 17393  20E9  0838               	movf	(___fltol@f1+3)^(0+128),w
 17394  20EA  00BC               	movwf	(??___fltol^(0+128)+3)
 17395  20EB  301F               	movlw	31
 17396  20EC                     u9805:	
 17397  20EC  36BC               	lsrf	(??___fltol^(0+128)+3),f
 17398  20ED  0CBB               	rrf	(??___fltol^(0+128)+2),f
 17399  20EE  0CBA               	rrf	(??___fltol^(0+128)+1),f
 17400  20EF  0CB9               	rrf	??___fltol^(0+128),f
 17401  20F0  0B89               	decfsz	9,f
 17402  20F1  28EC               	goto	u9805
 17403  20F2  0839               	movf	??___fltol^(0+128),w
 17404  20F3  00BD               	movwf	(??___fltol+4)^(0+128)
 17405  20F4  083D               	movf	(??___fltol+4)^(0+128),w
 17406  20F5  00BE               	movwf	___fltol@sign1^(0+128)
 17407  20F6  17B7               	bsf	(___fltol@f1^(0+128)+2),7
 17408  20F7  30FF               	movlw	255
 17409  20F8  05B5               	andwf	___fltol@f1^(0+128),f
 17410  20F9  30FF               	movlw	255
 17411  20FA  05B6               	andwf	(___fltol@f1+1)^(0+128),f
 17412  20FB  30FF               	movlw	255
 17413  20FC  05B7               	andwf	(___fltol@f1+2)^(0+128),f
 17414  20FD  3000               	movlw	0
 17415  20FE  05B8               	andwf	(___fltol@f1+3)^(0+128),f
 17416  20FF  3096               	movlw	150
 17417  2100  02BF               	subwf	___fltol@exp1^(0+128),f
 17418  2101  1FBF               	btfss	___fltol@exp1^(0+128),7
 17419  2102  291F               	goto	l7308
 17420  2103  083F               	movf	___fltol@exp1^(0+128),w
 17421  2104  3A80               	xorlw	128
 17422  2105  3E97               	addlw	151
 17423  2106  1803               	skipnc
 17424  2107  2911               	goto	l7306
 17425  2108  3000               	movlw	0
 17426  2109  00B8               	movwf	(?___fltol+3)^(0+128)
 17427  210A  3000               	movlw	0
 17428  210B  00B7               	movwf	(?___fltol+2)^(0+128)
 17429  210C  3000               	movlw	0
 17430  210D  00B6               	movwf	(?___fltol+1)^(0+128)
 17431  210E  3000               	movlw	0
 17432  210F  00B5               	movwf	?___fltol^(0+128)
 17433  2110  0008               	return
 17434  2111                     l7306:	
 17435  2111  3001               	movlw	1
 17436  2112                     u9835:	
 17437  2112  36B8               	lsrf	(___fltol@f1+3)^(0+128),f
 17438  2113  0CB7               	rrf	(___fltol@f1+2)^(0+128),f
 17439  2114  0CB6               	rrf	(___fltol@f1+1)^(0+128),f
 17440  2115  0CB5               	rrf	___fltol@f1^(0+128),f
 17441  2116  0B89               	decfsz	9,f
 17442  2117  2912               	goto	u9835
 17443  2118  3001               	movlw	1
 17444  2119  00B9               	movwf	??___fltol^(0+128)
 17445  211A  0839               	movf	??___fltol^(0+128),w
 17446  211B  07BF               	addwf	___fltol@exp1^(0+128),f
 17447  211C  1903               	btfsc	3,2
 17448  211D  2938               	goto	l7316
 17449  211E  2911               	goto	l7306
 17450  211F                     l7308:	
 17451  211F  3020               	movlw	32
 17452  2120  023F               	subwf	___fltol@exp1^(0+128),w
 17453  2121  1C03               	skipc
 17454  2122  2935               	goto	l1182
 17455  2123  3000               	movlw	0
 17456  2124  00B8               	movwf	(?___fltol+3)^(0+128)
 17457  2125  3000               	movlw	0
 17458  2126  00B7               	movwf	(?___fltol+2)^(0+128)
 17459  2127  3000               	movlw	0
 17460  2128  00B6               	movwf	(?___fltol+1)^(0+128)
 17461  2129  3000               	movlw	0
 17462  212A  00B5               	movwf	?___fltol^(0+128)
 17463  212B  0008               	return
 17464  212C                     l7314:	
 17465  212C  3001               	movlw	1
 17466  212D                     u9865:	
 17467  212D  35B5               	lslf	___fltol@f1^(0+128),f
 17468  212E  0DB6               	rlf	(___fltol@f1+1)^(0+128),f
 17469  212F  0DB7               	rlf	(___fltol@f1+2)^(0+128),f
 17470  2130  0DB8               	rlf	(___fltol@f1+3)^(0+128),f
 17471  2131  0B89               	decfsz	9,f
 17472  2132  292D               	goto	u9865
 17473  2133  3001               	movlw	1
 17474  2134  02BF               	subwf	___fltol@exp1^(0+128),f
 17475  2135                     l1182:	
 17476  2135  083F               	movf	___fltol@exp1^(0+128),w
 17477  2136  1D03               	btfss	3,2
 17478  2137  292C               	goto	l7314
 17479  2138                     l7316:	
 17480  2138  083E               	movf	___fltol@sign1^(0+128),w
 17481  2139  1903               	btfsc	3,2
 17482  213A  0008               	return
 17483  213B  09B5               	comf	___fltol@f1^(0+128),f
 17484  213C  09B6               	comf	(___fltol@f1+1)^(0+128),f
 17485  213D  09B7               	comf	(___fltol@f1+2)^(0+128),f
 17486  213E  09B8               	comf	(___fltol@f1+3)^(0+128),f
 17487  213F  0AB5               	incf	___fltol@f1^(0+128),f
 17488  2140  1903               	skipnz
 17489  2141  0AB6               	incf	(___fltol@f1+1)^(0+128),f
 17490  2142  1903               	skipnz
 17491  2143  0AB7               	incf	(___fltol@f1+2)^(0+128),f
 17492  2144  1903               	skipnz
 17493  2145  0AB8               	incf	(___fltol@f1+3)^(0+128),f
 17494  2146  0008               	return
 17495  2147                     __end_of___fltol:	
 17496                           
 17497                           	psect	text49
 17498  2D4B                     __ptext49:	
 17499 ;; *************** function _getCurrent *****************
 17500 ;; Defined at:
 17501 ;;		line 24 in file "adc.c"
 17502 ;; Parameters:    Size  Location     Type
 17503 ;;		None
 17504 ;; Auto vars:     Size  Location     Type
 17505 ;;  currentValue    4   69[BANK1 ] float 
 17506 ;; Return value:  Size  Location     Type
 17507 ;;                  4   65[BANK1 ] float 
 17508 ;; Registers used:
 17509 ;;		wreg, status,2, status,0, pclath, cstack
 17510 ;; Tracked objects:
 17511 ;;		On entry : 0/0
 17512 ;;		On exit  : 0/0
 17513 ;;		Unchanged: 0/0
 17514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17515 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17516 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17518 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17519 ;;Total ram usage:        8 bytes
 17520 ;; Hardware stack levels used:    1
 17521 ;; Hardware stack levels required when called:    5
 17522 ;; This function calls:
 17523 ;;		___xxtofl
 17524 ;;		_adcRead
 17525 ;;		_calculateCurrent
 17526 ;; This function is called by:
 17527 ;;		_main
 17528 ;;		_startUp
 17529 ;; This function uses a non-reentrant model
 17530 ;;
 17531                           
 17532                           
 17533                           ;psect for function _getCurrent
 17534  2D4B                     _getCurrent:	
 17535                           
 17536                           ;adc.c: 25: float currentValue = (float)adcRead((char)10101);
 17537                           
 17538                           ;incstack = 0
 17539                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 17540  2D4B  3075               	movlw	117
 17541  2D4C  31AF  2757  31AD   	fcall	_adcRead
 17542  2D4F  0872               	movf	?_adcRead,w
 17543  2D50  0020               	movlb	0	; select bank0
 17544  2D51  00AE               	movwf	___xxtofl@val
 17545  2D52  0873               	movf	?_adcRead+1,w
 17546  2D53  00AF               	movwf	___xxtofl@val+1
 17547  2D54  0D89               	rlf	9,f
 17548  2D55  3B89               	subwfb	9,f
 17549  2D56  0989               	comf	9,f
 17550  2D57  00B0               	movwf	___xxtofl@val+2
 17551  2D58  00B1               	movwf	___xxtofl@val+3
 17552  2D59  3001               	movlw	1
 17553  2D5A  31A3  235D  31AD   	fcall	___xxtofl
 17554  2D5D  0020               	movlb	0	; select bank0
 17555  2D5E  0831               	movf	?___xxtofl+3,w
 17556  2D5F  0021               	movlb	1	; select bank1
 17557  2D60  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 17558  2D61  0020               	movlb	0	; select bank0
 17559  2D62  0830               	movf	?___xxtofl+2,w
 17560  2D63  0021               	movlb	1	; select bank1
 17561  2D64  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 17562  2D65  0020               	movlb	0	; select bank0
 17563  2D66  082F               	movf	?___xxtofl+1,w
 17564  2D67  0021               	movlb	1	; select bank1
 17565  2D68  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 17566  2D69  0020               	movlb	0	; select bank0
 17567  2D6A  082E               	movf	?___xxtofl,w
 17568  2D6B  0021               	movlb	1	; select bank1
 17569  2D6C  00E5               	movwf	getCurrent@currentValue^(0+128)
 17570                           
 17571                           ;adc.c: 26: currentValue = calculateCurrent(currentValue);
 17572  2D6D  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 17573  2D6E  00D8               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 17574  2D6F  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 17575  2D70  00D7               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 17576  2D71  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 17577  2D72  00D6               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 17578  2D73  0865               	movf	getCurrent@currentValue^(0+128),w
 17579  2D74  00D5               	movwf	calculateCurrent@adcValue^(0+128)
 17580  2D75  31A2  22D4         	fcall	_calculateCurrent
 17581  2D77  0021               	movlb	1	; select bank1
 17582  2D78  0858               	movf	(?_calculateCurrent+3)^(0+128),w
 17583  2D79  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 17584  2D7A  0857               	movf	(?_calculateCurrent+2)^(0+128),w
 17585  2D7B  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 17586  2D7C  0856               	movf	(?_calculateCurrent+1)^(0+128),w
 17587  2D7D  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 17588  2D7E  0855               	movf	?_calculateCurrent^(0+128),w
 17589  2D7F  00E5               	movwf	getCurrent@currentValue^(0+128)
 17590                           
 17591                           ;adc.c: 28: return currentValue;
 17592  2D80  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 17593  2D81  00E4               	movwf	(?_getCurrent+3)^(0+128)
 17594  2D82  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 17595  2D83  00E3               	movwf	(?_getCurrent+2)^(0+128)
 17596  2D84  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 17597  2D85  00E2               	movwf	(?_getCurrent+1)^(0+128)
 17598  2D86  0865               	movf	getCurrent@currentValue^(0+128),w
 17599  2D87  00E1               	movwf	?_getCurrent^(0+128)
 17600  2D88  0008               	return
 17601  2D89                     __end_of_getCurrent:	
 17602                           
 17603                           	psect	text50
 17604  22D4                     __ptext50:	
 17605 ;; *************** function _calculateCurrent *****************
 17606 ;; Defined at:
 17607 ;;		line 19 in file "adc.c"
 17608 ;; Parameters:    Size  Location     Type
 17609 ;;  adcValue        4   53[BANK1 ] float 
 17610 ;; Auto vars:     Size  Location     Type
 17611 ;;  curr            4   57[BANK1 ] float 
 17612 ;; Return value:  Size  Location     Type
 17613 ;;                  4   53[BANK1 ] float 
 17614 ;; Registers used:
 17615 ;;		wreg, status,2, status,0, pclath, cstack
 17616 ;; Tracked objects:
 17617 ;;		On entry : 0/0
 17618 ;;		On exit  : 0/0
 17619 ;;		Unchanged: 0/0
 17620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17621 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17622 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17624 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17625 ;;Total ram usage:       12 bytes
 17626 ;; Hardware stack levels used:    1
 17627 ;; Hardware stack levels required when called:    4
 17628 ;; This function calls:
 17629 ;;		___fladd
 17630 ;;		___fldiv
 17631 ;;		___flmul
 17632 ;; This function is called by:
 17633 ;;		_getCurrent
 17634 ;; This function uses a non-reentrant model
 17635 ;;
 17636                           
 17637                           
 17638                           ;psect for function _calculateCurrent
 17639  22D4                     _calculateCurrent:	
 17640                           
 17641                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 17642                           
 17643                           ;incstack = 0
 17644                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 17645  22D4  30C0               	movlw	192
 17646  22D5  0021               	movlb	1	; select bank1
 17647  22D6  00C0               	movwf	(___fladd@b+3)^(0+128)
 17648  22D7  3020               	movlw	32
 17649  22D8  00BF               	movwf	(___fladd@b+2)^(0+128)
 17650  22D9  3000               	movlw	0
 17651  22DA  00BE               	movwf	(___fladd@b+1)^(0+128)
 17652  22DB  3000               	movlw	0
 17653  22DC  00BD               	movwf	___fladd@b^(0+128)
 17654  22DD  3040               	movlw	64
 17655  22DE  0020               	movlb	0	; select bank0
 17656  22DF  00D5               	movwf	___flmul@b+3
 17657  22E0  30A0               	movlw	160
 17658  22E1  00D4               	movwf	___flmul@b+2
 17659  22E2  3000               	movlw	0
 17660  22E3  00D3               	movwf	___flmul@b+1
 17661  22E4  3000               	movlw	0
 17662  22E5  00D2               	movwf	___flmul@b
 17663  22E6  3045               	movlw	69
 17664  22E7  00BB               	movwf	___fldiv@a+3
 17665  22E8  307F               	movlw	127
 17666  22E9  00BA               	movwf	___fldiv@a+2
 17667  22EA  30F0               	movlw	240
 17668  22EB  00B9               	movwf	___fldiv@a+1
 17669  22EC  3000               	movlw	0
 17670  22ED  00B8               	movwf	___fldiv@a
 17671  22EE  0021               	movlb	1	; select bank1
 17672  22EF  0858               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 17673  22F0  0020               	movlb	0	; select bank0
 17674  22F1  00BF               	movwf	___fldiv@b+3
 17675  22F2  0021               	movlb	1	; select bank1
 17676  22F3  0857               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 17677  22F4  0020               	movlb	0	; select bank0
 17678  22F5  00BE               	movwf	___fldiv@b+2
 17679  22F6  0021               	movlb	1	; select bank1
 17680  22F7  0856               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 17681  22F8  0020               	movlb	0	; select bank0
 17682  22F9  00BD               	movwf	___fldiv@b+1
 17683  22FA  0021               	movlb	1	; select bank1
 17684  22FB  0855               	movf	calculateCurrent@adcValue^(0+128),w
 17685  22FC  0020               	movlb	0	; select bank0
 17686  22FD  00BC               	movwf	___fldiv@b
 17687  22FE  3194  2468  31A2   	fcall	___fldiv
 17688  2301  0020               	movlb	0	; select bank0
 17689  2302  083B               	movf	?___fldiv+3,w
 17690  2303  00D9               	movwf	___flmul@a+3
 17691  2304  083A               	movf	?___fldiv+2,w
 17692  2305  00D8               	movwf	___flmul@a+2
 17693  2306  0839               	movf	?___fldiv+1,w
 17694  2307  00D7               	movwf	___flmul@a+1
 17695  2308  0838               	movf	?___fldiv,w
 17696  2309  00D6               	movwf	___flmul@a
 17697  230A  3183  23CD  31A2   	fcall	___flmul
 17698  230D  0020               	movlb	0	; select bank0
 17699  230E  0855               	movf	?___flmul+3,w
 17700  230F  0021               	movlb	1	; select bank1
 17701  2310  00C4               	movwf	(___fladd@a+3)^(0+128)
 17702  2311  0020               	movlb	0	; select bank0
 17703  2312  0854               	movf	?___flmul+2,w
 17704  2313  0021               	movlb	1	; select bank1
 17705  2314  00C3               	movwf	(___fladd@a+2)^(0+128)
 17706  2315  0020               	movlb	0	; select bank0
 17707  2316  0853               	movf	?___flmul+1,w
 17708  2317  0021               	movlb	1	; select bank1
 17709  2318  00C2               	movwf	(___fladd@a+1)^(0+128)
 17710  2319  0020               	movlb	0	; select bank0
 17711  231A  0852               	movf	?___flmul,w
 17712  231B  0021               	movlb	1	; select bank1
 17713  231C  00C1               	movwf	___fladd@a^(0+128)
 17714  231D  3185  25F9  31A2   	fcall	___fladd
 17715  2320  0021               	movlb	1	; select bank1
 17716  2321  0840               	movf	(?___fladd+3)^(0+128),w
 17717  2322  00E0               	movwf	(_calculateCurrent$2165+3)^(0+128)
 17718  2323  083F               	movf	(?___fladd+2)^(0+128),w
 17719  2324  00DF               	movwf	(_calculateCurrent$2165+2)^(0+128)
 17720  2325  083E               	movf	(?___fladd+1)^(0+128),w
 17721  2326  00DE               	movwf	(_calculateCurrent$2165+1)^(0+128)
 17722  2327  083D               	movf	?___fladd^(0+128),w
 17723  2328  00DD               	movwf	_calculateCurrent$2165^(0+128)
 17724                           
 17725                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 17726  2329  303D               	movlw	61
 17727  232A  0020               	movlb	0	; select bank0
 17728  232B  00BB               	movwf	___fldiv@a+3
 17729  232C  3021               	movlw	33
 17730  232D  00BA               	movwf	___fldiv@a+2
 17731  232E  3061               	movlw	97
 17732  232F  00B9               	movwf	___fldiv@a+1
 17733  2330  30E5               	movlw	229
 17734  2331  00B8               	movwf	___fldiv@a
 17735  2332  0021               	movlb	1	; select bank1
 17736  2333  0860               	movf	(_calculateCurrent$2165+3)^(0+128),w
 17737  2334  0020               	movlb	0	; select bank0
 17738  2335  00BF               	movwf	___fldiv@b+3
 17739  2336  0021               	movlb	1	; select bank1
 17740  2337  085F               	movf	(_calculateCurrent$2165+2)^(0+128),w
 17741  2338  0020               	movlb	0	; select bank0
 17742  2339  00BE               	movwf	___fldiv@b+2
 17743  233A  0021               	movlb	1	; select bank1
 17744  233B  085E               	movf	(_calculateCurrent$2165+1)^(0+128),w
 17745  233C  0020               	movlb	0	; select bank0
 17746  233D  00BD               	movwf	___fldiv@b+1
 17747  233E  0021               	movlb	1	; select bank1
 17748  233F  085D               	movf	_calculateCurrent$2165^(0+128),w
 17749  2340  0020               	movlb	0	; select bank0
 17750  2341  00BC               	movwf	___fldiv@b
 17751  2342  3194  2468         	fcall	___fldiv
 17752  2344  0020               	movlb	0	; select bank0
 17753  2345  083B               	movf	?___fldiv+3,w
 17754  2346  0021               	movlb	1	; select bank1
 17755  2347  00DC               	movwf	(calculateCurrent@curr+3)^(0+128)
 17756  2348  0020               	movlb	0	; select bank0
 17757  2349  083A               	movf	?___fldiv+2,w
 17758  234A  0021               	movlb	1	; select bank1
 17759  234B  00DB               	movwf	(calculateCurrent@curr+2)^(0+128)
 17760  234C  0020               	movlb	0	; select bank0
 17761  234D  0839               	movf	?___fldiv+1,w
 17762  234E  0021               	movlb	1	; select bank1
 17763  234F  00DA               	movwf	(calculateCurrent@curr+1)^(0+128)
 17764  2350  0020               	movlb	0	; select bank0
 17765  2351  0838               	movf	?___fldiv,w
 17766  2352  0021               	movlb	1	; select bank1
 17767  2353  00D9               	movwf	calculateCurrent@curr^(0+128)
 17768                           
 17769                           ;adc.c: 21: return curr;
 17770  2354  085C               	movf	(calculateCurrent@curr+3)^(0+128),w
 17771  2355  00D8               	movwf	(?_calculateCurrent+3)^(0+128)
 17772  2356  085B               	movf	(calculateCurrent@curr+2)^(0+128),w
 17773  2357  00D7               	movwf	(?_calculateCurrent+2)^(0+128)
 17774  2358  085A               	movf	(calculateCurrent@curr+1)^(0+128),w
 17775  2359  00D6               	movwf	(?_calculateCurrent+1)^(0+128)
 17776  235A  0859               	movf	calculateCurrent@curr^(0+128),w
 17777  235B  00D5               	movwf	?_calculateCurrent^(0+128)
 17778  235C  0008               	return
 17779  235D                     __end_of_calculateCurrent:	
 17780                           
 17781                           	psect	text51
 17782  03CD                     __ptext51:	
 17783 ;; *************** function ___flmul *****************
 17784 ;; Defined at:
 17785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 17786 ;; Parameters:    Size  Location     Type
 17787 ;;  b               4   50[BANK0 ] float 
 17788 ;;  a               4   54[BANK0 ] float 
 17789 ;; Auto vars:     Size  Location     Type
 17790 ;;  prod            4   70[BANK0 ] struct .
 17791 ;;  grs             4   65[BANK0 ] unsigned long 
 17792 ;;  temp            2   74[BANK0 ] struct .
 17793 ;;  bexp            1   69[BANK0 ] unsigned char 
 17794 ;;  aexp            1   64[BANK0 ] unsigned char 
 17795 ;;  sign            1   63[BANK0 ] unsigned char 
 17796 ;; Return value:  Size  Location     Type
 17797 ;;                  4   50[BANK0 ] unsigned char 
 17798 ;; Registers used:
 17799 ;;		wreg, status,2, status,0, pclath, cstack
 17800 ;; Tracked objects:
 17801 ;;		On entry : 0/0
 17802 ;;		On exit  : 0/0
 17803 ;;		Unchanged: 0/0
 17804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17805 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17806 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17808 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17809 ;;Total ram usage:       26 bytes
 17810 ;; Hardware stack levels used:    1
 17811 ;; Hardware stack levels required when called:    3
 17812 ;; This function calls:
 17813 ;;		__Umul8_16
 17814 ;; This function is called by:
 17815 ;;		_calculateTemp
 17816 ;;		_calculateCurrent
 17817 ;;		_measureVoltages
 17818 ;;		_fround
 17819 ;;		_scale
 17820 ;;		_sprintf
 17821 ;;		_startUp
 17822 ;; This function uses a non-reentrant model
 17823 ;;
 17824                           
 17825                           
 17826                           ;psect for function ___flmul
 17827  03CD                     ___flmul:	
 17828                           
 17829                           ;incstack = 0
 17830                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 17831  03CD  0020               	movlb	0	; select bank0
 17832  03CE  0855               	movf	___flmul@b+3,w
 17833  03CF  3980               	andlw	128
 17834  03D0  00DA               	movwf	??___flmul
 17835  03D1  085A               	movf	??___flmul,w
 17836  03D2  00DF               	movwf	___flmul@sign
 17837  03D3  3555               	lslf	___flmul@b+3,w
 17838  03D4  00DA               	movwf	??___flmul
 17839  03D5  085A               	movf	??___flmul,w
 17840  03D6  00E5               	movwf	___flmul@bexp
 17841  03D7  1BD4               	btfsc	___flmul@b+2,7
 17842  03D8  1465               	bsf	___flmul@bexp,0
 17843  03D9  0865               	movf	___flmul@bexp,w
 17844  03DA  1903               	btfsc	3,2
 17845  03DB  2BE9               	goto	l6918
 17846  03DC  0A65               	incf	___flmul@bexp,w
 17847  03DD  1D03               	btfss	3,2
 17848  03DE  2BE7               	goto	l6916
 17849  03DF  3000               	movlw	0
 17850  03E0  00D5               	movwf	___flmul@b+3
 17851  03E1  3000               	movlw	0
 17852  03E2  00D4               	movwf	___flmul@b+2
 17853  03E3  3000               	movlw	0
 17854  03E4  00D3               	movwf	___flmul@b+1
 17855  03E5  3000               	movlw	0
 17856  03E6  00D2               	movwf	___flmul@b
 17857  03E7                     l6916:	
 17858  03E7  17D4               	bsf	___flmul@b+2,7
 17859  03E8  2BF1               	goto	l6920
 17860  03E9                     l6918:	
 17861  03E9  3000               	movlw	0
 17862  03EA  00D5               	movwf	___flmul@b+3
 17863  03EB  3000               	movlw	0
 17864  03EC  00D4               	movwf	___flmul@b+2
 17865  03ED  3000               	movlw	0
 17866  03EE  00D3               	movwf	___flmul@b+1
 17867  03EF  3000               	movlw	0
 17868  03F0  00D2               	movwf	___flmul@b
 17869  03F1                     l6920:	
 17870  03F1  0859               	movf	___flmul@a+3,w
 17871  03F2  3980               	andlw	128
 17872  03F3  00DA               	movwf	??___flmul
 17873  03F4  085A               	movf	??___flmul,w
 17874  03F5  06DF               	xorwf	___flmul@sign,f
 17875  03F6  3559               	lslf	___flmul@a+3,w
 17876  03F7  00DA               	movwf	??___flmul
 17877  03F8  085A               	movf	??___flmul,w
 17878  03F9  00E0               	movwf	___flmul@aexp
 17879  03FA  1BD8               	btfsc	___flmul@a+2,7
 17880  03FB  1460               	bsf	___flmul@aexp,0
 17881  03FC  0860               	movf	___flmul@aexp,w
 17882  03FD  1903               	btfsc	3,2
 17883  03FE  2C0C               	goto	l6936
 17884  03FF  0A60               	incf	___flmul@aexp,w
 17885  0400  1D03               	btfss	3,2
 17886  0401  2C0A               	goto	l6934
 17887  0402  3000               	movlw	0
 17888  0403  00D9               	movwf	___flmul@a+3
 17889  0404  3000               	movlw	0
 17890  0405  00D8               	movwf	___flmul@a+2
 17891  0406  3000               	movlw	0
 17892  0407  00D7               	movwf	___flmul@a+1
 17893  0408  3000               	movlw	0
 17894  0409  00D6               	movwf	___flmul@a
 17895  040A                     l6934:	
 17896  040A  17D8               	bsf	___flmul@a+2,7
 17897  040B  2C14               	goto	l6938
 17898  040C                     l6936:	
 17899  040C  3000               	movlw	0
 17900  040D  00D9               	movwf	___flmul@a+3
 17901  040E  3000               	movlw	0
 17902  040F  00D8               	movwf	___flmul@a+2
 17903  0410  3000               	movlw	0
 17904  0411  00D7               	movwf	___flmul@a+1
 17905  0412  3000               	movlw	0
 17906  0413  00D6               	movwf	___flmul@a
 17907  0414                     l6938:	
 17908  0414  0860               	movf	___flmul@aexp,w
 17909  0415  1D03               	btfss	3,2
 17910  0416  0865               	movf	___flmul@bexp,w
 17911  0417  1D03               	btfss	3,2
 17912  0418  2C22               	goto	l6946
 17913  0419  3000               	movlw	0
 17914  041A  00D5               	movwf	?___flmul+3
 17915  041B  3000               	movlw	0
 17916  041C  00D4               	movwf	?___flmul+2
 17917  041D  3000               	movlw	0
 17918  041E  00D3               	movwf	?___flmul+1
 17919  041F  3000               	movlw	0
 17920  0420  00D2               	movwf	?___flmul
 17921  0421  0008               	return
 17922  0422                     l6946:	
 17923  0422  0852               	movf	___flmul@b,w
 17924  0423  00DA               	movwf	??___flmul
 17925  0424  085A               	movf	??___flmul,w
 17926  0425  00F2               	movwf	__Umul8_16@multiplicand
 17927  0426  0858               	movf	___flmul@a+2,w
 17928  0427  31AC  2417  3183   	fcall	__Umul8_16
 17929  042A  0873               	movf	?__Umul8_16+1,w
 17930  042B  0020               	movlb	0	; select bank0
 17931  042C  00EB               	movwf	___flmul@temp+1
 17932  042D  0872               	movf	?__Umul8_16,w
 17933  042E  00EA               	movwf	___flmul@temp
 17934  042F  086A               	movf	___flmul@temp,w
 17935  0430  00DA               	movwf	??___flmul
 17936  0431  01DB               	clrf	??___flmul+1
 17937  0432  01DC               	clrf	??___flmul+2
 17938  0433  01DD               	clrf	??___flmul+3
 17939  0434  085D               	movf	??___flmul+3,w
 17940  0435  00E4               	movwf	___flmul@grs+3
 17941  0436  085C               	movf	??___flmul+2,w
 17942  0437  00E3               	movwf	___flmul@grs+2
 17943  0438  085B               	movf	??___flmul+1,w
 17944  0439  00E2               	movwf	___flmul@grs+1
 17945  043A  085A               	movf	??___flmul,w
 17946  043B  00E1               	movwf	___flmul@grs
 17947  043C  086B               	movf	___flmul@temp+1,w
 17948  043D  00DA               	movwf	??___flmul
 17949  043E  01DB               	clrf	??___flmul+1
 17950  043F  01DC               	clrf	??___flmul+2
 17951  0440  01DD               	clrf	??___flmul+3
 17952  0441  085D               	movf	??___flmul+3,w
 17953  0442  00E9               	movwf	___flmul@prod+3
 17954  0443  085C               	movf	??___flmul+2,w
 17955  0444  00E8               	movwf	___flmul@prod+2
 17956  0445  085B               	movf	??___flmul+1,w
 17957  0446  00E7               	movwf	___flmul@prod+1
 17958  0447  085A               	movf	??___flmul,w
 17959  0448  00E6               	movwf	___flmul@prod
 17960  0449  0853               	movf	___flmul@b+1,w
 17961  044A  00DA               	movwf	??___flmul
 17962  044B  085A               	movf	??___flmul,w
 17963  044C  00F2               	movwf	__Umul8_16@multiplicand
 17964  044D  0857               	movf	___flmul@a+1,w
 17965  044E  31AC  2417  3183   	fcall	__Umul8_16
 17966  0451  0873               	movf	?__Umul8_16+1,w
 17967  0452  0020               	movlb	0	; select bank0
 17968  0453  00EB               	movwf	___flmul@temp+1
 17969  0454  0872               	movf	?__Umul8_16,w
 17970  0455  00EA               	movwf	___flmul@temp
 17971  0456  086A               	movf	___flmul@temp,w
 17972  0457  00DA               	movwf	??___flmul
 17973  0458  01DB               	clrf	??___flmul+1
 17974  0459  01DC               	clrf	??___flmul+2
 17975  045A  01DD               	clrf	??___flmul+3
 17976  045B  085A               	movf	??___flmul,w
 17977  045C  07E1               	addwf	___flmul@grs,f
 17978  045D  085B               	movf	??___flmul+1,w
 17979  045E  3DE2               	addwfc	___flmul@grs+1,f
 17980  045F  085C               	movf	??___flmul+2,w
 17981  0460  3DE3               	addwfc	___flmul@grs+2,f
 17982  0461  085D               	movf	??___flmul+3,w
 17983  0462  3DE4               	addwfc	___flmul@grs+3,f
 17984  0463  086B               	movf	___flmul@temp+1,w
 17985  0464  00DA               	movwf	??___flmul
 17986  0465  01DB               	clrf	??___flmul+1
 17987  0466  01DC               	clrf	??___flmul+2
 17988  0467  01DD               	clrf	??___flmul+3
 17989  0468  085A               	movf	??___flmul,w
 17990  0469  07E6               	addwf	___flmul@prod,f
 17991  046A  085B               	movf	??___flmul+1,w
 17992  046B  3DE7               	addwfc	___flmul@prod+1,f
 17993  046C  085C               	movf	??___flmul+2,w
 17994  046D  3DE8               	addwfc	___flmul@prod+2,f
 17995  046E  085D               	movf	??___flmul+3,w
 17996  046F  3DE9               	addwfc	___flmul@prod+3,f
 17997  0470  0854               	movf	___flmul@b+2,w
 17998  0471  00DA               	movwf	??___flmul
 17999  0472  085A               	movf	??___flmul,w
 18000  0473  00F2               	movwf	__Umul8_16@multiplicand
 18001  0474  0856               	movf	___flmul@a,w
 18002  0475  31AC  2417  3183   	fcall	__Umul8_16
 18003  0478  0873               	movf	?__Umul8_16+1,w
 18004  0479  0020               	movlb	0	; select bank0
 18005  047A  00EB               	movwf	___flmul@temp+1
 18006  047B  0872               	movf	?__Umul8_16,w
 18007  047C  00EA               	movwf	___flmul@temp
 18008  047D  086A               	movf	___flmul@temp,w
 18009  047E  00DA               	movwf	??___flmul
 18010  047F  01DB               	clrf	??___flmul+1
 18011  0480  01DC               	clrf	??___flmul+2
 18012  0481  01DD               	clrf	??___flmul+3
 18013  0482  085A               	movf	??___flmul,w
 18014  0483  07E1               	addwf	___flmul@grs,f
 18015  0484  085B               	movf	??___flmul+1,w
 18016  0485  3DE2               	addwfc	___flmul@grs+1,f
 18017  0486  085C               	movf	??___flmul+2,w
 18018  0487  3DE3               	addwfc	___flmul@grs+2,f
 18019  0488  085D               	movf	??___flmul+3,w
 18020  0489  3DE4               	addwfc	___flmul@grs+3,f
 18021  048A  086B               	movf	___flmul@temp+1,w
 18022  048B  00DA               	movwf	??___flmul
 18023  048C  01DB               	clrf	??___flmul+1
 18024  048D  01DC               	clrf	??___flmul+2
 18025  048E  01DD               	clrf	??___flmul+3
 18026  048F  085A               	movf	??___flmul,w
 18027  0490  07E6               	addwf	___flmul@prod,f
 18028  0491  085B               	movf	??___flmul+1,w
 18029  0492  3DE7               	addwfc	___flmul@prod+1,f
 18030  0493  085C               	movf	??___flmul+2,w
 18031  0494  3DE8               	addwfc	___flmul@prod+2,f
 18032  0495  085D               	movf	??___flmul+3,w
 18033  0496  3DE9               	addwfc	___flmul@prod+3,f
 18034  0497  3008               	movlw	8
 18035  0498                     u9145:	
 18036  0498  35E1               	lslf	___flmul@grs,f
 18037  0499  0DE2               	rlf	___flmul@grs+1,f
 18038  049A  0DE3               	rlf	___flmul@grs+2,f
 18039  049B  0DE4               	rlf	___flmul@grs+3,f
 18040  049C  0B89               	decfsz	9,f
 18041  049D  2C98               	goto	u9145
 18042  049E  0853               	movf	___flmul@b+1,w
 18043  049F  00DA               	movwf	??___flmul
 18044  04A0  085A               	movf	??___flmul,w
 18045  04A1  00F2               	movwf	__Umul8_16@multiplicand
 18046  04A2  0856               	movf	___flmul@a,w
 18047  04A3  31AC  2417  3183   	fcall	__Umul8_16
 18048  04A6  0873               	movf	?__Umul8_16+1,w
 18049  04A7  0020               	movlb	0	; select bank0
 18050  04A8  00EB               	movwf	___flmul@temp+1
 18051  04A9  0872               	movf	?__Umul8_16,w
 18052  04AA  00EA               	movwf	___flmul@temp
 18053  04AB  086A               	movf	___flmul@temp,w
 18054  04AC  07E1               	addwf	___flmul@grs,f
 18055  04AD  086B               	movf	___flmul@temp+1,w
 18056  04AE  3DE2               	addwfc	___flmul@grs+1,f
 18057  04AF  3000               	movlw	0
 18058  04B0  3DE3               	addwfc	___flmul@grs+2,f
 18059  04B1  3DE4               	addwfc	___flmul@grs+3,f
 18060  04B2  0852               	movf	___flmul@b,w
 18061  04B3  00DA               	movwf	??___flmul
 18062  04B4  085A               	movf	??___flmul,w
 18063  04B5  00F2               	movwf	__Umul8_16@multiplicand
 18064  04B6  0857               	movf	___flmul@a+1,w
 18065  04B7  31AC  2417  3183   	fcall	__Umul8_16
 18066  04BA  0873               	movf	?__Umul8_16+1,w
 18067  04BB  0020               	movlb	0	; select bank0
 18068  04BC  00EB               	movwf	___flmul@temp+1
 18069  04BD  0872               	movf	?__Umul8_16,w
 18070  04BE  00EA               	movwf	___flmul@temp
 18071  04BF  086A               	movf	___flmul@temp,w
 18072  04C0  07E1               	addwf	___flmul@grs,f
 18073  04C1  086B               	movf	___flmul@temp+1,w
 18074  04C2  3DE2               	addwfc	___flmul@grs+1,f
 18075  04C3  3000               	movlw	0
 18076  04C4  3DE3               	addwfc	___flmul@grs+2,f
 18077  04C5  3DE4               	addwfc	___flmul@grs+3,f
 18078  04C6  3008               	movlw	8
 18079  04C7                     u9155:	
 18080  04C7  35E1               	lslf	___flmul@grs,f
 18081  04C8  0DE2               	rlf	___flmul@grs+1,f
 18082  04C9  0DE3               	rlf	___flmul@grs+2,f
 18083  04CA  0DE4               	rlf	___flmul@grs+3,f
 18084  04CB  0B89               	decfsz	9,f
 18085  04CC  2CC7               	goto	u9155
 18086  04CD  0852               	movf	___flmul@b,w
 18087  04CE  00DA               	movwf	??___flmul
 18088  04CF  085A               	movf	??___flmul,w
 18089  04D0  00F2               	movwf	__Umul8_16@multiplicand
 18090  04D1  0856               	movf	___flmul@a,w
 18091  04D2  31AC  2417  3183   	fcall	__Umul8_16
 18092  04D5  0873               	movf	?__Umul8_16+1,w
 18093  04D6  0020               	movlb	0	; select bank0
 18094  04D7  00EB               	movwf	___flmul@temp+1
 18095  04D8  0872               	movf	?__Umul8_16,w
 18096  04D9  00EA               	movwf	___flmul@temp
 18097  04DA  086A               	movf	___flmul@temp,w
 18098  04DB  07E1               	addwf	___flmul@grs,f
 18099  04DC  086B               	movf	___flmul@temp+1,w
 18100  04DD  3DE2               	addwfc	___flmul@grs+1,f
 18101  04DE  3000               	movlw	0
 18102  04DF  3DE3               	addwfc	___flmul@grs+2,f
 18103  04E0  3DE4               	addwfc	___flmul@grs+3,f
 18104  04E1  0853               	movf	___flmul@b+1,w
 18105  04E2  00DA               	movwf	??___flmul
 18106  04E3  085A               	movf	??___flmul,w
 18107  04E4  00F2               	movwf	__Umul8_16@multiplicand
 18108  04E5  0858               	movf	___flmul@a+2,w
 18109  04E6  31AC  2417  3183   	fcall	__Umul8_16
 18110  04E9  0873               	movf	?__Umul8_16+1,w
 18111  04EA  0020               	movlb	0	; select bank0
 18112  04EB  00EB               	movwf	___flmul@temp+1
 18113  04EC  0872               	movf	?__Umul8_16,w
 18114  04ED  00EA               	movwf	___flmul@temp
 18115  04EE  086A               	movf	___flmul@temp,w
 18116  04EF  07E6               	addwf	___flmul@prod,f
 18117  04F0  086B               	movf	___flmul@temp+1,w
 18118  04F1  3DE7               	addwfc	___flmul@prod+1,f
 18119  04F2  3000               	movlw	0
 18120  04F3  3DE8               	addwfc	___flmul@prod+2,f
 18121  04F4  3DE9               	addwfc	___flmul@prod+3,f
 18122  04F5  0854               	movf	___flmul@b+2,w
 18123  04F6  00DA               	movwf	??___flmul
 18124  04F7  085A               	movf	??___flmul,w
 18125  04F8  00F2               	movwf	__Umul8_16@multiplicand
 18126  04F9  0857               	movf	___flmul@a+1,w
 18127  04FA  31AC  2417  3183   	fcall	__Umul8_16
 18128  04FD  0873               	movf	?__Umul8_16+1,w
 18129  04FE  0020               	movlb	0	; select bank0
 18130  04FF  00EB               	movwf	___flmul@temp+1
 18131  0500  0872               	movf	?__Umul8_16,w
 18132  0501  00EA               	movwf	___flmul@temp
 18133  0502  086A               	movf	___flmul@temp,w
 18134  0503  07E6               	addwf	___flmul@prod,f
 18135  0504  086B               	movf	___flmul@temp+1,w
 18136  0505  3DE7               	addwfc	___flmul@prod+1,f
 18137  0506  3000               	movlw	0
 18138  0507  3DE8               	addwfc	___flmul@prod+2,f
 18139  0508  3DE9               	addwfc	___flmul@prod+3,f
 18140  0509  0854               	movf	___flmul@b+2,w
 18141  050A  00DA               	movwf	??___flmul
 18142  050B  085A               	movf	??___flmul,w
 18143  050C  00F2               	movwf	__Umul8_16@multiplicand
 18144  050D  0858               	movf	___flmul@a+2,w
 18145  050E  31AC  2417  3183   	fcall	__Umul8_16
 18146  0511  0873               	movf	?__Umul8_16+1,w
 18147  0512  0020               	movlb	0	; select bank0
 18148  0513  00EB               	movwf	___flmul@temp+1
 18149  0514  0872               	movf	?__Umul8_16,w
 18150  0515  00EA               	movwf	___flmul@temp
 18151  0516  086A               	movf	___flmul@temp,w
 18152  0517  00DA               	movwf	??___flmul
 18153  0518  086B               	movf	___flmul@temp+1,w
 18154  0519  00DB               	movwf	??___flmul+1
 18155  051A  01DC               	clrf	??___flmul+2
 18156  051B  01DD               	clrf	??___flmul+3
 18157  051C  3008               	movlw	8
 18158  051D                     u9165:	
 18159  051D  35DA               	lslf	??___flmul,f
 18160  051E  0DDB               	rlf	??___flmul+1,f
 18161  051F  0DDC               	rlf	??___flmul+2,f
 18162  0520  0DDD               	rlf	??___flmul+3,f
 18163  0521  0B89               	decfsz	9,f
 18164  0522  2D1D               	goto	u9165
 18165  0523  085A               	movf	??___flmul,w
 18166  0524  07E6               	addwf	___flmul@prod,f
 18167  0525  085B               	movf	??___flmul+1,w
 18168  0526  3DE7               	addwfc	___flmul@prod+1,f
 18169  0527  085C               	movf	??___flmul+2,w
 18170  0528  3DE8               	addwfc	___flmul@prod+2,f
 18171  0529  085D               	movf	??___flmul+3,w
 18172  052A  3DE9               	addwfc	___flmul@prod+3,f
 18173  052B  0861               	movf	___flmul@grs,w
 18174  052C  00DA               	movwf	??___flmul
 18175  052D  0862               	movf	___flmul@grs+1,w
 18176  052E  00DB               	movwf	??___flmul+1
 18177  052F  0863               	movf	___flmul@grs+2,w
 18178  0530  00DC               	movwf	??___flmul+2
 18179  0531  0864               	movf	___flmul@grs+3,w
 18180  0532  00DD               	movwf	??___flmul+3
 18181  0533  3018               	movlw	24
 18182  0534                     u9175:	
 18183  0534  36DD               	lsrf	??___flmul+3,f
 18184  0535  0CDC               	rrf	??___flmul+2,f
 18185  0536  0CDB               	rrf	??___flmul+1,f
 18186  0537  0CDA               	rrf	??___flmul,f
 18187  0538  0B89               	decfsz	9,f
 18188  0539  2D34               	goto	u9175
 18189  053A  085A               	movf	??___flmul,w
 18190  053B  07E6               	addwf	___flmul@prod,f
 18191  053C  085B               	movf	??___flmul+1,w
 18192  053D  3DE7               	addwfc	___flmul@prod+1,f
 18193  053E  085C               	movf	??___flmul+2,w
 18194  053F  3DE8               	addwfc	___flmul@prod+2,f
 18195  0540  085D               	movf	??___flmul+3,w
 18196  0541  3DE9               	addwfc	___flmul@prod+3,f
 18197  0542  3008               	movlw	8
 18198  0543                     u9185:	
 18199  0543  35E1               	lslf	___flmul@grs,f
 18200  0544  0DE2               	rlf	___flmul@grs+1,f
 18201  0545  0DE3               	rlf	___flmul@grs+2,f
 18202  0546  0DE4               	rlf	___flmul@grs+3,f
 18203  0547  0B89               	decfsz	9,f
 18204  0548  2D43               	goto	u9185
 18205  0549  0865               	movf	___flmul@bexp,w
 18206  054A  0760               	addwf	___flmul@aexp,w
 18207  054B  00DA               	movwf	??___flmul
 18208  054C  01DB               	clrf	??___flmul+1
 18209  054D  0DDB               	rlf	??___flmul+1,f
 18210  054E  085A               	movf	??___flmul,w
 18211  054F  3E82               	addlw	130
 18212  0550  00EA               	movwf	___flmul@temp
 18213  0551  30FF               	movlw	255
 18214  0552  3D5B               	addwfc	??___flmul+1,w
 18215  0553  00EB               	movwf	___flmul@temp+1
 18216  0554                     l6998:	
 18217  0554  1BE8               	btfsc	___flmul@prod+2,7
 18218  0555  2D6B               	goto	l7000
 18219  0556  3001               	movlw	1
 18220  0557                     u9195:	
 18221  0557  35E6               	lslf	___flmul@prod,f
 18222  0558  0DE7               	rlf	___flmul@prod+1,f
 18223  0559  0DE8               	rlf	___flmul@prod+2,f
 18224  055A  0DE9               	rlf	___flmul@prod+3,f
 18225  055B  0B89               	decfsz	9,f
 18226  055C  2D57               	goto	u9195
 18227  055D  1BE4               	btfsc	___flmul@grs+3,7
 18228  055E  1466               	bsf	___flmul@prod,0
 18229  055F  3001               	movlw	1
 18230  0560                     u9215:	
 18231  0560  35E1               	lslf	___flmul@grs,f
 18232  0561  0DE2               	rlf	___flmul@grs+1,f
 18233  0562  0DE3               	rlf	___flmul@grs+2,f
 18234  0563  0DE4               	rlf	___flmul@grs+3,f
 18235  0564  0B89               	decfsz	9,f
 18236  0565  2D60               	goto	u9215
 18237  0566  30FF               	movlw	255
 18238  0567  07EA               	addwf	___flmul@temp,f
 18239  0568  30FF               	movlw	255
 18240  0569  3DEB               	addwfc	___flmul@temp+1,f
 18241  056A  2D54               	goto	l6998
 18242  056B                     l7000:	
 18243  056B  01E0               	clrf	___flmul@aexp
 18244  056C  1FE4               	btfss	___flmul@grs+3,7
 18245  056D  2D84               	goto	l7010
 18246  056E  30FF               	movlw	255
 18247  056F  0561               	andwf	___flmul@grs,w
 18248  0570  00DA               	movwf	??___flmul
 18249  0571  30FF               	movlw	255
 18250  0572  0562               	andwf	___flmul@grs+1,w
 18251  0573  00DB               	movwf	??___flmul+1
 18252  0574  30FF               	movlw	255
 18253  0575  0563               	andwf	___flmul@grs+2,w
 18254  0576  00DC               	movwf	??___flmul+2
 18255  0577  307F               	movlw	127
 18256  0578  0564               	andwf	___flmul@grs+3,w
 18257  0579  00DD               	movwf	??___flmul+3
 18258  057A  085D               	movf	??___flmul+3,w
 18259  057B  045C               	iorwf	??___flmul+2,w
 18260  057C  045B               	iorwf	??___flmul+1,w
 18261  057D  045A               	iorwf	??___flmul,w
 18262  057E  1D03               	btfss	3,2
 18263  057F  2D82               	goto	l7008
 18264  0580  1C66               	btfss	___flmul@prod,0
 18265  0581  2D84               	goto	l7010
 18266  0582                     l7008:	
 18267  0582  01E0               	clrf	___flmul@aexp
 18268  0583  0AE0               	incf	___flmul@aexp,f
 18269  0584                     l7010:	
 18270  0584  0860               	movf	___flmul@aexp,w
 18271  0585  1903               	btfsc	3,2
 18272  0586  2DAD               	goto	l7020
 18273  0587  3001               	movlw	1
 18274  0588  07E6               	addwf	___flmul@prod,f
 18275  0589  3000               	movlw	0
 18276  058A  3DE7               	addwfc	___flmul@prod+1,f
 18277  058B  3000               	movlw	0
 18278  058C  3DE8               	addwfc	___flmul@prod+2,f
 18279  058D  3000               	movlw	0
 18280  058E  3DE9               	addwfc	___flmul@prod+3,f
 18281  058F  1C69               	btfss	___flmul@prod+3,0
 18282  0590  2DAD               	goto	l7020
 18283  0591  0866               	movf	___flmul@prod,w
 18284  0592  00DA               	movwf	??___flmul
 18285  0593  0867               	movf	___flmul@prod+1,w
 18286  0594  00DB               	movwf	??___flmul+1
 18287  0595  0868               	movf	___flmul@prod+2,w
 18288  0596  00DC               	movwf	??___flmul+2
 18289  0597  0869               	movf	___flmul@prod+3,w
 18290  0598  00DD               	movwf	??___flmul+3
 18291  0599  3001               	movlw	1
 18292  059A  00DE               	movwf	??___flmul+4
 18293  059B                     u9285:	
 18294  059B  37DD               	asrf	??___flmul+3,f
 18295  059C  0CDC               	rrf	??___flmul+2,f
 18296  059D  0CDB               	rrf	??___flmul+1,f
 18297  059E  0CDA               	rrf	??___flmul,f
 18298  059F  0BDE               	decfsz	??___flmul+4,f
 18299  05A0  2D9B               	goto	u9285
 18300  05A1  085D               	movf	??___flmul+3,w
 18301  05A2  00E9               	movwf	___flmul@prod+3
 18302  05A3  085C               	movf	??___flmul+2,w
 18303  05A4  00E8               	movwf	___flmul@prod+2
 18304  05A5  085B               	movf	??___flmul+1,w
 18305  05A6  00E7               	movwf	___flmul@prod+1
 18306  05A7  085A               	movf	??___flmul,w
 18307  05A8  00E6               	movwf	___flmul@prod
 18308  05A9  3001               	movlw	1
 18309  05AA  07EA               	addwf	___flmul@temp,f
 18310  05AB  3000               	movlw	0
 18311  05AC  3DEB               	addwfc	___flmul@temp+1,f
 18312  05AD                     l7020:	
 18313  05AD  086B               	movf	___flmul@temp+1,w
 18314  05AE  3A80               	xorlw	128
 18315  05AF  00DA               	movwf	??___flmul
 18316  05B0  3080               	movlw	128
 18317  05B1  025A               	subwf	??___flmul,w
 18318  05B2  1D03               	skipz
 18319  05B3  2DB6               	goto	u9295
 18320  05B4  30FF               	movlw	255
 18321  05B5  026A               	subwf	___flmul@temp,w
 18322  05B6                     u9295:	
 18323  05B6  1C03               	skipc
 18324  05B7  2DC2               	goto	l7024
 18325  05B8  307F               	movlw	127
 18326  05B9  0020               	movlb	0	; select bank0
 18327  05BA  00E9               	movwf	___flmul@prod+3
 18328  05BB  3080               	movlw	128
 18329  05BC  00E8               	movwf	___flmul@prod+2
 18330  05BD  3000               	movlw	0
 18331  05BE  00E7               	movwf	___flmul@prod+1
 18332  05BF  3000               	movlw	0
 18333  05C0  00E6               	movwf	___flmul@prod
 18334  05C1  2DEC               	goto	l1406
 18335  05C2                     l7024:	
 18336  05C2  0020               	movlb	0	; select bank0
 18337  05C3  086B               	movf	___flmul@temp+1,w
 18338  05C4  3A80               	xorlw	128
 18339  05C5  00DA               	movwf	??___flmul
 18340  05C6  3080               	movlw	128
 18341  05C7  025A               	subwf	??___flmul,w
 18342  05C8  1D03               	skipz
 18343  05C9  2DCC               	goto	u9305
 18344  05CA  3001               	movlw	1
 18345  05CB  026A               	subwf	___flmul@temp,w
 18346  05CC                     u9305:	
 18347  05CC  1803               	skipnc
 18348  05CD  2DD9               	goto	l7030
 18349  05CE  3000               	movlw	0
 18350  05CF  0020               	movlb	0	; select bank0
 18351  05D0  00E9               	movwf	___flmul@prod+3
 18352  05D1  3000               	movlw	0
 18353  05D2  00E8               	movwf	___flmul@prod+2
 18354  05D3  3000               	movlw	0
 18355  05D4  00E7               	movwf	___flmul@prod+1
 18356  05D5  3000               	movlw	0
 18357  05D6  00E6               	movwf	___flmul@prod
 18358  05D7  01DF               	clrf	___flmul@sign
 18359  05D8  2DEC               	goto	l1406
 18360  05D9                     l7030:	
 18361  05D9  0020               	movlb	0	; select bank0
 18362  05DA  086A               	movf	___flmul@temp,w
 18363  05DB  00DA               	movwf	??___flmul
 18364  05DC  085A               	movf	??___flmul,w
 18365  05DD  00E5               	movwf	___flmul@bexp
 18366  05DE  30FF               	movlw	255
 18367  05DF  05E6               	andwf	___flmul@prod,f
 18368  05E0  30FF               	movlw	255
 18369  05E1  05E7               	andwf	___flmul@prod+1,f
 18370  05E2  307F               	movlw	127
 18371  05E3  05E8               	andwf	___flmul@prod+2,f
 18372  05E4  3000               	movlw	0
 18373  05E5  05E9               	andwf	___flmul@prod+3,f
 18374  05E6  1865               	btfsc	___flmul@bexp,0
 18375  05E7  17E8               	bsf	___flmul@prod+2,7
 18376  05E8  3665               	lsrf	___flmul@bexp,w
 18377  05E9  00DA               	movwf	??___flmul
 18378  05EA  085A               	movf	??___flmul,w
 18379  05EB  00E9               	movwf	___flmul@prod+3
 18380  05EC                     l1406:	
 18381  05EC  085F               	movf	___flmul@sign,w
 18382  05ED  00DA               	movwf	??___flmul
 18383  05EE  085A               	movf	??___flmul,w
 18384  05EF  04E9               	iorwf	___flmul@prod+3,f
 18385  05F0  0869               	movf	___flmul@prod+3,w
 18386  05F1  00D5               	movwf	?___flmul+3
 18387  05F2  0868               	movf	___flmul@prod+2,w
 18388  05F3  00D4               	movwf	?___flmul+2
 18389  05F4  0867               	movf	___flmul@prod+1,w
 18390  05F5  00D3               	movwf	?___flmul+1
 18391  05F6  0866               	movf	___flmul@prod,w
 18392  05F7  00D2               	movwf	?___flmul
 18393  05F8  0008               	return
 18394  05F9                     __end_of___flmul:	
 18395                           
 18396                           	psect	text52
 18397  2C17                     __ptext52:	
 18398 ;; *************** function __Umul8_16 *****************
 18399 ;; Defined at:
 18400 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 18401 ;; Parameters:    Size  Location     Type
 18402 ;;  multiplier      1    wreg     unsigned char 
 18403 ;;  multiplicand    1    2[COMMON] unsigned char 
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;  multiplier      1    4[BANK0 ] unsigned char 
 18406 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 18407 ;;  product         2    0[BANK0 ] unsigned int 
 18408 ;; Return value:  Size  Location     Type
 18409 ;;                  2    2[COMMON] unsigned int 
 18410 ;; Registers used:
 18411 ;;		wreg, status,2, status,0
 18412 ;; Tracked objects:
 18413 ;;		On entry : 0/0
 18414 ;;		On exit  : 0/0
 18415 ;;		Unchanged: 0/0
 18416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18417 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18418 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18419 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18420 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18421 ;;Total ram usage:        9 bytes
 18422 ;; Hardware stack levels used:    1
 18423 ;; Hardware stack levels required when called:    2
 18424 ;; This function calls:
 18425 ;;		Nothing
 18426 ;; This function is called by:
 18427 ;;		___flmul
 18428 ;; This function uses a non-reentrant model
 18429 ;;
 18430                           
 18431                           
 18432                           ;psect for function __Umul8_16
 18433  2C17                     __Umul8_16:	
 18434                           
 18435                           ;incstack = 0
 18436                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 18437                           ;__Umul8_16@multiplier stored from wreg
 18438  2C17  0020               	movlb	0	; select bank0
 18439  2C18  00A4               	movwf	__Umul8_16@multiplier
 18440  2C19  01A0               	clrf	__Umul8_16@product
 18441  2C1A  01A1               	clrf	__Umul8_16@product+1
 18442  2C1B  0872               	movf	__Umul8_16@multiplicand,w
 18443  2C1C  00F4               	movwf	??__Umul8_16
 18444  2C1D  01F5               	clrf	??__Umul8_16+1
 18445  2C1E  0874               	movf	??__Umul8_16,w
 18446  2C1F  00A2               	movwf	__Umul8_16@word_mpld
 18447  2C20  0875               	movf	??__Umul8_16+1,w
 18448  2C21  00A3               	movwf	__Umul8_16@word_mpld+1
 18449  2C22                     l6616:	
 18450  2C22  1C24               	btfss	__Umul8_16@multiplier,0
 18451  2C23  2C28               	goto	l1432
 18452  2C24  0822               	movf	__Umul8_16@word_mpld,w
 18453  2C25  07A0               	addwf	__Umul8_16@product,f
 18454  2C26  0823               	movf	__Umul8_16@word_mpld+1,w
 18455  2C27  3DA1               	addwfc	__Umul8_16@product+1,f
 18456  2C28                     l1432:	
 18457  2C28  3001               	movlw	1
 18458  2C29                     u8425:	
 18459  2C29  35A2               	lslf	__Umul8_16@word_mpld,f
 18460  2C2A  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 18461  2C2B  0B89               	decfsz	9,f
 18462  2C2C  2C29               	goto	u8425
 18463  2C2D  1003               	clrc
 18464  2C2E  0CA4               	rrf	__Umul8_16@multiplier,f
 18465  2C2F  0824               	movf	__Umul8_16@multiplier,w
 18466  2C30  1D03               	btfss	3,2
 18467  2C31  2C22               	goto	l6616
 18468  2C32  0821               	movf	__Umul8_16@product+1,w
 18469  2C33  00F3               	movwf	?__Umul8_16+1
 18470  2C34  0820               	movf	__Umul8_16@product,w
 18471  2C35  00F2               	movwf	?__Umul8_16
 18472  2C36  0008               	return
 18473  2C37                     __end_of__Umul8_16:	
 18474                           
 18475                           	psect	text53
 18476  2F57                     __ptext53:	
 18477 ;; *************** function _adcRead *****************
 18478 ;; Defined at:
 18479 ;;		line 50 in file "adc.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;  ch              1    wreg     unsigned char 
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;  ch              1    7[BANK0 ] unsigned char 
 18484 ;;  total           2   12[BANK0 ] int 
 18485 ;;  ansLow          2   10[BANK0 ] int 
 18486 ;;  ansHigh         2    8[BANK0 ] int 
 18487 ;; Return value:  Size  Location     Type
 18488 ;;                  2    2[COMMON] int 
 18489 ;; Registers used:
 18490 ;;		wreg, status,2, status,0
 18491 ;; Tracked objects:
 18492 ;;		On entry : 0/0
 18493 ;;		On exit  : 0/0
 18494 ;;		Unchanged: 0/0
 18495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18499 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18500 ;;Total ram usage:       16 bytes
 18501 ;; Hardware stack levels used:    1
 18502 ;; Hardware stack levels required when called:    2
 18503 ;; This function calls:
 18504 ;;		Nothing
 18505 ;; This function is called by:
 18506 ;;		_getCurrent
 18507 ;;		_getTemps
 18508 ;; This function uses a non-reentrant model
 18509 ;;
 18510                           
 18511                           
 18512                           ;psect for function _adcRead
 18513  2F57                     _adcRead:	
 18514                           
 18515                           ;incstack = 0
 18516                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 18517                           ;adcRead@ch stored from wreg
 18518  2F57  0020               	movlb	0	; select bank0
 18519  2F58  00A7               	movwf	adcRead@ch
 18520                           
 18521                           ;adc.c: 51: ADCON0bits.CHS = ch;
 18522  2F59  0827               	movf	adcRead@ch,w
 18523  2F5A  00A0               	movwf	??_adcRead
 18524  2F5B  0DA0               	rlf	??_adcRead,f
 18525  2F5C  0DA0               	rlf	??_adcRead,f
 18526  2F5D  0021               	movlb	1	; select bank1
 18527  2F5E  081D               	movf	29,w	;volatile
 18528  2F5F  0020               	movlb	0	; select bank0
 18529  2F60  0620               	xorwf	??_adcRead,w
 18530  2F61  3983               	andlw	-125
 18531  2F62  0620               	xorwf	??_adcRead,w
 18532  2F63  0021               	movlb	1	; select bank1
 18533  2F64  009D               	movwf	29	;volatile
 18534                           
 18535                           ;adc.c: 52: ADCON0bits.ADON = 1;
 18536  2F65  141D               	bsf	29,0	;volatile
 18537                           
 18538                           ;adc.c: 54: _delay((unsigned long)((100)*(32000000/4000000.0)));
 18539  2F66  30A0               	movlw	160
 18540  2F67                     u11787:	
 18541  2F67  3200               	nop2
 18542  2F68  0B89               	decfsz	9,f
 18543  2F69  2F67               	goto	u11787
 18544                           
 18545                           ;adc.c: 55: ADCON0bits.GO = 1;
 18546  2F6A  0021               	movlb	1	; select bank1
 18547  2F6B  149D               	bsf	29,1	;volatile
 18548  2F6C                     l190:	
 18549                           ;adc.c: 57: while(ADCON0bits.DONE == 1);
 18550                           
 18551  2F6C  189D               	btfsc	29,1	;volatile
 18552  2F6D  2F6C               	goto	l190
 18553                           
 18554                           ;adc.c: 59: int ansHigh = ADRESH;
 18555  2F6E  081C               	movf	28,w	;volatile
 18556  2F6F  0020               	movlb	0	; select bank0
 18557  2F70  00A0               	movwf	??_adcRead
 18558  2F71  01A1               	clrf	??_adcRead+1
 18559  2F72  0820               	movf	??_adcRead,w
 18560  2F73  00A8               	movwf	adcRead@ansHigh
 18561  2F74  0821               	movf	??_adcRead+1,w
 18562  2F75  00A9               	movwf	adcRead@ansHigh+1
 18563                           
 18564                           ;adc.c: 60: int ansLow = ADRESL;
 18565  2F76  0021               	movlb	1	; select bank1
 18566  2F77  081B               	movf	27,w	;volatile
 18567  2F78  0020               	movlb	0	; select bank0
 18568  2F79  00A0               	movwf	??_adcRead
 18569  2F7A  01A1               	clrf	??_adcRead+1
 18570  2F7B  0820               	movf	??_adcRead,w
 18571  2F7C  00AA               	movwf	adcRead@ansLow
 18572  2F7D  0821               	movf	??_adcRead+1,w
 18573  2F7E  00AB               	movwf	adcRead@ansLow+1
 18574                           
 18575                           ;adc.c: 62: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 18576  2F7F  082B               	movf	adcRead@ansLow+1,w
 18577  2F80  00A1               	movwf	??_adcRead+1
 18578  2F81  082A               	movf	adcRead@ansLow,w
 18579  2F82  00A0               	movwf	??_adcRead
 18580  2F83  3004               	movlw	4
 18581  2F84  00A2               	movwf	??_adcRead+2
 18582  2F85                     u10855:	
 18583  2F85  0D21               	rlf	??_adcRead+1,w
 18584  2F86  0CA1               	rrf	??_adcRead+1,f
 18585  2F87  0CA0               	rrf	??_adcRead,f
 18586  2F88  0BA2               	decfsz	??_adcRead+2,f
 18587  2F89  2F85               	goto	u10855
 18588  2F8A  30FF               	movlw	255
 18589  2F8B  0520               	andwf	??_adcRead,w
 18590  2F8C  00A3               	movwf	??_adcRead+3
 18591  2F8D  300F               	movlw	15
 18592  2F8E  0521               	andwf	??_adcRead+1,w
 18593  2F8F  00A4               	movwf	??_adcRead+4
 18594  2F90  0829               	movf	adcRead@ansHigh+1,w
 18595  2F91  00A6               	movwf	??_adcRead+6
 18596  2F92  0828               	movf	adcRead@ansHigh,w
 18597  2F93  00A5               	movwf	??_adcRead+5
 18598  2F94  0EA5               	swapf	??_adcRead+5,f
 18599  2F95  0EA6               	swapf	??_adcRead+6,f
 18600  2F96  30F0               	movlw	240
 18601  2F97  05A6               	andwf	??_adcRead+6,f
 18602  2F98  0825               	movf	??_adcRead+5,w
 18603  2F99  390F               	andlw	15
 18604  2F9A  04A6               	iorwf	??_adcRead+6,f
 18605  2F9B  30F0               	movlw	240
 18606  2F9C  05A5               	andwf	??_adcRead+5,f
 18607  2F9D  0823               	movf	??_adcRead+3,w
 18608  2F9E  0425               	iorwf	??_adcRead+5,w
 18609  2F9F  00AC               	movwf	adcRead@total
 18610  2FA0  0824               	movf	??_adcRead+4,w
 18611  2FA1  0426               	iorwf	??_adcRead+6,w
 18612  2FA2  00AD               	movwf	adcRead@total+1
 18613                           
 18614                           ;adc.c: 63: ADCON0bits.ADON = 0;
 18615  2FA3  0021               	movlb	1	; select bank1
 18616  2FA4  101D               	bcf	29,0	;volatile
 18617                           
 18618                           ;adc.c: 64: return total;
 18619  2FA5  0020               	movlb	0	; select bank0
 18620  2FA6  082D               	movf	adcRead@total+1,w
 18621  2FA7  00F3               	movwf	?_adcRead+1
 18622  2FA8  082C               	movf	adcRead@total,w
 18623  2FA9  00F2               	movwf	?_adcRead
 18624  2FAA  0008               	return
 18625  2FAB                     __end_of_adcRead:	
 18626                           
 18627                           	psect	text54
 18628  21C6                     __ptext54:	
 18629 ;; *************** function _avgBuff *****************
 18630 ;; Defined at:
 18631 ;;		line 68 in file "adc.c"
 18632 ;; Parameters:    Size  Location     Type
 18633 ;;  buff            1    wreg     PTR float 
 18634 ;;		 -> main@currentBuff(80), 
 18635 ;;  size            2   53[BANK1 ] int 
 18636 ;; Auto vars:     Size  Location     Type
 18637 ;;  buff            1   59[BANK1 ] PTR float 
 18638 ;;		 -> main@currentBuff(80), 
 18639 ;;  total           4   60[BANK1 ] float 
 18640 ;;  inc             2   64[BANK1 ] int 
 18641 ;; Return value:  Size  Location     Type
 18642 ;;                  4   53[BANK1 ] float 
 18643 ;; Registers used:
 18644 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18645 ;; Tracked objects:
 18646 ;;		On entry : 0/0
 18647 ;;		On exit  : 0/0
 18648 ;;		Unchanged: 0/0
 18649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18650 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18651 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18652 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18653 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18654 ;;Total ram usage:       13 bytes
 18655 ;; Hardware stack levels used:    1
 18656 ;; Hardware stack levels required when called:    3
 18657 ;; This function calls:
 18658 ;;		___fladd
 18659 ;;		___fldiv
 18660 ;;		___xxtofl
 18661 ;; This function is called by:
 18662 ;;		_main
 18663 ;; This function uses a non-reentrant model
 18664 ;;
 18665                           
 18666                           
 18667                           ;psect for function _avgBuff
 18668  21C6                     _avgBuff:	
 18669                           
 18670                           ;incstack = 0
 18671                           ; Regs used in _avgBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18672                           ;avgBuff@buff stored from wreg
 18673  21C6  0021               	movlb	1	; select bank1
 18674  21C7  00DB               	movwf	avgBuff@buff^(0+128)
 18675                           
 18676                           ;adc.c: 69: int inc = 0;
 18677  21C8  01E0               	clrf	avgBuff@inc^(0+128)
 18678  21C9  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 18679                           
 18680                           ;adc.c: 70: float total = 0;
 18681  21CA  3000               	movlw	0
 18682  21CB  00DF               	movwf	(avgBuff@total+3)^(0+128)
 18683  21CC  3000               	movlw	0
 18684  21CD  00DE               	movwf	(avgBuff@total+2)^(0+128)
 18685  21CE  3000               	movlw	0
 18686  21CF  00DD               	movwf	(avgBuff@total+1)^(0+128)
 18687  21D0  3000               	movlw	0
 18688  21D1  00DC               	movwf	avgBuff@total^(0+128)
 18689                           
 18690                           ;adc.c: 71: for(inc = 0; inc < size; inc++){
 18691  21D2  01E0               	clrf	avgBuff@inc^(0+128)
 18692  21D3  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 18693  21D4                     l8090:	
 18694  21D4  0861               	movf	(avgBuff@inc+1)^(0+128),w
 18695  21D5  3A80               	xorlw	128
 18696  21D6  00D9               	movwf	??_avgBuff^(0+128)
 18697  21D7  0856               	movf	(avgBuff@size+1)^(0+128),w
 18698  21D8  3A80               	xorlw	128
 18699  21D9  0259               	subwf	??_avgBuff^(0+128),w
 18700  21DA  1D03               	skipz
 18701  21DB  29DE               	goto	u11305
 18702  21DC  0855               	movf	avgBuff@size^(0+128),w
 18703  21DD  0260               	subwf	avgBuff@inc^(0+128),w
 18704  21DE                     u11305:	
 18705  21DE  1803               	btfsc	3,0
 18706  21DF  2A10               	goto	l8092
 18707                           
 18708                           ;adc.c: 72: total += buff[inc];
 18709  21E0  0021               	movlb	1	; select bank1
 18710  21E1  0860               	movf	avgBuff@inc^(0+128),w
 18711  21E2  00D9               	movwf	??_avgBuff^(0+128)
 18712  21E3  3001               	movlw	1
 18713  21E4                     u11295:	
 18714  21E4  35D9               	lslf	??_avgBuff^(0+128),f
 18715  21E5  3EFF               	addlw	-1
 18716  21E6  1D03               	skipz
 18717  21E7  29E4               	goto	u11295
 18718  21E8  3559               	lslf	??_avgBuff^(0+128),w
 18719  21E9  075B               	addwf	avgBuff@buff^(0+128),w
 18720  21EA  00DA               	movwf	(??_avgBuff+1)^(0+128)
 18721  21EB  085A               	movf	(??_avgBuff+1)^(0+128),w
 18722  21EC  0086               	movwf	6
 18723  21ED  3001               	movlw	1	; select bank2/3
 18724  21EE  0087               	movwf	7
 18725  21EF  3F40               	moviw [0]fsr1
 18726  21F0  00BD               	movwf	___fladd@b^(0+128)
 18727  21F1  3F41               	moviw [1]fsr1
 18728  21F2  00BE               	movwf	(___fladd@b+1)^(0+128)
 18729  21F3  3F42               	moviw [2]fsr1
 18730  21F4  00BF               	movwf	(___fladd@b+2)^(0+128)
 18731  21F5  3F43               	moviw [3]fsr1
 18732  21F6  00C0               	movwf	(___fladd@b+3)^(0+128)
 18733  21F7  085F               	movf	(avgBuff@total+3)^(0+128),w
 18734  21F8  00C4               	movwf	(___fladd@a+3)^(0+128)
 18735  21F9  085E               	movf	(avgBuff@total+2)^(0+128),w
 18736  21FA  00C3               	movwf	(___fladd@a+2)^(0+128)
 18737  21FB  085D               	movf	(avgBuff@total+1)^(0+128),w
 18738  21FC  00C2               	movwf	(___fladd@a+1)^(0+128)
 18739  21FD  085C               	movf	avgBuff@total^(0+128),w
 18740  21FE  00C1               	movwf	___fladd@a^(0+128)
 18741  21FF  3185  25F9  31A1   	fcall	___fladd
 18742  2202  0021               	movlb	1	; select bank1
 18743  2203  0840               	movf	(?___fladd+3)^(0+128),w
 18744  2204  00DF               	movwf	(avgBuff@total+3)^(0+128)
 18745  2205  083F               	movf	(?___fladd+2)^(0+128),w
 18746  2206  00DE               	movwf	(avgBuff@total+2)^(0+128)
 18747  2207  083E               	movf	(?___fladd+1)^(0+128),w
 18748  2208  00DD               	movwf	(avgBuff@total+1)^(0+128)
 18749  2209  083D               	movf	?___fladd^(0+128),w
 18750  220A  00DC               	movwf	avgBuff@total^(0+128)
 18751  220B  3001               	movlw	1
 18752  220C  07E0               	addwf	avgBuff@inc^(0+128),f
 18753  220D  3000               	movlw	0
 18754  220E  3DE1               	addwfc	(avgBuff@inc+1)^(0+128),f
 18755  220F  29D4               	goto	l8090
 18756  2210                     l8092:	
 18757                           
 18758                           ;adc.c: 73: }
 18759                           ;adc.c: 75: return ((float) total)/((float) size);
 18760  2210  0021               	movlb	1	; select bank1
 18761  2211  0855               	movf	avgBuff@size^(0+128),w
 18762  2212  0020               	movlb	0	; select bank0
 18763  2213  00AE               	movwf	___xxtofl@val
 18764  2214  0021               	movlb	1	; select bank1
 18765  2215  0856               	movf	(avgBuff@size+1)^(0+128),w
 18766  2216  0020               	movlb	0	; select bank0
 18767  2217  00AF               	movwf	___xxtofl@val+1
 18768  2218  0D89               	rlf	9,f
 18769  2219  3B89               	subwfb	9,f
 18770  221A  0989               	comf	9,f
 18771  221B  00B0               	movwf	___xxtofl@val+2
 18772  221C  00B1               	movwf	___xxtofl@val+3
 18773  221D  3001               	movlw	1
 18774  221E  31A3  235D  31A1   	fcall	___xxtofl
 18775  2221  0020               	movlb	0	; select bank0
 18776  2222  0831               	movf	?___xxtofl+3,w
 18777  2223  00BB               	movwf	___fldiv@a+3
 18778  2224  0830               	movf	?___xxtofl+2,w
 18779  2225  00BA               	movwf	___fldiv@a+2
 18780  2226  082F               	movf	?___xxtofl+1,w
 18781  2227  00B9               	movwf	___fldiv@a+1
 18782  2228  082E               	movf	?___xxtofl,w
 18783  2229  00B8               	movwf	___fldiv@a
 18784  222A  0021               	movlb	1	; select bank1
 18785  222B  085F               	movf	(avgBuff@total+3)^(0+128),w
 18786  222C  0020               	movlb	0	; select bank0
 18787  222D  00BF               	movwf	___fldiv@b+3
 18788  222E  0021               	movlb	1	; select bank1
 18789  222F  085E               	movf	(avgBuff@total+2)^(0+128),w
 18790  2230  0020               	movlb	0	; select bank0
 18791  2231  00BE               	movwf	___fldiv@b+2
 18792  2232  0021               	movlb	1	; select bank1
 18793  2233  085D               	movf	(avgBuff@total+1)^(0+128),w
 18794  2234  0020               	movlb	0	; select bank0
 18795  2235  00BD               	movwf	___fldiv@b+1
 18796  2236  0021               	movlb	1	; select bank1
 18797  2237  085C               	movf	avgBuff@total^(0+128),w
 18798  2238  0020               	movlb	0	; select bank0
 18799  2239  00BC               	movwf	___fldiv@b
 18800  223A  3194  2468         	fcall	___fldiv
 18801  223C  0020               	movlb	0	; select bank0
 18802  223D  083B               	movf	?___fldiv+3,w
 18803  223E  0021               	movlb	1	; select bank1
 18804  223F  00D8               	movwf	(?_avgBuff+3)^(0+128)
 18805  2240  0020               	movlb	0	; select bank0
 18806  2241  083A               	movf	?___fldiv+2,w
 18807  2242  0021               	movlb	1	; select bank1
 18808  2243  00D7               	movwf	(?_avgBuff+2)^(0+128)
 18809  2244  0020               	movlb	0	; select bank0
 18810  2245  0839               	movf	?___fldiv+1,w
 18811  2246  0021               	movlb	1	; select bank1
 18812  2247  00D6               	movwf	(?_avgBuff+1)^(0+128)
 18813  2248  0020               	movlb	0	; select bank0
 18814  2249  0838               	movf	?___fldiv,w
 18815  224A  0021               	movlb	1	; select bank1
 18816  224B  00D5               	movwf	?_avgBuff^(0+128)
 18817  224C  0008               	return
 18818  224D                     __end_of_avgBuff:	
 18819                           
 18820                           	psect	text55
 18821  235D                     __ptext55:	
 18822 ;; *************** function ___xxtofl *****************
 18823 ;; Defined at:
 18824 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 18825 ;; Parameters:    Size  Location     Type
 18826 ;;  sign            1    wreg     unsigned char 
 18827 ;;  val             4   14[BANK0 ] long 
 18828 ;; Auto vars:     Size  Location     Type
 18829 ;;  sign            1   18[BANK0 ] unsigned char 
 18830 ;;  arg             4   20[BANK0 ] unsigned long 
 18831 ;;  exp             1   19[BANK0 ] unsigned char 
 18832 ;; Return value:  Size  Location     Type
 18833 ;;                  4   14[BANK0 ] unsigned char 
 18834 ;; Registers used:
 18835 ;;		wreg, status,2, status,0
 18836 ;; Tracked objects:
 18837 ;;		On entry : 0/0
 18838 ;;		On exit  : 0/0
 18839 ;;		Unchanged: 0/0
 18840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18841 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18842 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18843 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18844 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18845 ;;Total ram usage:       14 bytes
 18846 ;; Hardware stack levels used:    1
 18847 ;; Hardware stack levels required when called:    2
 18848 ;; This function calls:
 18849 ;;		Nothing
 18850 ;; This function is called by:
 18851 ;;		_calculateTemp
 18852 ;;		_getCurrent
 18853 ;;		_avgBuff
 18854 ;;		_measureVoltages
 18855 ;;		_sprintf
 18856 ;; This function uses a non-reentrant model
 18857 ;;
 18858                           
 18859                           
 18860                           ;psect for function ___xxtofl
 18861  235D                     ___xxtofl:	
 18862                           
 18863                           ;incstack = 0
 18864                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 18865                           ;___xxtofl@sign stored from wreg
 18866  235D  0020               	movlb	0	; select bank0
 18867  235E  00B2               	movwf	___xxtofl@sign
 18868  235F  0832               	movf	___xxtofl@sign,w
 18869  2360  1D03               	btfss	3,2
 18870  2361  1FB1               	btfss	___xxtofl@val+3,7
 18871  2362  2B73               	goto	l7376
 18872  2363  092E               	comf	___xxtofl@val,w
 18873  2364  00B4               	movwf	___xxtofl@arg
 18874  2365  092F               	comf	___xxtofl@val+1,w
 18875  2366  00B5               	movwf	___xxtofl@arg+1
 18876  2367  0930               	comf	___xxtofl@val+2,w
 18877  2368  00B6               	movwf	___xxtofl@arg+2
 18878  2369  0931               	comf	___xxtofl@val+3,w
 18879  236A  00B7               	movwf	___xxtofl@arg+3
 18880  236B  0AB4               	incf	___xxtofl@arg,f
 18881  236C  1903               	skipnz
 18882  236D  0AB5               	incf	___xxtofl@arg+1,f
 18883  236E  1903               	skipnz
 18884  236F  0AB6               	incf	___xxtofl@arg+2,f
 18885  2370  1903               	skipnz
 18886  2371  0AB7               	incf	___xxtofl@arg+3,f
 18887  2372  2B7B               	goto	l1413
 18888  2373                     l7376:	
 18889  2373  0831               	movf	___xxtofl@val+3,w
 18890  2374  00B7               	movwf	___xxtofl@arg+3
 18891  2375  0830               	movf	___xxtofl@val+2,w
 18892  2376  00B6               	movwf	___xxtofl@arg+2
 18893  2377  082F               	movf	___xxtofl@val+1,w
 18894  2378  00B5               	movwf	___xxtofl@arg+1
 18895  2379  082E               	movf	___xxtofl@val,w
 18896  237A  00B4               	movwf	___xxtofl@arg
 18897  237B                     l1413:	
 18898  237B  0831               	movf	___xxtofl@val+3,w
 18899  237C  0430               	iorwf	___xxtofl@val+2,w
 18900  237D  042F               	iorwf	___xxtofl@val+1,w
 18901  237E  042E               	iorwf	___xxtofl@val,w
 18902  237F  1D03               	skipz
 18903  2380  2B8A               	goto	l7382
 18904  2381  3000               	movlw	0
 18905  2382  00B1               	movwf	?___xxtofl+3
 18906  2383  3000               	movlw	0
 18907  2384  00B0               	movwf	?___xxtofl+2
 18908  2385  3000               	movlw	0
 18909  2386  00AF               	movwf	?___xxtofl+1
 18910  2387  3000               	movlw	0
 18911  2388  00AE               	movwf	?___xxtofl
 18912  2389  0008               	return
 18913  238A                     l7382:	
 18914  238A  3096               	movlw	150
 18915  238B  00F4               	movwf	??___xxtofl
 18916  238C  0874               	movf	??___xxtofl,w
 18917  238D  00B3               	movwf	___xxtofl@exp
 18918  238E                     l7386:	
 18919  238E  30FE               	movlw	254
 18920  238F  0537               	andwf	___xxtofl@arg+3,w
 18921  2390  1903               	btfsc	3,2
 18922  2391  2BB1               	goto	l1419
 18923  2392  3001               	movlw	1
 18924  2393  00F4               	movwf	??___xxtofl
 18925  2394  0874               	movf	??___xxtofl,w
 18926  2395  07B3               	addwf	___xxtofl@exp,f
 18927  2396  3001               	movlw	1
 18928  2397                     u10055:	
 18929  2397  36B7               	lsrf	___xxtofl@arg+3,f
 18930  2398  0CB6               	rrf	___xxtofl@arg+2,f
 18931  2399  0CB5               	rrf	___xxtofl@arg+1,f
 18932  239A  0CB4               	rrf	___xxtofl@arg,f
 18933  239B  0B89               	decfsz	9,f
 18934  239C  2B97               	goto	u10055
 18935  239D  2B8E               	goto	l7386
 18936  239E                     l7388:	
 18937  239E  3001               	movlw	1
 18938  239F  00F4               	movwf	??___xxtofl
 18939  23A0  0874               	movf	??___xxtofl,w
 18940  23A1  07B3               	addwf	___xxtofl@exp,f
 18941  23A2  3001               	movlw	1
 18942  23A3  07B4               	addwf	___xxtofl@arg,f
 18943  23A4  3000               	movlw	0
 18944  23A5  3DB5               	addwfc	___xxtofl@arg+1,f
 18945  23A6  3000               	movlw	0
 18946  23A7  3DB6               	addwfc	___xxtofl@arg+2,f
 18947  23A8  3000               	movlw	0
 18948  23A9  3DB7               	addwfc	___xxtofl@arg+3,f
 18949  23AA  3001               	movlw	1
 18950  23AB                     u10075:	
 18951  23AB  36B7               	lsrf	___xxtofl@arg+3,f
 18952  23AC  0CB6               	rrf	___xxtofl@arg+2,f
 18953  23AD  0CB5               	rrf	___xxtofl@arg+1,f
 18954  23AE  0CB4               	rrf	___xxtofl@arg,f
 18955  23AF  0B89               	decfsz	9,f
 18956  23B0  2BAB               	goto	u10075
 18957  23B1                     l1419:	
 18958  23B1  30FF               	movlw	255
 18959  23B2  0537               	andwf	___xxtofl@arg+3,w
 18960  23B3  1903               	btfsc	3,2
 18961  23B4  2BBF               	goto	l7396
 18962  23B5  2B9E               	goto	l7388
 18963  23B6                     l7394:	
 18964  23B6  3001               	movlw	1
 18965  23B7  02B3               	subwf	___xxtofl@exp,f
 18966  23B8  3001               	movlw	1
 18967  23B9                     u10095:	
 18968  23B9  35B4               	lslf	___xxtofl@arg,f
 18969  23BA  0DB5               	rlf	___xxtofl@arg+1,f
 18970  23BB  0DB6               	rlf	___xxtofl@arg+2,f
 18971  23BC  0DB7               	rlf	___xxtofl@arg+3,f
 18972  23BD  0B89               	decfsz	9,f
 18973  23BE  2BB9               	goto	u10095
 18974  23BF                     l7396:	
 18975  23BF  1BB6               	btfsc	___xxtofl@arg+2,7
 18976  23C0  2BC5               	goto	l1426
 18977  23C1  3002               	movlw	2
 18978  23C2  0233               	subwf	___xxtofl@exp,w
 18979  23C3  1803               	skipnc
 18980  23C4  2BB6               	goto	l7394
 18981  23C5                     l1426:	
 18982  23C5  1833               	btfsc	___xxtofl@exp,0
 18983  23C6  2BCF               	goto	l1427
 18984  23C7  30FF               	movlw	255
 18985  23C8  05B4               	andwf	___xxtofl@arg,f
 18986  23C9  30FF               	movlw	255
 18987  23CA  05B5               	andwf	___xxtofl@arg+1,f
 18988  23CB  307F               	movlw	127
 18989  23CC  05B6               	andwf	___xxtofl@arg+2,f
 18990  23CD  30FF               	movlw	255
 18991  23CE  05B7               	andwf	___xxtofl@arg+3,f
 18992  23CF                     l1427:	
 18993  23CF  1003               	clrc
 18994  23D0  0CB3               	rrf	___xxtofl@exp,f
 18995  23D1  0833               	movf	___xxtofl@exp,w
 18996  23D2  00F4               	movwf	??___xxtofl
 18997  23D3  01F5               	clrf	??___xxtofl+1
 18998  23D4  01F6               	clrf	??___xxtofl+2
 18999  23D5  01F7               	clrf	??___xxtofl+3
 19000  23D6  3018               	movlw	24
 19001  23D7                     u10135:	
 19002  23D7  35F4               	lslf	??___xxtofl,f
 19003  23D8  0DF5               	rlf	??___xxtofl+1,f
 19004  23D9  0DF6               	rlf	??___xxtofl+2,f
 19005  23DA  0DF7               	rlf	??___xxtofl+3,f
 19006  23DB  0B89               	decfsz	9,f
 19007  23DC  2BD7               	goto	u10135
 19008  23DD  0874               	movf	??___xxtofl,w
 19009  23DE  04B4               	iorwf	___xxtofl@arg,f
 19010  23DF  0875               	movf	??___xxtofl+1,w
 19011  23E0  04B5               	iorwf	___xxtofl@arg+1,f
 19012  23E1  0876               	movf	??___xxtofl+2,w
 19013  23E2  04B6               	iorwf	___xxtofl@arg+2,f
 19014  23E3  0877               	movf	??___xxtofl+3,w
 19015  23E4  04B7               	iorwf	___xxtofl@arg+3,f
 19016  23E5  0832               	movf	___xxtofl@sign,w
 19017  23E6  1D03               	btfss	3,2
 19018  23E7  1FB1               	btfss	___xxtofl@val+3,7
 19019  23E8  2BEA               	goto	l7410
 19020  23E9  17B7               	bsf	___xxtofl@arg+3,7
 19021  23EA                     l7410:	
 19022  23EA  0837               	movf	___xxtofl@arg+3,w
 19023  23EB  00B1               	movwf	?___xxtofl+3
 19024  23EC  0836               	movf	___xxtofl@arg+2,w
 19025  23ED  00B0               	movwf	?___xxtofl+2
 19026  23EE  0835               	movf	___xxtofl@arg+1,w
 19027  23EF  00AF               	movwf	?___xxtofl+1
 19028  23F0  0834               	movf	___xxtofl@arg,w
 19029  23F1  00AE               	movwf	?___xxtofl
 19030  23F2  0008               	return
 19031  23F3                     __end_of___xxtofl:	
 19032                           
 19033                           	psect	text56
 19034  1468                     __ptext56:	
 19035 ;; *************** function ___fldiv *****************
 19036 ;; Defined at:
 19037 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 19038 ;; Parameters:    Size  Location     Type
 19039 ;;  a               4   24[BANK0 ] unsigned char 
 19040 ;;  b               4   28[BANK0 ] unsigned char 
 19041 ;; Auto vars:     Size  Location     Type
 19042 ;;  grs             4   44[BANK0 ] unsigned long 
 19043 ;;  rem             4   38[BANK0 ] unsigned long 
 19044 ;;  new_exp         2   42[BANK0 ] int 
 19045 ;;  aexp            1   49[BANK0 ] unsigned char 
 19046 ;;  bexp            1   48[BANK0 ] unsigned char 
 19047 ;;  sign            1   37[BANK0 ] unsigned char 
 19048 ;; Return value:  Size  Location     Type
 19049 ;;                  4   24[BANK0 ] unsigned char 
 19050 ;; Registers used:
 19051 ;;		wreg, status,2, status,0
 19052 ;; Tracked objects:
 19053 ;;		On entry : 0/0
 19054 ;;		On exit  : 0/0
 19055 ;;		Unchanged: 0/0
 19056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19057 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19058 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19059 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19060 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19061 ;;Total ram usage:       26 bytes
 19062 ;; Hardware stack levels used:    1
 19063 ;; Hardware stack levels required when called:    2
 19064 ;; This function calls:
 19065 ;;		Nothing
 19066 ;; This function is called by:
 19067 ;;		_calculateTemp
 19068 ;;		_calculateCurrent
 19069 ;;		_avgBuff
 19070 ;;		_measureVoltages
 19071 ;;		_startUp
 19072 ;; This function uses a non-reentrant model
 19073 ;;
 19074                           
 19075                           
 19076                           ;psect for function ___fldiv
 19077  1468                     ___fldiv:	
 19078                           
 19079                           ;incstack = 0
 19080                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 19081  1468  0020               	movlb	0	; select bank0
 19082  1469  083F               	movf	___fldiv@b+3,w
 19083  146A  3980               	andlw	128
 19084  146B  00C0               	movwf	??___fldiv
 19085  146C  0840               	movf	??___fldiv,w
 19086  146D  00C5               	movwf	___fldiv@sign
 19087  146E  353F               	lslf	___fldiv@b+3,w
 19088  146F  00C0               	movwf	??___fldiv
 19089  1470  0840               	movf	??___fldiv,w
 19090  1471  00D0               	movwf	___fldiv@bexp
 19091  1472  1BBE               	btfsc	___fldiv@b+2,7
 19092  1473  1450               	bsf	___fldiv@bexp,0
 19093  1474  0850               	movf	___fldiv@bexp,w
 19094  1475  1903               	btfsc	3,2
 19095  1476  2C85               	goto	l5436
 19096  1477  0A50               	incf	___fldiv@bexp,w
 19097  1478  1D03               	btfss	3,2
 19098  1479  2C82               	goto	l5432
 19099  147A  3000               	movlw	0
 19100  147B  00BF               	movwf	___fldiv@b+3
 19101  147C  3000               	movlw	0
 19102  147D  00BE               	movwf	___fldiv@b+2
 19103  147E  3000               	movlw	0
 19104  147F  00BD               	movwf	___fldiv@b+1
 19105  1480  3000               	movlw	0
 19106  1481  00BC               	movwf	___fldiv@b
 19107  1482                     l5432:	
 19108  1482  17BE               	bsf	___fldiv@b+2,7
 19109  1483  01BF               	clrf	___fldiv@b+3
 19110  1484  2C8D               	goto	l5438
 19111  1485                     l5436:	
 19112  1485  3000               	movlw	0
 19113  1486  00BF               	movwf	___fldiv@b+3
 19114  1487  3000               	movlw	0
 19115  1488  00BE               	movwf	___fldiv@b+2
 19116  1489  3000               	movlw	0
 19117  148A  00BD               	movwf	___fldiv@b+1
 19118  148B  3000               	movlw	0
 19119  148C  00BC               	movwf	___fldiv@b
 19120  148D                     l5438:	
 19121  148D  083B               	movf	___fldiv@a+3,w
 19122  148E  3980               	andlw	128
 19123  148F  00C0               	movwf	??___fldiv
 19124  1490  0840               	movf	??___fldiv,w
 19125  1491  06C5               	xorwf	___fldiv@sign,f
 19126  1492  353B               	lslf	___fldiv@a+3,w
 19127  1493  00C0               	movwf	??___fldiv
 19128  1494  0840               	movf	??___fldiv,w
 19129  1495  00D1               	movwf	___fldiv@aexp
 19130  1496  1BBA               	btfsc	___fldiv@a+2,7
 19131  1497  1451               	bsf	___fldiv@aexp,0
 19132  1498  0851               	movf	___fldiv@aexp,w
 19133  1499  1903               	btfsc	3,2
 19134  149A  2CA9               	goto	l5456
 19135  149B  0A51               	incf	___fldiv@aexp,w
 19136  149C  1D03               	btfss	3,2
 19137  149D  2CA6               	goto	l5452
 19138  149E  3000               	movlw	0
 19139  149F  00BB               	movwf	___fldiv@a+3
 19140  14A0  3000               	movlw	0
 19141  14A1  00BA               	movwf	___fldiv@a+2
 19142  14A2  3000               	movlw	0
 19143  14A3  00B9               	movwf	___fldiv@a+1
 19144  14A4  3000               	movlw	0
 19145  14A5  00B8               	movwf	___fldiv@a
 19146  14A6                     l5452:	
 19147  14A6  17BA               	bsf	___fldiv@a+2,7
 19148  14A7  01BB               	clrf	___fldiv@a+3
 19149  14A8  2CB1               	goto	l1354
 19150  14A9                     l5456:	
 19151  14A9  3000               	movlw	0
 19152  14AA  00BB               	movwf	___fldiv@a+3
 19153  14AB  3000               	movlw	0
 19154  14AC  00BA               	movwf	___fldiv@a+2
 19155  14AD  3000               	movlw	0
 19156  14AE  00B9               	movwf	___fldiv@a+1
 19157  14AF  3000               	movlw	0
 19158  14B0  00B8               	movwf	___fldiv@a
 19159  14B1                     l1354:	
 19160  14B1  083B               	movf	___fldiv@a+3,w
 19161  14B2  043A               	iorwf	___fldiv@a+2,w
 19162  14B3  0439               	iorwf	___fldiv@a+1,w
 19163  14B4  0438               	iorwf	___fldiv@a,w
 19164  14B5  1D03               	skipz
 19165  14B6  2CCC               	goto	l5462
 19166  14B7  3000               	movlw	0
 19167  14B8  00BF               	movwf	___fldiv@b+3
 19168  14B9  3000               	movlw	0
 19169  14BA  00BE               	movwf	___fldiv@b+2
 19170  14BB  3000               	movlw	0
 19171  14BC  00BD               	movwf	___fldiv@b+1
 19172  14BD  3000               	movlw	0
 19173  14BE  00BC               	movwf	___fldiv@b
 19174  14BF  3080               	movlw	128
 19175  14C0  04BE               	iorwf	___fldiv@b+2,f
 19176  14C1  307F               	movlw	127
 19177  14C2  04BF               	iorwf	___fldiv@b+3,f
 19178  14C3  083F               	movf	___fldiv@b+3,w
 19179  14C4  00BB               	movwf	?___fldiv+3
 19180  14C5  083E               	movf	___fldiv@b+2,w
 19181  14C6  00BA               	movwf	?___fldiv+2
 19182  14C7  083D               	movf	___fldiv@b+1,w
 19183  14C8  00B9               	movwf	?___fldiv+1
 19184  14C9  083C               	movf	___fldiv@b,w
 19185  14CA  00B8               	movwf	?___fldiv
 19186  14CB  0008               	return
 19187  14CC                     l5462:	
 19188  14CC  0850               	movf	___fldiv@bexp,w
 19189  14CD  1D03               	btfss	3,2
 19190  14CE  2CE0               	goto	l5468
 19191  14CF  3000               	movlw	0
 19192  14D0  00BF               	movwf	___fldiv@b+3
 19193  14D1  3000               	movlw	0
 19194  14D2  00BE               	movwf	___fldiv@b+2
 19195  14D3  3000               	movlw	0
 19196  14D4  00BD               	movwf	___fldiv@b+1
 19197  14D5  3000               	movlw	0
 19198  14D6  00BC               	movwf	___fldiv@b
 19199  14D7  083F               	movf	___fldiv@b+3,w
 19200  14D8  00BB               	movwf	?___fldiv+3
 19201  14D9  083E               	movf	___fldiv@b+2,w
 19202  14DA  00BA               	movwf	?___fldiv+2
 19203  14DB  083D               	movf	___fldiv@b+1,w
 19204  14DC  00B9               	movwf	?___fldiv+1
 19205  14DD  083C               	movf	___fldiv@b,w
 19206  14DE  00B8               	movwf	?___fldiv
 19207  14DF  0008               	return
 19208  14E0                     l5468:	
 19209  14E0  0851               	movf	___fldiv@aexp,w
 19210  14E1  00C0               	movwf	??___fldiv
 19211  14E2  01C1               	clrf	??___fldiv+1
 19212  14E3  09C0               	comf	??___fldiv,f
 19213  14E4  09C1               	comf	??___fldiv+1,f
 19214  14E5  0AC0               	incf	??___fldiv,f
 19215  14E6  1903               	skipnz
 19216  14E7  0AC1               	incf	??___fldiv+1,f
 19217  14E8  0850               	movf	___fldiv@bexp,w
 19218  14E9  0740               	addwf	??___fldiv,w
 19219  14EA  00C2               	movwf	??___fldiv+2
 19220  14EB  0841               	movf	??___fldiv+1,w
 19221  14EC  1803               	skipnc
 19222  14ED  0A41               	incf	??___fldiv+1,w
 19223  14EE  00C3               	movwf	??___fldiv+3
 19224  14EF  0842               	movf	??___fldiv+2,w
 19225  14F0  3E7F               	addlw	127
 19226  14F1  00CA               	movwf	___fldiv@new_exp
 19227  14F2  3000               	movlw	0
 19228  14F3  3D43               	addwfc	??___fldiv+3,w
 19229  14F4  00CB               	movwf	___fldiv@new_exp+1
 19230  14F5  083F               	movf	___fldiv@b+3,w
 19231  14F6  00C9               	movwf	___fldiv@rem+3
 19232  14F7  083E               	movf	___fldiv@b+2,w
 19233  14F8  00C8               	movwf	___fldiv@rem+2
 19234  14F9  083D               	movf	___fldiv@b+1,w
 19235  14FA  00C7               	movwf	___fldiv@rem+1
 19236  14FB  083C               	movf	___fldiv@b,w
 19237  14FC  00C6               	movwf	___fldiv@rem
 19238  14FD  3000               	movlw	0
 19239  14FE  00BF               	movwf	___fldiv@b+3
 19240  14FF  3000               	movlw	0
 19241  1500  00BE               	movwf	___fldiv@b+2
 19242  1501  3000               	movlw	0
 19243  1502  00BD               	movwf	___fldiv@b+1
 19244  1503  3000               	movlw	0
 19245  1504  00BC               	movwf	___fldiv@b
 19246  1505  3000               	movlw	0
 19247  1506  00CF               	movwf	___fldiv@grs+3
 19248  1507  3000               	movlw	0
 19249  1508  00CE               	movwf	___fldiv@grs+2
 19250  1509  3000               	movlw	0
 19251  150A  00CD               	movwf	___fldiv@grs+1
 19252  150B  3000               	movlw	0
 19253  150C  00CC               	movwf	___fldiv@grs
 19254  150D  01D1               	clrf	___fldiv@aexp
 19255  150E                     l5496:	
 19256  150E  301A               	movlw	26
 19257  150F  0251               	subwf	___fldiv@aexp,w
 19258  1510  1803               	btfsc	3,0
 19259  1511  2D4A               	goto	l5498
 19260  1512  0851               	movf	___fldiv@aexp,w
 19261  1513  1903               	btfsc	3,2
 19262  1514  2D2C               	goto	l5488
 19263  1515  3001               	movlw	1
 19264  1516                     u6935:	
 19265  1516  35C6               	lslf	___fldiv@rem,f
 19266  1517  0DC7               	rlf	___fldiv@rem+1,f
 19267  1518  0DC8               	rlf	___fldiv@rem+2,f
 19268  1519  0DC9               	rlf	___fldiv@rem+3,f
 19269  151A  0B89               	decfsz	9,f
 19270  151B  2D16               	goto	u6935
 19271  151C  3001               	movlw	1
 19272  151D                     u6945:	
 19273  151D  35BC               	lslf	___fldiv@b,f
 19274  151E  0DBD               	rlf	___fldiv@b+1,f
 19275  151F  0DBE               	rlf	___fldiv@b+2,f
 19276  1520  0DBF               	rlf	___fldiv@b+3,f
 19277  1521  0B89               	decfsz	9,f
 19278  1522  2D1D               	goto	u6945
 19279  1523  1BCF               	btfsc	___fldiv@grs+3,7
 19280  1524  143C               	bsf	___fldiv@b,0
 19281  1525  3001               	movlw	1
 19282  1526                     u6965:	
 19283  1526  35CC               	lslf	___fldiv@grs,f
 19284  1527  0DCD               	rlf	___fldiv@grs+1,f
 19285  1528  0DCE               	rlf	___fldiv@grs+2,f
 19286  1529  0DCF               	rlf	___fldiv@grs+3,f
 19287  152A  0B89               	decfsz	9,f
 19288  152B  2D26               	goto	u6965
 19289  152C                     l5488:	
 19290  152C  083B               	movf	___fldiv@a+3,w
 19291  152D  0249               	subwf	___fldiv@rem+3,w
 19292  152E  1D03               	skipz
 19293  152F  2D3A               	goto	u6975
 19294  1530  083A               	movf	___fldiv@a+2,w
 19295  1531  0248               	subwf	___fldiv@rem+2,w
 19296  1532  1D03               	skipz
 19297  1533  2D3A               	goto	u6975
 19298  1534  0839               	movf	___fldiv@a+1,w
 19299  1535  0247               	subwf	___fldiv@rem+1,w
 19300  1536  1D03               	skipz
 19301  1537  2D3A               	goto	u6975
 19302  1538  0838               	movf	___fldiv@a,w
 19303  1539  0246               	subwf	___fldiv@rem,w
 19304  153A                     u6975:	
 19305  153A  1C03               	skipc
 19306  153B  2D45               	goto	l5494
 19307  153C  174F               	bsf	___fldiv@grs+3,6
 19308  153D  0838               	movf	___fldiv@a,w
 19309  153E  02C6               	subwf	___fldiv@rem,f
 19310  153F  0839               	movf	___fldiv@a+1,w
 19311  1540  3BC7               	subwfb	___fldiv@rem+1,f
 19312  1541  083A               	movf	___fldiv@a+2,w
 19313  1542  3BC8               	subwfb	___fldiv@rem+2,f
 19314  1543  083B               	movf	___fldiv@a+3,w
 19315  1544  3BC9               	subwfb	___fldiv@rem+3,f
 19316  1545                     l5494:	
 19317  1545  3001               	movlw	1
 19318  1546  00C0               	movwf	??___fldiv
 19319  1547  0840               	movf	??___fldiv,w
 19320  1548  07D1               	addwf	___fldiv@aexp,f
 19321  1549  2D0E               	goto	l5496
 19322  154A                     l5498:	
 19323  154A  0849               	movf	___fldiv@rem+3,w
 19324  154B  0448               	iorwf	___fldiv@rem+2,w
 19325  154C  0447               	iorwf	___fldiv@rem+1,w
 19326  154D  0446               	iorwf	___fldiv@rem,w
 19327  154E  1D03               	btfss	3,2
 19328  154F  144C               	bsf	___fldiv@grs,0
 19329  1550                     l5512:	
 19330  1550  1BBE               	btfsc	___fldiv@b+2,7
 19331  1551  2D67               	goto	l5514
 19332  1552  3001               	movlw	1
 19333  1553                     u7005:	
 19334  1553  35BC               	lslf	___fldiv@b,f
 19335  1554  0DBD               	rlf	___fldiv@b+1,f
 19336  1555  0DBE               	rlf	___fldiv@b+2,f
 19337  1556  0DBF               	rlf	___fldiv@b+3,f
 19338  1557  0B89               	decfsz	9,f
 19339  1558  2D53               	goto	u7005
 19340  1559  1BCF               	btfsc	___fldiv@grs+3,7
 19341  155A  143C               	bsf	___fldiv@b,0
 19342  155B  3001               	movlw	1
 19343  155C                     u7025:	
 19344  155C  35CC               	lslf	___fldiv@grs,f
 19345  155D  0DCD               	rlf	___fldiv@grs+1,f
 19346  155E  0DCE               	rlf	___fldiv@grs+2,f
 19347  155F  0DCF               	rlf	___fldiv@grs+3,f
 19348  1560  0B89               	decfsz	9,f
 19349  1561  2D5C               	goto	u7025
 19350  1562  30FF               	movlw	255
 19351  1563  07CA               	addwf	___fldiv@new_exp,f
 19352  1564  30FF               	movlw	255
 19353  1565  3DCB               	addwfc	___fldiv@new_exp+1,f
 19354  1566  2D50               	goto	l5512
 19355  1567                     l5514:	
 19356  1567  01D1               	clrf	___fldiv@aexp
 19357  1568  1FCF               	btfss	___fldiv@grs+3,7
 19358  1569  2D80               	goto	l5524
 19359  156A  30FF               	movlw	255
 19360  156B  054C               	andwf	___fldiv@grs,w
 19361  156C  00C0               	movwf	??___fldiv
 19362  156D  30FF               	movlw	255
 19363  156E  054D               	andwf	___fldiv@grs+1,w
 19364  156F  00C1               	movwf	??___fldiv+1
 19365  1570  30FF               	movlw	255
 19366  1571  054E               	andwf	___fldiv@grs+2,w
 19367  1572  00C2               	movwf	??___fldiv+2
 19368  1573  307F               	movlw	127
 19369  1574  054F               	andwf	___fldiv@grs+3,w
 19370  1575  00C3               	movwf	??___fldiv+3
 19371  1576  0843               	movf	??___fldiv+3,w
 19372  1577  0442               	iorwf	??___fldiv+2,w
 19373  1578  0441               	iorwf	??___fldiv+1,w
 19374  1579  0440               	iorwf	??___fldiv,w
 19375  157A  1D03               	btfss	3,2
 19376  157B  2D7E               	goto	l5522
 19377  157C  1C3C               	btfss	___fldiv@b,0
 19378  157D  2D80               	goto	l5524
 19379  157E                     l5522:	
 19380  157E  01D1               	clrf	___fldiv@aexp
 19381  157F  0AD1               	incf	___fldiv@aexp,f
 19382  1580                     l5524:	
 19383  1580  0851               	movf	___fldiv@aexp,w
 19384  1581  1903               	btfsc	3,2
 19385  1582  2DA9               	goto	l5534
 19386  1583  3001               	movlw	1
 19387  1584  07BC               	addwf	___fldiv@b,f
 19388  1585  3000               	movlw	0
 19389  1586  3DBD               	addwfc	___fldiv@b+1,f
 19390  1587  3000               	movlw	0
 19391  1588  3DBE               	addwfc	___fldiv@b+2,f
 19392  1589  3000               	movlw	0
 19393  158A  3DBF               	addwfc	___fldiv@b+3,f
 19394  158B  1C3F               	btfss	___fldiv@b+3,0
 19395  158C  2DA9               	goto	l5534
 19396  158D  083C               	movf	___fldiv@b,w
 19397  158E  00C0               	movwf	??___fldiv
 19398  158F  083D               	movf	___fldiv@b+1,w
 19399  1590  00C1               	movwf	??___fldiv+1
 19400  1591  083E               	movf	___fldiv@b+2,w
 19401  1592  00C2               	movwf	??___fldiv+2
 19402  1593  083F               	movf	___fldiv@b+3,w
 19403  1594  00C3               	movwf	??___fldiv+3
 19404  1595  3001               	movlw	1
 19405  1596  00C4               	movwf	??___fldiv+4
 19406  1597                     u7095:	
 19407  1597  37C3               	asrf	??___fldiv+3,f
 19408  1598  0CC2               	rrf	??___fldiv+2,f
 19409  1599  0CC1               	rrf	??___fldiv+1,f
 19410  159A  0CC0               	rrf	??___fldiv,f
 19411  159B  0BC4               	decfsz	??___fldiv+4,f
 19412  159C  2D97               	goto	u7095
 19413  159D  0843               	movf	??___fldiv+3,w
 19414  159E  00BF               	movwf	___fldiv@b+3
 19415  159F  0842               	movf	??___fldiv+2,w
 19416  15A0  00BE               	movwf	___fldiv@b+2
 19417  15A1  0841               	movf	??___fldiv+1,w
 19418  15A2  00BD               	movwf	___fldiv@b+1
 19419  15A3  0840               	movf	??___fldiv,w
 19420  15A4  00BC               	movwf	___fldiv@b
 19421  15A5  3001               	movlw	1
 19422  15A6  07CA               	addwf	___fldiv@new_exp,f
 19423  15A7  3000               	movlw	0
 19424  15A8  3DCB               	addwfc	___fldiv@new_exp+1,f
 19425  15A9                     l5534:	
 19426  15A9  084B               	movf	___fldiv@new_exp+1,w
 19427  15AA  3A80               	xorlw	128
 19428  15AB  00C0               	movwf	??___fldiv
 19429  15AC  3080               	movlw	128
 19430  15AD  0240               	subwf	??___fldiv,w
 19431  15AE  1D03               	skipz
 19432  15AF  2DB2               	goto	u7105
 19433  15B0  30FF               	movlw	255
 19434  15B1  024A               	subwf	___fldiv@new_exp,w
 19435  15B2                     u7105:	
 19436  15B2  1C03               	skipc
 19437  15B3  2DC1               	goto	l1375
 19438  15B4  30FF               	movlw	255
 19439  15B5  0020               	movlb	0	; select bank0
 19440  15B6  00CA               	movwf	___fldiv@new_exp
 19441  15B7  3000               	movlw	0
 19442  15B8  00CB               	movwf	___fldiv@new_exp+1
 19443  15B9  3000               	movlw	0
 19444  15BA  00BF               	movwf	___fldiv@b+3
 19445  15BB  3000               	movlw	0
 19446  15BC  00BE               	movwf	___fldiv@b+2
 19447  15BD  3000               	movlw	0
 19448  15BE  00BD               	movwf	___fldiv@b+1
 19449  15BF  3000               	movlw	0
 19450  15C0  00BC               	movwf	___fldiv@b
 19451  15C1                     l1375:	
 19452  15C1  0020               	movlb	0	; select bank0
 19453  15C2  084B               	movf	___fldiv@new_exp+1,w
 19454  15C3  3A80               	xorlw	128
 19455  15C4  00C0               	movwf	??___fldiv
 19456  15C5  3080               	movlw	128
 19457  15C6  0240               	subwf	??___fldiv,w
 19458  15C7  1D03               	skipz
 19459  15C8  2DCB               	goto	u7115
 19460  15C9  3001               	movlw	1
 19461  15CA  024A               	subwf	___fldiv@new_exp,w
 19462  15CB                     u7115:	
 19463  15CB  1803               	skipnc
 19464  15CC  2DD9               	goto	l1376
 19465  15CD  0020               	movlb	0	; select bank0
 19466  15CE  01CA               	clrf	___fldiv@new_exp
 19467  15CF  01CB               	clrf	___fldiv@new_exp+1
 19468  15D0  3000               	movlw	0
 19469  15D1  00BF               	movwf	___fldiv@b+3
 19470  15D2  3000               	movlw	0
 19471  15D3  00BE               	movwf	___fldiv@b+2
 19472  15D4  3000               	movlw	0
 19473  15D5  00BD               	movwf	___fldiv@b+1
 19474  15D6  3000               	movlw	0
 19475  15D7  00BC               	movwf	___fldiv@b
 19476  15D8  01C5               	clrf	___fldiv@sign
 19477  15D9                     l1376:	
 19478  15D9  0020               	movlb	0	; select bank0
 19479  15DA  084A               	movf	___fldiv@new_exp,w
 19480  15DB  00C0               	movwf	??___fldiv
 19481  15DC  0840               	movf	??___fldiv,w
 19482  15DD  00D0               	movwf	___fldiv@bexp
 19483  15DE  1C50               	btfss	___fldiv@bexp,0
 19484  15DF  2DE2               	goto	l5548
 19485  15E0  17BE               	bsf	___fldiv@b+2,7
 19486  15E1  2DE6               	goto	l1378
 19487  15E2                     l5548:	
 19488  15E2  307F               	movlw	127
 19489  15E3  00C0               	movwf	??___fldiv
 19490  15E4  0840               	movf	??___fldiv,w
 19491  15E5  05BE               	andwf	___fldiv@b+2,f
 19492  15E6                     l1378:	
 19493  15E6  3650               	lsrf	___fldiv@bexp,w
 19494  15E7  00C0               	movwf	??___fldiv
 19495  15E8  0840               	movf	??___fldiv,w
 19496  15E9  00BF               	movwf	___fldiv@b+3
 19497  15EA  0845               	movf	___fldiv@sign,w
 19498  15EB  00C0               	movwf	??___fldiv
 19499  15EC  0840               	movf	??___fldiv,w
 19500  15ED  04BF               	iorwf	___fldiv@b+3,f
 19501  15EE  083F               	movf	___fldiv@b+3,w
 19502  15EF  00BB               	movwf	?___fldiv+3
 19503  15F0  083E               	movf	___fldiv@b+2,w
 19504  15F1  00BA               	movwf	?___fldiv+2
 19505  15F2  083D               	movf	___fldiv@b+1,w
 19506  15F3  00B9               	movwf	?___fldiv+1
 19507  15F4  083C               	movf	___fldiv@b,w
 19508  15F5  00B8               	movwf	?___fldiv
 19509  15F6  0008               	return
 19510  15F7                     __end_of___fldiv:	
 19511                           
 19512                           	psect	text57
 19513  05F9                     __ptext57:	
 19514 ;; *************** function ___fladd *****************
 19515 ;; Defined at:
 19516 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 19517 ;; Parameters:    Size  Location     Type
 19518 ;;  b               4   29[BANK1 ] unsigned char 
 19519 ;;  a               4   33[BANK1 ] unsigned char 
 19520 ;; Auto vars:     Size  Location     Type
 19521 ;;  grs             1   52[BANK1 ] unsigned char 
 19522 ;;  bexp            1   51[BANK1 ] unsigned char 
 19523 ;;  aexp            1   50[BANK1 ] unsigned char 
 19524 ;;  signs           1   49[BANK1 ] unsigned char 
 19525 ;; Return value:  Size  Location     Type
 19526 ;;                  4   29[BANK1 ] unsigned char 
 19527 ;; Registers used:
 19528 ;;		wreg, status,2, status,0
 19529 ;; Tracked objects:
 19530 ;;		On entry : 0/0
 19531 ;;		On exit  : 0/0
 19532 ;;		Unchanged: 0/0
 19533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19534 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19535 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19536 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19537 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19538 ;;Total ram usage:       24 bytes
 19539 ;; Hardware stack levels used:    1
 19540 ;; Hardware stack levels required when called:    2
 19541 ;; This function calls:
 19542 ;;		Nothing
 19543 ;; This function is called by:
 19544 ;;		_calculateCurrent
 19545 ;;		_avgBuff
 19546 ;;		_writeVoltages
 19547 ;;		_sumVoltages
 19548 ;;		_cellBalancing
 19549 ;;		_sprintf
 19550 ;;		___flsub
 19551 ;; This function uses a non-reentrant model
 19552 ;;
 19553                           
 19554                           
 19555                           ;psect for function ___fladd
 19556  05F9                     ___fladd:	
 19557                           
 19558                           ;incstack = 0
 19559                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 19560  05F9  0021               	movlb	1	; select bank1
 19561  05FA  0840               	movf	(___fladd@b^(0+128)+3),w
 19562  05FB  3980               	andlw	128
 19563  05FC  00C5               	movwf	??___fladd^(0+128)
 19564  05FD  0845               	movf	??___fladd^(0+128),w
 19565  05FE  00D1               	movwf	___fladd@signs^(0+128)
 19566  05FF  3540               	lslf	(___fladd@b^(0+128)+3),w
 19567  0600  00C5               	movwf	??___fladd^(0+128)
 19568  0601  0845               	movf	??___fladd^(0+128),w
 19569  0602  00D3               	movwf	___fladd@bexp^(0+128)
 19570  0603  1BBF               	btfsc	(___fladd@b^(0+128)+2),7
 19571  0604  1453               	bsf	___fladd@bexp^(0+128),0
 19572  0605  0853               	movf	___fladd@bexp^(0+128),w
 19573  0606  1903               	btfsc	3,2
 19574  0607  2E16               	goto	l6726
 19575  0608  0A53               	incf	___fladd@bexp^(0+128),w
 19576  0609  1D03               	btfss	3,2
 19577  060A  2E13               	goto	l6722
 19578  060B  3000               	movlw	0
 19579  060C  00C0               	movwf	(___fladd@b+3)^(0+128)
 19580  060D  3000               	movlw	0
 19581  060E  00BF               	movwf	(___fladd@b+2)^(0+128)
 19582  060F  3000               	movlw	0
 19583  0610  00BE               	movwf	(___fladd@b+1)^(0+128)
 19584  0611  3000               	movlw	0
 19585  0612  00BD               	movwf	___fladd@b^(0+128)
 19586  0613                     l6722:	
 19587  0613  17BF               	bsf	(___fladd@b^(0+128)+2),7
 19588  0614  01C0               	clrf	(___fladd@b^(0+128)+3)
 19589  0615  2E1E               	goto	l6728
 19590  0616                     l6726:	
 19591  0616  3000               	movlw	0
 19592  0617  00C0               	movwf	(___fladd@b+3)^(0+128)
 19593  0618  3000               	movlw	0
 19594  0619  00BF               	movwf	(___fladd@b+2)^(0+128)
 19595  061A  3000               	movlw	0
 19596  061B  00BE               	movwf	(___fladd@b+1)^(0+128)
 19597  061C  3000               	movlw	0
 19598  061D  00BD               	movwf	___fladd@b^(0+128)
 19599  061E                     l6728:	
 19600  061E  0844               	movf	(___fladd@a^(0+128)+3),w
 19601  061F  3980               	andlw	128
 19602  0620  00C5               	movwf	??___fladd^(0+128)
 19603  0621  0845               	movf	??___fladd^(0+128),w
 19604  0622  00D2               	movwf	___fladd@aexp^(0+128)
 19605  0623  0852               	movf	___fladd@aexp^(0+128),w
 19606  0624  0651               	xorwf	___fladd@signs^(0+128),w
 19607  0625  1D03               	btfss	3,2
 19608  0626  1751               	bsf	___fladd@signs^(0+128),6
 19609  0627  3544               	lslf	(___fladd@a^(0+128)+3),w
 19610  0628  00C5               	movwf	??___fladd^(0+128)
 19611  0629  0845               	movf	??___fladd^(0+128),w
 19612  062A  00D2               	movwf	___fladd@aexp^(0+128)
 19613  062B  1BC3               	btfsc	(___fladd@a^(0+128)+2),7
 19614  062C  1452               	bsf	___fladd@aexp^(0+128),0
 19615  062D  0852               	movf	___fladd@aexp^(0+128),w
 19616  062E  1903               	btfsc	3,2
 19617  062F  2E3E               	goto	l6750
 19618  0630  0A52               	incf	___fladd@aexp^(0+128),w
 19619  0631  1D03               	btfss	3,2
 19620  0632  2E3B               	goto	l6746
 19621  0633  3000               	movlw	0
 19622  0634  00C4               	movwf	(___fladd@a+3)^(0+128)
 19623  0635  3000               	movlw	0
 19624  0636  00C3               	movwf	(___fladd@a+2)^(0+128)
 19625  0637  3000               	movlw	0
 19626  0638  00C2               	movwf	(___fladd@a+1)^(0+128)
 19627  0639  3000               	movlw	0
 19628  063A  00C1               	movwf	___fladd@a^(0+128)
 19629  063B                     l6746:	
 19630  063B  17C3               	bsf	(___fladd@a^(0+128)+2),7
 19631  063C  01C4               	clrf	(___fladd@a^(0+128)+3)
 19632  063D  2E46               	goto	l1298
 19633  063E                     l6750:	
 19634  063E  3000               	movlw	0
 19635  063F  00C4               	movwf	(___fladd@a+3)^(0+128)
 19636  0640  3000               	movlw	0
 19637  0641  00C3               	movwf	(___fladd@a+2)^(0+128)
 19638  0642  3000               	movlw	0
 19639  0643  00C2               	movwf	(___fladd@a+1)^(0+128)
 19640  0644  3000               	movlw	0
 19641  0645  00C1               	movwf	___fladd@a^(0+128)
 19642  0646                     l1298:	
 19643  0646  0853               	movf	___fladd@bexp^(0+128),w
 19644  0647  0252               	subwf	___fladd@aexp^(0+128),w
 19645  0648  1803               	skipnc
 19646  0649  2E8C               	goto	l6786
 19647  064A  1F51               	btfss	___fladd@signs^(0+128),6
 19648  064B  2E50               	goto	l6756
 19649  064C  3080               	movlw	128
 19650  064D  00C5               	movwf	??___fladd^(0+128)
 19651  064E  0845               	movf	??___fladd^(0+128),w
 19652  064F  06D1               	xorwf	___fladd@signs^(0+128),f
 19653  0650                     l6756:	
 19654  0650  0853               	movf	___fladd@bexp^(0+128),w
 19655  0651  00C5               	movwf	??___fladd^(0+128)
 19656  0652  0845               	movf	??___fladd^(0+128),w
 19657  0653  00D4               	movwf	___fladd@grs^(0+128)
 19658  0654  0852               	movf	___fladd@aexp^(0+128),w
 19659  0655  00C5               	movwf	??___fladd^(0+128)
 19660  0656  0845               	movf	??___fladd^(0+128),w
 19661  0657  00D3               	movwf	___fladd@bexp^(0+128)
 19662  0658  0854               	movf	___fladd@grs^(0+128),w
 19663  0659  00C5               	movwf	??___fladd^(0+128)
 19664  065A  0845               	movf	??___fladd^(0+128),w
 19665  065B  00D2               	movwf	___fladd@aexp^(0+128)
 19666  065C  083D               	movf	___fladd@b^(0+128),w
 19667  065D  00C5               	movwf	??___fladd^(0+128)
 19668  065E  0845               	movf	??___fladd^(0+128),w
 19669  065F  00D4               	movwf	___fladd@grs^(0+128)
 19670  0660  0841               	movf	___fladd@a^(0+128),w
 19671  0661  00C5               	movwf	??___fladd^(0+128)
 19672  0662  0845               	movf	??___fladd^(0+128),w
 19673  0663  00BD               	movwf	___fladd@b^(0+128)
 19674  0664  0854               	movf	___fladd@grs^(0+128),w
 19675  0665  00C5               	movwf	??___fladd^(0+128)
 19676  0666  0845               	movf	??___fladd^(0+128),w
 19677  0667  00C1               	movwf	___fladd@a^(0+128)
 19678  0668  083E               	movf	(___fladd@b^(0+128)+1),w
 19679  0669  00C5               	movwf	??___fladd^(0+128)
 19680  066A  0845               	movf	??___fladd^(0+128),w
 19681  066B  00D4               	movwf	___fladd@grs^(0+128)
 19682  066C  0842               	movf	(___fladd@a^(0+128)+1),w
 19683  066D  00C5               	movwf	??___fladd^(0+128)
 19684  066E  0845               	movf	??___fladd^(0+128),w
 19685  066F  00BE               	movwf	(___fladd@b^(0+128)+1)
 19686  0670  0854               	movf	___fladd@grs^(0+128),w
 19687  0671  00C5               	movwf	??___fladd^(0+128)
 19688  0672  0845               	movf	??___fladd^(0+128),w
 19689  0673  00C2               	movwf	(___fladd@a^(0+128)+1)
 19690  0674  083F               	movf	(___fladd@b^(0+128)+2),w
 19691  0675  00C5               	movwf	??___fladd^(0+128)
 19692  0676  0845               	movf	??___fladd^(0+128),w
 19693  0677  00D4               	movwf	___fladd@grs^(0+128)
 19694  0678  0843               	movf	(___fladd@a^(0+128)+2),w
 19695  0679  00C5               	movwf	??___fladd^(0+128)
 19696  067A  0845               	movf	??___fladd^(0+128),w
 19697  067B  00BF               	movwf	(___fladd@b^(0+128)+2)
 19698  067C  0854               	movf	___fladd@grs^(0+128),w
 19699  067D  00C5               	movwf	??___fladd^(0+128)
 19700  067E  0845               	movf	??___fladd^(0+128),w
 19701  067F  00C3               	movwf	(___fladd@a^(0+128)+2)
 19702  0680  0840               	movf	(___fladd@b^(0+128)+3),w
 19703  0681  00C5               	movwf	??___fladd^(0+128)
 19704  0682  0845               	movf	??___fladd^(0+128),w
 19705  0683  00D4               	movwf	___fladd@grs^(0+128)
 19706  0684  0844               	movf	(___fladd@a^(0+128)+3),w
 19707  0685  00C5               	movwf	??___fladd^(0+128)
 19708  0686  0845               	movf	??___fladd^(0+128),w
 19709  0687  00C0               	movwf	(___fladd@b^(0+128)+3)
 19710  0688  0854               	movf	___fladd@grs^(0+128),w
 19711  0689  00C5               	movwf	??___fladd^(0+128)
 19712  068A  0845               	movf	??___fladd^(0+128),w
 19713  068B  00C4               	movwf	(___fladd@a^(0+128)+3)
 19714  068C                     l6786:	
 19715  068C  01D4               	clrf	___fladd@grs^(0+128)
 19716  068D  0853               	movf	___fladd@bexp^(0+128),w
 19717  068E  00C5               	movwf	??___fladd^(0+128)
 19718  068F  01C6               	clrf	(??___fladd^(0+128)+1)
 19719  0690  09C5               	comf	??___fladd^(0+128),f
 19720  0691  09C6               	comf	(??___fladd^(0+128)+1),f
 19721  0692  0AC5               	incf	??___fladd^(0+128),f
 19722  0693  1903               	skipnz
 19723  0694  0AC6               	incf	(??___fladd^(0+128)+1),f
 19724  0695  0852               	movf	___fladd@aexp^(0+128),w
 19725  0696  0745               	addwf	??___fladd^(0+128),w
 19726  0697  00C7               	movwf	(??___fladd+2)^(0+128)
 19727  0698  0846               	movf	(??___fladd+1)^(0+128),w
 19728  0699  1803               	skipnc
 19729  069A  0A46               	incf	(??___fladd+1)^(0+128),w
 19730  069B  00C8               	movwf	((??___fladd+2)^(0+128)+1)
 19731  069C  0848               	movf	(??___fladd+3)^(0+128),w
 19732  069D  3A80               	xorlw	128
 19733  069E  00C9               	movwf	(??___fladd+4)^(0+128)
 19734  069F  3080               	movlw	128
 19735  06A0  0249               	subwf	(??___fladd+4)^(0+128),w
 19736  06A1  1D03               	skipz
 19737  06A2  2EA5               	goto	u8725
 19738  06A3  301A               	movlw	26
 19739  06A4  0247               	subwf	(??___fladd+2)^(0+128),w
 19740  06A5                     u8725:	
 19741  06A5  1C03               	skipc
 19742  06A6  2ED9               	goto	l6804
 19743  06A7  0021               	movlb	1	; select bank1
 19744  06A8  0840               	movf	(___fladd@b+3)^(0+128),w
 19745  06A9  043F               	iorwf	(___fladd@b+2)^(0+128),w
 19746  06AA  043E               	iorwf	(___fladd@b+1)^(0+128),w
 19747  06AB  043D               	iorwf	___fladd@b^(0+128),w
 19748  06AC  1903               	btfsc	3,2
 19749  06AD  2EB0               	goto	u8730
 19750  06AE  3001               	movlw	1
 19751  06AF  2EB1               	goto	u8740
 19752  06B0                     u8730:	
 19753  06B0  3000               	movlw	0
 19754  06B1                     u8740:	
 19755  06B1  00C5               	movwf	??___fladd^(0+128)
 19756  06B2  0845               	movf	??___fladd^(0+128),w
 19757  06B3  00D4               	movwf	___fladd@grs^(0+128)
 19758  06B4  3000               	movlw	0
 19759  06B5  00C0               	movwf	(___fladd@b+3)^(0+128)
 19760  06B6  3000               	movlw	0
 19761  06B7  00BF               	movwf	(___fladd@b+2)^(0+128)
 19762  06B8  3000               	movlw	0
 19763  06B9  00BE               	movwf	(___fladd@b+1)^(0+128)
 19764  06BA  3000               	movlw	0
 19765  06BB  00BD               	movwf	___fladd@b^(0+128)
 19766  06BC  0852               	movf	___fladd@aexp^(0+128),w
 19767  06BD  00C5               	movwf	??___fladd^(0+128)
 19768  06BE  0845               	movf	??___fladd^(0+128),w
 19769  06BF  00D3               	movwf	___fladd@bexp^(0+128)
 19770  06C0  2EDE               	goto	l1302
 19771  06C1                     l1304:	
 19772  06C1  1C54               	btfss	___fladd@grs^(0+128),0
 19773  06C2  2EC9               	goto	l6794
 19774  06C3  3654               	lsrf	___fladd@grs^(0+128),w
 19775  06C4  3801               	iorlw	1
 19776  06C5  00C5               	movwf	??___fladd^(0+128)
 19777  06C6  0845               	movf	??___fladd^(0+128),w
 19778  06C7  00D4               	movwf	___fladd@grs^(0+128)
 19779  06C8  2ECB               	goto	l6796
 19780  06C9                     l6794:	
 19781  06C9  1003               	clrc
 19782  06CA  0CD4               	rrf	___fladd@grs^(0+128),f
 19783  06CB                     l6796:	
 19784  06CB  183D               	btfsc	___fladd@b^(0+128),0
 19785  06CC  17D4               	bsf	___fladd@grs^(0+128),7
 19786  06CD  3001               	movlw	1
 19787  06CE  00C5               	movwf	??___fladd^(0+128)
 19788  06CF                     u8775:	
 19789  06CF  37C0               	asrf	(___fladd@b+3)^(0+128),f
 19790  06D0  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 19791  06D1  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 19792  06D2  0CBD               	rrf	___fladd@b^(0+128),f
 19793  06D3  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 19794  06D4  2ECF               	goto	u8775
 19795  06D5  3001               	movlw	1
 19796  06D6  00C5               	movwf	??___fladd^(0+128)
 19797  06D7  0845               	movf	??___fladd^(0+128),w
 19798  06D8  07D3               	addwf	___fladd@bexp^(0+128),f
 19799  06D9                     l6804:	
 19800  06D9  0021               	movlb	1	; select bank1
 19801  06DA  0852               	movf	___fladd@aexp^(0+128),w
 19802  06DB  0253               	subwf	___fladd@bexp^(0+128),w
 19803  06DC  1C03               	skipc
 19804  06DD  2EC1               	goto	l1304
 19805  06DE                     l1302:	
 19806  06DE  1B51               	btfsc	___fladd@signs^(0+128),6
 19807  06DF  2F11               	goto	l6830
 19808  06E0  0853               	movf	___fladd@bexp^(0+128),w
 19809  06E1  1D03               	btfss	3,2
 19810  06E2  2EEC               	goto	l6812
 19811  06E3  3000               	movlw	0
 19812  06E4  00C0               	movwf	(?___fladd+3)^(0+128)
 19813  06E5  3000               	movlw	0
 19814  06E6  00BF               	movwf	(?___fladd+2)^(0+128)
 19815  06E7  3000               	movlw	0
 19816  06E8  00BE               	movwf	(?___fladd+1)^(0+128)
 19817  06E9  3000               	movlw	0
 19818  06EA  00BD               	movwf	?___fladd^(0+128)
 19819  06EB  0008               	return
 19820  06EC                     l6812:	
 19821  06EC  0841               	movf	___fladd@a^(0+128),w
 19822  06ED  07BD               	addwf	___fladd@b^(0+128),f
 19823  06EE  0842               	movf	(___fladd@a+1)^(0+128),w
 19824  06EF  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 19825  06F0  0843               	movf	(___fladd@a+2)^(0+128),w
 19826  06F1  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 19827  06F2  0844               	movf	(___fladd@a+3)^(0+128),w
 19828  06F3  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 19829  06F4  1C40               	btfss	(___fladd@b+3)^(0+128),0
 19830  06F5  2F9E               	goto	l6864
 19831  06F6  1C54               	btfss	___fladd@grs^(0+128),0
 19832  06F7  2F00               	goto	l6820
 19833  06F8  1003               	clrc
 19834  06F9  0CD4               	rrf	___fladd@grs^(0+128),f
 19835  06FA  0854               	movf	___fladd@grs^(0+128),w
 19836  06FB  3801               	iorlw	1
 19837  06FC  00C5               	movwf	??___fladd^(0+128)
 19838  06FD  0845               	movf	??___fladd^(0+128),w
 19839  06FE  00D4               	movwf	___fladd@grs^(0+128)
 19840  06FF  2F02               	goto	l6822
 19841  0700                     l6820:	
 19842  0700  1003               	clrc
 19843  0701  0CD4               	rrf	___fladd@grs^(0+128),f
 19844  0702                     l6822:	
 19845  0702  183D               	btfsc	___fladd@b^(0+128),0
 19846  0703  17D4               	bsf	___fladd@grs^(0+128),7
 19847  0704  3001               	movlw	1
 19848  0705  00C5               	movwf	??___fladd^(0+128)
 19849  0706                     u8845:	
 19850  0706  37C0               	asrf	(___fladd@b+3)^(0+128),f
 19851  0707  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 19852  0708  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 19853  0709  0CBD               	rrf	___fladd@b^(0+128),f
 19854  070A  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 19855  070B  2F06               	goto	u8845
 19856  070C  3001               	movlw	1
 19857  070D  00C5               	movwf	??___fladd^(0+128)
 19858  070E  0845               	movf	??___fladd^(0+128),w
 19859  070F  07D3               	addwf	___fladd@bexp^(0+128),f
 19860  0710  2F9E               	goto	l6864
 19861  0711                     l6830:	
 19862  0711  0840               	movf	(___fladd@b+3)^(0+128),w
 19863  0712  3A80               	xorlw	128
 19864  0713  00C5               	movwf	??___fladd^(0+128)
 19865  0714  0844               	movf	(___fladd@a+3)^(0+128),w
 19866  0715  3A80               	xorlw	128
 19867  0716  0245               	subwf	??___fladd^(0+128),w
 19868  0717  1D03               	skipz
 19869  0718  2F23               	goto	u8853
 19870  0719  0843               	movf	(___fladd@a+2)^(0+128),w
 19871  071A  023F               	subwf	(___fladd@b+2)^(0+128),w
 19872  071B  1D03               	skipz
 19873  071C  2F23               	goto	u8853
 19874  071D  0842               	movf	(___fladd@a+1)^(0+128),w
 19875  071E  023E               	subwf	(___fladd@b+1)^(0+128),w
 19876  071F  1D03               	skipz
 19877  0720  2F23               	goto	u8853
 19878  0721  0841               	movf	___fladd@a^(0+128),w
 19879  0722  023D               	subwf	___fladd@b^(0+128),w
 19880  0723                     u8853:	
 19881  0723  1803               	skipnc
 19882  0724  2F6E               	goto	l6840
 19883  0725  30FF               	movlw	255
 19884  0726  00C5               	movwf	??___fladd^(0+128)
 19885  0727  30FF               	movlw	255
 19886  0728  00C6               	movwf	(??___fladd^(0+128)+1)
 19887  0729  30FF               	movlw	255
 19888  072A  00C7               	movwf	(??___fladd^(0+128)+2)
 19889  072B  30FF               	movlw	255
 19890  072C  00C8               	movwf	(??___fladd^(0+128)+3)
 19891  072D  0841               	movf	___fladd@a^(0+128),w
 19892  072E  00C9               	movwf	(??___fladd+4)^(0+128)
 19893  072F  0842               	movf	(___fladd@a+1)^(0+128),w
 19894  0730  00CA               	movwf	((??___fladd+4)^(0+128)+1)
 19895  0731  0843               	movf	(___fladd@a+2)^(0+128),w
 19896  0732  00CB               	movwf	((??___fladd+4)^(0+128)+2)
 19897  0733  0844               	movf	(___fladd@a+3)^(0+128),w
 19898  0734  00CC               	movwf	((??___fladd+4)^(0+128)+3)
 19899  0735  093D               	comf	___fladd@b^(0+128),w
 19900  0736  00CD               	movwf	(??___fladd+8)^(0+128)
 19901  0737  093E               	comf	(___fladd@b+1)^(0+128),w
 19902  0738  00CE               	movwf	((??___fladd+8)^(0+128)+1)
 19903  0739  093F               	comf	(___fladd@b+2)^(0+128),w
 19904  073A  00CF               	movwf	((??___fladd+8)^(0+128)+2)
 19905  073B  0940               	comf	(___fladd@b+3)^(0+128),w
 19906  073C  00D0               	movwf	((??___fladd+8)^(0+128)+3)
 19907  073D  0ACD               	incf	(??___fladd+8)^(0+128),f
 19908  073E  1903               	skipnz
 19909  073F  0ACE               	incf	((??___fladd+8)^(0+128)+1),f
 19910  0740  1903               	skipnz
 19911  0741  0ACF               	incf	((??___fladd+8)^(0+128)+2),f
 19912  0742  1903               	skipnz
 19913  0743  0AD0               	incf	((??___fladd+8)^(0+128)+3),f
 19914  0744  084D               	movf	(??___fladd+8)^(0+128),w
 19915  0745  07C9               	addwf	(??___fladd+4)^(0+128),f
 19916  0746  084E               	movf	(??___fladd+9)^(0+128),w
 19917  0747  3DCA               	addwfc	((??___fladd+4)^(0+128)+1),f
 19918  0748  084F               	movf	(??___fladd+10)^(0+128),w
 19919  0749  3DCB               	addwfc	((??___fladd+4)^(0+128)+2),f
 19920  074A  0850               	movf	(??___fladd+11)^(0+128),w
 19921  074B  3DCC               	addwfc	((??___fladd+4)^(0+128)+3),f
 19922  074C  0849               	movf	(??___fladd+4)^(0+128),w
 19923  074D  07C5               	addwf	??___fladd^(0+128),f
 19924  074E  084A               	movf	(??___fladd+5)^(0+128),w
 19925  074F  3DC6               	addwfc	(??___fladd^(0+128)+1),f
 19926  0750  084B               	movf	(??___fladd+6)^(0+128),w
 19927  0751  3DC7               	addwfc	(??___fladd^(0+128)+2),f
 19928  0752  084C               	movf	(??___fladd+7)^(0+128),w
 19929  0753  3DC8               	addwfc	(??___fladd^(0+128)+3),f
 19930  0754  0848               	movf	(??___fladd+3)^(0+128),w
 19931  0755  00C0               	movwf	(___fladd@b+3)^(0+128)
 19932  0756  0847               	movf	(??___fladd+2)^(0+128),w
 19933  0757  00BF               	movwf	(___fladd@b+2)^(0+128)
 19934  0758  0846               	movf	(??___fladd+1)^(0+128),w
 19935  0759  00BE               	movwf	(___fladd@b+1)^(0+128)
 19936  075A  0845               	movf	??___fladd^(0+128),w
 19937  075B  00BD               	movwf	___fladd@b^(0+128)
 19938  075C  3080               	movlw	128
 19939  075D  00C5               	movwf	??___fladd^(0+128)
 19940  075E  0845               	movf	??___fladd^(0+128),w
 19941  075F  06D1               	xorwf	___fladd@signs^(0+128),f
 19942  0760  09D4               	comf	___fladd@grs^(0+128),f
 19943  0761  0AD4               	incf	___fladd@grs^(0+128),f
 19944  0762  0854               	movf	___fladd@grs^(0+128),w
 19945  0763  1D03               	btfss	3,2
 19946  0764  2F76               	goto	l1319
 19947  0765  3001               	movlw	1
 19948  0766  07BD               	addwf	___fladd@b^(0+128),f
 19949  0767  3000               	movlw	0
 19950  0768  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 19951  0769  3000               	movlw	0
 19952  076A  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 19953  076B  3000               	movlw	0
 19954  076C  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 19955  076D  2F76               	goto	l1319
 19956  076E                     l6840:	
 19957  076E  0841               	movf	___fladd@a^(0+128),w
 19958  076F  02BD               	subwf	___fladd@b^(0+128),f
 19959  0770  0842               	movf	(___fladd@a+1)^(0+128),w
 19960  0771  3BBE               	subwfb	(___fladd@b+1)^(0+128),f
 19961  0772  0843               	movf	(___fladd@a+2)^(0+128),w
 19962  0773  3BBF               	subwfb	(___fladd@b+2)^(0+128),f
 19963  0774  0844               	movf	(___fladd@a+3)^(0+128),w
 19964  0775  3BC0               	subwfb	(___fladd@b+3)^(0+128),f
 19965  0776                     l1319:	
 19966  0776  0840               	movf	(___fladd@b+3)^(0+128),w
 19967  0777  043F               	iorwf	(___fladd@b+2)^(0+128),w
 19968  0778  043E               	iorwf	(___fladd@b+1)^(0+128),w
 19969  0779  043D               	iorwf	___fladd@b^(0+128),w
 19970  077A  1D03               	skipz
 19971  077B  2F9C               	goto	l6862
 19972  077C  0854               	movf	___fladd@grs^(0+128),w
 19973  077D  1D03               	btfss	3,2
 19974  077E  2F9C               	goto	l6862
 19975  077F  3000               	movlw	0
 19976  0780  00C0               	movwf	(?___fladd+3)^(0+128)
 19977  0781  3000               	movlw	0
 19978  0782  00BF               	movwf	(?___fladd+2)^(0+128)
 19979  0783  3000               	movlw	0
 19980  0784  00BE               	movwf	(?___fladd+1)^(0+128)
 19981  0785  3000               	movlw	0
 19982  0786  00BD               	movwf	?___fladd^(0+128)
 19983  0787  0008               	return
 19984  0788                     l6848:	
 19985  0788  3001               	movlw	1
 19986  0789                     u8895:	
 19987  0789  35BD               	lslf	___fladd@b^(0+128),f
 19988  078A  0DBE               	rlf	(___fladd@b+1)^(0+128),f
 19989  078B  0DBF               	rlf	(___fladd@b+2)^(0+128),f
 19990  078C  0DC0               	rlf	(___fladd@b+3)^(0+128),f
 19991  078D  0B89               	decfsz	9,f
 19992  078E  2F89               	goto	u8895
 19993  078F  1BD4               	btfsc	___fladd@grs^(0+128),7
 19994  0790  143D               	bsf	___fladd@b^(0+128),0
 19995  0791  1C54               	btfss	___fladd@grs^(0+128),0
 19996  0792  2F95               	goto	l6856
 19997  0793  1403               	setc
 19998  0794  2F96               	goto	L12
 19999  0795                     l6856:	
 20000  0795  1003               	clrc
 20001  0796                     L12:	
 20002  0796  0DD4               	rlf	___fladd@grs^(0+128),f
 20003  0797  0853               	movf	___fladd@bexp^(0+128),w
 20004  0798  1903               	btfsc	3,2
 20005  0799  2F9C               	goto	l6862
 20006  079A  3001               	movlw	1
 20007  079B  02D3               	subwf	___fladd@bexp^(0+128),f
 20008  079C                     l6862:	
 20009  079C  1FBF               	btfss	(___fladd@b+2)^(0+128),7
 20010  079D  2F88               	goto	l6848
 20011  079E                     l6864:	
 20012  079E  01D2               	clrf	___fladd@aexp^(0+128)
 20013  079F  1FD4               	btfss	___fladd@grs^(0+128),7
 20014  07A0  2FA9               	goto	l6874
 20015  07A1  0854               	movf	___fladd@grs^(0+128),w
 20016  07A2  397F               	andlw	127
 20017  07A3  1D03               	btfss	3,2
 20018  07A4  2FA7               	goto	l6872
 20019  07A5  1C3D               	btfss	___fladd@b^(0+128),0
 20020  07A6  2FA9               	goto	l6874
 20021  07A7                     l6872:	
 20022  07A7  01D2               	clrf	___fladd@aexp^(0+128)
 20023  07A8  0AD2               	incf	___fladd@aexp^(0+128),f
 20024  07A9                     l6874:	
 20025  07A9  0852               	movf	___fladd@aexp^(0+128),w
 20026  07AA  1903               	btfsc	3,2
 20027  07AB  2FD5               	goto	l1332
 20028  07AC  3001               	movlw	1
 20029  07AD  07BD               	addwf	___fladd@b^(0+128),f
 20030  07AE  3000               	movlw	0
 20031  07AF  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 20032  07B0  3000               	movlw	0
 20033  07B1  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 20034  07B2  3000               	movlw	0
 20035  07B3  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 20036  07B4  1C40               	btfss	(___fladd@b+3)^(0+128),0
 20037  07B5  2FD5               	goto	l1332
 20038  07B6  083D               	movf	___fladd@b^(0+128),w
 20039  07B7  00C5               	movwf	??___fladd^(0+128)
 20040  07B8  083E               	movf	(___fladd@b+1)^(0+128),w
 20041  07B9  00C6               	movwf	(??___fladd^(0+128)+1)
 20042  07BA  083F               	movf	(___fladd@b+2)^(0+128),w
 20043  07BB  00C7               	movwf	(??___fladd^(0+128)+2)
 20044  07BC  0840               	movf	(___fladd@b+3)^(0+128),w
 20045  07BD  00C8               	movwf	(??___fladd^(0+128)+3)
 20046  07BE  3001               	movlw	1
 20047  07BF  00C9               	movwf	(??___fladd+4)^(0+128)
 20048  07C0                     u8995:	
 20049  07C0  37C8               	asrf	(??___fladd^(0+128)+3),f
 20050  07C1  0CC7               	rrf	(??___fladd^(0+128)+2),f
 20051  07C2  0CC6               	rrf	(??___fladd^(0+128)+1),f
 20052  07C3  0CC5               	rrf	??___fladd^(0+128),f
 20053  07C4  0BC9               	decfsz	(??___fladd+4)^(0+128),f
 20054  07C5  2FC0               	goto	u8995
 20055  07C6  0848               	movf	(??___fladd+3)^(0+128),w
 20056  07C7  00C0               	movwf	(___fladd@b+3)^(0+128)
 20057  07C8  0847               	movf	(??___fladd+2)^(0+128),w
 20058  07C9  00BF               	movwf	(___fladd@b+2)^(0+128)
 20059  07CA  0846               	movf	(??___fladd+1)^(0+128),w
 20060  07CB  00BE               	movwf	(___fladd@b+1)^(0+128)
 20061  07CC  0845               	movf	??___fladd^(0+128),w
 20062  07CD  00BD               	movwf	___fladd@b^(0+128)
 20063  07CE  0A53               	incf	___fladd@bexp^(0+128),w
 20064  07CF  1903               	btfsc	3,2
 20065  07D0  2FD5               	goto	l1332
 20066  07D1  3001               	movlw	1
 20067  07D2  00C5               	movwf	??___fladd^(0+128)
 20068  07D3  0845               	movf	??___fladd^(0+128),w
 20069  07D4  07D3               	addwf	___fladd@bexp^(0+128),f
 20070  07D5                     l1332:	
 20071  07D5  0A53               	incf	___fladd@bexp^(0+128),w
 20072  07D6  1D03               	btfss	3,2
 20073  07D7  0853               	movf	___fladd@bexp^(0+128),w
 20074  07D8  1D03               	btfss	3,2
 20075  07D9  2FE5               	goto	l6892
 20076  07DA  3000               	movlw	0
 20077  07DB  00C0               	movwf	(___fladd@b+3)^(0+128)
 20078  07DC  3000               	movlw	0
 20079  07DD  00BF               	movwf	(___fladd@b+2)^(0+128)
 20080  07DE  3000               	movlw	0
 20081  07DF  00BE               	movwf	(___fladd@b+1)^(0+128)
 20082  07E0  3000               	movlw	0
 20083  07E1  00BD               	movwf	___fladd@b^(0+128)
 20084  07E2  0853               	movf	___fladd@bexp^(0+128),w
 20085  07E3  1903               	btfsc	3,2
 20086  07E4  01D1               	clrf	___fladd@signs^(0+128)
 20087  07E5                     l6892:	
 20088  07E5  1C53               	btfss	___fladd@bexp^(0+128),0
 20089  07E6  2FE9               	goto	l6896
 20090  07E7  17BF               	bsf	(___fladd@b^(0+128)+2),7
 20091  07E8  2FED               	goto	l1340
 20092  07E9                     l6896:	
 20093  07E9  307F               	movlw	127
 20094  07EA  00C5               	movwf	??___fladd^(0+128)
 20095  07EB  0845               	movf	??___fladd^(0+128),w
 20096  07EC  05BF               	andwf	(___fladd@b^(0+128)+2),f
 20097  07ED                     l1340:	
 20098  07ED  3653               	lsrf	___fladd@bexp^(0+128),w
 20099  07EE  00C5               	movwf	??___fladd^(0+128)
 20100  07EF  0845               	movf	??___fladd^(0+128),w
 20101  07F0  00C0               	movwf	(___fladd@b^(0+128)+3)
 20102  07F1  1FD1               	btfss	___fladd@signs^(0+128),7
 20103  07F2  0008               	return
 20104  07F3  17C0               	bsf	(___fladd@b^(0+128)+3),7
 20105  07F4  0008               	return
 20106  07F5                     __end_of___fladd:	
 20107                           
 20108                           	psect	intentry
 20109  0004                     __pintentry:	
 20110 ;; *************** function _ISR *****************
 20111 ;; Defined at:
 20112 ;;		line 176 in file "main.c"
 20113 ;; Parameters:    Size  Location     Type
 20114 ;;		None
 20115 ;; Auto vars:     Size  Location     Type
 20116 ;;		None
 20117 ;; Return value:  Size  Location     Type
 20118 ;;                  1    wreg      void 
 20119 ;; Registers used:
 20120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20121 ;; Tracked objects:
 20122 ;;		On entry : 0/0
 20123 ;;		On exit  : 0/0
 20124 ;;		Unchanged: 0/0
 20125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20128 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20129 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20130 ;;Total ram usage:        2 bytes
 20131 ;; Hardware stack levels used:    1
 20132 ;; Hardware stack levels required when called:    1
 20133 ;; This function calls:
 20134 ;;		_uartDisable
 20135 ;; This function is called by:
 20136 ;;		Interrupt level 1
 20137 ;; This function uses a non-reentrant model
 20138 ;;
 20139                           
 20140  0004                     _ISR:	
 20141                           
 20142                           ;incstack = 0
 20143  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 20144                           
 20145                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 20146  0005  3180               	pagesel	$
 20147  0006  0020               	movlb	0	; select bank0
 20148  0007  087F               	movf	127,w
 20149  0008  00F1               	movwf	??_ISR+1
 20150                           
 20151                           ;main.c: 178: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 20152  0009  190B               	btfsc	11,2	;volatile
 20153  000A  1E8B               	btfss	11,5	;volatile
 20154  000B  283B               	goto	i1l6130
 20155                           
 20156                           ;main.c: 179: k ++;
 20157  000C  3001               	movlw	1
 20158  000D  0025               	movlb	5	; select bank5
 20159  000E  07A4               	addwf	_k^(0+640),f
 20160  000F  3000               	movlw	0
 20161  0010  3DA5               	addwfc	(_k+1)^(0+640),f
 20162                           
 20163                           ;main.c: 180: if(k >= 3){
 20164  0011  0825               	movf	(_k+1)^(0+640),w
 20165  0012  3A80               	xorlw	128
 20166  0013  00F0               	movwf	??_ISR
 20167  0014  3080               	movlw	128
 20168  0015  0270               	subwf	??_ISR,w
 20169  0016  1D03               	skipz
 20170  0017  281A               	goto	u795_25
 20171  0018  3003               	movlw	3
 20172  0019  0224               	subwf	_k^(0+640),w
 20173  001A                     u795_25:	
 20174  001A  1C03               	skipc
 20175  001B  2827               	goto	i1l6122
 20176                           
 20177                           ;main.c: 181: currentBool = 1;
 20178  001C  3001               	movlw	1
 20179  001D  0025               	movlb	5	; select bank5
 20180  001E  00A0               	movwf	_currentBool^(0+640)
 20181  001F  3000               	movlw	0
 20182  0020  00A1               	movwf	(_currentBool^(0+640)+1)
 20183                           
 20184                           ;main.c: 182: k=0;
 20185  0021  01A4               	clrf	_k^(0+640)
 20186  0022  01A5               	clrf	(_k+1)^(0+640)
 20187                           
 20188                           ;main.c: 183: j++;
 20189  0023  3001               	movlw	1
 20190  0024  07A6               	addwf	_j^(0+640),f
 20191  0025  3000               	movlw	0
 20192  0026  3DA7               	addwfc	(_j+1)^(0+640),f
 20193  0027                     i1l6122:	
 20194                           
 20195                           ;main.c: 184: }
 20196                           ;main.c: 186: if(j>=10000){
 20197  0027  0025               	movlb	5	; select bank5
 20198  0028  0827               	movf	(_j+1)^(0+640),w
 20199  0029  3A80               	xorlw	128
 20200  002A  00F0               	movwf	??_ISR
 20201  002B  30A7               	movlw	167
 20202  002C  0270               	subwf	??_ISR,w
 20203  002D  1D03               	skipz
 20204  002E  2831               	goto	u796_25
 20205  002F  3010               	movlw	16
 20206  0030  0226               	subwf	_j^(0+640),w
 20207  0031                     u796_25:	
 20208  0031  1C03               	skipc
 20209  0032  283A               	goto	i1l6128
 20210                           
 20211                           ;main.c: 187: uartBool = 1;
 20212  0033  3001               	movlw	1
 20213  0034  0025               	movlb	5	; select bank5
 20214  0035  00A2               	movwf	_uartBool^(0+640)
 20215  0036  3000               	movlw	0
 20216  0037  00A3               	movwf	(_uartBool^(0+640)+1)
 20217                           
 20218                           ;main.c: 188: j = 0;
 20219  0038  01A6               	clrf	_j^(0+640)
 20220  0039  01A7               	clrf	(_j+1)^(0+640)
 20221  003A                     i1l6128:	
 20222                           
 20223                           ;main.c: 189: }
 20224                           ;main.c: 190: INTCONbits.TMR0IF = 0;
 20225  003A  110B               	bcf	11,2	;volatile
 20226  003B                     i1l6130:	
 20227                           
 20228                           ;main.c: 191: }
 20229                           ;main.c: 193: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 20230  003B  0021               	movlb	1	; select bank1
 20231  003C  1C91               	btfss	17,1	;volatile
 20232  003D  2848               	goto	i1l6138
 20233  003E  0020               	movlb	0	; select bank0
 20234  003F  1C91               	btfss	17,1	;volatile
 20235  0040  2848               	goto	i1l6138
 20236                           
 20237                           ;main.c: 194: currentBool = 1;
 20238  0041  3001               	movlw	1
 20239  0042  0025               	movlb	5	; select bank5
 20240  0043  00A0               	movwf	_currentBool^(0+640)
 20241  0044  3000               	movlw	0
 20242  0045  00A1               	movwf	(_currentBool^(0+640)+1)
 20243                           
 20244                           ;main.c: 195: PIR1bits.TMR2IF = 0;
 20245  0046  0020               	movlb	0	; select bank0
 20246  0047  1091               	bcf	17,1	;volatile
 20247  0048                     i1l6138:	
 20248                           
 20249                           ;main.c: 196: }
 20250                           ;main.c: 198: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 20251  0048  0020               	movlb	0	; select bank0
 20252  0049  1E11               	btfss	17,4	;volatile
 20253  004A  2868               	goto	i1l6152
 20254  004B  0021               	movlb	1	; select bank1
 20255  004C  1E11               	btfss	17,4	;volatile
 20256  004D  2868               	goto	i1l6152
 20257                           
 20258                           ;main.c: 199: if(str[z] != '\0'){
 20259  004E  087A               	movf	_z,w
 20260  004F  3EAA               	addlw	(low (_str| (0+512)))& (0+255)
 20261  0050  0086               	movwf	6
 20262  0051  3002               	movlw	2	; select bank5/6
 20263  0052  0087               	movwf	7
 20264  0053  0801               	movf	1,w
 20265  0054  1903               	btfsc	3,2
 20266  0055  2863               	goto	i1l6148
 20267                           
 20268                           ;main.c: 200: TXREG = str[z];
 20269  0056  087A               	movf	_z,w
 20270  0057  3EAA               	addlw	(low (_str| (0+512)))& (0+255)
 20271  0058  0086               	movwf	6
 20272  0059  3002               	movlw	2	; select bank5/6
 20273  005A  0087               	movwf	7
 20274  005B  0801               	movf	1,w
 20275  005C  0023               	movlb	3	; select bank3
 20276  005D  009A               	movwf	26	;volatile
 20277                           
 20278                           ;main.c: 201: z++;
 20279  005E  3001               	movlw	1
 20280  005F  07FA               	addwf	_z,f
 20281  0060  3000               	movlw	0
 20282  0061  3DFB               	addwfc	_z+1,f
 20283                           
 20284                           ;main.c: 202: }else{
 20285  0062  2868               	goto	i1l6152
 20286  0063                     i1l6148:	
 20287                           
 20288                           ;main.c: 203: z = 0;
 20289  0063  01FA               	clrf	_z
 20290  0064  01FB               	clrf	_z+1
 20291                           
 20292                           ;main.c: 204: uartDisable();
 20293  0065  31AB  232B  3180   	fcall	_uartDisable
 20294  0068                     i1l6152:	
 20295                           
 20296                           ;main.c: 205: }
 20297                           ;main.c: 206: }
 20298                           ;main.c: 208: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 20299  0068  0020               	movlb	0	; select bank0
 20300  0069  1D91               	btfss	17,3	;volatile
 20301  006A  2870               	goto	i1l128
 20302  006B  0021               	movlb	1	; select bank1
 20303  006C  1D91               	btfss	17,3	;volatile
 20304  006D  2870               	goto	i1l128
 20305                           
 20306                           ;main.c: 209: PIR1bits.SSP1IF = 0;
 20307  006E  0020               	movlb	0	; select bank0
 20308  006F  1191               	bcf	17,3	;volatile
 20309  0070                     i1l128:	
 20310  0070  0871               	movf	??_ISR+1,w
 20311  0071  0020               	movlb	0	; select bank0
 20312  0072  00FF               	movwf	127
 20313  0073  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 20314  0074  0009               	retfie
 20315  0075                     __end_of_ISR:	
 20316                           
 20317                           	psect	text59
 20318  2B2B                     __ptext59:	
 20319 ;; *************** function _uartDisable *****************
 20320 ;; Defined at:
 20321 ;;		line 79 in file "uart.c"
 20322 ;; Parameters:    Size  Location     Type
 20323 ;;		None
 20324 ;; Auto vars:     Size  Location     Type
 20325 ;;		None
 20326 ;; Return value:  Size  Location     Type
 20327 ;;                  1    wreg      void 
 20328 ;; Registers used:
 20329 ;;		None
 20330 ;; Tracked objects:
 20331 ;;		On entry : 0/0
 20332 ;;		On exit  : 0/0
 20333 ;;		Unchanged: 0/0
 20334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20339 ;;Total ram usage:        0 bytes
 20340 ;; Hardware stack levels used:    1
 20341 ;; This function calls:
 20342 ;;		Nothing
 20343 ;; This function is called by:
 20344 ;;		_ISR
 20345 ;; This function uses a non-reentrant model
 20346 ;;
 20347                           
 20348                           
 20349                           ;psect for function _uartDisable
 20350  2B2B                     _uartDisable:	
 20351                           
 20352                           ;uart.c: 80: PIE1bits.TXIE = 0;
 20353                           
 20354                           ;incstack = 0
 20355                           ; Regs used in _uartDisable: []
 20356  2B2B  0021               	movlb	1	; select bank1
 20357  2B2C  1211               	bcf	17,4	;volatile
 20358  2B2D  0008               	return
 20359  2B2E                     __end_of_uartDisable:	
 20360  007E                     btemp	set	126	;btemp
 20361  007E                     int$flags	set	126
 20362  007E                     wtemp0	set	126


Data Sizes:
    Strings     150
    Constant    2003
    Data        13
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     77      80
    BANK3            80     80      80
    BANK4            80     74      80
    BANK5            80      0      73
    BANK6            80      0      24
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[20]), STR_5(CODE[15]), 
		 -> STR_4(CODE[19]), STR_3(CODE[38]), STR_2(CODE[23]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> str(BANK5[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdaux@data(COMMON[8]), LTC6804_rdcv@cell_data(BANK0[8]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdstat_reg@cmd(COMMON[4]), 

    spi_write_array@data	PTR unsigned char  size(1) Largest target is 12
		 -> LTC6804_wrcfg@cmd(BANK0[12]), LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), LTC6804_adstat@cmd(COMMON[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 8
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), LTC6804_rdaux@data(COMMON[8]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK5[2]), ADCV(BANK5[2]), 
		 -> ADSTAT(BANK5[2]), LTC6804_rdstat_reg@cmd(COMMON[4]), configReg(BANK4[6]), 

    LTC6804_wrcfg@config	PTR unsigned char [6] size(1) Largest target is 6
		 -> configReg(BANK4[6]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR unsigned int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK2[24]), 

    cellBalancing@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    measureVoltages@totalVoltage	PTR float  size(2) Largest target is 4
		 -> startUp@totalVoltage(COMMON[4]), main@totalVoltage(BANK4[4]), 

    sumVoltages@voltages	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> main@voltages(BANK4[48]), 

    avgBuff@buff	PTR float  size(1) Largest target is 80
		 -> main@currentBuff(BANK3[80]), 

    getTemps@temperatures	PTR int  size(1) Largest target is 10
		 -> main@temps(BANK4[10]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    _LTC6804_initialize->_LTC6804_wrcfg
    _measureVoltages->_LTC6804_adcv
    _cellBalancing->_LTC6804_wrcfg
    _LTC6804_wrcfg->_spi_write_array
    _LTC6804_rdcv_reg->_spi_write_read
    _spi_write_read->___bmul
    _LTC6804_adcv->_spi_write_array
    _spi_write_array->_spi_write
    _pec15_calc->___bmul
    ___flmul->___awdiv
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->_fround
    _sprintf->_scale
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    _setup->_LTC6804_initialize
    _LTC6804_initialize->_LTC6804_wrcfg
    _LTC6804_wrcfg->_pec15_calc
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    ___fltol->_scale
    ___flmul->___fldiv
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _writeValuesToUart->_writeTemps
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___flge
    ___flsub->___fladd
    _measureVoltages->_cellBalancing
    _sumVoltages->___fladd
    _cellBalancing->___flge
    ___flge->___fladd
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    ___fltol->_scale
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fladd
    _avgBuff->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _measureVoltages->_cellBalancing

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               159   159      0  327226
                                             72 BANK2      5     5      0
                                              0 BANK3     80    80      0
                                              0 BANK4     74    74      0
                             ___flge
                            _avgBuff
                      _cellBalancing
                         _getCurrent
                           _getTemps
                    _measureVoltages
                              _setup
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   18     1     17  232887
                                             54 BANK2     18     1     17
                        _clearScreen
                       _writeCurrent
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                       21    15      6   63958
                                             33 BANK2     21    15      6
                            ___fladd
                             ___flge
                            ___flneg
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                           8     4      4   56183
                                             79 BANK1      1     1      0
                                             33 BANK2      7     3      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         4     0      4   55896
                                             33 BANK2      4     0      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   55936
                                             33 BANK2      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (3) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             48    38     10   55775
                                             69 BANK1     10     0     10
                                              0 BANK2     33    33      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   11520
                                             76 BANK0      4     0      4
                                              0 BANK1     21    21      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4   11241
                                             76 BANK0      4     0      4
                                              0 BANK1     29    29      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4447
                                             53 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     245
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3763
                 _LTC6804_initialize
                           _adcSetup
                           _i2cSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_initialize                                   1     1      0    3763
                                             38 BANK0      1     1      0
                      _LTC6804_wrcfg
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                              7     4      3     564
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _measureVoltages                                     38    34      4   42704
                                             73 BANK1      4     0      4
                                             10 BANK2     34    34      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                      _cellBalancing
                        _sumVoltages
 ---------------------------------------------------------------------------------
 (2) _sumVoltages                                         13     9      4    4652
                                             53 BANK1     13     9      4
                            ___fladd
 ---------------------------------------------------------------------------------
 (2) _cellBalancing                                       14    12      2   11363
                                             69 BANK1      4     2      2
                                              0 BANK2     10    10      0
                      _LTC6804_wrcfg
                            ___fladd
                             ___flge
                       _setDischarge
 ---------------------------------------------------------------------------------
 (3) _setDischarge                                         4     1      3     438
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2786
                                             53 BANK1     16     8      8
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (3) _LTC6804_wrcfg                                       24    23      1    3199
                                              9 COMMON     1     0      1
                                             15 BANK0     23    23      0
                             ___bmul
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (2) _LTC6804_rdcv                                        29    27      2   11537
                                             28 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2366
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv_reg                                    13    11      2    5112
                                             15 BANK0     13    11      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                       8     5      3    2164
                                              6 COMMON     3     0      3
                                              0 BANK0      5     5      0
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_read                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     790
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _LTC6804_adcv                                         7     7      0    1803
                                              9 COMMON     1     1      0
                                             15 BANK0      6     6      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (4) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _spi_write_array                                      4     3      1     417
                                              5 COMMON     4     3      1
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_write                                            3     3      0      23
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _pec15_calc                                          17    15      2    1245
                                              6 COMMON     2     0      2
                                              0 BANK0     15    15      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _getTemps                                            11     9      2   11341
                                             40 BANK1     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                        8     6      2   10538
                                             32 BANK1      8     6      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     787
                                             21 BANK1     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCurrent                                           8     4      4   14098
                                             65 BANK1      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (2) _calculateCurrent                                    12     8      4   12971
                                             53 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    6593
                                             50 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _adcRead                                             16    14      2     133
                                              2 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _avgBuff                                             13     9      4    7473
                                             53 BANK1     13     9      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     926
                                              4 COMMON     4     4      0
                                             14 BANK0     10     6      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1987
                                             24 BANK0     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    4202
                                             29 BANK1     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                        _uartDisable
 ---------------------------------------------------------------------------------
 (8) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___flge
     ___fladd (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   _avgBuff
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _cellBalancing
     _LTC6804_wrcfg
       ___bmul
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     _setDischarge
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
   _measureVoltages
     _LTC6804_adcv
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdcv
       _LTC6804_rdcv_reg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_read
           ___bmul (ARG)
           _spi_read (ARG)
           _spi_write (ARG)
         _wakeup_idle
       ___bmul
       ___wmul
       _pec15_calc
         ___bmul (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
       ___fladd (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
     _cellBalancing
       _LTC6804_wrcfg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       _setDischarge
     _sumVoltages
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
   _setup
     _LTC6804_initialize
       _LTC6804_wrcfg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _set_adc
     _adcSetup
     _i2cSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeVoltages
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
         ___fladd (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
       ___flneg
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
           ___fladd (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable

 _ISR (ROOT)
   _uartDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     4D      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50     50      50      11      100.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50     4A      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1FD      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      49      16       91.3%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      18      18       30.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1FD      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 12 15:29:30 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003C  
                         ___fldiv@aexp 0051                           ___fldiv@bexp 0050  
                                    _j 02A6                                      _k 02A4  
                                    _n 02A8                                      _z 007A  
                                    pc 0002                           ___fldiv@sign 0045  
                       ___bmul@product 0074                            __CFG_CP$OFF 0000  
                          _SSPSTATbits 0214                                     l91 1E1F  
                                   l88 1DEB                           ___awdiv@sign 0025  
                                   _t0 3159                         ?_LTC6804_wrcfg 0079  
                  ___wmul@multiplicand 0074                sumVoltages@totalVoltage 00DC  
                      writeTemps@temps 0145                    __Umul8_16@word_mpld 0022  
             writeValuesToUart@current 0161                                    l241 13BE  
                                  l260 2014                                    l236 130F  
                                  l245 13E3                                    l190 2F6C  
                                  l254 2C53                                    l262 2049  
                                  l248 1464                                    l186 21BE  
                                  l274 2D32                                    l266 2066  
                                  l614 26E4                                    l278 2D47  
                                  l650 1E91                                    l657 1F51  
                                  l913 0F0F                                    l861 0AB8  
                                  l853 096C                                    l838 08D3  
                                  l792 2B6F                                    l786 2B64  
                                  _PR2 001B                           __CFG_CPD$OFF 0000  
                                  _ISR 0004                __end_of_measureVoltages 2800  
                                  _cmd 016D                                    _str 02AA  
                    SSD1306_Test@F7528 02E7                            _sumVoltages 2E60  
                         ___awmod@sign 0078                           __CFG_BORV$LO 0000  
                                  wreg 0009                           __CFG_FOSC$HS 0000  
                         ___flmul@aexp 0060                           ___flmul@bexp 0065  
                         ___flmul@sign 005F                           ___flmul@temp 006A  
                         ___flmul@prod 0066                                   S8452 2800  
                         __CFG_LVP$OFF 0000                                   ?_ISR 0070  
                         ___fltol@exp1 00BF                                   l1200 2537  
                                 l1019 2BE6                                   l1302 06DE  
                                 l1304 06C1                                   l1163 240E  
                                 l1340 07ED                                   l1332 07D5  
                                 l1148 2578                                   l1413 237B  
                                 l1406 05EC                                   l1182 2135  
                                 l1158 25FC                                   l1190 24BE  
                                 l1319 0776                                   l1432 2C28  
                                 l1354 14B1                                   l1426 23C5  
                                 l1427 23CF                                   l1419 23B1  
                                 l1375 15C1                                   l1376 15D9  
                                 l1298 0646                                   l1378 15E6  
                                 l4500 2E18                                   l5300 26AC  
                                 l4502 2E5B                                   l5302 26B3  
                                 l7000 056B                                   l5312 26CE  
                                 l7010 0584                                   l5306 26BD  
                                 l5242 2609                                   l7020 05AD  
                                 l5308 26C4                                   l5260 263C  
                                 l5252 2624                                   l5316 26D5  
                                 l7030 05D9                                   l4534 2BCB  
                                 l5350 082E                                   l5270 2657  
                                 l5254 262B                                   l5246 2613  
                                 l7110 0328                                   l7102 023D  
                                 l5512 1550                                   l5432 1482  
                                 l7024 05C2                                   l7008 0582  
                                 l5344 0825                                   l5272 265E  
                                 l5264 2646                                   l5248 261A  
                                 l5522 157E                                   l5514 1567  
                                 l4730 2B86                                   l7050 2C94  
                                 l5370 088F                                   l5290 2691  
                                 l5282 2679                                   l5266 264D  
                                 l5258 2635                                   l5524 1580  
                                 l5452 14A6                                   l5436 1485  
                                 l5284 2680                                   l5276 2668  
                                 l7212 25BD                                   l7204 259D  
                                 l7116 03A7                                   l5534 15A9  
                                 l5462 14CC                                   l5438 148D  
                                 l4734 2B8C                                   l5358 085A  
                                 l5294 269B                                   l5278 266F  
                                 l7230 25F3                                   l7222 25D8  
                                 l5456 14A9                                   l7056 2C95  
                                 l7048 2C80                                   l5296 26A2  
                                 l5288 268A                                   l8032 2738  
                                 l8024 2715                                   l7232 25FF  
                                 l7224 25E6                                   l7160 24F9  
                                 l7152 24DF                                   l7128 200E  
                                 l7410 23EA                                   l7314 212C  
                                 l7306 2111                                   l8042 27DA  
                                 l7170 2513                                   l7138 24A6  
                                 l5548 15E2                                   l5468 14E0  
                                 l7316 2138                                   l7308 211F  
                                 l7260 2451                                   l7340 2F4E  
                                 l7180 253A                                   l7172 2521  
                                 l6700 2E04                                   l7076 17C6  
                                 l7068 1716                                   l7092 0198  
                                 l8116 1D22                                   l5494 1545  
                                 l7238 2BE0                                   l8046 27EA  
                                 l8038 2746                                   l7326 2F15  
                                 l7350 2D92                                   l7190 255E  
                                 l7510 0AFC                                   l7430 08E4  
                                 l7422 08CE                                   l8150 1DFD  
                                 l5488 152C                                   l5496 150E  
                                 l6616 2C22                                   l7264 247A  
                                 l7256 2428                                   l7336 2F43  
                                 l7328 2F23                                   l7352 2DA0  
                                 l7360 2DC3                                   l6640 2EC8  
                                 l6704 2E0C                                   l7504 0A96  
                                 l8144 1DBA                                   l8136 1DA7  
                                 l6722 0613                                   l5498 154A  
                                 l8090 21D4                                   l7290 20E3  
                                 l8066 21B8                                   l7178 252E  
                                 l6650 2ED0                                   l6634 2EBD  
                                 l7098 0217                                   l7602 0D34  
                                 l7522 0B53                                   l7434 08F1  
                                 l7442 0922                                   l8138 1DAA  
                                 _ADAX 02DE                                   l6820 0700  
                                 l6812 06EC                                   l6804 06D9  
                                 l8092 2210                                   l8068 216B  
                                 l7356 2DB8                                   l6652 2EDC  
                                 l7532 0B91                                   l7428 08DA  
                                 l8156 1E2F                                   l8148 1DE6  
                                 _ADCV 02E0                                   l6822 0702  
                                 l6830 0711                                   l6750 063E  
                                 l6726 0616                                   l7382 238A  
                                 l6662 2EF7                                   l7702 0F70  
                                 l7710 0F85                                   l7542 0C02  
                                 l7518 0B34                                   l7470 099E  
                                 l7462 096E                                   l7454 0935  
                                 l6840 076E                                   l6728 061E  
                                 l7376 2373                                   l6920 03F1  
                                 l7800 1CF6                                   l7712 0F89  
                                 l7632 0E65                                   l7616 0D6B  
                                 l7608 0D4E                                   l7552 0C4C  
                                 l7536 0BFC                                   l7480 09E2  
                                 l7640 0E7A                                   l7464 098E  
                                 l7456 0967                                   l6746 063B  
                                 l7394 23B6                                   l7386 238E  
                                 l8450 26DA                                   l7810 2E6C  
                                 l6666 2EFF                                   l6658 2EEE  
                                 l6690 2DE3                                   l6682 2DDD  
                                 l7730 0FB3                                   l7650 0E9F  
                                 l7570 0C72                                   l6756 0650  
                                 l7396 23BF                                   l7388 239E  
                                 l6916 03E7                                   l7812 2EA8  
                                 l6692 2DEF                                   l7572 0C8F  
                                 l7556 0C5A                                   l7548 0C2F  
                                 l7732 08A5                        spi_write_read@i 0022  
                                 l6862 079C                                   l6934 040A  
                                 l6918 03E9                                   l6678 2DD6  
                                 l7718 0F9D                                   l7662 0EB3  
                                 l7638 0E75                                   l7734 0FFA  
                                 l6872 07A7                                   l6856 0795  
                                 l6848 0788                                   l6864 079E  
                                 l6936 040C                                   l7752 2FB8  
                                 l6696 2DFB                                   l7680 0F22  
                                 l7672 0EF7                                   l7656 0EAD  
                                 l7496 0A2E                                   l6874 07A9  
                                 l6794 06C9                                   l6786 068C  
                                 l6946 0422                                   l6938 0414  
                                 l7746 2FB2                                   l7594 0CC3  
                                 l7578 0CA0                                   l6892 07E5  
                                 l6796 06CB                                   l7764 2FC7  
                                 l7692 0F55                                   l7668 0EE0  
                                 l7596 0D23                                   l7860 2D3B  
                                 l7758 2FBE                                   l7950 1F3E  
                                 l7790 1C8D                                   l7694 0F58  
                                 l7686 0F36                                   l7870 1356  
                                 l6896 07E9                                   l7928 1E9E  
                                 l7688 0F39                                   l7880 13C7  
                    spi_write@readData 0073                                   l7946 1F34  
                                 l7938 1EF3                                   l7954 1F43  
                                 l7786 1C87                                   l7858 2D14  
                                 l7874 1390                                   l7964 1F5E  
                                 l7788 1C2F                                   l6998 0554  
                                 l7982 1FF4                                   l7974 1FB3  
                                 l7798 1C90                                   l7986 1FFE  
                                 l7898 2052                                   STR_1 3136  
                                 STR_2 30E9                                   STR_3 30C3  
                                 STR_4 3114                                   STR_5 3127  
                                 STR_6 3100                                   STR_7 3150  
                                 STR_8 3145                                   u5145 2E2E  
                                 u7005 1553                                   u7105 15B2  
                                 u7025 155C                                   u7115 15CB  
                                 u7095 1597                                   u6715 0806  
                                 u9215 0560                                   u8425 2C29  
                                 u9305 05CC                                   u9145 0498  
                                 u8505 2EE7                                   u9155 04C7  
                                 u8515 2EEF                                   u9165 051D  
                                 u6765 207A                                   u8605 2DFC  
                                 u6935 1516                                   u9175 0534  
                                 u6775 2085                                   u6945 151D  
                                 u9185 0543                                   u6785 209E  
                                 u8730 06B0                                   u9195 0557  
                                 u6795 20BA                                   u9515 2514  
                                 u8475 2ED3                                   u8740 06B1  
                                 u8725 06A5                                   u6965 1526  
                                 u9285 059B                                   u9605 25BE  
                                 u6975 153A                                   u9295 05B6  
                                 u9455 24E0                                   u8495 2EDD  
                                 u8575 2DE6                                   u9705 2BE7  
                                 u9545 252F                                   u9465 24F0  
                                 u9715 2BEC                                   u9475 24FA  
                                 u8595 2DF5                                   u8853 0723  
                                 u8845 0706                                   u9805 20EC  
                                 u9645 25D9                                   u8775 06CF  
                                 u9905 2F18                                   u9585 259E  
                                 u9835 2112                                   u9675 25F4  
                                 u9595 25B2                                   u9925 2F24  
                                 u8895 0789                                   u9935 2F38  
                                 u9865 212D                                   u9945 2F44  
                                 u8995 07C0                                   u9975 2D95  
                                 u9995 2DAE                                   _WPUD 020F  
                          main@current 0262                                   _Beta 315D  
                         __CFG_WRT$OFF 0000                 __end_of_spi_write_read 2CAC  
                        __CFG_FCMEN$ON 0000                                   _main 1CFF  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                           spi_read@data 0073  
                        __CFG_BOREN$ON 0000                                   start 0075  
                        __CFG_IESO$OFF 0000                        ___fldiv@new_exp 004A  
                         _sprintf$2170 0126                    cellBalancing@i_1295 0127  
                       ??_LTC6804_adcv 0079                      ___bmul@multiplier 0075  
                        __CFG_MCLRE$ON 0000                         ??_LTC6804_rdcv 003E  
                       writeVoltages@k 0154                                  ??_ISR 0070  
                    ?_LTC6804_rdcv_reg 002F                          __CFG_PLLEN$ON 0000  
                     spi_write_array@i 0078                          ___fltol@sign1 00BE  
      writeValuesToUart@temperatureArr 015C             __size_of_writeValuesToUart 0033  
                      __end_of___fladd 07F5                                  ?_main 0070  
                      __end_of___fldiv 15F7                        __end_of_adcRead 2FAB  
                      __end_of___awdiv 2F04                        __end_of___flneg 2B60  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 2E11  
                   ??_LTC6804_rdcv_reg 0031                        __end_of___flmul 05F9  
                      __end_of___flsub 1C1F                        __end_of___fltol 2147  
                      __end_of___lldiv 2F57                                  u10005 2DB9  
                                u11005 1402                                  u10135 23D7  
                                u10055 2397                                  u11105 1F2E  
                                u10075 23AB                                  u11035 2022  
                                u11205 2744                                  u10325 0B32  
                                u10095 23B9                                  u11215 278A  
                                u10415 0C7B                                  u11305 21DE  
                                u11225 27A2                                  u10425 0CAA  
                                u11170 26F7                                  u11155 1FEE  
                                u10355 0C25                        ___awdiv@divisor 0020  
                                u11245 27C7                                  u10285 0AC2  
                                u11325 1D5C                                  u11255 27E8  
                                u10615 0F2E                                  u10455 0D3D  
                                u10295 0B06                                  u11335 1D7E  
                                u11265 27F4                        __end_of___llmod 2DCC  
                                u10625 0F48                                  u10545 0ED6  
                                u10465 0D49                                  u11345 1DB8  
                                u11275 21AA                                  u11195 2736  
                                u11355 1DCE                                  u11285 2175  
                                u10805 1CA3                                  u10565 0EEF  
                                u11365 1DE4                                  u11295 21E4  
                                u10815 1C9C                                  u10575 0F07  
                                u11375 1DFB                                  _T2CON 001C  
                                u10825 2E7C                                  u10905 1337  
                                u10835 2E76                                  u11395 1E2B  
                                u10765 1C42                                  u10925 135A  
                                u10855 2F85                                  u10935 1372  
                                u10785 1C71                                  u10795 1C3B  
                                u10875 2D24                                  u10955 13A3  
                                u10975 1319                                  u10895 131F  
                                u11767 1D18                                  u11777 2B51  
                                u11787 2F67                                  u10995 13EA  
                                i1l128 0070                        ___awdiv@counter 0024  
                                _TXREG 019A              LTC6804_wrcfg@current_byte 0043  
                      __end_of_avgBuff 224D                __end_of_spi_write_array 2BDE  
                   writeVoltages@volts 0153                        __end_of_dpowers 30C2  
                                _scale 00A8                        __end_of_isdigit 2010  
                                _setup 2C57                                  main@i 0268  
                      __end_of_set_adc 20C8                    clearScreen@numLines 0141  
                      ?_spi_write_read 0076                                  status 0003  
                                wtemp0 007E                        __end_of_sprintf 1000  
                         main@voltages 0220            LTC6804_rdcv@current_ic_1339 0055  
                __size_of_writeCurrent 0020                           __end_of_Beta 315F  
                 __size_of_clearScreen 003C                        __initialization 0077  
                         __end_of_main 1E75                        ??_LTC6804_wrcfg 002F  
                     __end_of_i2cSetup 2BB7                     writeTemps@numTemps 0143  
                       __CFG_LPBOR$OFF 0000                       __end_of_OledFont 1300  
                               ??_main 0168                           adcRead@total 002C  
                    ?_calculateCurrent 00D5                         set_adc@md_bits 0078  
                     ?_measureVoltages 00E9                   __size_of__tdiv_to_l_ 00B6  
                 cellBalancing@boolean 0120                     ??_calculateCurrent 007A  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 3163       writeValuesToUart@temperatureHigh 015F  
                  pec15_calc@remainder 002D                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                     ___llmod@dividend 002A                                 ?_scale 006C  
                               _ADRESH 009C                                 _ADRESL 009B  
                               _ADSTAT 02DC                       ___awdiv@dividend 0022  
writeValuesToUart@temperatureArrLength 015D                                 ?_setup 0070  
                     __end_of_adcSetup 2C17                           _writeCurrent 2C37  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELD 018F                                 i1l6122 0027  
                               i1l6130 003B                                 i1l6152 0068  
                               i1l6128 003A                                 i1l6138 0048  
                               i1l6148 0063                                 _SPBRGH 019C  
                               _SPBRGL 019B                                 u795_25 001A  
                               u796_25 0031                LTC6804_rdaux@BYT_IN_REG 3163  
                               _SSPADD 0212                                 _SSPBUF 0211  
                     __end_of___xxtofl 23F3                    writeVoltages@length 0141  
                       __CFG_PWRTE$OFF 0000                           ?_uartDisable 0070  
                     __end_of_getTemps 21C6                       __end_of__powers_ 3034  
     __end_ofLTC6804_rdaux_reg@REG_LEN 3162                                 ___flge 23F3  
                               ___bmul 2B84                           ?_timer0Setup 0070  
                   _writeVoltages$2166 014B                              ??___fladd 00C5  
                               ___wmul 2BDE                              ??___fldiv 0040  
                            ??_adcRead 0020                              ??___awdiv 0079  
                         ?_timer2Setup 0070                              ??___flneg 0076  
                       __CFG_STVREN$ON 0000                              ??___awmod 0076  
                            ??___flmul 005A                              ??___flsub 007A  
                            ??___fltol 00B9                              ??___lldiv 0020  
                        main@numFaults 025C                              ??___llmod 002E  
                               _fround 15F7                       ___awdiv@quotient 0026  
                      ___awmod@divisor 0072                              ??_avgBuff 00D9  
                      ___awmod@counter 0077                           ?_wakeup_idle 0070  
                     getTemps@numTemps 00C8                              ??_isdigit 0072  
                   __size_of__Umul8_16 0020                       __end_of_spiSetup 2BC9  
                            ??_set_adc 0075                       ?_spi_write_array 0075  
                     __end_of_spi_read 2B77                   __end_of_LTC6804_adcv 2CDC  
       __end_ofLTC6804_rdcv@BYT_IN_REG 3168                   __end_of_LTC6804_rdcv 2000  
                            ??_sprintf 0120                  LTC6804_wrcfg@total_ic 0042  
                           ___flge@ff1 00D5                             ___flge@ff2 00D9  
                         sumVoltages@i 00E0                           ___xxtofl@arg 0034  
                         ___xxtofl@exp 0033                           ___xxtofl@val 002E  
              __end_of__initialization 00A4                          spi_write@data 0074  
                           ___flneg@f1 0072                  calculateTemp@adcValue 00C0  
                           ___fltol@f1 00B5                LTC6804_rdaux@NUM_RX_BYT 3164  
                  ___bmul@multiplicand 0072        __end_ofLTC6804_rdcv@CELL_IN_REG 3167  
                    ltc6804@crc15Table 1800                             _crc15Table 1A00  
                       __pcstackCOMMON 0070                           __pidataBANK4 2B48  
                         __pidataBANK5 1300                          __end_of_scale 03CD  
                        __end_of_setup 2C7D                     _LTC6804_initialize 2B95  
               __size_of_writeVoltages 0161                         cellBalancing@i 0125  
                           __end_of_t0 315D                          ?_setDischarge 0072  
                           __div_to_l_ 2543                           ?_sumVoltages 00D5  
                  ?_LTC6804_initialize 0070                          adcRead@ansLow 002A  
                      __div_to_l_@exp1 002A                        __div_to_l_@cntr 0029  
                              ??_scale 00A0                        __div_to_l_@quot 0025  
                         sprintf@width 0137                                ??_setup 007A  
                           __pbssBANK2 016D                             __pbssBANK5 02A0  
                           __pbssBANK6 0320                              ?_i2cSetup 0070  
       __end_ofLTC6804_rdcv@NUM_RX_BYT 3169               LTC6804_rdaux@GPIO_IN_REG 3162  
                      __CFG_VCAPEN$OFF 0000              __end_ofltc6804@crc15Table 1A00  
                           _pec15_calc 2E11                          __div_to_l_@f1 0072  
                        __div_to_l_@f2 0076                    writeCurrent@current 0141  
                 ??_LTC6804_initialize 0046                      __end_of__Umul8_16 2C37  
                   spi_write_array@len 0077                             __pmaintext 1CFF  
              cellBalancing@minVoltage 0121                                ?___flge 00D5  
                              ?___bmul 0072                 __size_of_cellBalancing 00E0  
               LTC6804_rdcv@cell_codes 003D                                ?___wmul 0072  
                           __pintentry 0004               LTC6804_rdcv@data_counter 0058  
                           _getCurrent 2D4B                                _CCP2CON 029A  
    writeValuesToUart@voltageArrLength 0156                                ?_fround 006C  
                            ?_adcSetup 0070                       LTC6804_wrcfg@cmd 0033  
                       ??_setDischarge 0075               LTC6804_rdaux_reg@REG_LEN 3161  
                   __size_of_uartSetup 000D                 __size_of_calculateTemp 0087  
                            ?___xxtofl 002E                  cellBalancing@voltages 0129  
               measureVoltages@ltcData 012E                     __size_of_spi_write 000B  
                     ??_spi_write_read 0020                                _SSP1BUF 0211  
                            ?_getTemps 00C8                                _SSPCON1 0215  
                              _SSPSTAT 0214              __size_of_LTC6804_rdcv_reg 0055  
                           ??_i2cSetup 0072                          _writeVoltages 1307  
                 spi_write_read@i_1421 0023                   writeVoltages@maxCell 014F  
                 writeVoltages@minCell 0151                      __end_of__npowers_ 3068  
               LTC6804_wrcfg@cmd_index 0045                             _scale$2169 00B0  
                            ?_spiSetup 0070                   __size_of_uartDisable 0003  
                      __size_of___flge 009A                        __size_of___bmul 0011  
                            ?_spi_read 0070                                ___fladd 05F9  
                 spi_write_read@rx_len 0078                                ___fldiv 1468  
                              _adcRead 2F57                                ___awdiv 2EB2  
                              ___flneg 2B57                                ___awmod 2DCC  
                              ___flmul 03CD                   spi_write_read@tx_len 0076  
                              ___flsub 1C00                                ___fltol 20C8  
                              ___lldiv 2F04                        __size_of___wmul 001B  
                              ___llmod 2D89              writeVoltages@totalVoltage 0143  
                 __size_of_timer0Setup 0005                             ??_adcSetup 0072  
                 __size_of_timer2Setup 000B                        __size_of_fround 0209  
                              _avgBuff 21C6                                __ptext1 2CDC  
                              __ptext2 1307                                __ptext3 2010  
                              __ptext4 2C37                                __ptext5 2D0F  
                              __ptext6 2B2E                                __ptext7 089F  
                              __ptext8 00A8                                __ptext9 2002  
                __size_of_LTC6804_adcv 0030            writeValuesToUart@voltageArr 0167  
                         __size_of_ISR 0071                            ?__div_to_l_ 0072  
                __size_of_LTC6804_rdcv 018B                                _dpowers 309A  
                              _isdigit 2002                             ??___xxtofl 0074  
                     ___awmod@dividend 0074                   __size_of_wakeup_idle 0009  
               LTC6804_rdcv@current_ic 0053                                _set_adc 206A  
                        _cellBalancing 1C1F                             ??_getTemps 00CA  
                              _sprintf 089F                                clrloop0 2B3D  
                              main@soc 016B                             avgBuff@inc 00E0  
                 end_of_initialization 00A4                         ?_writeVoltages 0141  
      __end_ofLTC6804_rdcv_reg@REG_LEN 3166                                init_ram 2B42  
                              initloop 2B43              __size_of_calculateCurrent 0089  
                        ??_clearScreen 0143                          pec15_calc@len 002B  
                          ?_pec15_calc 0076                      __end_of_uartSetup 2B84  
                        _calculateTemp 224D               calculateCurrent@adcValue 00D5  
                      ___lldiv@divisor 0072                        ___lldiv@counter 0025  
                           _uartEnable 2B2E                   calculateCurrent@curr 00D9  
                           ??_spiSetup 0072                              _RCSTAbits 019D  
                    __end_of_spi_write 2B6B                           _LTC6804_adcv 2CAC  
                           ??_spi_read 0072                           _LTC6804_rdcv 1E75  
                       __tdiv_to_l_@f1 0072                         __tdiv_to_l_@f2 0076  
                          ?_getCurrent 00E1      __end_ofLTC6804_rdstat_reg@REG_LEN 30C3  
                __end_of_LTC6804_wrcfg 089F                          ??__tdiv_to_l_ 0020  
                           _timerSetup 2B36                    LTC6804_rdcv_reg@cmd 0037  
                  LTC6804_rdcv_reg@reg 003B                            ___fladd@grs 00D4  
                        ___xxtofl@sign 0032                              _TRISAbits 008C  
                            _TRISBbits 008D                         ?_cellBalancing 00E5  
                            _TRISCbits 008E                              _TRISDbits 008F  
                 __size_of_sumVoltages 0052                            ___fldiv@grs 004C  
                          ___fldiv@rem 0046               __size_of_measureVoltages 011B  
                     main@currentIndex 0266                            ___flmul@grs 0061  
                 __end_of_setDischarge 26E5                         ?_calculateTemp 00C0  
                            _TXSTAbits 019E                    __size_of__div_to_l_ 00C5  
            measureVoltages@errorCount 0147                   LTC6804_wrcfg@CMD_LEN 003F  
                  __end_of_clearScreen 2D4B                         __end_of___flge 248D  
                       __end_of___bmul 2B95                             _writeTemps 2010  
                       __end_of___wmul 2BF9                         __end_of_fround 1800  
                  __size_of_pec15_calc 004F                    start_initialization 0077  
                          __end_of_ISR 0075                    __end_of__tdiv_to_l_ 2543  
                 measureVoltages@F7579 0320                        ??_writeVoltages 0147  
                     _LTC6804_rdcv_reg 2FAB                    __size_of_getCurrent 003E  
             __size_of_spi_write_array 0015                        ___llmod@divisor 0026  
                    __size_of_i2cSetup 0011                        ___llmod@counter 002F  
                  getTemps@highestTemp 00CE                   LTC6804_wrcfg@cfg_pec 0040  
                          _APFCON1bits 011D                         adcRead@ansHigh 0028  
                          ?_uartEnable 0070                               ??___flge 00DD  
                             ??___bmul 0073                               ??___wmul 0076  
                            __Umul8_16 2C17                            __pdataBANK4 026A  
                          __pdataBANK5 02E2                               ??_fround 00A0  
                 getTemps@temperatures 00D0                        LTC6804_adcv@cmd 002F  
                          ?_timerSetup 0070                          sprintf@tmpval 012B  
                            ___fladd@a 00C1                              ___fladd@b 00BD  
                           fround@prec 00BC                        ??_cellBalancing 00E7  
                    __size_of_adcSetup 001E                              ___fldiv@a 0038  
                            ___fldiv@b 003C                              ___flmul@a 0056  
                            ___flmul@b 0052                            __pbssCOMMON 007A  
                            ___flsub@a 00D5                              ___flsub@b 00D9  
                  sumVoltages@voltages 00DB                              ___latbits 0003  
        writeValuesToUart@totalVoltage 0158                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          __pcstackBANK2 0120  
                        __pcstackBANK3 01A0                          __pcstackBANK4 0220  
              LTC6804_rdcv@CELL_IN_REG 3166                      __size_of___xxtofl 0096  
                         _isdigit$1767 0072                              adcRead@ch 0027  
                      ??_calculateTemp 00C2                      __size_of_getTemps 007F  
                      LTC6804_rdcv@reg 0052                            sprintf@flag 0135  
                          sprintf@fval 0139                       _calculateCurrent 22D4  
                          sprintf@prec 013D                            _clearScreen 2D0F  
                  spi_write_array@data 0075                   calculateTemp@voltage 00C4  
                    ??_measureVoltages 012A            __size_of_LTC6804_initialize 0011  
                LTC6804_rdcv@cell_data 0043                               ?___fladd 00BD  
                             ?___fldiv 0038                               ?_adcRead 0072  
                             ?___awdiv 0020                               ?___flneg 0072  
                             ?___awmod 0072                               ?___flmul 0052  
                             ?___flsub 00D5                               ?___fltol 00B5  
                             ?___lldiv 0072                               ?___llmod 0026  
                            __npowers_ 3034                             ?__Umul8_16 0072  
                 __end_of_temperatures 309A      __end_ofLTC6804_rdcfg@BYTES_IN_REG 3160  
                      main@highestTemp 025A      __end_ofLTC6804_wrcfg@BYTES_IN_REG 3161  
               getCurrent@currentValue 00E5                            ?_writeTemps 0141  
                    __size_of_spiSetup 0012                              _configReg 026A  
                    setDischarge@index 0072                      __size_of_spi_read 000C  
                             ?_avgBuff 00D5                            __tdiv_to_l_ 248D  
                            __pswtext1 2800                           ??__div_to_l_ 0020  
                           set_adc@CHG 0074                             set_adc@DCP 0072  
                             ?_isdigit 0070                               ?_set_adc 0072  
                  __size_of_uartEnable 0003                  __size_of_setDischarge 00DD  
                             ?_sprintf 00E5                     __end_of_crc15Table 1C00  
                        ?_writeCurrent 0141                         __size_of_scale 0325  
                       __size_of_setup 0026                  LTC6804_rdcv@pec_error 004B  
        LTC6804_rdcv@current_cell_1340 0056                         ___wmul@product 0076  
                  __size_of_timerSetup 0006                               _LATAbits 010C  
                             _LATBbits 010D                               _LATDbits 010F  
             LTC6804_rdcv@current_cell 0054                           ??_pec15_calc 0020  
                            clear_ram0 2B3C                    setDischarge@boolean 0074  
                             _PIE1bits 0091                               _PIE2bits 0092  
                        ??_uartDisable 0070                measureVoltages@pecError 0146  
                             _PIR1bits 0011                     __end_of__div_to_l_ 2608  
                             _PIR2bits 0012                              _uartSetup 2B77  
                    ??_spi_write_array 0076                          ??_timer0Setup 0072  
                        ??_timer2Setup 0072                               _SSP1CON1 0215  
          measureVoltages@totalVoltage 00E9                           ??_getCurrent 007A  
                            _spi_write 2B60                            writeTemps@k 0146  
                        ??_wakeup_idle 0072                             _ADCON0bits 009D  
                    ___wmul@multiplier 0072                           _setDischarge 2608  
                      main@currentBuff 01A0                              main@temps 0250  
                   __end_of_pec15_calc 2E60                           clearScreen@j 0146  
              measureVoltages@voltages 0149                         ??_writeCurrent 007A  
            LTC6804_rdstat_reg@REG_LEN 30C2                           avgBuff@total 00DC  
                             _i2cSetup 2BA6             measureVoltages@numVoltages 00EB  
                  __size_of_writeTemps 005A               cellBalancing@numVoltages 00E5  
                   __end_of_getCurrent 2D89                       measureVoltages@i 014A  
             LTC6804_rdcv@received_pec 004E                               _OledFont 1000  
             LTC6804_rdcv_reg@total_ic 002F                __size_of_spi_write_read 002F  
                  LTC6804_wrcfg@config 0079                             ?_uartSetup 0070  
                          ??__Umul8_16 0074               __end_of_LTC6804_rdcv_reg 3000  
                spi_write_read@tx_Data 0024                       __size_of___fladd 01FC  
                     __size_of___fldiv 018F                       __size_of_adcRead 0054  
                     __size_of___awdiv 0052                       __size_of___flneg 0009  
                  __end_of_uartDisable 2B2E                       __size_of___awmod 0045  
                spi_write_read@rx_data 0077                       __size_of___flmul 022C  
                     __size_of___flsub 001F                       __size_of___fltol 007F  
                     __size_of___lldiv 0053                       __size_of___llmod 0043  
                             _adcSetup 2BF9                             ?_spi_write 0070  
      __end_ofLTC6804_rdaux@BYT_IN_REG 3164                            _fround$2167 00B8  
                          _fround$2168 00B4                LTC6804_rdcv_reg@REG_LEN 3165  
                     __size_of_avgBuff 0087                    __end_of_timer0Setup 2B36  
                  __end_of_timer2Setup 0800                            _currentBool 02A0  
                        ??_sumVoltages 00D9                           _tempChannels 02E2  
                           sprintf@exp 0133                             sprintf@val 012F  
                             ___xxtofl 235D                       __size_of_isdigit 000E  
                 LTC6804_rdcv@data_pec 0050                   LTC6804_rdcv@cell_reg 0057  
                  __end_of_wakeup_idle 2B57                       __size_of_set_adc 005E  
                             __ptext10 15F7                               __ptext11 2DCC  
                             __ptext20 2B77                               __ptext12 2EB2  
                             __ptext21 2B36                               __ptext13 248D  
                             __ptext30 2E60                               __ptext22 07F5  
                             __ptext14 2543                               __ptext31 1C1F  
                             __ptext23 2B31                               __ptext15 2D89  
                             __ptext40 2B84                               __ptext32 2608  
                             __ptext24 2BB7                               __ptext16 2F04  
                             __ptext41 2CAC                               __ptext33 23F3  
                             __ptext25 2BA6                               __ptext17 1C00  
                             __ptext50 22D4                               __ptext42 2B4E  
                             __ptext34 0801                               __ptext26 2BF9  
                             __ptext18 2B57                               __ptext51 03CD  
                             __ptext43 2BC9                               __ptext35 1E75  
                             __ptext27 2B95                               __ptext19 2C57  
                             __ptext52 2C17                               __ptext44 2B60  
                             __ptext36 2BDE                               __ptext28 206A  
                             __ptext53 2F57                               __ptext45 2E11  
                             __ptext37 2FAB                               __ptext29 26E5  
                             __ptext54 21C6                               __ptext46 2147  
                             __ptext38 2C7D                               __ptext55 235D  
                             __ptext47 224D                               __ptext39 2B6B  
                             __ptext56 1468                               __ptext48 20C8  
                             __ptext57 05F9                               __ptext49 2D4B  
                             __ptext59 2B2B                               _getTemps 2147  
                         _SSP1CON1bits 0215                           _SSP1CON3bits 0217  
                             __powers_ 3000                    LTC6804_adcv@cmd_pec 0033  
                     __size_of_sprintf 0761                              set_adc@CH 0073  
                            set_adc@MD 0077                 __size_of_LTC6804_wrcfg 009E  
                        __size_of_main 0176                           ??_uartEnable 0072  
                          pec15_calc@i 002C                               _uartBool 02A2  
                             _spiSetup 2BB7                LTC6804_rdcv_reg@cmd_pec 0035  
                             _spi_read 2B6B                               int$flags 007E  
              LTC6804_wrcfg@current_ic 0044                  _calculateCurrent$2165 00DD  
                         _SSP1STATbits 0214                           ??_timerSetup 0072  
                 LTC6804_rdcv@total_ic 003C             writeValuesToUart@uartLines 0165  
                          avgBuff@buff 00DB               __end_of_calculateCurrent 235D  
                          avgBuff@size 00D5        __end_ofLTC6804_rdaux@NUM_RX_BYT 3165  
                    _writeValuesToUart 2CDC                             _INTCONbits 000B  
                       __pstringtext10 315F                         __pstringtext11 3160  
                       __pstringtext20 30C2                         __pstringtext12 3161  
                       __pstringtext21 30E9                         __pstringtext13 3162  
                       __pstringtext22 3100                         __pstringtext14 3163  
                       __pstringtext23 3114                         __pstringtext15 3164  
                       __pstringtext24 3127                         __pstringtext16 3165  
                       __pstringtext25 3136                         __pstringtext17 3166  
                       __pstringtext26 3145                         __pstringtext18 3167  
                       __pstringtext27 3150                         __pstringtext19 3168  
                       __pstringtext28 0000                     ?_writeValuesToUart 0156  
                             isdigit@c 0073                LTC6804_rdcv@parsed_cell 004C  
                     spi_read@readData 0074                               scale@scl 00B4  
                   __end_of_uartEnable 2B31                        _measureVoltages 26E5  
                       pec15_calc@addr 0029                         pec15_calc@data 0076  
                  __end_of_sumVoltages 2EB2                  __end_of_writeVoltages 1468  
                             intlevel1 0000                           _temperatures 3068  
                            sprintf@ap 012A                       __tdiv_to_l_@exp1 0029  
                     __tdiv_to_l_@cntr 0028                              sprintf@sp 013F  
                     __tdiv_to_l_@quot 0024                 sumVoltages@numVoltages 00D5  
                  ??_writeValuesToUart 007A                       ___lldiv@dividend 0076  
               LTC6804_rdcv@BYT_IN_REG 3167                      __CFG_CLKOUTEN$OFF 0000  
                   __end_of_timerSetup 2B3C                           ?_clearScreen 0141  
                          _uartDisable 2B2B                       main@totalVoltage 025E  
                          ??_uartSetup 0072                            _timer0Setup 2B31  
                 __end_of_writeCurrent 2C57                            _timer2Setup 07F5  
                writeTemps@highestTemp 0141                           ??_writeTemps 00EF  
                          ??_spi_write 0072                          _LTC6804_wrcfg 0801  
                         ?__tdiv_to_l_ 0072                          __pstringtext1 1000  
                        __pstringtext2 1800                          __pstringtext3 1A00  
                        __pstringtext4 3000                          __pstringtext5 3034  
                        __pstringtext6 3068                          __pstringtext7 309A  
                        __pstringtext8 3159                          __pstringtext9 315D  
            __end_of_writeValuesToUart 2D0F                            _wakeup_idle 2B4E  
               __Umul8_16@multiplicand 0072                             _OPTION_REG 0095  
                             sprintf@c 0140                               sprintf@f 00E5  
                     ___lldiv@quotient 0021                  __end_of_cellBalancing 1CFF  
                          _SSPCON2bits 0216              LTC6804_rdcfg@BYTES_IN_REG 315F  
            LTC6804_wrcfg@BYTES_IN_REG 3160                          ___fladd@signs 00D1  
                          getTemps@inc 00D1                        _spi_write_array 2BC9  
                 LTC6804_rdcv_reg@data 0030                           ___fladd@aexp 00D2  
                         ___fladd@bexp 00D3                  __end_of_calculateTemp 22D4  
                   __end_of_writeTemps 206A                   __Umul8_16@multiplier 0024  
           __end_of_LTC6804_initialize 2BA6                         _spi_write_read 2C7D  
               LTC6804_rdcv@NUM_RX_BYT 3168                      __Umul8_16@product 0020  
