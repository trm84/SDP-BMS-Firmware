

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Apr 09 19:09:16 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	stringtext25,global,class=STRCODE,delta=2
    30                           	psect	stringtext26,global,class=STRCODE,delta=2
    31                           	psect	stringtext27,global,class=STRCODE,delta=2
    32                           	psect	cinit,global,class=CODE,merge=1,delta=2
    33                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    34                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    35                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    36                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    37                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    38                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    39                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    40                           	psect	inittext,global,class=CODE,delta=2
    41                           	psect	clrtext,global,class=CODE,delta=2
    42                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    43                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    44                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    45                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    46                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    47                           	psect	text1,local,class=CODE,merge=1,delta=2
    48                           	psect	text2,local,class=CODE,merge=1,delta=2
    49                           	psect	text3,local,class=CODE,merge=1,delta=2
    50                           	psect	text4,local,class=CODE,merge=1,delta=2
    51                           	psect	text5,local,class=CODE,merge=1,delta=2
    52                           	psect	text6,local,class=CODE,merge=1,delta=2
    53                           	psect	text7,local,class=CODE,merge=1,delta=2
    54                           	psect	text8,local,class=CODE,merge=1,delta=2
    55                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text10,local,class=CODE,merge=1,delta=2
    57                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    61                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    62                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    63                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    65                           	psect	text19,local,class=CODE,merge=1,delta=2
    66                           	psect	text20,local,class=CODE,merge=1,delta=2
    67                           	psect	text21,local,class=CODE,merge=1,delta=2
    68                           	psect	text22,local,class=CODE,merge=1,delta=2
    69                           	psect	text23,local,class=CODE,merge=1,delta=2
    70                           	psect	text24,local,class=CODE,merge=1,delta=2
    71                           	psect	text25,local,class=CODE,merge=1,delta=2
    72                           	psect	text26,local,class=CODE,merge=1,delta=2
    73                           	psect	text27,local,class=CODE,merge=1,delta=2
    74                           	psect	text28,local,class=CODE,merge=1,delta=2
    75                           	psect	text29,local,class=CODE,merge=1,delta=2
    76                           	psect	text30,local,class=CODE,merge=1,delta=2
    77                           	psect	text31,local,class=CODE,merge=1,delta=2
    78                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text33,local,class=CODE,merge=1,delta=2
    80                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text35,local,class=CODE,merge=1,delta=2
    82                           	psect	text36,local,class=CODE,merge=1,delta=2
    83                           	psect	text37,local,class=CODE,merge=1,delta=2
    84                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text39,local,class=CODE,merge=1,delta=2
    86                           	psect	text40,local,class=CODE,merge=1,delta=2
    87                           	psect	text41,local,class=CODE,merge=1,delta=2
    88                           	psect	text42,local,class=CODE,merge=1,delta=2
    89                           	psect	text43,local,class=CODE,merge=1,delta=2
    90                           	psect	text44,local,class=CODE,merge=1,delta=2
    91                           	psect	text45,local,class=CODE,merge=1,delta=2
    92                           	psect	text46,local,class=CODE,merge=1,delta=2
    93                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    94                           	psect	text48,local,class=CODE,merge=1,delta=2
    95                           	psect	text49,local,class=CODE,merge=1,delta=2
    96                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    97                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    98                           	psect	text52,local,class=CODE,merge=1,delta=2
    99                           	psect	text53,local,class=CODE,merge=1,delta=2
   100                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
   101                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   102                           	psect	text56,local,class=CODE,merge=1,delta=2,group=2
   103                           	psect	intentry,global,class=CODE,delta=2
   104                           	psect	text58,local,class=CODE,merge=1,delta=2
   105                           	dabs	1,0x7E,2
   106  0000                     
   107                           ; Version 1.45
   108                           ; Generated 16/11/2017 GMT
   109                           ; 
   110                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC16F1789 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009B                     	;# 
   188  009C                     	;# 
   189  009D                     	;# 
   190  009E                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  0110                     	;# 
   197  0111                     	;# 
   198  0112                     	;# 
   199  0113                     	;# 
   200  0114                     	;# 
   201  0115                     	;# 
   202  0116                     	;# 
   203  0117                     	;# 
   204  0118                     	;# 
   205  0119                     	;# 
   206  011A                     	;# 
   207  011B                     	;# 
   208  011C                     	;# 
   209  011D                     	;# 
   210  011D                     	;# 
   211  011D                     	;# 
   212  011E                     	;# 
   213  011F                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  018E                     	;# 
   217  018F                     	;# 
   218  0190                     	;# 
   219  0191                     	;# 
   220  0191                     	;# 
   221  0192                     	;# 
   222  0193                     	;# 
   223  0193                     	;# 
   224  0193                     	;# 
   225  0194                     	;# 
   226  0195                     	;# 
   227  0196                     	;# 
   228  0197                     	;# 
   229  0199                     	;# 
   230  0199                     	;# 
   231  0199                     	;# 
   232  019A                     	;# 
   233  019A                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019C                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019D                     	;# 
   245  019D                     	;# 
   246  019E                     	;# 
   247  019E                     	;# 
   248  019E                     	;# 
   249  019F                     	;# 
   250  019F                     	;# 
   251  019F                     	;# 
   252  019F                     	;# 
   253  019F                     	;# 
   254  020C                     	;# 
   255  020D                     	;# 
   256  020E                     	;# 
   257  020F                     	;# 
   258  0210                     	;# 
   259  0211                     	;# 
   260  0211                     	;# 
   261  0212                     	;# 
   262  0212                     	;# 
   263  0213                     	;# 
   264  0213                     	;# 
   265  0214                     	;# 
   266  0214                     	;# 
   267  0215                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0216                     	;# 
   272  0216                     	;# 
   273  0217                     	;# 
   274  0217                     	;# 
   275  028C                     	;# 
   276  028D                     	;# 
   277  028E                     	;# 
   278  028F                     	;# 
   279  0290                     	;# 
   280  0291                     	;# 
   281  0291                     	;# 
   282  0292                     	;# 
   283  0293                     	;# 
   284  0298                     	;# 
   285  0298                     	;# 
   286  0299                     	;# 
   287  029A                     	;# 
   288  030C                     	;# 
   289  030D                     	;# 
   290  030E                     	;# 
   291  030F                     	;# 
   292  0310                     	;# 
   293  0311                     	;# 
   294  0311                     	;# 
   295  0312                     	;# 
   296  0313                     	;# 
   297  038C                     	;# 
   298  038D                     	;# 
   299  038E                     	;# 
   300  038F                     	;# 
   301  0390                     	;# 
   302  0391                     	;# 
   303  0392                     	;# 
   304  0393                     	;# 
   305  0394                     	;# 
   306  0395                     	;# 
   307  0396                     	;# 
   308  0397                     	;# 
   309  0398                     	;# 
   310  0399                     	;# 
   311  039D                     	;# 
   312  039E                     	;# 
   313  039F                     	;# 
   314  0511                     	;# 
   315  0513                     	;# 
   316  0515                     	;# 
   317  051A                     	;# 
   318  0591                     	;# 
   319  0592                     	;# 
   320  0592                     	;# 
   321  0593                     	;# 
   322  0594                     	;# 
   323  0594                     	;# 
   324  0595                     	;# 
   325  0596                     	;# 
   326  0596                     	;# 
   327  0E91                     	;# 
   328  0E92                     	;# 
   329  0E93                     	;# 
   330  0E94                     	;# 
   331  0E95                     	;# 
   332  0E96                     	;# 
   333  0E97                     	;# 
   334  0E98                     	;# 
   335  0E99                     	;# 
   336  0E9A                     	;# 
   337  0E9B                     	;# 
   338  0E9C                     	;# 
   339  0E9D                     	;# 
   340  0E9E                     	;# 
   341  0E9F                     	;# 
   342  0EA0                     	;# 
   343  0EA1                     	;# 
   344  0EA1                     	;# 
   345  0EA2                     	;# 
   346  0EA3                     	;# 
   347  0EA3                     	;# 
   348  0EA4                     	;# 
   349  0EA5                     	;# 
   350  0EA5                     	;# 
   351  0EA6                     	;# 
   352  0EA7                     	;# 
   353  0EA7                     	;# 
   354  0EA8                     	;# 
   355  0EA9                     	;# 
   356  0EAA                     	;# 
   357  0EAB                     	;# 
   358  0EAC                     	;# 
   359  0EAD                     	;# 
   360  0EAE                     	;# 
   361  0EAF                     	;# 
   362  0EB1                     	;# 
   363  0EB2                     	;# 
   364  0EB3                     	;# 
   365  0EB4                     	;# 
   366  0EB5                     	;# 
   367  0EB6                     	;# 
   368  0EB7                     	;# 
   369  0EB8                     	;# 
   370  0EB9                     	;# 
   371  0EBA                     	;# 
   372  0EBB                     	;# 
   373  0EBC                     	;# 
   374  0EBD                     	;# 
   375  0EBE                     	;# 
   376  0EBF                     	;# 
   377  0EC0                     	;# 
   378  0EC1                     	;# 
   379  0EC1                     	;# 
   380  0EC2                     	;# 
   381  0EC3                     	;# 
   382  0EC3                     	;# 
   383  0EC4                     	;# 
   384  0EC5                     	;# 
   385  0EC5                     	;# 
   386  0EC6                     	;# 
   387  0EC7                     	;# 
   388  0EC7                     	;# 
   389  0EC8                     	;# 
   390  0EC9                     	;# 
   391  0ECA                     	;# 
   392  0ECB                     	;# 
   393  0ECC                     	;# 
   394  0ECD                     	;# 
   395  0ECE                     	;# 
   396  0ECF                     	;# 
   397  0ED1                     	;# 
   398  0ED2                     	;# 
   399  0ED3                     	;# 
   400  0ED4                     	;# 
   401  0ED5                     	;# 
   402  0ED6                     	;# 
   403  0ED7                     	;# 
   404  0ED8                     	;# 
   405  0ED9                     	;# 
   406  0EDA                     	;# 
   407  0EDB                     	;# 
   408  0EDC                     	;# 
   409  0EDD                     	;# 
   410  0EDE                     	;# 
   411  0EDF                     	;# 
   412  0EE0                     	;# 
   413  0EE1                     	;# 
   414  0EE1                     	;# 
   415  0EE2                     	;# 
   416  0EE3                     	;# 
   417  0EE3                     	;# 
   418  0EE4                     	;# 
   419  0EE5                     	;# 
   420  0EE5                     	;# 
   421  0EE6                     	;# 
   422  0EE7                     	;# 
   423  0EE7                     	;# 
   424  0EE8                     	;# 
   425  0EE9                     	;# 
   426  0EEA                     	;# 
   427  0EEB                     	;# 
   428  0EEC                     	;# 
   429  0EED                     	;# 
   430  0EEE                     	;# 
   431  0EEF                     	;# 
   432  0F11                     	;# 
   433  0F12                     	;# 
   434  0F13                     	;# 
   435  0F14                     	;# 
   436  0F15                     	;# 
   437  0F16                     	;# 
   438  0F17                     	;# 
   439  0F18                     	;# 
   440  0F19                     	;# 
   441  0F1A                     	;# 
   442  0F1B                     	;# 
   443  0F1C                     	;# 
   444  0F1D                     	;# 
   445  0F1E                     	;# 
   446  0F1F                     	;# 
   447  0F20                     	;# 
   448  0F21                     	;# 
   449  0F21                     	;# 
   450  0F22                     	;# 
   451  0F23                     	;# 
   452  0F23                     	;# 
   453  0F24                     	;# 
   454  0F25                     	;# 
   455  0F25                     	;# 
   456  0F26                     	;# 
   457  0F27                     	;# 
   458  0F27                     	;# 
   459  0F28                     	;# 
   460  0F29                     	;# 
   461  0F2A                     	;# 
   462  0F2B                     	;# 
   463  0F2C                     	;# 
   464  0F2D                     	;# 
   465  0F2E                     	;# 
   466  0F2F                     	;# 
   467  0FE4                     	;# 
   468  0FE5                     	;# 
   469  0FE6                     	;# 
   470  0FE7                     	;# 
   471  0FE8                     	;# 
   472  0FE9                     	;# 
   473  0FEA                     	;# 
   474  0FEB                     	;# 
   475  0FED                     	;# 
   476  0FEE                     	;# 
   477  0FEF                     	;# 
   478  0000                     	;# 
   479  0001                     	;# 
   480  0002                     	;# 
   481  0003                     	;# 
   482  0004                     	;# 
   483  0005                     	;# 
   484  0006                     	;# 
   485  0007                     	;# 
   486  0008                     	;# 
   487  0009                     	;# 
   488  000A                     	;# 
   489  000B                     	;# 
   490  000C                     	;# 
   491  000D                     	;# 
   492  000E                     	;# 
   493  000F                     	;# 
   494  0010                     	;# 
   495  0011                     	;# 
   496  0012                     	;# 
   497  0013                     	;# 
   498  0014                     	;# 
   499  0015                     	;# 
   500  0016                     	;# 
   501  0016                     	;# 
   502  0017                     	;# 
   503  0018                     	;# 
   504  0019                     	;# 
   505  001A                     	;# 
   506  001B                     	;# 
   507  001C                     	;# 
   508  008C                     	;# 
   509  008D                     	;# 
   510  008E                     	;# 
   511  008F                     	;# 
   512  0090                     	;# 
   513  0091                     	;# 
   514  0092                     	;# 
   515  0093                     	;# 
   516  0094                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  009F                     	;# 
   529  010C                     	;# 
   530  010D                     	;# 
   531  010E                     	;# 
   532  010F                     	;# 
   533  0110                     	;# 
   534  0111                     	;# 
   535  0112                     	;# 
   536  0113                     	;# 
   537  0114                     	;# 
   538  0115                     	;# 
   539  0116                     	;# 
   540  0117                     	;# 
   541  0118                     	;# 
   542  0119                     	;# 
   543  011A                     	;# 
   544  011B                     	;# 
   545  011C                     	;# 
   546  011D                     	;# 
   547  011D                     	;# 
   548  011D                     	;# 
   549  011E                     	;# 
   550  011F                     	;# 
   551  018C                     	;# 
   552  018D                     	;# 
   553  018E                     	;# 
   554  018F                     	;# 
   555  0190                     	;# 
   556  0191                     	;# 
   557  0191                     	;# 
   558  0192                     	;# 
   559  0193                     	;# 
   560  0193                     	;# 
   561  0193                     	;# 
   562  0194                     	;# 
   563  0195                     	;# 
   564  0196                     	;# 
   565  0197                     	;# 
   566  0199                     	;# 
   567  0199                     	;# 
   568  0199                     	;# 
   569  019A                     	;# 
   570  019A                     	;# 
   571  019A                     	;# 
   572  019B                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019C                     	;# 
   578  019C                     	;# 
   579  019C                     	;# 
   580  019D                     	;# 
   581  019D                     	;# 
   582  019D                     	;# 
   583  019E                     	;# 
   584  019E                     	;# 
   585  019E                     	;# 
   586  019F                     	;# 
   587  019F                     	;# 
   588  019F                     	;# 
   589  019F                     	;# 
   590  019F                     	;# 
   591  020C                     	;# 
   592  020D                     	;# 
   593  020E                     	;# 
   594  020F                     	;# 
   595  0210                     	;# 
   596  0211                     	;# 
   597  0211                     	;# 
   598  0212                     	;# 
   599  0212                     	;# 
   600  0213                     	;# 
   601  0213                     	;# 
   602  0214                     	;# 
   603  0214                     	;# 
   604  0215                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0216                     	;# 
   609  0216                     	;# 
   610  0217                     	;# 
   611  0217                     	;# 
   612  028C                     	;# 
   613  028D                     	;# 
   614  028E                     	;# 
   615  028F                     	;# 
   616  0290                     	;# 
   617  0291                     	;# 
   618  0291                     	;# 
   619  0292                     	;# 
   620  0293                     	;# 
   621  0298                     	;# 
   622  0298                     	;# 
   623  0299                     	;# 
   624  029A                     	;# 
   625  030C                     	;# 
   626  030D                     	;# 
   627  030E                     	;# 
   628  030F                     	;# 
   629  0310                     	;# 
   630  0311                     	;# 
   631  0311                     	;# 
   632  0312                     	;# 
   633  0313                     	;# 
   634  038C                     	;# 
   635  038D                     	;# 
   636  038E                     	;# 
   637  038F                     	;# 
   638  0390                     	;# 
   639  0391                     	;# 
   640  0392                     	;# 
   641  0393                     	;# 
   642  0394                     	;# 
   643  0395                     	;# 
   644  0396                     	;# 
   645  0397                     	;# 
   646  0398                     	;# 
   647  0399                     	;# 
   648  039D                     	;# 
   649  039E                     	;# 
   650  039F                     	;# 
   651  0511                     	;# 
   652  0513                     	;# 
   653  0515                     	;# 
   654  051A                     	;# 
   655  0591                     	;# 
   656  0592                     	;# 
   657  0592                     	;# 
   658  0593                     	;# 
   659  0594                     	;# 
   660  0594                     	;# 
   661  0595                     	;# 
   662  0596                     	;# 
   663  0596                     	;# 
   664  0E91                     	;# 
   665  0E92                     	;# 
   666  0E93                     	;# 
   667  0E94                     	;# 
   668  0E95                     	;# 
   669  0E96                     	;# 
   670  0E97                     	;# 
   671  0E98                     	;# 
   672  0E99                     	;# 
   673  0E9A                     	;# 
   674  0E9B                     	;# 
   675  0E9C                     	;# 
   676  0E9D                     	;# 
   677  0E9E                     	;# 
   678  0E9F                     	;# 
   679  0EA0                     	;# 
   680  0EA1                     	;# 
   681  0EA1                     	;# 
   682  0EA2                     	;# 
   683  0EA3                     	;# 
   684  0EA3                     	;# 
   685  0EA4                     	;# 
   686  0EA5                     	;# 
   687  0EA5                     	;# 
   688  0EA6                     	;# 
   689  0EA7                     	;# 
   690  0EA7                     	;# 
   691  0EA8                     	;# 
   692  0EA9                     	;# 
   693  0EAA                     	;# 
   694  0EAB                     	;# 
   695  0EAC                     	;# 
   696  0EAD                     	;# 
   697  0EAE                     	;# 
   698  0EAF                     	;# 
   699  0EB1                     	;# 
   700  0EB2                     	;# 
   701  0EB3                     	;# 
   702  0EB4                     	;# 
   703  0EB5                     	;# 
   704  0EB6                     	;# 
   705  0EB7                     	;# 
   706  0EB8                     	;# 
   707  0EB9                     	;# 
   708  0EBA                     	;# 
   709  0EBB                     	;# 
   710  0EBC                     	;# 
   711  0EBD                     	;# 
   712  0EBE                     	;# 
   713  0EBF                     	;# 
   714  0EC0                     	;# 
   715  0EC1                     	;# 
   716  0EC1                     	;# 
   717  0EC2                     	;# 
   718  0EC3                     	;# 
   719  0EC3                     	;# 
   720  0EC4                     	;# 
   721  0EC5                     	;# 
   722  0EC5                     	;# 
   723  0EC6                     	;# 
   724  0EC7                     	;# 
   725  0EC7                     	;# 
   726  0EC8                     	;# 
   727  0EC9                     	;# 
   728  0ECA                     	;# 
   729  0ECB                     	;# 
   730  0ECC                     	;# 
   731  0ECD                     	;# 
   732  0ECE                     	;# 
   733  0ECF                     	;# 
   734  0ED1                     	;# 
   735  0ED2                     	;# 
   736  0ED3                     	;# 
   737  0ED4                     	;# 
   738  0ED5                     	;# 
   739  0ED6                     	;# 
   740  0ED7                     	;# 
   741  0ED8                     	;# 
   742  0ED9                     	;# 
   743  0EDA                     	;# 
   744  0EDB                     	;# 
   745  0EDC                     	;# 
   746  0EDD                     	;# 
   747  0EDE                     	;# 
   748  0EDF                     	;# 
   749  0EE0                     	;# 
   750  0EE1                     	;# 
   751  0EE1                     	;# 
   752  0EE2                     	;# 
   753  0EE3                     	;# 
   754  0EE3                     	;# 
   755  0EE4                     	;# 
   756  0EE5                     	;# 
   757  0EE5                     	;# 
   758  0EE6                     	;# 
   759  0EE7                     	;# 
   760  0EE7                     	;# 
   761  0EE8                     	;# 
   762  0EE9                     	;# 
   763  0EEA                     	;# 
   764  0EEB                     	;# 
   765  0EEC                     	;# 
   766  0EED                     	;# 
   767  0EEE                     	;# 
   768  0EEF                     	;# 
   769  0F11                     	;# 
   770  0F12                     	;# 
   771  0F13                     	;# 
   772  0F14                     	;# 
   773  0F15                     	;# 
   774  0F16                     	;# 
   775  0F17                     	;# 
   776  0F18                     	;# 
   777  0F19                     	;# 
   778  0F1A                     	;# 
   779  0F1B                     	;# 
   780  0F1C                     	;# 
   781  0F1D                     	;# 
   782  0F1E                     	;# 
   783  0F1F                     	;# 
   784  0F20                     	;# 
   785  0F21                     	;# 
   786  0F21                     	;# 
   787  0F22                     	;# 
   788  0F23                     	;# 
   789  0F23                     	;# 
   790  0F24                     	;# 
   791  0F25                     	;# 
   792  0F25                     	;# 
   793  0F26                     	;# 
   794  0F27                     	;# 
   795  0F27                     	;# 
   796  0F28                     	;# 
   797  0F29                     	;# 
   798  0F2A                     	;# 
   799  0F2B                     	;# 
   800  0F2C                     	;# 
   801  0F2D                     	;# 
   802  0F2E                     	;# 
   803  0F2F                     	;# 
   804  0FE4                     	;# 
   805  0FE5                     	;# 
   806  0FE6                     	;# 
   807  0FE7                     	;# 
   808  0FE8                     	;# 
   809  0FE9                     	;# 
   810  0FEA                     	;# 
   811  0FEB                     	;# 
   812  0FED                     	;# 
   813  0FEE                     	;# 
   814  0FEF                     	;# 
   815  0000                     	;# 
   816  0001                     	;# 
   817  0002                     	;# 
   818  0003                     	;# 
   819  0004                     	;# 
   820  0005                     	;# 
   821  0006                     	;# 
   822  0007                     	;# 
   823  0008                     	;# 
   824  0009                     	;# 
   825  000A                     	;# 
   826  000B                     	;# 
   827  000C                     	;# 
   828  000D                     	;# 
   829  000E                     	;# 
   830  000F                     	;# 
   831  0010                     	;# 
   832  0011                     	;# 
   833  0012                     	;# 
   834  0013                     	;# 
   835  0014                     	;# 
   836  0015                     	;# 
   837  0016                     	;# 
   838  0016                     	;# 
   839  0017                     	;# 
   840  0018                     	;# 
   841  0019                     	;# 
   842  001A                     	;# 
   843  001B                     	;# 
   844  001C                     	;# 
   845  008C                     	;# 
   846  008D                     	;# 
   847  008E                     	;# 
   848  008F                     	;# 
   849  0090                     	;# 
   850  0091                     	;# 
   851  0092                     	;# 
   852  0093                     	;# 
   853  0094                     	;# 
   854  0095                     	;# 
   855  0096                     	;# 
   856  0097                     	;# 
   857  0098                     	;# 
   858  0099                     	;# 
   859  009A                     	;# 
   860  009B                     	;# 
   861  009B                     	;# 
   862  009C                     	;# 
   863  009D                     	;# 
   864  009E                     	;# 
   865  009F                     	;# 
   866  010C                     	;# 
   867  010D                     	;# 
   868  010E                     	;# 
   869  010F                     	;# 
   870  0110                     	;# 
   871  0111                     	;# 
   872  0112                     	;# 
   873  0113                     	;# 
   874  0114                     	;# 
   875  0115                     	;# 
   876  0116                     	;# 
   877  0117                     	;# 
   878  0118                     	;# 
   879  0119                     	;# 
   880  011A                     	;# 
   881  011B                     	;# 
   882  011C                     	;# 
   883  011D                     	;# 
   884  011D                     	;# 
   885  011D                     	;# 
   886  011E                     	;# 
   887  011F                     	;# 
   888  018C                     	;# 
   889  018D                     	;# 
   890  018E                     	;# 
   891  018F                     	;# 
   892  0190                     	;# 
   893  0191                     	;# 
   894  0191                     	;# 
   895  0192                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0197                     	;# 
   903  0199                     	;# 
   904  0199                     	;# 
   905  0199                     	;# 
   906  019A                     	;# 
   907  019A                     	;# 
   908  019A                     	;# 
   909  019B                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019C                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019D                     	;# 
   918  019D                     	;# 
   919  019D                     	;# 
   920  019E                     	;# 
   921  019E                     	;# 
   922  019E                     	;# 
   923  019F                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  020C                     	;# 
   929  020D                     	;# 
   930  020E                     	;# 
   931  020F                     	;# 
   932  0210                     	;# 
   933  0211                     	;# 
   934  0211                     	;# 
   935  0212                     	;# 
   936  0212                     	;# 
   937  0213                     	;# 
   938  0213                     	;# 
   939  0214                     	;# 
   940  0214                     	;# 
   941  0215                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0216                     	;# 
   946  0216                     	;# 
   947  0217                     	;# 
   948  0217                     	;# 
   949  028C                     	;# 
   950  028D                     	;# 
   951  028E                     	;# 
   952  028F                     	;# 
   953  0290                     	;# 
   954  0291                     	;# 
   955  0291                     	;# 
   956  0292                     	;# 
   957  0293                     	;# 
   958  0298                     	;# 
   959  0298                     	;# 
   960  0299                     	;# 
   961  029A                     	;# 
   962  030C                     	;# 
   963  030D                     	;# 
   964  030E                     	;# 
   965  030F                     	;# 
   966  0310                     	;# 
   967  0311                     	;# 
   968  0311                     	;# 
   969  0312                     	;# 
   970  0313                     	;# 
   971  038C                     	;# 
   972  038D                     	;# 
   973  038E                     	;# 
   974  038F                     	;# 
   975  0390                     	;# 
   976  0391                     	;# 
   977  0392                     	;# 
   978  0393                     	;# 
   979  0394                     	;# 
   980  0395                     	;# 
   981  0396                     	;# 
   982  0397                     	;# 
   983  0398                     	;# 
   984  0399                     	;# 
   985  039D                     	;# 
   986  039E                     	;# 
   987  039F                     	;# 
   988  0511                     	;# 
   989  0513                     	;# 
   990  0515                     	;# 
   991  051A                     	;# 
   992  0591                     	;# 
   993  0592                     	;# 
   994  0592                     	;# 
   995  0593                     	;# 
   996  0594                     	;# 
   997  0594                     	;# 
   998  0595                     	;# 
   999  0596                     	;# 
  1000  0596                     	;# 
  1001  0E91                     	;# 
  1002  0E92                     	;# 
  1003  0E93                     	;# 
  1004  0E94                     	;# 
  1005  0E95                     	;# 
  1006  0E96                     	;# 
  1007  0E97                     	;# 
  1008  0E98                     	;# 
  1009  0E99                     	;# 
  1010  0E9A                     	;# 
  1011  0E9B                     	;# 
  1012  0E9C                     	;# 
  1013  0E9D                     	;# 
  1014  0E9E                     	;# 
  1015  0E9F                     	;# 
  1016  0EA0                     	;# 
  1017  0EA1                     	;# 
  1018  0EA1                     	;# 
  1019  0EA2                     	;# 
  1020  0EA3                     	;# 
  1021  0EA3                     	;# 
  1022  0EA4                     	;# 
  1023  0EA5                     	;# 
  1024  0EA5                     	;# 
  1025  0EA6                     	;# 
  1026  0EA7                     	;# 
  1027  0EA7                     	;# 
  1028  0EA8                     	;# 
  1029  0EA9                     	;# 
  1030  0EAA                     	;# 
  1031  0EAB                     	;# 
  1032  0EAC                     	;# 
  1033  0EAD                     	;# 
  1034  0EAE                     	;# 
  1035  0EAF                     	;# 
  1036  0EB1                     	;# 
  1037  0EB2                     	;# 
  1038  0EB3                     	;# 
  1039  0EB4                     	;# 
  1040  0EB5                     	;# 
  1041  0EB6                     	;# 
  1042  0EB7                     	;# 
  1043  0EB8                     	;# 
  1044  0EB9                     	;# 
  1045  0EBA                     	;# 
  1046  0EBB                     	;# 
  1047  0EBC                     	;# 
  1048  0EBD                     	;# 
  1049  0EBE                     	;# 
  1050  0EBF                     	;# 
  1051  0EC0                     	;# 
  1052  0EC1                     	;# 
  1053  0EC1                     	;# 
  1054  0EC2                     	;# 
  1055  0EC3                     	;# 
  1056  0EC3                     	;# 
  1057  0EC4                     	;# 
  1058  0EC5                     	;# 
  1059  0EC5                     	;# 
  1060  0EC6                     	;# 
  1061  0EC7                     	;# 
  1062  0EC7                     	;# 
  1063  0EC8                     	;# 
  1064  0EC9                     	;# 
  1065  0ECA                     	;# 
  1066  0ECB                     	;# 
  1067  0ECC                     	;# 
  1068  0ECD                     	;# 
  1069  0ECE                     	;# 
  1070  0ECF                     	;# 
  1071  0ED1                     	;# 
  1072  0ED2                     	;# 
  1073  0ED3                     	;# 
  1074  0ED4                     	;# 
  1075  0ED5                     	;# 
  1076  0ED6                     	;# 
  1077  0ED7                     	;# 
  1078  0ED8                     	;# 
  1079  0ED9                     	;# 
  1080  0EDA                     	;# 
  1081  0EDB                     	;# 
  1082  0EDC                     	;# 
  1083  0EDD                     	;# 
  1084  0EDE                     	;# 
  1085  0EDF                     	;# 
  1086  0EE0                     	;# 
  1087  0EE1                     	;# 
  1088  0EE1                     	;# 
  1089  0EE2                     	;# 
  1090  0EE3                     	;# 
  1091  0EE3                     	;# 
  1092  0EE4                     	;# 
  1093  0EE5                     	;# 
  1094  0EE5                     	;# 
  1095  0EE6                     	;# 
  1096  0EE7                     	;# 
  1097  0EE7                     	;# 
  1098  0EE8                     	;# 
  1099  0EE9                     	;# 
  1100  0EEA                     	;# 
  1101  0EEB                     	;# 
  1102  0EEC                     	;# 
  1103  0EED                     	;# 
  1104  0EEE                     	;# 
  1105  0EEF                     	;# 
  1106  0F11                     	;# 
  1107  0F12                     	;# 
  1108  0F13                     	;# 
  1109  0F14                     	;# 
  1110  0F15                     	;# 
  1111  0F16                     	;# 
  1112  0F17                     	;# 
  1113  0F18                     	;# 
  1114  0F19                     	;# 
  1115  0F1A                     	;# 
  1116  0F1B                     	;# 
  1117  0F1C                     	;# 
  1118  0F1D                     	;# 
  1119  0F1E                     	;# 
  1120  0F1F                     	;# 
  1121  0F20                     	;# 
  1122  0F21                     	;# 
  1123  0F21                     	;# 
  1124  0F22                     	;# 
  1125  0F23                     	;# 
  1126  0F23                     	;# 
  1127  0F24                     	;# 
  1128  0F25                     	;# 
  1129  0F25                     	;# 
  1130  0F26                     	;# 
  1131  0F27                     	;# 
  1132  0F27                     	;# 
  1133  0F28                     	;# 
  1134  0F29                     	;# 
  1135  0F2A                     	;# 
  1136  0F2B                     	;# 
  1137  0F2C                     	;# 
  1138  0F2D                     	;# 
  1139  0F2E                     	;# 
  1140  0F2F                     	;# 
  1141  0FE4                     	;# 
  1142  0FE5                     	;# 
  1143  0FE6                     	;# 
  1144  0FE7                     	;# 
  1145  0FE8                     	;# 
  1146  0FE9                     	;# 
  1147  0FEA                     	;# 
  1148  0FEB                     	;# 
  1149  0FED                     	;# 
  1150  0FEE                     	;# 
  1151  0FEF                     	;# 
  1152  0000                     	;# 
  1153  0001                     	;# 
  1154  0002                     	;# 
  1155  0003                     	;# 
  1156  0004                     	;# 
  1157  0005                     	;# 
  1158  0006                     	;# 
  1159  0007                     	;# 
  1160  0008                     	;# 
  1161  0009                     	;# 
  1162  000A                     	;# 
  1163  000B                     	;# 
  1164  000C                     	;# 
  1165  000D                     	;# 
  1166  000E                     	;# 
  1167  000F                     	;# 
  1168  0010                     	;# 
  1169  0011                     	;# 
  1170  0012                     	;# 
  1171  0013                     	;# 
  1172  0014                     	;# 
  1173  0015                     	;# 
  1174  0016                     	;# 
  1175  0016                     	;# 
  1176  0017                     	;# 
  1177  0018                     	;# 
  1178  0019                     	;# 
  1179  001A                     	;# 
  1180  001B                     	;# 
  1181  001C                     	;# 
  1182  008C                     	;# 
  1183  008D                     	;# 
  1184  008E                     	;# 
  1185  008F                     	;# 
  1186  0090                     	;# 
  1187  0091                     	;# 
  1188  0092                     	;# 
  1189  0093                     	;# 
  1190  0094                     	;# 
  1191  0095                     	;# 
  1192  0096                     	;# 
  1193  0097                     	;# 
  1194  0098                     	;# 
  1195  0099                     	;# 
  1196  009A                     	;# 
  1197  009B                     	;# 
  1198  009B                     	;# 
  1199  009C                     	;# 
  1200  009D                     	;# 
  1201  009E                     	;# 
  1202  009F                     	;# 
  1203  010C                     	;# 
  1204  010D                     	;# 
  1205  010E                     	;# 
  1206  010F                     	;# 
  1207  0110                     	;# 
  1208  0111                     	;# 
  1209  0112                     	;# 
  1210  0113                     	;# 
  1211  0114                     	;# 
  1212  0115                     	;# 
  1213  0116                     	;# 
  1214  0117                     	;# 
  1215  0118                     	;# 
  1216  0119                     	;# 
  1217  011A                     	;# 
  1218  011B                     	;# 
  1219  011C                     	;# 
  1220  011D                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011E                     	;# 
  1224  011F                     	;# 
  1225  018C                     	;# 
  1226  018D                     	;# 
  1227  018E                     	;# 
  1228  018F                     	;# 
  1229  0190                     	;# 
  1230  0191                     	;# 
  1231  0191                     	;# 
  1232  0192                     	;# 
  1233  0193                     	;# 
  1234  0193                     	;# 
  1235  0193                     	;# 
  1236  0194                     	;# 
  1237  0195                     	;# 
  1238  0196                     	;# 
  1239  0197                     	;# 
  1240  0199                     	;# 
  1241  0199                     	;# 
  1242  0199                     	;# 
  1243  019A                     	;# 
  1244  019A                     	;# 
  1245  019A                     	;# 
  1246  019B                     	;# 
  1247  019B                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019C                     	;# 
  1252  019C                     	;# 
  1253  019C                     	;# 
  1254  019D                     	;# 
  1255  019D                     	;# 
  1256  019D                     	;# 
  1257  019E                     	;# 
  1258  019E                     	;# 
  1259  019E                     	;# 
  1260  019F                     	;# 
  1261  019F                     	;# 
  1262  019F                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  020C                     	;# 
  1266  020D                     	;# 
  1267  020E                     	;# 
  1268  020F                     	;# 
  1269  0210                     	;# 
  1270  0211                     	;# 
  1271  0211                     	;# 
  1272  0212                     	;# 
  1273  0212                     	;# 
  1274  0213                     	;# 
  1275  0213                     	;# 
  1276  0214                     	;# 
  1277  0214                     	;# 
  1278  0215                     	;# 
  1279  0215                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0216                     	;# 
  1283  0216                     	;# 
  1284  0217                     	;# 
  1285  0217                     	;# 
  1286  028C                     	;# 
  1287  028D                     	;# 
  1288  028E                     	;# 
  1289  028F                     	;# 
  1290  0290                     	;# 
  1291  0291                     	;# 
  1292  0291                     	;# 
  1293  0292                     	;# 
  1294  0293                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  030C                     	;# 
  1300  030D                     	;# 
  1301  030E                     	;# 
  1302  030F                     	;# 
  1303  0310                     	;# 
  1304  0311                     	;# 
  1305  0311                     	;# 
  1306  0312                     	;# 
  1307  0313                     	;# 
  1308  038C                     	;# 
  1309  038D                     	;# 
  1310  038E                     	;# 
  1311  038F                     	;# 
  1312  0390                     	;# 
  1313  0391                     	;# 
  1314  0392                     	;# 
  1315  0393                     	;# 
  1316  0394                     	;# 
  1317  0395                     	;# 
  1318  0396                     	;# 
  1319  0397                     	;# 
  1320  0398                     	;# 
  1321  0399                     	;# 
  1322  039D                     	;# 
  1323  039E                     	;# 
  1324  039F                     	;# 
  1325  0511                     	;# 
  1326  0513                     	;# 
  1327  0515                     	;# 
  1328  051A                     	;# 
  1329  0591                     	;# 
  1330  0592                     	;# 
  1331  0592                     	;# 
  1332  0593                     	;# 
  1333  0594                     	;# 
  1334  0594                     	;# 
  1335  0595                     	;# 
  1336  0596                     	;# 
  1337  0596                     	;# 
  1338  0E91                     	;# 
  1339  0E92                     	;# 
  1340  0E93                     	;# 
  1341  0E94                     	;# 
  1342  0E95                     	;# 
  1343  0E96                     	;# 
  1344  0E97                     	;# 
  1345  0E98                     	;# 
  1346  0E99                     	;# 
  1347  0E9A                     	;# 
  1348  0E9B                     	;# 
  1349  0E9C                     	;# 
  1350  0E9D                     	;# 
  1351  0E9E                     	;# 
  1352  0E9F                     	;# 
  1353  0EA0                     	;# 
  1354  0EA1                     	;# 
  1355  0EA1                     	;# 
  1356  0EA2                     	;# 
  1357  0EA3                     	;# 
  1358  0EA3                     	;# 
  1359  0EA4                     	;# 
  1360  0EA5                     	;# 
  1361  0EA5                     	;# 
  1362  0EA6                     	;# 
  1363  0EA7                     	;# 
  1364  0EA7                     	;# 
  1365  0EA8                     	;# 
  1366  0EA9                     	;# 
  1367  0EAA                     	;# 
  1368  0EAB                     	;# 
  1369  0EAC                     	;# 
  1370  0EAD                     	;# 
  1371  0EAE                     	;# 
  1372  0EAF                     	;# 
  1373  0EB1                     	;# 
  1374  0EB2                     	;# 
  1375  0EB3                     	;# 
  1376  0EB4                     	;# 
  1377  0EB5                     	;# 
  1378  0EB6                     	;# 
  1379  0EB7                     	;# 
  1380  0EB8                     	;# 
  1381  0EB9                     	;# 
  1382  0EBA                     	;# 
  1383  0EBB                     	;# 
  1384  0EBC                     	;# 
  1385  0EBD                     	;# 
  1386  0EBE                     	;# 
  1387  0EBF                     	;# 
  1388  0EC0                     	;# 
  1389  0EC1                     	;# 
  1390  0EC1                     	;# 
  1391  0EC2                     	;# 
  1392  0EC3                     	;# 
  1393  0EC3                     	;# 
  1394  0EC4                     	;# 
  1395  0EC5                     	;# 
  1396  0EC5                     	;# 
  1397  0EC6                     	;# 
  1398  0EC7                     	;# 
  1399  0EC7                     	;# 
  1400  0EC8                     	;# 
  1401  0EC9                     	;# 
  1402  0ECA                     	;# 
  1403  0ECB                     	;# 
  1404  0ECC                     	;# 
  1405  0ECD                     	;# 
  1406  0ECE                     	;# 
  1407  0ECF                     	;# 
  1408  0ED1                     	;# 
  1409  0ED2                     	;# 
  1410  0ED3                     	;# 
  1411  0ED4                     	;# 
  1412  0ED5                     	;# 
  1413  0ED6                     	;# 
  1414  0ED7                     	;# 
  1415  0ED8                     	;# 
  1416  0ED9                     	;# 
  1417  0EDA                     	;# 
  1418  0EDB                     	;# 
  1419  0EDC                     	;# 
  1420  0EDD                     	;# 
  1421  0EDE                     	;# 
  1422  0EDF                     	;# 
  1423  0EE0                     	;# 
  1424  0EE1                     	;# 
  1425  0EE1                     	;# 
  1426  0EE2                     	;# 
  1427  0EE3                     	;# 
  1428  0EE3                     	;# 
  1429  0EE4                     	;# 
  1430  0EE5                     	;# 
  1431  0EE5                     	;# 
  1432  0EE6                     	;# 
  1433  0EE7                     	;# 
  1434  0EE7                     	;# 
  1435  0EE8                     	;# 
  1436  0EE9                     	;# 
  1437  0EEA                     	;# 
  1438  0EEB                     	;# 
  1439  0EEC                     	;# 
  1440  0EED                     	;# 
  1441  0EEE                     	;# 
  1442  0EEF                     	;# 
  1443  0F11                     	;# 
  1444  0F12                     	;# 
  1445  0F13                     	;# 
  1446  0F14                     	;# 
  1447  0F15                     	;# 
  1448  0F16                     	;# 
  1449  0F17                     	;# 
  1450  0F18                     	;# 
  1451  0F19                     	;# 
  1452  0F1A                     	;# 
  1453  0F1B                     	;# 
  1454  0F1C                     	;# 
  1455  0F1D                     	;# 
  1456  0F1E                     	;# 
  1457  0F1F                     	;# 
  1458  0F20                     	;# 
  1459  0F21                     	;# 
  1460  0F21                     	;# 
  1461  0F22                     	;# 
  1462  0F23                     	;# 
  1463  0F23                     	;# 
  1464  0F24                     	;# 
  1465  0F25                     	;# 
  1466  0F25                     	;# 
  1467  0F26                     	;# 
  1468  0F27                     	;# 
  1469  0F27                     	;# 
  1470  0F28                     	;# 
  1471  0F29                     	;# 
  1472  0F2A                     	;# 
  1473  0F2B                     	;# 
  1474  0F2C                     	;# 
  1475  0F2D                     	;# 
  1476  0F2E                     	;# 
  1477  0F2F                     	;# 
  1478  0FE4                     	;# 
  1479  0FE5                     	;# 
  1480  0FE6                     	;# 
  1481  0FE7                     	;# 
  1482  0FE8                     	;# 
  1483  0FE9                     	;# 
  1484  0FEA                     	;# 
  1485  0FEB                     	;# 
  1486  0FED                     	;# 
  1487  0FEE                     	;# 
  1488  0FEF                     	;# 
  1489  0000                     	;# 
  1490  0001                     	;# 
  1491  0002                     	;# 
  1492  0003                     	;# 
  1493  0004                     	;# 
  1494  0005                     	;# 
  1495  0006                     	;# 
  1496  0007                     	;# 
  1497  0008                     	;# 
  1498  0009                     	;# 
  1499  000A                     	;# 
  1500  000B                     	;# 
  1501  000C                     	;# 
  1502  000D                     	;# 
  1503  000E                     	;# 
  1504  000F                     	;# 
  1505  0010                     	;# 
  1506  0011                     	;# 
  1507  0012                     	;# 
  1508  0013                     	;# 
  1509  0014                     	;# 
  1510  0015                     	;# 
  1511  0016                     	;# 
  1512  0016                     	;# 
  1513  0017                     	;# 
  1514  0018                     	;# 
  1515  0019                     	;# 
  1516  001A                     	;# 
  1517  001B                     	;# 
  1518  001C                     	;# 
  1519  008C                     	;# 
  1520  008D                     	;# 
  1521  008E                     	;# 
  1522  008F                     	;# 
  1523  0090                     	;# 
  1524  0091                     	;# 
  1525  0092                     	;# 
  1526  0093                     	;# 
  1527  0094                     	;# 
  1528  0095                     	;# 
  1529  0096                     	;# 
  1530  0097                     	;# 
  1531  0098                     	;# 
  1532  0099                     	;# 
  1533  009A                     	;# 
  1534  009B                     	;# 
  1535  009B                     	;# 
  1536  009C                     	;# 
  1537  009D                     	;# 
  1538  009E                     	;# 
  1539  009F                     	;# 
  1540  010C                     	;# 
  1541  010D                     	;# 
  1542  010E                     	;# 
  1543  010F                     	;# 
  1544  0110                     	;# 
  1545  0111                     	;# 
  1546  0112                     	;# 
  1547  0113                     	;# 
  1548  0114                     	;# 
  1549  0115                     	;# 
  1550  0116                     	;# 
  1551  0117                     	;# 
  1552  0118                     	;# 
  1553  0119                     	;# 
  1554  011A                     	;# 
  1555  011B                     	;# 
  1556  011C                     	;# 
  1557  011D                     	;# 
  1558  011D                     	;# 
  1559  011D                     	;# 
  1560  011E                     	;# 
  1561  011F                     	;# 
  1562  018C                     	;# 
  1563  018D                     	;# 
  1564  018E                     	;# 
  1565  018F                     	;# 
  1566  0190                     	;# 
  1567  0191                     	;# 
  1568  0191                     	;# 
  1569  0192                     	;# 
  1570  0193                     	;# 
  1571  0193                     	;# 
  1572  0193                     	;# 
  1573  0194                     	;# 
  1574  0195                     	;# 
  1575  0196                     	;# 
  1576  0197                     	;# 
  1577  0199                     	;# 
  1578  0199                     	;# 
  1579  0199                     	;# 
  1580  019A                     	;# 
  1581  019A                     	;# 
  1582  019A                     	;# 
  1583  019B                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019C                     	;# 
  1589  019C                     	;# 
  1590  019C                     	;# 
  1591  019D                     	;# 
  1592  019D                     	;# 
  1593  019D                     	;# 
  1594  019E                     	;# 
  1595  019E                     	;# 
  1596  019E                     	;# 
  1597  019F                     	;# 
  1598  019F                     	;# 
  1599  019F                     	;# 
  1600  019F                     	;# 
  1601  019F                     	;# 
  1602  020C                     	;# 
  1603  020D                     	;# 
  1604  020E                     	;# 
  1605  020F                     	;# 
  1606  0210                     	;# 
  1607  0211                     	;# 
  1608  0211                     	;# 
  1609  0212                     	;# 
  1610  0212                     	;# 
  1611  0213                     	;# 
  1612  0213                     	;# 
  1613  0214                     	;# 
  1614  0214                     	;# 
  1615  0215                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0216                     	;# 
  1620  0216                     	;# 
  1621  0217                     	;# 
  1622  0217                     	;# 
  1623  028C                     	;# 
  1624  028D                     	;# 
  1625  028E                     	;# 
  1626  028F                     	;# 
  1627  0290                     	;# 
  1628  0291                     	;# 
  1629  0291                     	;# 
  1630  0292                     	;# 
  1631  0293                     	;# 
  1632  0298                     	;# 
  1633  0298                     	;# 
  1634  0299                     	;# 
  1635  029A                     	;# 
  1636  030C                     	;# 
  1637  030D                     	;# 
  1638  030E                     	;# 
  1639  030F                     	;# 
  1640  0310                     	;# 
  1641  0311                     	;# 
  1642  0311                     	;# 
  1643  0312                     	;# 
  1644  0313                     	;# 
  1645  038C                     	;# 
  1646  038D                     	;# 
  1647  038E                     	;# 
  1648  038F                     	;# 
  1649  0390                     	;# 
  1650  0391                     	;# 
  1651  0392                     	;# 
  1652  0393                     	;# 
  1653  0394                     	;# 
  1654  0395                     	;# 
  1655  0396                     	;# 
  1656  0397                     	;# 
  1657  0398                     	;# 
  1658  0399                     	;# 
  1659  039D                     	;# 
  1660  039E                     	;# 
  1661  039F                     	;# 
  1662  0511                     	;# 
  1663  0513                     	;# 
  1664  0515                     	;# 
  1665  051A                     	;# 
  1666  0591                     	;# 
  1667  0592                     	;# 
  1668  0592                     	;# 
  1669  0593                     	;# 
  1670  0594                     	;# 
  1671  0594                     	;# 
  1672  0595                     	;# 
  1673  0596                     	;# 
  1674  0596                     	;# 
  1675  0E91                     	;# 
  1676  0E92                     	;# 
  1677  0E93                     	;# 
  1678  0E94                     	;# 
  1679  0E95                     	;# 
  1680  0E96                     	;# 
  1681  0E97                     	;# 
  1682  0E98                     	;# 
  1683  0E99                     	;# 
  1684  0E9A                     	;# 
  1685  0E9B                     	;# 
  1686  0E9C                     	;# 
  1687  0E9D                     	;# 
  1688  0E9E                     	;# 
  1689  0E9F                     	;# 
  1690  0EA0                     	;# 
  1691  0EA1                     	;# 
  1692  0EA1                     	;# 
  1693  0EA2                     	;# 
  1694  0EA3                     	;# 
  1695  0EA3                     	;# 
  1696  0EA4                     	;# 
  1697  0EA5                     	;# 
  1698  0EA5                     	;# 
  1699  0EA6                     	;# 
  1700  0EA7                     	;# 
  1701  0EA7                     	;# 
  1702  0EA8                     	;# 
  1703  0EA9                     	;# 
  1704  0EAA                     	;# 
  1705  0EAB                     	;# 
  1706  0EAC                     	;# 
  1707  0EAD                     	;# 
  1708  0EAE                     	;# 
  1709  0EAF                     	;# 
  1710  0EB1                     	;# 
  1711  0EB2                     	;# 
  1712  0EB3                     	;# 
  1713  0EB4                     	;# 
  1714  0EB5                     	;# 
  1715  0EB6                     	;# 
  1716  0EB7                     	;# 
  1717  0EB8                     	;# 
  1718  0EB9                     	;# 
  1719  0EBA                     	;# 
  1720  0EBB                     	;# 
  1721  0EBC                     	;# 
  1722  0EBD                     	;# 
  1723  0EBE                     	;# 
  1724  0EBF                     	;# 
  1725  0EC0                     	;# 
  1726  0EC1                     	;# 
  1727  0EC1                     	;# 
  1728  0EC2                     	;# 
  1729  0EC3                     	;# 
  1730  0EC3                     	;# 
  1731  0EC4                     	;# 
  1732  0EC5                     	;# 
  1733  0EC5                     	;# 
  1734  0EC6                     	;# 
  1735  0EC7                     	;# 
  1736  0EC7                     	;# 
  1737  0EC8                     	;# 
  1738  0EC9                     	;# 
  1739  0ECA                     	;# 
  1740  0ECB                     	;# 
  1741  0ECC                     	;# 
  1742  0ECD                     	;# 
  1743  0ECE                     	;# 
  1744  0ECF                     	;# 
  1745  0ED1                     	;# 
  1746  0ED2                     	;# 
  1747  0ED3                     	;# 
  1748  0ED4                     	;# 
  1749  0ED5                     	;# 
  1750  0ED6                     	;# 
  1751  0ED7                     	;# 
  1752  0ED8                     	;# 
  1753  0ED9                     	;# 
  1754  0EDA                     	;# 
  1755  0EDB                     	;# 
  1756  0EDC                     	;# 
  1757  0EDD                     	;# 
  1758  0EDE                     	;# 
  1759  0EDF                     	;# 
  1760  0EE0                     	;# 
  1761  0EE1                     	;# 
  1762  0EE1                     	;# 
  1763  0EE2                     	;# 
  1764  0EE3                     	;# 
  1765  0EE3                     	;# 
  1766  0EE4                     	;# 
  1767  0EE5                     	;# 
  1768  0EE5                     	;# 
  1769  0EE6                     	;# 
  1770  0EE7                     	;# 
  1771  0EE7                     	;# 
  1772  0EE8                     	;# 
  1773  0EE9                     	;# 
  1774  0EEA                     	;# 
  1775  0EEB                     	;# 
  1776  0EEC                     	;# 
  1777  0EED                     	;# 
  1778  0EEE                     	;# 
  1779  0EEF                     	;# 
  1780  0F11                     	;# 
  1781  0F12                     	;# 
  1782  0F13                     	;# 
  1783  0F14                     	;# 
  1784  0F15                     	;# 
  1785  0F16                     	;# 
  1786  0F17                     	;# 
  1787  0F18                     	;# 
  1788  0F19                     	;# 
  1789  0F1A                     	;# 
  1790  0F1B                     	;# 
  1791  0F1C                     	;# 
  1792  0F1D                     	;# 
  1793  0F1E                     	;# 
  1794  0F1F                     	;# 
  1795  0F20                     	;# 
  1796  0F21                     	;# 
  1797  0F21                     	;# 
  1798  0F22                     	;# 
  1799  0F23                     	;# 
  1800  0F23                     	;# 
  1801  0F24                     	;# 
  1802  0F25                     	;# 
  1803  0F25                     	;# 
  1804  0F26                     	;# 
  1805  0F27                     	;# 
  1806  0F27                     	;# 
  1807  0F28                     	;# 
  1808  0F29                     	;# 
  1809  0F2A                     	;# 
  1810  0F2B                     	;# 
  1811  0F2C                     	;# 
  1812  0F2D                     	;# 
  1813  0F2E                     	;# 
  1814  0F2F                     	;# 
  1815  0FE4                     	;# 
  1816  0FE5                     	;# 
  1817  0FE6                     	;# 
  1818  0FE7                     	;# 
  1819  0FE8                     	;# 
  1820  0FE9                     	;# 
  1821  0FEA                     	;# 
  1822  0FEB                     	;# 
  1823  0FED                     	;# 
  1824  0FEE                     	;# 
  1825  0FEF                     	;# 
  1826  0000                     	;# 
  1827  0001                     	;# 
  1828  0002                     	;# 
  1829  0003                     	;# 
  1830  0004                     	;# 
  1831  0005                     	;# 
  1832  0006                     	;# 
  1833  0007                     	;# 
  1834  0008                     	;# 
  1835  0009                     	;# 
  1836  000A                     	;# 
  1837  000B                     	;# 
  1838  000C                     	;# 
  1839  000D                     	;# 
  1840  000E                     	;# 
  1841  000F                     	;# 
  1842  0010                     	;# 
  1843  0011                     	;# 
  1844  0012                     	;# 
  1845  0013                     	;# 
  1846  0014                     	;# 
  1847  0015                     	;# 
  1848  0016                     	;# 
  1849  0016                     	;# 
  1850  0017                     	;# 
  1851  0018                     	;# 
  1852  0019                     	;# 
  1853  001A                     	;# 
  1854  001B                     	;# 
  1855  001C                     	;# 
  1856  008C                     	;# 
  1857  008D                     	;# 
  1858  008E                     	;# 
  1859  008F                     	;# 
  1860  0090                     	;# 
  1861  0091                     	;# 
  1862  0092                     	;# 
  1863  0093                     	;# 
  1864  0094                     	;# 
  1865  0095                     	;# 
  1866  0096                     	;# 
  1867  0097                     	;# 
  1868  0098                     	;# 
  1869  0099                     	;# 
  1870  009A                     	;# 
  1871  009B                     	;# 
  1872  009B                     	;# 
  1873  009C                     	;# 
  1874  009D                     	;# 
  1875  009E                     	;# 
  1876  009F                     	;# 
  1877  010C                     	;# 
  1878  010D                     	;# 
  1879  010E                     	;# 
  1880  010F                     	;# 
  1881  0110                     	;# 
  1882  0111                     	;# 
  1883  0112                     	;# 
  1884  0113                     	;# 
  1885  0114                     	;# 
  1886  0115                     	;# 
  1887  0116                     	;# 
  1888  0117                     	;# 
  1889  0118                     	;# 
  1890  0119                     	;# 
  1891  011A                     	;# 
  1892  011B                     	;# 
  1893  011C                     	;# 
  1894  011D                     	;# 
  1895  011D                     	;# 
  1896  011D                     	;# 
  1897  011E                     	;# 
  1898  011F                     	;# 
  1899  018C                     	;# 
  1900  018D                     	;# 
  1901  018E                     	;# 
  1902  018F                     	;# 
  1903  0190                     	;# 
  1904  0191                     	;# 
  1905  0191                     	;# 
  1906  0192                     	;# 
  1907  0193                     	;# 
  1908  0193                     	;# 
  1909  0193                     	;# 
  1910  0194                     	;# 
  1911  0195                     	;# 
  1912  0196                     	;# 
  1913  0197                     	;# 
  1914  0199                     	;# 
  1915  0199                     	;# 
  1916  0199                     	;# 
  1917  019A                     	;# 
  1918  019A                     	;# 
  1919  019A                     	;# 
  1920  019B                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019C                     	;# 
  1926  019C                     	;# 
  1927  019C                     	;# 
  1928  019D                     	;# 
  1929  019D                     	;# 
  1930  019D                     	;# 
  1931  019E                     	;# 
  1932  019E                     	;# 
  1933  019E                     	;# 
  1934  019F                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  019F                     	;# 
  1939  020C                     	;# 
  1940  020D                     	;# 
  1941  020E                     	;# 
  1942  020F                     	;# 
  1943  0210                     	;# 
  1944  0211                     	;# 
  1945  0211                     	;# 
  1946  0212                     	;# 
  1947  0212                     	;# 
  1948  0213                     	;# 
  1949  0213                     	;# 
  1950  0214                     	;# 
  1951  0214                     	;# 
  1952  0215                     	;# 
  1953  0215                     	;# 
  1954  0215                     	;# 
  1955  0215                     	;# 
  1956  0216                     	;# 
  1957  0216                     	;# 
  1958  0217                     	;# 
  1959  0217                     	;# 
  1960  028C                     	;# 
  1961  028D                     	;# 
  1962  028E                     	;# 
  1963  028F                     	;# 
  1964  0290                     	;# 
  1965  0291                     	;# 
  1966  0291                     	;# 
  1967  0292                     	;# 
  1968  0293                     	;# 
  1969  0298                     	;# 
  1970  0298                     	;# 
  1971  0299                     	;# 
  1972  029A                     	;# 
  1973  030C                     	;# 
  1974  030D                     	;# 
  1975  030E                     	;# 
  1976  030F                     	;# 
  1977  0310                     	;# 
  1978  0311                     	;# 
  1979  0311                     	;# 
  1980  0312                     	;# 
  1981  0313                     	;# 
  1982  038C                     	;# 
  1983  038D                     	;# 
  1984  038E                     	;# 
  1985  038F                     	;# 
  1986  0390                     	;# 
  1987  0391                     	;# 
  1988  0392                     	;# 
  1989  0393                     	;# 
  1990  0394                     	;# 
  1991  0395                     	;# 
  1992  0396                     	;# 
  1993  0397                     	;# 
  1994  0398                     	;# 
  1995  0399                     	;# 
  1996  039D                     	;# 
  1997  039E                     	;# 
  1998  039F                     	;# 
  1999  0511                     	;# 
  2000  0513                     	;# 
  2001  0515                     	;# 
  2002  051A                     	;# 
  2003  0591                     	;# 
  2004  0592                     	;# 
  2005  0592                     	;# 
  2006  0593                     	;# 
  2007  0594                     	;# 
  2008  0594                     	;# 
  2009  0595                     	;# 
  2010  0596                     	;# 
  2011  0596                     	;# 
  2012  0E91                     	;# 
  2013  0E92                     	;# 
  2014  0E93                     	;# 
  2015  0E94                     	;# 
  2016  0E95                     	;# 
  2017  0E96                     	;# 
  2018  0E97                     	;# 
  2019  0E98                     	;# 
  2020  0E99                     	;# 
  2021  0E9A                     	;# 
  2022  0E9B                     	;# 
  2023  0E9C                     	;# 
  2024  0E9D                     	;# 
  2025  0E9E                     	;# 
  2026  0E9F                     	;# 
  2027  0EA0                     	;# 
  2028  0EA1                     	;# 
  2029  0EA1                     	;# 
  2030  0EA2                     	;# 
  2031  0EA3                     	;# 
  2032  0EA3                     	;# 
  2033  0EA4                     	;# 
  2034  0EA5                     	;# 
  2035  0EA5                     	;# 
  2036  0EA6                     	;# 
  2037  0EA7                     	;# 
  2038  0EA7                     	;# 
  2039  0EA8                     	;# 
  2040  0EA9                     	;# 
  2041  0EAA                     	;# 
  2042  0EAB                     	;# 
  2043  0EAC                     	;# 
  2044  0EAD                     	;# 
  2045  0EAE                     	;# 
  2046  0EAF                     	;# 
  2047  0EB1                     	;# 
  2048  0EB2                     	;# 
  2049  0EB3                     	;# 
  2050  0EB4                     	;# 
  2051  0EB5                     	;# 
  2052  0EB6                     	;# 
  2053  0EB7                     	;# 
  2054  0EB8                     	;# 
  2055  0EB9                     	;# 
  2056  0EBA                     	;# 
  2057  0EBB                     	;# 
  2058  0EBC                     	;# 
  2059  0EBD                     	;# 
  2060  0EBE                     	;# 
  2061  0EBF                     	;# 
  2062  0EC0                     	;# 
  2063  0EC1                     	;# 
  2064  0EC1                     	;# 
  2065  0EC2                     	;# 
  2066  0EC3                     	;# 
  2067  0EC3                     	;# 
  2068  0EC4                     	;# 
  2069  0EC5                     	;# 
  2070  0EC5                     	;# 
  2071  0EC6                     	;# 
  2072  0EC7                     	;# 
  2073  0EC7                     	;# 
  2074  0EC8                     	;# 
  2075  0EC9                     	;# 
  2076  0ECA                     	;# 
  2077  0ECB                     	;# 
  2078  0ECC                     	;# 
  2079  0ECD                     	;# 
  2080  0ECE                     	;# 
  2081  0ECF                     	;# 
  2082  0ED1                     	;# 
  2083  0ED2                     	;# 
  2084  0ED3                     	;# 
  2085  0ED4                     	;# 
  2086  0ED5                     	;# 
  2087  0ED6                     	;# 
  2088  0ED7                     	;# 
  2089  0ED8                     	;# 
  2090  0ED9                     	;# 
  2091  0EDA                     	;# 
  2092  0EDB                     	;# 
  2093  0EDC                     	;# 
  2094  0EDD                     	;# 
  2095  0EDE                     	;# 
  2096  0EDF                     	;# 
  2097  0EE0                     	;# 
  2098  0EE1                     	;# 
  2099  0EE1                     	;# 
  2100  0EE2                     	;# 
  2101  0EE3                     	;# 
  2102  0EE3                     	;# 
  2103  0EE4                     	;# 
  2104  0EE5                     	;# 
  2105  0EE5                     	;# 
  2106  0EE6                     	;# 
  2107  0EE7                     	;# 
  2108  0EE7                     	;# 
  2109  0EE8                     	;# 
  2110  0EE9                     	;# 
  2111  0EEA                     	;# 
  2112  0EEB                     	;# 
  2113  0EEC                     	;# 
  2114  0EED                     	;# 
  2115  0EEE                     	;# 
  2116  0EEF                     	;# 
  2117  0F11                     	;# 
  2118  0F12                     	;# 
  2119  0F13                     	;# 
  2120  0F14                     	;# 
  2121  0F15                     	;# 
  2122  0F16                     	;# 
  2123  0F17                     	;# 
  2124  0F18                     	;# 
  2125  0F19                     	;# 
  2126  0F1A                     	;# 
  2127  0F1B                     	;# 
  2128  0F1C                     	;# 
  2129  0F1D                     	;# 
  2130  0F1E                     	;# 
  2131  0F1F                     	;# 
  2132  0F20                     	;# 
  2133  0F21                     	;# 
  2134  0F21                     	;# 
  2135  0F22                     	;# 
  2136  0F23                     	;# 
  2137  0F23                     	;# 
  2138  0F24                     	;# 
  2139  0F25                     	;# 
  2140  0F25                     	;# 
  2141  0F26                     	;# 
  2142  0F27                     	;# 
  2143  0F27                     	;# 
  2144  0F28                     	;# 
  2145  0F29                     	;# 
  2146  0F2A                     	;# 
  2147  0F2B                     	;# 
  2148  0F2C                     	;# 
  2149  0F2D                     	;# 
  2150  0F2E                     	;# 
  2151  0F2F                     	;# 
  2152  0FE4                     	;# 
  2153  0FE5                     	;# 
  2154  0FE6                     	;# 
  2155  0FE7                     	;# 
  2156  0FE8                     	;# 
  2157  0FE9                     	;# 
  2158  0FEA                     	;# 
  2159  0FEB                     	;# 
  2160  0FED                     	;# 
  2161  0FEE                     	;# 
  2162  0FEF                     	;# 
  2163  0000                     	;# 
  2164  0001                     	;# 
  2165  0002                     	;# 
  2166  0003                     	;# 
  2167  0004                     	;# 
  2168  0005                     	;# 
  2169  0006                     	;# 
  2170  0007                     	;# 
  2171  0008                     	;# 
  2172  0009                     	;# 
  2173  000A                     	;# 
  2174  000B                     	;# 
  2175  000C                     	;# 
  2176  000D                     	;# 
  2177  000E                     	;# 
  2178  000F                     	;# 
  2179  0010                     	;# 
  2180  0011                     	;# 
  2181  0012                     	;# 
  2182  0013                     	;# 
  2183  0014                     	;# 
  2184  0015                     	;# 
  2185  0016                     	;# 
  2186  0016                     	;# 
  2187  0017                     	;# 
  2188  0018                     	;# 
  2189  0019                     	;# 
  2190  001A                     	;# 
  2191  001B                     	;# 
  2192  001C                     	;# 
  2193  008C                     	;# 
  2194  008D                     	;# 
  2195  008E                     	;# 
  2196  008F                     	;# 
  2197  0090                     	;# 
  2198  0091                     	;# 
  2199  0092                     	;# 
  2200  0093                     	;# 
  2201  0094                     	;# 
  2202  0095                     	;# 
  2203  0096                     	;# 
  2204  0097                     	;# 
  2205  0098                     	;# 
  2206  0099                     	;# 
  2207  009A                     	;# 
  2208  009B                     	;# 
  2209  009B                     	;# 
  2210  009C                     	;# 
  2211  009D                     	;# 
  2212  009E                     	;# 
  2213  009F                     	;# 
  2214  010C                     	;# 
  2215  010D                     	;# 
  2216  010E                     	;# 
  2217  010F                     	;# 
  2218  0110                     	;# 
  2219  0111                     	;# 
  2220  0112                     	;# 
  2221  0113                     	;# 
  2222  0114                     	;# 
  2223  0115                     	;# 
  2224  0116                     	;# 
  2225  0117                     	;# 
  2226  0118                     	;# 
  2227  0119                     	;# 
  2228  011A                     	;# 
  2229  011B                     	;# 
  2230  011C                     	;# 
  2231  011D                     	;# 
  2232  011D                     	;# 
  2233  011D                     	;# 
  2234  011E                     	;# 
  2235  011F                     	;# 
  2236  018C                     	;# 
  2237  018D                     	;# 
  2238  018E                     	;# 
  2239  018F                     	;# 
  2240  0190                     	;# 
  2241  0191                     	;# 
  2242  0191                     	;# 
  2243  0192                     	;# 
  2244  0193                     	;# 
  2245  0193                     	;# 
  2246  0193                     	;# 
  2247  0194                     	;# 
  2248  0195                     	;# 
  2249  0196                     	;# 
  2250  0197                     	;# 
  2251  0199                     	;# 
  2252  0199                     	;# 
  2253  0199                     	;# 
  2254  019A                     	;# 
  2255  019A                     	;# 
  2256  019A                     	;# 
  2257  019B                     	;# 
  2258  019B                     	;# 
  2259  019B                     	;# 
  2260  019B                     	;# 
  2261  019B                     	;# 
  2262  019C                     	;# 
  2263  019C                     	;# 
  2264  019C                     	;# 
  2265  019D                     	;# 
  2266  019D                     	;# 
  2267  019D                     	;# 
  2268  019E                     	;# 
  2269  019E                     	;# 
  2270  019E                     	;# 
  2271  019F                     	;# 
  2272  019F                     	;# 
  2273  019F                     	;# 
  2274  019F                     	;# 
  2275  019F                     	;# 
  2276  020C                     	;# 
  2277  020D                     	;# 
  2278  020E                     	;# 
  2279  020F                     	;# 
  2280  0210                     	;# 
  2281  0211                     	;# 
  2282  0211                     	;# 
  2283  0212                     	;# 
  2284  0212                     	;# 
  2285  0213                     	;# 
  2286  0213                     	;# 
  2287  0214                     	;# 
  2288  0214                     	;# 
  2289  0215                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0216                     	;# 
  2294  0216                     	;# 
  2295  0217                     	;# 
  2296  0217                     	;# 
  2297  028C                     	;# 
  2298  028D                     	;# 
  2299  028E                     	;# 
  2300  028F                     	;# 
  2301  0290                     	;# 
  2302  0291                     	;# 
  2303  0291                     	;# 
  2304  0292                     	;# 
  2305  0293                     	;# 
  2306  0298                     	;# 
  2307  0298                     	;# 
  2308  0299                     	;# 
  2309  029A                     	;# 
  2310  030C                     	;# 
  2311  030D                     	;# 
  2312  030E                     	;# 
  2313  030F                     	;# 
  2314  0310                     	;# 
  2315  0311                     	;# 
  2316  0311                     	;# 
  2317  0312                     	;# 
  2318  0313                     	;# 
  2319  038C                     	;# 
  2320  038D                     	;# 
  2321  038E                     	;# 
  2322  038F                     	;# 
  2323  0390                     	;# 
  2324  0391                     	;# 
  2325  0392                     	;# 
  2326  0393                     	;# 
  2327  0394                     	;# 
  2328  0395                     	;# 
  2329  0396                     	;# 
  2330  0397                     	;# 
  2331  0398                     	;# 
  2332  0399                     	;# 
  2333  039D                     	;# 
  2334  039E                     	;# 
  2335  039F                     	;# 
  2336  0511                     	;# 
  2337  0513                     	;# 
  2338  0515                     	;# 
  2339  051A                     	;# 
  2340  0591                     	;# 
  2341  0592                     	;# 
  2342  0592                     	;# 
  2343  0593                     	;# 
  2344  0594                     	;# 
  2345  0594                     	;# 
  2346  0595                     	;# 
  2347  0596                     	;# 
  2348  0596                     	;# 
  2349  0E91                     	;# 
  2350  0E92                     	;# 
  2351  0E93                     	;# 
  2352  0E94                     	;# 
  2353  0E95                     	;# 
  2354  0E96                     	;# 
  2355  0E97                     	;# 
  2356  0E98                     	;# 
  2357  0E99                     	;# 
  2358  0E9A                     	;# 
  2359  0E9B                     	;# 
  2360  0E9C                     	;# 
  2361  0E9D                     	;# 
  2362  0E9E                     	;# 
  2363  0E9F                     	;# 
  2364  0EA0                     	;# 
  2365  0EA1                     	;# 
  2366  0EA1                     	;# 
  2367  0EA2                     	;# 
  2368  0EA3                     	;# 
  2369  0EA3                     	;# 
  2370  0EA4                     	;# 
  2371  0EA5                     	;# 
  2372  0EA5                     	;# 
  2373  0EA6                     	;# 
  2374  0EA7                     	;# 
  2375  0EA7                     	;# 
  2376  0EA8                     	;# 
  2377  0EA9                     	;# 
  2378  0EAA                     	;# 
  2379  0EAB                     	;# 
  2380  0EAC                     	;# 
  2381  0EAD                     	;# 
  2382  0EAE                     	;# 
  2383  0EAF                     	;# 
  2384  0EB1                     	;# 
  2385  0EB2                     	;# 
  2386  0EB3                     	;# 
  2387  0EB4                     	;# 
  2388  0EB5                     	;# 
  2389  0EB6                     	;# 
  2390  0EB7                     	;# 
  2391  0EB8                     	;# 
  2392  0EB9                     	;# 
  2393  0EBA                     	;# 
  2394  0EBB                     	;# 
  2395  0EBC                     	;# 
  2396  0EBD                     	;# 
  2397  0EBE                     	;# 
  2398  0EBF                     	;# 
  2399  0EC0                     	;# 
  2400  0EC1                     	;# 
  2401  0EC1                     	;# 
  2402  0EC2                     	;# 
  2403  0EC3                     	;# 
  2404  0EC3                     	;# 
  2405  0EC4                     	;# 
  2406  0EC5                     	;# 
  2407  0EC5                     	;# 
  2408  0EC6                     	;# 
  2409  0EC7                     	;# 
  2410  0EC7                     	;# 
  2411  0EC8                     	;# 
  2412  0EC9                     	;# 
  2413  0ECA                     	;# 
  2414  0ECB                     	;# 
  2415  0ECC                     	;# 
  2416  0ECD                     	;# 
  2417  0ECE                     	;# 
  2418  0ECF                     	;# 
  2419  0ED1                     	;# 
  2420  0ED2                     	;# 
  2421  0ED3                     	;# 
  2422  0ED4                     	;# 
  2423  0ED5                     	;# 
  2424  0ED6                     	;# 
  2425  0ED7                     	;# 
  2426  0ED8                     	;# 
  2427  0ED9                     	;# 
  2428  0EDA                     	;# 
  2429  0EDB                     	;# 
  2430  0EDC                     	;# 
  2431  0EDD                     	;# 
  2432  0EDE                     	;# 
  2433  0EDF                     	;# 
  2434  0EE0                     	;# 
  2435  0EE1                     	;# 
  2436  0EE1                     	;# 
  2437  0EE2                     	;# 
  2438  0EE3                     	;# 
  2439  0EE3                     	;# 
  2440  0EE4                     	;# 
  2441  0EE5                     	;# 
  2442  0EE5                     	;# 
  2443  0EE6                     	;# 
  2444  0EE7                     	;# 
  2445  0EE7                     	;# 
  2446  0EE8                     	;# 
  2447  0EE9                     	;# 
  2448  0EEA                     	;# 
  2449  0EEB                     	;# 
  2450  0EEC                     	;# 
  2451  0EED                     	;# 
  2452  0EEE                     	;# 
  2453  0EEF                     	;# 
  2454  0F11                     	;# 
  2455  0F12                     	;# 
  2456  0F13                     	;# 
  2457  0F14                     	;# 
  2458  0F15                     	;# 
  2459  0F16                     	;# 
  2460  0F17                     	;# 
  2461  0F18                     	;# 
  2462  0F19                     	;# 
  2463  0F1A                     	;# 
  2464  0F1B                     	;# 
  2465  0F1C                     	;# 
  2466  0F1D                     	;# 
  2467  0F1E                     	;# 
  2468  0F1F                     	;# 
  2469  0F20                     	;# 
  2470  0F21                     	;# 
  2471  0F21                     	;# 
  2472  0F22                     	;# 
  2473  0F23                     	;# 
  2474  0F23                     	;# 
  2475  0F24                     	;# 
  2476  0F25                     	;# 
  2477  0F25                     	;# 
  2478  0F26                     	;# 
  2479  0F27                     	;# 
  2480  0F27                     	;# 
  2481  0F28                     	;# 
  2482  0F29                     	;# 
  2483  0F2A                     	;# 
  2484  0F2B                     	;# 
  2485  0F2C                     	;# 
  2486  0F2D                     	;# 
  2487  0F2E                     	;# 
  2488  0F2F                     	;# 
  2489  0FE4                     	;# 
  2490  0FE5                     	;# 
  2491  0FE6                     	;# 
  2492  0FE7                     	;# 
  2493  0FE8                     	;# 
  2494  0FE9                     	;# 
  2495  0FEA                     	;# 
  2496  0FEB                     	;# 
  2497  0FED                     	;# 
  2498  0FEE                     	;# 
  2499  0FEF                     	;# 
  2500  0000                     	;# 
  2501  0001                     	;# 
  2502  0002                     	;# 
  2503  0003                     	;# 
  2504  0004                     	;# 
  2505  0005                     	;# 
  2506  0006                     	;# 
  2507  0007                     	;# 
  2508  0008                     	;# 
  2509  0009                     	;# 
  2510  000A                     	;# 
  2511  000B                     	;# 
  2512  000C                     	;# 
  2513  000D                     	;# 
  2514  000E                     	;# 
  2515  000F                     	;# 
  2516  0010                     	;# 
  2517  0011                     	;# 
  2518  0012                     	;# 
  2519  0013                     	;# 
  2520  0014                     	;# 
  2521  0015                     	;# 
  2522  0016                     	;# 
  2523  0016                     	;# 
  2524  0017                     	;# 
  2525  0018                     	;# 
  2526  0019                     	;# 
  2527  001A                     	;# 
  2528  001B                     	;# 
  2529  001C                     	;# 
  2530  008C                     	;# 
  2531  008D                     	;# 
  2532  008E                     	;# 
  2533  008F                     	;# 
  2534  0090                     	;# 
  2535  0091                     	;# 
  2536  0092                     	;# 
  2537  0093                     	;# 
  2538  0094                     	;# 
  2539  0095                     	;# 
  2540  0096                     	;# 
  2541  0097                     	;# 
  2542  0098                     	;# 
  2543  0099                     	;# 
  2544  009A                     	;# 
  2545  009B                     	;# 
  2546  009B                     	;# 
  2547  009C                     	;# 
  2548  009D                     	;# 
  2549  009E                     	;# 
  2550  009F                     	;# 
  2551  010C                     	;# 
  2552  010D                     	;# 
  2553  010E                     	;# 
  2554  010F                     	;# 
  2555  0110                     	;# 
  2556  0111                     	;# 
  2557  0112                     	;# 
  2558  0113                     	;# 
  2559  0114                     	;# 
  2560  0115                     	;# 
  2561  0116                     	;# 
  2562  0117                     	;# 
  2563  0118                     	;# 
  2564  0119                     	;# 
  2565  011A                     	;# 
  2566  011B                     	;# 
  2567  011C                     	;# 
  2568  011D                     	;# 
  2569  011D                     	;# 
  2570  011D                     	;# 
  2571  011E                     	;# 
  2572  011F                     	;# 
  2573  018C                     	;# 
  2574  018D                     	;# 
  2575  018E                     	;# 
  2576  018F                     	;# 
  2577  0190                     	;# 
  2578  0191                     	;# 
  2579  0191                     	;# 
  2580  0192                     	;# 
  2581  0193                     	;# 
  2582  0193                     	;# 
  2583  0193                     	;# 
  2584  0194                     	;# 
  2585  0195                     	;# 
  2586  0196                     	;# 
  2587  0197                     	;# 
  2588  0199                     	;# 
  2589  0199                     	;# 
  2590  0199                     	;# 
  2591  019A                     	;# 
  2592  019A                     	;# 
  2593  019A                     	;# 
  2594  019B                     	;# 
  2595  019B                     	;# 
  2596  019B                     	;# 
  2597  019B                     	;# 
  2598  019B                     	;# 
  2599  019C                     	;# 
  2600  019C                     	;# 
  2601  019C                     	;# 
  2602  019D                     	;# 
  2603  019D                     	;# 
  2604  019D                     	;# 
  2605  019E                     	;# 
  2606  019E                     	;# 
  2607  019E                     	;# 
  2608  019F                     	;# 
  2609  019F                     	;# 
  2610  019F                     	;# 
  2611  019F                     	;# 
  2612  019F                     	;# 
  2613  020C                     	;# 
  2614  020D                     	;# 
  2615  020E                     	;# 
  2616  020F                     	;# 
  2617  0210                     	;# 
  2618  0211                     	;# 
  2619  0211                     	;# 
  2620  0212                     	;# 
  2621  0212                     	;# 
  2622  0213                     	;# 
  2623  0213                     	;# 
  2624  0214                     	;# 
  2625  0214                     	;# 
  2626  0215                     	;# 
  2627  0215                     	;# 
  2628  0215                     	;# 
  2629  0215                     	;# 
  2630  0216                     	;# 
  2631  0216                     	;# 
  2632  0217                     	;# 
  2633  0217                     	;# 
  2634  028C                     	;# 
  2635  028D                     	;# 
  2636  028E                     	;# 
  2637  028F                     	;# 
  2638  0290                     	;# 
  2639  0291                     	;# 
  2640  0291                     	;# 
  2641  0292                     	;# 
  2642  0293                     	;# 
  2643  0298                     	;# 
  2644  0298                     	;# 
  2645  0299                     	;# 
  2646  029A                     	;# 
  2647  030C                     	;# 
  2648  030D                     	;# 
  2649  030E                     	;# 
  2650  030F                     	;# 
  2651  0310                     	;# 
  2652  0311                     	;# 
  2653  0311                     	;# 
  2654  0312                     	;# 
  2655  0313                     	;# 
  2656  038C                     	;# 
  2657  038D                     	;# 
  2658  038E                     	;# 
  2659  038F                     	;# 
  2660  0390                     	;# 
  2661  0391                     	;# 
  2662  0392                     	;# 
  2663  0393                     	;# 
  2664  0394                     	;# 
  2665  0395                     	;# 
  2666  0396                     	;# 
  2667  0397                     	;# 
  2668  0398                     	;# 
  2669  0399                     	;# 
  2670  039D                     	;# 
  2671  039E                     	;# 
  2672  039F                     	;# 
  2673  0511                     	;# 
  2674  0513                     	;# 
  2675  0515                     	;# 
  2676  051A                     	;# 
  2677  0591                     	;# 
  2678  0592                     	;# 
  2679  0592                     	;# 
  2680  0593                     	;# 
  2681  0594                     	;# 
  2682  0594                     	;# 
  2683  0595                     	;# 
  2684  0596                     	;# 
  2685  0596                     	;# 
  2686  0E91                     	;# 
  2687  0E92                     	;# 
  2688  0E93                     	;# 
  2689  0E94                     	;# 
  2690  0E95                     	;# 
  2691  0E96                     	;# 
  2692  0E97                     	;# 
  2693  0E98                     	;# 
  2694  0E99                     	;# 
  2695  0E9A                     	;# 
  2696  0E9B                     	;# 
  2697  0E9C                     	;# 
  2698  0E9D                     	;# 
  2699  0E9E                     	;# 
  2700  0E9F                     	;# 
  2701  0EA0                     	;# 
  2702  0EA1                     	;# 
  2703  0EA1                     	;# 
  2704  0EA2                     	;# 
  2705  0EA3                     	;# 
  2706  0EA3                     	;# 
  2707  0EA4                     	;# 
  2708  0EA5                     	;# 
  2709  0EA5                     	;# 
  2710  0EA6                     	;# 
  2711  0EA7                     	;# 
  2712  0EA7                     	;# 
  2713  0EA8                     	;# 
  2714  0EA9                     	;# 
  2715  0EAA                     	;# 
  2716  0EAB                     	;# 
  2717  0EAC                     	;# 
  2718  0EAD                     	;# 
  2719  0EAE                     	;# 
  2720  0EAF                     	;# 
  2721  0EB1                     	;# 
  2722  0EB2                     	;# 
  2723  0EB3                     	;# 
  2724  0EB4                     	;# 
  2725  0EB5                     	;# 
  2726  0EB6                     	;# 
  2727  0EB7                     	;# 
  2728  0EB8                     	;# 
  2729  0EB9                     	;# 
  2730  0EBA                     	;# 
  2731  0EBB                     	;# 
  2732  0EBC                     	;# 
  2733  0EBD                     	;# 
  2734  0EBE                     	;# 
  2735  0EBF                     	;# 
  2736  0EC0                     	;# 
  2737  0EC1                     	;# 
  2738  0EC1                     	;# 
  2739  0EC2                     	;# 
  2740  0EC3                     	;# 
  2741  0EC3                     	;# 
  2742  0EC4                     	;# 
  2743  0EC5                     	;# 
  2744  0EC5                     	;# 
  2745  0EC6                     	;# 
  2746  0EC7                     	;# 
  2747  0EC7                     	;# 
  2748  0EC8                     	;# 
  2749  0EC9                     	;# 
  2750  0ECA                     	;# 
  2751  0ECB                     	;# 
  2752  0ECC                     	;# 
  2753  0ECD                     	;# 
  2754  0ECE                     	;# 
  2755  0ECF                     	;# 
  2756  0ED1                     	;# 
  2757  0ED2                     	;# 
  2758  0ED3                     	;# 
  2759  0ED4                     	;# 
  2760  0ED5                     	;# 
  2761  0ED6                     	;# 
  2762  0ED7                     	;# 
  2763  0ED8                     	;# 
  2764  0ED9                     	;# 
  2765  0EDA                     	;# 
  2766  0EDB                     	;# 
  2767  0EDC                     	;# 
  2768  0EDD                     	;# 
  2769  0EDE                     	;# 
  2770  0EDF                     	;# 
  2771  0EE0                     	;# 
  2772  0EE1                     	;# 
  2773  0EE1                     	;# 
  2774  0EE2                     	;# 
  2775  0EE3                     	;# 
  2776  0EE3                     	;# 
  2777  0EE4                     	;# 
  2778  0EE5                     	;# 
  2779  0EE5                     	;# 
  2780  0EE6                     	;# 
  2781  0EE7                     	;# 
  2782  0EE7                     	;# 
  2783  0EE8                     	;# 
  2784  0EE9                     	;# 
  2785  0EEA                     	;# 
  2786  0EEB                     	;# 
  2787  0EEC                     	;# 
  2788  0EED                     	;# 
  2789  0EEE                     	;# 
  2790  0EEF                     	;# 
  2791  0F11                     	;# 
  2792  0F12                     	;# 
  2793  0F13                     	;# 
  2794  0F14                     	;# 
  2795  0F15                     	;# 
  2796  0F16                     	;# 
  2797  0F17                     	;# 
  2798  0F18                     	;# 
  2799  0F19                     	;# 
  2800  0F1A                     	;# 
  2801  0F1B                     	;# 
  2802  0F1C                     	;# 
  2803  0F1D                     	;# 
  2804  0F1E                     	;# 
  2805  0F1F                     	;# 
  2806  0F20                     	;# 
  2807  0F21                     	;# 
  2808  0F21                     	;# 
  2809  0F22                     	;# 
  2810  0F23                     	;# 
  2811  0F23                     	;# 
  2812  0F24                     	;# 
  2813  0F25                     	;# 
  2814  0F25                     	;# 
  2815  0F26                     	;# 
  2816  0F27                     	;# 
  2817  0F27                     	;# 
  2818  0F28                     	;# 
  2819  0F29                     	;# 
  2820  0F2A                     	;# 
  2821  0F2B                     	;# 
  2822  0F2C                     	;# 
  2823  0F2D                     	;# 
  2824  0F2E                     	;# 
  2825  0F2F                     	;# 
  2826  0FE4                     	;# 
  2827  0FE5                     	;# 
  2828  0FE6                     	;# 
  2829  0FE7                     	;# 
  2830  0FE8                     	;# 
  2831  0FE9                     	;# 
  2832  0FEA                     	;# 
  2833  0FEB                     	;# 
  2834  0FED                     	;# 
  2835  0FEE                     	;# 
  2836  0FEF                     	;# 
  2837                           
  2838                           	psect	idataBANK3
  2839  2E0E                     __pidataBANK3:	
  2840                           
  2841                           ;initializer for _tempChannels
  2842  2E0E  340C               	retlw	12
  2843  2E0F  340A               	retlw	10
  2844  2E10  3408               	retlw	8
  2845  2E11  3409               	retlw	9
  2846  2E12  340B               	retlw	11
  2847                           
  2848                           ;initializer for SSD1306_Test@F7528
  2849  2E13  348D               	retlw	141
  2850  2E14  3414               	retlw	20
  2851                           
  2852                           	psect	stringtext1
  2853  1000                     __pstringtext1:	
  2854  1000                     _OledFont:	
  2855  1000  3400               	retlw	0
  2856  1001  3400               	retlw	0
  2857  1002  3400               	retlw	0
  2858  1003  3400               	retlw	0
  2859  1004  3400               	retlw	0
  2860  1005  3400               	retlw	0
  2861  1006  3400               	retlw	0
  2862  1007  3400               	retlw	0
  2863  1008  3400               	retlw	0
  2864  1009  3400               	retlw	0
  2865  100A  345F               	retlw	95
  2866  100B  3400               	retlw	0
  2867  100C  3400               	retlw	0
  2868  100D  3400               	retlw	0
  2869  100E  3400               	retlw	0
  2870  100F  3400               	retlw	0
  2871  1010  3400               	retlw	0
  2872  1011  3400               	retlw	0
  2873  1012  3407               	retlw	7
  2874  1013  3400               	retlw	0
  2875  1014  3407               	retlw	7
  2876  1015  3400               	retlw	0
  2877  1016  3400               	retlw	0
  2878  1017  3400               	retlw	0
  2879  1018  3400               	retlw	0
  2880  1019  3414               	retlw	20
  2881  101A  347F               	retlw	127
  2882  101B  3414               	retlw	20
  2883  101C  347F               	retlw	127
  2884  101D  3414               	retlw	20
  2885  101E  3400               	retlw	0
  2886  101F  3400               	retlw	0
  2887  1020  3400               	retlw	0
  2888  1021  3424               	retlw	36
  2889  1022  342A               	retlw	42
  2890  1023  347F               	retlw	127
  2891  1024  342A               	retlw	42
  2892  1025  3412               	retlw	18
  2893  1026  3400               	retlw	0
  2894  1027  3400               	retlw	0
  2895  1028  3400               	retlw	0
  2896  1029  3423               	retlw	35
  2897  102A  3413               	retlw	19
  2898  102B  3408               	retlw	8
  2899  102C  3464               	retlw	100
  2900  102D  3462               	retlw	98
  2901  102E  3400               	retlw	0
  2902  102F  3400               	retlw	0
  2903  1030  3400               	retlw	0
  2904  1031  3436               	retlw	54
  2905  1032  3449               	retlw	73
  2906  1033  3455               	retlw	85
  2907  1034  3422               	retlw	34
  2908  1035  3450               	retlw	80
  2909  1036  3400               	retlw	0
  2910  1037  3400               	retlw	0
  2911  1038  3400               	retlw	0
  2912  1039  3400               	retlw	0
  2913  103A  3405               	retlw	5
  2914  103B  3403               	retlw	3
  2915  103C  3400               	retlw	0
  2916  103D  3400               	retlw	0
  2917  103E  3400               	retlw	0
  2918  103F  3400               	retlw	0
  2919  1040  3400               	retlw	0
  2920  1041  341C               	retlw	28
  2921  1042  3422               	retlw	34
  2922  1043  3441               	retlw	65
  2923  1044  3400               	retlw	0
  2924  1045  3400               	retlw	0
  2925  1046  3400               	retlw	0
  2926  1047  3400               	retlw	0
  2927  1048  3400               	retlw	0
  2928  1049  3441               	retlw	65
  2929  104A  3422               	retlw	34
  2930  104B  341C               	retlw	28
  2931  104C  3400               	retlw	0
  2932  104D  3400               	retlw	0
  2933  104E  3400               	retlw	0
  2934  104F  3400               	retlw	0
  2935  1050  3400               	retlw	0
  2936  1051  3408               	retlw	8
  2937  1052  342A               	retlw	42
  2938  1053  341C               	retlw	28
  2939  1054  342A               	retlw	42
  2940  1055  3408               	retlw	8
  2941  1056  3400               	retlw	0
  2942  1057  3400               	retlw	0
  2943  1058  3400               	retlw	0
  2944  1059  3408               	retlw	8
  2945  105A  3408               	retlw	8
  2946  105B  343E               	retlw	62
  2947  105C  3408               	retlw	8
  2948  105D  3408               	retlw	8
  2949  105E  3400               	retlw	0
  2950  105F  3400               	retlw	0
  2951  1060  3400               	retlw	0
  2952  1061  34A0               	retlw	160
  2953  1062  3460               	retlw	96
  2954  1063  3400               	retlw	0
  2955  1064  3400               	retlw	0
  2956  1065  3400               	retlw	0
  2957  1066  3400               	retlw	0
  2958  1067  3400               	retlw	0
  2959  1068  3400               	retlw	0
  2960  1069  3408               	retlw	8
  2961  106A  3408               	retlw	8
  2962  106B  3408               	retlw	8
  2963  106C  3408               	retlw	8
  2964  106D  3408               	retlw	8
  2965  106E  3400               	retlw	0
  2966  106F  3400               	retlw	0
  2967  1070  3400               	retlw	0
  2968  1071  3460               	retlw	96
  2969  1072  3460               	retlw	96
  2970  1073  3400               	retlw	0
  2971  1074  3400               	retlw	0
  2972  1075  3400               	retlw	0
  2973  1076  3400               	retlw	0
  2974  1077  3400               	retlw	0
  2975  1078  3400               	retlw	0
  2976  1079  3420               	retlw	32
  2977  107A  3410               	retlw	16
  2978  107B  3408               	retlw	8
  2979  107C  3404               	retlw	4
  2980  107D  3402               	retlw	2
  2981  107E  3400               	retlw	0
  2982  107F  3400               	retlw	0
  2983  1080  3400               	retlw	0
  2984  1081  343E               	retlw	62
  2985  1082  3451               	retlw	81
  2986  1083  3449               	retlw	73
  2987  1084  3445               	retlw	69
  2988  1085  343E               	retlw	62
  2989  1086  3400               	retlw	0
  2990  1087  3400               	retlw	0
  2991  1088  3400               	retlw	0
  2992  1089  3400               	retlw	0
  2993  108A  3442               	retlw	66
  2994  108B  347F               	retlw	127
  2995  108C  3440               	retlw	64
  2996  108D  3400               	retlw	0
  2997  108E  3400               	retlw	0
  2998  108F  3400               	retlw	0
  2999  1090  3400               	retlw	0
  3000  1091  3462               	retlw	98
  3001  1092  3451               	retlw	81
  3002  1093  3449               	retlw	73
  3003  1094  3449               	retlw	73
  3004  1095  3446               	retlw	70
  3005  1096  3400               	retlw	0
  3006  1097  3400               	retlw	0
  3007  1098  3400               	retlw	0
  3008  1099  3422               	retlw	34
  3009  109A  3441               	retlw	65
  3010  109B  3449               	retlw	73
  3011  109C  3449               	retlw	73
  3012  109D  3436               	retlw	54
  3013  109E  3400               	retlw	0
  3014  109F  3400               	retlw	0
  3015  10A0  3400               	retlw	0
  3016  10A1  3418               	retlw	24
  3017  10A2  3414               	retlw	20
  3018  10A3  3412               	retlw	18
  3019  10A4  347F               	retlw	127
  3020  10A5  3410               	retlw	16
  3021  10A6  3400               	retlw	0
  3022  10A7  3400               	retlw	0
  3023  10A8  3400               	retlw	0
  3024  10A9  3427               	retlw	39
  3025  10AA  3445               	retlw	69
  3026  10AB  3445               	retlw	69
  3027  10AC  3445               	retlw	69
  3028  10AD  3439               	retlw	57
  3029  10AE  3400               	retlw	0
  3030  10AF  3400               	retlw	0
  3031  10B0  3400               	retlw	0
  3032  10B1  343C               	retlw	60
  3033  10B2  344A               	retlw	74
  3034  10B3  3449               	retlw	73
  3035  10B4  3449               	retlw	73
  3036  10B5  3430               	retlw	48
  3037  10B6  3400               	retlw	0
  3038  10B7  3400               	retlw	0
  3039  10B8  3400               	retlw	0
  3040  10B9  3401               	retlw	1
  3041  10BA  3471               	retlw	113
  3042  10BB  3409               	retlw	9
  3043  10BC  3405               	retlw	5
  3044  10BD  3403               	retlw	3
  3045  10BE  3400               	retlw	0
  3046  10BF  3400               	retlw	0
  3047  10C0  3400               	retlw	0
  3048  10C1  3436               	retlw	54
  3049  10C2  3449               	retlw	73
  3050  10C3  3449               	retlw	73
  3051  10C4  3449               	retlw	73
  3052  10C5  3436               	retlw	54
  3053  10C6  3400               	retlw	0
  3054  10C7  3400               	retlw	0
  3055  10C8  3400               	retlw	0
  3056  10C9  3406               	retlw	6
  3057  10CA  3449               	retlw	73
  3058  10CB  3449               	retlw	73
  3059  10CC  3429               	retlw	41
  3060  10CD  341E               	retlw	30
  3061  10CE  3400               	retlw	0
  3062  10CF  3400               	retlw	0
  3063  10D0  3400               	retlw	0
  3064  10D1  3400               	retlw	0
  3065  10D2  3436               	retlw	54
  3066  10D3  3436               	retlw	54
  3067  10D4  3400               	retlw	0
  3068  10D5  3400               	retlw	0
  3069  10D6  3400               	retlw	0
  3070  10D7  3400               	retlw	0
  3071  10D8  3400               	retlw	0
  3072  10D9  3400               	retlw	0
  3073  10DA  34AC               	retlw	172
  3074  10DB  346C               	retlw	108
  3075  10DC  3400               	retlw	0
  3076  10DD  3400               	retlw	0
  3077  10DE  3400               	retlw	0
  3078  10DF  3400               	retlw	0
  3079  10E0  3400               	retlw	0
  3080  10E1  3408               	retlw	8
  3081  10E2  3414               	retlw	20
  3082  10E3  3422               	retlw	34
  3083  10E4  3441               	retlw	65
  3084  10E5  3400               	retlw	0
  3085  10E6  3400               	retlw	0
  3086  10E7  3400               	retlw	0
  3087  10E8  3400               	retlw	0
  3088  10E9  3414               	retlw	20
  3089  10EA  3414               	retlw	20
  3090  10EB  3414               	retlw	20
  3091  10EC  3414               	retlw	20
  3092  10ED  3414               	retlw	20
  3093  10EE  3400               	retlw	0
  3094  10EF  3400               	retlw	0
  3095  10F0  3400               	retlw	0
  3096  10F1  3441               	retlw	65
  3097  10F2  3422               	retlw	34
  3098  10F3  3414               	retlw	20
  3099  10F4  3408               	retlw	8
  3100  10F5  3400               	retlw	0
  3101  10F6  3400               	retlw	0
  3102  10F7  3400               	retlw	0
  3103  10F8  3400               	retlw	0
  3104  10F9  3402               	retlw	2
  3105  10FA  3401               	retlw	1
  3106  10FB  3451               	retlw	81
  3107  10FC  3409               	retlw	9
  3108  10FD  3406               	retlw	6
  3109  10FE  3400               	retlw	0
  3110  10FF  3400               	retlw	0
  3111  1100  3400               	retlw	0
  3112  1101  3432               	retlw	50
  3113  1102  3449               	retlw	73
  3114  1103  3479               	retlw	121
  3115  1104  3441               	retlw	65
  3116  1105  343E               	retlw	62
  3117  1106  3400               	retlw	0
  3118  1107  3400               	retlw	0
  3119  1108  3400               	retlw	0
  3120  1109  347E               	retlw	126
  3121  110A  3409               	retlw	9
  3122  110B  3409               	retlw	9
  3123  110C  3409               	retlw	9
  3124  110D  347E               	retlw	126
  3125  110E  3400               	retlw	0
  3126  110F  3400               	retlw	0
  3127  1110  3400               	retlw	0
  3128  1111  347F               	retlw	127
  3129  1112  3449               	retlw	73
  3130  1113  3449               	retlw	73
  3131  1114  3449               	retlw	73
  3132  1115  3436               	retlw	54
  3133  1116  3400               	retlw	0
  3134  1117  3400               	retlw	0
  3135  1118  3400               	retlw	0
  3136  1119  343E               	retlw	62
  3137  111A  3441               	retlw	65
  3138  111B  3441               	retlw	65
  3139  111C  3441               	retlw	65
  3140  111D  3422               	retlw	34
  3141  111E  3400               	retlw	0
  3142  111F  3400               	retlw	0
  3143  1120  3400               	retlw	0
  3144  1121  347F               	retlw	127
  3145  1122  3441               	retlw	65
  3146  1123  3441               	retlw	65
  3147  1124  3422               	retlw	34
  3148  1125  341C               	retlw	28
  3149  1126  3400               	retlw	0
  3150  1127  3400               	retlw	0
  3151  1128  3400               	retlw	0
  3152  1129  347F               	retlw	127
  3153  112A  3449               	retlw	73
  3154  112B  3449               	retlw	73
  3155  112C  3449               	retlw	73
  3156  112D  3441               	retlw	65
  3157  112E  3400               	retlw	0
  3158  112F  3400               	retlw	0
  3159  1130  3400               	retlw	0
  3160  1131  347F               	retlw	127
  3161  1132  3409               	retlw	9
  3162  1133  3409               	retlw	9
  3163  1134  3409               	retlw	9
  3164  1135  3401               	retlw	1
  3165  1136  3400               	retlw	0
  3166  1137  3400               	retlw	0
  3167  1138  3400               	retlw	0
  3168  1139  343E               	retlw	62
  3169  113A  3441               	retlw	65
  3170  113B  3441               	retlw	65
  3171  113C  3451               	retlw	81
  3172  113D  3472               	retlw	114
  3173  113E  3400               	retlw	0
  3174  113F  3400               	retlw	0
  3175  1140  3400               	retlw	0
  3176  1141  347F               	retlw	127
  3177  1142  3408               	retlw	8
  3178  1143  3408               	retlw	8
  3179  1144  3408               	retlw	8
  3180  1145  347F               	retlw	127
  3181  1146  3400               	retlw	0
  3182  1147  3400               	retlw	0
  3183  1148  3400               	retlw	0
  3184  1149  3441               	retlw	65
  3185  114A  347F               	retlw	127
  3186  114B  3441               	retlw	65
  3187  114C  3400               	retlw	0
  3188  114D  3400               	retlw	0
  3189  114E  3400               	retlw	0
  3190  114F  3400               	retlw	0
  3191  1150  3400               	retlw	0
  3192  1151  3420               	retlw	32
  3193  1152  3440               	retlw	64
  3194  1153  3441               	retlw	65
  3195  1154  343F               	retlw	63
  3196  1155  3401               	retlw	1
  3197  1156  3400               	retlw	0
  3198  1157  3400               	retlw	0
  3199  1158  3400               	retlw	0
  3200  1159  347F               	retlw	127
  3201  115A  3408               	retlw	8
  3202  115B  3414               	retlw	20
  3203  115C  3422               	retlw	34
  3204  115D  3441               	retlw	65
  3205  115E  3400               	retlw	0
  3206  115F  3400               	retlw	0
  3207  1160  3400               	retlw	0
  3208  1161  347F               	retlw	127
  3209  1162  3440               	retlw	64
  3210  1163  3440               	retlw	64
  3211  1164  3440               	retlw	64
  3212  1165  3440               	retlw	64
  3213  1166  3400               	retlw	0
  3214  1167  3400               	retlw	0
  3215  1168  3400               	retlw	0
  3216  1169  347F               	retlw	127
  3217  116A  3402               	retlw	2
  3218  116B  340C               	retlw	12
  3219  116C  3402               	retlw	2
  3220  116D  347F               	retlw	127
  3221  116E  3400               	retlw	0
  3222  116F  3400               	retlw	0
  3223  1170  3400               	retlw	0
  3224  1171  347F               	retlw	127
  3225  1172  3404               	retlw	4
  3226  1173  3408               	retlw	8
  3227  1174  3410               	retlw	16
  3228  1175  347F               	retlw	127
  3229  1176  3400               	retlw	0
  3230  1177  3400               	retlw	0
  3231  1178  3400               	retlw	0
  3232  1179  343E               	retlw	62
  3233  117A  3441               	retlw	65
  3234  117B  3441               	retlw	65
  3235  117C  3441               	retlw	65
  3236  117D  343E               	retlw	62
  3237  117E  3400               	retlw	0
  3238  117F  3400               	retlw	0
  3239  1180  3400               	retlw	0
  3240  1181  347F               	retlw	127
  3241  1182  3409               	retlw	9
  3242  1183  3409               	retlw	9
  3243  1184  3409               	retlw	9
  3244  1185  3406               	retlw	6
  3245  1186  3400               	retlw	0
  3246  1187  3400               	retlw	0
  3247  1188  3400               	retlw	0
  3248  1189  343E               	retlw	62
  3249  118A  3441               	retlw	65
  3250  118B  3451               	retlw	81
  3251  118C  3421               	retlw	33
  3252  118D  345E               	retlw	94
  3253  118E  3400               	retlw	0
  3254  118F  3400               	retlw	0
  3255  1190  3400               	retlw	0
  3256  1191  347F               	retlw	127
  3257  1192  3409               	retlw	9
  3258  1193  3419               	retlw	25
  3259  1194  3429               	retlw	41
  3260  1195  3446               	retlw	70
  3261  1196  3400               	retlw	0
  3262  1197  3400               	retlw	0
  3263  1198  3400               	retlw	0
  3264  1199  3426               	retlw	38
  3265  119A  3449               	retlw	73
  3266  119B  3449               	retlw	73
  3267  119C  3449               	retlw	73
  3268  119D  3432               	retlw	50
  3269  119E  3400               	retlw	0
  3270  119F  3400               	retlw	0
  3271  11A0  3400               	retlw	0
  3272  11A1  3401               	retlw	1
  3273  11A2  3401               	retlw	1
  3274  11A3  347F               	retlw	127
  3275  11A4  3401               	retlw	1
  3276  11A5  3401               	retlw	1
  3277  11A6  3400               	retlw	0
  3278  11A7  3400               	retlw	0
  3279  11A8  3400               	retlw	0
  3280  11A9  343F               	retlw	63
  3281  11AA  3440               	retlw	64
  3282  11AB  3440               	retlw	64
  3283  11AC  3440               	retlw	64
  3284  11AD  343F               	retlw	63
  3285  11AE  3400               	retlw	0
  3286  11AF  3400               	retlw	0
  3287  11B0  3400               	retlw	0
  3288  11B1  341F               	retlw	31
  3289  11B2  3420               	retlw	32
  3290  11B3  3440               	retlw	64
  3291  11B4  3420               	retlw	32
  3292  11B5  341F               	retlw	31
  3293  11B6  3400               	retlw	0
  3294  11B7  3400               	retlw	0
  3295  11B8  3400               	retlw	0
  3296  11B9  343F               	retlw	63
  3297  11BA  3440               	retlw	64
  3298  11BB  3438               	retlw	56
  3299  11BC  3440               	retlw	64
  3300  11BD  343F               	retlw	63
  3301  11BE  3400               	retlw	0
  3302  11BF  3400               	retlw	0
  3303  11C0  3400               	retlw	0
  3304  11C1  3463               	retlw	99
  3305  11C2  3414               	retlw	20
  3306  11C3  3408               	retlw	8
  3307  11C4  3414               	retlw	20
  3308  11C5  3463               	retlw	99
  3309  11C6  3400               	retlw	0
  3310  11C7  3400               	retlw	0
  3311  11C8  3400               	retlw	0
  3312  11C9  3403               	retlw	3
  3313  11CA  3404               	retlw	4
  3314  11CB  3478               	retlw	120
  3315  11CC  3404               	retlw	4
  3316  11CD  3403               	retlw	3
  3317  11CE  3400               	retlw	0
  3318  11CF  3400               	retlw	0
  3319  11D0  3400               	retlw	0
  3320  11D1  3461               	retlw	97
  3321  11D2  3451               	retlw	81
  3322  11D3  3449               	retlw	73
  3323  11D4  3445               	retlw	69
  3324  11D5  3443               	retlw	67
  3325  11D6  3400               	retlw	0
  3326  11D7  3400               	retlw	0
  3327  11D8  3400               	retlw	0
  3328  11D9  347F               	retlw	127
  3329  11DA  3441               	retlw	65
  3330  11DB  3441               	retlw	65
  3331  11DC  3400               	retlw	0
  3332  11DD  3400               	retlw	0
  3333  11DE  3400               	retlw	0
  3334  11DF  3400               	retlw	0
  3335  11E0  3400               	retlw	0
  3336  11E1  3402               	retlw	2
  3337  11E2  3404               	retlw	4
  3338  11E3  3408               	retlw	8
  3339  11E4  3410               	retlw	16
  3340  11E5  3420               	retlw	32
  3341  11E6  3400               	retlw	0
  3342  11E7  3400               	retlw	0
  3343  11E8  3400               	retlw	0
  3344  11E9  3441               	retlw	65
  3345  11EA  3441               	retlw	65
  3346  11EB  347F               	retlw	127
  3347  11EC  3400               	retlw	0
  3348  11ED  3400               	retlw	0
  3349  11EE  3400               	retlw	0
  3350  11EF  3400               	retlw	0
  3351  11F0  3400               	retlw	0
  3352  11F1  3404               	retlw	4
  3353  11F2  3402               	retlw	2
  3354  11F3  3401               	retlw	1
  3355  11F4  3402               	retlw	2
  3356  11F5  3404               	retlw	4
  3357  11F6  3400               	retlw	0
  3358  11F7  3400               	retlw	0
  3359  11F8  3400               	retlw	0
  3360  11F9  3480               	retlw	128
  3361  11FA  3480               	retlw	128
  3362  11FB  3480               	retlw	128
  3363  11FC  3480               	retlw	128
  3364  11FD  3480               	retlw	128
  3365  11FE  3400               	retlw	0
  3366  11FF  3400               	retlw	0
  3367  1200  3400               	retlw	0
  3368  1201  3401               	retlw	1
  3369  1202  3402               	retlw	2
  3370  1203  3404               	retlw	4
  3371  1204  3400               	retlw	0
  3372  1205  3400               	retlw	0
  3373  1206  3400               	retlw	0
  3374  1207  3400               	retlw	0
  3375  1208  3400               	retlw	0
  3376  1209  3420               	retlw	32
  3377  120A  3454               	retlw	84
  3378  120B  3454               	retlw	84
  3379  120C  3454               	retlw	84
  3380  120D  3478               	retlw	120
  3381  120E  3400               	retlw	0
  3382  120F  3400               	retlw	0
  3383  1210  3400               	retlw	0
  3384  1211  347F               	retlw	127
  3385  1212  3448               	retlw	72
  3386  1213  3444               	retlw	68
  3387  1214  3444               	retlw	68
  3388  1215  3438               	retlw	56
  3389  1216  3400               	retlw	0
  3390  1217  3400               	retlw	0
  3391  1218  3400               	retlw	0
  3392  1219  3438               	retlw	56
  3393  121A  3444               	retlw	68
  3394  121B  3444               	retlw	68
  3395  121C  3428               	retlw	40
  3396  121D  3400               	retlw	0
  3397  121E  3400               	retlw	0
  3398  121F  3400               	retlw	0
  3399  1220  3400               	retlw	0
  3400  1221  3438               	retlw	56
  3401  1222  3444               	retlw	68
  3402  1223  3444               	retlw	68
  3403  1224  3448               	retlw	72
  3404  1225  347F               	retlw	127
  3405  1226  3400               	retlw	0
  3406  1227  3400               	retlw	0
  3407  1228  3400               	retlw	0
  3408  1229  3438               	retlw	56
  3409  122A  3454               	retlw	84
  3410  122B  3454               	retlw	84
  3411  122C  3454               	retlw	84
  3412  122D  3418               	retlw	24
  3413  122E  3400               	retlw	0
  3414  122F  3400               	retlw	0
  3415  1230  3400               	retlw	0
  3416  1231  3408               	retlw	8
  3417  1232  347E               	retlw	126
  3418  1233  3409               	retlw	9
  3419  1234  3402               	retlw	2
  3420  1235  3400               	retlw	0
  3421  1236  3400               	retlw	0
  3422  1237  3400               	retlw	0
  3423  1238  3400               	retlw	0
  3424  1239  3418               	retlw	24
  3425  123A  34A4               	retlw	164
  3426  123B  34A4               	retlw	164
  3427  123C  34A4               	retlw	164
  3428  123D  347C               	retlw	124
  3429  123E  3400               	retlw	0
  3430  123F  3400               	retlw	0
  3431  1240  3400               	retlw	0
  3432  1241  347F               	retlw	127
  3433  1242  3408               	retlw	8
  3434  1243  3404               	retlw	4
  3435  1244  3404               	retlw	4
  3436  1245  3478               	retlw	120
  3437  1246  3400               	retlw	0
  3438  1247  3400               	retlw	0
  3439  1248  3400               	retlw	0
  3440  1249  3400               	retlw	0
  3441  124A  347D               	retlw	125
  3442  124B  3400               	retlw	0
  3443  124C  3400               	retlw	0
  3444  124D  3400               	retlw	0
  3445  124E  3400               	retlw	0
  3446  124F  3400               	retlw	0
  3447  1250  3400               	retlw	0
  3448  1251  3480               	retlw	128
  3449  1252  3484               	retlw	132
  3450  1253  347D               	retlw	125
  3451  1254  3400               	retlw	0
  3452  1255  3400               	retlw	0
  3453  1256  3400               	retlw	0
  3454  1257  3400               	retlw	0
  3455  1258  3400               	retlw	0
  3456  1259  347F               	retlw	127
  3457  125A  3410               	retlw	16
  3458  125B  3428               	retlw	40
  3459  125C  3444               	retlw	68
  3460  125D  3400               	retlw	0
  3461  125E  3400               	retlw	0
  3462  125F  3400               	retlw	0
  3463  1260  3400               	retlw	0
  3464  1261  3441               	retlw	65
  3465  1262  347F               	retlw	127
  3466  1263  3440               	retlw	64
  3467  1264  3400               	retlw	0
  3468  1265  3400               	retlw	0
  3469  1266  3400               	retlw	0
  3470  1267  3400               	retlw	0
  3471  1268  3400               	retlw	0
  3472  1269  347C               	retlw	124
  3473  126A  3404               	retlw	4
  3474  126B  3418               	retlw	24
  3475  126C  3404               	retlw	4
  3476  126D  3478               	retlw	120
  3477  126E  3400               	retlw	0
  3478  126F  3400               	retlw	0
  3479  1270  3400               	retlw	0
  3480  1271  347C               	retlw	124
  3481  1272  3408               	retlw	8
  3482  1273  3404               	retlw	4
  3483  1274  347C               	retlw	124
  3484  1275  3400               	retlw	0
  3485  1276  3400               	retlw	0
  3486  1277  3400               	retlw	0
  3487  1278  3400               	retlw	0
  3488  1279  3438               	retlw	56
  3489  127A  3444               	retlw	68
  3490  127B  3444               	retlw	68
  3491  127C  3438               	retlw	56
  3492  127D  3400               	retlw	0
  3493  127E  3400               	retlw	0
  3494  127F  3400               	retlw	0
  3495  1280  3400               	retlw	0
  3496  1281  34FC               	retlw	252
  3497  1282  3424               	retlw	36
  3498  1283  3424               	retlw	36
  3499  1284  3418               	retlw	24
  3500  1285  3400               	retlw	0
  3501  1286  3400               	retlw	0
  3502  1287  3400               	retlw	0
  3503  1288  3400               	retlw	0
  3504  1289  3418               	retlw	24
  3505  128A  3424               	retlw	36
  3506  128B  3424               	retlw	36
  3507  128C  34FC               	retlw	252
  3508  128D  3400               	retlw	0
  3509  128E  3400               	retlw	0
  3510  128F  3400               	retlw	0
  3511  1290  3400               	retlw	0
  3512  1291  3400               	retlw	0
  3513  1292  347C               	retlw	124
  3514  1293  3408               	retlw	8
  3515  1294  3404               	retlw	4
  3516  1295  3400               	retlw	0
  3517  1296  3400               	retlw	0
  3518  1297  3400               	retlw	0
  3519  1298  3400               	retlw	0
  3520  1299  3448               	retlw	72
  3521  129A  3454               	retlw	84
  3522  129B  3454               	retlw	84
  3523  129C  3424               	retlw	36
  3524  129D  3400               	retlw	0
  3525  129E  3400               	retlw	0
  3526  129F  3400               	retlw	0
  3527  12A0  3400               	retlw	0
  3528  12A1  3404               	retlw	4
  3529  12A2  347F               	retlw	127
  3530  12A3  3444               	retlw	68
  3531  12A4  3400               	retlw	0
  3532  12A5  3400               	retlw	0
  3533  12A6  3400               	retlw	0
  3534  12A7  3400               	retlw	0
  3535  12A8  3400               	retlw	0
  3536  12A9  343C               	retlw	60
  3537  12AA  3440               	retlw	64
  3538  12AB  3440               	retlw	64
  3539  12AC  347C               	retlw	124
  3540  12AD  3400               	retlw	0
  3541  12AE  3400               	retlw	0
  3542  12AF  3400               	retlw	0
  3543  12B0  3400               	retlw	0
  3544  12B1  341C               	retlw	28
  3545  12B2  3420               	retlw	32
  3546  12B3  3440               	retlw	64
  3547  12B4  3420               	retlw	32
  3548  12B5  341C               	retlw	28
  3549  12B6  3400               	retlw	0
  3550  12B7  3400               	retlw	0
  3551  12B8  3400               	retlw	0
  3552  12B9  343C               	retlw	60
  3553  12BA  3440               	retlw	64
  3554  12BB  3430               	retlw	48
  3555  12BC  3440               	retlw	64
  3556  12BD  343C               	retlw	60
  3557  12BE  3400               	retlw	0
  3558  12BF  3400               	retlw	0
  3559  12C0  3400               	retlw	0
  3560  12C1  3444               	retlw	68
  3561  12C2  3428               	retlw	40
  3562  12C3  3410               	retlw	16
  3563  12C4  3428               	retlw	40
  3564  12C5  3444               	retlw	68
  3565  12C6  3400               	retlw	0
  3566  12C7  3400               	retlw	0
  3567  12C8  3400               	retlw	0
  3568  12C9  341C               	retlw	28
  3569  12CA  34A0               	retlw	160
  3570  12CB  34A0               	retlw	160
  3571  12CC  347C               	retlw	124
  3572  12CD  3400               	retlw	0
  3573  12CE  3400               	retlw	0
  3574  12CF  3400               	retlw	0
  3575  12D0  3400               	retlw	0
  3576  12D1  3444               	retlw	68
  3577  12D2  3464               	retlw	100
  3578  12D3  3454               	retlw	84
  3579  12D4  344C               	retlw	76
  3580  12D5  3444               	retlw	68
  3581  12D6  3400               	retlw	0
  3582  12D7  3400               	retlw	0
  3583  12D8  3400               	retlw	0
  3584  12D9  3408               	retlw	8
  3585  12DA  3436               	retlw	54
  3586  12DB  3441               	retlw	65
  3587  12DC  3400               	retlw	0
  3588  12DD  3400               	retlw	0
  3589  12DE  3400               	retlw	0
  3590  12DF  3400               	retlw	0
  3591  12E0  3400               	retlw	0
  3592  12E1  3400               	retlw	0
  3593  12E2  347F               	retlw	127
  3594  12E3  3400               	retlw	0
  3595  12E4  3400               	retlw	0
  3596  12E5  3400               	retlw	0
  3597  12E6  3400               	retlw	0
  3598  12E7  3400               	retlw	0
  3599  12E8  3400               	retlw	0
  3600  12E9  3441               	retlw	65
  3601  12EA  3436               	retlw	54
  3602  12EB  3408               	retlw	8
  3603  12EC  3400               	retlw	0
  3604  12ED  3400               	retlw	0
  3605  12EE  3400               	retlw	0
  3606  12EF  3400               	retlw	0
  3607  12F0  3400               	retlw	0
  3608  12F1  3402               	retlw	2
  3609  12F2  3401               	retlw	1
  3610  12F3  3401               	retlw	1
  3611  12F4  3402               	retlw	2
  3612  12F5  3401               	retlw	1
  3613  12F6  3400               	retlw	0
  3614  12F7  3400               	retlw	0
  3615  12F8  3400               	retlw	0
  3616  12F9  3402               	retlw	2
  3617  12FA  3405               	retlw	5
  3618  12FB  3405               	retlw	5
  3619  12FC  3402               	retlw	2
  3620  12FD  3400               	retlw	0
  3621  12FE  3400               	retlw	0
  3622  12FF  3400               	retlw	0
  3623  1300                     __end_of_OledFont:	
  3624                           
  3625                           	psect	stringtext2
  3626  1800                     __pstringtext2:	
  3627  1800                     ltc6804@crc15Table:	
  3628  1800  3400               	retlw	0
  3629  1801  3400               	retlw	0
  3630  1802  3499               	retlw	153
  3631  1803  34C5               	retlw	197
  3632  1804  34AB               	retlw	171
  3633  1805  34CE               	retlw	206
  3634  1806  3432               	retlw	50
  3635  1807  340B               	retlw	11
  3636  1808  34CF               	retlw	207
  3637  1809  34D8               	retlw	216
  3638  180A  3456               	retlw	86
  3639  180B  341D               	retlw	29
  3640  180C  3464               	retlw	100
  3641  180D  3416               	retlw	22
  3642  180E  34FD               	retlw	253
  3643  180F  34D3               	retlw	211
  3644  1810  3407               	retlw	7
  3645  1811  34F4               	retlw	244
  3646  1812  349E               	retlw	158
  3647  1813  3431               	retlw	49
  3648  1814  34AC               	retlw	172
  3649  1815  343A               	retlw	58
  3650  1816  3435               	retlw	53
  3651  1817  34FF               	retlw	255
  3652  1818  34C8               	retlw	200
  3653  1819  342C               	retlw	44
  3654  181A  3451               	retlw	81
  3655  181B  34E9               	retlw	233
  3656  181C  3463               	retlw	99
  3657  181D  34E2               	retlw	226
  3658  181E  34FA               	retlw	250
  3659  181F  3427               	retlw	39
  3660  1820  3497               	retlw	151
  3661  1821  34AD               	retlw	173
  3662  1822  340E               	retlw	14
  3663  1823  3468               	retlw	104
  3664  1824  343C               	retlw	60
  3665  1825  3463               	retlw	99
  3666  1826  34A5               	retlw	165
  3667  1827  34A6               	retlw	166
  3668  1828  3458               	retlw	88
  3669  1829  3475               	retlw	117
  3670  182A  34C1               	retlw	193
  3671  182B  34B0               	retlw	176
  3672  182C  34F3               	retlw	243
  3673  182D  34BB               	retlw	187
  3674  182E  346A               	retlw	106
  3675  182F  347E               	retlw	126
  3676  1830  3490               	retlw	144
  3677  1831  3459               	retlw	89
  3678  1832  3409               	retlw	9
  3679  1833  349C               	retlw	156
  3680  1834  343B               	retlw	59
  3681  1835  3497               	retlw	151
  3682  1836  34A2               	retlw	162
  3683  1837  3452               	retlw	82
  3684  1838  345F               	retlw	95
  3685  1839  3481               	retlw	129
  3686  183A  34C6               	retlw	198
  3687  183B  3444               	retlw	68
  3688  183C  34F4               	retlw	244
  3689  183D  344F               	retlw	79
  3690  183E  346D               	retlw	109
  3691  183F  348A               	retlw	138
  3692  1840  342E               	retlw	46
  3693  1841  345B               	retlw	91
  3694  1842  34B7               	retlw	183
  3695  1843  349E               	retlw	158
  3696  1844  3485               	retlw	133
  3697  1845  3495               	retlw	149
  3698  1846  341C               	retlw	28
  3699  1847  3450               	retlw	80
  3700  1848  34E1               	retlw	225
  3701  1849  3483               	retlw	131
  3702  184A  3478               	retlw	120
  3703  184B  3446               	retlw	70
  3704  184C  344A               	retlw	74
  3705  184D  344D               	retlw	77
  3706  184E  34D3               	retlw	211
  3707  184F  3488               	retlw	136
  3708  1850  3429               	retlw	41
  3709  1851  34AF               	retlw	175
  3710  1852  34B0               	retlw	176
  3711  1853  346A               	retlw	106
  3712  1854  3482               	retlw	130
  3713  1855  3461               	retlw	97
  3714  1856  341B               	retlw	27
  3715  1857  34A4               	retlw	164
  3716  1858  34E6               	retlw	230
  3717  1859  3477               	retlw	119
  3718  185A  347F               	retlw	127
  3719  185B  34B2               	retlw	178
  3720  185C  344D               	retlw	77
  3721  185D  34B9               	retlw	185
  3722  185E  34D4               	retlw	212
  3723  185F  347C               	retlw	124
  3724  1860  34B9               	retlw	185
  3725  1861  34F6               	retlw	246
  3726  1862  3420               	retlw	32
  3727  1863  3433               	retlw	51
  3728  1864  3412               	retlw	18
  3729  1865  3438               	retlw	56
  3730  1866  348B               	retlw	139
  3731  1867  34FD               	retlw	253
  3732  1868  3476               	retlw	118
  3733  1869  342E               	retlw	46
  3734  186A  34EF               	retlw	239
  3735  186B  34EB               	retlw	235
  3736  186C  34DD               	retlw	221
  3737  186D  34E0               	retlw	224
  3738  186E  3444               	retlw	68
  3739  186F  3425               	retlw	37
  3740  1870  34BE               	retlw	190
  3741  1871  3402               	retlw	2
  3742  1872  3427               	retlw	39
  3743  1873  34C7               	retlw	199
  3744  1874  3415               	retlw	21
  3745  1875  34CC               	retlw	204
  3746  1876  348C               	retlw	140
  3747  1877  3409               	retlw	9
  3748  1878  3471               	retlw	113
  3749  1879  34DA               	retlw	218
  3750  187A  34E8               	retlw	232
  3751  187B  341F               	retlw	31
  3752  187C  34DA               	retlw	218
  3753  187D  3414               	retlw	20
  3754  187E  3443               	retlw	67
  3755  187F  34D1               	retlw	209
  3756  1880  34C5               	retlw	197
  3757  1881  34F3               	retlw	243
  3758  1882  345C               	retlw	92
  3759  1883  3436               	retlw	54
  3760  1884  346E               	retlw	110
  3761  1885  343D               	retlw	61
  3762  1886  34F7               	retlw	247
  3763  1887  34F8               	retlw	248
  3764  1888  340A               	retlw	10
  3765  1889  342B               	retlw	43
  3766  188A  3493               	retlw	147
  3767  188B  34EE               	retlw	238
  3768  188C  34A1               	retlw	161
  3769  188D  34E5               	retlw	229
  3770  188E  3438               	retlw	56
  3771  188F  3420               	retlw	32
  3772  1890  34C2               	retlw	194
  3773  1891  3407               	retlw	7
  3774  1892  345B               	retlw	91
  3775  1893  34C2               	retlw	194
  3776  1894  3469               	retlw	105
  3777  1895  34C9               	retlw	201
  3778  1896  34F0               	retlw	240
  3779  1897  340C               	retlw	12
  3780  1898  340D               	retlw	13
  3781  1899  34DF               	retlw	223
  3782  189A  3494               	retlw	148
  3783  189B  341A               	retlw	26
  3784  189C  34A6               	retlw	166
  3785  189D  3411               	retlw	17
  3786  189E  343F               	retlw	63
  3787  189F  34D4               	retlw	212
  3788  18A0  3452               	retlw	82
  3789  18A1  345E               	retlw	94
  3790  18A2  34CB               	retlw	203
  3791  18A3  349B               	retlw	155
  3792  18A4  34F9               	retlw	249
  3793  18A5  3490               	retlw	144
  3794  18A6  3460               	retlw	96
  3795  18A7  3455               	retlw	85
  3796  18A8  349D               	retlw	157
  3797  18A9  3486               	retlw	134
  3798  18AA  3404               	retlw	4
  3799  18AB  3443               	retlw	67
  3800  18AC  3436               	retlw	54
  3801  18AD  3448               	retlw	72
  3802  18AE  34AF               	retlw	175
  3803  18AF  348D               	retlw	141
  3804  18B0  3455               	retlw	85
  3805  18B1  34AA               	retlw	170
  3806  18B2  34CC               	retlw	204
  3807  18B3  346F               	retlw	111
  3808  18B4  34FE               	retlw	254
  3809  18B5  3464               	retlw	100
  3810  18B6  3467               	retlw	103
  3811  18B7  34A1               	retlw	161
  3812  18B8  349A               	retlw	154
  3813  18B9  3472               	retlw	114
  3814  18BA  3403               	retlw	3
  3815  18BB  34B7               	retlw	183
  3816  18BC  3431               	retlw	49
  3817  18BD  34BC               	retlw	188
  3818  18BE  34A8               	retlw	168
  3819  18BF  3479               	retlw	121
  3820  18C0  34EB               	retlw	235
  3821  18C1  34A8               	retlw	168
  3822  18C2  3472               	retlw	114
  3823  18C3  346D               	retlw	109
  3824  18C4  3440               	retlw	64
  3825  18C5  3466               	retlw	102
  3826  18C6  34D9               	retlw	217
  3827  18C7  34A3               	retlw	163
  3828  18C8  3424               	retlw	36
  3829  18C9  3470               	retlw	112
  3830  18CA  34BD               	retlw	189
  3831  18CB  34B5               	retlw	181
  3832  18CC  348F               	retlw	143
  3833  18CD  34BE               	retlw	190
  3834  18CE  3416               	retlw	22
  3835  18CF  347B               	retlw	123
  3836  18D0  34EC               	retlw	236
  3837  18D1  345C               	retlw	92
  3838  18D2  3475               	retlw	117
  3839  18D3  3499               	retlw	153
  3840  18D4  3447               	retlw	71
  3841  18D5  3492               	retlw	146
  3842  18D6  34DE               	retlw	222
  3843  18D7  3457               	retlw	87
  3844  18D8  3423               	retlw	35
  3845  18D9  3484               	retlw	132
  3846  18DA  34BA               	retlw	186
  3847  18DB  3441               	retlw	65
  3848  18DC  3488               	retlw	136
  3849  18DD  344A               	retlw	74
  3850  18DE  3411               	retlw	17
  3851  18DF  348F               	retlw	143
  3852  18E0  347C               	retlw	124
  3853  18E1  3405               	retlw	5
  3854  18E2  34E5               	retlw	229
  3855  18E3  34C0               	retlw	192
  3856  18E4  34D7               	retlw	215
  3857  18E5  34CB               	retlw	203
  3858  18E6  344E               	retlw	78
  3859  18E7  340E               	retlw	14
  3860  18E8  34B3               	retlw	179
  3861  18E9  34DD               	retlw	221
  3862  18EA  342A               	retlw	42
  3863  18EB  3418               	retlw	24
  3864  18EC  3418               	retlw	24
  3865  18ED  3413               	retlw	19
  3866  18EE  3481               	retlw	129
  3867  18EF  34D6               	retlw	214
  3868  18F0  347B               	retlw	123
  3869  18F1  34F1               	retlw	241
  3870  18F2  34E2               	retlw	226
  3871  18F3  3434               	retlw	52
  3872  18F4  34D0               	retlw	208
  3873  18F5  343F               	retlw	63
  3874  18F6  3449               	retlw	73
  3875  18F7  34FA               	retlw	250
  3876  18F8  34B4               	retlw	180
  3877  18F9  3429               	retlw	41
  3878  18FA  342D               	retlw	45
  3879  18FB  34EC               	retlw	236
  3880  18FC  341F               	retlw	31
  3881  18FD  34E7               	retlw	231
  3882  18FE  3486               	retlw	134
  3883  18FF  3422               	retlw	34
  3884  1900  3413               	retlw	19
  3885  1901  34A2               	retlw	162
  3886  1902  348A               	retlw	138
  3887  1903  3467               	retlw	103
  3888  1904  34B8               	retlw	184
  3889  1905  346C               	retlw	108
  3890  1906  3421               	retlw	33
  3891  1907  34A9               	retlw	169
  3892  1908  34DC               	retlw	220
  3893  1909  347A               	retlw	122
  3894  190A  3445               	retlw	69
  3895  190B  34BF               	retlw	191
  3896  190C  3477               	retlw	119
  3897  190D  34B4               	retlw	180
  3898  190E  34EE               	retlw	238
  3899  190F  3471               	retlw	113
  3900  1910  3414               	retlw	20
  3901  1911  3456               	retlw	86
  3902  1912  348D               	retlw	141
  3903  1913  3493               	retlw	147
  3904  1914  34BF               	retlw	191
  3905  1915  3498               	retlw	152
  3906  1916  3426               	retlw	38
  3907  1917  345D               	retlw	93
  3908  1918  34DB               	retlw	219
  3909  1919  348E               	retlw	142
  3910  191A  3442               	retlw	66
  3911  191B  344B               	retlw	75
  3912  191C  3470               	retlw	112
  3913  191D  3440               	retlw	64
  3914  191E  34E9               	retlw	233
  3915  191F  3485               	retlw	133
  3916  1920  3484               	retlw	132
  3917  1921  340F               	retlw	15
  3918  1922  341D               	retlw	29
  3919  1923  34CA               	retlw	202
  3920  1924  342F               	retlw	47
  3921  1925  34C1               	retlw	193
  3922  1926  34B6               	retlw	182
  3923  1927  3404               	retlw	4
  3924  1928  344B               	retlw	75
  3925  1929  34D7               	retlw	215
  3926  192A  34D2               	retlw	210
  3927  192B  3412               	retlw	18
  3928  192C  34E0               	retlw	224
  3929  192D  3419               	retlw	25
  3930  192E  3479               	retlw	121
  3931  192F  34DC               	retlw	220
  3932  1930  3483               	retlw	131
  3933  1931  34FB               	retlw	251
  3934  1932  341A               	retlw	26
  3935  1933  343E               	retlw	62
  3936  1934  3428               	retlw	40
  3937  1935  3435               	retlw	53
  3938  1936  34B1               	retlw	177
  3939  1937  34F0               	retlw	240
  3940  1938  344C               	retlw	76
  3941  1939  3423               	retlw	35
  3942  193A  34D5               	retlw	213
  3943  193B  34E6               	retlw	230
  3944  193C  34E7               	retlw	231
  3945  193D  34ED               	retlw	237
  3946  193E  347E               	retlw	126
  3947  193F  3428               	retlw	40
  3948  1940  343D               	retlw	61
  3949  1941  34F9               	retlw	249
  3950  1942  34A4               	retlw	164
  3951  1943  343C               	retlw	60
  3952  1944  3496               	retlw	150
  3953  1945  3437               	retlw	55
  3954  1946  340F               	retlw	15
  3955  1947  34F2               	retlw	242
  3956  1948  34F2               	retlw	242
  3957  1949  3421               	retlw	33
  3958  194A  346B               	retlw	107
  3959  194B  34E4               	retlw	228
  3960  194C  3459               	retlw	89
  3961  194D  34EF               	retlw	239
  3962  194E  34C0               	retlw	192
  3963  194F  342A               	retlw	42
  3964  1950  343A               	retlw	58
  3965  1951  340D               	retlw	13
  3966  1952  34A3               	retlw	163
  3967  1953  34C8               	retlw	200
  3968  1954  3491               	retlw	145
  3969  1955  34C3               	retlw	195
  3970  1956  3408               	retlw	8
  3971  1957  3406               	retlw	6
  3972  1958  34F5               	retlw	245
  3973  1959  34D5               	retlw	213
  3974  195A  346C               	retlw	108
  3975  195B  3410               	retlw	16
  3976  195C  345E               	retlw	94
  3977  195D  341B               	retlw	27
  3978  195E  34C7               	retlw	199
  3979  195F  34DE               	retlw	222
  3980  1960  34AA               	retlw	170
  3981  1961  3454               	retlw	84
  3982  1962  3433               	retlw	51
  3983  1963  3491               	retlw	145
  3984  1964  3401               	retlw	1
  3985  1965  349A               	retlw	154
  3986  1966  3498               	retlw	152
  3987  1967  345F               	retlw	95
  3988  1968  3465               	retlw	101
  3989  1969  348C               	retlw	140
  3990  196A  34FC               	retlw	252
  3991  196B  3449               	retlw	73
  3992  196C  34CE               	retlw	206
  3993  196D  3442               	retlw	66
  3994  196E  3457               	retlw	87
  3995  196F  3487               	retlw	135
  3996  1970  34AD               	retlw	173
  3997  1971  34A0               	retlw	160
  3998  1972  3434               	retlw	52
  3999  1973  3465               	retlw	101
  4000  1974  3406               	retlw	6
  4001  1975  346E               	retlw	110
  4002  1976  349F               	retlw	159
  4003  1977  34AB               	retlw	171
  4004  1978  3462               	retlw	98
  4005  1979  3478               	retlw	120
  4006  197A  34FB               	retlw	251
  4007  197B  34BD               	retlw	189
  4008  197C  34C9               	retlw	201
  4009  197D  34B6               	retlw	182
  4010  197E  3450               	retlw	80
  4011  197F  3473               	retlw	115
  4012  1980  34D6               	retlw	214
  4013  1981  3451               	retlw	81
  4014  1982  344F               	retlw	79
  4015  1983  3494               	retlw	148
  4016  1984  347D               	retlw	125
  4017  1985  349F               	retlw	159
  4018  1986  34E4               	retlw	228
  4019  1987  345A               	retlw	90
  4020  1988  3419               	retlw	25
  4021  1989  3489               	retlw	137
  4022  198A  3480               	retlw	128
  4023  198B  344C               	retlw	76
  4024  198C  34B2               	retlw	178
  4025  198D  3447               	retlw	71
  4026  198E  342B               	retlw	43
  4027  198F  3482               	retlw	130
  4028  1990  34D1               	retlw	209
  4029  1991  34A5               	retlw	165
  4030  1992  3448               	retlw	72
  4031  1993  3460               	retlw	96
  4032  1994  347A               	retlw	122
  4033  1995  346B               	retlw	107
  4034  1996  34E3               	retlw	227
  4035  1997  34AE               	retlw	174
  4036  1998  341E               	retlw	30
  4037  1999  347D               	retlw	125
  4038  199A  3487               	retlw	135
  4039  199B  34B8               	retlw	184
  4040  199C  34B5               	retlw	181
  4041  199D  34B3               	retlw	179
  4042  199E  342C               	retlw	44
  4043  199F  3476               	retlw	118
  4044  19A0  3441               	retlw	65
  4045  19A1  34FC               	retlw	252
  4046  19A2  34D8               	retlw	216
  4047  19A3  3439               	retlw	57
  4048  19A4  34EA               	retlw	234
  4049  19A5  3432               	retlw	50
  4050  19A6  3473               	retlw	115
  4051  19A7  34F7               	retlw	247
  4052  19A8  348E               	retlw	142
  4053  19A9  3424               	retlw	36
  4054  19AA  3417               	retlw	23
  4055  19AB  34E1               	retlw	225
  4056  19AC  3425               	retlw	37
  4057  19AD  34EA               	retlw	234
  4058  19AE  34BC               	retlw	188
  4059  19AF  342F               	retlw	47
  4060  19B0  3446               	retlw	70
  4061  19B1  3408               	retlw	8
  4062  19B2  34DF               	retlw	223
  4063  19B3  34CD               	retlw	205
  4064  19B4  34ED               	retlw	237
  4065  19B5  34C6               	retlw	198
  4066  19B6  3474               	retlw	116
  4067  19B7  3403               	retlw	3
  4068  19B8  3489               	retlw	137
  4069  19B9  34D0               	retlw	208
  4070  19BA  3410               	retlw	16
  4071  19BB  3415               	retlw	21
  4072  19BC  3422               	retlw	34
  4073  19BD  341E               	retlw	30
  4074  19BE  34BB               	retlw	187
  4075  19BF  34DB               	retlw	219
  4076  19C0  34F8               	retlw	248
  4077  19C1  340A               	retlw	10
  4078  19C2  3461               	retlw	97
  4079  19C3  34CF               	retlw	207
  4080  19C4  3453               	retlw	83
  4081  19C5  34C4               	retlw	196
  4082  19C6  34CA               	retlw	202
  4083  19C7  3401               	retlw	1
  4084  19C8  3437               	retlw	55
  4085  19C9  34D2               	retlw	210
  4086  19CA  34AE               	retlw	174
  4087  19CB  3417               	retlw	23
  4088  19CC  349C               	retlw	156
  4089  19CD  341C               	retlw	28
  4090  19CE  3405               	retlw	5
  4091  19CF  34D9               	retlw	217
  4092  19D0  34FF               	retlw	255
  4093  19D1  34FE               	retlw	254
  4094  19D2  3466               	retlw	102
  4095  19D3  343B               	retlw	59
  4096  19D4  3454               	retlw	84
  4097  19D5  3430               	retlw	48
  4098  19D6  34CD               	retlw	205
  4099  19D7  34F5               	retlw	245
  4100  19D8  3430               	retlw	48
  4101  19D9  3426               	retlw	38
  4102  19DA  34A9               	retlw	169
  4103  19DB  34E3               	retlw	227
  4104  19DC  349B               	retlw	155
  4105  19DD  34E8               	retlw	232
  4106  19DE  3402               	retlw	2
  4107  19DF  342D               	retlw	45
  4108  19E0  346F               	retlw	111
  4109  19E1  34A7               	retlw	167
  4110  19E2  34F6               	retlw	246
  4111  19E3  3462               	retlw	98
  4112  19E4  34C4               	retlw	196
  4113  19E5  3469               	retlw	105
  4114  19E6  345D               	retlw	93
  4115  19E7  34AC               	retlw	172
  4116  19E8  34A0               	retlw	160
  4117  19E9  347F               	retlw	127
  4118  19EA  3439               	retlw	57
  4119  19EB  34BA               	retlw	186
  4120  19EC  340B               	retlw	11
  4121  19ED  34B1               	retlw	177
  4122  19EE  3492               	retlw	146
  4123  19EF  3474               	retlw	116
  4124  19F0  3468               	retlw	104
  4125  19F1  3453               	retlw	83
  4126  19F2  34F1               	retlw	241
  4127  19F3  3496               	retlw	150
  4128  19F4  34C3               	retlw	195
  4129  19F5  349D               	retlw	157
  4130  19F6  345A               	retlw	90
  4131  19F7  3458               	retlw	88
  4132  19F8  34A7               	retlw	167
  4133  19F9  348B               	retlw	139
  4134  19FA  343E               	retlw	62
  4135  19FB  344E               	retlw	78
  4136  19FC  340C               	retlw	12
  4137  19FD  3445               	retlw	69
  4138  19FE  3495               	retlw	149
  4139  19FF  3480               	retlw	128
  4140  1A00                     __end_ofltc6804@crc15Table:	
  4141                           
  4142                           	psect	stringtext3
  4143  1A00                     __pstringtext3:	
  4144  1A00                     _crc15Table:	
  4145  1A00  3400               	retlw	0
  4146  1A01  3400               	retlw	0
  4147  1A02  3499               	retlw	153
  4148  1A03  34C5               	retlw	197
  4149  1A04  34AB               	retlw	171
  4150  1A05  34CE               	retlw	206
  4151  1A06  3432               	retlw	50
  4152  1A07  340B               	retlw	11
  4153  1A08  34CF               	retlw	207
  4154  1A09  34D8               	retlw	216
  4155  1A0A  3456               	retlw	86
  4156  1A0B  341D               	retlw	29
  4157  1A0C  3464               	retlw	100
  4158  1A0D  3416               	retlw	22
  4159  1A0E  34FD               	retlw	253
  4160  1A0F  34D3               	retlw	211
  4161  1A10  3407               	retlw	7
  4162  1A11  34F4               	retlw	244
  4163  1A12  349E               	retlw	158
  4164  1A13  3431               	retlw	49
  4165  1A14  34AC               	retlw	172
  4166  1A15  343A               	retlw	58
  4167  1A16  3435               	retlw	53
  4168  1A17  34FF               	retlw	255
  4169  1A18  34C8               	retlw	200
  4170  1A19  342C               	retlw	44
  4171  1A1A  3451               	retlw	81
  4172  1A1B  34E9               	retlw	233
  4173  1A1C  3463               	retlw	99
  4174  1A1D  34E2               	retlw	226
  4175  1A1E  34FA               	retlw	250
  4176  1A1F  3427               	retlw	39
  4177  1A20  3497               	retlw	151
  4178  1A21  34AD               	retlw	173
  4179  1A22  340E               	retlw	14
  4180  1A23  3468               	retlw	104
  4181  1A24  343C               	retlw	60
  4182  1A25  3463               	retlw	99
  4183  1A26  34A5               	retlw	165
  4184  1A27  34A6               	retlw	166
  4185  1A28  3458               	retlw	88
  4186  1A29  3475               	retlw	117
  4187  1A2A  34C1               	retlw	193
  4188  1A2B  34B0               	retlw	176
  4189  1A2C  34F3               	retlw	243
  4190  1A2D  34BB               	retlw	187
  4191  1A2E  346A               	retlw	106
  4192  1A2F  347E               	retlw	126
  4193  1A30  3490               	retlw	144
  4194  1A31  3459               	retlw	89
  4195  1A32  3409               	retlw	9
  4196  1A33  349C               	retlw	156
  4197  1A34  343B               	retlw	59
  4198  1A35  3497               	retlw	151
  4199  1A36  34A2               	retlw	162
  4200  1A37  3452               	retlw	82
  4201  1A38  345F               	retlw	95
  4202  1A39  3481               	retlw	129
  4203  1A3A  34C6               	retlw	198
  4204  1A3B  3444               	retlw	68
  4205  1A3C  34F4               	retlw	244
  4206  1A3D  344F               	retlw	79
  4207  1A3E  346D               	retlw	109
  4208  1A3F  348A               	retlw	138
  4209  1A40  342E               	retlw	46
  4210  1A41  345B               	retlw	91
  4211  1A42  34B7               	retlw	183
  4212  1A43  349E               	retlw	158
  4213  1A44  3485               	retlw	133
  4214  1A45  3495               	retlw	149
  4215  1A46  341C               	retlw	28
  4216  1A47  3450               	retlw	80
  4217  1A48  34E1               	retlw	225
  4218  1A49  3483               	retlw	131
  4219  1A4A  3478               	retlw	120
  4220  1A4B  3446               	retlw	70
  4221  1A4C  344A               	retlw	74
  4222  1A4D  344D               	retlw	77
  4223  1A4E  34D3               	retlw	211
  4224  1A4F  3488               	retlw	136
  4225  1A50  3429               	retlw	41
  4226  1A51  34AF               	retlw	175
  4227  1A52  34B0               	retlw	176
  4228  1A53  346A               	retlw	106
  4229  1A54  3482               	retlw	130
  4230  1A55  3461               	retlw	97
  4231  1A56  341B               	retlw	27
  4232  1A57  34A4               	retlw	164
  4233  1A58  34E6               	retlw	230
  4234  1A59  3477               	retlw	119
  4235  1A5A  347F               	retlw	127
  4236  1A5B  34B2               	retlw	178
  4237  1A5C  344D               	retlw	77
  4238  1A5D  34B9               	retlw	185
  4239  1A5E  34D4               	retlw	212
  4240  1A5F  347C               	retlw	124
  4241  1A60  34B9               	retlw	185
  4242  1A61  34F6               	retlw	246
  4243  1A62  3420               	retlw	32
  4244  1A63  3433               	retlw	51
  4245  1A64  3412               	retlw	18
  4246  1A65  3438               	retlw	56
  4247  1A66  348B               	retlw	139
  4248  1A67  34FD               	retlw	253
  4249  1A68  3476               	retlw	118
  4250  1A69  342E               	retlw	46
  4251  1A6A  34EF               	retlw	239
  4252  1A6B  34EB               	retlw	235
  4253  1A6C  34DD               	retlw	221
  4254  1A6D  34E0               	retlw	224
  4255  1A6E  3444               	retlw	68
  4256  1A6F  3425               	retlw	37
  4257  1A70  34BE               	retlw	190
  4258  1A71  3402               	retlw	2
  4259  1A72  3427               	retlw	39
  4260  1A73  34C7               	retlw	199
  4261  1A74  3415               	retlw	21
  4262  1A75  34CC               	retlw	204
  4263  1A76  348C               	retlw	140
  4264  1A77  3409               	retlw	9
  4265  1A78  3471               	retlw	113
  4266  1A79  34DA               	retlw	218
  4267  1A7A  34E8               	retlw	232
  4268  1A7B  341F               	retlw	31
  4269  1A7C  34DA               	retlw	218
  4270  1A7D  3414               	retlw	20
  4271  1A7E  3443               	retlw	67
  4272  1A7F  34D1               	retlw	209
  4273  1A80  34C5               	retlw	197
  4274  1A81  34F3               	retlw	243
  4275  1A82  345C               	retlw	92
  4276  1A83  3436               	retlw	54
  4277  1A84  346E               	retlw	110
  4278  1A85  343D               	retlw	61
  4279  1A86  34F7               	retlw	247
  4280  1A87  34F8               	retlw	248
  4281  1A88  340A               	retlw	10
  4282  1A89  342B               	retlw	43
  4283  1A8A  3493               	retlw	147
  4284  1A8B  34EE               	retlw	238
  4285  1A8C  34A1               	retlw	161
  4286  1A8D  34E5               	retlw	229
  4287  1A8E  3438               	retlw	56
  4288  1A8F  3420               	retlw	32
  4289  1A90  34C2               	retlw	194
  4290  1A91  3407               	retlw	7
  4291  1A92  345B               	retlw	91
  4292  1A93  34C2               	retlw	194
  4293  1A94  3469               	retlw	105
  4294  1A95  34C9               	retlw	201
  4295  1A96  34F0               	retlw	240
  4296  1A97  340C               	retlw	12
  4297  1A98  340D               	retlw	13
  4298  1A99  34DF               	retlw	223
  4299  1A9A  3494               	retlw	148
  4300  1A9B  341A               	retlw	26
  4301  1A9C  34A6               	retlw	166
  4302  1A9D  3411               	retlw	17
  4303  1A9E  343F               	retlw	63
  4304  1A9F  34D4               	retlw	212
  4305  1AA0  3452               	retlw	82
  4306  1AA1  345E               	retlw	94
  4307  1AA2  34CB               	retlw	203
  4308  1AA3  349B               	retlw	155
  4309  1AA4  34F9               	retlw	249
  4310  1AA5  3490               	retlw	144
  4311  1AA6  3460               	retlw	96
  4312  1AA7  3455               	retlw	85
  4313  1AA8  349D               	retlw	157
  4314  1AA9  3486               	retlw	134
  4315  1AAA  3404               	retlw	4
  4316  1AAB  3443               	retlw	67
  4317  1AAC  3436               	retlw	54
  4318  1AAD  3448               	retlw	72
  4319  1AAE  34AF               	retlw	175
  4320  1AAF  348D               	retlw	141
  4321  1AB0  3455               	retlw	85
  4322  1AB1  34AA               	retlw	170
  4323  1AB2  34CC               	retlw	204
  4324  1AB3  346F               	retlw	111
  4325  1AB4  34FE               	retlw	254
  4326  1AB5  3464               	retlw	100
  4327  1AB6  3467               	retlw	103
  4328  1AB7  34A1               	retlw	161
  4329  1AB8  349A               	retlw	154
  4330  1AB9  3472               	retlw	114
  4331  1ABA  3403               	retlw	3
  4332  1ABB  34B7               	retlw	183
  4333  1ABC  3431               	retlw	49
  4334  1ABD  34BC               	retlw	188
  4335  1ABE  34A8               	retlw	168
  4336  1ABF  3479               	retlw	121
  4337  1AC0  34EB               	retlw	235
  4338  1AC1  34A8               	retlw	168
  4339  1AC2  3472               	retlw	114
  4340  1AC3  346D               	retlw	109
  4341  1AC4  3440               	retlw	64
  4342  1AC5  3466               	retlw	102
  4343  1AC6  34D9               	retlw	217
  4344  1AC7  34A3               	retlw	163
  4345  1AC8  3424               	retlw	36
  4346  1AC9  3470               	retlw	112
  4347  1ACA  34BD               	retlw	189
  4348  1ACB  34B5               	retlw	181
  4349  1ACC  348F               	retlw	143
  4350  1ACD  34BE               	retlw	190
  4351  1ACE  3416               	retlw	22
  4352  1ACF  347B               	retlw	123
  4353  1AD0  34EC               	retlw	236
  4354  1AD1  345C               	retlw	92
  4355  1AD2  3475               	retlw	117
  4356  1AD3  3499               	retlw	153
  4357  1AD4  3447               	retlw	71
  4358  1AD5  3492               	retlw	146
  4359  1AD6  34DE               	retlw	222
  4360  1AD7  3457               	retlw	87
  4361  1AD8  3423               	retlw	35
  4362  1AD9  3484               	retlw	132
  4363  1ADA  34BA               	retlw	186
  4364  1ADB  3441               	retlw	65
  4365  1ADC  3488               	retlw	136
  4366  1ADD  344A               	retlw	74
  4367  1ADE  3411               	retlw	17
  4368  1ADF  348F               	retlw	143
  4369  1AE0  347C               	retlw	124
  4370  1AE1  3405               	retlw	5
  4371  1AE2  34E5               	retlw	229
  4372  1AE3  34C0               	retlw	192
  4373  1AE4  34D7               	retlw	215
  4374  1AE5  34CB               	retlw	203
  4375  1AE6  344E               	retlw	78
  4376  1AE7  340E               	retlw	14
  4377  1AE8  34B3               	retlw	179
  4378  1AE9  34DD               	retlw	221
  4379  1AEA  342A               	retlw	42
  4380  1AEB  3418               	retlw	24
  4381  1AEC  3418               	retlw	24
  4382  1AED  3413               	retlw	19
  4383  1AEE  3481               	retlw	129
  4384  1AEF  34D6               	retlw	214
  4385  1AF0  347B               	retlw	123
  4386  1AF1  34F1               	retlw	241
  4387  1AF2  34E2               	retlw	226
  4388  1AF3  3434               	retlw	52
  4389  1AF4  34D0               	retlw	208
  4390  1AF5  343F               	retlw	63
  4391  1AF6  3449               	retlw	73
  4392  1AF7  34FA               	retlw	250
  4393  1AF8  34B4               	retlw	180
  4394  1AF9  3429               	retlw	41
  4395  1AFA  342D               	retlw	45
  4396  1AFB  34EC               	retlw	236
  4397  1AFC  341F               	retlw	31
  4398  1AFD  34E7               	retlw	231
  4399  1AFE  3486               	retlw	134
  4400  1AFF  3422               	retlw	34
  4401  1B00  3413               	retlw	19
  4402  1B01  34A2               	retlw	162
  4403  1B02  348A               	retlw	138
  4404  1B03  3467               	retlw	103
  4405  1B04  34B8               	retlw	184
  4406  1B05  346C               	retlw	108
  4407  1B06  3421               	retlw	33
  4408  1B07  34A9               	retlw	169
  4409  1B08  34DC               	retlw	220
  4410  1B09  347A               	retlw	122
  4411  1B0A  3445               	retlw	69
  4412  1B0B  34BF               	retlw	191
  4413  1B0C  3477               	retlw	119
  4414  1B0D  34B4               	retlw	180
  4415  1B0E  34EE               	retlw	238
  4416  1B0F  3471               	retlw	113
  4417  1B10  3414               	retlw	20
  4418  1B11  3456               	retlw	86
  4419  1B12  348D               	retlw	141
  4420  1B13  3493               	retlw	147
  4421  1B14  34BF               	retlw	191
  4422  1B15  3498               	retlw	152
  4423  1B16  3426               	retlw	38
  4424  1B17  345D               	retlw	93
  4425  1B18  34DB               	retlw	219
  4426  1B19  348E               	retlw	142
  4427  1B1A  3442               	retlw	66
  4428  1B1B  344B               	retlw	75
  4429  1B1C  3470               	retlw	112
  4430  1B1D  3440               	retlw	64
  4431  1B1E  34E9               	retlw	233
  4432  1B1F  3485               	retlw	133
  4433  1B20  3484               	retlw	132
  4434  1B21  340F               	retlw	15
  4435  1B22  341D               	retlw	29
  4436  1B23  34CA               	retlw	202
  4437  1B24  342F               	retlw	47
  4438  1B25  34C1               	retlw	193
  4439  1B26  34B6               	retlw	182
  4440  1B27  3404               	retlw	4
  4441  1B28  344B               	retlw	75
  4442  1B29  34D7               	retlw	215
  4443  1B2A  34D2               	retlw	210
  4444  1B2B  3412               	retlw	18
  4445  1B2C  34E0               	retlw	224
  4446  1B2D  3419               	retlw	25
  4447  1B2E  3479               	retlw	121
  4448  1B2F  34DC               	retlw	220
  4449  1B30  3483               	retlw	131
  4450  1B31  34FB               	retlw	251
  4451  1B32  341A               	retlw	26
  4452  1B33  343E               	retlw	62
  4453  1B34  3428               	retlw	40
  4454  1B35  3435               	retlw	53
  4455  1B36  34B1               	retlw	177
  4456  1B37  34F0               	retlw	240
  4457  1B38  344C               	retlw	76
  4458  1B39  3423               	retlw	35
  4459  1B3A  34D5               	retlw	213
  4460  1B3B  34E6               	retlw	230
  4461  1B3C  34E7               	retlw	231
  4462  1B3D  34ED               	retlw	237
  4463  1B3E  347E               	retlw	126
  4464  1B3F  3428               	retlw	40
  4465  1B40  343D               	retlw	61
  4466  1B41  34F9               	retlw	249
  4467  1B42  34A4               	retlw	164
  4468  1B43  343C               	retlw	60
  4469  1B44  3496               	retlw	150
  4470  1B45  3437               	retlw	55
  4471  1B46  340F               	retlw	15
  4472  1B47  34F2               	retlw	242
  4473  1B48  34F2               	retlw	242
  4474  1B49  3421               	retlw	33
  4475  1B4A  346B               	retlw	107
  4476  1B4B  34E4               	retlw	228
  4477  1B4C  3459               	retlw	89
  4478  1B4D  34EF               	retlw	239
  4479  1B4E  34C0               	retlw	192
  4480  1B4F  342A               	retlw	42
  4481  1B50  343A               	retlw	58
  4482  1B51  340D               	retlw	13
  4483  1B52  34A3               	retlw	163
  4484  1B53  34C8               	retlw	200
  4485  1B54  3491               	retlw	145
  4486  1B55  34C3               	retlw	195
  4487  1B56  3408               	retlw	8
  4488  1B57  3406               	retlw	6
  4489  1B58  34F5               	retlw	245
  4490  1B59  34D5               	retlw	213
  4491  1B5A  346C               	retlw	108
  4492  1B5B  3410               	retlw	16
  4493  1B5C  345E               	retlw	94
  4494  1B5D  341B               	retlw	27
  4495  1B5E  34C7               	retlw	199
  4496  1B5F  34DE               	retlw	222
  4497  1B60  34AA               	retlw	170
  4498  1B61  3454               	retlw	84
  4499  1B62  3433               	retlw	51
  4500  1B63  3491               	retlw	145
  4501  1B64  3401               	retlw	1
  4502  1B65  349A               	retlw	154
  4503  1B66  3498               	retlw	152
  4504  1B67  345F               	retlw	95
  4505  1B68  3465               	retlw	101
  4506  1B69  348C               	retlw	140
  4507  1B6A  34FC               	retlw	252
  4508  1B6B  3449               	retlw	73
  4509  1B6C  34CE               	retlw	206
  4510  1B6D  3442               	retlw	66
  4511  1B6E  3457               	retlw	87
  4512  1B6F  3487               	retlw	135
  4513  1B70  34AD               	retlw	173
  4514  1B71  34A0               	retlw	160
  4515  1B72  3434               	retlw	52
  4516  1B73  3465               	retlw	101
  4517  1B74  3406               	retlw	6
  4518  1B75  346E               	retlw	110
  4519  1B76  349F               	retlw	159
  4520  1B77  34AB               	retlw	171
  4521  1B78  3462               	retlw	98
  4522  1B79  3478               	retlw	120
  4523  1B7A  34FB               	retlw	251
  4524  1B7B  34BD               	retlw	189
  4525  1B7C  34C9               	retlw	201
  4526  1B7D  34B6               	retlw	182
  4527  1B7E  3450               	retlw	80
  4528  1B7F  3473               	retlw	115
  4529  1B80  34D6               	retlw	214
  4530  1B81  3451               	retlw	81
  4531  1B82  344F               	retlw	79
  4532  1B83  3494               	retlw	148
  4533  1B84  347D               	retlw	125
  4534  1B85  349F               	retlw	159
  4535  1B86  34E4               	retlw	228
  4536  1B87  345A               	retlw	90
  4537  1B88  3419               	retlw	25
  4538  1B89  3489               	retlw	137
  4539  1B8A  3480               	retlw	128
  4540  1B8B  344C               	retlw	76
  4541  1B8C  34B2               	retlw	178
  4542  1B8D  3447               	retlw	71
  4543  1B8E  342B               	retlw	43
  4544  1B8F  3482               	retlw	130
  4545  1B90  34D1               	retlw	209
  4546  1B91  34A5               	retlw	165
  4547  1B92  3448               	retlw	72
  4548  1B93  3460               	retlw	96
  4549  1B94  347A               	retlw	122
  4550  1B95  346B               	retlw	107
  4551  1B96  34E3               	retlw	227
  4552  1B97  34AE               	retlw	174
  4553  1B98  341E               	retlw	30
  4554  1B99  347D               	retlw	125
  4555  1B9A  3487               	retlw	135
  4556  1B9B  34B8               	retlw	184
  4557  1B9C  34B5               	retlw	181
  4558  1B9D  34B3               	retlw	179
  4559  1B9E  342C               	retlw	44
  4560  1B9F  3476               	retlw	118
  4561  1BA0  3441               	retlw	65
  4562  1BA1  34FC               	retlw	252
  4563  1BA2  34D8               	retlw	216
  4564  1BA3  3439               	retlw	57
  4565  1BA4  34EA               	retlw	234
  4566  1BA5  3432               	retlw	50
  4567  1BA6  3473               	retlw	115
  4568  1BA7  34F7               	retlw	247
  4569  1BA8  348E               	retlw	142
  4570  1BA9  3424               	retlw	36
  4571  1BAA  3417               	retlw	23
  4572  1BAB  34E1               	retlw	225
  4573  1BAC  3425               	retlw	37
  4574  1BAD  34EA               	retlw	234
  4575  1BAE  34BC               	retlw	188
  4576  1BAF  342F               	retlw	47
  4577  1BB0  3446               	retlw	70
  4578  1BB1  3408               	retlw	8
  4579  1BB2  34DF               	retlw	223
  4580  1BB3  34CD               	retlw	205
  4581  1BB4  34ED               	retlw	237
  4582  1BB5  34C6               	retlw	198
  4583  1BB6  3474               	retlw	116
  4584  1BB7  3403               	retlw	3
  4585  1BB8  3489               	retlw	137
  4586  1BB9  34D0               	retlw	208
  4587  1BBA  3410               	retlw	16
  4588  1BBB  3415               	retlw	21
  4589  1BBC  3422               	retlw	34
  4590  1BBD  341E               	retlw	30
  4591  1BBE  34BB               	retlw	187
  4592  1BBF  34DB               	retlw	219
  4593  1BC0  34F8               	retlw	248
  4594  1BC1  340A               	retlw	10
  4595  1BC2  3461               	retlw	97
  4596  1BC3  34CF               	retlw	207
  4597  1BC4  3453               	retlw	83
  4598  1BC5  34C4               	retlw	196
  4599  1BC6  34CA               	retlw	202
  4600  1BC7  3401               	retlw	1
  4601  1BC8  3437               	retlw	55
  4602  1BC9  34D2               	retlw	210
  4603  1BCA  34AE               	retlw	174
  4604  1BCB  3417               	retlw	23
  4605  1BCC  349C               	retlw	156
  4606  1BCD  341C               	retlw	28
  4607  1BCE  3405               	retlw	5
  4608  1BCF  34D9               	retlw	217
  4609  1BD0  34FF               	retlw	255
  4610  1BD1  34FE               	retlw	254
  4611  1BD2  3466               	retlw	102
  4612  1BD3  343B               	retlw	59
  4613  1BD4  3454               	retlw	84
  4614  1BD5  3430               	retlw	48
  4615  1BD6  34CD               	retlw	205
  4616  1BD7  34F5               	retlw	245
  4617  1BD8  3430               	retlw	48
  4618  1BD9  3426               	retlw	38
  4619  1BDA  34A9               	retlw	169
  4620  1BDB  34E3               	retlw	227
  4621  1BDC  349B               	retlw	155
  4622  1BDD  34E8               	retlw	232
  4623  1BDE  3402               	retlw	2
  4624  1BDF  342D               	retlw	45
  4625  1BE0  346F               	retlw	111
  4626  1BE1  34A7               	retlw	167
  4627  1BE2  34F6               	retlw	246
  4628  1BE3  3462               	retlw	98
  4629  1BE4  34C4               	retlw	196
  4630  1BE5  3469               	retlw	105
  4631  1BE6  345D               	retlw	93
  4632  1BE7  34AC               	retlw	172
  4633  1BE8  34A0               	retlw	160
  4634  1BE9  347F               	retlw	127
  4635  1BEA  3439               	retlw	57
  4636  1BEB  34BA               	retlw	186
  4637  1BEC  340B               	retlw	11
  4638  1BED  34B1               	retlw	177
  4639  1BEE  3492               	retlw	146
  4640  1BEF  3474               	retlw	116
  4641  1BF0  3468               	retlw	104
  4642  1BF1  3453               	retlw	83
  4643  1BF2  34F1               	retlw	241
  4644  1BF3  3496               	retlw	150
  4645  1BF4  34C3               	retlw	195
  4646  1BF5  349D               	retlw	157
  4647  1BF6  345A               	retlw	90
  4648  1BF7  3458               	retlw	88
  4649  1BF8  34A7               	retlw	167
  4650  1BF9  348B               	retlw	139
  4651  1BFA  343E               	retlw	62
  4652  1BFB  344E               	retlw	78
  4653  1BFC  340C               	retlw	12
  4654  1BFD  3445               	retlw	69
  4655  1BFE  3495               	retlw	149
  4656  1BFF  3480               	retlw	128
  4657  1C00                     __end_of_crc15Table:	
  4658                           
  4659                           	psect	stringtext4
  4660  3000                     __pstringtext4:	
  4661  3000                     __powers_:	
  4662  3000  3400               	retlw	0
  4663  3001  3400               	retlw	0
  4664  3002  3480               	retlw	128
  4665  3003  343F               	retlw	63
  4666  3004  3400               	retlw	0
  4667  3005  3400               	retlw	0
  4668  3006  3420               	retlw	32
  4669  3007  3441               	retlw	65
  4670  3008  3400               	retlw	0
  4671  3009  3400               	retlw	0
  4672  300A  34C8               	retlw	200
  4673  300B  3442               	retlw	66
  4674  300C  3400               	retlw	0
  4675  300D  3400               	retlw	0
  4676  300E  347A               	retlw	122
  4677  300F  3444               	retlw	68
  4678  3010  3400               	retlw	0
  4679  3011  3440               	retlw	64
  4680  3012  341C               	retlw	28
  4681  3013  3446               	retlw	70
  4682  3014  3400               	retlw	0
  4683  3015  3450               	retlw	80
  4684  3016  34C3               	retlw	195
  4685  3017  3447               	retlw	71
  4686  3018  3400               	retlw	0
  4687  3019  3424               	retlw	36
  4688  301A  3474               	retlw	116
  4689  301B  3449               	retlw	73
  4690  301C  3480               	retlw	128
  4691  301D  3496               	retlw	150
  4692  301E  3418               	retlw	24
  4693  301F  344B               	retlw	75
  4694  3020  3420               	retlw	32
  4695  3021  34BC               	retlw	188
  4696  3022  34BE               	retlw	190
  4697  3023  344C               	retlw	76
  4698  3024  3428               	retlw	40
  4699  3025  346B               	retlw	107
  4700  3026  346E               	retlw	110
  4701  3027  344E               	retlw	78
  4702  3028  34F9               	retlw	249
  4703  3029  3402               	retlw	2
  4704  302A  3415               	retlw	21
  4705  302B  3450               	retlw	80
  4706  302C  34EC               	retlw	236
  4707  302D  3478               	retlw	120
  4708  302E  34AD               	retlw	173
  4709  302F  3460               	retlw	96
  4710  3030  34CA               	retlw	202
  4711  3031  34F2               	retlw	242
  4712  3032  3449               	retlw	73
  4713  3033  3471               	retlw	113
  4714  3034                     __end_of__powers_:	
  4715                           
  4716                           	psect	stringtext5
  4717  3034                     __pstringtext5:	
  4718  3034                     __npowers_:	
  4719  3034  3400               	retlw	0
  4720  3035  3400               	retlw	0
  4721  3036  3480               	retlw	128
  4722  3037  343F               	retlw	63
  4723  3038  34CD               	retlw	205
  4724  3039  34CC               	retlw	204
  4725  303A  34CC               	retlw	204
  4726  303B  343D               	retlw	61
  4727  303C  340A               	retlw	10
  4728  303D  34D7               	retlw	215
  4729  303E  3423               	retlw	35
  4730  303F  343C               	retlw	60
  4731  3040  346F               	retlw	111
  4732  3041  3412               	retlw	18
  4733  3042  3483               	retlw	131
  4734  3043  343A               	retlw	58
  4735  3044  3417               	retlw	23
  4736  3045  34B7               	retlw	183
  4737  3046  34D1               	retlw	209
  4738  3047  3438               	retlw	56
  4739  3048  34AC               	retlw	172
  4740  3049  34C5               	retlw	197
  4741  304A  3427               	retlw	39
  4742  304B  3437               	retlw	55
  4743  304C  34BD               	retlw	189
  4744  304D  3437               	retlw	55
  4745  304E  3486               	retlw	134
  4746  304F  3435               	retlw	53
  4747  3050  3495               	retlw	149
  4748  3051  34BF               	retlw	191
  4749  3052  34D6               	retlw	214
  4750  3053  3433               	retlw	51
  4751  3054  3477               	retlw	119
  4752  3055  34CC               	retlw	204
  4753  3056  342B               	retlw	43
  4754  3057  3432               	retlw	50
  4755  3058  345F               	retlw	95
  4756  3059  3470               	retlw	112
  4757  305A  3489               	retlw	137
  4758  305B  3430               	retlw	48
  4759  305C  34FF               	retlw	255
  4760  305D  34E6               	retlw	230
  4761  305E  34DB               	retlw	219
  4762  305F  342E               	retlw	46
  4763  3060  3408               	retlw	8
  4764  3061  34E5               	retlw	229
  4765  3062  343C               	retlw	60
  4766  3063  341E               	retlw	30
  4767  3064  3460               	retlw	96
  4768  3065  3442               	retlw	66
  4769  3066  34A2               	retlw	162
  4770  3067  340D               	retlw	13
  4771  3068                     __end_of__npowers_:	
  4772                           
  4773                           	psect	stringtext6
  4774  3068                     __pstringtext6:	
  4775  3068                     _temperatures:	
  4776  3068  3494               	retlw	148
  4777  3069  3476               	retlw	118
  4778  306A  3467               	retlw	103
  4779  306B  345C               	retlw	92
  4780  306C  3454               	retlw	84
  4781  306D  344E               	retlw	78
  4782  306E  3448               	retlw	72
  4783  306F  3443               	retlw	67
  4784  3070  343F               	retlw	63
  4785  3071  343C               	retlw	60
  4786  3072  3438               	retlw	56
  4787  3073  3435               	retlw	53
  4788  3074  3433               	retlw	51
  4789  3075  3430               	retlw	48
  4790  3076  342D               	retlw	45
  4791  3077  342B               	retlw	43
  4792  3078  3429               	retlw	41
  4793  3079  3427               	retlw	39
  4794  307A  3425               	retlw	37
  4795  307B  3422               	retlw	34
  4796  307C  3421               	retlw	33
  4797  307D  341F               	retlw	31
  4798  307E  341D               	retlw	29
  4799  307F  341B               	retlw	27
  4800  3080  3419               	retlw	25
  4801  3081  3417               	retlw	23
  4802  3082  3416               	retlw	22
  4803  3083  3414               	retlw	20
  4804  3084  3412               	retlw	18
  4805  3085  3410               	retlw	16
  4806  3086  340F               	retlw	15
  4807  3087  340D               	retlw	13
  4808  3088  340B               	retlw	11
  4809  3089  3409               	retlw	9
  4810  308A  3407               	retlw	7
  4811  308B  3405               	retlw	5
  4812  308C  3403               	retlw	3
  4813  308D  3401               	retlw	1
  4814  308E  34FF               	retlw	255
  4815  308F  34FD               	retlw	253
  4816  3090  34FB               	retlw	251
  4817  3091  34F8               	retlw	248
  4818  3092  34F5               	retlw	245
  4819  3093  34F2               	retlw	242
  4820  3094  34EF               	retlw	239
  4821  3095  34EB               	retlw	235
  4822  3096  34E6               	retlw	230
  4823  3097  34E0               	retlw	224
  4824  3098  34D6               	retlw	214
  4825  3099  34EF               	retlw	239
  4826  309A                     __end_of_temperatures:	
  4827                           
  4828                           	psect	stringtext7
  4829  309A                     __pstringtext7:	
  4830  309A                     _dpowers:	
  4831  309A  3401               	retlw	1
  4832  309B  3400               	retlw	0
  4833  309C  3400               	retlw	0
  4834  309D  3400               	retlw	0
  4835  309E  340A               	retlw	10
  4836  309F  3400               	retlw	0
  4837  30A0  3400               	retlw	0
  4838  30A1  3400               	retlw	0
  4839  30A2  3464               	retlw	100
  4840  30A3  3400               	retlw	0
  4841  30A4  3400               	retlw	0
  4842  30A5  3400               	retlw	0
  4843  30A6  34E8               	retlw	232
  4844  30A7  3403               	retlw	3
  4845  30A8  3400               	retlw	0
  4846  30A9  3400               	retlw	0
  4847  30AA  3410               	retlw	16
  4848  30AB  3427               	retlw	39
  4849  30AC  3400               	retlw	0
  4850  30AD  3400               	retlw	0
  4851  30AE  34A0               	retlw	160
  4852  30AF  3486               	retlw	134
  4853  30B0  3401               	retlw	1
  4854  30B1  3400               	retlw	0
  4855  30B2  3440               	retlw	64
  4856  30B3  3442               	retlw	66
  4857  30B4  340F               	retlw	15
  4858  30B5  3400               	retlw	0
  4859  30B6  3480               	retlw	128
  4860  30B7  3496               	retlw	150
  4861  30B8  3498               	retlw	152
  4862  30B9  3400               	retlw	0
  4863  30BA  3400               	retlw	0
  4864  30BB  34E1               	retlw	225
  4865  30BC  34F5               	retlw	245
  4866  30BD  3405               	retlw	5
  4867  30BE  3400               	retlw	0
  4868  30BF  34CA               	retlw	202
  4869  30C0  349A               	retlw	154
  4870  30C1  343B               	retlw	59
  4871  30C2                     __end_of_dpowers:	
  4872                           
  4873                           	psect	stringtext8
  4874  3159                     __pstringtext8:	
  4875  3159                     _t0:	
  4876  3159  3433               	retlw	51
  4877  315A  3413               	retlw	19
  4878  315B  3495               	retlw	149
  4879  315C  3443               	retlw	67
  4880  315D                     __end_of_t0:	
  4881                           
  4882                           	psect	stringtext9
  4883  315D                     __pstringtext9:	
  4884  315D                     _Beta:	
  4885  315D  3489               	retlw	137
  4886  315E  340F               	retlw	15
  4887  315F                     __end_of_Beta:	
  4888                           
  4889                           	psect	stringtext10
  4890  315F                     __pstringtext10:	
  4891  315F                     LTC6804_rdcfg@BYTES_IN_REG:	
  4892  315F  3408               	retlw	8
  4893  3160                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4894                           
  4895                           	psect	stringtext11
  4896  3160                     __pstringtext11:	
  4897  3160                     LTC6804_wrcfg@BYTES_IN_REG:	
  4898  3160  3406               	retlw	6
  4899  3161                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4900                           
  4901                           	psect	stringtext12
  4902  3161                     __pstringtext12:	
  4903  3161                     LTC6804_rdaux_reg@REG_LEN:	
  4904  3161  3408               	retlw	8
  4905  3162                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4906                           
  4907                           	psect	stringtext13
  4908  3162                     __pstringtext13:	
  4909  3162                     LTC6804_rdaux@GPIO_IN_REG:	
  4910  3162  3403               	retlw	3
  4911  3163                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4912                           
  4913                           	psect	stringtext14
  4914  3163                     __pstringtext14:	
  4915  3163                     LTC6804_rdaux@BYT_IN_REG:	
  4916  3163  3406               	retlw	6
  4917  3164                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4918                           
  4919                           	psect	stringtext15
  4920  3164                     __pstringtext15:	
  4921  3164                     LTC6804_rdaux@NUM_RX_BYT:	
  4922  3164  3408               	retlw	8
  4923  3165                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4924                           
  4925                           	psect	stringtext16
  4926  3165                     __pstringtext16:	
  4927  3165                     LTC6804_rdcv_reg@REG_LEN:	
  4928  3165  3408               	retlw	8
  4929  3166                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4930                           
  4931                           	psect	stringtext17
  4932  3166                     __pstringtext17:	
  4933  3166                     LTC6804_rdcv@CELL_IN_REG:	
  4934  3166  3403               	retlw	3
  4935  3167                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4936                           
  4937                           	psect	stringtext18
  4938  3167                     __pstringtext18:	
  4939  3167                     LTC6804_rdcv@BYT_IN_REG:	
  4940  3167  3406               	retlw	6
  4941  3168                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4942                           
  4943                           	psect	stringtext19
  4944  30C2                     __pstringtext19:	
  4945  30C2                     LTC6804_rdcv@NUM_RX_BYT:	
  4946  30C2  3408               	retlw	8
  4947  30C3                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4948  0012                     _PIR2bits	set	18
  4949  001C                     _T2CON	set	28
  4950  001B                     _PR2	set	27
  4951  0011                     _PIR1bits	set	17
  4952  000B                     _INTCONbits	set	11
  4953  0092                     _PIE2bits	set	146
  4954  0095                     _OPTION_REG	set	149
  4955  009F                     _ADCON2	set	159
  4956  009E                     _ADCON1	set	158
  4957  009D                     _ADCON0	set	157
  4958  009B                     _ADRESL	set	155
  4959  009C                     _ADRESH	set	156
  4960  009D                     _ADCON0bits	set	157
  4961  008E                     _TRISCbits	set	142
  4962  008D                     _TRISBbits	set	141
  4963  008C                     _TRISAbits	set	140
  4964  008F                     _TRISDbits	set	143
  4965  0091                     _PIE1bits	set	145
  4966  011D                     _APFCON1bits	set	285
  4967  010D                     _LATBbits	set	269
  4968  010C                     _LATAbits	set	268
  4969  010F                     _LATDbits	set	271
  4970  019B                     _SPBRGL	set	411
  4971  019C                     _SPBRGH	set	412
  4972  019D                     _RCSTAbits	set	413
  4973  019E                     _TXSTAbits	set	414
  4974  018F                     _ANSELD	set	399
  4975  018D                     _ANSELB	set	397
  4976  018C                     _ANSELA	set	396
  4977  019A                     _TXREG	set	410
  4978  0211                     _SSP1BUF	set	529
  4979  0215                     _SSP1CON1bits	set	533
  4980  0215                     _SSP1CON1	set	533
  4981  0214                     _SSP1STATbits	set	532
  4982  0217                     _SSP1CON3bits	set	535
  4983  0214                     _SSPSTAT	set	532
  4984  0212                     _SSPADD	set	530
  4985  0215                     _SSPCON1	set	533
  4986  0214                     _SSPSTATbits	set	532
  4987  0216                     _SSPCON2bits	set	534
  4988  0211                     _SSPBUF	set	529
  4989  020F                     _WPUD	set	527
  4990  029A                     _CCP2CON	set	666
  4991  30C3                     STR_3:	
  4992  30C3  344D               	retlw	77	;'M'
  4993  30C4  3461               	retlw	97	;'a'
  4994  30C5  3478               	retlw	120	;'x'
  4995  30C6  3420               	retlw	32	;' '
  4996  30C7  3444               	retlw	68	;'D'
  4997  30C8  3469               	retlw	105	;'i'
  4998  30C9  3466               	retlw	102	;'f'
  4999  30CA  3466               	retlw	102	;'f'
  5000  30CB  3465               	retlw	101	;'e'
  5001  30CC  3472               	retlw	114	;'r'
  5002  30CD  3465               	retlw	101	;'e'
  5003  30CE  346E               	retlw	110	;'n'
  5004  30CF  3463               	retlw	99	;'c'
  5005  30D0  3465               	retlw	101	;'e'
  5006  30D1  3420               	retlw	32	;' '
  5007  30D2  343D               	retlw	61	;'='
  5008  30D3  3420               	retlw	32	;' '
  5009  30D4  3456               	retlw	86	;'V'
  5010  30D5  3425               	retlw	37	;'%'
  5011  30D6  3469               	retlw	105	;'i'
  5012  30D7  3420               	retlw	32	;' '
  5013  30D8  3426               	retlw	38	;'&'
  5014  30D9  3420               	retlw	32	;' '
  5015  30DA  3456               	retlw	86	;'V'
  5016  30DB  3425               	retlw	37	;'%'
  5017  30DC  3469               	retlw	105	;'i'
  5018  30DD  3420               	retlw	32	;' '
  5019  30DE  3440               	retlw	64	;'@'
  5020  30DF  3420               	retlw	32	;' '
  5021  30E0  3425               	retlw	37	;'%'
  5022  30E1  3430               	retlw	48	;'0'
  5023  30E2  342E               	retlw	46	;'.'
  5024  30E3  3434               	retlw	52	;'4'
  5025  30E4  3466               	retlw	102	;'f'
  5026  30E5  3456               	retlw	86	;'V'
  5027  30E6  340A               	retlw	10
  5028  30E7  340D               	retlw	13
  5029  30E8  3400               	retlw	0
  5030                           
  5031                           	psect	stringtext20
  5032  30E9                     __pstringtext20:	
  5033  30E9                     STR_2:	
  5034  30E9  3450               	retlw	80	;'P'
  5035  30EA  3461               	retlw	97	;'a'
  5036  30EB  3463               	retlw	99	;'c'
  5037  30EC  346B               	retlw	107	;'k'
  5038  30ED  3420               	retlw	32	;' '
  5039  30EE  3456               	retlw	86	;'V'
  5040  30EF  346F               	retlw	111	;'o'
  5041  30F0  346C               	retlw	108	;'l'
  5042  30F1  3474               	retlw	116	;'t'
  5043  30F2  3461               	retlw	97	;'a'
  5044  30F3  3467               	retlw	103	;'g'
  5045  30F4  3465               	retlw	101	;'e'
  5046  30F5  343A               	retlw	58	;':'
  5047  30F6  3420               	retlw	32	;' '
  5048  30F7  3425               	retlw	37	;'%'
  5049  30F8  3430               	retlw	48	;'0'
  5050  30F9  342E               	retlw	46	;'.'
  5051  30FA  3434               	retlw	52	;'4'
  5052  30FB  3466               	retlw	102	;'f'
  5053  30FC  3456               	retlw	86	;'V'
  5054  30FD  340A               	retlw	10
  5055  30FE  340D               	retlw	13
  5056  30FF  3400               	retlw	0
  5057                           
  5058                           	psect	stringtext21
  5059  3100                     __pstringtext21:	
  5060  3100                     STR_6:	
  5061  3100  3448               	retlw	72	;'H'
  5062  3101  3469               	retlw	105	;'i'
  5063  3102  3467               	retlw	103	;'g'
  5064  3103  3468               	retlw	104	;'h'
  5065  3104  3465               	retlw	101	;'e'
  5066  3105  3473               	retlw	115	;'s'
  5067  3106  3474               	retlw	116	;'t'
  5068  3107  3420               	retlw	32	;' '
  5069  3108  3454               	retlw	84	;'T'
  5070  3109  3465               	retlw	101	;'e'
  5071  310A  346D               	retlw	109	;'m'
  5072  310B  3470               	retlw	112	;'p'
  5073  310C  343A               	retlw	58	;':'
  5074  310D  3420               	retlw	32	;' '
  5075  310E  3425               	retlw	37	;'%'
  5076  310F  3469               	retlw	105	;'i'
  5077  3110  3443               	retlw	67	;'C'
  5078  3111  340A               	retlw	10
  5079  3112  340D               	retlw	13
  5080  3113  3400               	retlw	0
  5081                           
  5082                           	psect	stringtext22
  5083  3114                     __pstringtext22:	
  5084  3114                     STR_4:	
  5085  3114  3463               	retlw	99	;'c'
  5086  3115  3475               	retlw	117	;'u'
  5087  3116  3472               	retlw	114	;'r'
  5088  3117  3472               	retlw	114	;'r'
  5089  3118  3465               	retlw	101	;'e'
  5090  3119  346E               	retlw	110	;'n'
  5091  311A  3474               	retlw	116	;'t'
  5092  311B  3420               	retlw	32	;' '
  5093  311C  343D               	retlw	61	;'='
  5094  311D  3420               	retlw	32	;' '
  5095  311E  3425               	retlw	37	;'%'
  5096  311F  3430               	retlw	48	;'0'
  5097  3120  342E               	retlw	46	;'.'
  5098  3121  3434               	retlw	52	;'4'
  5099  3122  3466               	retlw	102	;'f'
  5100  3123  3441               	retlw	65	;'A'
  5101  3124  340A               	retlw	10
  5102  3125  340D               	retlw	13
  5103  3126  3400               	retlw	0
  5104                           
  5105                           	psect	stringtext23
  5106  3127                     __pstringtext23:	
  5107  3127                     STR_5:	
  5108  3127  3454               	retlw	84	;'T'
  5109  3128  3465               	retlw	101	;'e'
  5110  3129  346D               	retlw	109	;'m'
  5111  312A  3470               	retlw	112	;'p'
  5112  312B  3425               	retlw	37	;'%'
  5113  312C  3469               	retlw	105	;'i'
  5114  312D  3420               	retlw	32	;' '
  5115  312E  343D               	retlw	61	;'='
  5116  312F  3420               	retlw	32	;' '
  5117  3130  3425               	retlw	37	;'%'
  5118  3131  3469               	retlw	105	;'i'
  5119  3132  3443               	retlw	67	;'C'
  5120  3133  340A               	retlw	10
  5121  3134  340D               	retlw	13
  5122  3135  3400               	retlw	0
  5123                           
  5124                           	psect	stringtext24
  5125  3136                     __pstringtext24:	
  5126  3136                     STR_1:	
  5127  3136  3456               	retlw	86	;'V'
  5128  3137  3425               	retlw	37	;'%'
  5129  3138  3469               	retlw	105	;'i'
  5130  3139  3420               	retlw	32	;' '
  5131  313A  343D               	retlw	61	;'='
  5132  313B  3420               	retlw	32	;' '
  5133  313C  3425               	retlw	37	;'%'
  5134  313D  3430               	retlw	48	;'0'
  5135  313E  342E               	retlw	46	;'.'
  5136  313F  3434               	retlw	52	;'4'
  5137  3140  3466               	retlw	102	;'f'
  5138  3141  3456               	retlw	86	;'V'
  5139  3142  340A               	retlw	10
  5140  3143  340D               	retlw	13
  5141  3144  3400               	retlw	0
  5142                           
  5143                           	psect	stringtext25
  5144  3145                     __pstringtext25:	
  5145  3145                     STR_8:	
  5146  3145  341B               	retlw	27
  5147  3146  345B               	retlw	91	;'['
  5148  3147  3432               	retlw	50	;'2'
  5149  3148  344B               	retlw	75	;'K'
  5150  3149  3420               	retlw	32	;' '
  5151  314A  341B               	retlw	27
  5152  314B  345B               	retlw	91	;'['
  5153  314C  3441               	retlw	65	;'A'
  5154  314D  3420               	retlw	32	;' '
  5155  314E  340D               	retlw	13
  5156  314F  3400               	retlw	0
  5157                           
  5158                           	psect	stringtext26
  5159  3150                     __pstringtext26:	
  5160  3150                     STR_7:	
  5161  3150  341B               	retlw	27
  5162  3151  345B               	retlw	91	;'['
  5163  3152  3432               	retlw	50	;'2'
  5164  3153  344B               	retlw	75	;'K'
  5165  3154  3420               	retlw	32	;' '
  5166  3155  341B               	retlw	27
  5167  3156  345B               	retlw	91	;'['
  5168  3157  3441               	retlw	65	;'A'
  5169  3158  3400               	retlw	0
  5170                           
  5171                           	psect	stringtext27
  5172  0000                     __pstringtext27:	
  5173                           
  5174                           ; #config settings
  5175  0000                     
  5176                           	psect	cinit
  5177  0077                     start_initialization:	
  5178  0077                     __initialization:	
  5179                           
  5180                           ; Initialize objects allocated to BANK3
  5181  0077  300E               	movlw	low __pidataBANK3
  5182  0078  0084               	movwf	4
  5183  0079  30AE               	movlw	(high __pidataBANK3)| (0+128)
  5184  007A  0085               	movwf	5
  5185  007B  30D8               	movlw	low __pdataBANK3
  5186  007C  0086               	movwf	6
  5187  007D  3001               	movlw	high __pdataBANK3
  5188  007E  0087               	movwf	7
  5189  007F  3007               	movlw	7
  5190  0080  31AD  25FA  3180   	fcall	init_ram
  5191                           
  5192                           ; Clear objects allocated to COMMON
  5193  0083  01FA               	clrf	__pbssCOMMON& (0+127)
  5194  0084  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  5195                           
  5196                           ; Clear objects allocated to BANK2
  5197  0085  3062               	movlw	low __pbssBANK2
  5198  0086  0084               	movwf	4
  5199  0087  3001               	movlw	high __pbssBANK2
  5200  0088  0085               	movwf	5
  5201  0089  300D               	movlw	13
  5202  008A  31AD  25F4  3180   	fcall	clear_ram0
  5203                           
  5204                           ; Clear objects allocated to BANK3
  5205  008D  30A0               	movlw	low __pbssBANK3
  5206  008E  0084               	movwf	4
  5207  008F  3001               	movlw	high __pbssBANK3
  5208  0090  0085               	movwf	5
  5209  0091  3038               	movlw	56
  5210  0092  31AD  25F4  3180   	fcall	clear_ram0
  5211                           
  5212                           ; Clear objects allocated to BANK4
  5213  0095  3020               	movlw	low __pbssBANK4
  5214  0096  0084               	movwf	4
  5215  0097  3002               	movlw	high __pbssBANK4
  5216  0098  0085               	movwf	5
  5217  0099  3030               	movlw	48
  5218  009A  31AD  25F4  3180   	fcall	clear_ram0
  5219                           
  5220                           ; Clear objects allocated to BANK5
  5221  009D  30A0               	movlw	low __pbssBANK5
  5222  009E  0084               	movwf	4
  5223  009F  3002               	movlw	high __pbssBANK5
  5224  00A0  0085               	movwf	5
  5225  00A1  3032               	movlw	50
  5226  00A2  31AD  25F4  3180   	fcall	clear_ram0
  5227                           
  5228                           ; Clear objects allocated to BANK6
  5229  00A5  3020               	movlw	low __pbssBANK6
  5230  00A6  0084               	movwf	4
  5231  00A7  3003               	movlw	high __pbssBANK6
  5232  00A8  0085               	movwf	5
  5233  00A9  3050               	movlw	80
  5234  00AA  31AD  25F4         	fcall	clear_ram0
  5235  00AC                     end_of_initialization:	
  5236                           ;End of C runtime variable initialization code
  5237                           
  5238  00AC                     __end_of__initialization:	
  5239  00AC  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5240  00AD  0020               	movlb	0
  5241  00AE  319D  2D9E         	ljmp	_main	;jump to C main() function
  5242                           
  5243                           	psect	bssCOMMON
  5244  007A                     __pbssCOMMON:	
  5245  007A                     _z:	
  5246  007A                     	ds	2
  5247                           
  5248                           	psect	bssBANK2
  5249  0162                     __pbssBANK2:	
  5250  0162                     _current:	
  5251  0162                     	ds	4
  5252  0166                     _currentIndex:	
  5253  0166                     	ds	2
  5254  0168                     _cmd:	
  5255  0168                     	ds	3
  5256  016B                     _ADAX:	
  5257  016B                     	ds	2
  5258  016D                     _ADCV:	
  5259  016D                     	ds	2
  5260                           
  5261                           	psect	bssBANK3
  5262  01A0                     __pbssBANK3:	
  5263  01A0                     measureVoltages@F7575:	
  5264  01A0                     	ds	24
  5265  01B8                     _temp:	
  5266  01B8                     	ds	4
  5267  01BC                     _SOC:	
  5268  01BC                     	ds	2
  5269  01BE                     _highestTemp:	
  5270  01BE                     	ds	2
  5271  01C0                     _currentBool:	
  5272  01C0                     	ds	2
  5273  01C2                     _uartBool:	
  5274  01C2                     	ds	2
  5275  01C4                     _k:	
  5276  01C4                     	ds	2
  5277  01C6                     _j:	
  5278  01C6                     	ds	2
  5279  01C8                     _n:	
  5280  01C8                     	ds	2
  5281  01CA                     _temps:	
  5282  01CA                     	ds	10
  5283  01D4                     _totalVoltage:	
  5284  01D4                     	ds	4
  5285                           
  5286                           	psect	dataBANK3
  5287  01D8                     __pdataBANK3:	
  5288  01D8                     _tempChannels:	
  5289  01D8                     	ds	5
  5290  01DD                     SSD1306_Test@F7528:	
  5291  01DD                     	ds	2
  5292                           
  5293                           	psect	bssBANK4
  5294  0220                     __pbssBANK4:	
  5295  0220                     _voltages:	
  5296  0220                     	ds	48
  5297                           
  5298                           	psect	bssBANK5
  5299  02A0                     __pbssBANK5:	
  5300  02A0                     _str:	
  5301  02A0                     	ds	50
  5302                           
  5303                           	psect	bssBANK6
  5304  0320                     __pbssBANK6:	
  5305  0320                     _currentBuff:	
  5306  0320                     	ds	80
  5307                           
  5308                           	psect	inittext
  5309  2DFA                     init_ram:	
  5310  2DFA  00FE               	movwf	126
  5311  2DFB                     initloop:	
  5312  2DFB  0012               	moviw fsr0++
  5313  2DFC  001E               	movwi fsr1++
  5314  2DFD  0BFE               	decfsz	126,f
  5315  2DFE  2DFB               	goto	initloop
  5316  2DFF  3400               	retlw	0
  5317                           
  5318                           	psect	clrtext
  5319  2DF4                     clear_ram0:	
  5320                           ;	Called with FSR0 containing the base address, and
  5321                           ;	WREG with the size to clear
  5322                           
  5323  2DF4  0064               	clrwdt	;clear the watchdog before getting into this loop
  5324  2DF5                     clrloop0:	
  5325  2DF5  0180               	clrf	0	;clear RAM location pointed to by FSR
  5326  2DF6  3101               	addfsr 0,1
  5327  2DF7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5328  2DF8  2DF5               	goto	clrloop0	;have we reached the end yet?
  5329  2DF9  3400               	retlw	0	;all done for this memory range, return
  5330                           
  5331                           	psect	cstackBANK2
  5332  0120                     __pcstackBANK2:	
  5333  0120                     _sprintf$2115:	
  5334                           
  5335                           ; 4 bytes @ 0x0
  5336  0120                     	ds	4
  5337  0124                     sprintf@ap:	
  5338                           
  5339                           ; 1 bytes @ 0x4
  5340  0124                     	ds	1
  5341  0125                     sprintf@tmpval:	
  5342                           
  5343                           ; 4 bytes @ 0x5
  5344  0125                     	ds	4
  5345  0129                     sprintf@val:	
  5346                           
  5347                           ; 4 bytes @ 0x9
  5348  0129                     	ds	4
  5349  012D                     sprintf@exp:	
  5350                           
  5351                           ; 2 bytes @ 0xD
  5352  012D                     	ds	2
  5353  012F                     sprintf@flag:	
  5354                           
  5355                           ; 2 bytes @ 0xF
  5356  012F                     	ds	2
  5357  0131                     sprintf@width:	
  5358                           
  5359                           ; 2 bytes @ 0x11
  5360  0131                     	ds	2
  5361  0133                     sprintf@fval:	
  5362                           
  5363                           ; 4 bytes @ 0x13
  5364  0133                     	ds	4
  5365  0137                     sprintf@prec:	
  5366                           
  5367                           ; 2 bytes @ 0x17
  5368  0137                     	ds	2
  5369  0139                     sprintf@sp:	
  5370                           
  5371                           ; 1 bytes @ 0x19
  5372  0139                     	ds	1
  5373  013A                     sprintf@c:	
  5374                           
  5375                           ; 1 bytes @ 0x1A
  5376  013A                     	ds	1
  5377  013B                     ??_clearScreen:	
  5378  013B                     ?_writeVoltages:	
  5379                           ; 1 bytes @ 0x1B
  5380                           
  5381  013B                     ?_writeTemps:	
  5382                           ; 1 bytes @ 0x1B
  5383                           
  5384  013B                     ?_writeCurrent:	
  5385                           ; 1 bytes @ 0x1B
  5386                           
  5387  013B                     writeVoltages@length:	
  5388                           ; 1 bytes @ 0x1B
  5389                           
  5390  013B                     writeTemps@highestTemp:	
  5391                           ; 2 bytes @ 0x1B
  5392                           
  5393  013B                     writeCurrent@current:	
  5394                           ; 2 bytes @ 0x1B
  5395                           
  5396                           
  5397                           ; 4 bytes @ 0x1B
  5398  013B                     	ds	2
  5399  013D                     writeTemps@numTemps:	
  5400  013D                     writeVoltages@totalVoltage:	
  5401                           ; 2 bytes @ 0x1D
  5402                           
  5403                           
  5404                           ; 4 bytes @ 0x1D
  5405  013D                     	ds	1
  5406  013E                     clearScreen@j:	
  5407                           
  5408                           ; 2 bytes @ 0x1E
  5409  013E                     	ds	1
  5410  013F                     writeTemps@temps:	
  5411                           
  5412                           ; 1 bytes @ 0x1F
  5413  013F                     	ds	1
  5414  0140                     writeTemps@k:	
  5415                           
  5416                           ; 2 bytes @ 0x20
  5417  0140                     	ds	1
  5418  0141                     ??_writeVoltages:	
  5419                           
  5420                           ; 1 bytes @ 0x21
  5421  0141                     	ds	4
  5422  0145                     _writeVoltages$2111:	
  5423                           
  5424                           ; 4 bytes @ 0x25
  5425  0145                     	ds	4
  5426  0149                     writeVoltages@maxCell:	
  5427                           
  5428                           ; 2 bytes @ 0x29
  5429  0149                     	ds	2
  5430  014B                     writeVoltages@minCell:	
  5431                           
  5432                           ; 2 bytes @ 0x2B
  5433  014B                     	ds	2
  5434  014D                     writeVoltages@volts:	
  5435                           
  5436                           ; 1 bytes @ 0x2D
  5437  014D                     	ds	1
  5438  014E                     writeVoltages@k:	
  5439                           
  5440                           ; 2 bytes @ 0x2E
  5441  014E                     	ds	2
  5442  0150                     ?_writeValuesToUart:	
  5443  0150                     writeValuesToUart@voltageArrLength:	
  5444                           ; 1 bytes @ 0x30
  5445                           
  5446                           
  5447                           ; 2 bytes @ 0x30
  5448  0150                     	ds	2
  5449  0152                     writeValuesToUart@totalVoltage:	
  5450                           
  5451                           ; 4 bytes @ 0x32
  5452  0152                     	ds	4
  5453  0156                     writeValuesToUart@temperatureArr:	
  5454                           
  5455                           ; 1 bytes @ 0x36
  5456  0156                     	ds	1
  5457  0157                     writeValuesToUart@temperatureArrLength:	
  5458                           
  5459                           ; 2 bytes @ 0x37
  5460  0157                     	ds	2
  5461  0159                     writeValuesToUart@temperatureHigh:	
  5462                           
  5463                           ; 2 bytes @ 0x39
  5464  0159                     	ds	2
  5465  015B                     writeValuesToUart@current:	
  5466                           
  5467                           ; 4 bytes @ 0x3B
  5468  015B                     	ds	4
  5469  015F                     writeValuesToUart@uartLines:	
  5470                           
  5471                           ; 2 bytes @ 0x3F
  5472  015F                     	ds	2
  5473  0161                     ??_main:	
  5474                           
  5475                           ; 1 bytes @ 0x41
  5476  0161                     	ds	1
  5477                           
  5478                           	psect	cstackBANK1
  5479  00A0                     __pcstackBANK1:	
  5480  00A0                     ??_measureVoltages:	
  5481  00A0                     ??_fround:	
  5482                           ; 1 bytes @ 0x0
  5483                           
  5484  00A0                     ??_scale:	
  5485                           ; 1 bytes @ 0x0
  5486                           
  5487                           
  5488                           ; 1 bytes @ 0x0
  5489  00A0                     	ds	4
  5490  00A4                     measureVoltages@ltcData:	
  5491                           
  5492                           ; 24 bytes @ 0x4
  5493  00A4                     	ds	12
  5494  00B0                     _scale$2114:	
  5495                           
  5496                           ; 4 bytes @ 0x10
  5497  00B0                     	ds	4
  5498  00B4                     scale@scl:	
  5499  00B4                     _fround$2113:	
  5500                           ; 1 bytes @ 0x14
  5501                           
  5502                           
  5503                           ; 4 bytes @ 0x14
  5504  00B4                     	ds	1
  5505  00B5                     ?___fltol:	
  5506  00B5                     ___fltol@f1:	
  5507                           ; 4 bytes @ 0x15
  5508                           
  5509                           
  5510                           ; 4 bytes @ 0x15
  5511  00B5                     	ds	3
  5512  00B8                     _fround$2112:	
  5513                           
  5514                           ; 4 bytes @ 0x18
  5515  00B8                     	ds	1
  5516  00B9                     ??___fltol:	
  5517                           
  5518                           ; 1 bytes @ 0x19
  5519  00B9                     	ds	3
  5520  00BC                     measureVoltages@pecError:	
  5521  00BC                     fround@prec:	
  5522                           ; 1 bytes @ 0x1C
  5523                           
  5524                           
  5525                           ; 1 bytes @ 0x1C
  5526  00BC                     	ds	1
  5527  00BD                     ?___fladd:	
  5528  00BD                     measureVoltages@measurements:	
  5529                           ; 4 bytes @ 0x1D
  5530                           
  5531  00BD                     ___fladd@b:	
  5532                           ; 1 bytes @ 0x1D
  5533                           
  5534                           
  5535                           ; 4 bytes @ 0x1D
  5536  00BD                     	ds	1
  5537  00BE                     ___fltol@sign1:	
  5538  00BE                     measureVoltages@i:	
  5539                           ; 1 bytes @ 0x1E
  5540                           
  5541                           
  5542                           ; 2 bytes @ 0x1E
  5543  00BE                     	ds	1
  5544  00BF                     ___fltol@exp1:	
  5545                           
  5546                           ; 1 bytes @ 0x1F
  5547  00BF                     	ds	1
  5548  00C0                     ?_calculateTemp:	
  5549  00C0                     calculateTemp@adcValue:	
  5550                           ; 2 bytes @ 0x20
  5551                           
  5552                           
  5553                           ; 2 bytes @ 0x20
  5554  00C0                     	ds	1
  5555  00C1                     ___fladd@a:	
  5556                           
  5557                           ; 4 bytes @ 0x21
  5558  00C1                     	ds	1
  5559  00C2                     ??_calculateTemp:	
  5560                           
  5561                           ; 1 bytes @ 0x22
  5562  00C2                     	ds	2
  5563  00C4                     calculateTemp@voltage:	
  5564                           
  5565                           ; 4 bytes @ 0x24
  5566  00C4                     	ds	1
  5567  00C5                     ??___fladd:	
  5568                           
  5569                           ; 1 bytes @ 0x25
  5570  00C5                     	ds	3
  5571  00C8                     ?_getTemps:	
  5572  00C8                     getTemps@numTemps:	
  5573                           ; 2 bytes @ 0x28
  5574                           
  5575                           
  5576                           ; 2 bytes @ 0x28
  5577  00C8                     	ds	2
  5578  00CA                     ??_getTemps:	
  5579                           
  5580                           ; 1 bytes @ 0x2A
  5581  00CA                     	ds	4
  5582  00CE                     getTemps@highestTemp:	
  5583                           
  5584                           ; 2 bytes @ 0x2E
  5585  00CE                     	ds	2
  5586  00D0                     getTemps@temperatures:	
  5587                           
  5588                           ; 1 bytes @ 0x30
  5589  00D0                     	ds	1
  5590  00D1                     ___fladd@signs:	
  5591  00D1                     getTemps@inc:	
  5592                           ; 1 bytes @ 0x31
  5593                           
  5594                           
  5595                           ; 2 bytes @ 0x31
  5596  00D1                     	ds	1
  5597  00D2                     ___fladd@aexp:	
  5598                           
  5599                           ; 1 bytes @ 0x32
  5600  00D2                     	ds	1
  5601  00D3                     ___fladd@bexp:	
  5602                           
  5603                           ; 1 bytes @ 0x33
  5604  00D3                     	ds	1
  5605  00D4                     ___fladd@grs:	
  5606                           
  5607                           ; 1 bytes @ 0x34
  5608  00D4                     	ds	1
  5609  00D5                     ?_sumVoltages:	
  5610  00D5                     ?_avgBuff:	
  5611                           ; 4 bytes @ 0x35
  5612                           
  5613  00D5                     ?_calculateCurrent:	
  5614                           ; 4 bytes @ 0x35
  5615                           
  5616  00D5                     ?___flsub:	
  5617                           ; 4 bytes @ 0x35
  5618                           
  5619  00D5                     avgBuff@size:	
  5620                           ; 4 bytes @ 0x35
  5621                           
  5622  00D5                     sumVoltages@numVoltages:	
  5623                           ; 2 bytes @ 0x35
  5624                           
  5625  00D5                     calculateCurrent@adcValue:	
  5626                           ; 2 bytes @ 0x35
  5627                           
  5628  00D5                     ___flsub@a:	
  5629                           ; 4 bytes @ 0x35
  5630                           
  5631                           
  5632                           ; 4 bytes @ 0x35
  5633  00D5                     	ds	4
  5634  00D9                     ??_sumVoltages:	
  5635  00D9                     ??_avgBuff:	
  5636                           ; 1 bytes @ 0x39
  5637                           
  5638  00D9                     calculateCurrent@curr:	
  5639                           ; 1 bytes @ 0x39
  5640                           
  5641  00D9                     ___flsub@b:	
  5642                           ; 4 bytes @ 0x39
  5643                           
  5644                           
  5645                           ; 4 bytes @ 0x39
  5646  00D9                     	ds	2
  5647  00DB                     avgBuff@buff:	
  5648  00DB                     sumVoltages@values:	
  5649                           ; 1 bytes @ 0x3B
  5650                           
  5651                           
  5652                           ; 1 bytes @ 0x3B
  5653  00DB                     	ds	1
  5654  00DC                     avgBuff@total:	
  5655  00DC                     sumVoltages@total:	
  5656                           ; 4 bytes @ 0x3C
  5657                           
  5658                           
  5659                           ; 4 bytes @ 0x3C
  5660  00DC                     	ds	1
  5661  00DD                     ?_sprintf:	
  5662  00DD                     sprintf@f:	
  5663                           ; 2 bytes @ 0x3D
  5664                           
  5665  00DD                     _calculateCurrent$2110:	
  5666                           ; 2 bytes @ 0x3D
  5667                           
  5668                           
  5669                           ; 4 bytes @ 0x3D
  5670  00DD                     	ds	3
  5671  00E0                     avgBuff@inc:	
  5672  00E0                     sumVoltages@i:	
  5673                           ; 2 bytes @ 0x40
  5674                           
  5675                           
  5676                           ; 2 bytes @ 0x40
  5677  00E0                     	ds	1
  5678  00E1                     ?_getCurrent:	
  5679                           
  5680                           ; 4 bytes @ 0x41
  5681  00E1                     	ds	4
  5682  00E5                     getCurrent@currentValue:	
  5683                           
  5684                           ; 4 bytes @ 0x45
  5685  00E5                     	ds	2
  5686  00E7                     ??_sprintf:	
  5687                           
  5688                           ; 1 bytes @ 0x47
  5689  00E7                     	ds	6
  5690  00ED                     ?_clearScreen:	
  5691  00ED                     ??_writeTemps:	
  5692                           ; 1 bytes @ 0x4D
  5693                           
  5694  00ED                     clearScreen@numLines:	
  5695                           ; 1 bytes @ 0x4D
  5696                           
  5697                           
  5698                           ; 2 bytes @ 0x4D
  5699  00ED                     	ds	2
  5700  00EF                     writeValuesToUart@voltageArr:	
  5701                           
  5702                           ; 1 bytes @ 0x4F
  5703  00EF                     	ds	1
  5704                           
  5705                           	psect	cstackCOMMON
  5706  0070                     __pcstackCOMMON:	
  5707  0070                     ?_isdigit:	
  5708  0070                     ?_setup:	
  5709                           ; 1 bit 
  5710                           
  5711  0070                     ?_i2cSwitch:	
  5712                           ; 1 bytes @ 0x0
  5713                           
  5714  0070                     ?_spiSwitch:	
  5715                           ; 1 bytes @ 0x0
  5716                           
  5717  0070                     ?_uartDisable:	
  5718                           ; 1 bytes @ 0x0
  5719                           
  5720  0070                     ??_uartDisable:	
  5721                           ; 1 bytes @ 0x0
  5722                           
  5723  0070                     ?_timerSetup:	
  5724                           ; 1 bytes @ 0x0
  5725                           
  5726  0070                     ?_adcSetup:	
  5727                           ; 1 bytes @ 0x0
  5728                           
  5729  0070                     ?_uartSetup:	
  5730                           ; 1 bytes @ 0x0
  5731                           
  5732  0070                     ?_i2cSetup:	
  5733                           ; 1 bytes @ 0x0
  5734                           
  5735  0070                     ?_spiSetup:	
  5736                           ; 1 bytes @ 0x0
  5737                           
  5738  0070                     ?_LTC6804_initialize:	
  5739                           ; 1 bytes @ 0x0
  5740                           
  5741  0070                     ?_uartEnable:	
  5742                           ; 1 bytes @ 0x0
  5743                           
  5744  0070                     ?_timer0Setup:	
  5745                           ; 1 bytes @ 0x0
  5746                           
  5747  0070                     ?_timer2Setup:	
  5748                           ; 1 bytes @ 0x0
  5749                           
  5750  0070                     ?_LTC6804_adcv:	
  5751                           ; 1 bytes @ 0x0
  5752                           
  5753  0070                     ?_wakeup_idle:	
  5754                           ; 1 bytes @ 0x0
  5755                           
  5756  0070                     ?_spi_write:	
  5757                           ; 1 bytes @ 0x0
  5758                           
  5759  0070                     ?_spi_read:	
  5760                           ; 1 bytes @ 0x0
  5761                           
  5762  0070                     ?_main:	
  5763                           ; 1 bytes @ 0x0
  5764                           
  5765  0070                     ?_ISR:	
  5766                           ; 1 bytes @ 0x0
  5767                           
  5768  0070                     ??_ISR:	
  5769                           ; 1 bytes @ 0x0
  5770                           
  5771                           
  5772                           ; 1 bytes @ 0x0
  5773  0070                     	ds	2
  5774  0072                     ?___flge:	
  5775  0072                     ??_i2cSwitch:	
  5776                           ; 1 bit 
  5777                           
  5778  0072                     ??_spiSwitch:	
  5779                           ; 1 bytes @ 0x2
  5780                           
  5781  0072                     ??_timerSetup:	
  5782                           ; 1 bytes @ 0x2
  5783                           
  5784  0072                     ??_adcSetup:	
  5785                           ; 1 bytes @ 0x2
  5786                           
  5787  0072                     ??_uartSetup:	
  5788                           ; 1 bytes @ 0x2
  5789                           
  5790  0072                     ??_i2cSetup:	
  5791                           ; 1 bytes @ 0x2
  5792                           
  5793  0072                     ??_spiSetup:	
  5794                           ; 1 bytes @ 0x2
  5795                           
  5796  0072                     ??_uartEnable:	
  5797                           ; 1 bytes @ 0x2
  5798                           
  5799  0072                     ??_timer0Setup:	
  5800                           ; 1 bytes @ 0x2
  5801                           
  5802  0072                     ??_timer2Setup:	
  5803                           ; 1 bytes @ 0x2
  5804                           
  5805  0072                     ?_set_adc:	
  5806                           ; 1 bytes @ 0x2
  5807                           
  5808  0072                     ??_wakeup_idle:	
  5809                           ; 1 bytes @ 0x2
  5810                           
  5811  0072                     ??_spi_write:	
  5812                           ; 1 bytes @ 0x2
  5813                           
  5814  0072                     ??_spi_read:	
  5815                           ; 1 bytes @ 0x2
  5816                           
  5817  0072                     ??_isdigit:	
  5818                           ; 1 bytes @ 0x2
  5819                           
  5820  0072                     ?___bmul:	
  5821                           ; 1 bytes @ 0x2
  5822                           
  5823  0072                     ?_adcRead:	
  5824                           ; 1 bytes @ 0x2
  5825                           
  5826  0072                     ?__Umul8_16:	
  5827                           ; 2 bytes @ 0x2
  5828                           
  5829  0072                     ?___wmul:	
  5830                           ; 2 bytes @ 0x2
  5831                           
  5832  0072                     ?___awmod:	
  5833                           ; 2 bytes @ 0x2
  5834                           
  5835  0072                     ?__tdiv_to_l_:	
  5836                           ; 2 bytes @ 0x2
  5837                           
  5838  0072                     ?__div_to_l_:	
  5839                           ; 4 bytes @ 0x2
  5840                           
  5841  0072                     ?___flneg:	
  5842                           ; 4 bytes @ 0x2
  5843                           
  5844  0072                     ?___lldiv:	
  5845                           ; 4 bytes @ 0x2
  5846                           
  5847  0072                     set_adc@DCP:	
  5848                           ; 4 bytes @ 0x2
  5849                           
  5850  0072                     ___bmul@multiplicand:	
  5851                           ; 1 bytes @ 0x2
  5852                           
  5853  0072                     _isdigit$1724:	
  5854                           ; 1 bytes @ 0x2
  5855                           
  5856  0072                     __Umul8_16@multiplicand:	
  5857                           ; 1 bytes @ 0x2
  5858                           
  5859  0072                     ___wmul@multiplier:	
  5860                           ; 1 bytes @ 0x2
  5861                           
  5862  0072                     ___awmod@divisor:	
  5863                           ; 2 bytes @ 0x2
  5864                           
  5865  0072                     __div_to_l_@f1:	
  5866                           ; 2 bytes @ 0x2
  5867                           
  5868  0072                     ___flge@ff1:	
  5869                           ; 4 bytes @ 0x2
  5870                           
  5871  0072                     ___flneg@f1:	
  5872                           ; 4 bytes @ 0x2
  5873                           
  5874  0072                     __tdiv_to_l_@f1:	
  5875                           ; 4 bytes @ 0x2
  5876                           
  5877  0072                     ___lldiv@divisor:	
  5878                           ; 4 bytes @ 0x2
  5879                           
  5880                           
  5881                           ; 4 bytes @ 0x2
  5882  0072                     	ds	1
  5883  0073                     ??___bmul:	
  5884  0073                     set_adc@CH:	
  5885                           ; 1 bytes @ 0x3
  5886                           
  5887  0073                     spi_write@readData:	
  5888                           ; 1 bytes @ 0x3
  5889                           
  5890  0073                     spi_read@data:	
  5891                           ; 1 bytes @ 0x3
  5892                           
  5893  0073                     isdigit@c:	
  5894                           ; 1 bytes @ 0x3
  5895                           
  5896                           
  5897                           ; 1 bytes @ 0x3
  5898  0073                     	ds	1
  5899  0074                     ??__Umul8_16:	
  5900  0074                     ??___xxtofl:	
  5901                           ; 1 bytes @ 0x4
  5902                           
  5903  0074                     set_adc@CHG:	
  5904                           ; 1 bytes @ 0x4
  5905                           
  5906  0074                     spi_write@data:	
  5907                           ; 1 bytes @ 0x4
  5908                           
  5909  0074                     spi_read@readData:	
  5910                           ; 1 bytes @ 0x4
  5911                           
  5912  0074                     ___bmul@product:	
  5913                           ; 1 bytes @ 0x4
  5914                           
  5915  0074                     ___wmul@multiplicand:	
  5916                           ; 1 bytes @ 0x4
  5917                           
  5918  0074                     ___awmod@dividend:	
  5919                           ; 2 bytes @ 0x4
  5920                           
  5921                           
  5922                           ; 2 bytes @ 0x4
  5923  0074                     	ds	1
  5924  0075                     ??_set_adc:	
  5925  0075                     ?_spi_write_array:	
  5926                           ; 1 bytes @ 0x5
  5927                           
  5928  0075                     spi_write_array@data:	
  5929                           ; 1 bytes @ 0x5
  5930                           
  5931  0075                     ___bmul@multiplier:	
  5932                           ; 1 bytes @ 0x5
  5933                           
  5934                           
  5935                           ; 1 bytes @ 0x5
  5936  0075                     	ds	1
  5937  0076                     ??_spi_write_array:	
  5938  0076                     ?_spi_write_read:	
  5939                           ; 1 bytes @ 0x6
  5940                           
  5941  0076                     ??___wmul:	
  5942                           ; 1 bytes @ 0x6
  5943                           
  5944  0076                     ??___awmod:	
  5945                           ; 1 bytes @ 0x6
  5946                           
  5947  0076                     ??___flneg:	
  5948                           ; 1 bytes @ 0x6
  5949                           
  5950  0076                     ?_pec15_calc:	
  5951                           ; 1 bytes @ 0x6
  5952                           
  5953  0076                     spi_write_read@tx_len:	
  5954                           ; 2 bytes @ 0x6
  5955                           
  5956  0076                     pec15_calc@data:	
  5957                           ; 1 bytes @ 0x6
  5958                           
  5959  0076                     ___wmul@product:	
  5960                           ; 2 bytes @ 0x6
  5961                           
  5962  0076                     __div_to_l_@f2:	
  5963                           ; 2 bytes @ 0x6
  5964                           
  5965  0076                     ___flge@ff2:	
  5966                           ; 4 bytes @ 0x6
  5967                           
  5968  0076                     __tdiv_to_l_@f2:	
  5969                           ; 4 bytes @ 0x6
  5970                           
  5971  0076                     ___lldiv@dividend:	
  5972                           ; 4 bytes @ 0x6
  5973                           
  5974                           
  5975                           ; 4 bytes @ 0x6
  5976  0076                     	ds	1
  5977  0077                     set_adc@MD:	
  5978  0077                     spi_write_array@len:	
  5979                           ; 1 bytes @ 0x7
  5980                           
  5981  0077                     ___awmod@counter:	
  5982                           ; 1 bytes @ 0x7
  5983                           
  5984  0077                     spi_write_read@rx_data:	
  5985                           ; 1 bytes @ 0x7
  5986                           
  5987                           
  5988                           ; 2 bytes @ 0x7
  5989  0077                     	ds	1
  5990  0078                     set_adc@md_bits:	
  5991  0078                     spi_write_array@i:	
  5992                           ; 1 bytes @ 0x8
  5993                           
  5994  0078                     ___awmod@sign:	
  5995                           ; 1 bytes @ 0x8
  5996                           
  5997                           
  5998                           ; 1 bytes @ 0x8
  5999  0078                     	ds	1
  6000  0079                     ??_setup:	
  6001  0079                     ??_LTC6804_initialize:	
  6002                           ; 1 bytes @ 0x9
  6003                           
  6004  0079                     ??_LTC6804_adcv:	
  6005                           ; 1 bytes @ 0x9
  6006                           
  6007  0079                     ??___awdiv:	
  6008                           ; 1 bytes @ 0x9
  6009                           
  6010  0079                     spi_write_read@rx_len:	
  6011                           ; 1 bytes @ 0x9
  6012                           
  6013                           
  6014                           ; 1 bytes @ 0x9
  6015  0079                     	ds	1
  6016  007A                     ??_getCurrent:	
  6017  007A                     ??_writeValuesToUart:	
  6018                           ; 1 bytes @ 0xA
  6019                           
  6020  007A                     ??_writeCurrent:	
  6021                           ; 1 bytes @ 0xA
  6022                           
  6023  007A                     ??_calculateCurrent:	
  6024                           ; 1 bytes @ 0xA
  6025                           
  6026  007A                     ??___flsub:	
  6027                           ; 1 bytes @ 0xA
  6028                           
  6029                           
  6030                           	psect	cstackBANK0
  6031  0020                     __pcstackBANK0:	
  6032                           ; 1 bytes @ 0xA
  6033                           
  6034  0020                     ??_adcRead:	
  6035  0020                     ??_pec15_calc:	
  6036                           ; 1 bytes @ 0x0
  6037                           
  6038  0020                     ??_spi_write_read:	
  6039                           ; 1 bytes @ 0x0
  6040                           
  6041  0020                     ??__tdiv_to_l_:	
  6042                           ; 1 bytes @ 0x0
  6043                           
  6044  0020                     ??__div_to_l_:	
  6045                           ; 1 bytes @ 0x0
  6046                           
  6047  0020                     ??___flge:	
  6048                           ; 1 bytes @ 0x0
  6049                           
  6050  0020                     ??___lldiv:	
  6051                           ; 1 bytes @ 0x0
  6052                           
  6053  0020                     ?___awdiv:	
  6054                           ; 1 bytes @ 0x0
  6055                           
  6056  0020                     ___awdiv@divisor:	
  6057                           ; 2 bytes @ 0x0
  6058                           
  6059  0020                     __Umul8_16@product:	
  6060                           ; 2 bytes @ 0x0
  6061                           
  6062                           
  6063                           ; 2 bytes @ 0x0
  6064  0020                     	ds	1
  6065  0021                     ___lldiv@quotient:	
  6066                           
  6067                           ; 4 bytes @ 0x1
  6068  0021                     	ds	1
  6069  0022                     ___awdiv@dividend:	
  6070  0022                     __Umul8_16@word_mpld:	
  6071                           ; 2 bytes @ 0x2
  6072                           
  6073                           
  6074                           ; 2 bytes @ 0x2
  6075  0022                     	ds	2
  6076  0024                     ___awdiv@counter:	
  6077  0024                     __Umul8_16@multiplier:	
  6078                           ; 1 bytes @ 0x4
  6079                           
  6080  0024                     __tdiv_to_l_@quot:	
  6081                           ; 1 bytes @ 0x4
  6082                           
  6083                           
  6084                           ; 4 bytes @ 0x4
  6085  0024                     	ds	1
  6086  0025                     spi_write_read@i:	
  6087  0025                     ___awdiv@sign:	
  6088                           ; 1 bytes @ 0x5
  6089                           
  6090  0025                     ___lldiv@counter:	
  6091                           ; 1 bytes @ 0x5
  6092                           
  6093  0025                     __div_to_l_@quot:	
  6094                           ; 1 bytes @ 0x5
  6095                           
  6096                           
  6097                           ; 4 bytes @ 0x5
  6098  0025                     	ds	1
  6099  0026                     ?___llmod:	
  6100  0026                     spi_write_read@i_1378:	
  6101                           ; 4 bytes @ 0x6
  6102                           
  6103  0026                     ___awdiv@quotient:	
  6104                           ; 1 bytes @ 0x6
  6105                           
  6106  0026                     ___llmod@divisor:	
  6107                           ; 2 bytes @ 0x6
  6108                           
  6109                           
  6110                           ; 4 bytes @ 0x6
  6111  0026                     	ds	1
  6112  0027                     adcRead@ch:	
  6113  0027                     spi_write_read@tx_Data:	
  6114                           ; 1 bytes @ 0x7
  6115                           
  6116                           
  6117                           ; 1 bytes @ 0x7
  6118  0027                     	ds	1
  6119  0028                     __tdiv_to_l_@cntr:	
  6120  0028                     adcRead@ansHigh:	
  6121                           ; 1 bytes @ 0x8
  6122                           
  6123                           
  6124                           ; 2 bytes @ 0x8
  6125  0028                     	ds	1
  6126  0029                     __div_to_l_@cntr:	
  6127  0029                     __tdiv_to_l_@exp1:	
  6128                           ; 1 bytes @ 0x9
  6129                           
  6130  0029                     pec15_calc@addr:	
  6131                           ; 1 bytes @ 0x9
  6132                           
  6133                           
  6134                           ; 2 bytes @ 0x9
  6135  0029                     	ds	1
  6136  002A                     __div_to_l_@exp1:	
  6137  002A                     adcRead@ansLow:	
  6138                           ; 1 bytes @ 0xA
  6139                           
  6140  002A                     ___llmod@dividend:	
  6141                           ; 2 bytes @ 0xA
  6142                           
  6143                           
  6144                           ; 4 bytes @ 0xA
  6145  002A                     	ds	1
  6146  002B                     pec15_calc@len:	
  6147                           
  6148                           ; 1 bytes @ 0xB
  6149  002B                     	ds	1
  6150  002C                     pec15_calc@i:	
  6151  002C                     adcRead@total:	
  6152                           ; 1 bytes @ 0xC
  6153                           
  6154                           
  6155                           ; 2 bytes @ 0xC
  6156  002C                     	ds	1
  6157  002D                     pec15_calc@remainder:	
  6158                           
  6159                           ; 2 bytes @ 0xD
  6160  002D                     	ds	1
  6161  002E                     ??___llmod:	
  6162  002E                     ?___xxtofl:	
  6163                           ; 1 bytes @ 0xE
  6164                           
  6165  002E                     ___xxtofl@val:	
  6166                           ; 4 bytes @ 0xE
  6167                           
  6168                           
  6169                           ; 4 bytes @ 0xE
  6170  002E                     	ds	1
  6171  002F                     ?_LTC6804_rdcv_reg:	
  6172  002F                     LTC6804_rdcv_reg@total_ic:	
  6173                           ; 1 bytes @ 0xF
  6174                           
  6175  002F                     ___llmod@counter:	
  6176                           ; 1 bytes @ 0xF
  6177                           
  6178  002F                     LTC6804_adcv@cmd:	
  6179                           ; 1 bytes @ 0xF
  6180                           
  6181                           
  6182                           ; 4 bytes @ 0xF
  6183  002F                     	ds	1
  6184  0030                     LTC6804_rdcv_reg@data:	
  6185                           
  6186                           ; 1 bytes @ 0x10
  6187  0030                     	ds	1
  6188  0031                     ??_LTC6804_rdcv_reg:	
  6189                           
  6190                           ; 1 bytes @ 0x11
  6191  0031                     	ds	1
  6192  0032                     ___xxtofl@sign:	
  6193                           
  6194                           ; 1 bytes @ 0x12
  6195  0032                     	ds	1
  6196  0033                     ___xxtofl@exp:	
  6197  0033                     LTC6804_adcv@cmd_pec:	
  6198                           ; 1 bytes @ 0x13
  6199                           
  6200                           
  6201                           ; 2 bytes @ 0x13
  6202  0033                     	ds	1
  6203  0034                     LTC6804_rdcv_reg@cmd_pec:	
  6204  0034                     ___xxtofl@arg:	
  6205                           ; 2 bytes @ 0x14
  6206                           
  6207                           
  6208                           ; 4 bytes @ 0x14
  6209  0034                     	ds	2
  6210  0036                     LTC6804_rdcv_reg@cmd:	
  6211                           
  6212                           ; 4 bytes @ 0x16
  6213  0036                     	ds	2
  6214  0038                     ?___fldiv:	
  6215  0038                     ___fldiv@a:	
  6216                           ; 4 bytes @ 0x18
  6217                           
  6218                           
  6219                           ; 4 bytes @ 0x18
  6220  0038                     	ds	2
  6221  003A                     LTC6804_rdcv_reg@reg:	
  6222                           
  6223                           ; 1 bytes @ 0x1A
  6224  003A                     	ds	1
  6225  003B                     ?_LTC6804_rdcv:	
  6226  003B                     LTC6804_rdcv@total_ic:	
  6227                           ; 1 bytes @ 0x1B
  6228                           
  6229                           
  6230                           ; 1 bytes @ 0x1B
  6231  003B                     	ds	1
  6232  003C                     LTC6804_rdcv@cell_codes:	
  6233  003C                     ___fldiv@b:	
  6234                           ; 1 bytes @ 0x1C
  6235                           
  6236                           
  6237                           ; 4 bytes @ 0x1C
  6238  003C                     	ds	1
  6239  003D                     ??_LTC6804_rdcv:	
  6240                           
  6241                           ; 1 bytes @ 0x1D
  6242  003D                     	ds	3
  6243  0040                     ??___fldiv:	
  6244                           
  6245                           ; 1 bytes @ 0x20
  6246  0040                     	ds	2
  6247  0042                     LTC6804_rdcv@cell_data:	
  6248                           
  6249                           ; 8 bytes @ 0x22
  6250  0042                     	ds	3
  6251  0045                     ___fldiv@sign:	
  6252                           
  6253                           ; 1 bytes @ 0x25
  6254  0045                     	ds	1
  6255  0046                     ___fldiv@rem:	
  6256                           
  6257                           ; 4 bytes @ 0x26
  6258  0046                     	ds	4
  6259  004A                     LTC6804_rdcv@pec_error:	
  6260  004A                     ___fldiv@new_exp:	
  6261                           ; 1 bytes @ 0x2A
  6262                           
  6263                           
  6264                           ; 2 bytes @ 0x2A
  6265  004A                     	ds	1
  6266  004B                     LTC6804_rdcv@parsed_cell:	
  6267                           
  6268                           ; 2 bytes @ 0x2B
  6269  004B                     	ds	1
  6270  004C                     ___fldiv@grs:	
  6271                           
  6272                           ; 4 bytes @ 0x2C
  6273  004C                     	ds	1
  6274  004D                     LTC6804_rdcv@received_pec:	
  6275                           
  6276                           ; 2 bytes @ 0x2D
  6277  004D                     	ds	2
  6278  004F                     LTC6804_rdcv@data_pec:	
  6279                           
  6280                           ; 2 bytes @ 0x2F
  6281  004F                     	ds	1
  6282  0050                     ___fldiv@bexp:	
  6283                           
  6284                           ; 1 bytes @ 0x30
  6285  0050                     	ds	1
  6286  0051                     LTC6804_rdcv@reg:	
  6287  0051                     ___fldiv@aexp:	
  6288                           ; 1 bytes @ 0x31
  6289                           
  6290                           
  6291                           ; 1 bytes @ 0x31
  6292  0051                     	ds	1
  6293  0052                     ?___flmul:	
  6294  0052                     LTC6804_rdcv@current_ic:	
  6295                           ; 4 bytes @ 0x32
  6296                           
  6297  0052                     ___flmul@b:	
  6298                           ; 1 bytes @ 0x32
  6299                           
  6300                           
  6301                           ; 4 bytes @ 0x32
  6302  0052                     	ds	1
  6303  0053                     LTC6804_rdcv@current_cell:	
  6304                           
  6305                           ; 1 bytes @ 0x33
  6306  0053                     	ds	1
  6307  0054                     LTC6804_rdcv@current_ic_1295:	
  6308                           
  6309                           ; 1 bytes @ 0x34
  6310  0054                     	ds	1
  6311  0055                     LTC6804_rdcv@current_cell_1296:	
  6312                           
  6313                           ; 1 bytes @ 0x35
  6314  0055                     	ds	1
  6315  0056                     LTC6804_rdcv@cell_reg:	
  6316  0056                     ___flmul@a:	
  6317                           ; 1 bytes @ 0x36
  6318                           
  6319                           
  6320                           ; 4 bytes @ 0x36
  6321  0056                     	ds	1
  6322  0057                     LTC6804_rdcv@data_counter:	
  6323                           
  6324                           ; 1 bytes @ 0x37
  6325  0057                     	ds	3
  6326  005A                     ??___flmul:	
  6327                           
  6328                           ; 1 bytes @ 0x3A
  6329  005A                     	ds	5
  6330  005F                     ___flmul@sign:	
  6331                           
  6332                           ; 1 bytes @ 0x3F
  6333  005F                     	ds	1
  6334  0060                     ___flmul@aexp:	
  6335                           
  6336                           ; 1 bytes @ 0x40
  6337  0060                     	ds	1
  6338  0061                     ___flmul@grs:	
  6339                           
  6340                           ; 4 bytes @ 0x41
  6341  0061                     	ds	4
  6342  0065                     ___flmul@bexp:	
  6343                           
  6344                           ; 1 bytes @ 0x45
  6345  0065                     	ds	1
  6346  0066                     ___flmul@prod:	
  6347                           
  6348                           ; 4 bytes @ 0x46
  6349  0066                     	ds	4
  6350  006A                     ___flmul@temp:	
  6351                           
  6352                           ; 2 bytes @ 0x4A
  6353  006A                     	ds	2
  6354  006C                     ?_measureVoltages:	
  6355  006C                     ?_fround:	
  6356                           ; 1 bytes @ 0x4C
  6357                           
  6358  006C                     ?_scale:	
  6359                           ; 4 bytes @ 0x4C
  6360                           
  6361  006C                     measureVoltages@numVoltages:	
  6362                           ; 4 bytes @ 0x4C
  6363                           
  6364                           
  6365                           ; 2 bytes @ 0x4C
  6366  006C                     	ds	4
  6367                           
  6368                           	psect	maintext
  6369  1D9E                     __pmaintext:	
  6370 ;;
  6371 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  6372 ;;
  6373 ;; *************** function _main *****************
  6374 ;; Defined at:
  6375 ;;		line 53 in file "main.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;		None
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : B1F/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6391 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6392 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6393 ;;Total ram usage:        1 bytes
  6394 ;; Hardware stack levels required when called:    8
  6395 ;; This function calls:
  6396 ;;		_avgBuff
  6397 ;;		_getCurrent
  6398 ;;		_getTemps
  6399 ;;		_i2cSwitch
  6400 ;;		_measureVoltages
  6401 ;;		_setup
  6402 ;;		_spiSwitch
  6403 ;;		_sumVoltages
  6404 ;;		_writeValuesToUart
  6405 ;; This function is called by:
  6406 ;;		Startup code after reset
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           
  6411                           ;psect for function _main
  6412  1D9E                     _main:	
  6413                           
  6414                           ;main.c: 55: setup();
  6415                           
  6416                           ;incstack = 0
  6417                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6418  1D9E  31AF  272E  319D   	fcall	_setup
  6419                           
  6420                           ;main.c: 56: LATDbits.LATD5 = 0;
  6421  1DA1  0022               	movlb	2	; select bank2
  6422  1DA2  128F               	bcf	15,5	;volatile
  6423                           
  6424                           ;main.c: 57: LATDbits.LATD4 = 0;
  6425  1DA3  120F               	bcf	15,4	;volatile
  6426  1DA4                     l101:	
  6427                           ;main.c: 66: while(1){
  6428                           
  6429                           
  6430                           ;main.c: 68: i2cSwitch();
  6431  1DA4  31AE  2600  319D   	fcall	_i2cSwitch
  6432                           
  6433                           ;main.c: 70: LATAbits.LATA5 ^= 1;
  6434  1DA7  0022               	movlb	2	; select bank2
  6435  1DA8  0E0C               	swapf	12,w	;volatile
  6436  1DA9  00E1               	movwf	??_main^(0+256)
  6437  1DAA  0C61               	rrf	??_main^(0+256),w
  6438  1DAB  3901               	andlw	1
  6439  1DAC  00E1               	movwf	??_main^(0+256)
  6440  1DAD  3001               	movlw	1
  6441  1DAE  06E1               	xorwf	??_main^(0+256),f
  6442  1DAF  0EE1               	swapf	??_main^(0+256),f
  6443  1DB0  0DE1               	rlf	??_main^(0+256),f
  6444  1DB1  080C               	movf	12,w	;volatile
  6445  1DB2  0661               	xorwf	??_main^(0+256),w
  6446  1DB3  39DF               	andlw	-33
  6447  1DB4  0661               	xorwf	??_main^(0+256),w
  6448  1DB5  008C               	movwf	12	;volatile
  6449                           
  6450                           ;main.c: 74: spiSwitch();
  6451  1DB6  31AE  261E  319D   	fcall	_spiSwitch
  6452                           
  6453                           ;main.c: 75: measureVoltages(voltages, 12);
  6454  1DB9  300C               	movlw	12
  6455  1DBA  0020               	movlb	0	; select bank0
  6456  1DBB  00EC               	movwf	measureVoltages@numVoltages
  6457  1DBC  3000               	movlw	0
  6458  1DBD  00ED               	movwf	measureVoltages@numVoltages+1
  6459  1DBE  3020               	movlw	(low (_voltages| (0+512)))& (0+255)
  6460  1DBF  319C  24CE  319D   	fcall	_measureVoltages
  6461                           
  6462                           ;main.c: 76: totalVoltage = sumVoltages(voltages, 12);
  6463  1DC2  300C               	movlw	12
  6464  1DC3  0021               	movlb	1	; select bank1
  6465  1DC4  00D5               	movwf	sumVoltages@numVoltages^(0+128)
  6466  1DC5  3000               	movlw	0
  6467  1DC6  00D6               	movwf	(sumVoltages@numVoltages^(0+128)+1)
  6468  1DC7  3020               	movlw	(low (_voltages| (0+512)))& (0+255)
  6469  1DC8  31A1  218B  319D   	fcall	_sumVoltages
  6470  1DCB  0021               	movlb	1	; select bank1
  6471  1DCC  0858               	movf	(?_sumVoltages+3)^(0+128),w
  6472  1DCD  0023               	movlb	3	; select bank3
  6473  1DCE  00D7               	movwf	(_totalVoltage+3)^(0+384)
  6474  1DCF  0021               	movlb	1	; select bank1
  6475  1DD0  0857               	movf	(?_sumVoltages+2)^(0+128),w
  6476  1DD1  0023               	movlb	3	; select bank3
  6477  1DD2  00D6               	movwf	(_totalVoltage+2)^(0+384)
  6478  1DD3  0021               	movlb	1	; select bank1
  6479  1DD4  0856               	movf	(?_sumVoltages+1)^(0+128),w
  6480  1DD5  0023               	movlb	3	; select bank3
  6481  1DD6  00D5               	movwf	(_totalVoltage+1)^(0+384)
  6482  1DD7  0021               	movlb	1	; select bank1
  6483  1DD8  0855               	movf	?_sumVoltages^(0+128),w
  6484  1DD9  0023               	movlb	3	; select bank3
  6485  1DDA  00D4               	movwf	_totalVoltage^(0+384)
  6486                           
  6487                           ;main.c: 81: highestTemp = getTemps(temps, 5);
  6488  1DDB  3005               	movlw	5
  6489  1DDC  0021               	movlb	1	; select bank1
  6490  1DDD  00C8               	movwf	getTemps@numTemps^(0+128)
  6491  1DDE  3000               	movlw	0
  6492  1DDF  00C9               	movwf	(getTemps@numTemps^(0+128)+1)
  6493  1DE0  30CA               	movlw	(low (_temps| (0+256)))& (0+255)
  6494  1DE1  31A4  2404  319D   	fcall	_getTemps
  6495  1DE4  0021               	movlb	1	; select bank1
  6496  1DE5  0849               	movf	(?_getTemps+1)^(0+128),w
  6497  1DE6  0023               	movlb	3	; select bank3
  6498  1DE7  00BF               	movwf	(_highestTemp+1)^(0+384)
  6499  1DE8  0021               	movlb	1	; select bank1
  6500  1DE9  0848               	movf	?_getTemps^(0+128),w
  6501  1DEA  0023               	movlb	3	; select bank3
  6502  1DEB  00BE               	movwf	_highestTemp^(0+384)
  6503                           
  6504                           ;main.c: 83: if(currentBool == 1){
  6505  1DEC  0340               	decf	_currentBool^(0+384),w
  6506  1DED  0441               	iorwf	(_currentBool+1)^(0+384),w
  6507  1DEE  1D03               	btfss	3,2
  6508  1DEF  2E3A               	goto	l7464
  6509                           
  6510                           ;main.c: 84: currentBuff[currentIndex] = getCurrent();
  6511  1DF0  31AF  27C2  319D   	fcall	_getCurrent
  6512  1DF3  0022               	movlb	2	; select bank2
  6513  1DF4  0866               	movf	_currentIndex^(0+256),w
  6514  1DF5  00E1               	movwf	??_main^(0+256)
  6515  1DF6  3001               	movlw	1
  6516  1DF7                     u10565:	
  6517  1DF7  35E1               	lslf	??_main^(0+256),f
  6518  1DF8  3EFF               	addlw	-1
  6519  1DF9  1D03               	skipz
  6520  1DFA  2DF7               	goto	u10565
  6521  1DFB  3561               	lslf	??_main^(0+256),w
  6522  1DFC  3E20               	addlw	(low (_currentBuff| (0+768)))& (0+255)
  6523  1DFD  0086               	movwf	6
  6524  1DFE  3003               	movlw	3	; select bank6/7
  6525  1DFF  0087               	movwf	7
  6526  1E00  0021               	movlb	1	; select bank1
  6527  1E01  0861               	movf	?_getCurrent^(0+128),w
  6528  1E02  3FC0               	movwi [0]fsr1
  6529  1E03  0862               	movf	(?_getCurrent+1)^(0+128),w
  6530  1E04  3FC1               	movwi [1]fsr1
  6531  1E05  0863               	movf	(?_getCurrent+2)^(0+128),w
  6532  1E06  3FC2               	movwi [2]fsr1
  6533  1E07  0864               	movf	(?_getCurrent+3)^(0+128),w
  6534  1E08  3FC3               	movwi [3]fsr1
  6535                           
  6536                           ;main.c: 85: currentIndex ++;
  6537  1E09  3001               	movlw	1
  6538  1E0A  0022               	movlb	2	; select bank2
  6539  1E0B  07E6               	addwf	_currentIndex^(0+256),f
  6540  1E0C  3000               	movlw	0
  6541  1E0D  3DE7               	addwfc	(_currentIndex+1)^(0+256),f
  6542                           
  6543                           ;main.c: 87: if(currentIndex >= 20){
  6544  1E0E  0867               	movf	(_currentIndex+1)^(0+256),w
  6545  1E0F  3A80               	xorlw	128
  6546  1E10  00E1               	movwf	??_main^(0+256)
  6547  1E11  3080               	movlw	128
  6548  1E12  0261               	subwf	??_main^(0+256),w
  6549  1E13  1D03               	skipz
  6550  1E14  2E17               	goto	u10575
  6551  1E15  3014               	movlw	20
  6552  1E16  0266               	subwf	_currentIndex^(0+256),w
  6553  1E17                     u10575:	
  6554  1E17  1C03               	skipc
  6555  1E18  2E37               	goto	l7462
  6556                           
  6557                           ;main.c: 88: current = avgBuff(currentBuff, currentIndex);
  6558  1E19  0022               	movlb	2	; select bank2
  6559  1E1A  0867               	movf	(_currentIndex+1)^(0+256),w
  6560  1E1B  0021               	movlb	1	; select bank1
  6561  1E1C  00D6               	movwf	(avgBuff@size+1)^(0+128)
  6562  1E1D  0022               	movlb	2	; select bank2
  6563  1E1E  0866               	movf	_currentIndex^(0+256),w
  6564  1E1F  0021               	movlb	1	; select bank1
  6565  1E20  00D5               	movwf	avgBuff@size^(0+128)
  6566  1E21  3020               	movlw	(low (_currentBuff| (0+768)))& (0+255)
  6567  1E22  31A4  2483  319D   	fcall	_avgBuff
  6568  1E25  0021               	movlb	1	; select bank1
  6569  1E26  0858               	movf	(?_avgBuff+3)^(0+128),w
  6570  1E27  0022               	movlb	2	; select bank2
  6571  1E28  00E5               	movwf	(_current+3)^(0+256)
  6572  1E29  0021               	movlb	1	; select bank1
  6573  1E2A  0857               	movf	(?_avgBuff+2)^(0+128),w
  6574  1E2B  0022               	movlb	2	; select bank2
  6575  1E2C  00E4               	movwf	(_current+2)^(0+256)
  6576  1E2D  0021               	movlb	1	; select bank1
  6577  1E2E  0856               	movf	(?_avgBuff+1)^(0+128),w
  6578  1E2F  0022               	movlb	2	; select bank2
  6579  1E30  00E3               	movwf	(_current+1)^(0+256)
  6580  1E31  0021               	movlb	1	; select bank1
  6581  1E32  0855               	movf	?_avgBuff^(0+128),w
  6582  1E33  0022               	movlb	2	; select bank2
  6583  1E34  00E2               	movwf	_current^(0+256)
  6584                           
  6585                           ;main.c: 89: currentIndex = 0;
  6586  1E35  01E6               	clrf	_currentIndex^(0+256)
  6587  1E36  01E7               	clrf	(_currentIndex+1)^(0+256)
  6588  1E37                     l7462:	
  6589                           
  6590                           ;main.c: 90: }
  6591                           ;main.c: 91: currentBool = 0;
  6592  1E37  0023               	movlb	3	; select bank3
  6593  1E38  01C0               	clrf	_currentBool^(0+384)
  6594  1E39  01C1               	clrf	(_currentBool+1)^(0+384)
  6595  1E3A                     l7464:	
  6596                           
  6597                           ;main.c: 92: }
  6598                           ;main.c: 93: if(uartBool == 1){
  6599  1E3A  0342               	decf	_uartBool^(0+384),w
  6600  1E3B  0443               	iorwf	(_uartBool+1)^(0+384),w
  6601  1E3C  1D03               	btfss	3,2
  6602  1E3D  2DA4               	goto	l101
  6603                           
  6604                           ;main.c: 94: writeValuesToUart(voltages, 12, totalVoltage, temps, 5, highestTemp, curren
      +                          t, 21);
  6605  1E3E  300C               	movlw	12
  6606  1E3F  0022               	movlb	2	; select bank2
  6607  1E40  00D0               	movwf	writeValuesToUart@voltageArrLength^(0+256)
  6608  1E41  3000               	movlw	0
  6609  1E42  00D1               	movwf	(writeValuesToUart@voltageArrLength^(0+256)+1)
  6610  1E43  0023               	movlb	3	; select bank3
  6611  1E44  0857               	movf	(_totalVoltage+3)^(0+384),w
  6612  1E45  0022               	movlb	2	; select bank2
  6613  1E46  00D5               	movwf	(writeValuesToUart@totalVoltage+3)^(0+256)
  6614  1E47  0023               	movlb	3	; select bank3
  6615  1E48  0856               	movf	(_totalVoltage+2)^(0+384),w
  6616  1E49  0022               	movlb	2	; select bank2
  6617  1E4A  00D4               	movwf	(writeValuesToUart@totalVoltage+2)^(0+256)
  6618  1E4B  0023               	movlb	3	; select bank3
  6619  1E4C  0855               	movf	(_totalVoltage+1)^(0+384),w
  6620  1E4D  0022               	movlb	2	; select bank2
  6621  1E4E  00D3               	movwf	(writeValuesToUart@totalVoltage+1)^(0+256)
  6622  1E4F  0023               	movlb	3	; select bank3
  6623  1E50  0854               	movf	_totalVoltage^(0+384),w
  6624  1E51  0022               	movlb	2	; select bank2
  6625  1E52  00D2               	movwf	writeValuesToUart@totalVoltage^(0+256)
  6626  1E53  30CA               	movlw	(low (_temps| (0+256)))& (0+255)
  6627  1E54  00E1               	movwf	??_main^(0+256)
  6628  1E55  0861               	movf	??_main^(0+256),w
  6629  1E56  00D6               	movwf	writeValuesToUart@temperatureArr^(0+256)
  6630  1E57  3005               	movlw	5
  6631  1E58  00D7               	movwf	writeValuesToUart@temperatureArrLength^(0+256)
  6632  1E59  3000               	movlw	0
  6633  1E5A  00D8               	movwf	(writeValuesToUart@temperatureArrLength^(0+256)+1)
  6634  1E5B  0023               	movlb	3	; select bank3
  6635  1E5C  083F               	movf	(_highestTemp+1)^(0+384),w
  6636  1E5D  0022               	movlb	2	; select bank2
  6637  1E5E  00DA               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+256)
  6638  1E5F  0023               	movlb	3	; select bank3
  6639  1E60  083E               	movf	_highestTemp^(0+384),w
  6640  1E61  0022               	movlb	2	; select bank2
  6641  1E62  00D9               	movwf	writeValuesToUart@temperatureHigh^(0+256)
  6642  1E63  0865               	movf	(_current+3)^(0+256),w
  6643  1E64  00DE               	movwf	(writeValuesToUart@current+3)^(0+256)
  6644  1E65  0864               	movf	(_current+2)^(0+256),w
  6645  1E66  00DD               	movwf	(writeValuesToUart@current+2)^(0+256)
  6646  1E67  0863               	movf	(_current+1)^(0+256),w
  6647  1E68  00DC               	movwf	(writeValuesToUart@current+1)^(0+256)
  6648  1E69  0862               	movf	_current^(0+256),w
  6649  1E6A  00DB               	movwf	writeValuesToUart@current^(0+256)
  6650  1E6B  3015               	movlw	21
  6651  1E6C  00DF               	movwf	writeValuesToUart@uartLines^(0+256)
  6652  1E6D  3000               	movlw	0
  6653  1E6E  00E0               	movwf	(writeValuesToUart@uartLines^(0+256)+1)
  6654  1E6F  3020               	movlw	(low (_voltages| (0+512)))& (0+255)
  6655  1E70  31AF  278A  319D   	fcall	_writeValuesToUart
  6656                           
  6657                           ;main.c: 95: uartBool = 0;
  6658  1E73  0023               	movlb	3	; select bank3
  6659  1E74  01C2               	clrf	_uartBool^(0+384)
  6660  1E75  01C3               	clrf	(_uartBool+1)^(0+384)
  6661  1E76  2DA4               	goto	l101
  6662  1E77                     __end_of_main:	
  6663                           
  6664                           	psect	text1
  6665  2F8A                     __ptext1:	
  6666 ;; *************** function _writeValuesToUart *****************
  6667 ;; Defined at:
  6668 ;;		line 11 in file "uart.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;  voltageArr      1    wreg     PTR float 
  6671 ;;		 -> voltages(48), 
  6672 ;;  voltageArrLe    2   48[BANK2 ] int 
  6673 ;;  totalVoltage    4   50[BANK2 ] float 
  6674 ;;  temperatureA    1   54[BANK2 ] PTR int 
  6675 ;;		 -> temps(10), 
  6676 ;;  temperatureA    2   55[BANK2 ] int 
  6677 ;;  temperatureH    2   57[BANK2 ] int 
  6678 ;;  current         4   59[BANK2 ] float 
  6679 ;;  uartLines       2   63[BANK2 ] int 
  6680 ;; Auto vars:     Size  Location     Type
  6681 ;;  voltageArr      1   79[BANK1 ] PTR float 
  6682 ;;		 -> voltages(48), 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      void 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6692 ;;      Params:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6693 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6695 ;;      Totals:         0       0       1      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6696 ;;Total ram usage:       18 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    7
  6699 ;; This function calls:
  6700 ;;		_clearScreen
  6701 ;;		_writeCurrent
  6702 ;;		_writeTemps
  6703 ;;		_writeVoltages
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;; This function uses a non-reentrant model
  6707 ;;
  6708                           
  6709                           
  6710                           ;psect for function _writeValuesToUart
  6711  2F8A                     _writeValuesToUart:	
  6712                           
  6713                           ;incstack = 0
  6714                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6715                           ;writeValuesToUart@voltageArr stored from wreg
  6716  2F8A  0021               	movlb	1	; select bank1
  6717  2F8B  00EF               	movwf	writeValuesToUart@voltageArr^(0+128)
  6718                           
  6719                           ;uart.c: 12: clearScreen(uartLines);
  6720  2F8C  0022               	movlb	2	; select bank2
  6721  2F8D  0860               	movf	(writeValuesToUart@uartLines+1)^(0+256),w
  6722  2F8E  0021               	movlb	1	; select bank1
  6723  2F8F  00EE               	movwf	(clearScreen@numLines+1)^(0+128)
  6724  2F90  0022               	movlb	2	; select bank2
  6725  2F91  085F               	movf	writeValuesToUart@uartLines^(0+256),w
  6726  2F92  0021               	movlb	1	; select bank1
  6727  2F93  00ED               	movwf	clearScreen@numLines^(0+128)
  6728  2F94  31A0  2031  31AF   	fcall	_clearScreen
  6729                           
  6730                           ;uart.c: 13: writeVoltages(voltageArr, voltageArrLength, totalVoltage);
  6731  2F97  0022               	movlb	2	; select bank2
  6732  2F98  0851               	movf	(writeValuesToUart@voltageArrLength+1)^(0+256),w
  6733  2F99  00BC               	movwf	(writeVoltages@length+1)^(0+256)
  6734  2F9A  0850               	movf	writeValuesToUart@voltageArrLength^(0+256),w
  6735  2F9B  00BB               	movwf	writeVoltages@length^(0+256)
  6736  2F9C  0855               	movf	(writeValuesToUart@totalVoltage+3)^(0+256),w
  6737  2F9D  00C0               	movwf	(writeVoltages@totalVoltage+3)^(0+256)
  6738  2F9E  0854               	movf	(writeValuesToUart@totalVoltage+2)^(0+256),w
  6739  2F9F  00BF               	movwf	(writeVoltages@totalVoltage+2)^(0+256)
  6740  2FA0  0853               	movf	(writeValuesToUart@totalVoltage+1)^(0+256),w
  6741  2FA1  00BE               	movwf	(writeVoltages@totalVoltage+1)^(0+256)
  6742  2FA2  0852               	movf	writeValuesToUart@totalVoltage^(0+256),w
  6743  2FA3  00BD               	movwf	writeVoltages@totalVoltage^(0+256)
  6744  2FA4  0021               	movlb	1	; select bank1
  6745  2FA5  086F               	movf	writeValuesToUart@voltageArr^(0+128),w
  6746  2FA6  3193  230D  31AF   	fcall	_writeVoltages
  6747                           
  6748                           ;uart.c: 14: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength);
  6749  2FA9  0022               	movlb	2	; select bank2
  6750  2FAA  085A               	movf	(writeValuesToUart@temperatureHigh+1)^(0+256),w
  6751  2FAB  00BC               	movwf	(writeTemps@highestTemp+1)^(0+256)
  6752  2FAC  0859               	movf	writeValuesToUart@temperatureHigh^(0+256),w
  6753  2FAD  00BB               	movwf	writeTemps@highestTemp^(0+256)
  6754  2FAE  0858               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+256),w
  6755  2FAF  00BE               	movwf	(writeTemps@numTemps+1)^(0+256)
  6756  2FB0  0857               	movf	writeValuesToUart@temperatureArrLength^(0+256),w
  6757  2FB1  00BD               	movwf	writeTemps@numTemps^(0+256)
  6758  2FB2  0856               	movf	writeValuesToUart@temperatureArr^(0+256),w
  6759  2FB3  31A3  232B  31AF   	fcall	_writeTemps
  6760                           
  6761                           ;uart.c: 15: writeCurrent(current);
  6762  2FB6  0022               	movlb	2	; select bank2
  6763  2FB7  085E               	movf	(writeValuesToUart@current+3)^(0+256),w
  6764  2FB8  00BE               	movwf	(writeCurrent@current+3)^(0+256)
  6765  2FB9  085D               	movf	(writeValuesToUart@current+2)^(0+256),w
  6766  2FBA  00BD               	movwf	(writeCurrent@current+2)^(0+256)
  6767  2FBB  085C               	movf	(writeValuesToUart@current+1)^(0+256),w
  6768  2FBC  00BC               	movwf	(writeCurrent@current+1)^(0+256)
  6769  2FBD  085B               	movf	writeValuesToUart@current^(0+256),w
  6770  2FBE  00BB               	movwf	writeCurrent@current^(0+256)
  6771  2FBF  31AF  270E         	fcall	_writeCurrent
  6772  2FC1  0008               	return
  6773  2FC2                     __end_of_writeValuesToUart:	
  6774                           
  6775                           	psect	text2
  6776  130D                     __ptext2:	
  6777 ;; *************** function _writeVoltages *****************
  6778 ;; Defined at:
  6779 ;;		line 18 in file "uart.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  volts           1    wreg     PTR float 
  6782 ;;		 -> voltages(48), 
  6783 ;;  length          2   27[BANK2 ] int 
  6784 ;;  totalVoltage    4   29[BANK2 ] float 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  volts           1   45[BANK2 ] PTR float 
  6787 ;;		 -> voltages(48), 
  6788 ;;  k               2   46[BANK2 ] int 
  6789 ;;  minCell         2   43[BANK2 ] int 
  6790 ;;  maxCell         2   41[BANK2 ] int 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;                  1    wreg      void 
  6793 ;; Registers used:
  6794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6800 ;;      Params:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6801 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6802 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6803 ;;      Totals:         0       0       0      21       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6804 ;;Total ram usage:       21 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    6
  6807 ;; This function calls:
  6808 ;;		___fladd
  6809 ;;		___flge
  6810 ;;		___flneg
  6811 ;;		_sprintf
  6812 ;;		_uartEnable
  6813 ;; This function is called by:
  6814 ;;		_writeValuesToUart
  6815 ;; This function uses a non-reentrant model
  6816 ;;
  6817                           
  6818                           
  6819                           ;psect for function _writeVoltages
  6820  130D                     _writeVoltages:	
  6821                           
  6822                           ;incstack = 0
  6823                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6824                           ;writeVoltages@volts stored from wreg
  6825  130D  0022               	movlb	2	; select bank2
  6826  130E  00CD               	movwf	writeVoltages@volts^(0+256)
  6827                           
  6828                           ;uart.c: 19: int maxCell = 0;
  6829  130F  01C9               	clrf	writeVoltages@maxCell^(0+256)
  6830  1310  01CA               	clrf	(writeVoltages@maxCell+1)^(0+256)
  6831                           
  6832                           ;uart.c: 20: int minCell = 0;
  6833  1311  01CB               	clrf	writeVoltages@minCell^(0+256)
  6834  1312  01CC               	clrf	(writeVoltages@minCell+1)^(0+256)
  6835                           
  6836                           ;uart.c: 21: for(int k = 0; k < length; k++){
  6837  1313  01CE               	clrf	writeVoltages@k^(0+256)
  6838  1314  01CF               	clrf	(writeVoltages@k+1)^(0+256)
  6839  1315                     l239:	
  6840  1315  084F               	movf	(writeVoltages@k+1)^(0+256),w
  6841  1316  3A80               	xorlw	128
  6842  1317  00C1               	movwf	??_writeVoltages^(0+256)
  6843  1318  083C               	movf	(writeVoltages@length+1)^(0+256),w
  6844  1319  3A80               	xorlw	128
  6845  131A  0241               	subwf	??_writeVoltages^(0+256),w
  6846  131B  1D03               	skipz
  6847  131C  2B1F               	goto	u10215
  6848  131D  083B               	movf	writeVoltages@length^(0+256),w
  6849  131E  024E               	subwf	writeVoltages@k^(0+256),w
  6850  131F                     u10215:	
  6851  131F  1803               	btfsc	3,0
  6852  1320  2BC7               	goto	l7238
  6853                           
  6854                           ;uart.c: 22: if(volts[k]<volts[minCell]){
  6855  1321  0022               	movlb	2	; select bank2
  6856  1322  084E               	movf	writeVoltages@k^(0+256),w
  6857  1323  00C1               	movwf	??_writeVoltages^(0+256)
  6858  1324  3001               	movlw	1
  6859  1325                     u10135:	
  6860  1325  35C1               	lslf	??_writeVoltages^(0+256),f
  6861  1326  3EFF               	addlw	-1
  6862  1327  1D03               	skipz
  6863  1328  2B25               	goto	u10135
  6864  1329  3541               	lslf	??_writeVoltages^(0+256),w
  6865  132A  074D               	addwf	writeVoltages@volts^(0+256),w
  6866  132B  00C2               	movwf	(??_writeVoltages+1)^(0+256)
  6867  132C  0842               	movf	(??_writeVoltages+1)^(0+256),w
  6868  132D  0086               	movwf	6
  6869  132E  3002               	movlw	2	; select bank4/5
  6870  132F  0087               	movwf	7
  6871  1330  3F40               	moviw [0]fsr1
  6872  1331  00F2               	movwf	___flge@ff1
  6873  1332  3F41               	moviw [1]fsr1
  6874  1333  00F3               	movwf	___flge@ff1+1
  6875  1334  3F42               	moviw [2]fsr1
  6876  1335  00F4               	movwf	___flge@ff1+2
  6877  1336  3F43               	moviw [3]fsr1
  6878  1337  00F5               	movwf	___flge@ff1+3
  6879  1338  084B               	movf	writeVoltages@minCell^(0+256),w
  6880  1339  00C3               	movwf	(??_writeVoltages+2)^(0+256)
  6881  133A  3001               	movlw	1
  6882  133B                     u10145:	
  6883  133B  35C3               	lslf	(??_writeVoltages+2)^(0+256),f
  6884  133C  3EFF               	addlw	-1
  6885  133D  1D03               	skipz
  6886  133E  2B3B               	goto	u10145
  6887  133F  3543               	lslf	(??_writeVoltages+2)^(0+256),w
  6888  1340  074D               	addwf	writeVoltages@volts^(0+256),w
  6889  1341  00C4               	movwf	(??_writeVoltages+3)^(0+256)
  6890  1342  0844               	movf	(??_writeVoltages+3)^(0+256),w
  6891  1343  0086               	movwf	6
  6892  1344  3002               	movlw	2	; select bank4/5
  6893  1345  0087               	movwf	7
  6894  1346  3F40               	moviw [0]fsr1
  6895  1347  00F6               	movwf	___flge@ff2
  6896  1348  3F41               	moviw [1]fsr1
  6897  1349  00F7               	movwf	___flge@ff2+1
  6898  134A  3F42               	moviw [2]fsr1
  6899  134B  00F8               	movwf	___flge@ff2+2
  6900  134C  3F43               	moviw [3]fsr1
  6901  134D  00F9               	movwf	___flge@ff2+3
  6902  134E  31A6  26B0  3193   	fcall	___flge
  6903  1351  1803               	btfsc	3,0
  6904  1352  2B59               	goto	l7228
  6905                           
  6906                           ;uart.c: 23: minCell = k;
  6907  1353  0022               	movlb	2	; select bank2
  6908  1354  084F               	movf	(writeVoltages@k+1)^(0+256),w
  6909  1355  00CC               	movwf	(writeVoltages@minCell+1)^(0+256)
  6910  1356  084E               	movf	writeVoltages@k^(0+256),w
  6911  1357  00CB               	movwf	writeVoltages@minCell^(0+256)
  6912                           
  6913                           ;uart.c: 24: }else if(volts[k] > volts[maxCell]){
  6914  1358  2B90               	goto	l7232
  6915  1359                     l7228:	
  6916  1359  0022               	movlb	2	; select bank2
  6917  135A  0849               	movf	writeVoltages@maxCell^(0+256),w
  6918  135B  00C1               	movwf	??_writeVoltages^(0+256)
  6919  135C  3001               	movlw	1
  6920  135D                     u10165:	
  6921  135D  35C1               	lslf	??_writeVoltages^(0+256),f
  6922  135E  3EFF               	addlw	-1
  6923  135F  1D03               	skipz
  6924  1360  2B5D               	goto	u10165
  6925  1361  3541               	lslf	??_writeVoltages^(0+256),w
  6926  1362  074D               	addwf	writeVoltages@volts^(0+256),w
  6927  1363  00C2               	movwf	(??_writeVoltages+1)^(0+256)
  6928  1364  0842               	movf	(??_writeVoltages+1)^(0+256),w
  6929  1365  0086               	movwf	6
  6930  1366  3002               	movlw	2	; select bank4/5
  6931  1367  0087               	movwf	7
  6932  1368  3F40               	moviw [0]fsr1
  6933  1369  00F2               	movwf	___flge@ff1
  6934  136A  3F41               	moviw [1]fsr1
  6935  136B  00F3               	movwf	___flge@ff1+1
  6936  136C  3F42               	moviw [2]fsr1
  6937  136D  00F4               	movwf	___flge@ff1+2
  6938  136E  3F43               	moviw [3]fsr1
  6939  136F  00F5               	movwf	___flge@ff1+3
  6940  1370  084E               	movf	writeVoltages@k^(0+256),w
  6941  1371  00C3               	movwf	(??_writeVoltages+2)^(0+256)
  6942  1372  3001               	movlw	1
  6943  1373                     u10175:	
  6944  1373  35C3               	lslf	(??_writeVoltages+2)^(0+256),f
  6945  1374  3EFF               	addlw	-1
  6946  1375  1D03               	skipz
  6947  1376  2B73               	goto	u10175
  6948  1377  3543               	lslf	(??_writeVoltages+2)^(0+256),w
  6949  1378  074D               	addwf	writeVoltages@volts^(0+256),w
  6950  1379  00C4               	movwf	(??_writeVoltages+3)^(0+256)
  6951  137A  0844               	movf	(??_writeVoltages+3)^(0+256),w
  6952  137B  0086               	movwf	6
  6953  137C  3002               	movlw	2	; select bank4/5
  6954  137D  0087               	movwf	7
  6955  137E  3F40               	moviw [0]fsr1
  6956  137F  00F6               	movwf	___flge@ff2
  6957  1380  3F41               	moviw [1]fsr1
  6958  1381  00F7               	movwf	___flge@ff2+1
  6959  1382  3F42               	moviw [2]fsr1
  6960  1383  00F8               	movwf	___flge@ff2+2
  6961  1384  3F43               	moviw [3]fsr1
  6962  1385  00F9               	movwf	___flge@ff2+3
  6963  1386  31A6  26B0  3193   	fcall	___flge
  6964  1389  1803               	btfsc	3,0
  6965  138A  2B90               	goto	l7232
  6966                           
  6967                           ;uart.c: 25: maxCell = k;
  6968  138B  0022               	movlb	2	; select bank2
  6969  138C  084F               	movf	(writeVoltages@k+1)^(0+256),w
  6970  138D  00CA               	movwf	(writeVoltages@maxCell+1)^(0+256)
  6971  138E  084E               	movf	writeVoltages@k^(0+256),w
  6972  138F  00C9               	movwf	writeVoltages@maxCell^(0+256)
  6973  1390                     l7232:	
  6974                           
  6975                           ;uart.c: 26: }
  6976                           ;uart.c: 28: sprintf(&str[0], "V%i = %0.4fV\n\r", k+1, volts[k]);
  6977  1390  3036               	movlw	low (STR_1| (0+32768))
  6978  1391  0021               	movlb	1	; select bank1
  6979  1392  00DD               	movwf	sprintf@f^(0+128)
  6980  1393  30B1               	movlw	high (STR_1| (0+32768))
  6981  1394  00DE               	movwf	(sprintf@f^(0+128)+1)
  6982  1395  0022               	movlb	2	; select bank2
  6983  1396  084E               	movf	writeVoltages@k^(0+256),w
  6984  1397  3E01               	addlw	1
  6985  1398  0021               	movlb	1	; select bank1
  6986  1399  00DF               	movwf	(?_sprintf^(0+128)+2)
  6987  139A  3000               	movlw	0
  6988  139B  0022               	movlb	2	; select bank2
  6989  139C  3D4F               	addwfc	(writeVoltages@k+1)^(0+256),w
  6990  139D  0021               	movlb	1	; select bank1
  6991  139E  00E0               	movwf	((?_sprintf+1)^(0+128)+2)
  6992  139F  0022               	movlb	2	; select bank2
  6993  13A0  084E               	movf	writeVoltages@k^(0+256),w
  6994  13A1  00C1               	movwf	??_writeVoltages^(0+256)
  6995  13A2  3001               	movlw	1
  6996  13A3                     u10195:	
  6997  13A3  35C1               	lslf	??_writeVoltages^(0+256),f
  6998  13A4  3EFF               	addlw	-1
  6999  13A5  1D03               	skipz
  7000  13A6  2BA3               	goto	u10195
  7001  13A7  3541               	lslf	??_writeVoltages^(0+256),w
  7002  13A8  074D               	addwf	writeVoltages@volts^(0+256),w
  7003  13A9  00C2               	movwf	(??_writeVoltages+1)^(0+256)
  7004  13AA  0842               	movf	(??_writeVoltages+1)^(0+256),w
  7005  13AB  0086               	movwf	6
  7006  13AC  3002               	movlw	2	; select bank4/5
  7007  13AD  0087               	movwf	7
  7008  13AE  3F40               	moviw [0]fsr1
  7009  13AF  0021               	movlb	1	; select bank1
  7010  13B0  00E1               	movwf	(?_sprintf^(0+128)+4)
  7011  13B1  3F41               	moviw [1]fsr1
  7012  13B2  00E2               	movwf	((?_sprintf+1)^(0+128)+4)
  7013  13B3  3F42               	moviw [2]fsr1
  7014  13B4  00E3               	movwf	((?_sprintf+2)^(0+128)+4)
  7015  13B5  3F43               	moviw [3]fsr1
  7016  13B6  00E4               	movwf	((?_sprintf+3)^(0+128)+4)
  7017  13B7  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7018  13B8  3188  200B  3193   	fcall	_sprintf
  7019                           
  7020                           ;uart.c: 29: uartEnable();
  7021  13BB  3187  27FD  3193   	fcall	_uartEnable
  7022  13BE                     l244:	
  7023                           ;uart.c: 30: while(PIE1bits.TXIE);
  7024                           
  7025  13BE  0021               	movlb	1	; select bank1
  7026  13BF  1A11               	btfsc	17,4	;volatile
  7027  13C0  2BBE               	goto	l244
  7028  13C1  3001               	movlw	1
  7029  13C2  0022               	movlb	2	; select bank2
  7030  13C3  07CE               	addwf	writeVoltages@k^(0+256),f
  7031  13C4  3000               	movlw	0
  7032  13C5  3DCF               	addwfc	(writeVoltages@k+1)^(0+256),f
  7033  13C6  2B15               	goto	l239
  7034  13C7                     l7238:	
  7035                           
  7036                           ;uart.c: 31: }
  7037                           ;uart.c: 33: sprintf(&str[0], "Pack Voltage: %0.4fV\n\r", totalVoltage);
  7038  13C7  30E9               	movlw	low (STR_2| (0+32768))
  7039  13C8  0021               	movlb	1	; select bank1
  7040  13C9  00DD               	movwf	sprintf@f^(0+128)
  7041  13CA  30B0               	movlw	high (STR_2| (0+32768))
  7042  13CB  00DE               	movwf	(sprintf@f^(0+128)+1)
  7043  13CC  0022               	movlb	2	; select bank2
  7044  13CD  0840               	movf	(writeVoltages@totalVoltage+3)^(0+256),w
  7045  13CE  0021               	movlb	1	; select bank1
  7046  13CF  00E2               	movwf	((?_sprintf+3)^(0+128)+2)
  7047  13D0  0022               	movlb	2	; select bank2
  7048  13D1  083F               	movf	(writeVoltages@totalVoltage+2)^(0+256),w
  7049  13D2  0021               	movlb	1	; select bank1
  7050  13D3  00E1               	movwf	((?_sprintf+2)^(0+128)+2)
  7051  13D4  0022               	movlb	2	; select bank2
  7052  13D5  083E               	movf	(writeVoltages@totalVoltage+1)^(0+256),w
  7053  13D6  0021               	movlb	1	; select bank1
  7054  13D7  00E0               	movwf	((?_sprintf+1)^(0+128)+2)
  7055  13D8  0022               	movlb	2	; select bank2
  7056  13D9  083D               	movf	writeVoltages@totalVoltage^(0+256),w
  7057  13DA  0021               	movlb	1	; select bank1
  7058  13DB  00DF               	movwf	(?_sprintf^(0+128)+2)
  7059  13DC  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7060  13DD  3188  200B  3193   	fcall	_sprintf
  7061                           
  7062                           ;uart.c: 34: uartEnable();
  7063  13E0  3187  27FD  3193   	fcall	_uartEnable
  7064  13E3                     l248:	
  7065                           ;uart.c: 35: while(PIE1bits.TXIE);
  7066                           
  7067  13E3  0021               	movlb	1	; select bank1
  7068  13E4  1A11               	btfsc	17,4	;volatile
  7069  13E5  2BE3               	goto	l248
  7070                           
  7071                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7072  13E6  0022               	movlb	2	; select bank2
  7073  13E7  0849               	movf	writeVoltages@maxCell^(0+256),w
  7074  13E8  00C1               	movwf	??_writeVoltages^(0+256)
  7075  13E9  3001               	movlw	1
  7076  13EA                     u10235:	
  7077  13EA  35C1               	lslf	??_writeVoltages^(0+256),f
  7078  13EB  3EFF               	addlw	-1
  7079  13EC  1D03               	skipz
  7080  13ED  2BEA               	goto	u10235
  7081  13EE  3541               	lslf	??_writeVoltages^(0+256),w
  7082  13EF  074D               	addwf	writeVoltages@volts^(0+256),w
  7083  13F0  00C2               	movwf	(??_writeVoltages+1)^(0+256)
  7084  13F1  0842               	movf	(??_writeVoltages+1)^(0+256),w
  7085  13F2  0086               	movwf	6
  7086  13F3  3002               	movlw	2	; select bank4/5
  7087  13F4  0087               	movwf	7
  7088  13F5  3F40               	moviw [0]fsr1
  7089  13F6  0021               	movlb	1	; select bank1
  7090  13F7  00BD               	movwf	___fladd@b^(0+128)
  7091  13F8  3F41               	moviw [1]fsr1
  7092  13F9  00BE               	movwf	(___fladd@b+1)^(0+128)
  7093  13FA  3F42               	moviw [2]fsr1
  7094  13FB  00BF               	movwf	(___fladd@b+2)^(0+128)
  7095  13FC  3F43               	moviw [3]fsr1
  7096  13FD  00C0               	movwf	(___fladd@b+3)^(0+128)
  7097  13FE  0022               	movlb	2	; select bank2
  7098  13FF  084B               	movf	writeVoltages@minCell^(0+256),w
  7099  1400  00C3               	movwf	(??_writeVoltages+2)^(0+256)
  7100  1401  3001               	movlw	1
  7101  1402                     u10245:	
  7102  1402  35C3               	lslf	(??_writeVoltages+2)^(0+256),f
  7103  1403  3EFF               	addlw	-1
  7104  1404  1D03               	skipz
  7105  1405  2C02               	goto	u10245
  7106  1406  3543               	lslf	(??_writeVoltages+2)^(0+256),w
  7107  1407  074D               	addwf	writeVoltages@volts^(0+256),w
  7108  1408  00C4               	movwf	(??_writeVoltages+3)^(0+256)
  7109  1409  0844               	movf	(??_writeVoltages+3)^(0+256),w
  7110  140A  0086               	movwf	6
  7111  140B  3002               	movlw	2	; select bank4/5
  7112  140C  0087               	movwf	7
  7113  140D  3F40               	moviw [0]fsr1
  7114  140E  00F2               	movwf	___flneg@f1
  7115  140F  3F41               	moviw [1]fsr1
  7116  1410  00F3               	movwf	___flneg@f1+1
  7117  1411  3F42               	moviw [2]fsr1
  7118  1412  00F4               	movwf	___flneg@f1+2
  7119  1413  3F43               	moviw [3]fsr1
  7120  1414  00F5               	movwf	___flneg@f1+3
  7121  1415  319C  2400  3193   	fcall	___flneg
  7122  1418  0875               	movf	?___flneg+3,w
  7123  1419  0021               	movlb	1	; select bank1
  7124  141A  00C4               	movwf	(___fladd@a+3)^(0+128)
  7125  141B  0874               	movf	?___flneg+2,w
  7126  141C  00C3               	movwf	(___fladd@a+2)^(0+128)
  7127  141D  0873               	movf	?___flneg+1,w
  7128  141E  00C2               	movwf	(___fladd@a+1)^(0+128)
  7129  141F  0872               	movf	?___flneg,w
  7130  1420  00C1               	movwf	___fladd@a^(0+128)
  7131  1421  3186  2601  3193   	fcall	___fladd
  7132  1424  0021               	movlb	1	; select bank1
  7133  1425  0840               	movf	(?___fladd+3)^(0+128),w
  7134  1426  0022               	movlb	2	; select bank2
  7135  1427  00C8               	movwf	(_writeVoltages$2111+3)^(0+256)
  7136  1428  0021               	movlb	1	; select bank1
  7137  1429  083F               	movf	(?___fladd+2)^(0+128),w
  7138  142A  0022               	movlb	2	; select bank2
  7139  142B  00C7               	movwf	(_writeVoltages$2111+2)^(0+256)
  7140  142C  0021               	movlb	1	; select bank1
  7141  142D  083E               	movf	(?___fladd+1)^(0+128),w
  7142  142E  0022               	movlb	2	; select bank2
  7143  142F  00C6               	movwf	(_writeVoltages$2111+1)^(0+256)
  7144  1430  0021               	movlb	1	; select bank1
  7145  1431  083D               	movf	?___fladd^(0+128),w
  7146  1432  0022               	movlb	2	; select bank2
  7147  1433  00C5               	movwf	_writeVoltages$2111^(0+256)
  7148                           
  7149                           ;uart.c: 37: sprintf(&str[0], "Max Difference = V%i & V%i @ %0.4fV\n\r", minCell+1, maxC
      +                          ell+1, (volts[maxCell] - volts[minCell]));
  7150  1434  30C3               	movlw	low (STR_3| (0+32768))
  7151  1435  0021               	movlb	1	; select bank1
  7152  1436  00DD               	movwf	sprintf@f^(0+128)
  7153  1437  30B0               	movlw	high (STR_3| (0+32768))
  7154  1438  00DE               	movwf	(sprintf@f^(0+128)+1)
  7155  1439  0022               	movlb	2	; select bank2
  7156  143A  084B               	movf	writeVoltages@minCell^(0+256),w
  7157  143B  3E01               	addlw	1
  7158  143C  0021               	movlb	1	; select bank1
  7159  143D  00DF               	movwf	(?_sprintf^(0+128)+2)
  7160  143E  3000               	movlw	0
  7161  143F  0022               	movlb	2	; select bank2
  7162  1440  3D4C               	addwfc	(writeVoltages@minCell+1)^(0+256),w
  7163  1441  0021               	movlb	1	; select bank1
  7164  1442  00E0               	movwf	((?_sprintf+1)^(0+128)+2)
  7165  1443  0022               	movlb	2	; select bank2
  7166  1444  0849               	movf	writeVoltages@maxCell^(0+256),w
  7167  1445  3E01               	addlw	1
  7168  1446  0021               	movlb	1	; select bank1
  7169  1447  00E1               	movwf	(?_sprintf^(0+128)+4)
  7170  1448  3000               	movlw	0
  7171  1449  0022               	movlb	2	; select bank2
  7172  144A  3D4A               	addwfc	(writeVoltages@maxCell+1)^(0+256),w
  7173  144B  0021               	movlb	1	; select bank1
  7174  144C  00E2               	movwf	((?_sprintf+1)^(0+128)+4)
  7175  144D  0022               	movlb	2	; select bank2
  7176  144E  0848               	movf	(_writeVoltages$2111+3)^(0+256),w
  7177  144F  0021               	movlb	1	; select bank1
  7178  1450  00E6               	movwf	((?_sprintf+3)^(0+128)+6)
  7179  1451  0022               	movlb	2	; select bank2
  7180  1452  0847               	movf	(_writeVoltages$2111+2)^(0+256),w
  7181  1453  0021               	movlb	1	; select bank1
  7182  1454  00E5               	movwf	((?_sprintf+2)^(0+128)+6)
  7183  1455  0022               	movlb	2	; select bank2
  7184  1456  0846               	movf	(_writeVoltages$2111+1)^(0+256),w
  7185  1457  0021               	movlb	1	; select bank1
  7186  1458  00E4               	movwf	((?_sprintf+1)^(0+128)+6)
  7187  1459  0022               	movlb	2	; select bank2
  7188  145A  0845               	movf	_writeVoltages$2111^(0+256),w
  7189  145B  0021               	movlb	1	; select bank1
  7190  145C  00E3               	movwf	(?_sprintf^(0+128)+6)
  7191  145D  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7192  145E  3188  200B  3193   	fcall	_sprintf
  7193                           
  7194                           ;uart.c: 38: uartEnable();
  7195  1461  3187  27FD  3193   	fcall	_uartEnable
  7196  1464                     l251:	
  7197                           ;uart.c: 39: while(PIE1bits.TXIE);
  7198                           
  7199  1464  0021               	movlb	1	; select bank1
  7200  1465  1E11               	btfss	17,4	;volatile
  7201  1466  0008               	return
  7202  1467  2C64               	goto	l251
  7203  1468                     __end_of_writeVoltages:	
  7204                           
  7205                           	psect	text3
  7206  232B                     __ptext3:	
  7207 ;; *************** function _writeTemps *****************
  7208 ;; Defined at:
  7209 ;;		line 48 in file "uart.c"
  7210 ;; Parameters:    Size  Location     Type
  7211 ;;  temps           1    wreg     PTR int 
  7212 ;;		 -> temps(10), 
  7213 ;;  highestTemp     2   27[BANK2 ] int 
  7214 ;;  numTemps        2   29[BANK2 ] int 
  7215 ;; Auto vars:     Size  Location     Type
  7216 ;;  temps           1   31[BANK2 ] PTR int 
  7217 ;;		 -> temps(10), 
  7218 ;;  k               2   32[BANK2 ] int 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;                  1    wreg      void 
  7221 ;; Registers used:
  7222 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7228 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7229 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7230 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7231 ;;      Totals:         0       0       1       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7232 ;;Total ram usage:        8 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    6
  7235 ;; This function calls:
  7236 ;;		_sprintf
  7237 ;;		_uartEnable
  7238 ;; This function is called by:
  7239 ;;		_writeValuesToUart
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           
  7243                           
  7244                           ;psect for function _writeTemps
  7245  232B                     _writeTemps:	
  7246                           
  7247                           ;incstack = 0
  7248                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7249                           ;writeTemps@temps stored from wreg
  7250  232B  0022               	movlb	2	; select bank2
  7251  232C  00BF               	movwf	writeTemps@temps^(0+256)
  7252                           
  7253                           ;uart.c: 49: for(int k = 0; k<numTemps; k++){
  7254  232D  01C0               	clrf	writeTemps@k^(0+256)
  7255  232E  01C1               	clrf	(writeTemps@k+1)^(0+256)
  7256  232F                     l263:	
  7257  232F  0841               	movf	(writeTemps@k+1)^(0+256),w
  7258  2330  3A80               	xorlw	128
  7259  2331  0021               	movlb	1	; select bank1
  7260  2332  00ED               	movwf	??_writeTemps^(0+128)
  7261  2333  0022               	movlb	2	; select bank2
  7262  2334  083E               	movf	(writeTemps@numTemps+1)^(0+256),w
  7263  2335  3A80               	xorlw	128
  7264  2336  0021               	movlb	1	; select bank1
  7265  2337  026D               	subwf	??_writeTemps^(0+128),w
  7266  2338  1D03               	skipz
  7267  2339  2B3D               	goto	u10275
  7268  233A  0022               	movlb	2	; select bank2
  7269  233B  083D               	movf	writeTemps@numTemps^(0+256),w
  7270  233C  0240               	subwf	writeTemps@k^(0+256),w
  7271  233D                     u10275:	
  7272  233D  1803               	btfsc	3,0
  7273  233E  2B6D               	goto	l7256
  7274                           
  7275                           ;uart.c: 50: sprintf(&str[n], "Temp%i = %iC\n\r", k+1, temps[k]);
  7276  233F  3027               	movlw	low (STR_5| (0+32768))
  7277  2340  0021               	movlb	1	; select bank1
  7278  2341  00DD               	movwf	sprintf@f^(0+128)
  7279  2342  30B1               	movlw	high (STR_5| (0+32768))
  7280  2343  00DE               	movwf	(sprintf@f^(0+128)+1)
  7281  2344  0022               	movlb	2	; select bank2
  7282  2345  0840               	movf	writeTemps@k^(0+256),w
  7283  2346  3E01               	addlw	1
  7284  2347  0021               	movlb	1	; select bank1
  7285  2348  00DF               	movwf	(?_sprintf^(0+128)+2)
  7286  2349  3000               	movlw	0
  7287  234A  0022               	movlb	2	; select bank2
  7288  234B  3D41               	addwfc	(writeTemps@k+1)^(0+256),w
  7289  234C  0021               	movlb	1	; select bank1
  7290  234D  00E0               	movwf	((?_sprintf+1)^(0+128)+2)
  7291  234E  0022               	movlb	2	; select bank2
  7292  234F  3540               	lslf	writeTemps@k^(0+256),w
  7293  2350  073F               	addwf	writeTemps@temps^(0+256),w
  7294  2351  0021               	movlb	1	; select bank1
  7295  2352  00ED               	movwf	??_writeTemps^(0+128)
  7296  2353  086D               	movf	??_writeTemps^(0+128),w
  7297  2354  0086               	movwf	6
  7298  2355  3001               	movlw	1	; select bank2/3
  7299  2356  0087               	movwf	7
  7300  2357  3F40               	moviw [0]fsr1
  7301  2358  00E1               	movwf	(?_sprintf^(0+128)+4)
  7302  2359  3F41               	moviw [1]fsr1
  7303  235A  00E2               	movwf	((?_sprintf+1)^(0+128)+4)
  7304  235B  0023               	movlb	3	; select bank3
  7305  235C  0848               	movf	_n^(0+384),w
  7306  235D  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
  7307  235E  3188  200B  31A3   	fcall	_sprintf
  7308                           
  7309                           ;uart.c: 51: uartEnable();
  7310  2361  3187  27FD  31A3   	fcall	_uartEnable
  7311  2364                     l265:	
  7312                           ;uart.c: 52: while(PIE1bits.TXIE);
  7313                           
  7314  2364  0021               	movlb	1	; select bank1
  7315  2365  1A11               	btfsc	17,4	;volatile
  7316  2366  2B64               	goto	l265
  7317  2367  3001               	movlw	1
  7318  2368  0022               	movlb	2	; select bank2
  7319  2369  07C0               	addwf	writeTemps@k^(0+256),f
  7320  236A  3000               	movlw	0
  7321  236B  3DC1               	addwfc	(writeTemps@k+1)^(0+256),f
  7322  236C  2B2F               	goto	l263
  7323  236D                     l7256:	
  7324                           
  7325                           ;uart.c: 53: }
  7326                           ;uart.c: 56: sprintf(&str[0], "Highest Temp: %iC\n\r", highestTemp);
  7327  236D  3000               	movlw	low (STR_6| (0+32768))
  7328  236E  0021               	movlb	1	; select bank1
  7329  236F  00DD               	movwf	sprintf@f^(0+128)
  7330  2370  30B1               	movlw	high (STR_6| (0+32768))
  7331  2371  00DE               	movwf	(sprintf@f^(0+128)+1)
  7332  2372  0022               	movlb	2	; select bank2
  7333  2373  083C               	movf	(writeTemps@highestTemp+1)^(0+256),w
  7334  2374  0021               	movlb	1	; select bank1
  7335  2375  00E0               	movwf	((?_sprintf+1)^(0+128)+2)
  7336  2376  0022               	movlb	2	; select bank2
  7337  2377  083B               	movf	writeTemps@highestTemp^(0+256),w
  7338  2378  0021               	movlb	1	; select bank1
  7339  2379  00DF               	movwf	(?_sprintf^(0+128)+2)
  7340  237A  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7341  237B  3188  200B  31A3   	fcall	_sprintf
  7342                           
  7343                           ;uart.c: 57: uartEnable();
  7344  237E  3187  27FD  31A3   	fcall	_uartEnable
  7345  2381                     l269:	
  7346                           ;uart.c: 58: while(PIE1bits.TXIE);
  7347                           
  7348  2381  0021               	movlb	1	; select bank1
  7349  2382  1E11               	btfss	17,4	;volatile
  7350  2383  0008               	return
  7351  2384  2B81               	goto	l269
  7352  2385                     __end_of_writeTemps:	
  7353                           
  7354                           	psect	text4
  7355  2F0E                     __ptext4:	
  7356 ;; *************** function _writeCurrent *****************
  7357 ;; Defined at:
  7358 ;;		line 43 in file "uart.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  current         4   27[BANK2 ] float 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;		None
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  1    wreg      void 
  7365 ;; Registers used:
  7366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7372 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7375 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7376 ;;Total ram usage:        4 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:    6
  7379 ;; This function calls:
  7380 ;;		_sprintf
  7381 ;;		_uartEnable
  7382 ;; This function is called by:
  7383 ;;		_writeValuesToUart
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           
  7388                           ;psect for function _writeCurrent
  7389  2F0E                     _writeCurrent:	
  7390                           
  7391                           ;uart.c: 44: sprintf(&str[0], "current = %0.4fA\n\r", current);
  7392                           
  7393                           ;incstack = 0
  7394                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7395  2F0E  3014               	movlw	low (STR_4| (0+32768))
  7396  2F0F  0021               	movlb	1	; select bank1
  7397  2F10  00DD               	movwf	sprintf@f^(0+128)
  7398  2F11  30B1               	movlw	high (STR_4| (0+32768))
  7399  2F12  00DE               	movwf	(sprintf@f^(0+128)+1)
  7400  2F13  0022               	movlb	2	; select bank2
  7401  2F14  083E               	movf	(writeCurrent@current+3)^(0+256),w
  7402  2F15  0021               	movlb	1	; select bank1
  7403  2F16  00E2               	movwf	((?_sprintf+3)^(0+128)+2)
  7404  2F17  0022               	movlb	2	; select bank2
  7405  2F18  083D               	movf	(writeCurrent@current+2)^(0+256),w
  7406  2F19  0021               	movlb	1	; select bank1
  7407  2F1A  00E1               	movwf	((?_sprintf+2)^(0+128)+2)
  7408  2F1B  0022               	movlb	2	; select bank2
  7409  2F1C  083C               	movf	(writeCurrent@current+1)^(0+256),w
  7410  2F1D  0021               	movlb	1	; select bank1
  7411  2F1E  00E0               	movwf	((?_sprintf+1)^(0+128)+2)
  7412  2F1F  0022               	movlb	2	; select bank2
  7413  2F20  083B               	movf	writeCurrent@current^(0+256),w
  7414  2F21  0021               	movlb	1	; select bank1
  7415  2F22  00DF               	movwf	(?_sprintf^(0+128)+2)
  7416  2F23  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7417  2F24  3188  200B  31AF   	fcall	_sprintf
  7418                           
  7419                           ;uart.c: 45: uartEnable();
  7420  2F27  3187  27FD  31AF   	fcall	_uartEnable
  7421  2F2A                     l257:	
  7422                           ;uart.c: 46: while(PIE1bits.TXIE);
  7423                           
  7424  2F2A  0021               	movlb	1	; select bank1
  7425  2F2B  1E11               	btfss	17,4	;volatile
  7426  2F2C  0008               	return
  7427  2F2D  2F2A               	goto	l257
  7428  2F2E                     __end_of_writeCurrent:	
  7429                           
  7430                           	psect	text5
  7431  2031                     __ptext5:	
  7432 ;; *************** function _clearScreen *****************
  7433 ;; Defined at:
  7434 ;;		line 61 in file "uart.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  numLines        2   77[BANK1 ] int 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  j               2   30[BANK2 ] int 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1    wreg      void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7448 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7449 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7450 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7451 ;;      Totals:         0       0       2       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7452 ;;Total ram usage:        7 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:    6
  7455 ;; This function calls:
  7456 ;;		_sprintf
  7457 ;;		_uartEnable
  7458 ;; This function is called by:
  7459 ;;		_writeValuesToUart
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           
  7464                           ;psect for function _clearScreen
  7465  2031                     _clearScreen:	
  7466                           
  7467                           ;uart.c: 62: int j = 0;
  7468                           
  7469                           ;incstack = 0
  7470                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7471  2031  0022               	movlb	2	; select bank2
  7472  2032  01BE               	clrf	clearScreen@j^(0+256)
  7473  2033  01BF               	clrf	(clearScreen@j+1)^(0+256)
  7474                           
  7475                           ;uart.c: 64: for(j = 0; j < numLines-1; j++){
  7476  2034  01BE               	clrf	clearScreen@j^(0+256)
  7477  2035  01BF               	clrf	(clearScreen@j+1)^(0+256)
  7478  2036                     l7216:	
  7479  2036  0021               	movlb	1	; select bank1
  7480  2037  086D               	movf	clearScreen@numLines^(0+128),w
  7481  2038  3EFF               	addlw	255
  7482  2039  0022               	movlb	2	; select bank2
  7483  203A  00BB               	movwf	??_clearScreen^(0+256)
  7484  203B  30FF               	movlw	255
  7485  203C  0021               	movlb	1	; select bank1
  7486  203D  3D6E               	addwfc	(clearScreen@numLines+1)^(0+128),w
  7487  203E  0022               	movlb	2	; select bank2
  7488  203F  00BC               	movwf	(??_clearScreen+1)^(0+256)
  7489  2040  083F               	movf	(clearScreen@j+1)^(0+256),w
  7490  2041  3A80               	xorlw	128
  7491  2042  00BD               	movwf	(??_clearScreen+2)^(0+256)
  7492  2043  083C               	movf	(??_clearScreen+1)^(0+256),w
  7493  2044  3A80               	xorlw	128
  7494  2045  023D               	subwf	(??_clearScreen+2)^(0+256),w
  7495  2046  1D03               	skipz
  7496  2047  284A               	goto	u10115
  7497  2048  083B               	movf	??_clearScreen^(0+256),w
  7498  2049  023E               	subwf	clearScreen@j^(0+256),w
  7499  204A                     u10115:	
  7500  204A  1803               	btfsc	3,0
  7501  204B  2861               	goto	l7218
  7502                           
  7503                           ;uart.c: 65: sprintf(&str[0], "\33[2K \033[A");
  7504  204C  3050               	movlw	low (STR_7| (0+32768))
  7505  204D  0021               	movlb	1	; select bank1
  7506  204E  00DD               	movwf	sprintf@f^(0+128)
  7507  204F  30B1               	movlw	high (STR_7| (0+32768))
  7508  2050  00DE               	movwf	(sprintf@f^(0+128)+1)
  7509  2051  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7510  2052  3188  200B  31A0   	fcall	_sprintf
  7511                           
  7512                           ;uart.c: 66: uartEnable();
  7513  2055  3187  27FD  31A0   	fcall	_uartEnable
  7514  2058                     l277:	
  7515                           ;uart.c: 67: while(PIE1bits.TXIE);
  7516                           
  7517  2058  0021               	movlb	1	; select bank1
  7518  2059  1A11               	btfsc	17,4	;volatile
  7519  205A  2858               	goto	l277
  7520  205B  3001               	movlw	1
  7521  205C  0022               	movlb	2	; select bank2
  7522  205D  07BE               	addwf	clearScreen@j^(0+256),f
  7523  205E  3000               	movlw	0
  7524  205F  3DBF               	addwfc	(clearScreen@j+1)^(0+256),f
  7525  2060  2836               	goto	l7216
  7526  2061                     l7218:	
  7527                           
  7528                           ;uart.c: 68: }
  7529                           ;uart.c: 70: sprintf(&str[0], "\33[2K \033[A \r");
  7530  2061  3045               	movlw	low (STR_8| (0+32768))
  7531  2062  0021               	movlb	1	; select bank1
  7532  2063  00DD               	movwf	sprintf@f^(0+128)
  7533  2064  30B1               	movlw	high (STR_8| (0+32768))
  7534  2065  00DE               	movwf	(sprintf@f^(0+128)+1)
  7535  2066  30A0               	movlw	(low (_str| (0+512)))& (0+255)
  7536  2067  3188  200B  31A0   	fcall	_sprintf
  7537                           
  7538                           ;uart.c: 71: uartEnable();
  7539  206A  3187  27FD  31A0   	fcall	_uartEnable
  7540  206D                     l281:	
  7541                           ;uart.c: 72: while(PIE1bits.TXIE);
  7542                           
  7543  206D  0021               	movlb	1	; select bank1
  7544  206E  1E11               	btfss	17,4	;volatile
  7545  206F  0008               	return
  7546  2070  286D               	goto	l281
  7547  2071                     __end_of_clearScreen:	
  7548                           
  7549                           	psect	text6
  7550  07FD                     __ptext6:	
  7551 ;; *************** function _uartEnable *****************
  7552 ;; Defined at:
  7553 ;;		line 75 in file "uart.c"
  7554 ;; Parameters:    Size  Location     Type
  7555 ;;		None
  7556 ;; Auto vars:     Size  Location     Type
  7557 ;;		None
  7558 ;; Return value:  Size  Location     Type
  7559 ;;                  1    wreg      void 
  7560 ;; Registers used:
  7561 ;;		None
  7562 ;; Tracked objects:
  7563 ;;		On entry : 0/0
  7564 ;;		On exit  : 0/0
  7565 ;;		Unchanged: 0/0
  7566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7571 ;;Total ram usage:        0 bytes
  7572 ;; Hardware stack levels used:    1
  7573 ;; Hardware stack levels required when called:    2
  7574 ;; This function calls:
  7575 ;;		Nothing
  7576 ;; This function is called by:
  7577 ;;		_writeVoltages
  7578 ;;		_writeCurrent
  7579 ;;		_writeTemps
  7580 ;;		_clearScreen
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           
  7585                           ;psect for function _uartEnable
  7586  07FD                     _uartEnable:	
  7587                           
  7588                           ;uart.c: 76: PIE1bits.TXIE = 1;
  7589                           
  7590                           ;incstack = 0
  7591                           ; Regs used in _uartEnable: []
  7592  07FD  0021               	movlb	1	; select bank1
  7593  07FE  1611               	bsf	17,4	;volatile
  7594  07FF  0008               	return
  7595  0800                     __end_of_uartEnable:	
  7596                           
  7597                           	psect	text7
  7598  080B                     __ptext7:	
  7599 ;; *************** function _sprintf *****************
  7600 ;; Defined at:
  7601 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  7602 ;; Parameters:    Size  Location     Type
  7603 ;;  sp              1    wreg     PTR unsigned char 
  7604 ;;		 -> str(50), 
  7605 ;;  f               2   61[BANK1 ] PTR const unsigned char 
  7606 ;;		 -> STR_8(11), STR_7(9), STR_6(20), STR_5(15), 
  7607 ;;		 -> STR_4(19), STR_3(38), STR_2(23), STR_1(15), 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  sp              1   25[BANK2 ] PTR unsigned char 
  7610 ;;		 -> str(50), 
  7611 ;;  fval            4   19[BANK2 ] PTR unsigned char 
  7612 ;;  val             4    9[BANK2 ] unsigned long 
  7613 ;;  tmpval          4    5[BANK2 ] struct .
  7614 ;;  prec            2   23[BANK2 ] int 
  7615 ;;  width           2   17[BANK2 ] int 
  7616 ;;  flag            2   15[BANK2 ] unsigned short 
  7617 ;;  exp             2   13[BANK2 ] int 
  7618 ;;  cp              2    0        PTR const unsigned char 
  7619 ;;  len             2    0        unsigned int 
  7620 ;;  c               1   26[BANK2 ] char 
  7621 ;;  ap              1    4[BANK2 ] PTR void [1]
  7622 ;;		 -> ?_sprintf(2), 
  7623 ;;  d               1    0        unsigned char 
  7624 ;; Return value:  Size  Location     Type
  7625 ;;                  2   61[BANK1 ] int 
  7626 ;; Registers used:
  7627 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7628 ;; Tracked objects:
  7629 ;;		On entry : 0/0
  7630 ;;		On exit  : 0/0
  7631 ;;		Unchanged: 0/0
  7632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7633 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7634 ;;      Locals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7635 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7636 ;;      Totals:         0       0      16      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7637 ;;Total ram usage:       43 bytes
  7638 ;; Hardware stack levels used:    1
  7639 ;; Hardware stack levels required when called:    5
  7640 ;; This function calls:
  7641 ;;		___awdiv
  7642 ;;		___fladd
  7643 ;;		___flge
  7644 ;;		___flmul
  7645 ;;		___flneg
  7646 ;;		___flsub
  7647 ;;		___fltol
  7648 ;;		___lldiv
  7649 ;;		___llmod
  7650 ;;		___wmul
  7651 ;;		___xxtofl
  7652 ;;		__div_to_l_
  7653 ;;		__tdiv_to_l_
  7654 ;;		_fround
  7655 ;;		_isdigit
  7656 ;;		_scale
  7657 ;; This function is called by:
  7658 ;;		_writeVoltages
  7659 ;;		_writeCurrent
  7660 ;;		_writeTemps
  7661 ;;		_clearScreen
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           
  7666                           ;psect for function _sprintf
  7667  080B                     _sprintf:	
  7668                           
  7669                           ;incstack = 0
  7670                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7671                           ;sprintf@sp stored from wreg
  7672  080B  0022               	movlb	2	; select bank2
  7673  080C  00B9               	movwf	sprintf@sp^(0+256)
  7674                           
  7675                           ;doprnt.c: 494: va_list ap;
  7676                           ;doprnt.c: 499: signed char c;
  7677                           ;doprnt.c: 501: int width;
  7678                           ;doprnt.c: 504: int prec;
  7679                           ;doprnt.c: 508: unsigned short flag;
  7680                           ;doprnt.c: 515: char d;
  7681                           ;doprnt.c: 516: double fval;
  7682                           ;doprnt.c: 517: int exp;
  7683                           ;doprnt.c: 523: union {
  7684                           ;doprnt.c: 524: unsigned long vd;
  7685                           ;doprnt.c: 525: double integ;
  7686                           ;doprnt.c: 526: } tmpval;
  7687                           ;doprnt.c: 528: unsigned long val;
  7688                           ;doprnt.c: 529: unsigned len;
  7689                           ;doprnt.c: 530: const char * cp;
  7690                           ;doprnt.c: 533: *ap = __va_start();
  7691  080D  30DF               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7692  080E  0021               	movlb	1	; select bank1
  7693  080F  00E7               	movwf	??_sprintf^(0+128)
  7694  0810  0867               	movf	??_sprintf^(0+128),w
  7695  0811  0022               	movlb	2	; select bank2
  7696  0812  00A4               	movwf	sprintf@ap^(0+256)
  7697  0813                     l7132:	
  7698                           ;doprnt.c: 536: while(c = *f++) {
  7699                           
  7700  0813  0021               	movlb	1	; select bank1
  7701  0814  085E               	movf	(sprintf@f+1)^(0+128),w
  7702  0815  00E8               	movwf	(??_sprintf^(0+128)+1)
  7703  0816  085D               	movf	sprintf@f^(0+128),w
  7704  0817  00E7               	movwf	??_sprintf^(0+128)
  7705  0818  0ADD               	incf	sprintf@f^(0+128),f
  7706  0819  1903               	skipnz
  7707  081A  0ADE               	incf	(sprintf@f+1)^(0+128),f
  7708  081B  0867               	movf	??_sprintf^(0+128),w
  7709  081C  0084               	movwf	4
  7710  081D  0868               	movf	(??_sprintf+1)^(0+128),w
  7711  081E  0085               	movwf	5
  7712  081F  0800               	movf	0,w	;code access
  7713  0820  00E9               	movwf	(??_sprintf+2)^(0+128)
  7714  0821  0869               	movf	(??_sprintf+2)^(0+128),w
  7715  0822  0022               	movlb	2	; select bank2
  7716  0823  00BA               	movwf	sprintf@c^(0+256)
  7717  0824  083A               	movf	sprintf@c^(0+256),w
  7718  0825  1903               	btfsc	3,2
  7719  0826  2FFA               	goto	l7134
  7720                           
  7721                           ;doprnt.c: 538: if(c != '%')
  7722  0827  3025               	movlw	37
  7723  0828  063A               	xorwf	sprintf@c^(0+256),w
  7724  0829  1903               	btfsc	3,2
  7725  082A  283C               	goto	l6822
  7726                           
  7727                           ;doprnt.c: 540: {
  7728                           ;doprnt.c: 541: ((*sp++ = (c)));
  7729  082B  083A               	movf	sprintf@c^(0+256),w
  7730  082C  0021               	movlb	1	; select bank1
  7731  082D  00E7               	movwf	??_sprintf^(0+128)
  7732  082E  0022               	movlb	2	; select bank2
  7733  082F  0839               	movf	sprintf@sp^(0+256),w
  7734  0830  0086               	movwf	6
  7735  0831  3002               	movlw	2	; select bank4/5
  7736  0832  0087               	movwf	7
  7737  0833  0021               	movlb	1	; select bank1
  7738  0834  0867               	movf	??_sprintf^(0+128),w
  7739  0835  0081               	movwf	1
  7740  0836  3001               	movlw	1
  7741  0837  00E7               	movwf	??_sprintf^(0+128)
  7742  0838  0867               	movf	??_sprintf^(0+128),w
  7743  0839  0022               	movlb	2	; select bank2
  7744  083A  07B9               	addwf	sprintf@sp^(0+256),f
  7745                           
  7746                           ;doprnt.c: 542: continue;
  7747  083B  2813               	goto	l7132
  7748  083C                     l6822:	
  7749                           
  7750                           ;doprnt.c: 543: }
  7751                           ;doprnt.c: 546: width = 0;
  7752  083C  01B1               	clrf	sprintf@width^(0+256)
  7753  083D  01B2               	clrf	(sprintf@width+1)^(0+256)
  7754                           
  7755                           ;doprnt.c: 548: flag = 0;
  7756  083E  01AF               	clrf	sprintf@flag^(0+256)
  7757  083F  01B0               	clrf	(sprintf@flag+1)^(0+256)
  7758                           
  7759                           ;doprnt.c: 551: switch(*f) {
  7760                           
  7761                           ;doprnt.c: 550: for(;;) {
  7762  0840  2848               	goto	l6828
  7763  0841                     l766:	
  7764                           ;doprnt.c: 579: case '0':
  7765                           
  7766                           
  7767                           ;doprnt.c: 580: flag |= 0x04;
  7768  0841  0022               	movlb	2	; select bank2
  7769  0842  152F               	bsf	sprintf@flag^(0+256),2
  7770                           
  7771                           ;doprnt.c: 581: f++;
  7772  0843  3001               	movlw	1
  7773  0844  0021               	movlb	1	; select bank1
  7774  0845  07DD               	addwf	sprintf@f^(0+128),f
  7775  0846  3000               	movlw	0
  7776  0847  3DDE               	addwfc	(sprintf@f+1)^(0+128),f
  7777  0848                     l6828:	
  7778                           ;doprnt.c: 584: }
  7779                           
  7780                           ;doprnt.c: 582: continue;
  7781                           
  7782  0848  0021               	movlb	1	; select bank1
  7783  0849  085D               	movf	sprintf@f^(0+128),w
  7784  084A  0084               	movwf	4
  7785  084B  085E               	movf	(sprintf@f+1)^(0+128),w
  7786  084C  0085               	movwf	5
  7787  084D  0800               	movf	0,w	;code access
  7788                           
  7789                           ; Switch size 1, requested type "space"
  7790                           ; Number of cases is 1, Range of values is 48 to 48
  7791                           ; switch strategies available:
  7792                           ; Name         Instructions Cycles
  7793                           ; simple_byte            4     3 (average)
  7794                           ; direct_byte           11     9 (fixed)
  7795                           ; jumptable            263     9 (fixed)
  7796                           ;	Chosen strategy is simple_byte
  7797  084E  3A30               	xorlw	48	; case 48
  7798  084F  1903               	skipnz
  7799  0850  2841               	goto	l766
  7800  0851  2852               	goto	l6830
  7801  0852                     l6830:	
  7802                           ;doprnt.c: 586: }
  7803                           
  7804                           ;doprnt.c: 585: break;
  7805                           
  7806                           
  7807                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7808  0852  085D               	movf	sprintf@f^(0+128),w
  7809  0853  0084               	movwf	4
  7810  0854  085E               	movf	(sprintf@f+1)^(0+128),w
  7811  0855  0085               	movwf	5
  7812  0856  0800               	movf	0,w	;code access
  7813  0857  31AE  263F  3188   	fcall	_isdigit
  7814  085A  1C03               	btfss	3,0
  7815  085B  2892               	goto	l6842
  7816                           
  7817                           ;doprnt.c: 598: width = 0;
  7818  085C  0022               	movlb	2	; select bank2
  7819  085D  01B1               	clrf	sprintf@width^(0+256)
  7820  085E  01B2               	clrf	(sprintf@width+1)^(0+256)
  7821  085F                     l6834:	
  7822                           ;doprnt.c: 599: do {
  7823                           
  7824                           
  7825                           ;doprnt.c: 600: width *= 10;
  7826  085F  300A               	movlw	10
  7827  0860  00F2               	movwf	___wmul@multiplier
  7828  0861  3000               	movlw	0
  7829  0862  00F3               	movwf	___wmul@multiplier+1
  7830  0863  0022               	movlb	2	; select bank2
  7831  0864  0832               	movf	(sprintf@width+1)^(0+256),w
  7832  0865  00F5               	movwf	___wmul@multiplicand+1
  7833  0866  0831               	movf	sprintf@width^(0+256),w
  7834  0867  00F4               	movwf	___wmul@multiplicand
  7835  0868  31AE  2696  3188   	fcall	___wmul
  7836  086B  0873               	movf	?___wmul+1,w
  7837  086C  0022               	movlb	2	; select bank2
  7838  086D  00B2               	movwf	(sprintf@width+1)^(0+256)
  7839  086E  0872               	movf	?___wmul,w
  7840  086F  00B1               	movwf	sprintf@width^(0+256)
  7841                           
  7842                           ;doprnt.c: 601: width += *f++ - '0';
  7843  0870  0021               	movlb	1	; select bank1
  7844  0871  085D               	movf	sprintf@f^(0+128),w
  7845  0872  0084               	movwf	4
  7846  0873  085E               	movf	(sprintf@f+1)^(0+128),w
  7847  0874  0085               	movwf	5
  7848  0875  0800               	movf	0,w	;code access
  7849  0876  3ED0               	addlw	208
  7850  0877  00E7               	movwf	??_sprintf^(0+128)
  7851  0878  30FF               	movlw	255
  7852  0879  1803               	skipnc
  7853  087A  3000               	movlw	0
  7854  087B  00E8               	movwf	(??_sprintf^(0+128)+1)
  7855  087C  0867               	movf	??_sprintf^(0+128),w
  7856  087D  0022               	movlb	2	; select bank2
  7857  087E  07B1               	addwf	sprintf@width^(0+256),f
  7858  087F  0021               	movlb	1	; select bank1
  7859  0880  0868               	movf	(??_sprintf+1)^(0+128),w
  7860  0881  0022               	movlb	2	; select bank2
  7861  0882  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  7862  0883  3001               	movlw	1
  7863  0884  0021               	movlb	1	; select bank1
  7864  0885  07DD               	addwf	sprintf@f^(0+128),f
  7865  0886  3000               	movlw	0
  7866  0887  3DDE               	addwfc	(sprintf@f+1)^(0+128),f
  7867                           
  7868                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7869  0888  085D               	movf	sprintf@f^(0+128),w
  7870  0889  0084               	movwf	4
  7871  088A  085E               	movf	(sprintf@f+1)^(0+128),w
  7872  088B  0085               	movwf	5
  7873  088C  0800               	movf	0,w	;code access
  7874  088D  31AE  263F  3188   	fcall	_isdigit
  7875  0890  1803               	btfsc	3,0
  7876  0891  285F               	goto	l6834
  7877  0892                     l6842:	
  7878                           
  7879                           ;doprnt.c: 608: }
  7880                           ;doprnt.c: 611: if(*f == '.') {
  7881  0892  0021               	movlb	1	; select bank1
  7882  0893  085D               	movf	sprintf@f^(0+128),w
  7883  0894  0084               	movwf	4
  7884  0895  085E               	movf	(sprintf@f+1)^(0+128),w
  7885  0896  0085               	movwf	5
  7886  0897  0012               	moviw fsr0++
  7887  0898  3A2E               	xorlw	46
  7888  0899  1D03               	btfss	3,2
  7889  089A  28DA               	goto	l6856
  7890                           
  7891                           ;doprnt.c: 612: flag |= 0x4000;
  7892  089B  0022               	movlb	2	; select bank2
  7893  089C  1730               	bsf	(sprintf@flag^(0+256)+1),6
  7894                           
  7895                           ;doprnt.c: 613: f++;
  7896  089D  3001               	movlw	1
  7897  089E  0021               	movlb	1	; select bank1
  7898  089F  07DD               	addwf	sprintf@f^(0+128),f
  7899  08A0  3000               	movlw	0
  7900  08A1  3DDE               	addwfc	(sprintf@f+1)^(0+128),f
  7901                           
  7902                           ;doprnt.c: 620: {
  7903                           ;doprnt.c: 621: prec = 0;
  7904  08A2  0022               	movlb	2	; select bank2
  7905  08A3  01B7               	clrf	sprintf@prec^(0+256)
  7906  08A4  01B8               	clrf	(sprintf@prec+1)^(0+256)
  7907  08A5                     l6854:	
  7908                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  7909                           
  7910  08A5  0021               	movlb	1	; select bank1
  7911  08A6  085D               	movf	sprintf@f^(0+128),w
  7912  08A7  0084               	movwf	4
  7913  08A8  085E               	movf	(sprintf@f+1)^(0+128),w
  7914  08A9  0085               	movwf	5
  7915  08AA  0800               	movf	0,w	;code access
  7916  08AB  31AE  263F  3188   	fcall	_isdigit
  7917  08AE  1C03               	btfss	3,0
  7918  08AF  28E1               	goto	l6862
  7919                           
  7920                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  7921  08B0  0021               	movlb	1	; select bank1
  7922  08B1  085D               	movf	sprintf@f^(0+128),w
  7923  08B2  0084               	movwf	4
  7924  08B3  085E               	movf	(sprintf@f+1)^(0+128),w
  7925  08B4  0085               	movwf	5
  7926  08B5  0800               	movf	0,w	;code access
  7927  08B6  00E7               	movwf	??_sprintf^(0+128)
  7928  08B7  01E8               	clrf	(??_sprintf^(0+128)+1)
  7929  08B8  0022               	movlb	2	; select bank2
  7930  08B9  0838               	movf	(sprintf@prec+1)^(0+256),w
  7931  08BA  00F3               	movwf	___wmul@multiplier+1
  7932  08BB  0837               	movf	sprintf@prec^(0+256),w
  7933  08BC  00F2               	movwf	___wmul@multiplier
  7934  08BD  300A               	movlw	10
  7935  08BE  00F4               	movwf	___wmul@multiplicand
  7936  08BF  3000               	movlw	0
  7937  08C0  00F5               	movwf	___wmul@multiplicand+1
  7938  08C1  31AE  2696  3188   	fcall	___wmul
  7939  08C4  0021               	movlb	1	; select bank1
  7940  08C5  0867               	movf	??_sprintf^(0+128),w
  7941  08C6  0772               	addwf	?___wmul,w
  7942  08C7  00E9               	movwf	(??_sprintf+2)^(0+128)
  7943  08C8  0868               	movf	(??_sprintf+1)^(0+128),w
  7944  08C9  3D73               	addwfc	?___wmul+1,w
  7945  08CA  00EA               	movwf	(??_sprintf+3)^(0+128)
  7946  08CB  0869               	movf	(??_sprintf+2)^(0+128),w
  7947  08CC  3ED0               	addlw	208
  7948  08CD  0022               	movlb	2	; select bank2
  7949  08CE  00B7               	movwf	sprintf@prec^(0+256)
  7950  08CF  30FF               	movlw	255
  7951  08D0  0021               	movlb	1	; select bank1
  7952  08D1  3D6A               	addwfc	(??_sprintf+3)^(0+128),w
  7953  08D2  0022               	movlb	2	; select bank2
  7954  08D3  00B8               	movwf	(sprintf@prec+1)^(0+256)
  7955  08D4  3001               	movlw	1
  7956  08D5  0021               	movlb	1	; select bank1
  7957  08D6  07DD               	addwf	sprintf@f^(0+128),f
  7958  08D7  3000               	movlw	0
  7959  08D8  3DDE               	addwfc	(sprintf@f+1)^(0+128),f
  7960  08D9  28A5               	goto	l6854
  7961  08DA                     l6856:	
  7962                           ;doprnt.c: 624: }
  7963                           ;doprnt.c: 625: } else {
  7964                           
  7965                           
  7966                           ;doprnt.c: 626: prec = 0;
  7967  08DA  0022               	movlb	2	; select bank2
  7968  08DB  01B7               	clrf	sprintf@prec^(0+256)
  7969  08DC  01B8               	clrf	(sprintf@prec+1)^(0+256)
  7970                           
  7971                           ;doprnt.c: 628: flag |= 0x1000;
  7972  08DD  1630               	bsf	(sprintf@flag^(0+256)+1),4
  7973                           
  7974                           ;doprnt.c: 630: }
  7975                           ;doprnt.c: 635: switch(c = *f++) {
  7976  08DE  28E1               	goto	l6862
  7977  08DF                     l781:	
  7978                           ;doprnt.c: 662: case 'f':
  7979                           
  7980                           ;doprnt.c: 638: goto alldone;
  7981                           
  7982                           ;doprnt.c: 637: case 0:
  7983                           
  7984                           
  7985                           ;doprnt.c: 663: flag |= 0x400;
  7986  08DF  1530               	bsf	(sprintf@flag^(0+256)+1),2
  7987                           
  7988                           ;doprnt.c: 698: case 'i':
  7989                           ;doprnt.c: 699: break;
  7990                           
  7991                           ;doprnt.c: 697: case 'd':
  7992                           
  7993                           ;doprnt.c: 664: break;
  7994  08E0  28FD               	goto	l6864
  7995  08E1                     l6862:	
  7996                           ;doprnt.c: 822: }
  7997                           
  7998                           ;doprnt.c: 813: continue;
  7999                           
  8000                           ;doprnt.c: 802: default:
  8001                           
  8002  08E1  0021               	movlb	1	; select bank1
  8003  08E2  085E               	movf	(sprintf@f+1)^(0+128),w
  8004  08E3  00E8               	movwf	(??_sprintf^(0+128)+1)
  8005  08E4  085D               	movf	sprintf@f^(0+128),w
  8006  08E5  00E7               	movwf	??_sprintf^(0+128)
  8007  08E6  0ADD               	incf	sprintf@f^(0+128),f
  8008  08E7  1903               	skipnz
  8009  08E8  0ADE               	incf	(sprintf@f+1)^(0+128),f
  8010  08E9  0867               	movf	??_sprintf^(0+128),w
  8011  08EA  0084               	movwf	4
  8012  08EB  0868               	movf	(??_sprintf+1)^(0+128),w
  8013  08EC  0085               	movwf	5
  8014  08ED  0800               	movf	0,w	;code access
  8015  08EE  0022               	movlb	2	; select bank2
  8016  08EF  00BA               	movwf	sprintf@c^(0+256)
  8017                           
  8018                           ; Switch size 1, requested type "space"
  8019                           ; Number of cases is 4, Range of values is 0 to 105
  8020                           ; switch strategies available:
  8021                           ; Name         Instructions Cycles
  8022                           ; simple_byte           13     7 (average)
  8023                           ; direct_byte          218     6 (fixed)
  8024                           ; jumptable            260     6 (fixed)
  8025                           ;	Chosen strategy is simple_byte
  8026  08F0  3A00               	xorlw	0	; case 0
  8027  08F1  1903               	skipnz
  8028  08F2  2FFA               	goto	l7134
  8029  08F3  3A64               	xorlw	100	; case 100
  8030  08F4  1903               	skipnz
  8031  08F5  28FD               	goto	l6864
  8032  08F6  3A02               	xorlw	2	; case 102
  8033  08F7  1903               	skipnz
  8034  08F8  28DF               	goto	l781
  8035  08F9  3A0F               	xorlw	15	; case 105
  8036  08FA  1903               	skipnz
  8037  08FB  28FD               	goto	l6864
  8038  08FC  2813               	goto	l7132
  8039  08FD                     l6864:	
  8040                           
  8041                           ;doprnt.c: 825: if(flag & (0x700)) {
  8042  08FD  3000               	movlw	0
  8043  08FE  052F               	andwf	sprintf@flag^(0+256),w
  8044  08FF  0021               	movlb	1	; select bank1
  8045  0900  00E7               	movwf	??_sprintf^(0+128)
  8046  0901  3007               	movlw	7
  8047  0902  0022               	movlb	2	; select bank2
  8048  0903  0530               	andwf	(sprintf@flag+1)^(0+256),w
  8049  0904  0021               	movlb	1	; select bank1
  8050  0905  00E8               	movwf	(??_sprintf+1)^(0+128)
  8051  0906  0867               	movf	??_sprintf^(0+128),w
  8052  0907  0468               	iorwf	(??_sprintf^(0+128)+1),w
  8053  0908  1903               	btfsc	3,2
  8054  0909  2E34               	goto	l7040
  8055                           
  8056                           ;doprnt.c: 827: if(flag & 0x1000)
  8057  090A  0022               	movlb	2	; select bank2
  8058  090B  1E30               	btfss	(sprintf@flag+1)^(0+256),4
  8059  090C  2911               	goto	l6870
  8060                           
  8061                           ;doprnt.c: 829: prec = 6;
  8062  090D  3006               	movlw	6
  8063  090E  00B7               	movwf	sprintf@prec^(0+256)
  8064  090F  3000               	movlw	0
  8065  0910  00B8               	movwf	(sprintf@prec^(0+256)+1)
  8066  0911                     l6870:	
  8067                           
  8068                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8069  0911  0824               	movf	sprintf@ap^(0+256),w
  8070  0912  0086               	movwf	6
  8071  0913  0187               	clrf	7
  8072  0914  3F40               	moviw [0]fsr1
  8073  0915  00B3               	movwf	sprintf@fval^(0+256)
  8074  0916  3F41               	moviw [1]fsr1
  8075  0917  00B4               	movwf	(sprintf@fval+1)^(0+256)
  8076  0918  3F42               	moviw [2]fsr1
  8077  0919  00B5               	movwf	(sprintf@fval+2)^(0+256)
  8078  091A  3F43               	moviw [3]fsr1
  8079  091B  00B6               	movwf	(sprintf@fval+3)^(0+256)
  8080  091C  3004               	movlw	4
  8081  091D  0021               	movlb	1	; select bank1
  8082  091E  00E7               	movwf	??_sprintf^(0+128)
  8083  091F  0867               	movf	??_sprintf^(0+128),w
  8084  0920  0022               	movlb	2	; select bank2
  8085  0921  07A4               	addwf	sprintf@ap^(0+256),f
  8086                           
  8087                           ;doprnt.c: 831: if(fval < 0.0) {
  8088  0922  0836               	movf	(sprintf@fval+3)^(0+256),w
  8089  0923  00F5               	movwf	___flge@ff1+3
  8090  0924  0835               	movf	(sprintf@fval+2)^(0+256),w
  8091  0925  00F4               	movwf	___flge@ff1+2
  8092  0926  0834               	movf	(sprintf@fval+1)^(0+256),w
  8093  0927  00F3               	movwf	___flge@ff1+1
  8094  0928  0833               	movf	sprintf@fval^(0+256),w
  8095  0929  00F2               	movwf	___flge@ff1
  8096  092A  3000               	movlw	0
  8097  092B  00F9               	movwf	___flge@ff2+3
  8098  092C  3000               	movlw	0
  8099  092D  00F8               	movwf	___flge@ff2+2
  8100  092E  3000               	movlw	0
  8101  092F  00F7               	movwf	___flge@ff2+1
  8102  0930  3000               	movlw	0
  8103  0931  00F6               	movwf	___flge@ff2
  8104  0932  31A6  26B0  3188   	fcall	___flge
  8105  0935  1803               	btfsc	3,0
  8106  0936  2950               	goto	l6880
  8107                           
  8108                           ;doprnt.c: 832: fval = -fval;
  8109  0937  0022               	movlb	2	; select bank2
  8110  0938  0836               	movf	(sprintf@fval+3)^(0+256),w
  8111  0939  00F5               	movwf	___flneg@f1+3
  8112  093A  0835               	movf	(sprintf@fval+2)^(0+256),w
  8113  093B  00F4               	movwf	___flneg@f1+2
  8114  093C  0834               	movf	(sprintf@fval+1)^(0+256),w
  8115  093D  00F3               	movwf	___flneg@f1+1
  8116  093E  0833               	movf	sprintf@fval^(0+256),w
  8117  093F  00F2               	movwf	___flneg@f1
  8118  0940  319C  2400  3188   	fcall	___flneg
  8119  0943  0875               	movf	?___flneg+3,w
  8120  0944  0022               	movlb	2	; select bank2
  8121  0945  00B6               	movwf	(sprintf@fval+3)^(0+256)
  8122  0946  0874               	movf	?___flneg+2,w
  8123  0947  00B5               	movwf	(sprintf@fval+2)^(0+256)
  8124  0948  0873               	movf	?___flneg+1,w
  8125  0949  00B4               	movwf	(sprintf@fval+1)^(0+256)
  8126  094A  0872               	movf	?___flneg,w
  8127  094B  00B3               	movwf	sprintf@fval^(0+256)
  8128                           
  8129                           ;doprnt.c: 833: flag |= 0x03;
  8130  094C  3003               	movlw	3
  8131  094D  04AF               	iorwf	sprintf@flag^(0+256),f
  8132  094E  3000               	movlw	0
  8133  094F  04B0               	iorwf	(sprintf@flag+1)^(0+256),f
  8134  0950                     l6880:	
  8135                           
  8136                           ;doprnt.c: 834: }
  8137                           ;doprnt.c: 835: exp = 0;
  8138  0950  0022               	movlb	2	; select bank2
  8139  0951  01AD               	clrf	sprintf@exp^(0+256)
  8140  0952  01AE               	clrf	(sprintf@exp+1)^(0+256)
  8141                           
  8142                           ;doprnt.c: 836: if( fval!=0) {
  8143  0953  0836               	movf	(sprintf@fval+3)^(0+256),w
  8144  0954  0435               	iorwf	(sprintf@fval+2)^(0+256),w
  8145  0955  0434               	iorwf	(sprintf@fval+1)^(0+256),w
  8146  0956  0433               	iorwf	sprintf@fval^(0+256),w
  8147  0957  1903               	skipnz
  8148  0958  2A20               	goto	l789
  8149                           
  8150                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  8151  0959  0833               	movf	sprintf@fval^(0+256),w
  8152  095A  0021               	movlb	1	; select bank1
  8153  095B  00E7               	movwf	??_sprintf^(0+128)
  8154  095C  0022               	movlb	2	; select bank2
  8155  095D  0834               	movf	(sprintf@fval+1)^(0+256),w
  8156  095E  0021               	movlb	1	; select bank1
  8157  095F  00E8               	movwf	(??_sprintf^(0+128)+1)
  8158  0960  0022               	movlb	2	; select bank2
  8159  0961  0835               	movf	(sprintf@fval+2)^(0+256),w
  8160  0962  0021               	movlb	1	; select bank1
  8161  0963  00E9               	movwf	(??_sprintf^(0+128)+2)
  8162  0964  0022               	movlb	2	; select bank2
  8163  0965  0836               	movf	(sprintf@fval+3)^(0+256),w
  8164  0966  0021               	movlb	1	; select bank1
  8165  0967  00EA               	movwf	(??_sprintf^(0+128)+3)
  8166  0968  1003               	clrc
  8167  0969  0D69               	rlf	(??_sprintf^(0+128)+2),w
  8168  096A  0D6A               	rlf	(??_sprintf^(0+128)+3),w
  8169  096B  3E82               	addlw	130
  8170  096C  0022               	movlb	2	; select bank2
  8171  096D  00AD               	movwf	sprintf@exp^(0+256)
  8172  096E  30FF               	movlw	255
  8173  096F  1803               	skipnc
  8174  0970  3000               	movlw	0
  8175  0971  00AE               	movwf	(sprintf@exp^(0+256)+1)
  8176                           
  8177                           ;doprnt.c: 838: exp--;
  8178  0972  30FF               	movlw	255
  8179  0973  07AD               	addwf	sprintf@exp^(0+256),f
  8180  0974  30FF               	movlw	255
  8181  0975  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  8182                           
  8183                           ;doprnt.c: 839: exp *= 3;
  8184  0976  3003               	movlw	3
  8185  0977  00F2               	movwf	___wmul@multiplier
  8186  0978  3000               	movlw	0
  8187  0979  00F3               	movwf	___wmul@multiplier+1
  8188  097A  082E               	movf	(sprintf@exp+1)^(0+256),w
  8189  097B  00F5               	movwf	___wmul@multiplicand+1
  8190  097C  082D               	movf	sprintf@exp^(0+256),w
  8191  097D  00F4               	movwf	___wmul@multiplicand
  8192  097E  31AE  2696  3188   	fcall	___wmul
  8193  0981  0873               	movf	?___wmul+1,w
  8194  0982  0022               	movlb	2	; select bank2
  8195  0983  00AE               	movwf	(sprintf@exp+1)^(0+256)
  8196  0984  0872               	movf	?___wmul,w
  8197  0985  00AD               	movwf	sprintf@exp^(0+256)
  8198                           
  8199                           ;doprnt.c: 840: exp /= 10;
  8200  0986  300A               	movlw	10
  8201  0987  0020               	movlb	0	; select bank0
  8202  0988  00A0               	movwf	___awdiv@divisor
  8203  0989  3000               	movlw	0
  8204  098A  00A1               	movwf	___awdiv@divisor+1
  8205  098B  0022               	movlb	2	; select bank2
  8206  098C  082E               	movf	(sprintf@exp+1)^(0+256),w
  8207  098D  0020               	movlb	0	; select bank0
  8208  098E  00A3               	movwf	___awdiv@dividend+1
  8209  098F  0022               	movlb	2	; select bank2
  8210  0990  082D               	movf	sprintf@exp^(0+256),w
  8211  0991  0020               	movlb	0	; select bank0
  8212  0992  00A2               	movwf	___awdiv@dividend
  8213  0993  31A1  21DD  3188   	fcall	___awdiv
  8214  0996  0020               	movlb	0	; select bank0
  8215  0997  0821               	movf	?___awdiv+1,w
  8216  0998  0022               	movlb	2	; select bank2
  8217  0999  00AE               	movwf	(sprintf@exp+1)^(0+256)
  8218  099A  0020               	movlb	0	; select bank0
  8219  099B  0820               	movf	?___awdiv,w
  8220  099C  0022               	movlb	2	; select bank2
  8221  099D  00AD               	movwf	sprintf@exp^(0+256)
  8222                           
  8223                           ;doprnt.c: 841: if(exp < 0)
  8224  099E  1FAE               	btfss	(sprintf@exp+1)^(0+256),7
  8225  099F  29A4               	goto	l6896
  8226                           
  8227                           ;doprnt.c: 842: exp--;
  8228  09A0  30FF               	movlw	255
  8229  09A1  07AD               	addwf	sprintf@exp^(0+256),f
  8230  09A2  30FF               	movlw	255
  8231  09A3  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  8232  09A4                     l6896:	
  8233                           
  8234                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  8235  09A4  032D               	decf	sprintf@exp^(0+256),w
  8236  09A5  3AFF               	xorlw	255
  8237  09A6  3180  20B0  3188   	fcall	_scale
  8238  09A9  0020               	movlb	0	; select bank0
  8239  09AA  086F               	movf	?_scale+3,w
  8240  09AB  0022               	movlb	2	; select bank2
  8241  09AC  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  8242  09AD  0020               	movlb	0	; select bank0
  8243  09AE  086E               	movf	?_scale+2,w
  8244  09AF  0022               	movlb	2	; select bank2
  8245  09B0  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  8246  09B1  0020               	movlb	0	; select bank0
  8247  09B2  086D               	movf	?_scale+1,w
  8248  09B3  0022               	movlb	2	; select bank2
  8249  09B4  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  8250  09B5  0020               	movlb	0	; select bank0
  8251  09B6  086C               	movf	?_scale,w
  8252  09B7  0022               	movlb	2	; select bank2
  8253  09B8  00A5               	movwf	sprintf@tmpval^(0+256)
  8254                           
  8255                           ;doprnt.c: 847: tmpval.integ *= fval;
  8256  09B9  0836               	movf	(sprintf@fval+3)^(0+256),w
  8257  09BA  0020               	movlb	0	; select bank0
  8258  09BB  00D5               	movwf	___flmul@b+3
  8259  09BC  0022               	movlb	2	; select bank2
  8260  09BD  0835               	movf	(sprintf@fval+2)^(0+256),w
  8261  09BE  0020               	movlb	0	; select bank0
  8262  09BF  00D4               	movwf	___flmul@b+2
  8263  09C0  0022               	movlb	2	; select bank2
  8264  09C1  0834               	movf	(sprintf@fval+1)^(0+256),w
  8265  09C2  0020               	movlb	0	; select bank0
  8266  09C3  00D3               	movwf	___flmul@b+1
  8267  09C4  0022               	movlb	2	; select bank2
  8268  09C5  0833               	movf	sprintf@fval^(0+256),w
  8269  09C6  0020               	movlb	0	; select bank0
  8270  09C7  00D2               	movwf	___flmul@b
  8271  09C8  0022               	movlb	2	; select bank2
  8272  09C9  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  8273  09CA  0020               	movlb	0	; select bank0
  8274  09CB  00D9               	movwf	___flmul@a+3
  8275  09CC  0022               	movlb	2	; select bank2
  8276  09CD  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  8277  09CE  0020               	movlb	0	; select bank0
  8278  09CF  00D8               	movwf	___flmul@a+2
  8279  09D0  0022               	movlb	2	; select bank2
  8280  09D1  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  8281  09D2  0020               	movlb	0	; select bank0
  8282  09D3  00D7               	movwf	___flmul@a+1
  8283  09D4  0022               	movlb	2	; select bank2
  8284  09D5  0825               	movf	sprintf@tmpval^(0+256),w
  8285  09D6  0020               	movlb	0	; select bank0
  8286  09D7  00D6               	movwf	___flmul@a
  8287  09D8  3183  23D5  3188   	fcall	___flmul
  8288  09DB  0020               	movlb	0	; select bank0
  8289  09DC  0855               	movf	?___flmul+3,w
  8290  09DD  0022               	movlb	2	; select bank2
  8291  09DE  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  8292  09DF  0020               	movlb	0	; select bank0
  8293  09E0  0854               	movf	?___flmul+2,w
  8294  09E1  0022               	movlb	2	; select bank2
  8295  09E2  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  8296  09E3  0020               	movlb	0	; select bank0
  8297  09E4  0853               	movf	?___flmul+1,w
  8298  09E5  0022               	movlb	2	; select bank2
  8299  09E6  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  8300  09E7  0020               	movlb	0	; select bank0
  8301  09E8  0852               	movf	?___flmul,w
  8302  09E9  0022               	movlb	2	; select bank2
  8303  09EA  00A5               	movwf	sprintf@tmpval^(0+256)
  8304                           
  8305                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  8306  09EB  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  8307  09EC  00F5               	movwf	___flge@ff1+3
  8308  09ED  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  8309  09EE  00F4               	movwf	___flge@ff1+2
  8310  09EF  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  8311  09F0  00F3               	movwf	___flge@ff1+1
  8312  09F1  0825               	movf	sprintf@tmpval^(0+256),w
  8313  09F2  00F2               	movwf	___flge@ff1
  8314  09F3  303F               	movlw	63
  8315  09F4  00F9               	movwf	___flge@ff2+3
  8316  09F5  3080               	movlw	128
  8317  09F6  00F8               	movwf	___flge@ff2+2
  8318  09F7  3000               	movlw	0
  8319  09F8  00F7               	movwf	___flge@ff2+1
  8320  09F9  3000               	movlw	0
  8321  09FA  00F6               	movwf	___flge@ff2
  8322  09FB  31A6  26B0  3188   	fcall	___flge
  8323  09FE  1803               	btfsc	3,0
  8324  09FF  2A05               	goto	l6904
  8325                           
  8326                           ;doprnt.c: 849: exp--;
  8327  0A00  30FF               	movlw	255
  8328  0A01  0022               	movlb	2	; select bank2
  8329  0A02  07AD               	addwf	sprintf@exp^(0+256),f
  8330  0A03  30FF               	movlw	255
  8331  0A04  2A1F               	goto	L2
  8332  0A05                     l6904:	
  8333                           
  8334                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  8335  0A05  0022               	movlb	2	; select bank2
  8336  0A06  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  8337  0A07  00F5               	movwf	___flge@ff1+3
  8338  0A08  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  8339  0A09  00F4               	movwf	___flge@ff1+2
  8340  0A0A  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  8341  0A0B  00F3               	movwf	___flge@ff1+1
  8342  0A0C  0825               	movf	sprintf@tmpval^(0+256),w
  8343  0A0D  00F2               	movwf	___flge@ff1
  8344  0A0E  3041               	movlw	65
  8345  0A0F  00F9               	movwf	___flge@ff2+3
  8346  0A10  3020               	movlw	32
  8347  0A11  00F8               	movwf	___flge@ff2+2
  8348  0A12  3000               	movlw	0
  8349  0A13  00F7               	movwf	___flge@ff2+1
  8350  0A14  3000               	movlw	0
  8351  0A15  00F6               	movwf	___flge@ff2
  8352  0A16  31A6  26B0  3188   	fcall	___flge
  8353  0A19  1C03               	btfss	3,0
  8354  0A1A  2A20               	goto	l789
  8355                           
  8356                           ;doprnt.c: 851: exp++;
  8357  0A1B  3001               	movlw	1
  8358  0A1C  0022               	movlb	2	; select bank2
  8359  0A1D  07AD               	addwf	sprintf@exp^(0+256),f
  8360  0A1E  3000               	movlw	0
  8361  0A1F                     L2:	
  8362  0A1F  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  8363  0A20                     l789:	
  8364                           
  8365                           ;doprnt.c: 852: }
  8366                           ;doprnt.c: 1112: if(prec <= 12)
  8367  0A20  0022               	movlb	2	; select bank2
  8368  0A21  0838               	movf	(sprintf@prec+1)^(0+256),w
  8369  0A22  3A80               	xorlw	128
  8370  0A23  0021               	movlb	1	; select bank1
  8371  0A24  00E7               	movwf	??_sprintf^(0+128)
  8372  0A25  3080               	movlw	128
  8373  0A26  0267               	subwf	??_sprintf^(0+128),w
  8374  0A27  1D03               	skipz
  8375  0A28  2A2C               	goto	u9605
  8376  0A29  300D               	movlw	13
  8377  0A2A  0022               	movlb	2	; select bank2
  8378  0A2B  0237               	subwf	sprintf@prec^(0+256),w
  8379  0A2C                     u9605:	
  8380  0A2C  1803               	skipnc
  8381  0A2D  2A66               	goto	l6910
  8382                           
  8383                           ;doprnt.c: 1113: fval += fround(prec);
  8384  0A2E  0022               	movlb	2	; select bank2
  8385  0A2F  0837               	movf	sprintf@prec^(0+256),w
  8386  0A30  3195  25F7  3188   	fcall	_fround
  8387  0A33  0020               	movlb	0	; select bank0
  8388  0A34  086F               	movf	?_fround+3,w
  8389  0A35  0021               	movlb	1	; select bank1
  8390  0A36  00C0               	movwf	(___fladd@b+3)^(0+128)
  8391  0A37  0020               	movlb	0	; select bank0
  8392  0A38  086E               	movf	?_fround+2,w
  8393  0A39  0021               	movlb	1	; select bank1
  8394  0A3A  00BF               	movwf	(___fladd@b+2)^(0+128)
  8395  0A3B  0020               	movlb	0	; select bank0
  8396  0A3C  086D               	movf	?_fround+1,w
  8397  0A3D  0021               	movlb	1	; select bank1
  8398  0A3E  00BE               	movwf	(___fladd@b+1)^(0+128)
  8399  0A3F  0020               	movlb	0	; select bank0
  8400  0A40  086C               	movf	?_fround,w
  8401  0A41  0021               	movlb	1	; select bank1
  8402  0A42  00BD               	movwf	___fladd@b^(0+128)
  8403  0A43  0022               	movlb	2	; select bank2
  8404  0A44  0836               	movf	(sprintf@fval+3)^(0+256),w
  8405  0A45  0021               	movlb	1	; select bank1
  8406  0A46  00C4               	movwf	(___fladd@a+3)^(0+128)
  8407  0A47  0022               	movlb	2	; select bank2
  8408  0A48  0835               	movf	(sprintf@fval+2)^(0+256),w
  8409  0A49  0021               	movlb	1	; select bank1
  8410  0A4A  00C3               	movwf	(___fladd@a+2)^(0+128)
  8411  0A4B  0022               	movlb	2	; select bank2
  8412  0A4C  0834               	movf	(sprintf@fval+1)^(0+256),w
  8413  0A4D  0021               	movlb	1	; select bank1
  8414  0A4E  00C2               	movwf	(___fladd@a+1)^(0+128)
  8415  0A4F  0022               	movlb	2	; select bank2
  8416  0A50  0833               	movf	sprintf@fval^(0+256),w
  8417  0A51  0021               	movlb	1	; select bank1
  8418  0A52  00C1               	movwf	___fladd@a^(0+128)
  8419  0A53  3186  2601  3188   	fcall	___fladd
  8420  0A56  0021               	movlb	1	; select bank1
  8421  0A57  0840               	movf	(?___fladd+3)^(0+128),w
  8422  0A58  0022               	movlb	2	; select bank2
  8423  0A59  00B6               	movwf	(sprintf@fval+3)^(0+256)
  8424  0A5A  0021               	movlb	1	; select bank1
  8425  0A5B  083F               	movf	(?___fladd+2)^(0+128),w
  8426  0A5C  0022               	movlb	2	; select bank2
  8427  0A5D  00B5               	movwf	(sprintf@fval+2)^(0+256)
  8428  0A5E  0021               	movlb	1	; select bank1
  8429  0A5F  083E               	movf	(?___fladd+1)^(0+128),w
  8430  0A60  0022               	movlb	2	; select bank2
  8431  0A61  00B4               	movwf	(sprintf@fval+1)^(0+256)
  8432  0A62  0021               	movlb	1	; select bank1
  8433  0A63  083D               	movf	?___fladd^(0+128),w
  8434  0A64  0022               	movlb	2	; select bank2
  8435  0A65  00B3               	movwf	sprintf@fval^(0+256)
  8436  0A66                     l6910:	
  8437                           
  8438                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  8439  0A66  0022               	movlb	2	; select bank2
  8440  0A67  082E               	movf	(sprintf@exp+1)^(0+256),w
  8441  0A68  3A80               	xorlw	128
  8442  0A69  0021               	movlb	1	; select bank1
  8443  0A6A  00E7               	movwf	??_sprintf^(0+128)
  8444  0A6B  3080               	movlw	128
  8445  0A6C  0267               	subwf	??_sprintf^(0+128),w
  8446  0A6D  1D03               	skipz
  8447  0A6E  2A72               	goto	u9615
  8448  0A6F  300A               	movlw	10
  8449  0A70  0022               	movlb	2	; select bank2
  8450  0A71  022D               	subwf	sprintf@exp^(0+256),w
  8451  0A72                     u9615:	
  8452  0A72  1803               	skipnc
  8453  0A73  2AA2               	goto	l6918
  8454  0A74  0022               	movlb	2	; select bank2
  8455  0A75  0836               	movf	(sprintf@fval+3)^(0+256),w
  8456  0A76  0435               	iorwf	(sprintf@fval+2)^(0+256),w
  8457  0A77  0434               	iorwf	(sprintf@fval+1)^(0+256),w
  8458  0A78  0433               	iorwf	sprintf@fval^(0+256),w
  8459  0A79  1903               	skipnz
  8460  0A7A  2AF8               	goto	l6932
  8461  0A7B  0836               	movf	(sprintf@fval+3)^(0+256),w
  8462  0A7C  0021               	movlb	1	; select bank1
  8463  0A7D  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8464  0A7E  0022               	movlb	2	; select bank2
  8465  0A7F  0835               	movf	(sprintf@fval+2)^(0+256),w
  8466  0A80  0021               	movlb	1	; select bank1
  8467  0A81  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8468  0A82  0022               	movlb	2	; select bank2
  8469  0A83  0834               	movf	(sprintf@fval+1)^(0+256),w
  8470  0A84  0021               	movlb	1	; select bank1
  8471  0A85  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8472  0A86  0022               	movlb	2	; select bank2
  8473  0A87  0833               	movf	sprintf@fval^(0+256),w
  8474  0A88  0021               	movlb	1	; select bank1
  8475  0A89  00B5               	movwf	___fltol@f1^(0+128)
  8476  0A8A  31A3  2385  3188   	fcall	___fltol
  8477  0A8D  0021               	movlb	1	; select bank1
  8478  0A8E  0838               	movf	(?___fltol+3)^(0+128),w
  8479  0A8F  0437               	iorwf	(?___fltol+2)^(0+128),w
  8480  0A90  0436               	iorwf	(?___fltol+1)^(0+128),w
  8481  0A91  0435               	iorwf	?___fltol^(0+128),w
  8482  0A92  1D03               	skipz
  8483  0A93  2AF8               	goto	l6932
  8484  0A94  0022               	movlb	2	; select bank2
  8485  0A95  082E               	movf	(sprintf@exp+1)^(0+256),w
  8486  0A96  3A80               	xorlw	128
  8487  0A97  0021               	movlb	1	; select bank1
  8488  0A98  00E7               	movwf	??_sprintf^(0+128)
  8489  0A99  3080               	movlw	128
  8490  0A9A  0267               	subwf	??_sprintf^(0+128),w
  8491  0A9B  1D03               	skipz
  8492  0A9C  2AA0               	goto	u9645
  8493  0A9D  3002               	movlw	2
  8494  0A9E  0022               	movlb	2	; select bank2
  8495  0A9F  022D               	subwf	sprintf@exp^(0+256),w
  8496  0AA0                     u9645:	
  8497  0AA0  1C03               	skipc
  8498  0AA1  2AF8               	goto	l6932
  8499  0AA2                     l6918:	
  8500                           
  8501                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  8502  0AA2  0022               	movlb	2	; select bank2
  8503  0AA3  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  8504  0AA4  00F5               	movwf	___flge@ff1+3
  8505  0AA5  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  8506  0AA6  00F4               	movwf	___flge@ff1+2
  8507  0AA7  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  8508  0AA8  00F3               	movwf	___flge@ff1+1
  8509  0AA9  0825               	movf	sprintf@tmpval^(0+256),w
  8510  0AAA  00F2               	movwf	___flge@ff1
  8511  0AAB  3040               	movlw	64
  8512  0AAC  00F9               	movwf	___flge@ff2+3
  8513  0AAD  3089               	movlw	137
  8514  0AAE  00F8               	movwf	___flge@ff2+2
  8515  0AAF  3070               	movlw	112
  8516  0AB0  00F7               	movwf	___flge@ff2+1
  8517  0AB1  305F               	movlw	95
  8518  0AB2  00F6               	movwf	___flge@ff2
  8519  0AB3  31A6  26B0  3188   	fcall	___flge
  8520  0AB6  1803               	btfsc	3,0
  8521  0AB7  2ABA               	goto	l6922
  8522                           
  8523                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  8524  0AB8  30F7               	movlw	247
  8525  0AB9  2ABB               	goto	L3
  8526  0ABA                     l6922:	
  8527                           ;doprnt.c: 1122: }else{
  8528                           
  8529                           
  8530                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  8531  0ABA  30F8               	movlw	248
  8532  0ABB                     L3:	
  8533  0ABB  0022               	movlb	2	; select bank2
  8534  0ABC  07AD               	addwf	sprintf@exp^(0+256),f
  8535  0ABD  30FF               	movlw	255
  8536  0ABE  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  8537                           
  8538                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  8539  0ABF  082D               	movf	sprintf@exp^(0+256),w
  8540  0AC0  3180  20B0  3188   	fcall	_scale
  8541  0AC3  0020               	movlb	0	; select bank0
  8542  0AC4  086F               	movf	?_scale+3,w
  8543  0AC5  0022               	movlb	2	; select bank2
  8544  0AC6  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  8545  0AC7  0020               	movlb	0	; select bank0
  8546  0AC8  086E               	movf	?_scale+2,w
  8547  0AC9  0022               	movlb	2	; select bank2
  8548  0ACA  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  8549  0ACB  0020               	movlb	0	; select bank0
  8550  0ACC  086D               	movf	?_scale+1,w
  8551  0ACD  0022               	movlb	2	; select bank2
  8552  0ACE  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  8553  0ACF  0020               	movlb	0	; select bank0
  8554  0AD0  086C               	movf	?_scale,w
  8555  0AD1  0022               	movlb	2	; select bank2
  8556  0AD2  00A5               	movwf	sprintf@tmpval^(0+256)
  8557  0AD3  0836               	movf	(sprintf@fval+3)^(0+256),w
  8558  0AD4  00F5               	movwf	__div_to_l_@f1+3
  8559  0AD5  0835               	movf	(sprintf@fval+2)^(0+256),w
  8560  0AD6  00F4               	movwf	__div_to_l_@f1+2
  8561  0AD7  0834               	movf	(sprintf@fval+1)^(0+256),w
  8562  0AD8  00F3               	movwf	__div_to_l_@f1+1
  8563  0AD9  0833               	movf	sprintf@fval^(0+256),w
  8564  0ADA  00F2               	movwf	__div_to_l_@f1
  8565  0ADB  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  8566  0ADC  00F9               	movwf	__div_to_l_@f2+3
  8567  0ADD  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  8568  0ADE  00F8               	movwf	__div_to_l_@f2+2
  8569  0ADF  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  8570  0AE0  00F7               	movwf	__div_to_l_@f2+1
  8571  0AE1  0825               	movf	sprintf@tmpval^(0+256),w
  8572  0AE2  00F6               	movwf	__div_to_l_@f2
  8573  0AE3  319C  2409  3188   	fcall	__div_to_l_
  8574  0AE6  0875               	movf	?__div_to_l_+3,w
  8575  0AE7  0022               	movlb	2	; select bank2
  8576  0AE8  00AC               	movwf	(sprintf@val+3)^(0+256)
  8577  0AE9  0874               	movf	?__div_to_l_+2,w
  8578  0AEA  00AB               	movwf	(sprintf@val+2)^(0+256)
  8579  0AEB  0873               	movf	?__div_to_l_+1,w
  8580  0AEC  00AA               	movwf	(sprintf@val+1)^(0+256)
  8581  0AED  0872               	movf	?__div_to_l_,w
  8582  0AEE  00A9               	movwf	sprintf@val^(0+256)
  8583                           
  8584                           ;doprnt.c: 1129: fval = 0.0;
  8585  0AEF  3000               	movlw	0
  8586  0AF0  00B6               	movwf	(sprintf@fval+3)^(0+256)
  8587  0AF1  3000               	movlw	0
  8588  0AF2  00B5               	movwf	(sprintf@fval+2)^(0+256)
  8589  0AF3  3000               	movlw	0
  8590  0AF4  00B4               	movwf	(sprintf@fval+1)^(0+256)
  8591  0AF5  3000               	movlw	0
  8592  0AF6  00B3               	movwf	sprintf@fval^(0+256)
  8593                           
  8594                           ;doprnt.c: 1130: } else {
  8595  0AF7  2B63               	goto	l6936
  8596  0AF8                     l6932:	
  8597                           
  8598                           ;doprnt.c: 1131: val = (unsigned long)fval;
  8599  0AF8  0022               	movlb	2	; select bank2
  8600  0AF9  0836               	movf	(sprintf@fval+3)^(0+256),w
  8601  0AFA  0021               	movlb	1	; select bank1
  8602  0AFB  00B8               	movwf	(___fltol@f1+3)^(0+128)
  8603  0AFC  0022               	movlb	2	; select bank2
  8604  0AFD  0835               	movf	(sprintf@fval+2)^(0+256),w
  8605  0AFE  0021               	movlb	1	; select bank1
  8606  0AFF  00B7               	movwf	(___fltol@f1+2)^(0+128)
  8607  0B00  0022               	movlb	2	; select bank2
  8608  0B01  0834               	movf	(sprintf@fval+1)^(0+256),w
  8609  0B02  0021               	movlb	1	; select bank1
  8610  0B03  00B6               	movwf	(___fltol@f1+1)^(0+128)
  8611  0B04  0022               	movlb	2	; select bank2
  8612  0B05  0833               	movf	sprintf@fval^(0+256),w
  8613  0B06  0021               	movlb	1	; select bank1
  8614  0B07  00B5               	movwf	___fltol@f1^(0+128)
  8615  0B08  31A3  2385  3188   	fcall	___fltol
  8616  0B0B  0021               	movlb	1	; select bank1
  8617  0B0C  0838               	movf	(?___fltol+3)^(0+128),w
  8618  0B0D  0022               	movlb	2	; select bank2
  8619  0B0E  00AC               	movwf	(sprintf@val+3)^(0+256)
  8620  0B0F  0021               	movlb	1	; select bank1
  8621  0B10  0837               	movf	(?___fltol+2)^(0+128),w
  8622  0B11  0022               	movlb	2	; select bank2
  8623  0B12  00AB               	movwf	(sprintf@val+2)^(0+256)
  8624  0B13  0021               	movlb	1	; select bank1
  8625  0B14  0836               	movf	(?___fltol+1)^(0+128),w
  8626  0B15  0022               	movlb	2	; select bank2
  8627  0B16  00AA               	movwf	(sprintf@val+1)^(0+256)
  8628  0B17  0021               	movlb	1	; select bank1
  8629  0B18  0835               	movf	?___fltol^(0+128),w
  8630  0B19  0022               	movlb	2	; select bank2
  8631  0B1A  00A9               	movwf	sprintf@val^(0+256)
  8632                           
  8633                           ;doprnt.c: 1132: fval -= (double)val;
  8634  0B1B  082C               	movf	(sprintf@val+3)^(0+256),w
  8635  0B1C  0020               	movlb	0	; select bank0
  8636  0B1D  00B1               	movwf	___xxtofl@val+3
  8637  0B1E  0022               	movlb	2	; select bank2
  8638  0B1F  082B               	movf	(sprintf@val+2)^(0+256),w
  8639  0B20  0020               	movlb	0	; select bank0
  8640  0B21  00B0               	movwf	___xxtofl@val+2
  8641  0B22  0022               	movlb	2	; select bank2
  8642  0B23  082A               	movf	(sprintf@val+1)^(0+256),w
  8643  0B24  0020               	movlb	0	; select bank0
  8644  0B25  00AF               	movwf	___xxtofl@val+1
  8645  0B26  0022               	movlb	2	; select bank2
  8646  0B27  0829               	movf	sprintf@val^(0+256),w
  8647  0B28  0020               	movlb	0	; select bank0
  8648  0B29  00AE               	movwf	___xxtofl@val
  8649  0B2A  3000               	movlw	0
  8650  0B2B  31A6  261A  3188   	fcall	___xxtofl
  8651  0B2E  0020               	movlb	0	; select bank0
  8652  0B2F  0831               	movf	?___xxtofl+3,w
  8653  0B30  0021               	movlb	1	; select bank1
  8654  0B31  00D8               	movwf	(___flsub@a+3)^(0+128)
  8655  0B32  0020               	movlb	0	; select bank0
  8656  0B33  0830               	movf	?___xxtofl+2,w
  8657  0B34  0021               	movlb	1	; select bank1
  8658  0B35  00D7               	movwf	(___flsub@a+2)^(0+128)
  8659  0B36  0020               	movlb	0	; select bank0
  8660  0B37  082F               	movf	?___xxtofl+1,w
  8661  0B38  0021               	movlb	1	; select bank1
  8662  0B39  00D6               	movwf	(___flsub@a+1)^(0+128)
  8663  0B3A  0020               	movlb	0	; select bank0
  8664  0B3B  082E               	movf	?___xxtofl,w
  8665  0B3C  0021               	movlb	1	; select bank1
  8666  0B3D  00D5               	movwf	___flsub@a^(0+128)
  8667  0B3E  0022               	movlb	2	; select bank2
  8668  0B3F  0836               	movf	(sprintf@fval+3)^(0+256),w
  8669  0B40  0021               	movlb	1	; select bank1
  8670  0B41  00DC               	movwf	(___flsub@b+3)^(0+128)
  8671  0B42  0022               	movlb	2	; select bank2
  8672  0B43  0835               	movf	(sprintf@fval+2)^(0+256),w
  8673  0B44  0021               	movlb	1	; select bank1
  8674  0B45  00DB               	movwf	(___flsub@b+2)^(0+128)
  8675  0B46  0022               	movlb	2	; select bank2
  8676  0B47  0834               	movf	(sprintf@fval+1)^(0+256),w
  8677  0B48  0021               	movlb	1	; select bank1
  8678  0B49  00DA               	movwf	(___flsub@b+1)^(0+128)
  8679  0B4A  0022               	movlb	2	; select bank2
  8680  0B4B  0833               	movf	sprintf@fval^(0+256),w
  8681  0B4C  0021               	movlb	1	; select bank1
  8682  0B4D  00D9               	movwf	___flsub@b^(0+128)
  8683  0B4E  31AE  26CF  3188   	fcall	___flsub
  8684  0B51  0021               	movlb	1	; select bank1
  8685  0B52  0858               	movf	(?___flsub+3)^(0+128),w
  8686  0B53  0022               	movlb	2	; select bank2
  8687  0B54  00B6               	movwf	(sprintf@fval+3)^(0+256)
  8688  0B55  0021               	movlb	1	; select bank1
  8689  0B56  0857               	movf	(?___flsub+2)^(0+128),w
  8690  0B57  0022               	movlb	2	; select bank2
  8691  0B58  00B5               	movwf	(sprintf@fval+2)^(0+256)
  8692  0B59  0021               	movlb	1	; select bank1
  8693  0B5A  0856               	movf	(?___flsub+1)^(0+128),w
  8694  0B5B  0022               	movlb	2	; select bank2
  8695  0B5C  00B4               	movwf	(sprintf@fval+1)^(0+256)
  8696  0B5D  0021               	movlb	1	; select bank1
  8697  0B5E  0855               	movf	?___flsub^(0+128),w
  8698  0B5F  0022               	movlb	2	; select bank2
  8699  0B60  00B3               	movwf	sprintf@fval^(0+256)
  8700                           
  8701                           ;doprnt.c: 1133: exp = 0;
  8702  0B61  01AD               	clrf	sprintf@exp^(0+256)
  8703  0B62  01AE               	clrf	(sprintf@exp+1)^(0+256)
  8704  0B63                     l6936:	
  8705                           
  8706                           ;doprnt.c: 1134: }
  8707                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  8708  0B63  01BA               	clrf	sprintf@c^(0+256)
  8709  0B64  0ABA               	incf	sprintf@c^(0+256),f
  8710  0B65  300A               	movlw	10
  8711  0B66  063A               	xorwf	sprintf@c^(0+256),w
  8712  0B67  1903               	btfsc	3,2
  8713  0B68  2BA0               	goto	l6948
  8714  0B69                     l6942:	
  8715                           
  8716                           ;doprnt.c: 1137: if(val < dpowers[c])
  8717  0B69  083A               	movf	sprintf@c^(0+256),w
  8718  0B6A  0021               	movlb	1	; select bank1
  8719  0B6B  00E7               	movwf	??_sprintf^(0+128)
  8720  0B6C  01E8               	clrf	(??_sprintf^(0+128)+1)
  8721  0B6D  35E7               	lslf	??_sprintf^(0+128),f
  8722  0B6E  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  8723  0B6F  35E7               	lslf	??_sprintf^(0+128),f
  8724  0B70  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  8725  0B71  309A               	movlw	low (_dpowers| (0+32768))
  8726  0B72  0767               	addwf	??_sprintf^(0+128),w
  8727  0B73  0084               	movwf	4
  8728  0B74  30B0               	movlw	high (_dpowers| (0+32768))
  8729  0B75  3D68               	addwfc	(??_sprintf+1)^(0+128),w
  8730  0B76  0085               	movwf	5
  8731  0B77  3F00               	moviw [0]fsr0
  8732  0B78  00E9               	movwf	(??_sprintf+2)^(0+128)
  8733  0B79  3F01               	moviw [1]fsr0
  8734  0B7A  00EA               	movwf	((??_sprintf+2)^(0+128)+1)
  8735  0B7B  3F02               	moviw [2]fsr0
  8736  0B7C  00EB               	movwf	((??_sprintf+2)^(0+128)+2)
  8737  0B7D  3F03               	moviw [3]fsr0
  8738  0B7E  00EC               	movwf	((??_sprintf+2)^(0+128)+3)
  8739  0B7F  086C               	movf	(??_sprintf+5)^(0+128),w
  8740  0B80  0022               	movlb	2	; select bank2
  8741  0B81  022C               	subwf	(sprintf@val+3)^(0+256),w
  8742  0B82  1D03               	skipz
  8743  0B83  2B94               	goto	u9675
  8744  0B84  0021               	movlb	1	; select bank1
  8745  0B85  086B               	movf	(??_sprintf+4)^(0+128),w
  8746  0B86  0022               	movlb	2	; select bank2
  8747  0B87  022B               	subwf	(sprintf@val+2)^(0+256),w
  8748  0B88  1D03               	skipz
  8749  0B89  2B94               	goto	u9675
  8750  0B8A  0021               	movlb	1	; select bank1
  8751  0B8B  086A               	movf	(??_sprintf+3)^(0+128),w
  8752  0B8C  0022               	movlb	2	; select bank2
  8753  0B8D  022A               	subwf	(sprintf@val+1)^(0+256),w
  8754  0B8E  1D03               	skipz
  8755  0B8F  2B94               	goto	u9675
  8756  0B90  0021               	movlb	1	; select bank1
  8757  0B91  0869               	movf	(??_sprintf+2)^(0+128),w
  8758  0B92  0022               	movlb	2	; select bank2
  8759  0B93  0229               	subwf	sprintf@val^(0+256),w
  8760  0B94                     u9675:	
  8761  0B94  1C03               	btfss	3,0
  8762  0B95  2BA0               	goto	l6948
  8763                           
  8764                           ;doprnt.c: 1138: break;
  8765  0B96  3001               	movlw	1
  8766  0B97  0021               	movlb	1	; select bank1
  8767  0B98  00E7               	movwf	??_sprintf^(0+128)
  8768  0B99  0867               	movf	??_sprintf^(0+128),w
  8769  0B9A  0022               	movlb	2	; select bank2
  8770  0B9B  07BA               	addwf	sprintf@c^(0+256),f
  8771  0B9C  300A               	movlw	10
  8772  0B9D  063A               	xorwf	sprintf@c^(0+256),w
  8773  0B9E  1D03               	btfss	3,2
  8774  0B9F  2B69               	goto	l6942
  8775  0BA0                     l6948:	
  8776                           
  8777                           ;doprnt.c: 1142: width -= prec + c + exp;
  8778  0BA0  083A               	movf	sprintf@c^(0+256),w
  8779  0BA1  0021               	movlb	1	; select bank1
  8780  0BA2  00E7               	movwf	??_sprintf^(0+128)
  8781  0BA3  01E8               	clrf	(??_sprintf^(0+128)+1)
  8782  0BA4  1BE7               	btfsc	??_sprintf^(0+128),7
  8783  0BA5  03E8               	decf	(??_sprintf^(0+128)+1),f
  8784  0BA6  0022               	movlb	2	; select bank2
  8785  0BA7  0837               	movf	sprintf@prec^(0+256),w
  8786  0BA8  0021               	movlb	1	; select bank1
  8787  0BA9  0767               	addwf	??_sprintf^(0+128),w
  8788  0BAA  00E9               	movwf	(??_sprintf+2)^(0+128)
  8789  0BAB  0022               	movlb	2	; select bank2
  8790  0BAC  0838               	movf	(sprintf@prec+1)^(0+256),w
  8791  0BAD  0021               	movlb	1	; select bank1
  8792  0BAE  3D68               	addwfc	(??_sprintf+1)^(0+128),w
  8793  0BAF  00EA               	movwf	(??_sprintf+3)^(0+128)
  8794  0BB0  0022               	movlb	2	; select bank2
  8795  0BB1  082D               	movf	sprintf@exp^(0+256),w
  8796  0BB2  0021               	movlb	1	; select bank1
  8797  0BB3  0769               	addwf	(??_sprintf+2)^(0+128),w
  8798  0BB4  00EB               	movwf	(??_sprintf+4)^(0+128)
  8799  0BB5  0022               	movlb	2	; select bank2
  8800  0BB6  082E               	movf	(sprintf@exp+1)^(0+256),w
  8801  0BB7  0021               	movlb	1	; select bank1
  8802  0BB8  3D6A               	addwfc	(??_sprintf+3)^(0+128),w
  8803  0BB9  00EC               	movwf	(??_sprintf+5)^(0+128)
  8804  0BBA  086B               	movf	(??_sprintf+4)^(0+128),w
  8805  0BBB  0022               	movlb	2	; select bank2
  8806  0BBC  02B1               	subwf	sprintf@width^(0+256),f
  8807  0BBD  0021               	movlb	1	; select bank1
  8808  0BBE  086C               	movf	(??_sprintf+5)^(0+128),w
  8809  0BBF  0022               	movlb	2	; select bank2
  8810  0BC0  3BB2               	subwfb	(sprintf@width+1)^(0+256),f
  8811                           
  8812                           ;doprnt.c: 1143: if(
  8813                           ;doprnt.c: 1147: prec)
  8814  0BC1  0837               	movf	sprintf@prec^(0+256),w
  8815  0BC2  0438               	iorwf	(sprintf@prec+1)^(0+256),w
  8816  0BC3  1903               	btfsc	3,2
  8817  0BC4  2BC9               	goto	l6952
  8818                           
  8819                           ;doprnt.c: 1148: width--;
  8820  0BC5  30FF               	movlw	255
  8821  0BC6  07B1               	addwf	sprintf@width^(0+256),f
  8822  0BC7  30FF               	movlw	255
  8823  0BC8  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  8824  0BC9                     l6952:	
  8825                           
  8826                           ;doprnt.c: 1149: if(flag & 0x03)
  8827  0BC9  3003               	movlw	3
  8828  0BCA  052F               	andwf	sprintf@flag^(0+256),w
  8829  0BCB  0021               	movlb	1	; select bank1
  8830  0BCC  00E7               	movwf	??_sprintf^(0+128)
  8831  0BCD  3000               	movlw	0
  8832  0BCE  0022               	movlb	2	; select bank2
  8833  0BCF  0530               	andwf	(sprintf@flag+1)^(0+256),w
  8834  0BD0  0021               	movlb	1	; select bank1
  8835  0BD1  00E8               	movwf	(??_sprintf+1)^(0+128)
  8836  0BD2  0867               	movf	??_sprintf^(0+128),w
  8837  0BD3  0468               	iorwf	(??_sprintf^(0+128)+1),w
  8838  0BD4  1903               	btfsc	3,2
  8839  0BD5  2BDB               	goto	l6956
  8840                           
  8841                           ;doprnt.c: 1150: width--;
  8842  0BD6  30FF               	movlw	255
  8843  0BD7  0022               	movlb	2	; select bank2
  8844  0BD8  07B1               	addwf	sprintf@width^(0+256),f
  8845  0BD9  30FF               	movlw	255
  8846  0BDA  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  8847  0BDB                     l6956:	
  8848                           
  8849                           ;doprnt.c: 1153: if(flag & 0x04) {
  8850  0BDB  0022               	movlb	2	; select bank2
  8851  0BDC  1D2F               	btfss	sprintf@flag^(0+256),2
  8852  0BDD  2C31               	goto	l6978
  8853                           
  8854                           ;doprnt.c: 1157: if(flag & 0x03)
  8855  0BDE  3003               	movlw	3
  8856  0BDF  052F               	andwf	sprintf@flag^(0+256),w
  8857  0BE0  0021               	movlb	1	; select bank1
  8858  0BE1  00E7               	movwf	??_sprintf^(0+128)
  8859  0BE2  3000               	movlw	0
  8860  0BE3  0022               	movlb	2	; select bank2
  8861  0BE4  0530               	andwf	(sprintf@flag+1)^(0+256),w
  8862  0BE5  0021               	movlb	1	; select bank1
  8863  0BE6  00E8               	movwf	(??_sprintf+1)^(0+128)
  8864  0BE7  0867               	movf	??_sprintf^(0+128),w
  8865  0BE8  0468               	iorwf	(??_sprintf^(0+128)+1),w
  8866  0BE9  1903               	btfsc	3,2
  8867  0BEA  2BFA               	goto	l6970
  8868                           
  8869                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  8870  0BEB  302D               	movlw	45
  8871  0BEC  00E7               	movwf	??_sprintf^(0+128)
  8872  0BED  0022               	movlb	2	; select bank2
  8873  0BEE  0839               	movf	sprintf@sp^(0+256),w
  8874  0BEF  0086               	movwf	6
  8875  0BF0  3002               	movlw	2	; select bank4/5
  8876  0BF1  0087               	movwf	7
  8877  0BF2  0021               	movlb	1	; select bank1
  8878  0BF3  0867               	movf	??_sprintf^(0+128),w
  8879  0BF4  0081               	movwf	1
  8880  0BF5  3001               	movlw	1
  8881  0BF6  00E7               	movwf	??_sprintf^(0+128)
  8882  0BF7  0867               	movf	??_sprintf^(0+128),w
  8883  0BF8  0022               	movlb	2	; select bank2
  8884  0BF9  07B9               	addwf	sprintf@sp^(0+256),f
  8885  0BFA                     l6970:	
  8886                           ;doprnt.c: 1168: while(width > 0) {
  8887                           
  8888  0BFA  0022               	movlb	2	; select bank2
  8889  0BFB  0832               	movf	(sprintf@width+1)^(0+256),w
  8890  0BFC  3A80               	xorlw	128
  8891  0BFD  0021               	movlb	1	; select bank1
  8892  0BFE  00E7               	movwf	??_sprintf^(0+128)
  8893  0BFF  3080               	movlw	128
  8894  0C00  0267               	subwf	??_sprintf^(0+128),w
  8895  0C01  1D03               	skipz
  8896  0C02  2C06               	goto	u9735
  8897  0C03  3001               	movlw	1
  8898  0C04  0022               	movlb	2	; select bank2
  8899  0C05  0231               	subwf	sprintf@width^(0+256),w
  8900  0C06                     u9735:	
  8901  0C06  1C03               	btfss	3,0
  8902  0C07  2C5C               	goto	l6994
  8903                           
  8904                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  8905  0C08  3030               	movlw	48
  8906  0C09  0021               	movlb	1	; select bank1
  8907  0C0A  00E7               	movwf	??_sprintf^(0+128)
  8908  0C0B  0022               	movlb	2	; select bank2
  8909  0C0C  0839               	movf	sprintf@sp^(0+256),w
  8910  0C0D  0086               	movwf	6
  8911  0C0E  3002               	movlw	2	; select bank4/5
  8912  0C0F  0087               	movwf	7
  8913  0C10  0021               	movlb	1	; select bank1
  8914  0C11  0867               	movf	??_sprintf^(0+128),w
  8915  0C12  0081               	movwf	1
  8916  0C13  3001               	movlw	1
  8917  0C14  00E7               	movwf	??_sprintf^(0+128)
  8918  0C15  0867               	movf	??_sprintf^(0+128),w
  8919  0C16  0022               	movlb	2	; select bank2
  8920  0C17  07B9               	addwf	sprintf@sp^(0+256),f
  8921                           
  8922                           ;doprnt.c: 1170: width--;
  8923  0C18  30FF               	movlw	255
  8924  0C19  07B1               	addwf	sprintf@width^(0+256),f
  8925  0C1A  30FF               	movlw	255
  8926  0C1B  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  8927  0C1C  2BFA               	goto	l6970
  8928  0C1D                     l6972:	
  8929                           ;doprnt.c: 1175: {
  8930                           ;doprnt.c: 1180: while(width > 0) {
  8931                           
  8932                           ;doprnt.c: 1171: }
  8933                           ;doprnt.c: 1173: } else
  8934                           
  8935                           
  8936                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  8937  0C1D  3020               	movlw	32
  8938  0C1E  0021               	movlb	1	; select bank1
  8939  0C1F  00E7               	movwf	??_sprintf^(0+128)
  8940  0C20  0022               	movlb	2	; select bank2
  8941  0C21  0839               	movf	sprintf@sp^(0+256),w
  8942  0C22  0086               	movwf	6
  8943  0C23  3002               	movlw	2	; select bank4/5
  8944  0C24  0087               	movwf	7
  8945  0C25  0021               	movlb	1	; select bank1
  8946  0C26  0867               	movf	??_sprintf^(0+128),w
  8947  0C27  0081               	movwf	1
  8948  0C28  3001               	movlw	1
  8949  0C29  00E7               	movwf	??_sprintf^(0+128)
  8950  0C2A  0867               	movf	??_sprintf^(0+128),w
  8951  0C2B  0022               	movlb	2	; select bank2
  8952  0C2C  07B9               	addwf	sprintf@sp^(0+256),f
  8953                           
  8954                           ;doprnt.c: 1182: width--;
  8955  0C2D  30FF               	movlw	255
  8956  0C2E  07B1               	addwf	sprintf@width^(0+256),f
  8957  0C2F  30FF               	movlw	255
  8958  0C30  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  8959  0C31                     l6978:	
  8960  0C31  0022               	movlb	2	; select bank2
  8961  0C32  0832               	movf	(sprintf@width+1)^(0+256),w
  8962  0C33  3A80               	xorlw	128
  8963  0C34  0021               	movlb	1	; select bank1
  8964  0C35  00E7               	movwf	??_sprintf^(0+128)
  8965  0C36  3080               	movlw	128
  8966  0C37  0267               	subwf	??_sprintf^(0+128),w
  8967  0C38  1D03               	skipz
  8968  0C39  2C3D               	goto	u9745
  8969  0C3A  3001               	movlw	1
  8970  0C3B  0022               	movlb	2	; select bank2
  8971  0C3C  0231               	subwf	sprintf@width^(0+256),w
  8972  0C3D                     u9745:	
  8973  0C3D  1803               	skipnc
  8974  0C3E  2C1D               	goto	l6972
  8975                           
  8976                           ;doprnt.c: 1183: }
  8977                           ;doprnt.c: 1188: if(flag & 0x03)
  8978  0C3F  3003               	movlw	3
  8979  0C40  0022               	movlb	2	; select bank2
  8980  0C41  052F               	andwf	sprintf@flag^(0+256),w
  8981  0C42  0021               	movlb	1	; select bank1
  8982  0C43  00E7               	movwf	??_sprintf^(0+128)
  8983  0C44  3000               	movlw	0
  8984  0C45  0022               	movlb	2	; select bank2
  8985  0C46  0530               	andwf	(sprintf@flag+1)^(0+256),w
  8986  0C47  0021               	movlb	1	; select bank1
  8987  0C48  00E8               	movwf	(??_sprintf+1)^(0+128)
  8988  0C49  0867               	movf	??_sprintf^(0+128),w
  8989  0C4A  0468               	iorwf	(??_sprintf^(0+128)+1),w
  8990  0C4B  1903               	btfsc	3,2
  8991  0C4C  2C5C               	goto	l6994
  8992                           
  8993                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  8994  0C4D  302D               	movlw	45
  8995  0C4E                     L8:	
  8996  0C4E  00E7               	movwf	??_sprintf^(0+128)
  8997  0C4F  0022               	movlb	2	; select bank2
  8998  0C50  0839               	movf	sprintf@sp^(0+256),w
  8999  0C51  0086               	movwf	6
  9000  0C52  3002               	movlw	2	; select bank4/5
  9001  0C53  0087               	movwf	7
  9002  0C54  0021               	movlb	1	; select bank1
  9003  0C55  0867               	movf	??_sprintf^(0+128),w
  9004  0C56  0081               	movwf	1
  9005  0C57  3001               	movlw	1
  9006  0C58  00E7               	movwf	??_sprintf^(0+128)
  9007  0C59  0867               	movf	??_sprintf^(0+128),w
  9008  0C5A  0022               	movlb	2	; select bank2
  9009  0C5B  07B9               	addwf	sprintf@sp^(0+256),f
  9010  0C5C                     l6994:	
  9011  0C5C  30FF               	movlw	255
  9012  0C5D  0021               	movlb	1	; select bank1
  9013  0C5E  00E7               	movwf	??_sprintf^(0+128)
  9014  0C5F  0867               	movf	??_sprintf^(0+128),w
  9015  0C60  0022               	movlb	2	; select bank2
  9016  0C61  07BA               	addwf	sprintf@c^(0+256),f
  9017  0C62  0A3A               	incf	sprintf@c^(0+256),w
  9018  0C63  1903               	btfsc	3,2
  9019  0C64  2CD4               	goto	l7002
  9020                           
  9021                           ;doprnt.c: 1200: {
  9022                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9023                           
  9024                           ;doprnt.c: 1195: }
  9025                           ;doprnt.c: 1196: while(c--) {
  9026  0C65  083A               	movf	sprintf@c^(0+256),w
  9027  0C66  0021               	movlb	1	; select bank1
  9028  0C67  00E7               	movwf	??_sprintf^(0+128)
  9029  0C68  01E8               	clrf	(??_sprintf^(0+128)+1)
  9030  0C69  35E7               	lslf	??_sprintf^(0+128),f
  9031  0C6A  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9032  0C6B  35E7               	lslf	??_sprintf^(0+128),f
  9033  0C6C  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9034  0C6D  309A               	movlw	low (_dpowers| (0+32768))
  9035  0C6E  0767               	addwf	??_sprintf^(0+128),w
  9036  0C6F  0084               	movwf	4
  9037  0C70  30B0               	movlw	high (_dpowers| (0+32768))
  9038  0C71  3D68               	addwfc	(??_sprintf+1)^(0+128),w
  9039  0C72  0085               	movwf	5
  9040  0C73  3F00               	moviw [0]fsr0
  9041  0C74  00F2               	movwf	___lldiv@divisor
  9042  0C75  3F01               	moviw [1]fsr0
  9043  0C76  00F3               	movwf	___lldiv@divisor+1
  9044  0C77  3F02               	moviw [2]fsr0
  9045  0C78  00F4               	movwf	___lldiv@divisor+2
  9046  0C79  3F03               	moviw [3]fsr0
  9047  0C7A  00F5               	movwf	___lldiv@divisor+3
  9048  0C7B  0022               	movlb	2	; select bank2
  9049  0C7C  082C               	movf	(sprintf@val+3)^(0+256),w
  9050  0C7D  00F9               	movwf	___lldiv@dividend+3
  9051  0C7E  082B               	movf	(sprintf@val+2)^(0+256),w
  9052  0C7F  00F8               	movwf	___lldiv@dividend+2
  9053  0C80  082A               	movf	(sprintf@val+1)^(0+256),w
  9054  0C81  00F7               	movwf	___lldiv@dividend+1
  9055  0C82  0829               	movf	sprintf@val^(0+256),w
  9056  0C83  00F6               	movwf	___lldiv@dividend
  9057  0C84  31A2  222F  3188   	fcall	___lldiv
  9058  0C87  0875               	movf	?___lldiv+3,w
  9059  0C88  0022               	movlb	2	; select bank2
  9060  0C89  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9061  0C8A  0874               	movf	?___lldiv+2,w
  9062  0C8B  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9063  0C8C  0873               	movf	?___lldiv+1,w
  9064  0C8D  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9065  0C8E  0872               	movf	?___lldiv,w
  9066  0C8F  00A5               	movwf	sprintf@tmpval^(0+256)
  9067                           
  9068                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9069  0C90  3000               	movlw	0
  9070  0C91  0020               	movlb	0	; select bank0
  9071  0C92  00A9               	movwf	___llmod@divisor+3
  9072  0C93  3000               	movlw	0
  9073  0C94  00A8               	movwf	___llmod@divisor+2
  9074  0C95  3000               	movlw	0
  9075  0C96  00A7               	movwf	___llmod@divisor+1
  9076  0C97  300A               	movlw	10
  9077  0C98  00A6               	movwf	___llmod@divisor
  9078  0C99  0022               	movlb	2	; select bank2
  9079  0C9A  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9080  0C9B  0020               	movlb	0	; select bank0
  9081  0C9C  00AD               	movwf	___llmod@dividend+3
  9082  0C9D  0022               	movlb	2	; select bank2
  9083  0C9E  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9084  0C9F  0020               	movlb	0	; select bank0
  9085  0CA0  00AC               	movwf	___llmod@dividend+2
  9086  0CA1  0022               	movlb	2	; select bank2
  9087  0CA2  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9088  0CA3  0020               	movlb	0	; select bank0
  9089  0CA4  00AB               	movwf	___llmod@dividend+1
  9090  0CA5  0022               	movlb	2	; select bank2
  9091  0CA6  0825               	movf	sprintf@tmpval^(0+256),w
  9092  0CA7  0020               	movlb	0	; select bank0
  9093  0CA8  00AA               	movwf	___llmod@dividend
  9094  0CA9  31A0  20B4  3188   	fcall	___llmod
  9095  0CAC  0020               	movlb	0	; select bank0
  9096  0CAD  0829               	movf	?___llmod+3,w
  9097  0CAE  0022               	movlb	2	; select bank2
  9098  0CAF  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9099  0CB0  0020               	movlb	0	; select bank0
  9100  0CB1  0828               	movf	?___llmod+2,w
  9101  0CB2  0022               	movlb	2	; select bank2
  9102  0CB3  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9103  0CB4  0020               	movlb	0	; select bank0
  9104  0CB5  0827               	movf	?___llmod+1,w
  9105  0CB6  0022               	movlb	2	; select bank2
  9106  0CB7  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9107  0CB8  0020               	movlb	0	; select bank0
  9108  0CB9  0826               	movf	?___llmod,w
  9109  0CBA  0022               	movlb	2	; select bank2
  9110  0CBB  00A5               	movwf	sprintf@tmpval^(0+256)
  9111                           
  9112                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9113  0CBC  0825               	movf	sprintf@tmpval^(0+256),w
  9114  0CBD  3E30               	addlw	48
  9115  0CBE  0021               	movlb	1	; select bank1
  9116  0CBF  2C4E               	goto	L8
  9117  0CC0                     l6996:	
  9118                           ;doprnt.c: 1204: }
  9119                           ;doprnt.c: 1206: }
  9120                           ;doprnt.c: 1207: while(exp > 0) {
  9121                           
  9122                           
  9123                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9124  0CC0  3030               	movlw	48
  9125  0CC1  0021               	movlb	1	; select bank1
  9126  0CC2  00E7               	movwf	??_sprintf^(0+128)
  9127  0CC3  0022               	movlb	2	; select bank2
  9128  0CC4  0839               	movf	sprintf@sp^(0+256),w
  9129  0CC5  0086               	movwf	6
  9130  0CC6  3002               	movlw	2	; select bank4/5
  9131  0CC7  0087               	movwf	7
  9132  0CC8  0021               	movlb	1	; select bank1
  9133  0CC9  0867               	movf	??_sprintf^(0+128),w
  9134  0CCA  0081               	movwf	1
  9135  0CCB  3001               	movlw	1
  9136  0CCC  00E7               	movwf	??_sprintf^(0+128)
  9137  0CCD  0867               	movf	??_sprintf^(0+128),w
  9138  0CCE  0022               	movlb	2	; select bank2
  9139  0CCF  07B9               	addwf	sprintf@sp^(0+256),f
  9140                           
  9141                           ;doprnt.c: 1209: exp--;
  9142  0CD0  30FF               	movlw	255
  9143  0CD1  07AD               	addwf	sprintf@exp^(0+256),f
  9144  0CD2  30FF               	movlw	255
  9145  0CD3  3DAE               	addwfc	(sprintf@exp+1)^(0+256),f
  9146  0CD4                     l7002:	
  9147  0CD4  082E               	movf	(sprintf@exp+1)^(0+256),w
  9148  0CD5  3A80               	xorlw	128
  9149  0CD6  0021               	movlb	1	; select bank1
  9150  0CD7  00E7               	movwf	??_sprintf^(0+128)
  9151  0CD8  3080               	movlw	128
  9152  0CD9  0267               	subwf	??_sprintf^(0+128),w
  9153  0CDA  1D03               	skipz
  9154  0CDB  2CDF               	goto	u9775
  9155  0CDC  3001               	movlw	1
  9156  0CDD  0022               	movlb	2	; select bank2
  9157  0CDE  022D               	subwf	sprintf@exp^(0+256),w
  9158  0CDF                     u9775:	
  9159  0CDF  1803               	skipnc
  9160  0CE0  2CC0               	goto	l6996
  9161                           
  9162                           ;doprnt.c: 1210: }
  9163                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9164  0CE1  0022               	movlb	2	; select bank2
  9165  0CE2  0838               	movf	(sprintf@prec+1)^(0+256),w
  9166  0CE3  3A80               	xorlw	128
  9167  0CE4  0021               	movlb	1	; select bank1
  9168  0CE5  00E7               	movwf	??_sprintf^(0+128)
  9169  0CE6  3080               	movlw	128
  9170  0CE7  0267               	subwf	??_sprintf^(0+128),w
  9171  0CE8  1D03               	skipz
  9172  0CE9  2CED               	goto	u9785
  9173  0CEA  3009               	movlw	9
  9174  0CEB  0022               	movlb	2	; select bank2
  9175  0CEC  0237               	subwf	sprintf@prec^(0+256),w
  9176  0CED                     u9785:	
  9177  0CED  1C03               	skipc
  9178  0CEE  2CF1               	goto	l7008
  9179                           
  9180                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9181  0CEF  3008               	movlw	8
  9182  0CF0  2CF3               	goto	L5
  9183  0CF1                     l7008:	
  9184                           
  9185                           ;doprnt.c: 1213: else
  9186                           ;doprnt.c: 1214: c = prec;
  9187  0CF1  0022               	movlb	2	; select bank2
  9188  0CF2  0837               	movf	sprintf@prec^(0+256),w
  9189  0CF3                     L5:	
  9190  0CF3  0021               	movlb	1	; select bank1
  9191  0CF4  00E7               	movwf	??_sprintf^(0+128)
  9192  0CF5  0867               	movf	??_sprintf^(0+128),w
  9193  0CF6  0022               	movlb	2	; select bank2
  9194  0CF7  00BA               	movwf	sprintf@c^(0+256)
  9195                           
  9196                           ;doprnt.c: 1215: prec -= c;
  9197  0CF8  083A               	movf	sprintf@c^(0+256),w
  9198  0CF9  0021               	movlb	1	; select bank1
  9199  0CFA  00E7               	movwf	??_sprintf^(0+128)
  9200  0CFB  01E8               	clrf	(??_sprintf^(0+128)+1)
  9201  0CFC  1BE7               	btfsc	??_sprintf^(0+128),7
  9202  0CFD  03E8               	decf	(??_sprintf^(0+128)+1),f
  9203  0CFE  0867               	movf	??_sprintf^(0+128),w
  9204  0CFF  0022               	movlb	2	; select bank2
  9205  0D00  02B7               	subwf	sprintf@prec^(0+256),f
  9206  0D01  0021               	movlb	1	; select bank1
  9207  0D02  0868               	movf	(??_sprintf+1)^(0+128),w
  9208  0D03  0022               	movlb	2	; select bank2
  9209  0D04  3BB8               	subwfb	(sprintf@prec+1)^(0+256),f
  9210                           
  9211                           ;doprnt.c: 1219: if(c)
  9212  0D05  083A               	movf	sprintf@c^(0+256),w
  9213  0D06  1903               	btfsc	3,2
  9214  0D07  2D18               	goto	l7016
  9215                           
  9216                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9217  0D08  302E               	movlw	46
  9218  0D09  0021               	movlb	1	; select bank1
  9219  0D0A  00E7               	movwf	??_sprintf^(0+128)
  9220  0D0B  0022               	movlb	2	; select bank2
  9221  0D0C  0839               	movf	sprintf@sp^(0+256),w
  9222  0D0D  0086               	movwf	6
  9223  0D0E  3002               	movlw	2	; select bank4/5
  9224  0D0F  0087               	movwf	7
  9225  0D10  0021               	movlb	1	; select bank1
  9226  0D11  0867               	movf	??_sprintf^(0+128),w
  9227  0D12  0081               	movwf	1
  9228  0D13  3001               	movlw	1
  9229  0D14  00E7               	movwf	??_sprintf^(0+128)
  9230  0D15  0867               	movf	??_sprintf^(0+128),w
  9231  0D16  0022               	movlb	2	; select bank2
  9232  0D17  07B9               	addwf	sprintf@sp^(0+256),f
  9233  0D18                     l7016:	
  9234                           
  9235                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9236  0D18  083A               	movf	sprintf@c^(0+256),w
  9237  0D19  3180  20B0  3188   	fcall	_scale
  9238  0D1C  0020               	movlb	0	; select bank0
  9239  0D1D  086F               	movf	?_scale+3,w
  9240  0D1E  0022               	movlb	2	; select bank2
  9241  0D1F  00A3               	movwf	(_sprintf$2115+3)^(0+256)
  9242  0D20  0020               	movlb	0	; select bank0
  9243  0D21  086E               	movf	?_scale+2,w
  9244  0D22  0022               	movlb	2	; select bank2
  9245  0D23  00A2               	movwf	(_sprintf$2115+2)^(0+256)
  9246  0D24  0020               	movlb	0	; select bank0
  9247  0D25  086D               	movf	?_scale+1,w
  9248  0D26  0022               	movlb	2	; select bank2
  9249  0D27  00A1               	movwf	(_sprintf$2115+1)^(0+256)
  9250  0D28  0020               	movlb	0	; select bank0
  9251  0D29  086C               	movf	?_scale,w
  9252  0D2A  0022               	movlb	2	; select bank2
  9253  0D2B  00A0               	movwf	_sprintf$2115^(0+256)
  9254                           
  9255                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9256  0D2C  0823               	movf	(_sprintf$2115+3)^(0+256),w
  9257  0D2D  0020               	movlb	0	; select bank0
  9258  0D2E  00D9               	movwf	___flmul@a+3
  9259  0D2F  0022               	movlb	2	; select bank2
  9260  0D30  0822               	movf	(_sprintf$2115+2)^(0+256),w
  9261  0D31  0020               	movlb	0	; select bank0
  9262  0D32  00D8               	movwf	___flmul@a+2
  9263  0D33  0022               	movlb	2	; select bank2
  9264  0D34  0821               	movf	(_sprintf$2115+1)^(0+256),w
  9265  0D35  0020               	movlb	0	; select bank0
  9266  0D36  00D7               	movwf	___flmul@a+1
  9267  0D37  0022               	movlb	2	; select bank2
  9268  0D38  0820               	movf	_sprintf$2115^(0+256),w
  9269  0D39  0020               	movlb	0	; select bank0
  9270  0D3A  00D6               	movwf	___flmul@a
  9271  0D3B  0022               	movlb	2	; select bank2
  9272  0D3C  0836               	movf	(sprintf@fval+3)^(0+256),w
  9273  0D3D  0020               	movlb	0	; select bank0
  9274  0D3E  00D5               	movwf	___flmul@b+3
  9275  0D3F  0022               	movlb	2	; select bank2
  9276  0D40  0835               	movf	(sprintf@fval+2)^(0+256),w
  9277  0D41  0020               	movlb	0	; select bank0
  9278  0D42  00D4               	movwf	___flmul@b+2
  9279  0D43  0022               	movlb	2	; select bank2
  9280  0D44  0834               	movf	(sprintf@fval+1)^(0+256),w
  9281  0D45  0020               	movlb	0	; select bank0
  9282  0D46  00D3               	movwf	___flmul@b+1
  9283  0D47  0022               	movlb	2	; select bank2
  9284  0D48  0833               	movf	sprintf@fval^(0+256),w
  9285  0D49  0020               	movlb	0	; select bank0
  9286  0D4A  00D2               	movwf	___flmul@b
  9287  0D4B  3183  23D5  3188   	fcall	___flmul
  9288  0D4E  0020               	movlb	0	; select bank0
  9289  0D4F  0855               	movf	?___flmul+3,w
  9290  0D50  0021               	movlb	1	; select bank1
  9291  0D51  00B8               	movwf	(___fltol@f1+3)^(0+128)
  9292  0D52  0020               	movlb	0	; select bank0
  9293  0D53  0854               	movf	?___flmul+2,w
  9294  0D54  0021               	movlb	1	; select bank1
  9295  0D55  00B7               	movwf	(___fltol@f1+2)^(0+128)
  9296  0D56  0020               	movlb	0	; select bank0
  9297  0D57  0853               	movf	?___flmul+1,w
  9298  0D58  0021               	movlb	1	; select bank1
  9299  0D59  00B6               	movwf	(___fltol@f1+1)^(0+128)
  9300  0D5A  0020               	movlb	0	; select bank0
  9301  0D5B  0852               	movf	?___flmul,w
  9302  0D5C  0021               	movlb	1	; select bank1
  9303  0D5D  00B5               	movwf	___fltol@f1^(0+128)
  9304  0D5E  31A3  2385  3188   	fcall	___fltol
  9305  0D61  0021               	movlb	1	; select bank1
  9306  0D62  0838               	movf	(?___fltol+3)^(0+128),w
  9307  0D63  0022               	movlb	2	; select bank2
  9308  0D64  00AC               	movwf	(sprintf@val+3)^(0+256)
  9309  0D65  0021               	movlb	1	; select bank1
  9310  0D66  0837               	movf	(?___fltol+2)^(0+128),w
  9311  0D67  0022               	movlb	2	; select bank2
  9312  0D68  00AB               	movwf	(sprintf@val+2)^(0+256)
  9313  0D69  0021               	movlb	1	; select bank1
  9314  0D6A  0836               	movf	(?___fltol+1)^(0+128),w
  9315  0D6B  0022               	movlb	2	; select bank2
  9316  0D6C  00AA               	movwf	(sprintf@val+1)^(0+256)
  9317  0D6D  0021               	movlb	1	; select bank1
  9318  0D6E  0835               	movf	?___fltol^(0+128),w
  9319  0D6F                     L6:	
  9320  0D6F  0022               	movlb	2	; select bank2
  9321  0D70  00A9               	movwf	sprintf@val^(0+256)
  9322  0D71  30FF               	movlw	255
  9323  0D72  0021               	movlb	1	; select bank1
  9324  0D73  00E7               	movwf	??_sprintf^(0+128)
  9325  0D74  0867               	movf	??_sprintf^(0+128),w
  9326  0D75  0022               	movlb	2	; select bank2
  9327  0D76  07BA               	addwf	sprintf@c^(0+256),f
  9328  0D77  0A3A               	incf	sprintf@c^(0+256),w
  9329  0D78  1903               	btfsc	3,2
  9330  0D79  2E2F               	goto	l7038
  9331                           
  9332                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9333                           
  9334                           ;doprnt.c: 1228: while(c--) {
  9335  0D7A  083A               	movf	sprintf@c^(0+256),w
  9336  0D7B  0021               	movlb	1	; select bank1
  9337  0D7C  00E7               	movwf	??_sprintf^(0+128)
  9338  0D7D  01E8               	clrf	(??_sprintf^(0+128)+1)
  9339  0D7E  35E7               	lslf	??_sprintf^(0+128),f
  9340  0D7F  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9341  0D80  35E7               	lslf	??_sprintf^(0+128),f
  9342  0D81  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9343  0D82  309A               	movlw	low (_dpowers| (0+32768))
  9344  0D83  0767               	addwf	??_sprintf^(0+128),w
  9345  0D84  0084               	movwf	4
  9346  0D85  30B0               	movlw	high (_dpowers| (0+32768))
  9347  0D86  3D68               	addwfc	(??_sprintf+1)^(0+128),w
  9348  0D87  0085               	movwf	5
  9349  0D88  3F00               	moviw [0]fsr0
  9350  0D89  00F2               	movwf	___lldiv@divisor
  9351  0D8A  3F01               	moviw [1]fsr0
  9352  0D8B  00F3               	movwf	___lldiv@divisor+1
  9353  0D8C  3F02               	moviw [2]fsr0
  9354  0D8D  00F4               	movwf	___lldiv@divisor+2
  9355  0D8E  3F03               	moviw [3]fsr0
  9356  0D8F  00F5               	movwf	___lldiv@divisor+3
  9357  0D90  0022               	movlb	2	; select bank2
  9358  0D91  082C               	movf	(sprintf@val+3)^(0+256),w
  9359  0D92  00F9               	movwf	___lldiv@dividend+3
  9360  0D93  082B               	movf	(sprintf@val+2)^(0+256),w
  9361  0D94  00F8               	movwf	___lldiv@dividend+2
  9362  0D95  082A               	movf	(sprintf@val+1)^(0+256),w
  9363  0D96  00F7               	movwf	___lldiv@dividend+1
  9364  0D97  0829               	movf	sprintf@val^(0+256),w
  9365  0D98  00F6               	movwf	___lldiv@dividend
  9366  0D99  31A2  222F  3188   	fcall	___lldiv
  9367  0D9C  0875               	movf	?___lldiv+3,w
  9368  0D9D  0022               	movlb	2	; select bank2
  9369  0D9E  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9370  0D9F  0874               	movf	?___lldiv+2,w
  9371  0DA0  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9372  0DA1  0873               	movf	?___lldiv+1,w
  9373  0DA2  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9374  0DA3  0872               	movf	?___lldiv,w
  9375  0DA4  00A5               	movwf	sprintf@tmpval^(0+256)
  9376                           
  9377                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9378  0DA5  3000               	movlw	0
  9379  0DA6  0020               	movlb	0	; select bank0
  9380  0DA7  00A9               	movwf	___llmod@divisor+3
  9381  0DA8  3000               	movlw	0
  9382  0DA9  00A8               	movwf	___llmod@divisor+2
  9383  0DAA  3000               	movlw	0
  9384  0DAB  00A7               	movwf	___llmod@divisor+1
  9385  0DAC  300A               	movlw	10
  9386  0DAD  00A6               	movwf	___llmod@divisor
  9387  0DAE  0022               	movlb	2	; select bank2
  9388  0DAF  0828               	movf	(sprintf@tmpval+3)^(0+256),w
  9389  0DB0  0020               	movlb	0	; select bank0
  9390  0DB1  00AD               	movwf	___llmod@dividend+3
  9391  0DB2  0022               	movlb	2	; select bank2
  9392  0DB3  0827               	movf	(sprintf@tmpval+2)^(0+256),w
  9393  0DB4  0020               	movlb	0	; select bank0
  9394  0DB5  00AC               	movwf	___llmod@dividend+2
  9395  0DB6  0022               	movlb	2	; select bank2
  9396  0DB7  0826               	movf	(sprintf@tmpval+1)^(0+256),w
  9397  0DB8  0020               	movlb	0	; select bank0
  9398  0DB9  00AB               	movwf	___llmod@dividend+1
  9399  0DBA  0022               	movlb	2	; select bank2
  9400  0DBB  0825               	movf	sprintf@tmpval^(0+256),w
  9401  0DBC  0020               	movlb	0	; select bank0
  9402  0DBD  00AA               	movwf	___llmod@dividend
  9403  0DBE  31A0  20B4  3188   	fcall	___llmod
  9404  0DC1  0020               	movlb	0	; select bank0
  9405  0DC2  0829               	movf	?___llmod+3,w
  9406  0DC3  0022               	movlb	2	; select bank2
  9407  0DC4  00A8               	movwf	(sprintf@tmpval+3)^(0+256)
  9408  0DC5  0020               	movlb	0	; select bank0
  9409  0DC6  0828               	movf	?___llmod+2,w
  9410  0DC7  0022               	movlb	2	; select bank2
  9411  0DC8  00A7               	movwf	(sprintf@tmpval+2)^(0+256)
  9412  0DC9  0020               	movlb	0	; select bank0
  9413  0DCA  0827               	movf	?___llmod+1,w
  9414  0DCB  0022               	movlb	2	; select bank2
  9415  0DCC  00A6               	movwf	(sprintf@tmpval+1)^(0+256)
  9416  0DCD  0020               	movlb	0	; select bank0
  9417  0DCE  0826               	movf	?___llmod,w
  9418  0DCF  0022               	movlb	2	; select bank2
  9419  0DD0  00A5               	movwf	sprintf@tmpval^(0+256)
  9420                           
  9421                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9422  0DD1  0825               	movf	sprintf@tmpval^(0+256),w
  9423  0DD2  3E30               	addlw	48
  9424  0DD3  0021               	movlb	1	; select bank1
  9425  0DD4  00E7               	movwf	??_sprintf^(0+128)
  9426  0DD5  0022               	movlb	2	; select bank2
  9427  0DD6  0839               	movf	sprintf@sp^(0+256),w
  9428  0DD7  0086               	movwf	6
  9429  0DD8  3002               	movlw	2	; select bank4/5
  9430  0DD9  0087               	movwf	7
  9431  0DDA  0021               	movlb	1	; select bank1
  9432  0DDB  0867               	movf	??_sprintf^(0+128),w
  9433  0DDC  0081               	movwf	1
  9434  0DDD  3001               	movlw	1
  9435  0DDE  00E7               	movwf	??_sprintf^(0+128)
  9436  0DDF  0867               	movf	??_sprintf^(0+128),w
  9437  0DE0  0022               	movlb	2	; select bank2
  9438  0DE1  07B9               	addwf	sprintf@sp^(0+256),f
  9439                           
  9440                           ;doprnt.c: 1232: val %= dpowers[c];
  9441  0DE2  083A               	movf	sprintf@c^(0+256),w
  9442  0DE3  0021               	movlb	1	; select bank1
  9443  0DE4  00E7               	movwf	??_sprintf^(0+128)
  9444  0DE5  01E8               	clrf	(??_sprintf^(0+128)+1)
  9445  0DE6  35E7               	lslf	??_sprintf^(0+128),f
  9446  0DE7  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9447  0DE8  35E7               	lslf	??_sprintf^(0+128),f
  9448  0DE9  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9449  0DEA  309A               	movlw	low (_dpowers| (0+32768))
  9450  0DEB  0767               	addwf	??_sprintf^(0+128),w
  9451  0DEC  0084               	movwf	4
  9452  0DED  30B0               	movlw	high (_dpowers| (0+32768))
  9453  0DEE  3D68               	addwfc	(??_sprintf+1)^(0+128),w
  9454  0DEF  0085               	movwf	5
  9455  0DF0  3F00               	moviw [0]fsr0
  9456  0DF1  0020               	movlb	0	; select bank0
  9457  0DF2  00A6               	movwf	___llmod@divisor
  9458  0DF3  3F01               	moviw [1]fsr0
  9459  0DF4  00A7               	movwf	___llmod@divisor+1
  9460  0DF5  3F02               	moviw [2]fsr0
  9461  0DF6  00A8               	movwf	___llmod@divisor+2
  9462  0DF7  3F03               	moviw [3]fsr0
  9463  0DF8  00A9               	movwf	___llmod@divisor+3
  9464  0DF9  0022               	movlb	2	; select bank2
  9465  0DFA  082C               	movf	(sprintf@val+3)^(0+256),w
  9466  0DFB  0020               	movlb	0	; select bank0
  9467  0DFC  00AD               	movwf	___llmod@dividend+3
  9468  0DFD  0022               	movlb	2	; select bank2
  9469  0DFE  082B               	movf	(sprintf@val+2)^(0+256),w
  9470  0DFF  0020               	movlb	0	; select bank0
  9471  0E00  00AC               	movwf	___llmod@dividend+2
  9472  0E01  0022               	movlb	2	; select bank2
  9473  0E02  082A               	movf	(sprintf@val+1)^(0+256),w
  9474  0E03  0020               	movlb	0	; select bank0
  9475  0E04  00AB               	movwf	___llmod@dividend+1
  9476  0E05  0022               	movlb	2	; select bank2
  9477  0E06  0829               	movf	sprintf@val^(0+256),w
  9478  0E07  0020               	movlb	0	; select bank0
  9479  0E08  00AA               	movwf	___llmod@dividend
  9480  0E09  31A0  20B4  3188   	fcall	___llmod
  9481  0E0C  0020               	movlb	0	; select bank0
  9482  0E0D  0829               	movf	?___llmod+3,w
  9483  0E0E  0022               	movlb	2	; select bank2
  9484  0E0F  00AC               	movwf	(sprintf@val+3)^(0+256)
  9485  0E10  0020               	movlb	0	; select bank0
  9486  0E11  0828               	movf	?___llmod+2,w
  9487  0E12  0022               	movlb	2	; select bank2
  9488  0E13  00AB               	movwf	(sprintf@val+2)^(0+256)
  9489  0E14  0020               	movlb	0	; select bank0
  9490  0E15  0827               	movf	?___llmod+1,w
  9491  0E16  0022               	movlb	2	; select bank2
  9492  0E17  00AA               	movwf	(sprintf@val+1)^(0+256)
  9493  0E18  0020               	movlb	0	; select bank0
  9494  0E19  0826               	movf	?___llmod,w
  9495  0E1A  2D6F               	goto	L6
  9496  0E1B                     l7032:	
  9497                           ;doprnt.c: 1233: }
  9498                           ;doprnt.c: 1235: while(prec) {
  9499                           
  9500                           
  9501                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  9502  0E1B  3030               	movlw	48
  9503  0E1C  0021               	movlb	1	; select bank1
  9504  0E1D  00E7               	movwf	??_sprintf^(0+128)
  9505  0E1E  0022               	movlb	2	; select bank2
  9506  0E1F  0839               	movf	sprintf@sp^(0+256),w
  9507  0E20  0086               	movwf	6
  9508  0E21  3002               	movlw	2	; select bank4/5
  9509  0E22  0087               	movwf	7
  9510  0E23  0021               	movlb	1	; select bank1
  9511  0E24  0867               	movf	??_sprintf^(0+128),w
  9512  0E25  0081               	movwf	1
  9513  0E26  3001               	movlw	1
  9514  0E27  00E7               	movwf	??_sprintf^(0+128)
  9515  0E28  0867               	movf	??_sprintf^(0+128),w
  9516  0E29  0022               	movlb	2	; select bank2
  9517  0E2A  07B9               	addwf	sprintf@sp^(0+256),f
  9518                           
  9519                           ;doprnt.c: 1237: prec--;
  9520  0E2B  30FF               	movlw	255
  9521  0E2C  07B7               	addwf	sprintf@prec^(0+256),f
  9522  0E2D  30FF               	movlw	255
  9523  0E2E  3DB8               	addwfc	(sprintf@prec+1)^(0+256),f
  9524  0E2F                     l7038:	
  9525  0E2F  0837               	movf	sprintf@prec^(0+256),w
  9526  0E30  0438               	iorwf	(sprintf@prec+1)^(0+256),w
  9527  0E31  1903               	btfsc	3,2
  9528  0E32  2813               	goto	l7132
  9529  0E33  2E1B               	goto	l7032
  9530  0E34                     l7040:	
  9531                           ;doprnt.c: 1238: }
  9532                           ;doprnt.c: 1245: continue;
  9533                           
  9534                           
  9535                           ;doprnt.c: 1246: }
  9536                           ;doprnt.c: 1253: {
  9537                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  9538  0E34  0022               	movlb	2	; select bank2
  9539  0E35  0824               	movf	sprintf@ap^(0+256),w
  9540  0E36  0086               	movwf	6
  9541  0E37  0187               	clrf	7
  9542  0E38  3F40               	moviw [0]fsr1
  9543  0E39  0021               	movlb	1	; select bank1
  9544  0E3A  00E7               	movwf	??_sprintf^(0+128)
  9545  0E3B  3F41               	moviw [1]fsr1
  9546  0E3C  00E8               	movwf	(??_sprintf^(0+128)+1)
  9547  0E3D  0867               	movf	??_sprintf^(0+128),w
  9548  0E3E  0022               	movlb	2	; select bank2
  9549  0E3F  00A9               	movwf	sprintf@val^(0+256)
  9550  0E40  0021               	movlb	1	; select bank1
  9551  0E41  0868               	movf	(??_sprintf+1)^(0+128),w
  9552  0E42  0022               	movlb	2	; select bank2
  9553  0E43  00AA               	movwf	(sprintf@val+1)^(0+256)
  9554  0E44  0D89               	rlf	9,f
  9555  0E45  3B89               	subwfb	9,f
  9556  0E46  0989               	comf	9,f
  9557  0E47  00AB               	movwf	(sprintf@val+2)^(0+256)
  9558  0E48  00AC               	movwf	(sprintf@val+3)^(0+256)
  9559  0E49  3002               	movlw	2
  9560  0E4A  0021               	movlb	1	; select bank1
  9561  0E4B  00E7               	movwf	??_sprintf^(0+128)
  9562  0E4C  0867               	movf	??_sprintf^(0+128),w
  9563  0E4D  0022               	movlb	2	; select bank2
  9564  0E4E  07A4               	addwf	sprintf@ap^(0+256),f
  9565                           
  9566                           ;doprnt.c: 1261: if((long)val < 0) {
  9567  0E4F  1FAC               	btfss	(sprintf@val+3)^(0+256),7
  9568  0E50  2E60               	goto	l7050
  9569                           
  9570                           ;doprnt.c: 1262: flag |= 0x03;
  9571  0E51  3003               	movlw	3
  9572  0E52  04AF               	iorwf	sprintf@flag^(0+256),f
  9573  0E53  3000               	movlw	0
  9574  0E54  04B0               	iorwf	(sprintf@flag+1)^(0+256),f
  9575                           
  9576                           ;doprnt.c: 1263: val = -val;
  9577  0E55  09A9               	comf	sprintf@val^(0+256),f
  9578  0E56  09AA               	comf	(sprintf@val+1)^(0+256),f
  9579  0E57  09AB               	comf	(sprintf@val+2)^(0+256),f
  9580  0E58  09AC               	comf	(sprintf@val+3)^(0+256),f
  9581  0E59  0AA9               	incf	sprintf@val^(0+256),f
  9582  0E5A  1903               	skipnz
  9583  0E5B  0AAA               	incf	(sprintf@val+1)^(0+256),f
  9584  0E5C  1903               	skipnz
  9585  0E5D  0AAB               	incf	(sprintf@val+2)^(0+256),f
  9586  0E5E  1903               	skipnz
  9587  0E5F  0AAC               	incf	(sprintf@val+3)^(0+256),f
  9588  0E60                     l7050:	
  9589                           
  9590                           ;doprnt.c: 1264: }
  9591                           ;doprnt.c: 1266: }
  9592                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  9593  0E60  0837               	movf	sprintf@prec^(0+256),w
  9594  0E61  0438               	iorwf	(sprintf@prec+1)^(0+256),w
  9595  0E62  1D03               	btfss	3,2
  9596  0E63  2E6E               	goto	l7056
  9597  0E64  082C               	movf	(sprintf@val+3)^(0+256),w
  9598  0E65  042B               	iorwf	(sprintf@val+2)^(0+256),w
  9599  0E66  042A               	iorwf	(sprintf@val+1)^(0+256),w
  9600  0E67  0429               	iorwf	sprintf@val^(0+256),w
  9601  0E68  1D03               	skipz
  9602  0E69  2E6E               	goto	l7056
  9603                           
  9604                           ;doprnt.c: 1291: prec++;
  9605  0E6A  3001               	movlw	1
  9606  0E6B  07B7               	addwf	sprintf@prec^(0+256),f
  9607  0E6C  3000               	movlw	0
  9608  0E6D  3DB8               	addwfc	(sprintf@prec+1)^(0+256),f
  9609  0E6E                     l7056:	
  9610                           
  9611                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  9612  0E6E  01BA               	clrf	sprintf@c^(0+256)
  9613  0E6F  0ABA               	incf	sprintf@c^(0+256),f
  9614  0E70  300A               	movlw	10
  9615  0E71  063A               	xorwf	sprintf@c^(0+256),w
  9616  0E72  1903               	btfsc	3,2
  9617  0E73  2EAB               	goto	l7068
  9618  0E74                     l7062:	
  9619                           
  9620                           ;doprnt.c: 1306: if(val < dpowers[c])
  9621  0E74  083A               	movf	sprintf@c^(0+256),w
  9622  0E75  0021               	movlb	1	; select bank1
  9623  0E76  00E7               	movwf	??_sprintf^(0+128)
  9624  0E77  01E8               	clrf	(??_sprintf^(0+128)+1)
  9625  0E78  35E7               	lslf	??_sprintf^(0+128),f
  9626  0E79  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9627  0E7A  35E7               	lslf	??_sprintf^(0+128),f
  9628  0E7B  0DE8               	rlf	(??_sprintf^(0+128)+1),f
  9629  0E7C  309A               	movlw	low (_dpowers| (0+32768))
  9630  0E7D  0767               	addwf	??_sprintf^(0+128),w
  9631  0E7E  0084               	movwf	4
  9632  0E7F  30B0               	movlw	high (_dpowers| (0+32768))
  9633  0E80  3D68               	addwfc	(??_sprintf+1)^(0+128),w
  9634  0E81  0085               	movwf	5
  9635  0E82  3F00               	moviw [0]fsr0
  9636  0E83  00E9               	movwf	(??_sprintf+2)^(0+128)
  9637  0E84  3F01               	moviw [1]fsr0
  9638  0E85  00EA               	movwf	((??_sprintf+2)^(0+128)+1)
  9639  0E86  3F02               	moviw [2]fsr0
  9640  0E87  00EB               	movwf	((??_sprintf+2)^(0+128)+2)
  9641  0E88  3F03               	moviw [3]fsr0
  9642  0E89  00EC               	movwf	((??_sprintf+2)^(0+128)+3)
  9643  0E8A  086C               	movf	(??_sprintf+5)^(0+128),w
  9644  0E8B  0022               	movlb	2	; select bank2
  9645  0E8C  022C               	subwf	(sprintf@val+3)^(0+256),w
  9646  0E8D  1D03               	skipz
  9647  0E8E  2E9F               	goto	u9865
  9648  0E8F  0021               	movlb	1	; select bank1
  9649  0E90  086B               	movf	(??_sprintf+4)^(0+128),w
  9650  0E91  0022               	movlb	2	; select bank2
  9651  0E92  022B               	subwf	(sprintf@val+2)^(0+256),w
  9652  0E93  1D03               	skipz
  9653  0E94  2E9F               	goto	u9865
  9654  0E95  0021               	movlb	1	; select bank1
  9655  0E96  086A               	movf	(??_sprintf+3)^(0+128),w
  9656  0E97  0022               	movlb	2	; select bank2
  9657  0E98  022A               	subwf	(sprintf@val+1)^(0+256),w
  9658  0E99  1D03               	skipz
  9659  0E9A  2E9F               	goto	u9865
  9660  0E9B  0021               	movlb	1	; select bank1
  9661  0E9C  0869               	movf	(??_sprintf+2)^(0+128),w
  9662  0E9D  0022               	movlb	2	; select bank2
  9663  0E9E  0229               	subwf	sprintf@val^(0+256),w
  9664  0E9F                     u9865:	
  9665  0E9F  1C03               	btfss	3,0
  9666  0EA0  2EAB               	goto	l7068
  9667                           
  9668                           ;doprnt.c: 1307: break;
  9669  0EA1  3001               	movlw	1
  9670  0EA2  0021               	movlb	1	; select bank1
  9671  0EA3  00E7               	movwf	??_sprintf^(0+128)
  9672  0EA4  0867               	movf	??_sprintf^(0+128),w
  9673  0EA5  0022               	movlb	2	; select bank2
  9674  0EA6  07BA               	addwf	sprintf@c^(0+256),f
  9675  0EA7  300A               	movlw	10
  9676  0EA8  063A               	xorwf	sprintf@c^(0+256),w
  9677  0EA9  1D03               	btfss	3,2
  9678  0EAA  2E74               	goto	l7062
  9679  0EAB                     l7068:	
  9680                           
  9681                           ;doprnt.c: 1339: if(c < prec)
  9682  0EAB  083A               	movf	sprintf@c^(0+256),w
  9683  0EAC  0021               	movlb	1	; select bank1
  9684  0EAD  00E7               	movwf	??_sprintf^(0+128)
  9685  0EAE  01E8               	clrf	(??_sprintf^(0+128)+1)
  9686  0EAF  1BE7               	btfsc	??_sprintf^(0+128),7
  9687  0EB0  03E8               	decf	(??_sprintf^(0+128)+1),f
  9688  0EB1  0868               	movf	(??_sprintf+1)^(0+128),w
  9689  0EB2  3A80               	xorlw	128
  9690  0EB3  00E9               	movwf	(??_sprintf+2)^(0+128)
  9691  0EB4  0022               	movlb	2	; select bank2
  9692  0EB5  0838               	movf	(sprintf@prec+1)^(0+256),w
  9693  0EB6  3A80               	xorlw	128
  9694  0EB7  0021               	movlb	1	; select bank1
  9695  0EB8  0269               	subwf	(??_sprintf+2)^(0+128),w
  9696  0EB9  1D03               	skipz
  9697  0EBA  2EBF               	goto	u9885
  9698  0EBB  0022               	movlb	2	; select bank2
  9699  0EBC  0837               	movf	sprintf@prec^(0+256),w
  9700  0EBD  0021               	movlb	1	; select bank1
  9701  0EBE  0267               	subwf	??_sprintf^(0+128),w
  9702  0EBF                     u9885:	
  9703  0EBF  1803               	skipnc
  9704  0EC0  2EC9               	goto	l7072
  9705                           
  9706                           ;doprnt.c: 1340: c = prec;
  9707  0EC1  0022               	movlb	2	; select bank2
  9708  0EC2  0837               	movf	sprintf@prec^(0+256),w
  9709  0EC3  0021               	movlb	1	; select bank1
  9710  0EC4  00E7               	movwf	??_sprintf^(0+128)
  9711  0EC5  0867               	movf	??_sprintf^(0+128),w
  9712  0EC6  0022               	movlb	2	; select bank2
  9713  0EC7  00BA               	movwf	sprintf@c^(0+256)
  9714  0EC8  2EE5               	goto	l841
  9715  0EC9                     l7072:	
  9716                           
  9717                           ;doprnt.c: 1341: else if(prec < c)
  9718  0EC9  0022               	movlb	2	; select bank2
  9719  0ECA  083A               	movf	sprintf@c^(0+256),w
  9720  0ECB  0021               	movlb	1	; select bank1
  9721  0ECC  00E7               	movwf	??_sprintf^(0+128)
  9722  0ECD  01E8               	clrf	(??_sprintf^(0+128)+1)
  9723  0ECE  1BE7               	btfsc	??_sprintf^(0+128),7
  9724  0ECF  03E8               	decf	(??_sprintf^(0+128)+1),f
  9725  0ED0  0022               	movlb	2	; select bank2
  9726  0ED1  0838               	movf	(sprintf@prec+1)^(0+256),w
  9727  0ED2  3A80               	xorlw	128
  9728  0ED3  0021               	movlb	1	; select bank1
  9729  0ED4  00E9               	movwf	(??_sprintf+2)^(0+128)
  9730  0ED5  0868               	movf	(??_sprintf+1)^(0+128),w
  9731  0ED6  3A80               	xorlw	128
  9732  0ED7  0269               	subwf	(??_sprintf+2)^(0+128),w
  9733  0ED8  1D03               	skipz
  9734  0ED9  2EDD               	goto	u9895
  9735  0EDA  0867               	movf	??_sprintf^(0+128),w
  9736  0EDB  0022               	movlb	2	; select bank2
  9737  0EDC  0237               	subwf	sprintf@prec^(0+256),w
  9738  0EDD                     u9895:	
  9739  0EDD  1803               	skipnc
  9740  0EDE  2EE5               	goto	l841
  9741                           
  9742                           ;doprnt.c: 1342: prec = c;
  9743  0EDF  0022               	movlb	2	; select bank2
  9744  0EE0  083A               	movf	sprintf@c^(0+256),w
  9745  0EE1  00B7               	movwf	sprintf@prec^(0+256)
  9746  0EE2  01B8               	clrf	(sprintf@prec+1)^(0+256)
  9747  0EE3  1BB7               	btfsc	sprintf@prec^(0+256),7
  9748  0EE4  03B8               	decf	(sprintf@prec+1)^(0+256),f
  9749  0EE5                     l841:	
  9750                           
  9751                           ;doprnt.c: 1345: if(width && flag & 0x03)
  9752  0EE5  0022               	movlb	2	; select bank2
  9753  0EE6  0831               	movf	sprintf@width^(0+256),w
  9754  0EE7  0432               	iorwf	(sprintf@width+1)^(0+256),w
  9755  0EE8  1903               	btfsc	3,2
  9756  0EE9  2EFC               	goto	l7080
  9757  0EEA  3003               	movlw	3
  9758  0EEB  052F               	andwf	sprintf@flag^(0+256),w
  9759  0EEC  0021               	movlb	1	; select bank1
  9760  0EED  00E7               	movwf	??_sprintf^(0+128)
  9761  0EEE  3000               	movlw	0
  9762  0EEF  0022               	movlb	2	; select bank2
  9763  0EF0  0530               	andwf	(sprintf@flag+1)^(0+256),w
  9764  0EF1  0021               	movlb	1	; select bank1
  9765  0EF2  00E8               	movwf	(??_sprintf+1)^(0+128)
  9766  0EF3  0867               	movf	??_sprintf^(0+128),w
  9767  0EF4  0468               	iorwf	(??_sprintf^(0+128)+1),w
  9768  0EF5  1903               	btfsc	3,2
  9769  0EF6  2EFC               	goto	l7080
  9770                           
  9771                           ;doprnt.c: 1346: width--;
  9772  0EF7  30FF               	movlw	255
  9773  0EF8  0022               	movlb	2	; select bank2
  9774  0EF9  07B1               	addwf	sprintf@width^(0+256),f
  9775  0EFA  30FF               	movlw	255
  9776  0EFB  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9777  0EFC                     l7080:	
  9778                           
  9779                           ;doprnt.c: 1348: if(flag & 0x4000) {
  9780  0EFC  0022               	movlb	2	; select bank2
  9781  0EFD  1F30               	btfss	(sprintf@flag+1)^(0+256),6
  9782  0EFE  2F18               	goto	l7088
  9783                           
  9784                           ;doprnt.c: 1349: if(width > prec)
  9785  0EFF  0838               	movf	(sprintf@prec+1)^(0+256),w
  9786  0F00  3A80               	xorlw	128
  9787  0F01  0021               	movlb	1	; select bank1
  9788  0F02  00E7               	movwf	??_sprintf^(0+128)
  9789  0F03  0022               	movlb	2	; select bank2
  9790  0F04  0832               	movf	(sprintf@width+1)^(0+256),w
  9791  0F05  3A80               	xorlw	128
  9792  0F06  0021               	movlb	1	; select bank1
  9793  0F07  0267               	subwf	??_sprintf^(0+128),w
  9794  0F08  1D03               	skipz
  9795  0F09  2F0D               	goto	u9935
  9796  0F0A  0022               	movlb	2	; select bank2
  9797  0F0B  0831               	movf	sprintf@width^(0+256),w
  9798  0F0C  0237               	subwf	sprintf@prec^(0+256),w
  9799  0F0D                     u9935:	
  9800  0F0D  1803               	skipnc
  9801  0F0E  2F15               	goto	l7086
  9802                           
  9803                           ;doprnt.c: 1350: width -= prec;
  9804  0F0F  0022               	movlb	2	; select bank2
  9805  0F10  0837               	movf	sprintf@prec^(0+256),w
  9806  0F11  02B1               	subwf	sprintf@width^(0+256),f
  9807  0F12  0838               	movf	(sprintf@prec+1)^(0+256),w
  9808  0F13  3BB2               	subwfb	(sprintf@width+1)^(0+256),f
  9809  0F14  2F18               	goto	l7088
  9810  0F15                     l7086:	
  9811                           
  9812                           ;doprnt.c: 1351: else
  9813                           ;doprnt.c: 1352: width = 0;
  9814  0F15  0022               	movlb	2	; select bank2
  9815  0F16  01B1               	clrf	sprintf@width^(0+256)
  9816  0F17  01B2               	clrf	(sprintf@width+1)^(0+256)
  9817  0F18                     l7088:	
  9818                           
  9819                           ;doprnt.c: 1353: }
  9820                           ;doprnt.c: 1381: if(width > c)
  9821  0F18  083A               	movf	sprintf@c^(0+256),w
  9822  0F19  0021               	movlb	1	; select bank1
  9823  0F1A  00E7               	movwf	??_sprintf^(0+128)
  9824  0F1B  01E8               	clrf	(??_sprintf^(0+128)+1)
  9825  0F1C  1BE7               	btfsc	??_sprintf^(0+128),7
  9826  0F1D  03E8               	decf	(??_sprintf^(0+128)+1),f
  9827  0F1E  0868               	movf	(??_sprintf+1)^(0+128),w
  9828  0F1F  3A80               	xorlw	128
  9829  0F20  00E9               	movwf	(??_sprintf+2)^(0+128)
  9830  0F21  0022               	movlb	2	; select bank2
  9831  0F22  0832               	movf	(sprintf@width+1)^(0+256),w
  9832  0F23  3A80               	xorlw	128
  9833  0F24  0021               	movlb	1	; select bank1
  9834  0F25  0269               	subwf	(??_sprintf+2)^(0+128),w
  9835  0F26  1D03               	skipz
  9836  0F27  2F2C               	goto	u9945
  9837  0F28  0022               	movlb	2	; select bank2
  9838  0F29  0831               	movf	sprintf@width^(0+256),w
  9839  0F2A  0021               	movlb	1	; select bank1
  9840  0F2B  0267               	subwf	??_sprintf^(0+128),w
  9841  0F2C                     u9945:	
  9842  0F2C  1803               	skipnc
  9843  0F2D  2F3D               	goto	l7092
  9844                           
  9845                           ;doprnt.c: 1382: width -= c;
  9846  0F2E  0022               	movlb	2	; select bank2
  9847  0F2F  083A               	movf	sprintf@c^(0+256),w
  9848  0F30  0021               	movlb	1	; select bank1
  9849  0F31  00E7               	movwf	??_sprintf^(0+128)
  9850  0F32  01E8               	clrf	(??_sprintf^(0+128)+1)
  9851  0F33  1BE7               	btfsc	??_sprintf^(0+128),7
  9852  0F34  03E8               	decf	(??_sprintf^(0+128)+1),f
  9853  0F35  0867               	movf	??_sprintf^(0+128),w
  9854  0F36  0022               	movlb	2	; select bank2
  9855  0F37  02B1               	subwf	sprintf@width^(0+256),f
  9856  0F38  0021               	movlb	1	; select bank1
  9857  0F39  0868               	movf	(??_sprintf+1)^(0+128),w
  9858  0F3A  0022               	movlb	2	; select bank2
  9859  0F3B  3BB2               	subwfb	(sprintf@width+1)^(0+256),f
  9860  0F3C  2F40               	goto	l7094
  9861  0F3D                     l7092:	
  9862                           
  9863                           ;doprnt.c: 1383: else
  9864                           ;doprnt.c: 1384: width = 0;
  9865  0F3D  0022               	movlb	2	; select bank2
  9866  0F3E  01B1               	clrf	sprintf@width^(0+256)
  9867  0F3F  01B2               	clrf	(sprintf@width+1)^(0+256)
  9868  0F40                     l7094:	
  9869                           
  9870                           ;doprnt.c: 1387: if(flag & 0x04) {
  9871  0F40  1D2F               	btfss	sprintf@flag^(0+256),2
  9872  0F41  2F78               	goto	l7110
  9873                           
  9874                           ;doprnt.c: 1392: if(flag & 0x03)
  9875  0F42  3003               	movlw	3
  9876  0F43  052F               	andwf	sprintf@flag^(0+256),w
  9877  0F44  0021               	movlb	1	; select bank1
  9878  0F45  00E7               	movwf	??_sprintf^(0+128)
  9879  0F46  3000               	movlw	0
  9880  0F47  0022               	movlb	2	; select bank2
  9881  0F48  0530               	andwf	(sprintf@flag+1)^(0+256),w
  9882  0F49  0021               	movlb	1	; select bank1
  9883  0F4A  00E8               	movwf	(??_sprintf+1)^(0+128)
  9884  0F4B  0867               	movf	??_sprintf^(0+128),w
  9885  0F4C  0468               	iorwf	(??_sprintf^(0+128)+1),w
  9886  0F4D  1903               	btfsc	3,2
  9887  0F4E  2F5E               	goto	l7102
  9888                           
  9889                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  9890  0F4F  302D               	movlw	45
  9891  0F50  00E7               	movwf	??_sprintf^(0+128)
  9892  0F51  0022               	movlb	2	; select bank2
  9893  0F52  0839               	movf	sprintf@sp^(0+256),w
  9894  0F53  0086               	movwf	6
  9895  0F54  3002               	movlw	2	; select bank4/5
  9896  0F55  0087               	movwf	7
  9897  0F56  0021               	movlb	1	; select bank1
  9898  0F57  0867               	movf	??_sprintf^(0+128),w
  9899  0F58  0081               	movwf	1
  9900  0F59  3001               	movlw	1
  9901  0F5A  00E7               	movwf	??_sprintf^(0+128)
  9902  0F5B  0867               	movf	??_sprintf^(0+128),w
  9903  0F5C  0022               	movlb	2	; select bank2
  9904  0F5D  07B9               	addwf	sprintf@sp^(0+256),f
  9905  0F5E                     l7102:	
  9906                           
  9907                           ;doprnt.c: 1415: if(width)
  9908  0F5E  0022               	movlb	2	; select bank2
  9909  0F5F                     L7:	
  9910  0F5F  0831               	movf	sprintf@width^(0+256),w
  9911  0F60  0432               	iorwf	(sprintf@width+1)^(0+256),w
  9912  0F61  1903               	btfsc	3,2
  9913  0F62  2FB0               	goto	l7130
  9914                           
  9915                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  9916                           
  9917                           ;doprnt.c: 1416: do
  9918  0F63  3030               	movlw	48
  9919  0F64  0021               	movlb	1	; select bank1
  9920  0F65  00E7               	movwf	??_sprintf^(0+128)
  9921  0F66  0022               	movlb	2	; select bank2
  9922  0F67  0839               	movf	sprintf@sp^(0+256),w
  9923  0F68  0086               	movwf	6
  9924  0F69  3002               	movlw	2	; select bank4/5
  9925  0F6A  0087               	movwf	7
  9926  0F6B  0021               	movlb	1	; select bank1
  9927  0F6C  0867               	movf	??_sprintf^(0+128),w
  9928  0F6D  0081               	movwf	1
  9929  0F6E  3001               	movlw	1
  9930  0F6F  00E7               	movwf	??_sprintf^(0+128)
  9931  0F70  0867               	movf	??_sprintf^(0+128),w
  9932  0F71  0022               	movlb	2	; select bank2
  9933  0F72  07B9               	addwf	sprintf@sp^(0+256),f
  9934                           
  9935                           ;doprnt.c: 1418: while(--width);
  9936  0F73  30FF               	movlw	255
  9937  0F74  07B1               	addwf	sprintf@width^(0+256),f
  9938  0F75  30FF               	movlw	255
  9939  0F76  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9940  0F77  2F5F               	goto	L7
  9941  0F78                     l7110:	
  9942                           ;doprnt.c: 1420: } else
  9943                           
  9944                           
  9945                           ;doprnt.c: 1422: {
  9946                           ;doprnt.c: 1424: if(width
  9947                           ;doprnt.c: 1428: )
  9948  0F78  0831               	movf	sprintf@width^(0+256),w
  9949  0F79  0432               	iorwf	(sprintf@width+1)^(0+256),w
  9950  0F7A  1903               	btfsc	3,2
  9951  0F7B  2F94               	goto	l7118
  9952  0F7C                     l7112:	
  9953                           ;doprnt.c: 1429: do
  9954                           
  9955                           
  9956                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  9957  0F7C  3020               	movlw	32
  9958  0F7D  0021               	movlb	1	; select bank1
  9959  0F7E  00E7               	movwf	??_sprintf^(0+128)
  9960  0F7F  0022               	movlb	2	; select bank2
  9961  0F80  0839               	movf	sprintf@sp^(0+256),w
  9962  0F81  0086               	movwf	6
  9963  0F82  3002               	movlw	2	; select bank4/5
  9964  0F83  0087               	movwf	7
  9965  0F84  0021               	movlb	1	; select bank1
  9966  0F85  0867               	movf	??_sprintf^(0+128),w
  9967  0F86  0081               	movwf	1
  9968  0F87  3001               	movlw	1
  9969  0F88  00E7               	movwf	??_sprintf^(0+128)
  9970  0F89  0867               	movf	??_sprintf^(0+128),w
  9971  0F8A  0022               	movlb	2	; select bank2
  9972  0F8B  07B9               	addwf	sprintf@sp^(0+256),f
  9973                           
  9974                           ;doprnt.c: 1431: while(--width);
  9975  0F8C  30FF               	movlw	255
  9976  0F8D  07B1               	addwf	sprintf@width^(0+256),f
  9977  0F8E  30FF               	movlw	255
  9978  0F8F  3DB2               	addwfc	(sprintf@width+1)^(0+256),f
  9979  0F90  0831               	movf	sprintf@width^(0+256),w
  9980  0F91  0432               	iorwf	(sprintf@width+1)^(0+256),w
  9981  0F92  1D03               	btfss	3,2
  9982  0F93  2F7C               	goto	l7112
  9983  0F94                     l7118:	
  9984                           
  9985                           ;doprnt.c: 1438: if(flag & 0x03)
  9986  0F94  3003               	movlw	3
  9987  0F95  052F               	andwf	sprintf@flag^(0+256),w
  9988  0F96  0021               	movlb	1	; select bank1
  9989  0F97  00E7               	movwf	??_sprintf^(0+128)
  9990  0F98  3000               	movlw	0
  9991  0F99  0022               	movlb	2	; select bank2
  9992  0F9A  0530               	andwf	(sprintf@flag+1)^(0+256),w
  9993  0F9B  0021               	movlb	1	; select bank1
  9994  0F9C  00E8               	movwf	(??_sprintf+1)^(0+128)
  9995  0F9D  0867               	movf	??_sprintf^(0+128),w
  9996  0F9E  0468               	iorwf	(??_sprintf^(0+128)+1),w
  9997  0F9F  1903               	btfsc	3,2
  9998  0FA0  2FB0               	goto	l7130
  9999                           
 10000                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10001  0FA1  302D               	movlw	45
 10002  0FA2                     L9:	
 10003  0FA2  00E7               	movwf	??_sprintf^(0+128)
 10004  0FA3  0022               	movlb	2	; select bank2
 10005  0FA4  0839               	movf	sprintf@sp^(0+256),w
 10006  0FA5  0086               	movwf	6
 10007  0FA6  3002               	movlw	2	; select bank4/5
 10008  0FA7  0087               	movwf	7
 10009  0FA8  0021               	movlb	1	; select bank1
 10010  0FA9  0867               	movf	??_sprintf^(0+128),w
 10011  0FAA  0081               	movwf	1
 10012  0FAB  3001               	movlw	1
 10013  0FAC  00E7               	movwf	??_sprintf^(0+128)
 10014  0FAD  0867               	movf	??_sprintf^(0+128),w
 10015  0FAE  0022               	movlb	2	; select bank2
 10016  0FAF  07B9               	addwf	sprintf@sp^(0+256),f
 10017  0FB0                     l7130:	
 10018  0FB0  30FF               	movlw	255
 10019  0FB1  0022               	movlb	2	; select bank2
 10020  0FB2  07B7               	addwf	sprintf@prec^(0+256),f
 10021  0FB3  30FF               	movlw	255
 10022  0FB4  3DB8               	addwfc	(sprintf@prec+1)^(0+256),f
 10023  0FB5  0A37               	incf	sprintf@prec^(0+256),w
 10024  0FB6  1903               	btfsc	3,2
 10025  0FB7  0A38               	incf	(sprintf@prec+1)^(0+256),w
 10026  0FB8  1903               	btfsc	3,2
 10027  0FB9  2813               	goto	l7132
 10028                           
 10029                           ;doprnt.c: 1478: {
 10030                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10031                           
 10032                           ;doprnt.c: 1469: }
 10033                           ;doprnt.c: 1474: while(prec--) {
 10034  0FBA  3000               	movlw	0
 10035  0FBB  0020               	movlb	0	; select bank0
 10036  0FBC  00A9               	movwf	___llmod@divisor+3
 10037  0FBD  3000               	movlw	0
 10038  0FBE  00A8               	movwf	___llmod@divisor+2
 10039  0FBF  3000               	movlw	0
 10040  0FC0  00A7               	movwf	___llmod@divisor+1
 10041  0FC1  300A               	movlw	10
 10042  0FC2  00A6               	movwf	___llmod@divisor
 10043  0FC3  0022               	movlb	2	; select bank2
 10044  0FC4  0838               	movf	(sprintf@prec+1)^(0+256),w
 10045  0FC5  0085               	movwf	5
 10046  0FC6  0837               	movf	sprintf@prec^(0+256),w
 10047  0FC7  0084               	movwf	4
 10048  0FC8  3584               	lslf	4,f
 10049  0FC9  0D85               	rlf	5,f
 10050  0FCA  3584               	lslf	4,f
 10051  0FCB  0D85               	rlf	5,f
 10052  0FCC  309A               	movlw	low (_dpowers| (0+32768))
 10053  0FCD  0784               	addwf	4,f
 10054  0FCE  30B0               	movlw	high (_dpowers| (0+32768))
 10055  0FCF  3D85               	addwfc	5,f
 10056  0FD0  3F00               	moviw [0]fsr0
 10057  0FD1  00F2               	movwf	___lldiv@divisor
 10058  0FD2  3F01               	moviw [1]fsr0
 10059  0FD3  00F3               	movwf	___lldiv@divisor+1
 10060  0FD4  3F02               	moviw [2]fsr0
 10061  0FD5  00F4               	movwf	___lldiv@divisor+2
 10062  0FD6  3F03               	moviw [3]fsr0
 10063  0FD7  00F5               	movwf	___lldiv@divisor+3
 10064  0FD8  082C               	movf	(sprintf@val+3)^(0+256),w
 10065  0FD9  00F9               	movwf	___lldiv@dividend+3
 10066  0FDA  082B               	movf	(sprintf@val+2)^(0+256),w
 10067  0FDB  00F8               	movwf	___lldiv@dividend+2
 10068  0FDC  082A               	movf	(sprintf@val+1)^(0+256),w
 10069  0FDD  00F7               	movwf	___lldiv@dividend+1
 10070  0FDE  0829               	movf	sprintf@val^(0+256),w
 10071  0FDF  00F6               	movwf	___lldiv@dividend
 10072  0FE0  31A2  222F  3188   	fcall	___lldiv
 10073  0FE3  0875               	movf	?___lldiv+3,w
 10074  0FE4  0020               	movlb	0	; select bank0
 10075  0FE5  00AD               	movwf	___llmod@dividend+3
 10076  0FE6  0874               	movf	?___lldiv+2,w
 10077  0FE7  00AC               	movwf	___llmod@dividend+2
 10078  0FE8  0873               	movf	?___lldiv+1,w
 10079  0FE9  00AB               	movwf	___llmod@dividend+1
 10080  0FEA  0872               	movf	?___lldiv,w
 10081  0FEB  00AA               	movwf	___llmod@dividend
 10082  0FEC  31A0  20B4  3188   	fcall	___llmod
 10083  0FEF  0020               	movlb	0	; select bank0
 10084  0FF0  0826               	movf	?___llmod,w
 10085  0FF1  3E30               	addlw	48
 10086  0FF2  0021               	movlb	1	; select bank1
 10087  0FF3  00E7               	movwf	??_sprintf^(0+128)
 10088  0FF4  0867               	movf	??_sprintf^(0+128),w
 10089  0FF5  0022               	movlb	2	; select bank2
 10090  0FF6  00BA               	movwf	sprintf@c^(0+256)
 10091                           
 10092                           ;doprnt.c: 1523: }
 10093                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10094  0FF7  083A               	movf	sprintf@c^(0+256),w
 10095  0FF8  0021               	movlb	1	; select bank1
 10096  0FF9  2FA2               	goto	L9
 10097  0FFA                     l7134:	
 10098                           ;doprnt.c: 1525: }
 10099                           ;doprnt.c: 1533: }
 10100                           ;doprnt.c: 1535: alldone:
 10101                           
 10102                           
 10103                           ;doprnt.c: 1538: *sp = 0;
 10104  0FFA  0839               	movf	sprintf@sp^(0+256),w
 10105  0FFB  0086               	movwf	6
 10106  0FFC  3002               	movlw	2	; select bank4/5
 10107  0FFD  0087               	movwf	7
 10108  0FFE  0181               	clrf	1
 10109  0FFF  0008               	return
 10110  1000                     __end_of_sprintf:	
 10111                           ;doprnt.c: 1540: return 0;
 10112                           ;	Return value of _sprintf is never used
 10113                           
 10114                           
 10115                           	psect	text8
 10116  00B0                     __ptext8:	
 10117 ;; *************** function _scale *****************
 10118 ;; Defined at:
 10119 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10120 ;; Parameters:    Size  Location     Type
 10121 ;;  scl             1    wreg     char 
 10122 ;; Auto vars:     Size  Location     Type
 10123 ;;  scl             1   20[BANK1 ] char 
 10124 ;; Return value:  Size  Location     Type
 10125 ;;                  4   76[BANK0 ] char 
 10126 ;; Registers used:
 10127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10128 ;; Tracked objects:
 10129 ;;		On entry : 0/0
 10130 ;;		On exit  : 0/0
 10131 ;;		Unchanged: 0/0
 10132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10133 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10134 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10135 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10136 ;;      Totals:         0       4      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10137 ;;Total ram usage:       25 bytes
 10138 ;; Hardware stack levels used:    1
 10139 ;; Hardware stack levels required when called:    4
 10140 ;; This function calls:
 10141 ;;		___awdiv
 10142 ;;		___awmod
 10143 ;;		___flmul
 10144 ;; This function is called by:
 10145 ;;		_sprintf
 10146 ;; This function uses a non-reentrant model
 10147 ;;
 10148                           
 10149                           
 10150                           ;psect for function _scale
 10151  00B0                     _scale:	
 10152                           
 10153                           ;incstack = 0
 10154                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10155                           ;scale@scl stored from wreg
 10156  00B0  0021               	movlb	1	; select bank1
 10157  00B1  00B4               	movwf	scale@scl^(0+128)
 10158                           
 10159                           ;doprnt.c: 428: if(scl < 0) {
 10160  00B2  1FB4               	btfss	scale@scl^(0+128),7
 10161  00B3  2A45               	goto	l6502
 10162                           
 10163                           ;doprnt.c: 429: scl = -scl;
 10164  00B4  09B4               	comf	scale@scl^(0+128),f
 10165  00B5  0AB4               	incf	scale@scl^(0+128),f
 10166                           
 10167                           ;doprnt.c: 430: if(scl>=110)
 10168  00B6  0834               	movf	scale@scl^(0+128),w
 10169  00B7  3A80               	xorlw	128
 10170  00B8  3E12               	addlw	-238
 10171  00B9  1C03               	skipc
 10172  00BA  29A0               	goto	l6492
 10173                           
 10174                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10175  00BB  300A               	movlw	10
 10176  00BC  0020               	movlb	0	; select bank0
 10177  00BD  00A0               	movwf	___awdiv@divisor
 10178  00BE  3000               	movlw	0
 10179  00BF  00A1               	movwf	___awdiv@divisor+1
 10180  00C0  0021               	movlb	1	; select bank1
 10181  00C1  0834               	movf	scale@scl^(0+128),w
 10182  00C2  00F4               	movwf	___awmod@dividend
 10183  00C3  01F5               	clrf	___awmod@dividend+1
 10184  00C4  1BF4               	btfsc	___awmod@dividend,7
 10185  00C5  03F5               	decf	___awmod@dividend+1,f
 10186  00C6  3064               	movlw	100
 10187  00C7  00F2               	movwf	___awmod@divisor
 10188  00C8  3000               	movlw	0
 10189  00C9  00F3               	movwf	___awmod@divisor+1
 10190  00CA  31A0  20F7  3180   	fcall	___awmod
 10191  00CD  0873               	movf	?___awmod+1,w
 10192  00CE  0020               	movlb	0	; select bank0
 10193  00CF  00A3               	movwf	___awdiv@dividend+1
 10194  00D0  0872               	movf	?___awmod,w
 10195  00D1  00A2               	movwf	___awdiv@dividend
 10196  00D2  31A1  21DD  3180   	fcall	___awdiv
 10197  00D5  0020               	movlb	0	; select bank0
 10198  00D6  0820               	movf	?___awdiv,w
 10199  00D7  0021               	movlb	1	; select bank1
 10200  00D8  00A0               	movwf	??_scale^(0+128)
 10201  00D9  0020               	movlb	0	; select bank0
 10202  00DA  0821               	movf	?___awdiv+1,w
 10203  00DB  0021               	movlb	1	; select bank1
 10204  00DC  00A1               	movwf	(??_scale^(0+128)+1)
 10205  00DD  35A0               	lslf	??_scale^(0+128),f
 10206  00DE  0DA1               	rlf	(??_scale^(0+128)+1),f
 10207  00DF  35A0               	lslf	??_scale^(0+128),f
 10208  00E0  0DA1               	rlf	(??_scale^(0+128)+1),f
 10209  00E1  0820               	movf	??_scale^(0+128),w
 10210  00E2  3E24               	addlw	36
 10211  00E3  00A2               	movwf	(??_scale+2)^(0+128)
 10212  00E4  3000               	movlw	0
 10213  00E5  3D21               	addwfc	(??_scale+1)^(0+128),w
 10214  00E6  00A3               	movwf	(??_scale+3)^(0+128)
 10215  00E7  3034               	movlw	low (__npowers_| (0+32768))
 10216  00E8  0722               	addwf	(??_scale+2)^(0+128),w
 10217  00E9  0084               	movwf	4
 10218  00EA  30B0               	movlw	high (__npowers_| (0+32768))
 10219  00EB  3D23               	addwfc	(??_scale+3)^(0+128),w
 10220  00EC  0085               	movwf	5
 10221  00ED  3F00               	moviw [0]fsr0
 10222  00EE  00A4               	movwf	(??_scale+4)^(0+128)
 10223  00EF  3F01               	moviw [1]fsr0
 10224  00F0  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10225  00F1  3F02               	moviw [2]fsr0
 10226  00F2  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10227  00F3  3F03               	moviw [3]fsr0
 10228  00F4  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10229  00F5  0827               	movf	(??_scale+7)^(0+128),w
 10230  00F6  0020               	movlb	0	; select bank0
 10231  00F7  00D5               	movwf	___flmul@b+3
 10232  00F8  0021               	movlb	1	; select bank1
 10233  00F9  0826               	movf	(??_scale+6)^(0+128),w
 10234  00FA  0020               	movlb	0	; select bank0
 10235  00FB  00D4               	movwf	___flmul@b+2
 10236  00FC  0021               	movlb	1	; select bank1
 10237  00FD  0825               	movf	(??_scale+5)^(0+128),w
 10238  00FE  0020               	movlb	0	; select bank0
 10239  00FF  00D3               	movwf	___flmul@b+1
 10240  0100  0021               	movlb	1	; select bank1
 10241  0101  0824               	movf	(??_scale+4)^(0+128),w
 10242  0102  0020               	movlb	0	; select bank0
 10243  0103  00D2               	movwf	___flmul@b
 10244  0104  3064               	movlw	100
 10245  0105  00A0               	movwf	___awdiv@divisor
 10246  0106  3000               	movlw	0
 10247  0107  00A1               	movwf	___awdiv@divisor+1
 10248  0108  0021               	movlb	1	; select bank1
 10249  0109  0834               	movf	scale@scl^(0+128),w
 10250  010A  0020               	movlb	0	; select bank0
 10251  010B  00A2               	movwf	___awdiv@dividend
 10252  010C  01A3               	clrf	___awdiv@dividend+1
 10253  010D  1BA2               	btfsc	___awdiv@dividend,7
 10254  010E  03A3               	decf	___awdiv@dividend+1,f
 10255  010F  31A1  21DD  3180   	fcall	___awdiv
 10256  0112  0020               	movlb	0	; select bank0
 10257  0113  0820               	movf	?___awdiv,w
 10258  0114  0021               	movlb	1	; select bank1
 10259  0115  00A8               	movwf	(??_scale+8)^(0+128)
 10260  0116  0020               	movlb	0	; select bank0
 10261  0117  0821               	movf	?___awdiv+1,w
 10262  0118  0021               	movlb	1	; select bank1
 10263  0119  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10264  011A  35A8               	lslf	(??_scale+8)^(0+128),f
 10265  011B  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10266  011C  35A8               	lslf	(??_scale+8)^(0+128),f
 10267  011D  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10268  011E  0828               	movf	(??_scale+8)^(0+128),w
 10269  011F  3E48               	addlw	72
 10270  0120  00AA               	movwf	(??_scale+10)^(0+128)
 10271  0121  3000               	movlw	0
 10272  0122  3D29               	addwfc	(??_scale+9)^(0+128),w
 10273  0123  00AB               	movwf	(??_scale+11)^(0+128)
 10274  0124  3034               	movlw	low (__npowers_| (0+32768))
 10275  0125  072A               	addwf	(??_scale+10)^(0+128),w
 10276  0126  0084               	movwf	4
 10277  0127  30B0               	movlw	high (__npowers_| (0+32768))
 10278  0128  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10279  0129  0085               	movwf	5
 10280  012A  3F00               	moviw [0]fsr0
 10281  012B  00AC               	movwf	(??_scale+12)^(0+128)
 10282  012C  3F01               	moviw [1]fsr0
 10283  012D  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10284  012E  3F02               	moviw [2]fsr0
 10285  012F  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10286  0130  3F03               	moviw [3]fsr0
 10287  0131  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10288  0132  082F               	movf	(??_scale+15)^(0+128),w
 10289  0133  0020               	movlb	0	; select bank0
 10290  0134  00D9               	movwf	___flmul@a+3
 10291  0135  0021               	movlb	1	; select bank1
 10292  0136  082E               	movf	(??_scale+14)^(0+128),w
 10293  0137  0020               	movlb	0	; select bank0
 10294  0138  00D8               	movwf	___flmul@a+2
 10295  0139  0021               	movlb	1	; select bank1
 10296  013A  082D               	movf	(??_scale+13)^(0+128),w
 10297  013B  0020               	movlb	0	; select bank0
 10298  013C  00D7               	movwf	___flmul@a+1
 10299  013D  0021               	movlb	1	; select bank1
 10300  013E  082C               	movf	(??_scale+12)^(0+128),w
 10301  013F  0020               	movlb	0	; select bank0
 10302  0140  00D6               	movwf	___flmul@a
 10303  0141  3183  23D5  3180   	fcall	___flmul
 10304  0144  0020               	movlb	0	; select bank0
 10305  0145  0855               	movf	?___flmul+3,w
 10306  0146  0021               	movlb	1	; select bank1
 10307  0147  00B3               	movwf	(_scale$2114+3)^(0+128)
 10308  0148  0020               	movlb	0	; select bank0
 10309  0149  0854               	movf	?___flmul+2,w
 10310  014A  0021               	movlb	1	; select bank1
 10311  014B  00B2               	movwf	(_scale$2114+2)^(0+128)
 10312  014C  0020               	movlb	0	; select bank0
 10313  014D  0853               	movf	?___flmul+1,w
 10314  014E  0021               	movlb	1	; select bank1
 10315  014F  00B1               	movwf	(_scale$2114+1)^(0+128)
 10316  0150  0020               	movlb	0	; select bank0
 10317  0151  0852               	movf	?___flmul,w
 10318  0152  0021               	movlb	1	; select bank1
 10319  0153  00B0               	movwf	_scale$2114^(0+128)
 10320                           
 10321                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10322  0154  300A               	movlw	10
 10323  0155  00F2               	movwf	___awmod@divisor
 10324  0156  3000               	movlw	0
 10325  0157  00F3               	movwf	___awmod@divisor+1
 10326  0158  0834               	movf	scale@scl^(0+128),w
 10327  0159  00F4               	movwf	___awmod@dividend
 10328  015A  01F5               	clrf	___awmod@dividend+1
 10329  015B  1BF4               	btfsc	___awmod@dividend,7
 10330  015C  03F5               	decf	___awmod@dividend+1,f
 10331  015D  31A0  20F7  3180   	fcall	___awmod
 10332  0160  0873               	movf	?___awmod+1,w
 10333  0161  0085               	movwf	5
 10334  0162  0872               	movf	?___awmod,w
 10335  0163  0084               	movwf	4
 10336  0164  3584               	lslf	4,f
 10337  0165  0D85               	rlf	5,f
 10338  0166  3584               	lslf	4,f
 10339  0167  0D85               	rlf	5,f
 10340  0168  3034               	movlw	low (__npowers_| (0+32768))
 10341  0169  0784               	addwf	4,f
 10342  016A  30B0               	movlw	high (__npowers_| (0+32768))
 10343  016B  3D85               	addwfc	5,f
 10344  016C  3F00               	moviw [0]fsr0
 10345  016D  0021               	movlb	1	; select bank1
 10346  016E  00A0               	movwf	??_scale^(0+128)
 10347  016F  3F01               	moviw [1]fsr0
 10348  0170  00A1               	movwf	(??_scale^(0+128)+1)
 10349  0171  3F02               	moviw [2]fsr0
 10350  0172  00A2               	movwf	(??_scale^(0+128)+2)
 10351  0173  3F03               	moviw [3]fsr0
 10352  0174  00A3               	movwf	(??_scale^(0+128)+3)
 10353  0175  0823               	movf	(??_scale+3)^(0+128),w
 10354  0176  0020               	movlb	0	; select bank0
 10355  0177  00D5               	movwf	___flmul@b+3
 10356  0178  0021               	movlb	1	; select bank1
 10357  0179  0822               	movf	(??_scale+2)^(0+128),w
 10358  017A  0020               	movlb	0	; select bank0
 10359  017B  00D4               	movwf	___flmul@b+2
 10360  017C  0021               	movlb	1	; select bank1
 10361  017D  0821               	movf	(??_scale+1)^(0+128),w
 10362  017E  0020               	movlb	0	; select bank0
 10363  017F  00D3               	movwf	___flmul@b+1
 10364  0180  0021               	movlb	1	; select bank1
 10365  0181  0820               	movf	??_scale^(0+128),w
 10366  0182  0020               	movlb	0	; select bank0
 10367  0183  00D2               	movwf	___flmul@b
 10368  0184  0021               	movlb	1	; select bank1
 10369  0185  0833               	movf	(_scale$2114+3)^(0+128),w
 10370  0186  0020               	movlb	0	; select bank0
 10371  0187  00D9               	movwf	___flmul@a+3
 10372  0188  0021               	movlb	1	; select bank1
 10373  0189  0832               	movf	(_scale$2114+2)^(0+128),w
 10374  018A  0020               	movlb	0	; select bank0
 10375  018B  00D8               	movwf	___flmul@a+2
 10376  018C  0021               	movlb	1	; select bank1
 10377  018D  0831               	movf	(_scale$2114+1)^(0+128),w
 10378  018E  0020               	movlb	0	; select bank0
 10379  018F  00D7               	movwf	___flmul@a+1
 10380  0190  0021               	movlb	1	; select bank1
 10381  0191  0830               	movf	_scale$2114^(0+128),w
 10382  0192  0020               	movlb	0	; select bank0
 10383  0193  00D6               	movwf	___flmul@a
 10384  0194  3183  23D5         	fcall	___flmul
 10385  0196  0020               	movlb	0	; select bank0
 10386  0197  0855               	movf	?___flmul+3,w
 10387  0198  00EF               	movwf	?_scale+3
 10388  0199  0854               	movf	?___flmul+2,w
 10389  019A  00EE               	movwf	?_scale+2
 10390  019B  0853               	movf	?___flmul+1,w
 10391  019C  00ED               	movwf	?_scale+1
 10392  019D  0852               	movf	?___flmul,w
 10393  019E  00EC               	movwf	?_scale
 10394  019F  0008               	return
 10395  01A0                     l6492:	
 10396                           
 10397                           ;doprnt.c: 432: else if(scl > 10)
 10398  01A0  0021               	movlb	1	; select bank1
 10399  01A1  0834               	movf	scale@scl^(0+128),w
 10400  01A2  3A80               	xorlw	128
 10401  01A3  3E75               	addlw	-139
 10402  01A4  1C03               	skipc
 10403  01A5  2A1F               	goto	l6498
 10404                           
 10405                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10406  01A6  300A               	movlw	10
 10407  01A7  00F2               	movwf	___awmod@divisor
 10408  01A8  3000               	movlw	0
 10409  01A9  00F3               	movwf	___awmod@divisor+1
 10410  01AA  0834               	movf	scale@scl^(0+128),w
 10411  01AB  00F4               	movwf	___awmod@dividend
 10412  01AC  01F5               	clrf	___awmod@dividend+1
 10413  01AD  1BF4               	btfsc	___awmod@dividend,7
 10414  01AE  03F5               	decf	___awmod@dividend+1,f
 10415  01AF  31A0  20F7  3180   	fcall	___awmod
 10416  01B2  0873               	movf	?___awmod+1,w
 10417  01B3  0085               	movwf	5
 10418  01B4  0872               	movf	?___awmod,w
 10419  01B5  0084               	movwf	4
 10420  01B6  3584               	lslf	4,f
 10421  01B7  0D85               	rlf	5,f
 10422  01B8  3584               	lslf	4,f
 10423  01B9  0D85               	rlf	5,f
 10424  01BA  3034               	movlw	low (__npowers_| (0+32768))
 10425  01BB  0784               	addwf	4,f
 10426  01BC  30B0               	movlw	high (__npowers_| (0+32768))
 10427  01BD  3D85               	addwfc	5,f
 10428  01BE  3F00               	moviw [0]fsr0
 10429  01BF  0021               	movlb	1	; select bank1
 10430  01C0  00A0               	movwf	??_scale^(0+128)
 10431  01C1  3F01               	moviw [1]fsr0
 10432  01C2  00A1               	movwf	(??_scale^(0+128)+1)
 10433  01C3  3F02               	moviw [2]fsr0
 10434  01C4  00A2               	movwf	(??_scale^(0+128)+2)
 10435  01C5  3F03               	moviw [3]fsr0
 10436  01C6  00A3               	movwf	(??_scale^(0+128)+3)
 10437  01C7  0823               	movf	(??_scale+3)^(0+128),w
 10438  01C8  0020               	movlb	0	; select bank0
 10439  01C9  00D5               	movwf	___flmul@b+3
 10440  01CA  0021               	movlb	1	; select bank1
 10441  01CB  0822               	movf	(??_scale+2)^(0+128),w
 10442  01CC  0020               	movlb	0	; select bank0
 10443  01CD  00D4               	movwf	___flmul@b+2
 10444  01CE  0021               	movlb	1	; select bank1
 10445  01CF  0821               	movf	(??_scale+1)^(0+128),w
 10446  01D0  0020               	movlb	0	; select bank0
 10447  01D1  00D3               	movwf	___flmul@b+1
 10448  01D2  0021               	movlb	1	; select bank1
 10449  01D3  0820               	movf	??_scale^(0+128),w
 10450  01D4  0020               	movlb	0	; select bank0
 10451  01D5  00D2               	movwf	___flmul@b
 10452  01D6  300A               	movlw	10
 10453  01D7  00A0               	movwf	___awdiv@divisor
 10454  01D8  3000               	movlw	0
 10455  01D9  00A1               	movwf	___awdiv@divisor+1
 10456  01DA  0021               	movlb	1	; select bank1
 10457  01DB  0834               	movf	scale@scl^(0+128),w
 10458  01DC  0020               	movlb	0	; select bank0
 10459  01DD  00A2               	movwf	___awdiv@dividend
 10460  01DE  01A3               	clrf	___awdiv@dividend+1
 10461  01DF  1BA2               	btfsc	___awdiv@dividend,7
 10462  01E0  03A3               	decf	___awdiv@dividend+1,f
 10463  01E1  31A1  21DD  3180   	fcall	___awdiv
 10464  01E4  0020               	movlb	0	; select bank0
 10465  01E5  0820               	movf	?___awdiv,w
 10466  01E6  0021               	movlb	1	; select bank1
 10467  01E7  00A4               	movwf	(??_scale+4)^(0+128)
 10468  01E8  0020               	movlb	0	; select bank0
 10469  01E9  0821               	movf	?___awdiv+1,w
 10470  01EA  0021               	movlb	1	; select bank1
 10471  01EB  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10472  01EC  35A4               	lslf	(??_scale+4)^(0+128),f
 10473  01ED  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10474  01EE  35A4               	lslf	(??_scale+4)^(0+128),f
 10475  01EF  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10476  01F0  0824               	movf	(??_scale+4)^(0+128),w
 10477  01F1  3E24               	addlw	36
 10478  01F2  00A6               	movwf	(??_scale+6)^(0+128)
 10479  01F3  3000               	movlw	0
 10480  01F4  3D25               	addwfc	(??_scale+5)^(0+128),w
 10481  01F5  00A7               	movwf	(??_scale+7)^(0+128)
 10482  01F6  3034               	movlw	low (__npowers_| (0+32768))
 10483  01F7  0726               	addwf	(??_scale+6)^(0+128),w
 10484  01F8  0084               	movwf	4
 10485  01F9  30B0               	movlw	high (__npowers_| (0+32768))
 10486  01FA  3D27               	addwfc	(??_scale+7)^(0+128),w
 10487  01FB  0085               	movwf	5
 10488  01FC  3F00               	moviw [0]fsr0
 10489  01FD  00A8               	movwf	(??_scale+8)^(0+128)
 10490  01FE  3F01               	moviw [1]fsr0
 10491  01FF  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10492  0200  3F02               	moviw [2]fsr0
 10493  0201  00AA               	movwf	((??_scale+8)^(0+128)+2)
 10494  0202  3F03               	moviw [3]fsr0
 10495  0203  00AB               	movwf	((??_scale+8)^(0+128)+3)
 10496  0204  082B               	movf	(??_scale+11)^(0+128),w
 10497  0205  0020               	movlb	0	; select bank0
 10498  0206  00D9               	movwf	___flmul@a+3
 10499  0207  0021               	movlb	1	; select bank1
 10500  0208  082A               	movf	(??_scale+10)^(0+128),w
 10501  0209  0020               	movlb	0	; select bank0
 10502  020A  00D8               	movwf	___flmul@a+2
 10503  020B  0021               	movlb	1	; select bank1
 10504  020C  0829               	movf	(??_scale+9)^(0+128),w
 10505  020D  0020               	movlb	0	; select bank0
 10506  020E  00D7               	movwf	___flmul@a+1
 10507  020F  0021               	movlb	1	; select bank1
 10508  0210  0828               	movf	(??_scale+8)^(0+128),w
 10509  0211  0020               	movlb	0	; select bank0
 10510  0212  00D6               	movwf	___flmul@a
 10511  0213  3183  23D5         	fcall	___flmul
 10512  0215  0020               	movlb	0	; select bank0
 10513  0216  0855               	movf	?___flmul+3,w
 10514  0217  00EF               	movwf	?_scale+3
 10515  0218  0854               	movf	?___flmul+2,w
 10516  0219  00EE               	movwf	?_scale+2
 10517  021A  0853               	movf	?___flmul+1,w
 10518  021B  00ED               	movwf	?_scale+1
 10519  021C  0852               	movf	?___flmul,w
 10520  021D  00EC               	movwf	?_scale
 10521  021E  0008               	return
 10522  021F                     l6498:	
 10523                           
 10524                           ;doprnt.c: 434: return _npowers_[scl];
 10525  021F  0021               	movlb	1	; select bank1
 10526  0220  0834               	movf	scale@scl^(0+128),w
 10527  0221  00A0               	movwf	??_scale^(0+128)
 10528  0222  01A1               	clrf	(??_scale^(0+128)+1)
 10529  0223  35A0               	lslf	??_scale^(0+128),f
 10530  0224  0DA1               	rlf	(??_scale^(0+128)+1),f
 10531  0225  35A0               	lslf	??_scale^(0+128),f
 10532  0226  0DA1               	rlf	(??_scale^(0+128)+1),f
 10533  0227  3034               	movlw	low (__npowers_| (0+32768))
 10534  0228  0720               	addwf	??_scale^(0+128),w
 10535  0229  0084               	movwf	4
 10536  022A  30B0               	movlw	high (__npowers_| (0+32768))
 10537  022B  3D21               	addwfc	(??_scale+1)^(0+128),w
 10538  022C  0085               	movwf	5
 10539  022D  3F00               	moviw [0]fsr0
 10540  022E  00A2               	movwf	(??_scale+2)^(0+128)
 10541  022F  3F01               	moviw [1]fsr0
 10542  0230  00A3               	movwf	((??_scale+2)^(0+128)+1)
 10543  0231  3F02               	moviw [2]fsr0
 10544  0232  00A4               	movwf	((??_scale+2)^(0+128)+2)
 10545  0233  3F03               	moviw [3]fsr0
 10546  0234  00A5               	movwf	((??_scale+2)^(0+128)+3)
 10547  0235  0825               	movf	(??_scale+5)^(0+128),w
 10548  0236  0020               	movlb	0	; select bank0
 10549  0237  00EF               	movwf	?_scale+3
 10550  0238  0021               	movlb	1	; select bank1
 10551  0239  0824               	movf	(??_scale+4)^(0+128),w
 10552  023A  0020               	movlb	0	; select bank0
 10553  023B  00EE               	movwf	?_scale+2
 10554  023C  0021               	movlb	1	; select bank1
 10555  023D  0823               	movf	(??_scale+3)^(0+128),w
 10556  023E  0020               	movlb	0	; select bank0
 10557  023F  00ED               	movwf	?_scale+1
 10558  0240  0021               	movlb	1	; select bank1
 10559  0241  0822               	movf	(??_scale+2)^(0+128),w
 10560  0242  0020               	movlb	0	; select bank0
 10561  0243  00EC               	movwf	?_scale
 10562  0244  0008               	return
 10563  0245                     l6502:	
 10564                           
 10565                           ;doprnt.c: 435: }
 10566                           ;doprnt.c: 436: if(scl>=110)
 10567  0245  0021               	movlb	1	; select bank1
 10568  0246  0834               	movf	scale@scl^(0+128),w
 10569  0247  3A80               	xorlw	128
 10570  0248  3E12               	addlw	-238
 10571  0249  1C03               	skipc
 10572  024A  2B30               	goto	l6510
 10573                           
 10574                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10575  024B  300A               	movlw	10
 10576  024C  0020               	movlb	0	; select bank0
 10577  024D  00A0               	movwf	___awdiv@divisor
 10578  024E  3000               	movlw	0
 10579  024F  00A1               	movwf	___awdiv@divisor+1
 10580  0250  0021               	movlb	1	; select bank1
 10581  0251  0834               	movf	scale@scl^(0+128),w
 10582  0252  00F4               	movwf	___awmod@dividend
 10583  0253  01F5               	clrf	___awmod@dividend+1
 10584  0254  1BF4               	btfsc	___awmod@dividend,7
 10585  0255  03F5               	decf	___awmod@dividend+1,f
 10586  0256  3064               	movlw	100
 10587  0257  00F2               	movwf	___awmod@divisor
 10588  0258  3000               	movlw	0
 10589  0259  00F3               	movwf	___awmod@divisor+1
 10590  025A  31A0  20F7  3180   	fcall	___awmod
 10591  025D  0873               	movf	?___awmod+1,w
 10592  025E  0020               	movlb	0	; select bank0
 10593  025F  00A3               	movwf	___awdiv@dividend+1
 10594  0260  0872               	movf	?___awmod,w
 10595  0261  00A2               	movwf	___awdiv@dividend
 10596  0262  31A1  21DD  3180   	fcall	___awdiv
 10597  0265  0020               	movlb	0	; select bank0
 10598  0266  0820               	movf	?___awdiv,w
 10599  0267  0021               	movlb	1	; select bank1
 10600  0268  00A0               	movwf	??_scale^(0+128)
 10601  0269  0020               	movlb	0	; select bank0
 10602  026A  0821               	movf	?___awdiv+1,w
 10603  026B  0021               	movlb	1	; select bank1
 10604  026C  00A1               	movwf	(??_scale^(0+128)+1)
 10605  026D  35A0               	lslf	??_scale^(0+128),f
 10606  026E  0DA1               	rlf	(??_scale^(0+128)+1),f
 10607  026F  35A0               	lslf	??_scale^(0+128),f
 10608  0270  0DA1               	rlf	(??_scale^(0+128)+1),f
 10609  0271  0820               	movf	??_scale^(0+128),w
 10610  0272  3E24               	addlw	36
 10611  0273  00A2               	movwf	(??_scale+2)^(0+128)
 10612  0274  3000               	movlw	0
 10613  0275  3D21               	addwfc	(??_scale+1)^(0+128),w
 10614  0276  00A3               	movwf	(??_scale+3)^(0+128)
 10615  0277  3000               	movlw	low (__powers_| (0+32768))
 10616  0278  0722               	addwf	(??_scale+2)^(0+128),w
 10617  0279  0084               	movwf	4
 10618  027A  30B0               	movlw	high (__powers_| (0+32768))
 10619  027B  3D23               	addwfc	(??_scale+3)^(0+128),w
 10620  027C  0085               	movwf	5
 10621  027D  3F00               	moviw [0]fsr0
 10622  027E  00A4               	movwf	(??_scale+4)^(0+128)
 10623  027F  3F01               	moviw [1]fsr0
 10624  0280  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10625  0281  3F02               	moviw [2]fsr0
 10626  0282  00A6               	movwf	((??_scale+4)^(0+128)+2)
 10627  0283  3F03               	moviw [3]fsr0
 10628  0284  00A7               	movwf	((??_scale+4)^(0+128)+3)
 10629  0285  0827               	movf	(??_scale+7)^(0+128),w
 10630  0286  0020               	movlb	0	; select bank0
 10631  0287  00D5               	movwf	___flmul@b+3
 10632  0288  0021               	movlb	1	; select bank1
 10633  0289  0826               	movf	(??_scale+6)^(0+128),w
 10634  028A  0020               	movlb	0	; select bank0
 10635  028B  00D4               	movwf	___flmul@b+2
 10636  028C  0021               	movlb	1	; select bank1
 10637  028D  0825               	movf	(??_scale+5)^(0+128),w
 10638  028E  0020               	movlb	0	; select bank0
 10639  028F  00D3               	movwf	___flmul@b+1
 10640  0290  0021               	movlb	1	; select bank1
 10641  0291  0824               	movf	(??_scale+4)^(0+128),w
 10642  0292  0020               	movlb	0	; select bank0
 10643  0293  00D2               	movwf	___flmul@b
 10644  0294  3064               	movlw	100
 10645  0295  00A0               	movwf	___awdiv@divisor
 10646  0296  3000               	movlw	0
 10647  0297  00A1               	movwf	___awdiv@divisor+1
 10648  0298  0021               	movlb	1	; select bank1
 10649  0299  0834               	movf	scale@scl^(0+128),w
 10650  029A  0020               	movlb	0	; select bank0
 10651  029B  00A2               	movwf	___awdiv@dividend
 10652  029C  01A3               	clrf	___awdiv@dividend+1
 10653  029D  1BA2               	btfsc	___awdiv@dividend,7
 10654  029E  03A3               	decf	___awdiv@dividend+1,f
 10655  029F  31A1  21DD  3180   	fcall	___awdiv
 10656  02A2  0020               	movlb	0	; select bank0
 10657  02A3  0820               	movf	?___awdiv,w
 10658  02A4  0021               	movlb	1	; select bank1
 10659  02A5  00A8               	movwf	(??_scale+8)^(0+128)
 10660  02A6  0020               	movlb	0	; select bank0
 10661  02A7  0821               	movf	?___awdiv+1,w
 10662  02A8  0021               	movlb	1	; select bank1
 10663  02A9  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10664  02AA  35A8               	lslf	(??_scale+8)^(0+128),f
 10665  02AB  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10666  02AC  35A8               	lslf	(??_scale+8)^(0+128),f
 10667  02AD  0DA9               	rlf	((??_scale+8)^(0+128)+1),f
 10668  02AE  0828               	movf	(??_scale+8)^(0+128),w
 10669  02AF  3E48               	addlw	72
 10670  02B0  00AA               	movwf	(??_scale+10)^(0+128)
 10671  02B1  3000               	movlw	0
 10672  02B2  3D29               	addwfc	(??_scale+9)^(0+128),w
 10673  02B3  00AB               	movwf	(??_scale+11)^(0+128)
 10674  02B4  3000               	movlw	low (__powers_| (0+32768))
 10675  02B5  072A               	addwf	(??_scale+10)^(0+128),w
 10676  02B6  0084               	movwf	4
 10677  02B7  30B0               	movlw	high (__powers_| (0+32768))
 10678  02B8  3D2B               	addwfc	(??_scale+11)^(0+128),w
 10679  02B9  0085               	movwf	5
 10680  02BA  3F00               	moviw [0]fsr0
 10681  02BB  00AC               	movwf	(??_scale+12)^(0+128)
 10682  02BC  3F01               	moviw [1]fsr0
 10683  02BD  00AD               	movwf	((??_scale+12)^(0+128)+1)
 10684  02BE  3F02               	moviw [2]fsr0
 10685  02BF  00AE               	movwf	((??_scale+12)^(0+128)+2)
 10686  02C0  3F03               	moviw [3]fsr0
 10687  02C1  00AF               	movwf	((??_scale+12)^(0+128)+3)
 10688  02C2  082F               	movf	(??_scale+15)^(0+128),w
 10689  02C3  0020               	movlb	0	; select bank0
 10690  02C4  00D9               	movwf	___flmul@a+3
 10691  02C5  0021               	movlb	1	; select bank1
 10692  02C6  082E               	movf	(??_scale+14)^(0+128),w
 10693  02C7  0020               	movlb	0	; select bank0
 10694  02C8  00D8               	movwf	___flmul@a+2
 10695  02C9  0021               	movlb	1	; select bank1
 10696  02CA  082D               	movf	(??_scale+13)^(0+128),w
 10697  02CB  0020               	movlb	0	; select bank0
 10698  02CC  00D7               	movwf	___flmul@a+1
 10699  02CD  0021               	movlb	1	; select bank1
 10700  02CE  082C               	movf	(??_scale+12)^(0+128),w
 10701  02CF  0020               	movlb	0	; select bank0
 10702  02D0  00D6               	movwf	___flmul@a
 10703  02D1  3183  23D5  3180   	fcall	___flmul
 10704  02D4  0020               	movlb	0	; select bank0
 10705  02D5  0855               	movf	?___flmul+3,w
 10706  02D6  0021               	movlb	1	; select bank1
 10707  02D7  00B3               	movwf	(_scale$2114+3)^(0+128)
 10708  02D8  0020               	movlb	0	; select bank0
 10709  02D9  0854               	movf	?___flmul+2,w
 10710  02DA  0021               	movlb	1	; select bank1
 10711  02DB  00B2               	movwf	(_scale$2114+2)^(0+128)
 10712  02DC  0020               	movlb	0	; select bank0
 10713  02DD  0853               	movf	?___flmul+1,w
 10714  02DE  0021               	movlb	1	; select bank1
 10715  02DF  00B1               	movwf	(_scale$2114+1)^(0+128)
 10716  02E0  0020               	movlb	0	; select bank0
 10717  02E1  0852               	movf	?___flmul,w
 10718  02E2  0021               	movlb	1	; select bank1
 10719  02E3  00B0               	movwf	_scale$2114^(0+128)
 10720                           
 10721                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10722  02E4  300A               	movlw	10
 10723  02E5  00F2               	movwf	___awmod@divisor
 10724  02E6  3000               	movlw	0
 10725  02E7  00F3               	movwf	___awmod@divisor+1
 10726  02E8  0834               	movf	scale@scl^(0+128),w
 10727  02E9  00F4               	movwf	___awmod@dividend
 10728  02EA  01F5               	clrf	___awmod@dividend+1
 10729  02EB  1BF4               	btfsc	___awmod@dividend,7
 10730  02EC  03F5               	decf	___awmod@dividend+1,f
 10731  02ED  31A0  20F7  3180   	fcall	___awmod
 10732  02F0  0873               	movf	?___awmod+1,w
 10733  02F1  0085               	movwf	5
 10734  02F2  0872               	movf	?___awmod,w
 10735  02F3  0084               	movwf	4
 10736  02F4  3584               	lslf	4,f
 10737  02F5  0D85               	rlf	5,f
 10738  02F6  3584               	lslf	4,f
 10739  02F7  0D85               	rlf	5,f
 10740  02F8  3000               	movlw	low (__powers_| (0+32768))
 10741  02F9  0784               	addwf	4,f
 10742  02FA  30B0               	movlw	high (__powers_| (0+32768))
 10743  02FB  3D85               	addwfc	5,f
 10744  02FC  3F00               	moviw [0]fsr0
 10745  02FD  0021               	movlb	1	; select bank1
 10746  02FE  00A0               	movwf	??_scale^(0+128)
 10747  02FF  3F01               	moviw [1]fsr0
 10748  0300  00A1               	movwf	(??_scale^(0+128)+1)
 10749  0301  3F02               	moviw [2]fsr0
 10750  0302  00A2               	movwf	(??_scale^(0+128)+2)
 10751  0303  3F03               	moviw [3]fsr0
 10752  0304  00A3               	movwf	(??_scale^(0+128)+3)
 10753  0305  0823               	movf	(??_scale+3)^(0+128),w
 10754  0306  0020               	movlb	0	; select bank0
 10755  0307  00D5               	movwf	___flmul@b+3
 10756  0308  0021               	movlb	1	; select bank1
 10757  0309  0822               	movf	(??_scale+2)^(0+128),w
 10758  030A  0020               	movlb	0	; select bank0
 10759  030B  00D4               	movwf	___flmul@b+2
 10760  030C  0021               	movlb	1	; select bank1
 10761  030D  0821               	movf	(??_scale+1)^(0+128),w
 10762  030E  0020               	movlb	0	; select bank0
 10763  030F  00D3               	movwf	___flmul@b+1
 10764  0310  0021               	movlb	1	; select bank1
 10765  0311  0820               	movf	??_scale^(0+128),w
 10766  0312  0020               	movlb	0	; select bank0
 10767  0313  00D2               	movwf	___flmul@b
 10768  0314  0021               	movlb	1	; select bank1
 10769  0315  0833               	movf	(_scale$2114+3)^(0+128),w
 10770  0316  0020               	movlb	0	; select bank0
 10771  0317  00D9               	movwf	___flmul@a+3
 10772  0318  0021               	movlb	1	; select bank1
 10773  0319  0832               	movf	(_scale$2114+2)^(0+128),w
 10774  031A  0020               	movlb	0	; select bank0
 10775  031B  00D8               	movwf	___flmul@a+2
 10776  031C  0021               	movlb	1	; select bank1
 10777  031D  0831               	movf	(_scale$2114+1)^(0+128),w
 10778  031E  0020               	movlb	0	; select bank0
 10779  031F  00D7               	movwf	___flmul@a+1
 10780  0320  0021               	movlb	1	; select bank1
 10781  0321  0830               	movf	_scale$2114^(0+128),w
 10782  0322  0020               	movlb	0	; select bank0
 10783  0323  00D6               	movwf	___flmul@a
 10784  0324  3183  23D5         	fcall	___flmul
 10785  0326  0020               	movlb	0	; select bank0
 10786  0327  0855               	movf	?___flmul+3,w
 10787  0328  00EF               	movwf	?_scale+3
 10788  0329  0854               	movf	?___flmul+2,w
 10789  032A  00EE               	movwf	?_scale+2
 10790  032B  0853               	movf	?___flmul+1,w
 10791  032C  00ED               	movwf	?_scale+1
 10792  032D  0852               	movf	?___flmul,w
 10793  032E  00EC               	movwf	?_scale
 10794  032F  0008               	return
 10795  0330                     l6510:	
 10796                           
 10797                           ;doprnt.c: 438: else if(scl > 10)
 10798  0330  0021               	movlb	1	; select bank1
 10799  0331  0834               	movf	scale@scl^(0+128),w
 10800  0332  3A80               	xorlw	128
 10801  0333  3E75               	addlw	-139
 10802  0334  1C03               	skipc
 10803  0335  2BAF               	goto	l6516
 10804                           
 10805                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10806  0336  300A               	movlw	10
 10807  0337  00F2               	movwf	___awmod@divisor
 10808  0338  3000               	movlw	0
 10809  0339  00F3               	movwf	___awmod@divisor+1
 10810  033A  0834               	movf	scale@scl^(0+128),w
 10811  033B  00F4               	movwf	___awmod@dividend
 10812  033C  01F5               	clrf	___awmod@dividend+1
 10813  033D  1BF4               	btfsc	___awmod@dividend,7
 10814  033E  03F5               	decf	___awmod@dividend+1,f
 10815  033F  31A0  20F7  3180   	fcall	___awmod
 10816  0342  0873               	movf	?___awmod+1,w
 10817  0343  0085               	movwf	5
 10818  0344  0872               	movf	?___awmod,w
 10819  0345  0084               	movwf	4
 10820  0346  3584               	lslf	4,f
 10821  0347  0D85               	rlf	5,f
 10822  0348  3584               	lslf	4,f
 10823  0349  0D85               	rlf	5,f
 10824  034A  3000               	movlw	low (__powers_| (0+32768))
 10825  034B  0784               	addwf	4,f
 10826  034C  30B0               	movlw	high (__powers_| (0+32768))
 10827  034D  3D85               	addwfc	5,f
 10828  034E  3F00               	moviw [0]fsr0
 10829  034F  0021               	movlb	1	; select bank1
 10830  0350  00A0               	movwf	??_scale^(0+128)
 10831  0351  3F01               	moviw [1]fsr0
 10832  0352  00A1               	movwf	(??_scale^(0+128)+1)
 10833  0353  3F02               	moviw [2]fsr0
 10834  0354  00A2               	movwf	(??_scale^(0+128)+2)
 10835  0355  3F03               	moviw [3]fsr0
 10836  0356  00A3               	movwf	(??_scale^(0+128)+3)
 10837  0357  0823               	movf	(??_scale+3)^(0+128),w
 10838  0358  0020               	movlb	0	; select bank0
 10839  0359  00D5               	movwf	___flmul@b+3
 10840  035A  0021               	movlb	1	; select bank1
 10841  035B  0822               	movf	(??_scale+2)^(0+128),w
 10842  035C  0020               	movlb	0	; select bank0
 10843  035D  00D4               	movwf	___flmul@b+2
 10844  035E  0021               	movlb	1	; select bank1
 10845  035F  0821               	movf	(??_scale+1)^(0+128),w
 10846  0360  0020               	movlb	0	; select bank0
 10847  0361  00D3               	movwf	___flmul@b+1
 10848  0362  0021               	movlb	1	; select bank1
 10849  0363  0820               	movf	??_scale^(0+128),w
 10850  0364  0020               	movlb	0	; select bank0
 10851  0365  00D2               	movwf	___flmul@b
 10852  0366  300A               	movlw	10
 10853  0367  00A0               	movwf	___awdiv@divisor
 10854  0368  3000               	movlw	0
 10855  0369  00A1               	movwf	___awdiv@divisor+1
 10856  036A  0021               	movlb	1	; select bank1
 10857  036B  0834               	movf	scale@scl^(0+128),w
 10858  036C  0020               	movlb	0	; select bank0
 10859  036D  00A2               	movwf	___awdiv@dividend
 10860  036E  01A3               	clrf	___awdiv@dividend+1
 10861  036F  1BA2               	btfsc	___awdiv@dividend,7
 10862  0370  03A3               	decf	___awdiv@dividend+1,f
 10863  0371  31A1  21DD  3180   	fcall	___awdiv
 10864  0374  0020               	movlb	0	; select bank0
 10865  0375  0820               	movf	?___awdiv,w
 10866  0376  0021               	movlb	1	; select bank1
 10867  0377  00A4               	movwf	(??_scale+4)^(0+128)
 10868  0378  0020               	movlb	0	; select bank0
 10869  0379  0821               	movf	?___awdiv+1,w
 10870  037A  0021               	movlb	1	; select bank1
 10871  037B  00A5               	movwf	((??_scale+4)^(0+128)+1)
 10872  037C  35A4               	lslf	(??_scale+4)^(0+128),f
 10873  037D  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10874  037E  35A4               	lslf	(??_scale+4)^(0+128),f
 10875  037F  0DA5               	rlf	((??_scale+4)^(0+128)+1),f
 10876  0380  0824               	movf	(??_scale+4)^(0+128),w
 10877  0381  3E24               	addlw	36
 10878  0382  00A6               	movwf	(??_scale+6)^(0+128)
 10879  0383  3000               	movlw	0
 10880  0384  3D25               	addwfc	(??_scale+5)^(0+128),w
 10881  0385  00A7               	movwf	(??_scale+7)^(0+128)
 10882  0386  3000               	movlw	low (__powers_| (0+32768))
 10883  0387  0726               	addwf	(??_scale+6)^(0+128),w
 10884  0388  0084               	movwf	4
 10885  0389  30B0               	movlw	high (__powers_| (0+32768))
 10886  038A  3D27               	addwfc	(??_scale+7)^(0+128),w
 10887  038B  0085               	movwf	5
 10888  038C  3F00               	moviw [0]fsr0
 10889  038D  00A8               	movwf	(??_scale+8)^(0+128)
 10890  038E  3F01               	moviw [1]fsr0
 10891  038F  00A9               	movwf	((??_scale+8)^(0+128)+1)
 10892  0390  3F02               	moviw [2]fsr0
 10893  0391  00AA               	movwf	((??_scale+8)^(0+128)+2)
 10894  0392  3F03               	moviw [3]fsr0
 10895  0393  00AB               	movwf	((??_scale+8)^(0+128)+3)
 10896  0394  082B               	movf	(??_scale+11)^(0+128),w
 10897  0395  0020               	movlb	0	; select bank0
 10898  0396  00D9               	movwf	___flmul@a+3
 10899  0397  0021               	movlb	1	; select bank1
 10900  0398  082A               	movf	(??_scale+10)^(0+128),w
 10901  0399  0020               	movlb	0	; select bank0
 10902  039A  00D8               	movwf	___flmul@a+2
 10903  039B  0021               	movlb	1	; select bank1
 10904  039C  0829               	movf	(??_scale+9)^(0+128),w
 10905  039D  0020               	movlb	0	; select bank0
 10906  039E  00D7               	movwf	___flmul@a+1
 10907  039F  0021               	movlb	1	; select bank1
 10908  03A0  0828               	movf	(??_scale+8)^(0+128),w
 10909  03A1  0020               	movlb	0	; select bank0
 10910  03A2  00D6               	movwf	___flmul@a
 10911  03A3  3183  23D5         	fcall	___flmul
 10912  03A5  0020               	movlb	0	; select bank0
 10913  03A6  0855               	movf	?___flmul+3,w
 10914  03A7  00EF               	movwf	?_scale+3
 10915  03A8  0854               	movf	?___flmul+2,w
 10916  03A9  00EE               	movwf	?_scale+2
 10917  03AA  0853               	movf	?___flmul+1,w
 10918  03AB  00ED               	movwf	?_scale+1
 10919  03AC  0852               	movf	?___flmul,w
 10920  03AD  00EC               	movwf	?_scale
 10921  03AE  0008               	return
 10922  03AF                     l6516:	
 10923                           
 10924                           ;doprnt.c: 440: return _powers_[scl];
 10925  03AF  0021               	movlb	1	; select bank1
 10926  03B0  0834               	movf	scale@scl^(0+128),w
 10927  03B1  00A0               	movwf	??_scale^(0+128)
 10928  03B2  01A1               	clrf	(??_scale^(0+128)+1)
 10929  03B3  35A0               	lslf	??_scale^(0+128),f
 10930  03B4  0DA1               	rlf	(??_scale^(0+128)+1),f
 10931  03B5  35A0               	lslf	??_scale^(0+128),f
 10932  03B6  0DA1               	rlf	(??_scale^(0+128)+1),f
 10933  03B7  3000               	movlw	low (__powers_| (0+32768))
 10934  03B8  0720               	addwf	??_scale^(0+128),w
 10935  03B9  0084               	movwf	4
 10936  03BA  30B0               	movlw	high (__powers_| (0+32768))
 10937  03BB  3D21               	addwfc	(??_scale+1)^(0+128),w
 10938  03BC  0085               	movwf	5
 10939  03BD  3F00               	moviw [0]fsr0
 10940  03BE  00A2               	movwf	(??_scale+2)^(0+128)
 10941  03BF  3F01               	moviw [1]fsr0
 10942  03C0  00A3               	movwf	((??_scale+2)^(0+128)+1)
 10943  03C1  3F02               	moviw [2]fsr0
 10944  03C2  00A4               	movwf	((??_scale+2)^(0+128)+2)
 10945  03C3  3F03               	moviw [3]fsr0
 10946  03C4  00A5               	movwf	((??_scale+2)^(0+128)+3)
 10947  03C5  0825               	movf	(??_scale+5)^(0+128),w
 10948  03C6  0020               	movlb	0	; select bank0
 10949  03C7  00EF               	movwf	?_scale+3
 10950  03C8  0021               	movlb	1	; select bank1
 10951  03C9  0824               	movf	(??_scale+4)^(0+128),w
 10952  03CA  0020               	movlb	0	; select bank0
 10953  03CB  00EE               	movwf	?_scale+2
 10954  03CC  0021               	movlb	1	; select bank1
 10955  03CD  0823               	movf	(??_scale+3)^(0+128),w
 10956  03CE  0020               	movlb	0	; select bank0
 10957  03CF  00ED               	movwf	?_scale+1
 10958  03D0  0021               	movlb	1	; select bank1
 10959  03D1  0822               	movf	(??_scale+2)^(0+128),w
 10960  03D2  0020               	movlb	0	; select bank0
 10961  03D3  00EC               	movwf	?_scale
 10962  03D4  0008               	return
 10963  03D5                     __end_of_scale:	
 10964                           
 10965                           	psect	text9
 10966  2E3F                     __ptext9:	
 10967 ;; *************** function _isdigit *****************
 10968 ;; Defined at:
 10969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 10970 ;; Parameters:    Size  Location     Type
 10971 ;;  c               1    wreg     unsigned char 
 10972 ;; Auto vars:     Size  Location     Type
 10973 ;;  c               1    3[COMMON] unsigned char 
 10974 ;; Return value:  Size  Location     Type
 10975 ;;		None               void
 10976 ;; Registers used:
 10977 ;;		wreg, status,2, status,0
 10978 ;; Tracked objects:
 10979 ;;		On entry : 0/0
 10980 ;;		On exit  : 0/0
 10981 ;;		Unchanged: 0/0
 10982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10984 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10986 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10987 ;;Total ram usage:        2 bytes
 10988 ;; Hardware stack levels used:    1
 10989 ;; Hardware stack levels required when called:    2
 10990 ;; This function calls:
 10991 ;;		Nothing
 10992 ;; This function is called by:
 10993 ;;		_sprintf
 10994 ;; This function uses a non-reentrant model
 10995 ;;
 10996                           
 10997                           
 10998                           ;psect for function _isdigit
 10999  2E3F                     _isdigit:	
 11000                           
 11001                           ;incstack = 0
 11002                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11003                           ;isdigit@c stored from wreg
 11004  2E3F  00F3               	movwf	isdigit@c
 11005  2E40  01F2               	clrf	_isdigit$1724
 11006  2E41  303A               	movlw	58
 11007  2E42  0273               	subwf	isdigit@c,w
 11008  2E43  1803               	skipnc
 11009  2E44  2E4B               	goto	l6528
 11010  2E45  3030               	movlw	48
 11011  2E46  0273               	subwf	isdigit@c,w
 11012  2E47  1C03               	skipc
 11013  2E48  2E4B               	goto	l6528
 11014  2E49  01F2               	clrf	_isdigit$1724
 11015  2E4A  0AF2               	incf	_isdigit$1724,f
 11016  2E4B                     l6528:	
 11017  2E4B  0C72               	rrf	_isdigit$1724,w
 11018  2E4C  0008               	return
 11019  2E4D                     __end_of_isdigit:	
 11020                           
 11021                           	psect	text10
 11022  15F7                     __ptext10:	
 11023 ;; *************** function _fround *****************
 11024 ;; Defined at:
 11025 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11026 ;; Parameters:    Size  Location     Type
 11027 ;;  prec            1    wreg     unsigned char 
 11028 ;; Auto vars:     Size  Location     Type
 11029 ;;  prec            1   28[BANK1 ] unsigned char 
 11030 ;; Return value:  Size  Location     Type
 11031 ;;                  4   76[BANK0 ] unsigned char 
 11032 ;; Registers used:
 11033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11034 ;; Tracked objects:
 11035 ;;		On entry : 0/0
 11036 ;;		On exit  : 0/0
 11037 ;;		Unchanged: 0/0
 11038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11039 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11040 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11041 ;;      Temps:          0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11042 ;;      Totals:         0       4      29       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11043 ;;Total ram usage:       33 bytes
 11044 ;; Hardware stack levels used:    1
 11045 ;; Hardware stack levels required when called:    4
 11046 ;; This function calls:
 11047 ;;		___awdiv
 11048 ;;		___awmod
 11049 ;;		___flmul
 11050 ;; This function is called by:
 11051 ;;		_sprintf
 11052 ;; This function uses a non-reentrant model
 11053 ;;
 11054                           
 11055                           
 11056                           ;psect for function _fround
 11057  15F7                     _fround:	
 11058                           
 11059                           ;incstack = 0
 11060                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11061                           ;fround@prec stored from wreg
 11062  15F7  0021               	movlb	1	; select bank1
 11063  15F8  00BC               	movwf	fround@prec^(0+128)
 11064                           
 11065                           ;doprnt.c: 413: if(prec>=110)
 11066  15F9  306E               	movlw	110
 11067  15FA  023C               	subwf	fround@prec^(0+128),w
 11068  15FB  1C03               	skipc
 11069  15FC  2F16               	goto	l6468
 11070                           
 11071                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11072  15FD  300A               	movlw	10
 11073  15FE  0020               	movlb	0	; select bank0
 11074  15FF  00A0               	movwf	___awdiv@divisor
 11075  1600  3000               	movlw	0
 11076  1601  00A1               	movwf	___awdiv@divisor+1
 11077  1602  0021               	movlb	1	; select bank1
 11078  1603  083C               	movf	fround@prec^(0+128),w
 11079  1604  00A0               	movwf	??_fround^(0+128)
 11080  1605  01A1               	clrf	(??_fround^(0+128)+1)
 11081  1606  0820               	movf	??_fround^(0+128),w
 11082  1607  00F4               	movwf	___awmod@dividend
 11083  1608  0821               	movf	(??_fround+1)^(0+128),w
 11084  1609  00F5               	movwf	___awmod@dividend+1
 11085  160A  3064               	movlw	100
 11086  160B  00F2               	movwf	___awmod@divisor
 11087  160C  3000               	movlw	0
 11088  160D  00F3               	movwf	___awmod@divisor+1
 11089  160E  31A0  20F7  3195   	fcall	___awmod
 11090  1611  0873               	movf	?___awmod+1,w
 11091  1612  0020               	movlb	0	; select bank0
 11092  1613  00A3               	movwf	___awdiv@dividend+1
 11093  1614  0872               	movf	?___awmod,w
 11094  1615  00A2               	movwf	___awdiv@dividend
 11095  1616  31A1  21DD  3195   	fcall	___awdiv
 11096  1619  0020               	movlb	0	; select bank0
 11097  161A  0820               	movf	?___awdiv,w
 11098  161B  0021               	movlb	1	; select bank1
 11099  161C  00A2               	movwf	(??_fround+2)^(0+128)
 11100  161D  0020               	movlb	0	; select bank0
 11101  161E  0821               	movf	?___awdiv+1,w
 11102  161F  0021               	movlb	1	; select bank1
 11103  1620  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11104  1621  35A2               	lslf	(??_fround+2)^(0+128),f
 11105  1622  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11106  1623  35A2               	lslf	(??_fround+2)^(0+128),f
 11107  1624  0DA3               	rlf	((??_fround+2)^(0+128)+1),f
 11108  1625  0822               	movf	(??_fround+2)^(0+128),w
 11109  1626  3E24               	addlw	36
 11110  1627  00A4               	movwf	(??_fround+4)^(0+128)
 11111  1628  3000               	movlw	0
 11112  1629  3D23               	addwfc	(??_fround+3)^(0+128),w
 11113  162A  00A5               	movwf	(??_fround+5)^(0+128)
 11114  162B  3034               	movlw	low (__npowers_| (0+32768))
 11115  162C  0724               	addwf	(??_fround+4)^(0+128),w
 11116  162D  0084               	movwf	4
 11117  162E  30B0               	movlw	high (__npowers_| (0+32768))
 11118  162F  3D25               	addwfc	(??_fround+5)^(0+128),w
 11119  1630  0085               	movwf	5
 11120  1631  3F00               	moviw [0]fsr0
 11121  1632  00A6               	movwf	(??_fround+6)^(0+128)
 11122  1633  3F01               	moviw [1]fsr0
 11123  1634  00A7               	movwf	((??_fround+6)^(0+128)+1)
 11124  1635  3F02               	moviw [2]fsr0
 11125  1636  00A8               	movwf	((??_fround+6)^(0+128)+2)
 11126  1637  3F03               	moviw [3]fsr0
 11127  1638  00A9               	movwf	((??_fround+6)^(0+128)+3)
 11128  1639  0829               	movf	(??_fround+9)^(0+128),w
 11129  163A  0020               	movlb	0	; select bank0
 11130  163B  00D5               	movwf	___flmul@b+3
 11131  163C  0021               	movlb	1	; select bank1
 11132  163D  0828               	movf	(??_fround+8)^(0+128),w
 11133  163E  0020               	movlb	0	; select bank0
 11134  163F  00D4               	movwf	___flmul@b+2
 11135  1640  0021               	movlb	1	; select bank1
 11136  1641  0827               	movf	(??_fround+7)^(0+128),w
 11137  1642  0020               	movlb	0	; select bank0
 11138  1643  00D3               	movwf	___flmul@b+1
 11139  1644  0021               	movlb	1	; select bank1
 11140  1645  0826               	movf	(??_fround+6)^(0+128),w
 11141  1646  0020               	movlb	0	; select bank0
 11142  1647  00D2               	movwf	___flmul@b
 11143  1648  3064               	movlw	100
 11144  1649  00A0               	movwf	___awdiv@divisor
 11145  164A  3000               	movlw	0
 11146  164B  00A1               	movwf	___awdiv@divisor+1
 11147  164C  0021               	movlb	1	; select bank1
 11148  164D  083C               	movf	fround@prec^(0+128),w
 11149  164E  00AA               	movwf	(??_fround+10)^(0+128)
 11150  164F  01AB               	clrf	((??_fround+10)^(0+128)+1)
 11151  1650  082A               	movf	(??_fround+10)^(0+128),w
 11152  1651  0020               	movlb	0	; select bank0
 11153  1652  00A2               	movwf	___awdiv@dividend
 11154  1653  0021               	movlb	1	; select bank1
 11155  1654  082B               	movf	(??_fround+11)^(0+128),w
 11156  1655  0020               	movlb	0	; select bank0
 11157  1656  00A3               	movwf	___awdiv@dividend+1
 11158  1657  31A1  21DD  3195   	fcall	___awdiv
 11159  165A  0020               	movlb	0	; select bank0
 11160  165B  0820               	movf	?___awdiv,w
 11161  165C  0021               	movlb	1	; select bank1
 11162  165D  00AC               	movwf	(??_fround+12)^(0+128)
 11163  165E  0020               	movlb	0	; select bank0
 11164  165F  0821               	movf	?___awdiv+1,w
 11165  1660  0021               	movlb	1	; select bank1
 11166  1661  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11167  1662  35AC               	lslf	(??_fround+12)^(0+128),f
 11168  1663  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11169  1664  35AC               	lslf	(??_fround+12)^(0+128),f
 11170  1665  0DAD               	rlf	((??_fround+12)^(0+128)+1),f
 11171  1666  082C               	movf	(??_fround+12)^(0+128),w
 11172  1667  3E48               	addlw	72
 11173  1668  00AE               	movwf	(??_fround+14)^(0+128)
 11174  1669  3000               	movlw	0
 11175  166A  3D2D               	addwfc	(??_fround+13)^(0+128),w
 11176  166B  00AF               	movwf	(??_fround+15)^(0+128)
 11177  166C  3034               	movlw	low (__npowers_| (0+32768))
 11178  166D  072E               	addwf	(??_fround+14)^(0+128),w
 11179  166E  0084               	movwf	4
 11180  166F  30B0               	movlw	high (__npowers_| (0+32768))
 11181  1670  3D2F               	addwfc	(??_fround+15)^(0+128),w
 11182  1671  0085               	movwf	5
 11183  1672  3F00               	moviw [0]fsr0
 11184  1673  00B0               	movwf	(??_fround+16)^(0+128)
 11185  1674  3F01               	moviw [1]fsr0
 11186  1675  00B1               	movwf	((??_fround+16)^(0+128)+1)
 11187  1676  3F02               	moviw [2]fsr0
 11188  1677  00B2               	movwf	((??_fround+16)^(0+128)+2)
 11189  1678  3F03               	moviw [3]fsr0
 11190  1679  00B3               	movwf	((??_fround+16)^(0+128)+3)
 11191  167A  0833               	movf	(??_fround+19)^(0+128),w
 11192  167B  0020               	movlb	0	; select bank0
 11193  167C  00D9               	movwf	___flmul@a+3
 11194  167D  0021               	movlb	1	; select bank1
 11195  167E  0832               	movf	(??_fround+18)^(0+128),w
 11196  167F  0020               	movlb	0	; select bank0
 11197  1680  00D8               	movwf	___flmul@a+2
 11198  1681  0021               	movlb	1	; select bank1
 11199  1682  0831               	movf	(??_fround+17)^(0+128),w
 11200  1683  0020               	movlb	0	; select bank0
 11201  1684  00D7               	movwf	___flmul@a+1
 11202  1685  0021               	movlb	1	; select bank1
 11203  1686  0830               	movf	(??_fround+16)^(0+128),w
 11204  1687  0020               	movlb	0	; select bank0
 11205  1688  00D6               	movwf	___flmul@a
 11206  1689  3183  23D5  3195   	fcall	___flmul
 11207  168C  0020               	movlb	0	; select bank0
 11208  168D  0855               	movf	?___flmul+3,w
 11209  168E  0021               	movlb	1	; select bank1
 11210  168F  00BB               	movwf	(_fround$2112+3)^(0+128)
 11211  1690  0020               	movlb	0	; select bank0
 11212  1691  0854               	movf	?___flmul+2,w
 11213  1692  0021               	movlb	1	; select bank1
 11214  1693  00BA               	movwf	(_fround$2112+2)^(0+128)
 11215  1694  0020               	movlb	0	; select bank0
 11216  1695  0853               	movf	?___flmul+1,w
 11217  1696  0021               	movlb	1	; select bank1
 11218  1697  00B9               	movwf	(_fround$2112+1)^(0+128)
 11219  1698  0020               	movlb	0	; select bank0
 11220  1699  0852               	movf	?___flmul,w
 11221  169A  0021               	movlb	1	; select bank1
 11222  169B  00B8               	movwf	_fround$2112^(0+128)
 11223                           
 11224                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11225  169C  300A               	movlw	10
 11226  169D  00F2               	movwf	___awmod@divisor
 11227  169E  3000               	movlw	0
 11228  169F  00F3               	movwf	___awmod@divisor+1
 11229  16A0  083C               	movf	fround@prec^(0+128),w
 11230  16A1  00A0               	movwf	??_fround^(0+128)
 11231  16A2  01A1               	clrf	(??_fround^(0+128)+1)
 11232  16A3  0820               	movf	??_fround^(0+128),w
 11233  16A4  00F4               	movwf	___awmod@dividend
 11234  16A5  0821               	movf	(??_fround+1)^(0+128),w
 11235  16A6  00F5               	movwf	___awmod@dividend+1
 11236  16A7  31A0  20F7  3195   	fcall	___awmod
 11237  16AA  0873               	movf	?___awmod+1,w
 11238  16AB  0085               	movwf	5
 11239  16AC  0872               	movf	?___awmod,w
 11240  16AD  0084               	movwf	4
 11241  16AE  3584               	lslf	4,f
 11242  16AF  0D85               	rlf	5,f
 11243  16B0  3584               	lslf	4,f
 11244  16B1  0D85               	rlf	5,f
 11245  16B2  3034               	movlw	low (__npowers_| (0+32768))
 11246  16B3  0784               	addwf	4,f
 11247  16B4  30B0               	movlw	high (__npowers_| (0+32768))
 11248  16B5  3D85               	addwfc	5,f
 11249  16B6  3F00               	moviw [0]fsr0
 11250  16B7  0021               	movlb	1	; select bank1
 11251  16B8  00A2               	movwf	(??_fround+2)^(0+128)
 11252  16B9  3F01               	moviw [1]fsr0
 11253  16BA  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11254  16BB  3F02               	moviw [2]fsr0
 11255  16BC  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11256  16BD  3F03               	moviw [3]fsr0
 11257  16BE  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11258  16BF  0825               	movf	(??_fround+5)^(0+128),w
 11259  16C0  0020               	movlb	0	; select bank0
 11260  16C1  00D5               	movwf	___flmul@b+3
 11261  16C2  0021               	movlb	1	; select bank1
 11262  16C3  0824               	movf	(??_fround+4)^(0+128),w
 11263  16C4  0020               	movlb	0	; select bank0
 11264  16C5  00D4               	movwf	___flmul@b+2
 11265  16C6  0021               	movlb	1	; select bank1
 11266  16C7  0823               	movf	(??_fround+3)^(0+128),w
 11267  16C8  0020               	movlb	0	; select bank0
 11268  16C9  00D3               	movwf	___flmul@b+1
 11269  16CA  0021               	movlb	1	; select bank1
 11270  16CB  0822               	movf	(??_fround+2)^(0+128),w
 11271  16CC  0020               	movlb	0	; select bank0
 11272  16CD  00D2               	movwf	___flmul@b
 11273  16CE  0021               	movlb	1	; select bank1
 11274  16CF  083B               	movf	(_fround$2112+3)^(0+128),w
 11275  16D0  0020               	movlb	0	; select bank0
 11276  16D1  00D9               	movwf	___flmul@a+3
 11277  16D2  0021               	movlb	1	; select bank1
 11278  16D3  083A               	movf	(_fround$2112+2)^(0+128),w
 11279  16D4  0020               	movlb	0	; select bank0
 11280  16D5  00D8               	movwf	___flmul@a+2
 11281  16D6  0021               	movlb	1	; select bank1
 11282  16D7  0839               	movf	(_fround$2112+1)^(0+128),w
 11283  16D8  0020               	movlb	0	; select bank0
 11284  16D9  00D7               	movwf	___flmul@a+1
 11285  16DA  0021               	movlb	1	; select bank1
 11286  16DB  0838               	movf	_fround$2112^(0+128),w
 11287  16DC  0020               	movlb	0	; select bank0
 11288  16DD  00D6               	movwf	___flmul@a
 11289  16DE  3183  23D5  3195   	fcall	___flmul
 11290  16E1  0020               	movlb	0	; select bank0
 11291  16E2  0855               	movf	?___flmul+3,w
 11292  16E3  0021               	movlb	1	; select bank1
 11293  16E4  00B7               	movwf	(_fround$2113+3)^(0+128)
 11294  16E5  0020               	movlb	0	; select bank0
 11295  16E6  0854               	movf	?___flmul+2,w
 11296  16E7  0021               	movlb	1	; select bank1
 11297  16E8  00B6               	movwf	(_fround$2113+2)^(0+128)
 11298  16E9  0020               	movlb	0	; select bank0
 11299  16EA  0853               	movf	?___flmul+1,w
 11300  16EB  0021               	movlb	1	; select bank1
 11301  16EC  00B5               	movwf	(_fround$2113+1)^(0+128)
 11302  16ED  0020               	movlb	0	; select bank0
 11303  16EE  0852               	movf	?___flmul,w
 11304  16EF  0021               	movlb	1	; select bank1
 11305  16F0  00B4               	movwf	_fround$2113^(0+128)
 11306                           
 11307                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11308  16F1  303F               	movlw	63
 11309  16F2  0020               	movlb	0	; select bank0
 11310  16F3  00D5               	movwf	___flmul@b+3
 11311  16F4  3000               	movlw	0
 11312  16F5  00D4               	movwf	___flmul@b+2
 11313  16F6  3000               	movlw	0
 11314  16F7  00D3               	movwf	___flmul@b+1
 11315  16F8  3000               	movlw	0
 11316  16F9  00D2               	movwf	___flmul@b
 11317  16FA  0021               	movlb	1	; select bank1
 11318  16FB  0837               	movf	(_fround$2113+3)^(0+128),w
 11319  16FC  0020               	movlb	0	; select bank0
 11320  16FD  00D9               	movwf	___flmul@a+3
 11321  16FE  0021               	movlb	1	; select bank1
 11322  16FF  0836               	movf	(_fround$2113+2)^(0+128),w
 11323  1700  0020               	movlb	0	; select bank0
 11324  1701  00D8               	movwf	___flmul@a+2
 11325  1702  0021               	movlb	1	; select bank1
 11326  1703  0835               	movf	(_fround$2113+1)^(0+128),w
 11327  1704  0020               	movlb	0	; select bank0
 11328  1705  00D7               	movwf	___flmul@a+1
 11329  1706  0021               	movlb	1	; select bank1
 11330  1707  0834               	movf	_fround$2113^(0+128),w
 11331  1708  0020               	movlb	0	; select bank0
 11332  1709  00D6               	movwf	___flmul@a
 11333  170A  3183  23D5         	fcall	___flmul
 11334  170C  0020               	movlb	0	; select bank0
 11335  170D  0855               	movf	?___flmul+3,w
 11336  170E  00EF               	movwf	?_fround+3
 11337  170F  0854               	movf	?___flmul+2,w
 11338  1710  00EE               	movwf	?_fround+2
 11339  1711  0853               	movf	?___flmul+1,w
 11340  1712  00ED               	movwf	?_fround+1
 11341  1713  0852               	movf	?___flmul,w
 11342  1714  00EC               	movwf	?_fround
 11343  1715  0008               	return
 11344  1716                     l6468:	
 11345                           
 11346                           ;doprnt.c: 415: else if(prec > 10)
 11347  1716  300B               	movlw	11
 11348  1717  0021               	movlb	1	; select bank1
 11349  1718  023C               	subwf	fround@prec^(0+128),w
 11350  1719  1C03               	skipc
 11351  171A  2FC6               	goto	l6476
 11352                           
 11353                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11354  171B  300A               	movlw	10
 11355  171C  00F2               	movwf	___awmod@divisor
 11356  171D  3000               	movlw	0
 11357  171E  00F3               	movwf	___awmod@divisor+1
 11358  171F  083C               	movf	fround@prec^(0+128),w
 11359  1720  00A0               	movwf	??_fround^(0+128)
 11360  1721  01A1               	clrf	(??_fround^(0+128)+1)
 11361  1722  0820               	movf	??_fround^(0+128),w
 11362  1723  00F4               	movwf	___awmod@dividend
 11363  1724  0821               	movf	(??_fround+1)^(0+128),w
 11364  1725  00F5               	movwf	___awmod@dividend+1
 11365  1726  31A0  20F7  3195   	fcall	___awmod
 11366  1729  0873               	movf	?___awmod+1,w
 11367  172A  0085               	movwf	5
 11368  172B  0872               	movf	?___awmod,w
 11369  172C  0084               	movwf	4
 11370  172D  3584               	lslf	4,f
 11371  172E  0D85               	rlf	5,f
 11372  172F  3584               	lslf	4,f
 11373  1730  0D85               	rlf	5,f
 11374  1731  3034               	movlw	low (__npowers_| (0+32768))
 11375  1732  0784               	addwf	4,f
 11376  1733  30B0               	movlw	high (__npowers_| (0+32768))
 11377  1734  3D85               	addwfc	5,f
 11378  1735  3F00               	moviw [0]fsr0
 11379  1736  0021               	movlb	1	; select bank1
 11380  1737  00A2               	movwf	(??_fround+2)^(0+128)
 11381  1738  3F01               	moviw [1]fsr0
 11382  1739  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11383  173A  3F02               	moviw [2]fsr0
 11384  173B  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11385  173C  3F03               	moviw [3]fsr0
 11386  173D  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11387  173E  0825               	movf	(??_fround+5)^(0+128),w
 11388  173F  0020               	movlb	0	; select bank0
 11389  1740  00D5               	movwf	___flmul@b+3
 11390  1741  0021               	movlb	1	; select bank1
 11391  1742  0824               	movf	(??_fround+4)^(0+128),w
 11392  1743  0020               	movlb	0	; select bank0
 11393  1744  00D4               	movwf	___flmul@b+2
 11394  1745  0021               	movlb	1	; select bank1
 11395  1746  0823               	movf	(??_fround+3)^(0+128),w
 11396  1747  0020               	movlb	0	; select bank0
 11397  1748  00D3               	movwf	___flmul@b+1
 11398  1749  0021               	movlb	1	; select bank1
 11399  174A  0822               	movf	(??_fround+2)^(0+128),w
 11400  174B  0020               	movlb	0	; select bank0
 11401  174C  00D2               	movwf	___flmul@b
 11402  174D  300A               	movlw	10
 11403  174E  00A0               	movwf	___awdiv@divisor
 11404  174F  3000               	movlw	0
 11405  1750  00A1               	movwf	___awdiv@divisor+1
 11406  1751  0021               	movlb	1	; select bank1
 11407  1752  083C               	movf	fround@prec^(0+128),w
 11408  1753  00A6               	movwf	(??_fround+6)^(0+128)
 11409  1754  01A7               	clrf	((??_fround+6)^(0+128)+1)
 11410  1755  0826               	movf	(??_fround+6)^(0+128),w
 11411  1756  0020               	movlb	0	; select bank0
 11412  1757  00A2               	movwf	___awdiv@dividend
 11413  1758  0021               	movlb	1	; select bank1
 11414  1759  0827               	movf	(??_fround+7)^(0+128),w
 11415  175A  0020               	movlb	0	; select bank0
 11416  175B  00A3               	movwf	___awdiv@dividend+1
 11417  175C  31A1  21DD  3195   	fcall	___awdiv
 11418  175F  0020               	movlb	0	; select bank0
 11419  1760  0820               	movf	?___awdiv,w
 11420  1761  0021               	movlb	1	; select bank1
 11421  1762  00A8               	movwf	(??_fround+8)^(0+128)
 11422  1763  0020               	movlb	0	; select bank0
 11423  1764  0821               	movf	?___awdiv+1,w
 11424  1765  0021               	movlb	1	; select bank1
 11425  1766  00A9               	movwf	((??_fround+8)^(0+128)+1)
 11426  1767  35A8               	lslf	(??_fround+8)^(0+128),f
 11427  1768  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11428  1769  35A8               	lslf	(??_fround+8)^(0+128),f
 11429  176A  0DA9               	rlf	((??_fround+8)^(0+128)+1),f
 11430  176B  0828               	movf	(??_fround+8)^(0+128),w
 11431  176C  3E24               	addlw	36
 11432  176D  00AA               	movwf	(??_fround+10)^(0+128)
 11433  176E  3000               	movlw	0
 11434  176F  3D29               	addwfc	(??_fround+9)^(0+128),w
 11435  1770  00AB               	movwf	(??_fround+11)^(0+128)
 11436  1771  3034               	movlw	low (__npowers_| (0+32768))
 11437  1772  072A               	addwf	(??_fround+10)^(0+128),w
 11438  1773  0084               	movwf	4
 11439  1774  30B0               	movlw	high (__npowers_| (0+32768))
 11440  1775  3D2B               	addwfc	(??_fround+11)^(0+128),w
 11441  1776  0085               	movwf	5
 11442  1777  3F00               	moviw [0]fsr0
 11443  1778  00AC               	movwf	(??_fround+12)^(0+128)
 11444  1779  3F01               	moviw [1]fsr0
 11445  177A  00AD               	movwf	((??_fround+12)^(0+128)+1)
 11446  177B  3F02               	moviw [2]fsr0
 11447  177C  00AE               	movwf	((??_fround+12)^(0+128)+2)
 11448  177D  3F03               	moviw [3]fsr0
 11449  177E  00AF               	movwf	((??_fround+12)^(0+128)+3)
 11450  177F  082F               	movf	(??_fround+15)^(0+128),w
 11451  1780  0020               	movlb	0	; select bank0
 11452  1781  00D9               	movwf	___flmul@a+3
 11453  1782  0021               	movlb	1	; select bank1
 11454  1783  082E               	movf	(??_fround+14)^(0+128),w
 11455  1784  0020               	movlb	0	; select bank0
 11456  1785  00D8               	movwf	___flmul@a+2
 11457  1786  0021               	movlb	1	; select bank1
 11458  1787  082D               	movf	(??_fround+13)^(0+128),w
 11459  1788  0020               	movlb	0	; select bank0
 11460  1789  00D7               	movwf	___flmul@a+1
 11461  178A  0021               	movlb	1	; select bank1
 11462  178B  082C               	movf	(??_fround+12)^(0+128),w
 11463  178C  0020               	movlb	0	; select bank0
 11464  178D  00D6               	movwf	___flmul@a
 11465  178E  3183  23D5  3195   	fcall	___flmul
 11466  1791  0020               	movlb	0	; select bank0
 11467  1792  0855               	movf	?___flmul+3,w
 11468  1793  0021               	movlb	1	; select bank1
 11469  1794  00BB               	movwf	(_fround$2112+3)^(0+128)
 11470  1795  0020               	movlb	0	; select bank0
 11471  1796  0854               	movf	?___flmul+2,w
 11472  1797  0021               	movlb	1	; select bank1
 11473  1798  00BA               	movwf	(_fround$2112+2)^(0+128)
 11474  1799  0020               	movlb	0	; select bank0
 11475  179A  0853               	movf	?___flmul+1,w
 11476  179B  0021               	movlb	1	; select bank1
 11477  179C  00B9               	movwf	(_fround$2112+1)^(0+128)
 11478  179D  0020               	movlb	0	; select bank0
 11479  179E  0852               	movf	?___flmul,w
 11480  179F  0021               	movlb	1	; select bank1
 11481  17A0  00B8               	movwf	_fround$2112^(0+128)
 11482                           
 11483                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11484  17A1  303F               	movlw	63
 11485  17A2  0020               	movlb	0	; select bank0
 11486  17A3  00D5               	movwf	___flmul@b+3
 11487  17A4  3000               	movlw	0
 11488  17A5  00D4               	movwf	___flmul@b+2
 11489  17A6  3000               	movlw	0
 11490  17A7  00D3               	movwf	___flmul@b+1
 11491  17A8  3000               	movlw	0
 11492  17A9  00D2               	movwf	___flmul@b
 11493  17AA  0021               	movlb	1	; select bank1
 11494  17AB  083B               	movf	(_fround$2112+3)^(0+128),w
 11495  17AC  0020               	movlb	0	; select bank0
 11496  17AD  00D9               	movwf	___flmul@a+3
 11497  17AE  0021               	movlb	1	; select bank1
 11498  17AF  083A               	movf	(_fround$2112+2)^(0+128),w
 11499  17B0  0020               	movlb	0	; select bank0
 11500  17B1  00D8               	movwf	___flmul@a+2
 11501  17B2  0021               	movlb	1	; select bank1
 11502  17B3  0839               	movf	(_fround$2112+1)^(0+128),w
 11503  17B4  0020               	movlb	0	; select bank0
 11504  17B5  00D7               	movwf	___flmul@a+1
 11505  17B6  0021               	movlb	1	; select bank1
 11506  17B7  0838               	movf	_fround$2112^(0+128),w
 11507  17B8  0020               	movlb	0	; select bank0
 11508  17B9  00D6               	movwf	___flmul@a
 11509  17BA  3183  23D5         	fcall	___flmul
 11510  17BC  0020               	movlb	0	; select bank0
 11511  17BD  0855               	movf	?___flmul+3,w
 11512  17BE  00EF               	movwf	?_fround+3
 11513  17BF  0854               	movf	?___flmul+2,w
 11514  17C0  00EE               	movwf	?_fround+2
 11515  17C1  0853               	movf	?___flmul+1,w
 11516  17C2  00ED               	movwf	?_fround+1
 11517  17C3  0852               	movf	?___flmul,w
 11518  17C4  00EC               	movwf	?_fround
 11519  17C5  0008               	return
 11520  17C6                     l6476:	
 11521                           
 11522                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11523  17C6  303F               	movlw	63
 11524  17C7  0020               	movlb	0	; select bank0
 11525  17C8  00D5               	movwf	___flmul@b+3
 11526  17C9  3000               	movlw	0
 11527  17CA  00D4               	movwf	___flmul@b+2
 11528  17CB  3000               	movlw	0
 11529  17CC  00D3               	movwf	___flmul@b+1
 11530  17CD  3000               	movlw	0
 11531  17CE  00D2               	movwf	___flmul@b
 11532  17CF  0021               	movlb	1	; select bank1
 11533  17D0  083C               	movf	fround@prec^(0+128),w
 11534  17D1  00A0               	movwf	??_fround^(0+128)
 11535  17D2  01A1               	clrf	(??_fround^(0+128)+1)
 11536  17D3  35A0               	lslf	??_fround^(0+128),f
 11537  17D4  0DA1               	rlf	(??_fround^(0+128)+1),f
 11538  17D5  35A0               	lslf	??_fround^(0+128),f
 11539  17D6  0DA1               	rlf	(??_fround^(0+128)+1),f
 11540  17D7  3034               	movlw	low (__npowers_| (0+32768))
 11541  17D8  0720               	addwf	??_fround^(0+128),w
 11542  17D9  0084               	movwf	4
 11543  17DA  30B0               	movlw	high (__npowers_| (0+32768))
 11544  17DB  3D21               	addwfc	(??_fround+1)^(0+128),w
 11545  17DC  0085               	movwf	5
 11546  17DD  3F00               	moviw [0]fsr0
 11547  17DE  00A2               	movwf	(??_fround+2)^(0+128)
 11548  17DF  3F01               	moviw [1]fsr0
 11549  17E0  00A3               	movwf	((??_fround+2)^(0+128)+1)
 11550  17E1  3F02               	moviw [2]fsr0
 11551  17E2  00A4               	movwf	((??_fround+2)^(0+128)+2)
 11552  17E3  3F03               	moviw [3]fsr0
 11553  17E4  00A5               	movwf	((??_fround+2)^(0+128)+3)
 11554  17E5  0825               	movf	(??_fround+5)^(0+128),w
 11555  17E6  0020               	movlb	0	; select bank0
 11556  17E7  00D9               	movwf	___flmul@a+3
 11557  17E8  0021               	movlb	1	; select bank1
 11558  17E9  0824               	movf	(??_fround+4)^(0+128),w
 11559  17EA  0020               	movlb	0	; select bank0
 11560  17EB  00D8               	movwf	___flmul@a+2
 11561  17EC  0021               	movlb	1	; select bank1
 11562  17ED  0823               	movf	(??_fround+3)^(0+128),w
 11563  17EE  0020               	movlb	0	; select bank0
 11564  17EF  00D7               	movwf	___flmul@a+1
 11565  17F0  0021               	movlb	1	; select bank1
 11566  17F1  0822               	movf	(??_fround+2)^(0+128),w
 11567  17F2  0020               	movlb	0	; select bank0
 11568  17F3  00D6               	movwf	___flmul@a
 11569  17F4  3183  23D5         	fcall	___flmul
 11570  17F6  0020               	movlb	0	; select bank0
 11571  17F7  0855               	movf	?___flmul+3,w
 11572  17F8  00EF               	movwf	?_fround+3
 11573  17F9  0854               	movf	?___flmul+2,w
 11574  17FA  00EE               	movwf	?_fround+2
 11575  17FB  0853               	movf	?___flmul+1,w
 11576  17FC  00ED               	movwf	?_fround+1
 11577  17FD  0852               	movf	?___flmul,w
 11578  17FE  00EC               	movwf	?_fround
 11579  17FF  0008               	return
 11580  1800                     __end_of_fround:	
 11581                           
 11582                           	psect	text11
 11583  20F7                     __ptext11:	
 11584 ;; *************** function ___awmod *****************
 11585 ;; Defined at:
 11586 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 11587 ;; Parameters:    Size  Location     Type
 11588 ;;  divisor         2    2[COMMON] int 
 11589 ;;  dividend        2    4[COMMON] int 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;  sign            1    8[COMMON] unsigned char 
 11592 ;;  counter         1    7[COMMON] unsigned char 
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  2    2[COMMON] int 
 11595 ;; Registers used:
 11596 ;;		wreg, status,2, status,0
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11605 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11606 ;;Total ram usage:        7 bytes
 11607 ;; Hardware stack levels used:    1
 11608 ;; Hardware stack levels required when called:    2
 11609 ;; This function calls:
 11610 ;;		Nothing
 11611 ;; This function is called by:
 11612 ;;		_fround
 11613 ;;		_scale
 11614 ;; This function uses a non-reentrant model
 11615 ;;
 11616                           
 11617                           
 11618                           ;psect for function ___awmod
 11619  20F7                     ___awmod:	
 11620                           
 11621                           ;incstack = 0
 11622                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11623  20F7  01F8               	clrf	___awmod@sign
 11624  20F8  1FF5               	btfss	___awmod@dividend+1,7
 11625  20F9  2901               	goto	l6094
 11626  20FA  09F4               	comf	___awmod@dividend,f
 11627  20FB  09F5               	comf	___awmod@dividend+1,f
 11628  20FC  0AF4               	incf	___awmod@dividend,f
 11629  20FD  1903               	skipnz
 11630  20FE  0AF5               	incf	___awmod@dividend+1,f
 11631  20FF  01F8               	clrf	___awmod@sign
 11632  2100  0AF8               	incf	___awmod@sign,f
 11633  2101                     l6094:	
 11634  2101  1FF3               	btfss	___awmod@divisor+1,7
 11635  2102  2908               	goto	l6098
 11636  2103  09F2               	comf	___awmod@divisor,f
 11637  2104  09F3               	comf	___awmod@divisor+1,f
 11638  2105  0AF2               	incf	___awmod@divisor,f
 11639  2106  1903               	skipnz
 11640  2107  0AF3               	incf	___awmod@divisor+1,f
 11641  2108                     l6098:	
 11642  2108  0872               	movf	___awmod@divisor,w
 11643  2109  0473               	iorwf	___awmod@divisor+1,w
 11644  210A  1903               	btfsc	3,2
 11645  210B  292F               	goto	l6116
 11646  210C  01F7               	clrf	___awmod@counter
 11647  210D  0AF7               	incf	___awmod@counter,f
 11648  210E                     l6106:	
 11649  210E  1BF3               	btfsc	___awmod@divisor+1,7
 11650  210F  291A               	goto	l6108
 11651  2110  3001               	movlw	1
 11652  2111                     u7915:	
 11653  2111  35F2               	lslf	___awmod@divisor,f
 11654  2112  0DF3               	rlf	___awmod@divisor+1,f
 11655  2113  0B89               	decfsz	9,f
 11656  2114  2911               	goto	u7915
 11657  2115  3001               	movlw	1
 11658  2116  00F6               	movwf	??___awmod
 11659  2117  0876               	movf	??___awmod,w
 11660  2118  07F7               	addwf	___awmod@counter,f
 11661  2119  290E               	goto	l6106
 11662  211A                     l6108:	
 11663  211A  0873               	movf	___awmod@divisor+1,w
 11664  211B  0275               	subwf	___awmod@dividend+1,w
 11665  211C  1D03               	skipz
 11666  211D  2920               	goto	u7935
 11667  211E  0872               	movf	___awmod@divisor,w
 11668  211F  0274               	subwf	___awmod@dividend,w
 11669  2120                     u7935:	
 11670  2120  1C03               	skipc
 11671  2121  2926               	goto	l6112
 11672  2122  0872               	movf	___awmod@divisor,w
 11673  2123  02F4               	subwf	___awmod@dividend,f
 11674  2124  0873               	movf	___awmod@divisor+1,w
 11675  2125  3BF5               	subwfb	___awmod@dividend+1,f
 11676  2126                     l6112:	
 11677  2126  3001               	movlw	1
 11678  2127                     u7945:	
 11679  2127  36F3               	lsrf	___awmod@divisor+1,f
 11680  2128  0CF2               	rrf	___awmod@divisor,f
 11681  2129  0B89               	decfsz	9,f
 11682  212A  2927               	goto	u7945
 11683  212B  3001               	movlw	1
 11684  212C  02F7               	subwf	___awmod@counter,f
 11685  212D  1D03               	btfss	3,2
 11686  212E  291A               	goto	l6108
 11687  212F                     l6116:	
 11688  212F  0878               	movf	___awmod@sign,w
 11689  2130  1903               	btfsc	3,2
 11690  2131  2937               	goto	l6120
 11691  2132  09F4               	comf	___awmod@dividend,f
 11692  2133  09F5               	comf	___awmod@dividend+1,f
 11693  2134  0AF4               	incf	___awmod@dividend,f
 11694  2135  1903               	skipnz
 11695  2136  0AF5               	incf	___awmod@dividend+1,f
 11696  2137                     l6120:	
 11697  2137  0875               	movf	___awmod@dividend+1,w
 11698  2138  00F3               	movwf	?___awmod+1
 11699  2139  0874               	movf	___awmod@dividend,w
 11700  213A  00F2               	movwf	?___awmod
 11701  213B  0008               	return
 11702  213C                     __end_of___awmod:	
 11703                           
 11704                           	psect	text12
 11705  21DD                     __ptext12:	
 11706 ;; *************** function ___awdiv *****************
 11707 ;; Defined at:
 11708 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  divisor         2    0[BANK0 ] int 
 11711 ;;  dividend        2    2[BANK0 ] int 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;  quotient        2    6[BANK0 ] int 
 11714 ;;  sign            1    5[BANK0 ] unsigned char 
 11715 ;;  counter         1    4[BANK0 ] unsigned char 
 11716 ;; Return value:  Size  Location     Type
 11717 ;;                  2    0[BANK0 ] int 
 11718 ;; Registers used:
 11719 ;;		wreg, status,2, status,0
 11720 ;; Tracked objects:
 11721 ;;		On entry : 0/0
 11722 ;;		On exit  : 0/0
 11723 ;;		Unchanged: 0/0
 11724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11725 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11726 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11727 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11728 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11729 ;;Total ram usage:        9 bytes
 11730 ;; Hardware stack levels used:    1
 11731 ;; Hardware stack levels required when called:    2
 11732 ;; This function calls:
 11733 ;;		Nothing
 11734 ;; This function is called by:
 11735 ;;		_fround
 11736 ;;		_scale
 11737 ;;		_sprintf
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           
 11742                           ;psect for function ___awdiv
 11743  21DD                     ___awdiv:	
 11744                           
 11745                           ;incstack = 0
 11746                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11747  21DD  0020               	movlb	0	; select bank0
 11748  21DE  01A5               	clrf	___awdiv@sign
 11749  21DF  1FA1               	btfss	___awdiv@divisor+1,7
 11750  21E0  29E8               	goto	l6050
 11751  21E1  09A0               	comf	___awdiv@divisor,f
 11752  21E2  09A1               	comf	___awdiv@divisor+1,f
 11753  21E3  0AA0               	incf	___awdiv@divisor,f
 11754  21E4  1903               	skipnz
 11755  21E5  0AA1               	incf	___awdiv@divisor+1,f
 11756  21E6  01A5               	clrf	___awdiv@sign
 11757  21E7  0AA5               	incf	___awdiv@sign,f
 11758  21E8                     l6050:	
 11759  21E8  1FA3               	btfss	___awdiv@dividend+1,7
 11760  21E9  29F3               	goto	l6056
 11761  21EA  09A2               	comf	___awdiv@dividend,f
 11762  21EB  09A3               	comf	___awdiv@dividend+1,f
 11763  21EC  0AA2               	incf	___awdiv@dividend,f
 11764  21ED  1903               	skipnz
 11765  21EE  0AA3               	incf	___awdiv@dividend+1,f
 11766  21EF  3001               	movlw	1
 11767  21F0  00F9               	movwf	??___awdiv
 11768  21F1  0879               	movf	??___awdiv,w
 11769  21F2  06A5               	xorwf	___awdiv@sign,f
 11770  21F3                     l6056:	
 11771  21F3  01A6               	clrf	___awdiv@quotient
 11772  21F4  01A7               	clrf	___awdiv@quotient+1
 11773  21F5  0820               	movf	___awdiv@divisor,w
 11774  21F6  0421               	iorwf	___awdiv@divisor+1,w
 11775  21F7  1903               	btfsc	3,2
 11776  21F8  2A22               	goto	l6078
 11777  21F9  01A4               	clrf	___awdiv@counter
 11778  21FA  0AA4               	incf	___awdiv@counter,f
 11779  21FB                     l6066:	
 11780  21FB  1BA1               	btfsc	___awdiv@divisor+1,7
 11781  21FC  2A07               	goto	l6068
 11782  21FD  3001               	movlw	1
 11783  21FE                     u7815:	
 11784  21FE  35A0               	lslf	___awdiv@divisor,f
 11785  21FF  0DA1               	rlf	___awdiv@divisor+1,f
 11786  2200  0B89               	decfsz	9,f
 11787  2201  29FE               	goto	u7815
 11788  2202  3001               	movlw	1
 11789  2203  00F9               	movwf	??___awdiv
 11790  2204  0879               	movf	??___awdiv,w
 11791  2205  07A4               	addwf	___awdiv@counter,f
 11792  2206  29FB               	goto	l6066
 11793  2207                     l6068:	
 11794  2207  3001               	movlw	1
 11795  2208                     u7835:	
 11796  2208  35A6               	lslf	___awdiv@quotient,f
 11797  2209  0DA7               	rlf	___awdiv@quotient+1,f
 11798  220A  0B89               	decfsz	9,f
 11799  220B  2A08               	goto	u7835
 11800  220C  0821               	movf	___awdiv@divisor+1,w
 11801  220D  0223               	subwf	___awdiv@dividend+1,w
 11802  220E  1D03               	skipz
 11803  220F  2A12               	goto	u7845
 11804  2210  0820               	movf	___awdiv@divisor,w
 11805  2211  0222               	subwf	___awdiv@dividend,w
 11806  2212                     u7845:	
 11807  2212  1C03               	skipc
 11808  2213  2A19               	goto	l6074
 11809  2214  0820               	movf	___awdiv@divisor,w
 11810  2215  02A2               	subwf	___awdiv@dividend,f
 11811  2216  0821               	movf	___awdiv@divisor+1,w
 11812  2217  3BA3               	subwfb	___awdiv@dividend+1,f
 11813  2218  1426               	bsf	___awdiv@quotient,0
 11814  2219                     l6074:	
 11815  2219  3001               	movlw	1
 11816  221A                     u7855:	
 11817  221A  36A1               	lsrf	___awdiv@divisor+1,f
 11818  221B  0CA0               	rrf	___awdiv@divisor,f
 11819  221C  0B89               	decfsz	9,f
 11820  221D  2A1A               	goto	u7855
 11821  221E  3001               	movlw	1
 11822  221F  02A4               	subwf	___awdiv@counter,f
 11823  2220  1D03               	btfss	3,2
 11824  2221  2A07               	goto	l6068
 11825  2222                     l6078:	
 11826  2222  0825               	movf	___awdiv@sign,w
 11827  2223  1903               	btfsc	3,2
 11828  2224  2A2A               	goto	l6082
 11829  2225  09A6               	comf	___awdiv@quotient,f
 11830  2226  09A7               	comf	___awdiv@quotient+1,f
 11831  2227  0AA6               	incf	___awdiv@quotient,f
 11832  2228  1903               	skipnz
 11833  2229  0AA7               	incf	___awdiv@quotient+1,f
 11834  222A                     l6082:	
 11835  222A  0827               	movf	___awdiv@quotient+1,w
 11836  222B  00A1               	movwf	?___awdiv+1
 11837  222C  0826               	movf	___awdiv@quotient,w
 11838  222D  00A0               	movwf	?___awdiv
 11839  222E  0008               	return
 11840  222F                     __end_of___awdiv:	
 11841                           
 11842                           	psect	text13
 11843  274A                     __ptext13:	
 11844 ;; *************** function __tdiv_to_l_ *****************
 11845 ;; Defined at:
 11846 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 11847 ;; Parameters:    Size  Location     Type
 11848 ;;  f1              4    2[COMMON] float 
 11849 ;;  f2              4    6[COMMON] float 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  quot            4    4[BANK0 ] unsigned long 
 11852 ;;  exp1            1    9[BANK0 ] unsigned char 
 11853 ;;  cntr            1    8[BANK0 ] unsigned char 
 11854 ;; Return value:  Size  Location     Type
 11855 ;;                  4    2[COMMON] unsigned long 
 11856 ;; Registers used:
 11857 ;;		wreg, status,2, status,0
 11858 ;; Tracked objects:
 11859 ;;		On entry : 0/0
 11860 ;;		On exit  : 0/0
 11861 ;;		Unchanged: 0/0
 11862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11863 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11864 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11865 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11866 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11867 ;;Total ram usage:       18 bytes
 11868 ;; Hardware stack levels used:    1
 11869 ;; Hardware stack levels required when called:    2
 11870 ;; This function calls:
 11871 ;;		Nothing
 11872 ;; This function is called by:
 11873 ;;		_sprintf
 11874 ;; This function uses a non-reentrant model
 11875 ;;
 11876                           
 11877                           
 11878                           ;psect for function __tdiv_to_l_
 11879  274A                     __tdiv_to_l_:	
 11880                           
 11881                           ;incstack = 0
 11882                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 11883  274A  0872               	movf	__tdiv_to_l_@f1,w
 11884  274B  0020               	movlb	0	; select bank0
 11885  274C  00A0               	movwf	??__tdiv_to_l_
 11886  274D  0873               	movf	__tdiv_to_l_@f1+1,w
 11887  274E  00A1               	movwf	??__tdiv_to_l_+1
 11888  274F  0874               	movf	__tdiv_to_l_@f1+2,w
 11889  2750  00A2               	movwf	??__tdiv_to_l_+2
 11890  2751  1003               	clrc
 11891  2752  0D21               	rlf	??__tdiv_to_l_+1,w
 11892  2753  0D22               	rlf	??__tdiv_to_l_+2,w
 11893  2754  00A3               	movwf	??__tdiv_to_l_+3
 11894  2755  0823               	movf	??__tdiv_to_l_+3,w
 11895  2756  00A9               	movwf	__tdiv_to_l_@exp1
 11896  2757  0829               	movf	__tdiv_to_l_@exp1,w
 11897  2758  1D03               	btfss	3,2
 11898  2759  2F63               	goto	l6538
 11899  275A  3000               	movlw	0
 11900  275B  00F5               	movwf	?__tdiv_to_l_+3
 11901  275C  3000               	movlw	0
 11902  275D  00F4               	movwf	?__tdiv_to_l_+2
 11903  275E  3000               	movlw	0
 11904  275F  00F3               	movwf	?__tdiv_to_l_+1
 11905  2760  3000               	movlw	0
 11906  2761  00F2               	movwf	?__tdiv_to_l_
 11907  2762  0008               	return
 11908  2763                     l6538:	
 11909  2763  0876               	movf	__tdiv_to_l_@f2,w
 11910  2764  00A0               	movwf	??__tdiv_to_l_
 11911  2765  0877               	movf	__tdiv_to_l_@f2+1,w
 11912  2766  00A1               	movwf	??__tdiv_to_l_+1
 11913  2767  0878               	movf	__tdiv_to_l_@f2+2,w
 11914  2768  00A2               	movwf	??__tdiv_to_l_+2
 11915  2769  1003               	clrc
 11916  276A  0D21               	rlf	??__tdiv_to_l_+1,w
 11917  276B  0D22               	rlf	??__tdiv_to_l_+2,w
 11918  276C  00A3               	movwf	??__tdiv_to_l_+3
 11919  276D  0823               	movf	??__tdiv_to_l_+3,w
 11920  276E  00A8               	movwf	__tdiv_to_l_@cntr
 11921  276F  0828               	movf	__tdiv_to_l_@cntr,w
 11922  2770  1D03               	btfss	3,2
 11923  2771  2F7B               	goto	l1118
 11924  2772  3000               	movlw	0
 11925  2773  00F5               	movwf	?__tdiv_to_l_+3
 11926  2774  3000               	movlw	0
 11927  2775  00F4               	movwf	?__tdiv_to_l_+2
 11928  2776  3000               	movlw	0
 11929  2777  00F3               	movwf	?__tdiv_to_l_+1
 11930  2778  3000               	movlw	0
 11931  2779  00F2               	movwf	?__tdiv_to_l_
 11932  277A  0008               	return
 11933  277B                     l1118:	
 11934  277B  17F3               	bsf	__tdiv_to_l_@f1+1,7
 11935  277C  30FF               	movlw	255
 11936  277D  05F2               	andwf	__tdiv_to_l_@f1,f
 11937  277E  30FF               	movlw	255
 11938  277F  05F3               	andwf	__tdiv_to_l_@f1+1,f
 11939  2780  3000               	movlw	0
 11940  2781  05F4               	andwf	__tdiv_to_l_@f1+2,f
 11941  2782  17F7               	bsf	__tdiv_to_l_@f2+1,7
 11942  2783  30FF               	movlw	255
 11943  2784  05F6               	andwf	__tdiv_to_l_@f2,f
 11944  2785  30FF               	movlw	255
 11945  2786  05F7               	andwf	__tdiv_to_l_@f2+1,f
 11946  2787  3000               	movlw	0
 11947  2788  05F8               	andwf	__tdiv_to_l_@f2+2,f
 11948  2789  3000               	movlw	0
 11949  278A  00A7               	movwf	__tdiv_to_l_@quot+3
 11950  278B  3000               	movlw	0
 11951  278C  00A6               	movwf	__tdiv_to_l_@quot+2
 11952  278D  3000               	movlw	0
 11953  278E  00A5               	movwf	__tdiv_to_l_@quot+1
 11954  278F  3000               	movlw	0
 11955  2790  00A4               	movwf	__tdiv_to_l_@quot
 11956  2791  307F               	movlw	127
 11957  2792  02A9               	subwf	__tdiv_to_l_@exp1,f
 11958  2793  3098               	movlw	152
 11959  2794  0728               	addwf	__tdiv_to_l_@cntr,w
 11960  2795  00A0               	movwf	??__tdiv_to_l_
 11961  2796  0820               	movf	??__tdiv_to_l_,w
 11962  2797  02A9               	subwf	__tdiv_to_l_@exp1,f
 11963  2798  3018               	movlw	24
 11964  2799  00A0               	movwf	??__tdiv_to_l_
 11965  279A  0820               	movf	??__tdiv_to_l_,w
 11966  279B  00A8               	movwf	__tdiv_to_l_@cntr
 11967  279C                     l6552:	
 11968  279C  3001               	movlw	1
 11969  279D                     u8775:	
 11970  279D  35A4               	lslf	__tdiv_to_l_@quot,f
 11971  279E  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 11972  279F  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 11973  27A0  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 11974  27A1  0B89               	decfsz	9,f
 11975  27A2  2F9D               	goto	u8775
 11976  27A3  0878               	movf	__tdiv_to_l_@f2+2,w
 11977  27A4  0274               	subwf	__tdiv_to_l_@f1+2,w
 11978  27A5  1D03               	skipz
 11979  27A6  2FAD               	goto	u8785
 11980  27A7  0877               	movf	__tdiv_to_l_@f2+1,w
 11981  27A8  0273               	subwf	__tdiv_to_l_@f1+1,w
 11982  27A9  1D03               	skipz
 11983  27AA  2FAD               	goto	u8785
 11984  27AB  0876               	movf	__tdiv_to_l_@f2,w
 11985  27AC  0272               	subwf	__tdiv_to_l_@f1,w
 11986  27AD                     u8785:	
 11987  27AD  1C03               	skipc
 11988  27AE  2FB6               	goto	l6560
 11989  27AF  0876               	movf	__tdiv_to_l_@f2,w
 11990  27B0  02F2               	subwf	__tdiv_to_l_@f1,f
 11991  27B1  0877               	movf	__tdiv_to_l_@f2+1,w
 11992  27B2  3BF3               	subwfb	__tdiv_to_l_@f1+1,f
 11993  27B3  0878               	movf	__tdiv_to_l_@f2+2,w
 11994  27B4  3BF4               	subwfb	__tdiv_to_l_@f1+2,f
 11995  27B5  1424               	bsf	__tdiv_to_l_@quot,0
 11996  27B6                     l6560:	
 11997  27B6  3001               	movlw	1
 11998  27B7                     u8795:	
 11999  27B7  35F2               	lslf	__tdiv_to_l_@f1,f
 12000  27B8  0DF3               	rlf	__tdiv_to_l_@f1+1,f
 12001  27B9  0DF4               	rlf	__tdiv_to_l_@f1+2,f
 12002  27BA  0B89               	decfsz	9,f
 12003  27BB  2FB7               	goto	u8795
 12004  27BC  3001               	movlw	1
 12005  27BD  02A8               	subwf	__tdiv_to_l_@cntr,f
 12006  27BE  1D03               	btfss	3,2
 12007  27BF  2F9C               	goto	l6552
 12008  27C0  1FA9               	btfss	__tdiv_to_l_@exp1,7
 12009  27C1  2FDE               	goto	l6572
 12010  27C2  0829               	movf	__tdiv_to_l_@exp1,w
 12011  27C3  3A80               	xorlw	128
 12012  27C4  3E97               	addlw	151
 12013  27C5  1803               	skipnc
 12014  27C6  2FD0               	goto	l6570
 12015  27C7  3000               	movlw	0
 12016  27C8  00F5               	movwf	?__tdiv_to_l_+3
 12017  27C9  3000               	movlw	0
 12018  27CA  00F4               	movwf	?__tdiv_to_l_+2
 12019  27CB  3000               	movlw	0
 12020  27CC  00F3               	movwf	?__tdiv_to_l_+1
 12021  27CD  3000               	movlw	0
 12022  27CE  00F2               	movwf	?__tdiv_to_l_
 12023  27CF  0008               	return
 12024  27D0                     l6570:	
 12025  27D0  3001               	movlw	1
 12026  27D1                     u8835:	
 12027  27D1  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 12028  27D2  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 12029  27D3  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 12030  27D4  0CA4               	rrf	__tdiv_to_l_@quot,f
 12031  27D5  0B89               	decfsz	9,f
 12032  27D6  2FD1               	goto	u8835
 12033  27D7  3001               	movlw	1
 12034  27D8  00A0               	movwf	??__tdiv_to_l_
 12035  27D9  0820               	movf	??__tdiv_to_l_,w
 12036  27DA  07A9               	addwf	__tdiv_to_l_@exp1,f
 12037  27DB  1903               	btfsc	3,2
 12038  27DC  2FF7               	goto	l6580
 12039  27DD  2FD0               	goto	l6570
 12040  27DE                     l6572:	
 12041  27DE  3018               	movlw	24
 12042  27DF  0229               	subwf	__tdiv_to_l_@exp1,w
 12043  27E0  1C03               	skipc
 12044  27E1  2FF4               	goto	l1128
 12045  27E2  3000               	movlw	0
 12046  27E3  00F5               	movwf	?__tdiv_to_l_+3
 12047  27E4  3000               	movlw	0
 12048  27E5  00F4               	movwf	?__tdiv_to_l_+2
 12049  27E6  3000               	movlw	0
 12050  27E7  00F3               	movwf	?__tdiv_to_l_+1
 12051  27E8  3000               	movlw	0
 12052  27E9  00F2               	movwf	?__tdiv_to_l_
 12053  27EA  0008               	return
 12054  27EB                     l6578:	
 12055  27EB  3001               	movlw	1
 12056  27EC                     u8865:	
 12057  27EC  35A4               	lslf	__tdiv_to_l_@quot,f
 12058  27ED  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 12059  27EE  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 12060  27EF  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 12061  27F0  0B89               	decfsz	9,f
 12062  27F1  2FEC               	goto	u8865
 12063  27F2  3001               	movlw	1
 12064  27F3  02A9               	subwf	__tdiv_to_l_@exp1,f
 12065  27F4                     l1128:	
 12066  27F4  0829               	movf	__tdiv_to_l_@exp1,w
 12067  27F5  1D03               	btfss	3,2
 12068  27F6  2FEB               	goto	l6578
 12069  27F7                     l6580:	
 12070  27F7  0827               	movf	__tdiv_to_l_@quot+3,w
 12071  27F8  00F5               	movwf	?__tdiv_to_l_+3
 12072  27F9  0826               	movf	__tdiv_to_l_@quot+2,w
 12073  27FA  00F4               	movwf	?__tdiv_to_l_+2
 12074  27FB  0825               	movf	__tdiv_to_l_@quot+1,w
 12075  27FC  00F3               	movwf	?__tdiv_to_l_+1
 12076  27FD  0824               	movf	__tdiv_to_l_@quot,w
 12077  27FE  00F2               	movwf	?__tdiv_to_l_
 12078  27FF  0008               	return
 12079  2800                     __end_of__tdiv_to_l_:	
 12080                           
 12081                           	psect	text14
 12082  1C09                     __ptext14:	
 12083 ;; *************** function __div_to_l_ *****************
 12084 ;; Defined at:
 12085 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;  f1              4    2[COMMON] unsigned long 
 12088 ;;  f2              4    6[COMMON] unsigned long 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  quot            4    5[BANK0 ] unsigned long 
 12091 ;;  exp1            1   10[BANK0 ] unsigned char 
 12092 ;;  cntr            1    9[BANK0 ] unsigned char 
 12093 ;; Return value:  Size  Location     Type
 12094 ;;                  4    2[COMMON] unsigned long 
 12095 ;; Registers used:
 12096 ;;		wreg, status,2, status,0
 12097 ;; Tracked objects:
 12098 ;;		On entry : 0/0
 12099 ;;		On exit  : 0/0
 12100 ;;		Unchanged: 0/0
 12101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12102 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12103 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12104 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12105 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12106 ;;Total ram usage:       19 bytes
 12107 ;; Hardware stack levels used:    1
 12108 ;; Hardware stack levels required when called:    2
 12109 ;; This function calls:
 12110 ;;		Nothing
 12111 ;; This function is called by:
 12112 ;;		_sprintf
 12113 ;; This function uses a non-reentrant model
 12114 ;;
 12115                           
 12116                           
 12117                           ;psect for function __div_to_l_
 12118  1C09                     __div_to_l_:	
 12119                           
 12120                           ;incstack = 0
 12121                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 12122  1C09  0872               	movf	__div_to_l_@f1,w
 12123  1C0A  0020               	movlb	0	; select bank0
 12124  1C0B  00A0               	movwf	??__div_to_l_
 12125  1C0C  0873               	movf	__div_to_l_@f1+1,w
 12126  1C0D  00A1               	movwf	??__div_to_l_+1
 12127  1C0E  0874               	movf	__div_to_l_@f1+2,w
 12128  1C0F  00A2               	movwf	??__div_to_l_+2
 12129  1C10  0875               	movf	__div_to_l_@f1+3,w
 12130  1C11  00A3               	movwf	??__div_to_l_+3
 12131  1C12  1003               	clrc
 12132  1C13  0D22               	rlf	??__div_to_l_+2,w
 12133  1C14  0D23               	rlf	??__div_to_l_+3,w
 12134  1C15  00A4               	movwf	??__div_to_l_+4
 12135  1C16  0824               	movf	??__div_to_l_+4,w
 12136  1C17  00AA               	movwf	__div_to_l_@exp1
 12137  1C18  082A               	movf	__div_to_l_@exp1,w
 12138  1C19  1D03               	btfss	3,2
 12139  1C1A  2C24               	goto	l6590
 12140  1C1B  3000               	movlw	0
 12141  1C1C  00F5               	movwf	?__div_to_l_+3
 12142  1C1D  3000               	movlw	0
 12143  1C1E  00F4               	movwf	?__div_to_l_+2
 12144  1C1F  3000               	movlw	0
 12145  1C20  00F3               	movwf	?__div_to_l_+1
 12146  1C21  3000               	movlw	0
 12147  1C22  00F2               	movwf	?__div_to_l_
 12148  1C23  0008               	return
 12149  1C24                     l6590:	
 12150  1C24  0876               	movf	__div_to_l_@f2,w
 12151  1C25  00A0               	movwf	??__div_to_l_
 12152  1C26  0877               	movf	__div_to_l_@f2+1,w
 12153  1C27  00A1               	movwf	??__div_to_l_+1
 12154  1C28  0878               	movf	__div_to_l_@f2+2,w
 12155  1C29  00A2               	movwf	??__div_to_l_+2
 12156  1C2A  0879               	movf	__div_to_l_@f2+3,w
 12157  1C2B  00A3               	movwf	??__div_to_l_+3
 12158  1C2C  1003               	clrc
 12159  1C2D  0D22               	rlf	??__div_to_l_+2,w
 12160  1C2E  0D23               	rlf	??__div_to_l_+3,w
 12161  1C2F  00A4               	movwf	??__div_to_l_+4
 12162  1C30  0824               	movf	??__div_to_l_+4,w
 12163  1C31  00A9               	movwf	__div_to_l_@cntr
 12164  1C32  0829               	movf	__div_to_l_@cntr,w
 12165  1C33  1D03               	btfss	3,2
 12166  1C34  2C3E               	goto	l1076
 12167  1C35  3000               	movlw	0
 12168  1C36  00F5               	movwf	?__div_to_l_+3
 12169  1C37  3000               	movlw	0
 12170  1C38  00F4               	movwf	?__div_to_l_+2
 12171  1C39  3000               	movlw	0
 12172  1C3A  00F3               	movwf	?__div_to_l_+1
 12173  1C3B  3000               	movlw	0
 12174  1C3C  00F2               	movwf	?__div_to_l_
 12175  1C3D  0008               	return
 12176  1C3E                     l1076:	
 12177  1C3E  17F4               	bsf	__div_to_l_@f1+2,7
 12178  1C3F  30FF               	movlw	255
 12179  1C40  05F2               	andwf	__div_to_l_@f1,f
 12180  1C41  30FF               	movlw	255
 12181  1C42  05F3               	andwf	__div_to_l_@f1+1,f
 12182  1C43  30FF               	movlw	255
 12183  1C44  05F4               	andwf	__div_to_l_@f1+2,f
 12184  1C45  3000               	movlw	0
 12185  1C46  05F5               	andwf	__div_to_l_@f1+3,f
 12186  1C47  17F8               	bsf	__div_to_l_@f2+2,7
 12187  1C48  30FF               	movlw	255
 12188  1C49  05F6               	andwf	__div_to_l_@f2,f
 12189  1C4A  30FF               	movlw	255
 12190  1C4B  05F7               	andwf	__div_to_l_@f2+1,f
 12191  1C4C  30FF               	movlw	255
 12192  1C4D  05F8               	andwf	__div_to_l_@f2+2,f
 12193  1C4E  3000               	movlw	0
 12194  1C4F  05F9               	andwf	__div_to_l_@f2+3,f
 12195  1C50  3000               	movlw	0
 12196  1C51  00A8               	movwf	__div_to_l_@quot+3
 12197  1C52  3000               	movlw	0
 12198  1C53  00A7               	movwf	__div_to_l_@quot+2
 12199  1C54  3000               	movlw	0
 12200  1C55  00A6               	movwf	__div_to_l_@quot+1
 12201  1C56  3000               	movlw	0
 12202  1C57  00A5               	movwf	__div_to_l_@quot
 12203  1C58  307F               	movlw	127
 12204  1C59  02AA               	subwf	__div_to_l_@exp1,f
 12205  1C5A  30A0               	movlw	160
 12206  1C5B  0729               	addwf	__div_to_l_@cntr,w
 12207  1C5C  00A0               	movwf	??__div_to_l_
 12208  1C5D  0820               	movf	??__div_to_l_,w
 12209  1C5E  02AA               	subwf	__div_to_l_@exp1,f
 12210  1C5F  3020               	movlw	32
 12211  1C60  00A0               	movwf	??__div_to_l_
 12212  1C61  0820               	movf	??__div_to_l_,w
 12213  1C62  00A9               	movwf	__div_to_l_@cntr
 12214  1C63                     l6604:	
 12215  1C63  3001               	movlw	1
 12216  1C64                     u8905:	
 12217  1C64  35A5               	lslf	__div_to_l_@quot,f
 12218  1C65  0DA6               	rlf	__div_to_l_@quot+1,f
 12219  1C66  0DA7               	rlf	__div_to_l_@quot+2,f
 12220  1C67  0DA8               	rlf	__div_to_l_@quot+3,f
 12221  1C68  0B89               	decfsz	9,f
 12222  1C69  2C64               	goto	u8905
 12223  1C6A  0879               	movf	__div_to_l_@f2+3,w
 12224  1C6B  0275               	subwf	__div_to_l_@f1+3,w
 12225  1C6C  1D03               	skipz
 12226  1C6D  2C78               	goto	u8915
 12227  1C6E  0878               	movf	__div_to_l_@f2+2,w
 12228  1C6F  0274               	subwf	__div_to_l_@f1+2,w
 12229  1C70  1D03               	skipz
 12230  1C71  2C78               	goto	u8915
 12231  1C72  0877               	movf	__div_to_l_@f2+1,w
 12232  1C73  0273               	subwf	__div_to_l_@f1+1,w
 12233  1C74  1D03               	skipz
 12234  1C75  2C78               	goto	u8915
 12235  1C76  0876               	movf	__div_to_l_@f2,w
 12236  1C77  0272               	subwf	__div_to_l_@f1,w
 12237  1C78                     u8915:	
 12238  1C78  1C03               	skipc
 12239  1C79  2C83               	goto	l6612
 12240  1C7A  0876               	movf	__div_to_l_@f2,w
 12241  1C7B  02F2               	subwf	__div_to_l_@f1,f
 12242  1C7C  0877               	movf	__div_to_l_@f2+1,w
 12243  1C7D  3BF3               	subwfb	__div_to_l_@f1+1,f
 12244  1C7E  0878               	movf	__div_to_l_@f2+2,w
 12245  1C7F  3BF4               	subwfb	__div_to_l_@f1+2,f
 12246  1C80  0879               	movf	__div_to_l_@f2+3,w
 12247  1C81  3BF5               	subwfb	__div_to_l_@f1+3,f
 12248  1C82  1425               	bsf	__div_to_l_@quot,0
 12249  1C83                     l6612:	
 12250  1C83  3001               	movlw	1
 12251  1C84                     u8925:	
 12252  1C84  35F2               	lslf	__div_to_l_@f1,f
 12253  1C85  0DF3               	rlf	__div_to_l_@f1+1,f
 12254  1C86  0DF4               	rlf	__div_to_l_@f1+2,f
 12255  1C87  0DF5               	rlf	__div_to_l_@f1+3,f
 12256  1C88  0B89               	decfsz	9,f
 12257  1C89  2C84               	goto	u8925
 12258  1C8A  3001               	movlw	1
 12259  1C8B  02A9               	subwf	__div_to_l_@cntr,f
 12260  1C8C  1D03               	btfss	3,2
 12261  1C8D  2C63               	goto	l6604
 12262  1C8E  1FAA               	btfss	__div_to_l_@exp1,7
 12263  1C8F  2CAC               	goto	l6624
 12264  1C90  082A               	movf	__div_to_l_@exp1,w
 12265  1C91  3A80               	xorlw	128
 12266  1C92  3E9F               	addlw	159
 12267  1C93  1803               	skipnc
 12268  1C94  2C9E               	goto	l6622
 12269  1C95  3000               	movlw	0
 12270  1C96  00F5               	movwf	?__div_to_l_+3
 12271  1C97  3000               	movlw	0
 12272  1C98  00F4               	movwf	?__div_to_l_+2
 12273  1C99  3000               	movlw	0
 12274  1C9A  00F3               	movwf	?__div_to_l_+1
 12275  1C9B  3000               	movlw	0
 12276  1C9C  00F2               	movwf	?__div_to_l_
 12277  1C9D  0008               	return
 12278  1C9E                     l6622:	
 12279  1C9E  3001               	movlw	1
 12280  1C9F                     u8965:	
 12281  1C9F  36A8               	lsrf	__div_to_l_@quot+3,f
 12282  1CA0  0CA7               	rrf	__div_to_l_@quot+2,f
 12283  1CA1  0CA6               	rrf	__div_to_l_@quot+1,f
 12284  1CA2  0CA5               	rrf	__div_to_l_@quot,f
 12285  1CA3  0B89               	decfsz	9,f
 12286  1CA4  2C9F               	goto	u8965
 12287  1CA5  3001               	movlw	1
 12288  1CA6  00A0               	movwf	??__div_to_l_
 12289  1CA7  0820               	movf	??__div_to_l_,w
 12290  1CA8  07AA               	addwf	__div_to_l_@exp1,f
 12291  1CA9  1903               	btfsc	3,2
 12292  1CAA  2CC5               	goto	l6632
 12293  1CAB  2C9E               	goto	l6622
 12294  1CAC                     l6624:	
 12295  1CAC  3020               	movlw	32
 12296  1CAD  022A               	subwf	__div_to_l_@exp1,w
 12297  1CAE  1C03               	skipc
 12298  1CAF  2CC2               	goto	l1086
 12299  1CB0  3000               	movlw	0
 12300  1CB1  00F5               	movwf	?__div_to_l_+3
 12301  1CB2  3000               	movlw	0
 12302  1CB3  00F4               	movwf	?__div_to_l_+2
 12303  1CB4  3000               	movlw	0
 12304  1CB5  00F3               	movwf	?__div_to_l_+1
 12305  1CB6  3000               	movlw	0
 12306  1CB7  00F2               	movwf	?__div_to_l_
 12307  1CB8  0008               	return
 12308  1CB9                     l6630:	
 12309  1CB9  3001               	movlw	1
 12310  1CBA                     u8995:	
 12311  1CBA  35A5               	lslf	__div_to_l_@quot,f
 12312  1CBB  0DA6               	rlf	__div_to_l_@quot+1,f
 12313  1CBC  0DA7               	rlf	__div_to_l_@quot+2,f
 12314  1CBD  0DA8               	rlf	__div_to_l_@quot+3,f
 12315  1CBE  0B89               	decfsz	9,f
 12316  1CBF  2CBA               	goto	u8995
 12317  1CC0  3001               	movlw	1
 12318  1CC1  02AA               	subwf	__div_to_l_@exp1,f
 12319  1CC2                     l1086:	
 12320  1CC2  082A               	movf	__div_to_l_@exp1,w
 12321  1CC3  1D03               	btfss	3,2
 12322  1CC4  2CB9               	goto	l6630
 12323  1CC5                     l6632:	
 12324  1CC5  0828               	movf	__div_to_l_@quot+3,w
 12325  1CC6  00F5               	movwf	?__div_to_l_+3
 12326  1CC7  0827               	movf	__div_to_l_@quot+2,w
 12327  1CC8  00F4               	movwf	?__div_to_l_+2
 12328  1CC9  0826               	movf	__div_to_l_@quot+1,w
 12329  1CCA  00F3               	movwf	?__div_to_l_+1
 12330  1CCB  0825               	movf	__div_to_l_@quot,w
 12331  1CCC  00F2               	movwf	?__div_to_l_
 12332  1CCD  0008               	return
 12333  1CCE                     __end_of__div_to_l_:	
 12334                           
 12335                           	psect	text15
 12336  20B4                     __ptext15:	
 12337 ;; *************** function ___llmod *****************
 12338 ;; Defined at:
 12339 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 12340 ;; Parameters:    Size  Location     Type
 12341 ;;  divisor         4    6[BANK0 ] unsigned long 
 12342 ;;  dividend        4   10[BANK0 ] unsigned long 
 12343 ;; Auto vars:     Size  Location     Type
 12344 ;;  counter         1   15[BANK0 ] unsigned char 
 12345 ;; Return value:  Size  Location     Type
 12346 ;;                  4    6[BANK0 ] unsigned long 
 12347 ;; Registers used:
 12348 ;;		wreg, status,2, status,0
 12349 ;; Tracked objects:
 12350 ;;		On entry : 0/0
 12351 ;;		On exit  : 0/0
 12352 ;;		Unchanged: 0/0
 12353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12354 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12355 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12357 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12358 ;;Total ram usage:       10 bytes
 12359 ;; Hardware stack levels used:    1
 12360 ;; Hardware stack levels required when called:    2
 12361 ;; This function calls:
 12362 ;;		Nothing
 12363 ;; This function is called by:
 12364 ;;		_sprintf
 12365 ;; This function uses a non-reentrant model
 12366 ;;
 12367                           
 12368                           
 12369                           ;psect for function ___llmod
 12370  20B4                     ___llmod:	
 12371                           
 12372                           ;incstack = 0
 12373                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12374  20B4  0020               	movlb	0	; select bank0
 12375  20B5  0829               	movf	___llmod@divisor+3,w
 12376  20B6  0428               	iorwf	___llmod@divisor+2,w
 12377  20B7  0427               	iorwf	___llmod@divisor+1,w
 12378  20B8  0426               	iorwf	___llmod@divisor,w
 12379  20B9  1903               	skipnz
 12380  20BA  28EE               	goto	l6760
 12381  20BB  01AF               	clrf	___llmod@counter
 12382  20BC  0AAF               	incf	___llmod@counter,f
 12383  20BD                     l6750:	
 12384  20BD  1BA9               	btfsc	___llmod@divisor+3,7
 12385  20BE  28CB               	goto	l6752
 12386  20BF  3001               	movlw	1
 12387  20C0                     u9295:	
 12388  20C0  35A6               	lslf	___llmod@divisor,f
 12389  20C1  0DA7               	rlf	___llmod@divisor+1,f
 12390  20C2  0DA8               	rlf	___llmod@divisor+2,f
 12391  20C3  0DA9               	rlf	___llmod@divisor+3,f
 12392  20C4  0B89               	decfsz	9,f
 12393  20C5  28C0               	goto	u9295
 12394  20C6  3001               	movlw	1
 12395  20C7  00AE               	movwf	??___llmod
 12396  20C8  082E               	movf	??___llmod,w
 12397  20C9  07AF               	addwf	___llmod@counter,f
 12398  20CA  28BD               	goto	l6750
 12399  20CB                     l6752:	
 12400  20CB  0829               	movf	___llmod@divisor+3,w
 12401  20CC  022D               	subwf	___llmod@dividend+3,w
 12402  20CD  1D03               	skipz
 12403  20CE  28D9               	goto	u9315
 12404  20CF  0828               	movf	___llmod@divisor+2,w
 12405  20D0  022C               	subwf	___llmod@dividend+2,w
 12406  20D1  1D03               	skipz
 12407  20D2  28D9               	goto	u9315
 12408  20D3  0827               	movf	___llmod@divisor+1,w
 12409  20D4  022B               	subwf	___llmod@dividend+1,w
 12410  20D5  1D03               	skipz
 12411  20D6  28D9               	goto	u9315
 12412  20D7  0826               	movf	___llmod@divisor,w
 12413  20D8  022A               	subwf	___llmod@dividend,w
 12414  20D9                     u9315:	
 12415  20D9  1C03               	skipc
 12416  20DA  28E3               	goto	l6756
 12417  20DB  0826               	movf	___llmod@divisor,w
 12418  20DC  02AA               	subwf	___llmod@dividend,f
 12419  20DD  0827               	movf	___llmod@divisor+1,w
 12420  20DE  3BAB               	subwfb	___llmod@dividend+1,f
 12421  20DF  0828               	movf	___llmod@divisor+2,w
 12422  20E0  3BAC               	subwfb	___llmod@dividend+2,f
 12423  20E1  0829               	movf	___llmod@divisor+3,w
 12424  20E2  3BAD               	subwfb	___llmod@dividend+3,f
 12425  20E3                     l6756:	
 12426  20E3  3001               	movlw	1
 12427  20E4                     u9325:	
 12428  20E4  36A9               	lsrf	___llmod@divisor+3,f
 12429  20E5  0CA8               	rrf	___llmod@divisor+2,f
 12430  20E6  0CA7               	rrf	___llmod@divisor+1,f
 12431  20E7  0CA6               	rrf	___llmod@divisor,f
 12432  20E8  0B89               	decfsz	9,f
 12433  20E9  28E4               	goto	u9325
 12434  20EA  3001               	movlw	1
 12435  20EB  02AF               	subwf	___llmod@counter,f
 12436  20EC  1D03               	btfss	3,2
 12437  20ED  28CB               	goto	l6752
 12438  20EE                     l6760:	
 12439  20EE  082D               	movf	___llmod@dividend+3,w
 12440  20EF  00A9               	movwf	?___llmod+3
 12441  20F0  082C               	movf	___llmod@dividend+2,w
 12442  20F1  00A8               	movwf	?___llmod+2
 12443  20F2  082B               	movf	___llmod@dividend+1,w
 12444  20F3  00A7               	movwf	?___llmod+1
 12445  20F4  082A               	movf	___llmod@dividend,w
 12446  20F5  00A6               	movwf	?___llmod
 12447  20F6  0008               	return
 12448  20F7                     __end_of___llmod:	
 12449                           
 12450                           	psect	text16
 12451  222F                     __ptext16:	
 12452 ;; *************** function ___lldiv *****************
 12453 ;; Defined at:
 12454 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 12455 ;; Parameters:    Size  Location     Type
 12456 ;;  divisor         4    2[COMMON] unsigned long 
 12457 ;;  dividend        4    6[COMMON] unsigned long 
 12458 ;; Auto vars:     Size  Location     Type
 12459 ;;  quotient        4    1[BANK0 ] unsigned long 
 12460 ;;  counter         1    5[BANK0 ] unsigned char 
 12461 ;; Return value:  Size  Location     Type
 12462 ;;                  4    2[COMMON] unsigned long 
 12463 ;; Registers used:
 12464 ;;		wreg, status,2, status,0
 12465 ;; Tracked objects:
 12466 ;;		On entry : 0/0
 12467 ;;		On exit  : 0/0
 12468 ;;		Unchanged: 0/0
 12469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12470 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12471 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12472 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12473 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12474 ;;Total ram usage:       14 bytes
 12475 ;; Hardware stack levels used:    1
 12476 ;; Hardware stack levels required when called:    2
 12477 ;; This function calls:
 12478 ;;		Nothing
 12479 ;; This function is called by:
 12480 ;;		_sprintf
 12481 ;; This function uses a non-reentrant model
 12482 ;;
 12483                           
 12484                           
 12485                           ;psect for function ___lldiv
 12486  222F                     ___lldiv:	
 12487                           
 12488                           ;incstack = 0
 12489                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12490  222F  3000               	movlw	0
 12491  2230  0020               	movlb	0	; select bank0
 12492  2231  00A4               	movwf	___lldiv@quotient+3
 12493  2232  3000               	movlw	0
 12494  2233  00A3               	movwf	___lldiv@quotient+2
 12495  2234  3000               	movlw	0
 12496  2235  00A2               	movwf	___lldiv@quotient+1
 12497  2236  3000               	movlw	0
 12498  2237  00A1               	movwf	___lldiv@quotient
 12499  2238  0875               	movf	___lldiv@divisor+3,w
 12500  2239  0474               	iorwf	___lldiv@divisor+2,w
 12501  223A  0473               	iorwf	___lldiv@divisor+1,w
 12502  223B  0472               	iorwf	___lldiv@divisor,w
 12503  223C  1903               	skipnz
 12504  223D  2A79               	goto	l6740
 12505  223E  01A5               	clrf	___lldiv@counter
 12506  223F  0AA5               	incf	___lldiv@counter,f
 12507  2240                     l6726:	
 12508  2240  1BF5               	btfsc	___lldiv@divisor+3,7
 12509  2241  2A4E               	goto	l6728
 12510  2242  3001               	movlw	1
 12511  2243                     u9225:	
 12512  2243  35F2               	lslf	___lldiv@divisor,f
 12513  2244  0DF3               	rlf	___lldiv@divisor+1,f
 12514  2245  0DF4               	rlf	___lldiv@divisor+2,f
 12515  2246  0DF5               	rlf	___lldiv@divisor+3,f
 12516  2247  0B89               	decfsz	9,f
 12517  2248  2A43               	goto	u9225
 12518  2249  3001               	movlw	1
 12519  224A  00A0               	movwf	??___lldiv
 12520  224B  0820               	movf	??___lldiv,w
 12521  224C  07A5               	addwf	___lldiv@counter,f
 12522  224D  2A40               	goto	l6726
 12523  224E                     l6728:	
 12524  224E  3001               	movlw	1
 12525  224F                     u9245:	
 12526  224F  35A1               	lslf	___lldiv@quotient,f
 12527  2250  0DA2               	rlf	___lldiv@quotient+1,f
 12528  2251  0DA3               	rlf	___lldiv@quotient+2,f
 12529  2252  0DA4               	rlf	___lldiv@quotient+3,f
 12530  2253  0B89               	decfsz	9,f
 12531  2254  2A4F               	goto	u9245
 12532  2255  0875               	movf	___lldiv@divisor+3,w
 12533  2256  0279               	subwf	___lldiv@dividend+3,w
 12534  2257  1D03               	skipz
 12535  2258  2A63               	goto	u9255
 12536  2259  0874               	movf	___lldiv@divisor+2,w
 12537  225A  0278               	subwf	___lldiv@dividend+2,w
 12538  225B  1D03               	skipz
 12539  225C  2A63               	goto	u9255
 12540  225D  0873               	movf	___lldiv@divisor+1,w
 12541  225E  0277               	subwf	___lldiv@dividend+1,w
 12542  225F  1D03               	skipz
 12543  2260  2A63               	goto	u9255
 12544  2261  0872               	movf	___lldiv@divisor,w
 12545  2262  0276               	subwf	___lldiv@dividend,w
 12546  2263                     u9255:	
 12547  2263  1C03               	skipc
 12548  2264  2A6E               	goto	l6736
 12549  2265  0872               	movf	___lldiv@divisor,w
 12550  2266  02F6               	subwf	___lldiv@dividend,f
 12551  2267  0873               	movf	___lldiv@divisor+1,w
 12552  2268  3BF7               	subwfb	___lldiv@dividend+1,f
 12553  2269  0874               	movf	___lldiv@divisor+2,w
 12554  226A  3BF8               	subwfb	___lldiv@dividend+2,f
 12555  226B  0875               	movf	___lldiv@divisor+3,w
 12556  226C  3BF9               	subwfb	___lldiv@dividend+3,f
 12557  226D  1421               	bsf	___lldiv@quotient,0
 12558  226E                     l6736:	
 12559  226E  3001               	movlw	1
 12560  226F                     u9265:	
 12561  226F  36F5               	lsrf	___lldiv@divisor+3,f
 12562  2270  0CF4               	rrf	___lldiv@divisor+2,f
 12563  2271  0CF3               	rrf	___lldiv@divisor+1,f
 12564  2272  0CF2               	rrf	___lldiv@divisor,f
 12565  2273  0B89               	decfsz	9,f
 12566  2274  2A6F               	goto	u9265
 12567  2275  3001               	movlw	1
 12568  2276  02A5               	subwf	___lldiv@counter,f
 12569  2277  1D03               	btfss	3,2
 12570  2278  2A4E               	goto	l6728
 12571  2279                     l6740:	
 12572  2279  0824               	movf	___lldiv@quotient+3,w
 12573  227A  00F5               	movwf	?___lldiv+3
 12574  227B  0823               	movf	___lldiv@quotient+2,w
 12575  227C  00F4               	movwf	?___lldiv+2
 12576  227D  0822               	movf	___lldiv@quotient+1,w
 12577  227E  00F3               	movwf	?___lldiv+1
 12578  227F  0821               	movf	___lldiv@quotient,w
 12579  2280  00F2               	movwf	?___lldiv
 12580  2281  0008               	return
 12581  2282                     __end_of___lldiv:	
 12582                           
 12583                           	psect	text17
 12584  2ECF                     __ptext17:	
 12585 ;; *************** function ___flsub *****************
 12586 ;; Defined at:
 12587 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12588 ;; Parameters:    Size  Location     Type
 12589 ;;  a               4   53[BANK1 ] unsigned long 
 12590 ;;  b               4   57[BANK1 ] unsigned long 
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;		None
 12593 ;; Return value:  Size  Location     Type
 12594 ;;                  4   53[BANK1 ] unsigned long 
 12595 ;; Registers used:
 12596 ;;		wreg, status,2, status,0, pclath, cstack
 12597 ;; Tracked objects:
 12598 ;;		On entry : 0/0
 12599 ;;		On exit  : 0/0
 12600 ;;		Unchanged: 0/0
 12601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12602 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12605 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12606 ;;Total ram usage:        8 bytes
 12607 ;; Hardware stack levels used:    1
 12608 ;; Hardware stack levels required when called:    3
 12609 ;; This function calls:
 12610 ;;		___fladd
 12611 ;; This function is called by:
 12612 ;;		_sprintf
 12613 ;; This function uses a non-reentrant model
 12614 ;;
 12615                           
 12616                           
 12617                           ;psect for function ___flsub
 12618  2ECF                     ___flsub:	
 12619                           
 12620                           ;incstack = 0
 12621                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 12622  2ECF  3080               	movlw	128
 12623  2ED0  0021               	movlb	1	; select bank1
 12624  2ED1  06D8               	xorwf	(___flsub@a+3)^(0+128),f
 12625  2ED2  085C               	movf	(___flsub@b+3)^(0+128),w
 12626  2ED3  00C0               	movwf	(___fladd@b+3)^(0+128)
 12627  2ED4  085B               	movf	(___flsub@b+2)^(0+128),w
 12628  2ED5  00BF               	movwf	(___fladd@b+2)^(0+128)
 12629  2ED6  085A               	movf	(___flsub@b+1)^(0+128),w
 12630  2ED7  00BE               	movwf	(___fladd@b+1)^(0+128)
 12631  2ED8  0859               	movf	___flsub@b^(0+128),w
 12632  2ED9  00BD               	movwf	___fladd@b^(0+128)
 12633  2EDA  0858               	movf	(___flsub@a+3)^(0+128),w
 12634  2EDB  00C4               	movwf	(___fladd@a+3)^(0+128)
 12635  2EDC  0857               	movf	(___flsub@a+2)^(0+128),w
 12636  2EDD  00C3               	movwf	(___fladd@a+2)^(0+128)
 12637  2EDE  0856               	movf	(___flsub@a+1)^(0+128),w
 12638  2EDF  00C2               	movwf	(___fladd@a+1)^(0+128)
 12639  2EE0  0855               	movf	___flsub@a^(0+128),w
 12640  2EE1  00C1               	movwf	___fladd@a^(0+128)
 12641  2EE2  3186  2601         	fcall	___fladd
 12642  2EE4  0021               	movlb	1	; select bank1
 12643  2EE5  0840               	movf	(?___fladd+3)^(0+128),w
 12644  2EE6  00D8               	movwf	(?___flsub+3)^(0+128)
 12645  2EE7  083F               	movf	(?___fladd+2)^(0+128),w
 12646  2EE8  00D7               	movwf	(?___flsub+2)^(0+128)
 12647  2EE9  083E               	movf	(?___fladd+1)^(0+128),w
 12648  2EEA  00D6               	movwf	(?___flsub+1)^(0+128)
 12649  2EEB  083D               	movf	?___fladd^(0+128),w
 12650  2EEC  00D5               	movwf	?___flsub^(0+128)
 12651  2EED  0008               	return
 12652  2EEE                     __end_of___flsub:	
 12653                           
 12654                           	psect	text18
 12655  1C00                     __ptext18:	
 12656 ;; *************** function ___flneg *****************
 12657 ;; Defined at:
 12658 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;  f1              4    2[COMMON] unsigned long 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  4    2[COMMON] unsigned long 
 12665 ;; Registers used:
 12666 ;;		wreg
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12672 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12675 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12676 ;;Total ram usage:        4 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:    2
 12679 ;; This function calls:
 12680 ;;		Nothing
 12681 ;; This function is called by:
 12682 ;;		_writeVoltages
 12683 ;;		_sprintf
 12684 ;; This function uses a non-reentrant model
 12685 ;;
 12686                           
 12687                           
 12688                           ;psect for function ___flneg
 12689  1C00                     ___flneg:	
 12690                           
 12691                           ;incstack = 0
 12692                           ; Regs used in ___flneg: [wreg]
 12693  1C00  0875               	movf	___flneg@f1+3,w
 12694  1C01  0474               	iorwf	___flneg@f1+2,w
 12695  1C02  0473               	iorwf	___flneg@f1+1,w
 12696  1C03  0472               	iorwf	___flneg@f1,w
 12697  1C04  1903               	skipnz
 12698  1C05  0008               	return
 12699  1C06  3080               	movlw	128
 12700  1C07  06F5               	xorwf	___flneg@f1+3,f
 12701  1C08  0008               	return
 12702  1C09                     __end_of___flneg:	
 12703                           
 12704                           	psect	text19
 12705  218B                     __ptext19:	
 12706 ;; *************** function _sumVoltages *****************
 12707 ;; Defined at:
 12708 ;;		line 75 in file "ltc6804.c"
 12709 ;; Parameters:    Size  Location     Type
 12710 ;;  values          1    wreg     PTR float 
 12711 ;;		 -> voltages(48), 
 12712 ;;  numVoltages     2   53[BANK1 ] int 
 12713 ;; Auto vars:     Size  Location     Type
 12714 ;;  values          1   59[BANK1 ] PTR float 
 12715 ;;		 -> voltages(48), 
 12716 ;;  i               2   64[BANK1 ] int 
 12717 ;;  total           4   60[BANK1 ] float 
 12718 ;; Return value:  Size  Location     Type
 12719 ;;                  4   53[BANK1 ] float 
 12720 ;; Registers used:
 12721 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12722 ;; Tracked objects:
 12723 ;;		On entry : 0/0
 12724 ;;		On exit  : 0/0
 12725 ;;		Unchanged: 0/0
 12726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12727 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12728 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12729 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12730 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12731 ;;Total ram usage:       13 bytes
 12732 ;; Hardware stack levels used:    1
 12733 ;; Hardware stack levels required when called:    3
 12734 ;; This function calls:
 12735 ;;		___fladd
 12736 ;; This function is called by:
 12737 ;;		_main
 12738 ;;		_startUp
 12739 ;; This function uses a non-reentrant model
 12740 ;;
 12741                           
 12742                           
 12743                           ;psect for function _sumVoltages
 12744  218B                     _sumVoltages:	
 12745                           
 12746                           ;incstack = 0
 12747                           ; Regs used in _sumVoltages: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12748                           ;sumVoltages@values stored from wreg
 12749  218B  0021               	movlb	1	; select bank1
 12750  218C  00DB               	movwf	sumVoltages@values^(0+128)
 12751                           
 12752                           ;ltc6804.c: 76: float total = 0.0;
 12753  218D  3000               	movlw	0
 12754  218E  00DF               	movwf	(sumVoltages@total+3)^(0+128)
 12755  218F  3000               	movlw	0
 12756  2190  00DE               	movwf	(sumVoltages@total+2)^(0+128)
 12757  2191  3000               	movlw	0
 12758  2192  00DD               	movwf	(sumVoltages@total+1)^(0+128)
 12759  2193  3000               	movlw	0
 12760  2194  00DC               	movwf	sumVoltages@total^(0+128)
 12761                           
 12762                           ;ltc6804.c: 77: for(int i = 0; i < numVoltages; i++){
 12763  2195  01E0               	clrf	sumVoltages@i^(0+128)
 12764  2196  01E1               	clrf	(sumVoltages@i+1)^(0+128)
 12765  2197                     l7380:	
 12766  2197  0861               	movf	(sumVoltages@i+1)^(0+128),w
 12767  2198  3A80               	xorlw	128
 12768  2199  00D9               	movwf	??_sumVoltages^(0+128)
 12769  219A  0856               	movf	(sumVoltages@numVoltages+1)^(0+128),w
 12770  219B  3A80               	xorlw	128
 12771  219C  0259               	subwf	??_sumVoltages^(0+128),w
 12772  219D  1D03               	skipz
 12773  219E  29A1               	goto	u10505
 12774  219F  0855               	movf	sumVoltages@numVoltages^(0+128),w
 12775  21A0  0260               	subwf	sumVoltages@i^(0+128),w
 12776  21A1                     u10505:	
 12777  21A1  1803               	btfsc	3,0
 12778  21A2  29D3               	goto	l7382
 12779                           
 12780                           ;ltc6804.c: 78: total += values[i];
 12781  21A3  0021               	movlb	1	; select bank1
 12782  21A4  0860               	movf	sumVoltages@i^(0+128),w
 12783  21A5  00D9               	movwf	??_sumVoltages^(0+128)
 12784  21A6  3001               	movlw	1
 12785  21A7                     u10495:	
 12786  21A7  35D9               	lslf	??_sumVoltages^(0+128),f
 12787  21A8  3EFF               	addlw	-1
 12788  21A9  1D03               	skipz
 12789  21AA  29A7               	goto	u10495
 12790  21AB  3559               	lslf	??_sumVoltages^(0+128),w
 12791  21AC  075B               	addwf	sumVoltages@values^(0+128),w
 12792  21AD  00DA               	movwf	(??_sumVoltages+1)^(0+128)
 12793  21AE  085A               	movf	(??_sumVoltages+1)^(0+128),w
 12794  21AF  0086               	movwf	6
 12795  21B0  3002               	movlw	2	; select bank4/5
 12796  21B1  0087               	movwf	7
 12797  21B2  3F40               	moviw [0]fsr1
 12798  21B3  00BD               	movwf	___fladd@b^(0+128)
 12799  21B4  3F41               	moviw [1]fsr1
 12800  21B5  00BE               	movwf	(___fladd@b+1)^(0+128)
 12801  21B6  3F42               	moviw [2]fsr1
 12802  21B7  00BF               	movwf	(___fladd@b+2)^(0+128)
 12803  21B8  3F43               	moviw [3]fsr1
 12804  21B9  00C0               	movwf	(___fladd@b+3)^(0+128)
 12805  21BA  085F               	movf	(sumVoltages@total+3)^(0+128),w
 12806  21BB  00C4               	movwf	(___fladd@a+3)^(0+128)
 12807  21BC  085E               	movf	(sumVoltages@total+2)^(0+128),w
 12808  21BD  00C3               	movwf	(___fladd@a+2)^(0+128)
 12809  21BE  085D               	movf	(sumVoltages@total+1)^(0+128),w
 12810  21BF  00C2               	movwf	(___fladd@a+1)^(0+128)
 12811  21C0  085C               	movf	sumVoltages@total^(0+128),w
 12812  21C1  00C1               	movwf	___fladd@a^(0+128)
 12813  21C2  3186  2601  31A1   	fcall	___fladd
 12814  21C5  0021               	movlb	1	; select bank1
 12815  21C6  0840               	movf	(?___fladd+3)^(0+128),w
 12816  21C7  00DF               	movwf	(sumVoltages@total+3)^(0+128)
 12817  21C8  083F               	movf	(?___fladd+2)^(0+128),w
 12818  21C9  00DE               	movwf	(sumVoltages@total+2)^(0+128)
 12819  21CA  083E               	movf	(?___fladd+1)^(0+128),w
 12820  21CB  00DD               	movwf	(sumVoltages@total+1)^(0+128)
 12821  21CC  083D               	movf	?___fladd^(0+128),w
 12822  21CD  00DC               	movwf	sumVoltages@total^(0+128)
 12823  21CE  3001               	movlw	1
 12824  21CF  07E0               	addwf	sumVoltages@i^(0+128),f
 12825  21D0  3000               	movlw	0
 12826  21D1  3DE1               	addwfc	(sumVoltages@i+1)^(0+128),f
 12827  21D2  2997               	goto	l7380
 12828  21D3                     l7382:	
 12829                           
 12830                           ;ltc6804.c: 79: }
 12831                           ;ltc6804.c: 80: return total;
 12832  21D3  0021               	movlb	1	; select bank1
 12833  21D4  085F               	movf	(sumVoltages@total+3)^(0+128),w
 12834  21D5  00D8               	movwf	(?_sumVoltages+3)^(0+128)
 12835  21D6  085E               	movf	(sumVoltages@total+2)^(0+128),w
 12836  21D7  00D7               	movwf	(?_sumVoltages+2)^(0+128)
 12837  21D8  085D               	movf	(sumVoltages@total+1)^(0+128),w
 12838  21D9  00D6               	movwf	(?_sumVoltages+1)^(0+128)
 12839  21DA  085C               	movf	sumVoltages@total^(0+128),w
 12840  21DB  00D5               	movwf	?_sumVoltages^(0+128)
 12841  21DC  0008               	return
 12842  21DD                     __end_of_sumVoltages:	
 12843                           
 12844                           	psect	text20
 12845  2E1E                     __ptext20:	
 12846 ;; *************** function _spiSwitch *****************
 12847 ;; Defined at:
 12848 ;;		line 48 in file "spi.c"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      void 
 12855 ;; Registers used:
 12856 ;;		wreg
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12866 ;;Total ram usage:        0 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:    2
 12869 ;; This function calls:
 12870 ;;		Nothing
 12871 ;; This function is called by:
 12872 ;;		_main
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           
 12877                           ;psect for function _spiSwitch
 12878  2E1E                     _spiSwitch:	
 12879                           
 12880                           ;spi.c: 49: LATDbits.LATD3 = 1;
 12881                           
 12882                           ;incstack = 0
 12883                           ; Regs used in _spiSwitch: [wreg]
 12884  2E1E  0022               	movlb	2	; select bank2
 12885  2E1F  158F               	bsf	15,3	;volatile
 12886                           
 12887                           ;spi.c: 50: APFCON1bits.SDOSEL = 0;
 12888  2E20  129D               	bcf	29,5	;volatile
 12889                           
 12890                           ;spi.c: 51: APFCON1bits.SCKSEL = 0;
 12891  2E21  121D               	bcf	29,4	;volatile
 12892                           
 12893                           ;spi.c: 52: APFCON1bits.SDISEL = 0;
 12894  2E22  119D               	bcf	29,3	;volatile
 12895                           
 12896                           ;spi.c: 54: SSP1CON1 = 0x12;
 12897  2E23  3012               	movlw	18
 12898  2E24  0024               	movlb	4	; select bank4
 12899  2E25  0095               	movwf	21	;volatile
 12900                           
 12901                           ;spi.c: 55: SSP1CON1bits.SSPEN = 1;
 12902  2E26  1695               	bsf	21,5	;volatile
 12903  2E27  0008               	return
 12904  2E28                     __end_of_spiSwitch:	
 12905                           
 12906                           	psect	text21
 12907  2F2E                     __ptext21:	
 12908 ;; *************** function _setup *****************
 12909 ;; Defined at:
 12910 ;;		line 171 in file "main.c"
 12911 ;; Parameters:    Size  Location     Type
 12912 ;;		None
 12913 ;; Auto vars:     Size  Location     Type
 12914 ;;		None
 12915 ;; Return value:  Size  Location     Type
 12916 ;;                  1    wreg      void 
 12917 ;; Registers used:
 12918 ;;		wreg, status,2, status,0, pclath, cstack
 12919 ;; Tracked objects:
 12920 ;;		On entry : 0/0
 12921 ;;		On exit  : 0/0
 12922 ;;		Unchanged: 0/0
 12923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12928 ;;Total ram usage:        0 bytes
 12929 ;; Hardware stack levels used:    1
 12930 ;; Hardware stack levels required when called:    4
 12931 ;; This function calls:
 12932 ;;		_LTC6804_initialize
 12933 ;;		_adcSetup
 12934 ;;		_i2cSetup
 12935 ;;		_spiSetup
 12936 ;;		_timerSetup
 12937 ;;		_uartSetup
 12938 ;; This function is called by:
 12939 ;;		_main
 12940 ;; This function uses a non-reentrant model
 12941 ;;
 12942                           
 12943                           
 12944                           ;psect for function _setup
 12945  2F2E                     _setup:	
 12946                           
 12947                           ;main.c: 173: TRISDbits.TRISD4 = 0;
 12948                           
 12949                           ;incstack = 0
 12950                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
 12951  2F2E  0021               	movlb	1	; select bank1
 12952  2F2F  120F               	bcf	15,4	;volatile
 12953                           
 12954                           ;main.c: 174: TRISDbits.TRISD5 = 0;
 12955  2F30  128F               	bcf	15,5	;volatile
 12956                           
 12957                           ;main.c: 175: TRISAbits.TRISA0 = 1;
 12958  2F31  140C               	bsf	12,0	;volatile
 12959                           
 12960                           ;main.c: 178: INTCONbits.GIE = 1;
 12961  2F32  178B               	bsf	11,7	;volatile
 12962                           
 12963                           ;main.c: 179: INTCONbits.PEIE = 1;
 12964  2F33  170B               	bsf	11,6	;volatile
 12965                           
 12966                           ;main.c: 182: timerSetup();
 12967  2F34  31AD  25EE  31AF   	fcall	_timerSetup
 12968                           
 12969                           ;main.c: 185: TRISAbits.TRISA5 = 0;
 12970  2F37  0021               	movlb	1	; select bank1
 12971  2F38  128C               	bcf	12,5	;volatile
 12972                           
 12973                           ;main.c: 186: LATAbits.LATA5 = 1;
 12974  2F39  0022               	movlb	2	; select bank2
 12975  2F3A  168C               	bsf	12,5	;volatile
 12976                           
 12977                           ;main.c: 189: TRISAbits.TRISA4 = 0;
 12978  2F3B  0021               	movlb	1	; select bank1
 12979  2F3C  120C               	bcf	12,4	;volatile
 12980                           
 12981                           ;main.c: 192: adcSetup();
 12982  2F3D  31AE  26B1  31AF   	fcall	_adcSetup
 12983                           
 12984                           ;main.c: 195: uartSetup();
 12985  2F40  3193  2300  31AF   	fcall	_uartSetup
 12986                           
 12987                           ;main.c: 198: TRISBbits.TRISB6 = 1;
 12988  2F43  0021               	movlb	1	; select bank1
 12989  2F44  170D               	bsf	13,6	;volatile
 12990                           
 12991                           ;main.c: 199: TRISBbits.TRISB7 = 1;
 12992  2F45  178D               	bsf	13,7	;volatile
 12993                           
 12994                           ;main.c: 200: i2cSetup();
 12995  2F46  31AE  265E  31AF   	fcall	_i2cSetup
 12996                           
 12997                           ;main.c: 203: TRISCbits.TRISC5 = 0;
 12998  2F49  0021               	movlb	1	; select bank1
 12999  2F4A  128E               	bcf	14,5	;volatile
 13000                           
 13001                           ;main.c: 204: TRISCbits.TRISC4 = 1;
 13002  2F4B  160E               	bsf	14,4	;volatile
 13003                           
 13004                           ;main.c: 205: TRISCbits.TRISC3 = 0;
 13005  2F4C  118E               	bcf	14,3	;volatile
 13006                           
 13007                           ;main.c: 206: TRISDbits.TRISD3 = 0;
 13008  2F4D  118F               	bcf	15,3	;volatile
 13009                           
 13010                           ;main.c: 207: spiSetup();
 13011  2F4E  31AE  266F  31AF   	fcall	_spiSetup
 13012                           
 13013                           ;main.c: 210: LTC6804_initialize();
 13014  2F51  31AE  2607         	fcall	_LTC6804_initialize
 13015  2F53  0008               	return
 13016  2F54                     __end_of_setup:	
 13017                           
 13018                           	psect	text22
 13019  1300                     __ptext22:	
 13020 ;; *************** function _uartSetup *****************
 13021 ;; Defined at:
 13022 ;;		line 83 in file "uart.c"
 13023 ;; Parameters:    Size  Location     Type
 13024 ;;		None
 13025 ;; Auto vars:     Size  Location     Type
 13026 ;;		None
 13027 ;; Return value:  Size  Location     Type
 13028 ;;                  1    wreg      void 
 13029 ;; Registers used:
 13030 ;;		wreg, status,2
 13031 ;; Tracked objects:
 13032 ;;		On entry : 0/0
 13033 ;;		On exit  : 0/0
 13034 ;;		Unchanged: 0/0
 13035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13040 ;;Total ram usage:        0 bytes
 13041 ;; Hardware stack levels used:    1
 13042 ;; Hardware stack levels required when called:    2
 13043 ;; This function calls:
 13044 ;;		Nothing
 13045 ;; This function is called by:
 13046 ;;		_setup
 13047 ;; This function uses a non-reentrant model
 13048 ;;
 13049                           
 13050                           
 13051                           ;psect for function _uartSetup
 13052  1300                     _uartSetup:	
 13053                           
 13054                           ;uart.c: 84: TXSTAbits.TX9 = 0;
 13055                           
 13056                           ;incstack = 0
 13057                           ; Regs used in _uartSetup: [wreg+status,2]
 13058  1300  0023               	movlb	3	; select bank3
 13059  1301  131E               	bcf	30,6	;volatile
 13060                           
 13061                           ;uart.c: 85: TXSTAbits.TXEN = 1;
 13062  1302  169E               	bsf	30,5	;volatile
 13063                           
 13064                           ;uart.c: 86: TXSTAbits.SYNC = 0;
 13065  1303  121E               	bcf	30,4	;volatile
 13066                           
 13067                           ;uart.c: 87: TXSTAbits.BRGH = 0;
 13068  1304  111E               	bcf	30,2	;volatile
 13069                           
 13070                           ;uart.c: 88: RCSTAbits.RX9 = 0;
 13071  1305  131D               	bcf	29,6	;volatile
 13072                           
 13073                           ;uart.c: 89: RCSTAbits.SPEN = 1;
 13074  1306  179D               	bsf	29,7	;volatile
 13075                           
 13076                           ;uart.c: 90: SPBRGH = 0;
 13077  1307  019C               	clrf	28	;volatile
 13078                           
 13079                           ;uart.c: 91: SPBRGL = 2;
 13080  1308  3002               	movlw	2
 13081  1309  009B               	movwf	27	;volatile
 13082                           
 13083                           ;uart.c: 92: PIR1bits.TXIF = 0;
 13084  130A  0020               	movlb	0	; select bank0
 13085  130B  1211               	bcf	17,4	;volatile
 13086  130C  0008               	return
 13087  130D                     __end_of_uartSetup:	
 13088                           
 13089                           	psect	text23
 13090  2DEE                     __ptext23:	
 13091 ;; *************** function _timerSetup *****************
 13092 ;; Defined at:
 13093 ;;		line 10 in file "timer.c"
 13094 ;; Parameters:    Size  Location     Type
 13095 ;;		None
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;		None
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  1    wreg      void 
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, status,0, pclath, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13111 ;;Total ram usage:        0 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    3
 13114 ;; This function calls:
 13115 ;;		_timer0Setup
 13116 ;;		_timer2Setup
 13117 ;; This function is called by:
 13118 ;;		_setup
 13119 ;; This function uses a non-reentrant model
 13120 ;;
 13121                           
 13122                           
 13123                           ;psect for function _timerSetup
 13124  2DEE                     _timerSetup:	
 13125                           
 13126                           ;timer.c: 11: timer0Setup();
 13127                           
 13128                           ;incstack = 0
 13129                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 13130  2DEE  31AD  25E9  31AD   	fcall	_timer0Setup
 13131                           
 13132                           ;timer.c: 12: timer2Setup();
 13133  2DF1  3188  2000         	fcall	_timer2Setup
 13134  2DF3  0008               	return
 13135  2DF4                     __end_of_timerSetup:	
 13136                           
 13137                           	psect	text24
 13138  0800                     __ptext24:	
 13139 ;; *************** function _timer2Setup *****************
 13140 ;; Defined at:
 13141 ;;		line 15 in file "timer.c"
 13142 ;; Parameters:    Size  Location     Type
 13143 ;;		None
 13144 ;; Auto vars:     Size  Location     Type
 13145 ;;		None
 13146 ;; Return value:  Size  Location     Type
 13147 ;;                  1    wreg      void 
 13148 ;; Registers used:
 13149 ;;		wreg
 13150 ;; Tracked objects:
 13151 ;;		On entry : 0/0
 13152 ;;		On exit  : 0/0
 13153 ;;		Unchanged: 0/0
 13154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13159 ;;Total ram usage:        0 bytes
 13160 ;; Hardware stack levels used:    1
 13161 ;; Hardware stack levels required when called:    2
 13162 ;; This function calls:
 13163 ;;		Nothing
 13164 ;; This function is called by:
 13165 ;;		_timerSetup
 13166 ;; This function uses a non-reentrant model
 13167 ;;
 13168                           
 13169                           
 13170                           ;psect for function _timer2Setup
 13171  0800                     _timer2Setup:	
 13172                           
 13173                           ;timer.c: 16: CCP2CON = 0x06;
 13174                           
 13175                           ;incstack = 0
 13176                           ; Regs used in _timer2Setup: [wreg]
 13177  0800  3006               	movlw	6
 13178  0801  0025               	movlb	5	; select bank5
 13179  0802  009A               	movwf	26	;volatile
 13180                           
 13181                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 13182  0803  0021               	movlb	1	; select bank1
 13183  0804  1491               	bsf	17,1	;volatile
 13184                           
 13185                           ;timer.c: 18: PR2 = 254;
 13186  0805  30FE               	movlw	254
 13187  0806  0020               	movlb	0	; select bank0
 13188  0807  009B               	movwf	27	;volatile
 13189                           
 13190                           ;timer.c: 19: T2CON = 0x4F;
 13191  0808  304F               	movlw	79
 13192  0809  009C               	movwf	28	;volatile
 13193  080A  0008               	return
 13194  080B                     __end_of_timer2Setup:	
 13195                           
 13196                           	psect	text25
 13197  2DE9                     __ptext25:	
 13198 ;; *************** function _timer0Setup *****************
 13199 ;; Defined at:
 13200 ;;		line 22 in file "timer.c"
 13201 ;; Parameters:    Size  Location     Type
 13202 ;;		None
 13203 ;; Auto vars:     Size  Location     Type
 13204 ;;		None
 13205 ;; Return value:  Size  Location     Type
 13206 ;;                  1    wreg      void 
 13207 ;; Registers used:
 13208 ;;		wreg
 13209 ;; Tracked objects:
 13210 ;;		On entry : 0/0
 13211 ;;		On exit  : 0/0
 13212 ;;		Unchanged: 0/0
 13213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13218 ;;Total ram usage:        0 bytes
 13219 ;; Hardware stack levels used:    1
 13220 ;; Hardware stack levels required when called:    2
 13221 ;; This function calls:
 13222 ;;		Nothing
 13223 ;; This function is called by:
 13224 ;;		_timerSetup
 13225 ;; This function uses a non-reentrant model
 13226 ;;
 13227                           
 13228                           
 13229                           ;psect for function _timer0Setup
 13230  2DE9                     _timer0Setup:	
 13231                           
 13232                           ;timer.c: 23: OPTION_REG = 0b10001110;
 13233                           
 13234                           ;incstack = 0
 13235                           ; Regs used in _timer0Setup: [wreg]
 13236  2DE9  308E               	movlw	142
 13237  2DEA  0021               	movlb	1	; select bank1
 13238  2DEB  0095               	movwf	21	;volatile
 13239                           
 13240                           ;timer.c: 24: INTCONbits.TMR0IE = 1;
 13241  2DEC  168B               	bsf	11,5	;volatile
 13242  2DED  0008               	return
 13243  2DEE                     __end_of_timer0Setup:	
 13244                           
 13245                           	psect	text26
 13246  2E6F                     __ptext26:	
 13247 ;; *************** function _spiSetup *****************
 13248 ;; Defined at:
 13249 ;;		line 12 in file "spi.c"
 13250 ;; Parameters:    Size  Location     Type
 13251 ;;		None
 13252 ;; Auto vars:     Size  Location     Type
 13253 ;;		None
 13254 ;; Return value:  Size  Location     Type
 13255 ;;                  1    wreg      void 
 13256 ;; Registers used:
 13257 ;;		wreg
 13258 ;; Tracked objects:
 13259 ;;		On entry : 0/0
 13260 ;;		On exit  : 0/0
 13261 ;;		Unchanged: 0/0
 13262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13267 ;;Total ram usage:        0 bytes
 13268 ;; Hardware stack levels used:    1
 13269 ;; Hardware stack levels required when called:    2
 13270 ;; This function calls:
 13271 ;;		Nothing
 13272 ;; This function is called by:
 13273 ;;		_setup
 13274 ;; This function uses a non-reentrant model
 13275 ;;
 13276                           
 13277                           
 13278                           ;psect for function _spiSetup
 13279  2E6F                     _spiSetup:	
 13280                           
 13281                           ;spi.c: 15: LATDbits.LATD3 = 1;
 13282                           
 13283                           ;incstack = 0
 13284                           ; Regs used in _spiSetup: [wreg]
 13285  2E6F  0022               	movlb	2	; select bank2
 13286  2E70  158F               	bsf	15,3	;volatile
 13287                           
 13288                           ;spi.c: 17: APFCON1bits.SDOSEL = 0;
 13289  2E71  129D               	bcf	29,5	;volatile
 13290                           
 13291                           ;spi.c: 18: APFCON1bits.SCKSEL = 0;
 13292  2E72  121D               	bcf	29,4	;volatile
 13293                           
 13294                           ;spi.c: 19: APFCON1bits.SDISEL = 0;
 13295  2E73  119D               	bcf	29,3	;volatile
 13296                           
 13297                           ;spi.c: 21: SSP1CON3bits.BOEN = 0;
 13298  2E74  0024               	movlb	4	; select bank4
 13299  2E75  1217               	bcf	23,4	;volatile
 13300                           
 13301                           ;spi.c: 25: SSP1STATbits.SMP = 1;
 13302  2E76  1794               	bsf	20,7	;volatile
 13303                           
 13304                           ;spi.c: 26: SSP1STATbits.CKE = 1;
 13305  2E77  1714               	bsf	20,6	;volatile
 13306                           
 13307                           ;spi.c: 28: SSP1CON1 = 0x12;
 13308  2E78  3012               	movlw	18
 13309  2E79  0095               	movwf	21	;volatile
 13310                           
 13311                           ;spi.c: 30: PIE1bits.SSP1IE = 1;
 13312  2E7A  0021               	movlb	1	; select bank1
 13313  2E7B  1591               	bsf	17,3	;volatile
 13314                           
 13315                           ;spi.c: 31: PIR1bits.SSP1IF = 0;
 13316  2E7C  0020               	movlb	0	; select bank0
 13317  2E7D  1191               	bcf	17,3	;volatile
 13318                           
 13319                           ;spi.c: 33: SSP1CON1bits.SSPEN = 1;
 13320  2E7E  0024               	movlb	4	; select bank4
 13321  2E7F  1695               	bsf	21,5	;volatile
 13322  2E80  0008               	return
 13323  2E81                     __end_of_spiSetup:	
 13324                           
 13325                           	psect	text27
 13326  2E5E                     __ptext27:	
 13327 ;; *************** function _i2cSetup *****************
 13328 ;; Defined at:
 13329 ;;		line 40 in file "i2c.c"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;		None
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;		None
 13334 ;; Return value:  Size  Location     Type
 13335 ;;                  1    wreg      void 
 13336 ;; Registers used:
 13337 ;;		wreg
 13338 ;; Tracked objects:
 13339 ;;		On entry : 0/0
 13340 ;;		On exit  : 0/0
 13341 ;;		Unchanged: 0/0
 13342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13347 ;;Total ram usage:        0 bytes
 13348 ;; Hardware stack levels used:    1
 13349 ;; Hardware stack levels required when called:    2
 13350 ;; This function calls:
 13351 ;;		Nothing
 13352 ;; This function is called by:
 13353 ;;		_setup
 13354 ;; This function uses a non-reentrant model
 13355 ;;
 13356                           
 13357                           
 13358                           ;psect for function _i2cSetup
 13359  2E5E                     _i2cSetup:	
 13360                           
 13361                           ;i2c.c: 41: APFCON1bits.SDISEL = 1;
 13362                           
 13363                           ;incstack = 0
 13364                           ; Regs used in _i2cSetup: [wreg]
 13365  2E5E  0022               	movlb	2	; select bank2
 13366  2E5F  159D               	bsf	29,3	;volatile
 13367                           
 13368                           ;i2c.c: 42: APFCON1bits.SCKSEL = 1;
 13369  2E60  161D               	bsf	29,4	;volatile
 13370                           
 13371                           ;i2c.c: 43: PIE1bits.SSP1IE = 0;
 13372  2E61  0021               	movlb	1	; select bank1
 13373  2E62  1191               	bcf	17,3	;volatile
 13374                           
 13375                           ;i2c.c: 44: PIE2bits.BCL1IE = 0;
 13376  2E63  1192               	bcf	18,3	;volatile
 13377                           
 13378                           ;i2c.c: 45: PIR1bits.SSP1IF = 0;
 13379  2E64  0020               	movlb	0	; select bank0
 13380  2E65  1191               	bcf	17,3	;volatile
 13381                           
 13382                           ;i2c.c: 46: PIR2bits.BCL1IF = 0;
 13383  2E66  1192               	bcf	18,3	;volatile
 13384                           
 13385                           ;i2c.c: 47: SSPADD = 0x4F;
 13386  2E67  304F               	movlw	79
 13387  2E68  0024               	movlb	4	; select bank4
 13388  2E69  0092               	movwf	18	;volatile
 13389                           
 13390                           ;i2c.c: 48: SSPCON1 = 0x28;
 13391  2E6A  3028               	movlw	40
 13392  2E6B  0095               	movwf	21	;volatile
 13393                           
 13394                           ;i2c.c: 49: SSPSTAT = 0xC0;
 13395  2E6C  30C0               	movlw	192
 13396  2E6D  0094               	movwf	20	;volatile
 13397  2E6E  0008               	return
 13398  2E6F                     __end_of_i2cSetup:	
 13399                           
 13400                           	psect	text28
 13401  2EB1                     __ptext28:	
 13402 ;; *************** function _adcSetup *****************
 13403 ;; Defined at:
 13404 ;;		line 78 in file "adc.c"
 13405 ;; Parameters:    Size  Location     Type
 13406 ;;		None
 13407 ;; Auto vars:     Size  Location     Type
 13408 ;;		None
 13409 ;; Return value:  Size  Location     Type
 13410 ;;                  1    wreg      void 
 13411 ;; Registers used:
 13412 ;;		wreg, status,2
 13413 ;; Tracked objects:
 13414 ;;		On entry : 0/0
 13415 ;;		On exit  : 0/0
 13416 ;;		Unchanged: 0/0
 13417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13422 ;;Total ram usage:        0 bytes
 13423 ;; Hardware stack levels used:    1
 13424 ;; Hardware stack levels required when called:    2
 13425 ;; This function calls:
 13426 ;;		Nothing
 13427 ;; This function is called by:
 13428 ;;		_setup
 13429 ;; This function uses a non-reentrant model
 13430 ;;
 13431                           
 13432                           
 13433                           ;psect for function _adcSetup
 13434  2EB1                     _adcSetup:	
 13435                           
 13436                           ;adc.c: 80: TRISBbits.TRISB5 = 0;
 13437                           
 13438                           ;incstack = 0
 13439                           ; Regs used in _adcSetup: [wreg+status,2]
 13440  2EB1  0021               	movlb	1	; select bank1
 13441  2EB2  128D               	bcf	13,5	;volatile
 13442                           
 13443                           ;adc.c: 83: TRISAbits.TRISA0 = 1;
 13444  2EB3  140C               	bsf	12,0	;volatile
 13445                           
 13446                           ;adc.c: 84: TRISAbits.TRISA1 = 1;
 13447  2EB4  148C               	bsf	12,1	;volatile
 13448                           
 13449                           ;adc.c: 85: TRISAbits.TRISA2 = 1;
 13450  2EB5  150C               	bsf	12,2	;volatile
 13451                           
 13452                           ;adc.c: 86: TRISAbits.TRISA3 = 1;
 13453  2EB6  158C               	bsf	12,3	;volatile
 13454                           
 13455                           ;adc.c: 89: TRISBbits.TRISB0 = 1;
 13456  2EB7  140D               	bsf	13,0	;volatile
 13457                           
 13458                           ;adc.c: 90: TRISBbits.TRISB1 = 1;
 13459  2EB8  148D               	bsf	13,1	;volatile
 13460                           
 13461                           ;adc.c: 91: TRISBbits.TRISB2 = 1;
 13462  2EB9  150D               	bsf	13,2	;volatile
 13463                           
 13464                           ;adc.c: 92: TRISBbits.TRISB3 = 1;
 13465  2EBA  158D               	bsf	13,3	;volatile
 13466                           
 13467                           ;adc.c: 93: TRISBbits.TRISB4 = 1;
 13468  2EBB  160D               	bsf	13,4	;volatile
 13469                           
 13470                           ;adc.c: 96: TRISDbits.TRISD1 = 1;
 13471  2EBC  148F               	bsf	15,1	;volatile
 13472                           
 13473                           ;adc.c: 99: ANSELA = 0x0F;
 13474  2EBD  300F               	movlw	15
 13475  2EBE  0023               	movlb	3	; select bank3
 13476  2EBF  008C               	movwf	12	;volatile
 13477                           
 13478                           ;adc.c: 100: ANSELB = 0x1F;
 13479  2EC0  301F               	movlw	31
 13480  2EC1  008D               	movwf	13	;volatile
 13481                           
 13482                           ;adc.c: 101: ANSELD = 0x01;
 13483  2EC2  3001               	movlw	1
 13484  2EC3  008F               	movwf	15	;volatile
 13485                           
 13486                           ;adc.c: 102: TRISDbits.TRISD1 = 1;
 13487  2EC4  0021               	movlb	1	; select bank1
 13488  2EC5  148F               	bsf	15,1	;volatile
 13489                           
 13490                           ;adc.c: 103: WPUD = 0x00;
 13491  2EC6  0024               	movlb	4	; select bank4
 13492  2EC7  018F               	clrf	15	;volatile
 13493                           
 13494                           ;adc.c: 106: ADCON0 = 0x00;
 13495  2EC8  0021               	movlb	1	; select bank1
 13496  2EC9  019D               	clrf	29	;volatile
 13497                           
 13498                           ;adc.c: 107: ADCON1 = 0x60;
 13499  2ECA  3060               	movlw	96
 13500  2ECB  009E               	movwf	30	;volatile
 13501                           
 13502                           ;adc.c: 108: ADCON2 = 0x0F;
 13503  2ECC  300F               	movlw	15
 13504  2ECD  009F               	movwf	31	;volatile
 13505  2ECE  0008               	return
 13506  2ECF                     __end_of_adcSetup:	
 13507                           
 13508                           	psect	text29
 13509  2E07                     __ptext29:	
 13510 ;; *************** function _LTC6804_initialize *****************
 13511 ;; Defined at:
 13512 ;;		line 113 in file "ltc6804.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;		None
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  1    wreg      void 
 13519 ;; Registers used:
 13520 ;;		wreg, status,2, status,0, pclath, cstack
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13530 ;;Total ram usage:        0 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    3
 13533 ;; This function calls:
 13534 ;;		_set_adc
 13535 ;; This function is called by:
 13536 ;;		_setup
 13537 ;; This function uses a non-reentrant model
 13538 ;;
 13539                           
 13540                           
 13541                           ;psect for function _LTC6804_initialize
 13542  2E07                     _LTC6804_initialize:	
 13543                           
 13544                           ;ltc6804.c: 115: set_adc(2,0,0,0);
 13545                           
 13546                           ;incstack = 0
 13547                           ; Regs used in _LTC6804_initialize: [wreg+status,2+status,0+pclath+cstack]
 13548  2E07  01F2               	clrf	set_adc@DCP
 13549  2E08  01F3               	clrf	set_adc@CH
 13550  2E09  01F4               	clrf	set_adc@CHG
 13551  2E0A  3002               	movlw	2
 13552  2E0B  31A0  2071         	fcall	_set_adc
 13553  2E0D  0008               	return
 13554  2E0E                     __end_of_LTC6804_initialize:	
 13555                           
 13556                           	psect	text30
 13557  2071                     __ptext30:	
 13558 ;; *************** function _set_adc *****************
 13559 ;; Defined at:
 13560 ;;		line 137 in file "ltc6804.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  MD              1    wreg     unsigned char 
 13563 ;;  DCP             1    2[COMMON] unsigned char 
 13564 ;;  CH              1    3[COMMON] unsigned char 
 13565 ;;  CHG             1    4[COMMON] unsigned char 
 13566 ;; Auto vars:     Size  Location     Type
 13567 ;;  MD              1    7[COMMON] unsigned char 
 13568 ;;  md_bits         1    8[COMMON] unsigned char 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  1    wreg      void 
 13571 ;; Registers used:
 13572 ;;		wreg, status,2, status,0
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13578 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13579 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13581 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13582 ;;Total ram usage:        7 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:    2
 13585 ;; This function calls:
 13586 ;;		Nothing
 13587 ;; This function is called by:
 13588 ;;		_LTC6804_initialize
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           
 13593                           ;psect for function _set_adc
 13594  2071                     _set_adc:	
 13595                           
 13596                           ;incstack = 0
 13597                           ; Regs used in _set_adc: [wreg+status,2+status,0]
 13598                           ;set_adc@MD stored from wreg
 13599  2071  00F7               	movwf	set_adc@MD
 13600                           
 13601                           ;ltc6804.c: 143: char md_bits;
 13602                           ;ltc6804.c: 145: md_bits = (MD & 0x02) >> 1;
 13603  2072  3677               	lsrf	set_adc@MD,w
 13604  2073  3901               	andlw	1
 13605  2074  00F5               	movwf	??_set_adc
 13606  2075  0875               	movf	??_set_adc,w
 13607  2076  00F8               	movwf	set_adc@md_bits
 13608                           
 13609                           ;ltc6804.c: 146: ADCV[0] = md_bits + 0x02;
 13610  2077  0878               	movf	set_adc@md_bits,w
 13611  2078  3E02               	addlw	2
 13612  2079  00F5               	movwf	??_set_adc
 13613  207A  0875               	movf	??_set_adc,w
 13614  207B  0022               	movlb	2	; select bank2
 13615  207C  00ED               	movwf	_ADCV^(0+256)
 13616                           
 13617                           ;ltc6804.c: 147: md_bits = (MD & 0x01) << 7;
 13618  207D  0877               	movf	set_adc@MD,w
 13619  207E  3901               	andlw	1
 13620  207F  00F5               	movwf	??_set_adc
 13621  2080  3006               	movlw	6
 13622  2081                     u6255:	
 13623  2081  35F5               	lslf	??_set_adc,f
 13624  2082  3EFF               	addlw	-1
 13625  2083  1D03               	skipz
 13626  2084  2881               	goto	u6255
 13627  2085  3575               	lslf	??_set_adc,w
 13628  2086  00F6               	movwf	??_set_adc+1
 13629  2087  0876               	movf	??_set_adc+1,w
 13630  2088  00F8               	movwf	set_adc@md_bits
 13631                           
 13632                           ;ltc6804.c: 148: ADCV[1] = md_bits + 0x60 + (DCP<<4) + CH;
 13633  2089  0872               	movf	set_adc@DCP,w
 13634  208A  00F5               	movwf	??_set_adc
 13635  208B  3003               	movlw	3
 13636  208C                     u6265:	
 13637  208C  35F5               	lslf	??_set_adc,f
 13638  208D  3EFF               	addlw	-1
 13639  208E  1D03               	skipz
 13640  208F  288C               	goto	u6265
 13641  2090  3575               	lslf	??_set_adc,w
 13642  2091  0778               	addwf	set_adc@md_bits,w
 13643  2092  0773               	addwf	set_adc@CH,w
 13644  2093  3E60               	addlw	96
 13645  2094  00F6               	movwf	??_set_adc+1
 13646  2095  0876               	movf	??_set_adc+1,w
 13647  2096  00EE               	movwf	(_ADCV^(0+256)+1)
 13648                           
 13649                           ;ltc6804.c: 150: md_bits = (MD & 0x02) >> 1;
 13650  2097  3677               	lsrf	set_adc@MD,w
 13651  2098  3901               	andlw	1
 13652  2099  00F5               	movwf	??_set_adc
 13653  209A  0875               	movf	??_set_adc,w
 13654  209B  00F8               	movwf	set_adc@md_bits
 13655                           
 13656                           ;ltc6804.c: 151: ADAX[0] = md_bits + 0x04;
 13657  209C  0878               	movf	set_adc@md_bits,w
 13658  209D  3E04               	addlw	4
 13659  209E  00F5               	movwf	??_set_adc
 13660  209F  0875               	movf	??_set_adc,w
 13661  20A0  00EB               	movwf	_ADAX^(0+256)
 13662                           
 13663                           ;ltc6804.c: 152: md_bits = (MD & 0x01) << 7;
 13664  20A1  0877               	movf	set_adc@MD,w
 13665  20A2  3901               	andlw	1
 13666  20A3  00F5               	movwf	??_set_adc
 13667  20A4  3006               	movlw	6
 13668  20A5                     u6275:	
 13669  20A5  35F5               	lslf	??_set_adc,f
 13670  20A6  3EFF               	addlw	-1
 13671  20A7  1D03               	skipz
 13672  20A8  28A5               	goto	u6275
 13673  20A9  3575               	lslf	??_set_adc,w
 13674  20AA  00F6               	movwf	??_set_adc+1
 13675  20AB  0876               	movf	??_set_adc+1,w
 13676  20AC  00F8               	movwf	set_adc@md_bits
 13677                           
 13678                           ;ltc6804.c: 153: ADAX[1] = md_bits + 0x60 + CHG ;
 13679  20AD  0878               	movf	set_adc@md_bits,w
 13680  20AE  0774               	addwf	set_adc@CHG,w
 13681  20AF  3E60               	addlw	96
 13682  20B0  00F5               	movwf	??_set_adc
 13683  20B1  0875               	movf	??_set_adc,w
 13684  20B2  00EC               	movwf	(_ADAX^(0+256)+1)
 13685  20B3  0008               	return
 13686  20B4                     __end_of_set_adc:	
 13687                           
 13688                           	psect	text31
 13689  1CCE                     __ptext31:	
 13690 ;; *************** function _measureVoltages *****************
 13691 ;; Defined at:
 13692 ;;		line 83 in file "ltc6804.c"
 13693 ;; Parameters:    Size  Location     Type
 13694 ;;  measurements    1    wreg     PTR float 
 13695 ;;		 -> voltages(48), 
 13696 ;;  numVoltages     2   76[BANK0 ] int 
 13697 ;; Auto vars:     Size  Location     Type
 13698 ;;  measurements    1   29[BANK1 ] PTR float 
 13699 ;;		 -> voltages(48), 
 13700 ;;  i               2   30[BANK1 ] int 
 13701 ;;  ltcData        24    4[BANK1 ] unsigned int [12][1]
 13702 ;;  pecError        1   28[BANK1 ] unsigned char 
 13703 ;; Return value:  Size  Location     Type
 13704 ;;                  1    wreg      void 
 13705 ;; Registers used:
 13706 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13707 ;; Tracked objects:
 13708 ;;		On entry : 0/0
 13709 ;;		On exit  : 0/0
 13710 ;;		Unchanged: 0/0
 13711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13712 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13713 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13714 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13715 ;;      Totals:         0       2      32       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13716 ;;Total ram usage:       34 bytes
 13717 ;; Hardware stack levels used:    1
 13718 ;; Hardware stack levels required when called:    6
 13719 ;; This function calls:
 13720 ;;		_LTC6804_adcv
 13721 ;;		_LTC6804_rdcv
 13722 ;;		___fldiv
 13723 ;;		___flge
 13724 ;;		___flmul
 13725 ;;		___xxtofl
 13726 ;; This function is called by:
 13727 ;;		_main
 13728 ;;		_startUp
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           
 13733                           ;psect for function _measureVoltages
 13734  1CCE                     _measureVoltages:	
 13735                           
 13736                           ;incstack = 0
 13737                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13738                           ;measureVoltages@measurements stored from wreg
 13739  1CCE  0021               	movlb	1	; select bank1
 13740  1CCF  00BD               	movwf	measureVoltages@measurements^(0+128)
 13741                           
 13742                           ;ltc6804.c: 84: char pecError = -1;
 13743  1CD0  30FF               	movlw	255
 13744  1CD1  00A0               	movwf	??_measureVoltages^(0+128)
 13745  1CD2  0820               	movf	??_measureVoltages^(0+128),w
 13746  1CD3  00BC               	movwf	measureVoltages@pecError^(0+128)
 13747                           
 13748                           ;ltc6804.c: 85: unsigned int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 13749  1CD4  30A0               	movlw	low measureVoltages@F7575
 13750  1CD5  0086               	movwf	6
 13751  1CD6  3001               	movlw	high measureVoltages@F7575
 13752  1CD7  0087               	movwf	7
 13753  1CD8  30A4               	movlw	low measureVoltages@ltcData
 13754  1CD9  0084               	movwf	4
 13755  1CDA  3000               	movlw	high measureVoltages@ltcData
 13756  1CDB  0085               	movwf	5
 13757  1CDC  3018               	movlw	24
 13758  1CDD  00A0               	movwf	??_measureVoltages^(0+128)
 13759  1CDE                     u10410:	
 13760  1CDE  0016               	moviw fsr1++
 13761  1CDF  001A               	movwi fsr0++
 13762  1CE0  0BA0               	decfsz	??_measureVoltages^(0+128),f
 13763  1CE1  2CDE               	goto	u10410
 13764                           
 13765                           ;ltc6804.c: 87: LTC6804_adcv();
 13766  1CE2  31A0  2001  319C   	fcall	_LTC6804_adcv
 13767  1CE5                     l7354:	
 13768                           ;ltc6804.c: 89: do{
 13769                           
 13770                           
 13771                           ;ltc6804.c: 90: pecError = LTC6804_rdcv(0, 1, ltcData);
 13772  1CE5  0020               	movlb	0	; select bank0
 13773  1CE6  01BB               	clrf	LTC6804_rdcv@total_ic
 13774  1CE7  0ABB               	incf	LTC6804_rdcv@total_ic,f
 13775  1CE8  30A4               	movlw	(low (measureVoltages@ltcData| 0))& (0+255)
 13776  1CE9  0021               	movlb	1	; select bank1
 13777  1CEA  00A0               	movwf	??_measureVoltages^(0+128)
 13778  1CEB  0820               	movf	??_measureVoltages^(0+128),w
 13779  1CEC  0020               	movlb	0	; select bank0
 13780  1CED  00BC               	movwf	LTC6804_rdcv@cell_codes
 13781  1CEE  3000               	movlw	0
 13782  1CEF  319E  2677  319C   	fcall	_LTC6804_rdcv
 13783  1CF2  0021               	movlb	1	; select bank1
 13784  1CF3  00A1               	movwf	(??_measureVoltages+1)^(0+128)
 13785  1CF4  0821               	movf	(??_measureVoltages+1)^(0+128),w
 13786  1CF5  00BC               	movwf	measureVoltages@pecError^(0+128)
 13787                           
 13788                           ;ltc6804.c: 91: }while(pecError != 0);
 13789  1CF6  083C               	movf	measureVoltages@pecError^(0+128),w
 13790  1CF7  1D03               	btfss	3,2
 13791  1CF8  2CE5               	goto	l7354
 13792                           
 13793                           ;ltc6804.c: 93: for(int i = 0; i< 12; i ++){
 13794  1CF9  01BE               	clrf	measureVoltages@i^(0+128)
 13795  1CFA  01BF               	clrf	(measureVoltages@i+1)^(0+128)
 13796  1CFB                     L10:	
 13797  1CFB  083F               	movf	(measureVoltages@i+1)^(0+128),w
 13798  1CFC  3A80               	xorlw	128
 13799  1CFD  00A0               	movwf	??_measureVoltages^(0+128)
 13800  1CFE  3080               	movlw	128
 13801  1CFF  0220               	subwf	??_measureVoltages^(0+128),w
 13802  1D00  1D03               	skipz
 13803  1D01  2D04               	goto	u10435
 13804  1D02  300C               	movlw	12
 13805  1D03  023E               	subwf	measureVoltages@i^(0+128),w
 13806  1D04                     u10435:	
 13807  1D04  1803               	btfsc	3,0
 13808  1D05  0008               	return
 13809                           
 13810                           ;ltc6804.c: 94: measurements[i] = 1.0*((float)ltcData[0][i]/10000.0);
 13811  1D06  303F               	movlw	63
 13812  1D07  0020               	movlb	0	; select bank0
 13813  1D08  00D5               	movwf	___flmul@b+3
 13814  1D09  3080               	movlw	128
 13815  1D0A  00D4               	movwf	___flmul@b+2
 13816  1D0B  3000               	movlw	0
 13817  1D0C  00D3               	movwf	___flmul@b+1
 13818  1D0D  3000               	movlw	0
 13819  1D0E  00D2               	movwf	___flmul@b
 13820  1D0F  3046               	movlw	70
 13821  1D10  00BB               	movwf	___fldiv@a+3
 13822  1D11  301C               	movlw	28
 13823  1D12  00BA               	movwf	___fldiv@a+2
 13824  1D13  3040               	movlw	64
 13825  1D14  00B9               	movwf	___fldiv@a+1
 13826  1D15  3000               	movlw	0
 13827  1D16  00B8               	movwf	___fldiv@a
 13828  1D17  0021               	movlb	1	; select bank1
 13829  1D18  353E               	lslf	measureVoltages@i^(0+128),w
 13830  1D19  3EA4               	addlw	(low (measureVoltages@ltcData| 0))& (0+255)
 13831  1D1A  0086               	movwf	6
 13832  1D1B  0187               	clrf	7
 13833  1D1C  3F40               	moviw [0]fsr1
 13834  1D1D  00A0               	movwf	??_measureVoltages^(0+128)
 13835  1D1E  3F41               	moviw [1]fsr1
 13836  1D1F  00A1               	movwf	(??_measureVoltages^(0+128)+1)
 13837  1D20  0820               	movf	??_measureVoltages^(0+128),w
 13838  1D21  0020               	movlb	0	; select bank0
 13839  1D22  00AE               	movwf	___xxtofl@val
 13840  1D23  0021               	movlb	1	; select bank1
 13841  1D24  0821               	movf	(??_measureVoltages+1)^(0+128),w
 13842  1D25  0020               	movlb	0	; select bank0
 13843  1D26  00AF               	movwf	___xxtofl@val+1
 13844  1D27  01B0               	clrf	___xxtofl@val+2
 13845  1D28  01B1               	clrf	___xxtofl@val+3
 13846  1D29  3000               	movlw	0
 13847  1D2A  31A6  261A  319C   	fcall	___xxtofl
 13848  1D2D  0020               	movlb	0	; select bank0
 13849  1D2E  0831               	movf	?___xxtofl+3,w
 13850  1D2F  00BF               	movwf	___fldiv@b+3
 13851  1D30  0830               	movf	?___xxtofl+2,w
 13852  1D31  00BE               	movwf	___fldiv@b+2
 13853  1D32  082F               	movf	?___xxtofl+1,w
 13854  1D33  00BD               	movwf	___fldiv@b+1
 13855  1D34  082E               	movf	?___xxtofl,w
 13856  1D35  00BC               	movwf	___fldiv@b
 13857  1D36  3194  2468  319C   	fcall	___fldiv
 13858  1D39  0020               	movlb	0	; select bank0
 13859  1D3A  083B               	movf	?___fldiv+3,w
 13860  1D3B  00D9               	movwf	___flmul@a+3
 13861  1D3C  083A               	movf	?___fldiv+2,w
 13862  1D3D  00D8               	movwf	___flmul@a+2
 13863  1D3E  0839               	movf	?___fldiv+1,w
 13864  1D3F  00D7               	movwf	___flmul@a+1
 13865  1D40  0838               	movf	?___fldiv,w
 13866  1D41  00D6               	movwf	___flmul@a
 13867  1D42  3183  23D5  319C   	fcall	___flmul
 13868  1D45  0021               	movlb	1	; select bank1
 13869  1D46  083E               	movf	measureVoltages@i^(0+128),w
 13870  1D47  00A2               	movwf	(??_measureVoltages+2)^(0+128)
 13871  1D48  3001               	movlw	1
 13872  1D49                     u10445:	
 13873  1D49  35A2               	lslf	(??_measureVoltages+2)^(0+128),f
 13874  1D4A  3EFF               	addlw	-1
 13875  1D4B  1D03               	skipz
 13876  1D4C  2D49               	goto	u10445
 13877  1D4D  3522               	lslf	(??_measureVoltages+2)^(0+128),w
 13878  1D4E  073D               	addwf	measureVoltages@measurements^(0+128),w
 13879  1D4F  00A3               	movwf	(??_measureVoltages+3)^(0+128)
 13880  1D50  0823               	movf	(??_measureVoltages+3)^(0+128),w
 13881  1D51  0086               	movwf	6
 13882  1D52  3002               	movlw	2	; select bank4/5
 13883  1D53  0087               	movwf	7
 13884  1D54  0020               	movlb	0	; select bank0
 13885  1D55  0852               	movf	?___flmul,w
 13886  1D56  3FC0               	movwi [0]fsr1
 13887  1D57  0853               	movf	?___flmul+1,w
 13888  1D58  3FC1               	movwi [1]fsr1
 13889  1D59  0854               	movf	?___flmul+2,w
 13890  1D5A  3FC2               	movwi [2]fsr1
 13891  1D5B  0855               	movf	?___flmul+3,w
 13892  1D5C  3FC3               	movwi [3]fsr1
 13893                           
 13894                           ;ltc6804.c: 96: if(measurements[i] < 0.1){
 13895  1D5D  0021               	movlb	1	; select bank1
 13896  1D5E  083E               	movf	measureVoltages@i^(0+128),w
 13897  1D5F  00A0               	movwf	??_measureVoltages^(0+128)
 13898  1D60  3001               	movlw	1
 13899  1D61                     u10455:	
 13900  1D61  35A0               	lslf	??_measureVoltages^(0+128),f
 13901  1D62  3EFF               	addlw	-1
 13902  1D63  1D03               	skipz
 13903  1D64  2D61               	goto	u10455
 13904  1D65  3520               	lslf	??_measureVoltages^(0+128),w
 13905  1D66  073D               	addwf	measureVoltages@measurements^(0+128),w
 13906  1D67  00A1               	movwf	(??_measureVoltages+1)^(0+128)
 13907  1D68  0821               	movf	(??_measureVoltages+1)^(0+128),w
 13908  1D69  0086               	movwf	6
 13909  1D6A  3002               	movlw	2	; select bank4/5
 13910  1D6B  0087               	movwf	7
 13911  1D6C  3F40               	moviw [0]fsr1
 13912  1D6D  00F2               	movwf	___flge@ff1
 13913  1D6E  3F41               	moviw [1]fsr1
 13914  1D6F  00F3               	movwf	___flge@ff1+1
 13915  1D70  3F42               	moviw [2]fsr1
 13916  1D71  00F4               	movwf	___flge@ff1+2
 13917  1D72  3F43               	moviw [3]fsr1
 13918  1D73  00F5               	movwf	___flge@ff1+3
 13919  1D74  303D               	movlw	61
 13920  1D75  00F9               	movwf	___flge@ff2+3
 13921  1D76  30CC               	movlw	204
 13922  1D77  00F8               	movwf	___flge@ff2+2
 13923  1D78  30CC               	movlw	204
 13924  1D79  00F7               	movwf	___flge@ff2+1
 13925  1D7A  30CD               	movlw	205
 13926  1D7B  00F6               	movwf	___flge@ff2
 13927  1D7C  31A6  26B0  319C   	fcall	___flge
 13928  1D7F  1803               	btfsc	3,0
 13929  1D80  2D98               	goto	l7368
 13930                           
 13931                           ;ltc6804.c: 97: measurements[i] = 0.0;
 13932  1D81  0021               	movlb	1	; select bank1
 13933  1D82  083E               	movf	measureVoltages@i^(0+128),w
 13934  1D83  00A0               	movwf	??_measureVoltages^(0+128)
 13935  1D84  3001               	movlw	1
 13936  1D85                     u10475:	
 13937  1D85  35A0               	lslf	??_measureVoltages^(0+128),f
 13938  1D86  3EFF               	addlw	-1
 13939  1D87  1D03               	skipz
 13940  1D88  2D85               	goto	u10475
 13941  1D89  3520               	lslf	??_measureVoltages^(0+128),w
 13942  1D8A  073D               	addwf	measureVoltages@measurements^(0+128),w
 13943  1D8B  00A1               	movwf	(??_measureVoltages+1)^(0+128)
 13944  1D8C  0821               	movf	(??_measureVoltages+1)^(0+128),w
 13945  1D8D  0086               	movwf	6
 13946  1D8E  3002               	movlw	2	; select bank4/5
 13947  1D8F  0087               	movwf	7
 13948  1D90  3000               	movlw	0
 13949  1D91  3FC0               	movwi [0]fsr1
 13950  1D92  3000               	movlw	0
 13951  1D93  3FC1               	movwi [1]fsr1
 13952  1D94  3000               	movlw	0
 13953  1D95  3FC2               	movwi [2]fsr1
 13954  1D96  3000               	movlw	0
 13955  1D97  3FC3               	movwi [3]fsr1
 13956  1D98                     l7368:	
 13957  1D98  3001               	movlw	1
 13958  1D99  0021               	movlb	1	; select bank1
 13959  1D9A  07BE               	addwf	measureVoltages@i^(0+128),f
 13960  1D9B  3000               	movlw	0
 13961  1D9C  3DBF               	addwfc	(measureVoltages@i+1)^(0+128),f
 13962  1D9D  2CFB               	goto	L10
 13963  1D9E                     __end_of_measureVoltages:	
 13964                           
 13965                           	psect	text32
 13966  26B0                     __ptext32:	
 13967 ;; *************** function ___flge *****************
 13968 ;; Defined at:
 13969 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 13970 ;; Parameters:    Size  Location     Type
 13971 ;;  ff1             4    2[COMMON] void 
 13972 ;;  ff2             4    6[COMMON] void 
 13973 ;; Auto vars:     Size  Location     Type
 13974 ;;		None
 13975 ;; Return value:  Size  Location     Type
 13976 ;;		None               void
 13977 ;; Registers used:
 13978 ;;		wreg, status,2, status,0
 13979 ;; Tracked objects:
 13980 ;;		On entry : 0/0
 13981 ;;		On exit  : 0/0
 13982 ;;		Unchanged: 0/0
 13983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13986 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13987 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13988 ;;Total ram usage:       16 bytes
 13989 ;; Hardware stack levels used:    1
 13990 ;; Hardware stack levels required when called:    2
 13991 ;; This function calls:
 13992 ;;		Nothing
 13993 ;; This function is called by:
 13994 ;;		_writeVoltages
 13995 ;;		_measureVoltages
 13996 ;;		_sprintf
 13997 ;;		_startUp
 13998 ;; This function uses a non-reentrant model
 13999 ;;
 14000                           
 14001                           
 14002                           ;psect for function ___flge
 14003  26B0                     ___flge:	
 14004                           
 14005                           ;incstack = 0
 14006                           ; Regs used in ___flge: [wreg+status,2+status,0]
 14007  26B0  3000               	movlw	0
 14008  26B1  0572               	andwf	___flge@ff1,w
 14009  26B2  0020               	movlb	0	; select bank0
 14010  26B3  00A0               	movwf	??___flge
 14011  26B4  3000               	movlw	0
 14012  26B5  0573               	andwf	___flge@ff1+1,w
 14013  26B6  00A1               	movwf	??___flge+1
 14014  26B7  3080               	movlw	128
 14015  26B8  0574               	andwf	___flge@ff1+2,w
 14016  26B9  00A2               	movwf	??___flge+2
 14017  26BA  307F               	movlw	127
 14018  26BB  0575               	andwf	___flge@ff1+3,w
 14019  26BC  00A3               	movwf	??___flge+3
 14020  26BD  0823               	movf	??___flge+3,w
 14021  26BE  0422               	iorwf	??___flge+2,w
 14022  26BF  0421               	iorwf	??___flge+1,w
 14023  26C0  0420               	iorwf	??___flge,w
 14024  26C1  1D03               	skipz
 14025  26C2  2ECB               	goto	l1091
 14026  26C3  3000               	movlw	0
 14027  26C4  00F5               	movwf	___flge@ff1+3
 14028  26C5  3000               	movlw	0
 14029  26C6  00F4               	movwf	___flge@ff1+2
 14030  26C7  3000               	movlw	0
 14031  26C8  00F3               	movwf	___flge@ff1+1
 14032  26C9  3000               	movlw	0
 14033  26CA  00F2               	movwf	___flge@ff1
 14034  26CB                     l1091:	
 14035  26CB  3000               	movlw	0
 14036  26CC  0576               	andwf	___flge@ff2,w
 14037  26CD  00A0               	movwf	??___flge
 14038  26CE  3000               	movlw	0
 14039  26CF  0577               	andwf	___flge@ff2+1,w
 14040  26D0  00A1               	movwf	??___flge+1
 14041  26D1  3080               	movlw	128
 14042  26D2  0578               	andwf	___flge@ff2+2,w
 14043  26D3  00A2               	movwf	??___flge+2
 14044  26D4  307F               	movlw	127
 14045  26D5  0579               	andwf	___flge@ff2+3,w
 14046  26D6  00A3               	movwf	??___flge+3
 14047  26D7  0823               	movf	??___flge+3,w
 14048  26D8  0422               	iorwf	??___flge+2,w
 14049  26D9  0421               	iorwf	??___flge+1,w
 14050  26DA  0420               	iorwf	??___flge,w
 14051  26DB  1D03               	skipz
 14052  26DC  2EE5               	goto	l6656
 14053  26DD  3000               	movlw	0
 14054  26DE  00F9               	movwf	___flge@ff2+3
 14055  26DF  3000               	movlw	0
 14056  26E0  00F8               	movwf	___flge@ff2+2
 14057  26E1  3000               	movlw	0
 14058  26E2  00F7               	movwf	___flge@ff2+1
 14059  26E3  3000               	movlw	0
 14060  26E4  00F6               	movwf	___flge@ff2
 14061  26E5                     l6656:	
 14062  26E5  1FF5               	btfss	___flge@ff1+3,7
 14063  26E6  2F0E               	goto	l6660
 14064  26E7  3000               	movlw	0
 14065  26E8  00A0               	movwf	??___flge
 14066  26E9  3000               	movlw	0
 14067  26EA  00A1               	movwf	??___flge+1
 14068  26EB  3000               	movlw	0
 14069  26EC  00A2               	movwf	??___flge+2
 14070  26ED  3080               	movlw	128
 14071  26EE  00A3               	movwf	??___flge+3
 14072  26EF  0972               	comf	___flge@ff1,w
 14073  26F0  00A4               	movwf	??___flge+4
 14074  26F1  0973               	comf	___flge@ff1+1,w
 14075  26F2  00A5               	movwf	??___flge+5
 14076  26F3  0974               	comf	___flge@ff1+2,w
 14077  26F4  00A6               	movwf	??___flge+6
 14078  26F5  0975               	comf	___flge@ff1+3,w
 14079  26F6  00A7               	movwf	??___flge+7
 14080  26F7  0AA4               	incf	??___flge+4,f
 14081  26F8  1903               	skipnz
 14082  26F9  0AA5               	incf	??___flge+5,f
 14083  26FA  1903               	skipnz
 14084  26FB  0AA6               	incf	??___flge+6,f
 14085  26FC  1903               	skipnz
 14086  26FD  0AA7               	incf	??___flge+7,f
 14087  26FE  0824               	movf	??___flge+4,w
 14088  26FF  07A0               	addwf	??___flge,f
 14089  2700  0825               	movf	??___flge+5,w
 14090  2701  3DA1               	addwfc	??___flge+1,f
 14091  2702  0826               	movf	??___flge+6,w
 14092  2703  3DA2               	addwfc	??___flge+2,f
 14093  2704  0827               	movf	??___flge+7,w
 14094  2705  3DA3               	addwfc	??___flge+3,f
 14095  2706  0823               	movf	??___flge+3,w
 14096  2707  00F5               	movwf	___flge@ff1+3
 14097  2708  0822               	movf	??___flge+2,w
 14098  2709  00F4               	movwf	___flge@ff1+2
 14099  270A  0821               	movf	??___flge+1,w
 14100  270B  00F3               	movwf	___flge@ff1+1
 14101  270C  0820               	movf	??___flge,w
 14102  270D  00F2               	movwf	___flge@ff1
 14103  270E                     l6660:	
 14104  270E  1FF9               	btfss	___flge@ff2+3,7
 14105  270F  2F37               	goto	l6664
 14106  2710  3000               	movlw	0
 14107  2711  00A0               	movwf	??___flge
 14108  2712  3000               	movlw	0
 14109  2713  00A1               	movwf	??___flge+1
 14110  2714  3000               	movlw	0
 14111  2715  00A2               	movwf	??___flge+2
 14112  2716  3080               	movlw	128
 14113  2717  00A3               	movwf	??___flge+3
 14114  2718  0976               	comf	___flge@ff2,w
 14115  2719  00A4               	movwf	??___flge+4
 14116  271A  0977               	comf	___flge@ff2+1,w
 14117  271B  00A5               	movwf	??___flge+5
 14118  271C  0978               	comf	___flge@ff2+2,w
 14119  271D  00A6               	movwf	??___flge+6
 14120  271E  0979               	comf	___flge@ff2+3,w
 14121  271F  00A7               	movwf	??___flge+7
 14122  2720  0AA4               	incf	??___flge+4,f
 14123  2721  1903               	skipnz
 14124  2722  0AA5               	incf	??___flge+5,f
 14125  2723  1903               	skipnz
 14126  2724  0AA6               	incf	??___flge+6,f
 14127  2725  1903               	skipnz
 14128  2726  0AA7               	incf	??___flge+7,f
 14129  2727  0824               	movf	??___flge+4,w
 14130  2728  07A0               	addwf	??___flge,f
 14131  2729  0825               	movf	??___flge+5,w
 14132  272A  3DA1               	addwfc	??___flge+1,f
 14133  272B  0826               	movf	??___flge+6,w
 14134  272C  3DA2               	addwfc	??___flge+2,f
 14135  272D  0827               	movf	??___flge+7,w
 14136  272E  3DA3               	addwfc	??___flge+3,f
 14137  272F  0823               	movf	??___flge+3,w
 14138  2730  00F9               	movwf	___flge@ff2+3
 14139  2731  0822               	movf	??___flge+2,w
 14140  2732  00F8               	movwf	___flge@ff2+2
 14141  2733  0821               	movf	??___flge+1,w
 14142  2734  00F7               	movwf	___flge@ff2+1
 14143  2735  0820               	movf	??___flge,w
 14144  2736  00F6               	movwf	___flge@ff2
 14145  2737                     l6664:	
 14146  2737  3080               	movlw	128
 14147  2738  06F5               	xorwf	___flge@ff1+3,f
 14148  2739  3080               	movlw	128
 14149  273A  06F9               	xorwf	___flge@ff2+3,f
 14150  273B  0879               	movf	___flge@ff2+3,w
 14151  273C  0275               	subwf	___flge@ff1+3,w
 14152  273D  1D03               	skipz
 14153  273E  0008               	return
 14154  273F  0878               	movf	___flge@ff2+2,w
 14155  2740  0274               	subwf	___flge@ff1+2,w
 14156  2741  1D03               	skipz
 14157  2742  0008               	return
 14158  2743  0877               	movf	___flge@ff2+1,w
 14159  2744  0273               	subwf	___flge@ff1+1,w
 14160  2745  1D03               	skipz
 14161  2746  0008               	return
 14162  2747  0876               	movf	___flge@ff2,w
 14163  2748  0272               	subwf	___flge@ff1,w
 14164  2749  0008               	return
 14165  274A                     __end_of___flge:	
 14166                           
 14167                           	psect	text33
 14168  1E77                     __ptext33:	
 14169 ;; *************** function _LTC6804_rdcv *****************
 14170 ;; Defined at:
 14171 ;;		line 290 in file "ltc6804.c"
 14172 ;; Parameters:    Size  Location     Type
 14173 ;;  reg             1    wreg     unsigned char 
 14174 ;;  total_ic        1   27[BANK0 ] unsigned char 
 14175 ;;  cell_codes      1   28[BANK0 ] PTR unsigned int [12]
 14176 ;;		 -> measureVoltages@ltcData(24), 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  reg             1   49[BANK0 ] unsigned char 
 14179 ;;  current_cell    1   51[BANK0 ] unsigned char 
 14180 ;;  current_cell    1   53[BANK0 ] unsigned char 
 14181 ;;  current_ic      1   50[BANK0 ] unsigned char 
 14182 ;;  current_ic      1   52[BANK0 ] unsigned char 
 14183 ;;  cell_reg        1   54[BANK0 ] unsigned char 
 14184 ;;  cell_data       8   34[BANK0 ] unsigned char [8]
 14185 ;;  data_pec        2   47[BANK0 ] int 
 14186 ;;  received_pec    2   45[BANK0 ] int 
 14187 ;;  parsed_cell     2   43[BANK0 ] int 
 14188 ;;  data_counter    1   55[BANK0 ] unsigned char 
 14189 ;;  pec_error       1   42[BANK0 ] unsigned char 
 14190 ;; Return value:  Size  Location     Type
 14191 ;;                  1    wreg      unsigned char 
 14192 ;; Registers used:
 14193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14194 ;; Tracked objects:
 14195 ;;		On entry : 0/0
 14196 ;;		On exit  : 0/0
 14197 ;;		Unchanged: 0/0
 14198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14199 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14200 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14201 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14202 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14203 ;;Total ram usage:       29 bytes
 14204 ;; Hardware stack levels used:    1
 14205 ;; Hardware stack levels required when called:    5
 14206 ;; This function calls:
 14207 ;;		_LTC6804_rdcv_reg
 14208 ;;		___bmul
 14209 ;;		___wmul
 14210 ;;		_pec15_calc
 14211 ;; This function is called by:
 14212 ;;		_measureVoltages
 14213 ;; This function uses a non-reentrant model
 14214 ;;
 14215                           
 14216                           
 14217                           ;psect for function _LTC6804_rdcv
 14218  1E77                     _LTC6804_rdcv:	
 14219                           
 14220                           ;incstack = 0
 14221                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14222                           ;LTC6804_rdcv@reg stored from wreg
 14223  1E77  0020               	movlb	0	; select bank0
 14224  1E78  00D1               	movwf	LTC6804_rdcv@reg
 14225                           
 14226                           ;ltc6804.c: 296: const char NUM_RX_BYT = 8;
 14227                           ;ltc6804.c: 297: const char BYT_IN_REG = 6;
 14228                           ;ltc6804.c: 298: const char CELL_IN_REG = 3;
 14229                           ;ltc6804.c: 300: char cell_data[8];
 14230                           ;ltc6804.c: 301: char pec_error = 0;
 14231  1E79  01CA               	clrf	LTC6804_rdcv@pec_error
 14232                           
 14233                           ;ltc6804.c: 302: int parsed_cell;
 14234                           ;ltc6804.c: 303: int received_pec;
 14235                           ;ltc6804.c: 304: int data_pec;
 14236                           ;ltc6804.c: 305: char data_counter=0;
 14237  1E7A  01D7               	clrf	LTC6804_rdcv@data_counter
 14238                           
 14239                           ;ltc6804.c: 308: if (reg == 0)
 14240  1E7B  0851               	movf	LTC6804_rdcv@reg,w
 14241  1E7C  1D03               	btfss	3,2
 14242  1E7D  2F44               	goto	l7312
 14243                           
 14244                           ;ltc6804.c: 309: {
 14245                           ;ltc6804.c: 311: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 14246  1E7E  01D6               	clrf	LTC6804_rdcv@cell_reg
 14247  1E7F  0AD6               	incf	LTC6804_rdcv@cell_reg,f
 14248  1E80                     L12:	
 14249  1E80  3005               	movlw	5
 14250  1E81  0256               	subwf	LTC6804_rdcv@cell_reg,w
 14251  1E82  1803               	btfsc	3,0
 14252  1E83  2FFE               	goto	l7344
 14253                           
 14254                           ;ltc6804.c: 312: {
 14255                           ;ltc6804.c: 313: data_counter = 0;
 14256  1E84  01D7               	clrf	LTC6804_rdcv@data_counter
 14257                           
 14258                           ;ltc6804.c: 314: LTC6804_rdcv_reg(cell_reg, total_ic,cell_data );
 14259  1E85  083B               	movf	LTC6804_rdcv@total_ic,w
 14260  1E86  00BD               	movwf	??_LTC6804_rdcv
 14261  1E87  083D               	movf	??_LTC6804_rdcv,w
 14262  1E88  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 14263  1E89  3042               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14264  1E8A  00BE               	movwf	??_LTC6804_rdcv+1
 14265  1E8B  083E               	movf	??_LTC6804_rdcv+1,w
 14266  1E8C  00B0               	movwf	LTC6804_rdcv_reg@data
 14267  1E8D  0856               	movf	LTC6804_rdcv@cell_reg,w
 14268  1E8E  31A2  22D6  319E   	fcall	_LTC6804_rdcv_reg
 14269                           
 14270                           ;ltc6804.c: 316: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14271  1E91  0020               	movlb	0	; select bank0
 14272  1E92  01D2               	clrf	LTC6804_rdcv@current_ic
 14273  1E93                     l578:	
 14274  1E93  083B               	movf	LTC6804_rdcv@total_ic,w
 14275  1E94  0252               	subwf	LTC6804_rdcv@current_ic,w
 14276  1E95  1803               	btfsc	3,0
 14277  1E96  2F3F               	goto	l7308
 14278                           
 14279                           ;ltc6804.c: 317: {
 14280                           ;ltc6804.c: 320: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 14281  1E97  01D3               	clrf	LTC6804_rdcv@current_cell
 14282  1E98  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14283  1E99  0084               	movwf	4
 14284  1E9A  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14285  1E9B  0085               	movwf	5
 14286  1E9C  0800               	movf	0,w	;code access
 14287  1E9D  0253               	subwf	LTC6804_rdcv@current_cell,w
 14288  1E9E  1803               	btfsc	3,0
 14289  1E9F  2EF4               	goto	l7296
 14290  1EA0                     l7286:	
 14291                           
 14292                           ;ltc6804.c: 321: {
 14293                           ;ltc6804.c: 323: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 14294  1EA0  0857               	movf	LTC6804_rdcv@data_counter,w
 14295  1EA1  3E01               	addlw	1
 14296  1EA2  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14297  1EA3  0086               	movwf	6
 14298  1EA4  0187               	clrf	7
 14299  1EA5  0801               	movf	1,w
 14300  1EA6  00BD               	movwf	??_LTC6804_rdcv
 14301  1EA7  01BE               	clrf	??_LTC6804_rdcv+1
 14302  1EA8  083D               	movf	??_LTC6804_rdcv,w
 14303  1EA9  00BE               	movwf	??_LTC6804_rdcv+1
 14304  1EAA  01BD               	clrf	??_LTC6804_rdcv
 14305  1EAB  0857               	movf	LTC6804_rdcv@data_counter,w
 14306  1EAC  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14307  1EAD  0086               	movwf	6
 14308  1EAE  0187               	clrf	7
 14309  1EAF  0801               	movf	1,w
 14310  1EB0  073D               	addwf	??_LTC6804_rdcv,w
 14311  1EB1  00CB               	movwf	LTC6804_rdcv@parsed_cell
 14312  1EB2  083E               	movf	??_LTC6804_rdcv+1,w
 14313  1EB3  1803               	skipnc
 14314  1EB4  0A3E               	incf	??_LTC6804_rdcv+1,w
 14315  1EB5  00CC               	movwf	LTC6804_rdcv@parsed_cell+1
 14316                           
 14317                           ;ltc6804.c: 326: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 14318  1EB6  3018               	movlw	24
 14319  1EB7  00BD               	movwf	??_LTC6804_rdcv
 14320  1EB8  083D               	movf	??_LTC6804_rdcv,w
 14321  1EB9  00F2               	movwf	___bmul@multiplicand
 14322  1EBA  0852               	movf	LTC6804_rdcv@current_ic,w
 14323  1EBB  31AE  264D  319E   	fcall	___bmul
 14324  1EBE  0020               	movlb	0	; select bank0
 14325  1EBF  073C               	addwf	LTC6804_rdcv@cell_codes,w
 14326  1EC0  00BE               	movwf	??_LTC6804_rdcv+1
 14327  1EC1  0856               	movf	LTC6804_rdcv@cell_reg,w
 14328  1EC2  3EFF               	addlw	255
 14329  1EC3  00F2               	movwf	___wmul@multiplier
 14330  1EC4  30FF               	movlw	255
 14331  1EC5  1803               	skipnc
 14332  1EC6  3000               	movlw	0
 14333  1EC7  00F3               	movwf	___wmul@multiplier+1
 14334  1EC8  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14335  1EC9  0084               	movwf	4
 14336  1ECA  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14337  1ECB  0085               	movwf	5
 14338  1ECC  0800               	movf	0,w	;code access
 14339  1ECD  00BF               	movwf	??_LTC6804_rdcv+2
 14340  1ECE  01C0               	clrf	??_LTC6804_rdcv+3
 14341  1ECF  083F               	movf	??_LTC6804_rdcv+2,w
 14342  1ED0  00F4               	movwf	___wmul@multiplicand
 14343  1ED1  0840               	movf	??_LTC6804_rdcv+3,w
 14344  1ED2  00F5               	movwf	___wmul@multiplicand+1
 14345  1ED3  31AE  2696  319E   	fcall	___wmul
 14346  1ED6  0872               	movf	?___wmul,w
 14347  1ED7  0020               	movlb	0	; select bank0
 14348  1ED8  0753               	addwf	LTC6804_rdcv@current_cell,w
 14349  1ED9  0709               	addwf	9,w
 14350  1EDA  073E               	addwf	??_LTC6804_rdcv+1,w
 14351  1EDB  00C1               	movwf	??_LTC6804_rdcv+4
 14352  1EDC  0841               	movf	??_LTC6804_rdcv+4,w
 14353  1EDD  0086               	movwf	6
 14354  1EDE  0187               	clrf	7
 14355  1EDF  084B               	movf	LTC6804_rdcv@parsed_cell,w
 14356  1EE0  3FC0               	movwi [0]fsr1
 14357  1EE1  084C               	movf	LTC6804_rdcv@parsed_cell+1,w
 14358  1EE2  3FC1               	movwi [1]fsr1
 14359                           
 14360                           ;ltc6804.c: 327: data_counter = data_counter + 2;
 14361  1EE3  0857               	movf	LTC6804_rdcv@data_counter,w
 14362  1EE4  3E02               	addlw	2
 14363  1EE5  00BD               	movwf	??_LTC6804_rdcv
 14364  1EE6  083D               	movf	??_LTC6804_rdcv,w
 14365  1EE7  00D7               	movwf	LTC6804_rdcv@data_counter
 14366  1EE8  3001               	movlw	1
 14367  1EE9  00BD               	movwf	??_LTC6804_rdcv
 14368  1EEA  083D               	movf	??_LTC6804_rdcv,w
 14369  1EEB  07D3               	addwf	LTC6804_rdcv@current_cell,f
 14370  1EEC  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14371  1EED  0084               	movwf	4
 14372  1EEE  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14373  1EEF  0085               	movwf	5
 14374  1EF0  0800               	movf	0,w	;code access
 14375  1EF1  0253               	subwf	LTC6804_rdcv@current_cell,w
 14376  1EF2  1C03               	skipc
 14377  1EF3  2EA0               	goto	l7286
 14378  1EF4                     l7296:	
 14379                           
 14380                           ;ltc6804.c: 329: }
 14381                           ;ltc6804.c: 331: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 14382  1EF4  0857               	movf	LTC6804_rdcv@data_counter,w
 14383  1EF5  3E01               	addlw	1
 14384  1EF6  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14385  1EF7  0086               	movwf	6
 14386  1EF8  0187               	clrf	7
 14387  1EF9  0801               	movf	1,w
 14388  1EFA  00BD               	movwf	??_LTC6804_rdcv
 14389  1EFB  01BE               	clrf	??_LTC6804_rdcv+1
 14390  1EFC  0857               	movf	LTC6804_rdcv@data_counter,w
 14391  1EFD  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14392  1EFE  0086               	movwf	6
 14393  1EFF  0187               	clrf	7
 14394  1F00  0801               	movf	1,w
 14395  1F01  00BF               	movwf	??_LTC6804_rdcv+2
 14396  1F02  01C0               	clrf	??_LTC6804_rdcv+3
 14397  1F03  083F               	movf	??_LTC6804_rdcv+2,w
 14398  1F04  00C0               	movwf	??_LTC6804_rdcv+3
 14399  1F05  01BF               	clrf	??_LTC6804_rdcv+2
 14400  1F06  083D               	movf	??_LTC6804_rdcv,w
 14401  1F07  073F               	addwf	??_LTC6804_rdcv+2,w
 14402  1F08  00CD               	movwf	LTC6804_rdcv@received_pec
 14403  1F09  083E               	movf	??_LTC6804_rdcv+1,w
 14404  1F0A  3D40               	addwfc	??_LTC6804_rdcv+3,w
 14405  1F0B  00CE               	movwf	LTC6804_rdcv@received_pec+1
 14406                           
 14407                           ;ltc6804.c: 333: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14408  1F0C  30C2               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14409  1F0D  0084               	movwf	4
 14410  1F0E  30B0               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14411  1F0F  0085               	movwf	5
 14412  1F10  0800               	movf	0,w	;code access
 14413  1F11  00BD               	movwf	??_LTC6804_rdcv
 14414  1F12  083D               	movf	??_LTC6804_rdcv,w
 14415  1F13  00F2               	movwf	___bmul@multiplicand
 14416  1F14  0852               	movf	LTC6804_rdcv@current_ic,w
 14417  1F15  31AE  264D  319E   	fcall	___bmul
 14418  1F18  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14419  1F19  00F6               	movwf	pec15_calc@data
 14420  1F1A  3000               	movlw	0
 14421  1F1B  00F7               	movwf	pec15_calc@data+1
 14422  1F1C  3067               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14423  1F1D  0084               	movwf	4
 14424  1F1E  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14425  1F1F  0085               	movwf	5
 14426  1F20  0800               	movf	0,w	;code access
 14427  1F21  31A1  213C  319E   	fcall	_pec15_calc
 14428  1F24  0877               	movf	?_pec15_calc+1,w
 14429  1F25  0020               	movlb	0	; select bank0
 14430  1F26  00D0               	movwf	LTC6804_rdcv@data_pec+1
 14431  1F27  0876               	movf	?_pec15_calc,w
 14432  1F28  00CF               	movwf	LTC6804_rdcv@data_pec
 14433                           
 14434                           ;ltc6804.c: 334: if(received_pec != data_pec)
 14435  1F29  0850               	movf	LTC6804_rdcv@data_pec+1,w
 14436  1F2A  064E               	xorwf	LTC6804_rdcv@received_pec+1,w
 14437  1F2B  1D03               	skipz
 14438  1F2C  2F2F               	goto	u10345
 14439  1F2D  084F               	movf	LTC6804_rdcv@data_pec,w
 14440  1F2E  064D               	xorwf	LTC6804_rdcv@received_pec,w
 14441  1F2F                     u10345:	
 14442  1F2F  1903               	skipnz
 14443  1F30  2F35               	goto	l7304
 14444                           
 14445                           ;ltc6804.c: 335: {
 14446                           ;ltc6804.c: 336: pec_error = -1;
 14447  1F31  30FF               	movlw	255
 14448  1F32  00BD               	movwf	??_LTC6804_rdcv
 14449  1F33  083D               	movf	??_LTC6804_rdcv,w
 14450  1F34  00CA               	movwf	LTC6804_rdcv@pec_error
 14451  1F35                     l7304:	
 14452                           
 14453                           ;ltc6804.c: 338: }
 14454                           ;ltc6804.c: 339: data_counter=data_counter+2;
 14455  1F35  0857               	movf	LTC6804_rdcv@data_counter,w
 14456  1F36  3E02               	addlw	2
 14457  1F37  00BD               	movwf	??_LTC6804_rdcv
 14458  1F38  083D               	movf	??_LTC6804_rdcv,w
 14459  1F39  00D7               	movwf	LTC6804_rdcv@data_counter
 14460  1F3A  3001               	movlw	1
 14461  1F3B  00BD               	movwf	??_LTC6804_rdcv
 14462  1F3C  083D               	movf	??_LTC6804_rdcv,w
 14463  1F3D  07D2               	addwf	LTC6804_rdcv@current_ic,f
 14464  1F3E  2E93               	goto	l578
 14465  1F3F                     l7308:	
 14466  1F3F  3001               	movlw	1
 14467  1F40  00BD               	movwf	??_LTC6804_rdcv
 14468  1F41  083D               	movf	??_LTC6804_rdcv,w
 14469  1F42  07D6               	addwf	LTC6804_rdcv@cell_reg,f
 14470  1F43  2E80               	goto	L12
 14471  1F44                     l7312:	
 14472                           ;ltc6804.c: 341: }
 14473                           ;ltc6804.c: 342: }
 14474                           ;ltc6804.c: 343: }
 14475                           
 14476                           
 14477                           ;ltc6804.c: 345: else
 14478                           ;ltc6804.c: 346: {
 14479                           ;ltc6804.c: 348: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 14480  1F44  083B               	movf	LTC6804_rdcv@total_ic,w
 14481  1F45  00BD               	movwf	??_LTC6804_rdcv
 14482  1F46  083D               	movf	??_LTC6804_rdcv,w
 14483  1F47  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 14484  1F48  3042               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14485  1F49  00BE               	movwf	??_LTC6804_rdcv+1
 14486  1F4A  083E               	movf	??_LTC6804_rdcv+1,w
 14487  1F4B  00B0               	movwf	LTC6804_rdcv_reg@data
 14488  1F4C  0851               	movf	LTC6804_rdcv@reg,w
 14489  1F4D  31A2  22D6  319E   	fcall	_LTC6804_rdcv_reg
 14490                           
 14491                           ;ltc6804.c: 349: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 14492  1F50  0020               	movlb	0	; select bank0
 14493  1F51  01D4               	clrf	LTC6804_rdcv@current_ic_1295
 14494  1F52                     l585:	
 14495  1F52  083B               	movf	LTC6804_rdcv@total_ic,w
 14496  1F53  0254               	subwf	LTC6804_rdcv@current_ic_1295,w
 14497  1F54  1803               	btfsc	3,0
 14498  1F55  2FFE               	goto	l7344
 14499                           
 14500                           ;ltc6804.c: 350: {
 14501                           ;ltc6804.c: 352: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 14502  1F56  01D5               	clrf	LTC6804_rdcv@current_cell_1296
 14503  1F57  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14504  1F58  0084               	movwf	4
 14505  1F59  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14506  1F5A  0085               	movwf	5
 14507  1F5B  0800               	movf	0,w	;code access
 14508  1F5C  0255               	subwf	LTC6804_rdcv@current_cell_1296,w
 14509  1F5D  1803               	btfsc	3,0
 14510  1F5E  2FB3               	goto	l7332
 14511  1F5F                     l7322:	
 14512                           
 14513                           ;ltc6804.c: 353: {
 14514                           ;ltc6804.c: 355: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 14515  1F5F  0857               	movf	LTC6804_rdcv@data_counter,w
 14516  1F60  3E01               	addlw	1
 14517  1F61  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14518  1F62  0086               	movwf	6
 14519  1F63  0187               	clrf	7
 14520  1F64  0801               	movf	1,w
 14521  1F65  00BD               	movwf	??_LTC6804_rdcv
 14522  1F66  01BE               	clrf	??_LTC6804_rdcv+1
 14523  1F67  083D               	movf	??_LTC6804_rdcv,w
 14524  1F68  00BE               	movwf	??_LTC6804_rdcv+1
 14525  1F69  01BD               	clrf	??_LTC6804_rdcv
 14526  1F6A  0857               	movf	LTC6804_rdcv@data_counter,w
 14527  1F6B  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14528  1F6C  0086               	movwf	6
 14529  1F6D  0187               	clrf	7
 14530  1F6E  0801               	movf	1,w
 14531  1F6F  073D               	addwf	??_LTC6804_rdcv,w
 14532  1F70  00CB               	movwf	LTC6804_rdcv@parsed_cell
 14533  1F71  083E               	movf	??_LTC6804_rdcv+1,w
 14534  1F72  1803               	skipnc
 14535  1F73  0A3E               	incf	??_LTC6804_rdcv+1,w
 14536  1F74  00CC               	movwf	LTC6804_rdcv@parsed_cell+1
 14537                           
 14538                           ;ltc6804.c: 358: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 14539  1F75  3018               	movlw	24
 14540  1F76  00BD               	movwf	??_LTC6804_rdcv
 14541  1F77  083D               	movf	??_LTC6804_rdcv,w
 14542  1F78  00F2               	movwf	___bmul@multiplicand
 14543  1F79  0854               	movf	LTC6804_rdcv@current_ic_1295,w
 14544  1F7A  31AE  264D  319E   	fcall	___bmul
 14545  1F7D  0020               	movlb	0	; select bank0
 14546  1F7E  073C               	addwf	LTC6804_rdcv@cell_codes,w
 14547  1F7F  00BE               	movwf	??_LTC6804_rdcv+1
 14548  1F80  0851               	movf	LTC6804_rdcv@reg,w
 14549  1F81  3EFF               	addlw	255
 14550  1F82  00F2               	movwf	___wmul@multiplier
 14551  1F83  30FF               	movlw	255
 14552  1F84  1803               	skipnc
 14553  1F85  3000               	movlw	0
 14554  1F86  00F3               	movwf	___wmul@multiplier+1
 14555  1F87  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14556  1F88  0084               	movwf	4
 14557  1F89  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14558  1F8A  0085               	movwf	5
 14559  1F8B  0800               	movf	0,w	;code access
 14560  1F8C  00BF               	movwf	??_LTC6804_rdcv+2
 14561  1F8D  01C0               	clrf	??_LTC6804_rdcv+3
 14562  1F8E  083F               	movf	??_LTC6804_rdcv+2,w
 14563  1F8F  00F4               	movwf	___wmul@multiplicand
 14564  1F90  0840               	movf	??_LTC6804_rdcv+3,w
 14565  1F91  00F5               	movwf	___wmul@multiplicand+1
 14566  1F92  31AE  2696  319E   	fcall	___wmul
 14567  1F95  0872               	movf	?___wmul,w
 14568  1F96  0020               	movlb	0	; select bank0
 14569  1F97  0755               	addwf	LTC6804_rdcv@current_cell_1296,w
 14570  1F98  0709               	addwf	9,w
 14571  1F99  073E               	addwf	??_LTC6804_rdcv+1,w
 14572  1F9A  00C1               	movwf	??_LTC6804_rdcv+4
 14573  1F9B  0841               	movf	??_LTC6804_rdcv+4,w
 14574  1F9C  0086               	movwf	6
 14575  1F9D  0187               	clrf	7
 14576  1F9E  084B               	movf	LTC6804_rdcv@parsed_cell,w
 14577  1F9F  3FC0               	movwi [0]fsr1
 14578  1FA0  084C               	movf	LTC6804_rdcv@parsed_cell+1,w
 14579  1FA1  3FC1               	movwi [1]fsr1
 14580                           
 14581                           ;ltc6804.c: 359: data_counter= data_counter + 2;
 14582  1FA2  0857               	movf	LTC6804_rdcv@data_counter,w
 14583  1FA3  3E02               	addlw	2
 14584  1FA4  00BD               	movwf	??_LTC6804_rdcv
 14585  1FA5  083D               	movf	??_LTC6804_rdcv,w
 14586  1FA6  00D7               	movwf	LTC6804_rdcv@data_counter
 14587  1FA7  3001               	movlw	1
 14588  1FA8  00BD               	movwf	??_LTC6804_rdcv
 14589  1FA9  083D               	movf	??_LTC6804_rdcv,w
 14590  1FAA  07D5               	addwf	LTC6804_rdcv@current_cell_1296,f
 14591  1FAB  3066               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14592  1FAC  0084               	movwf	4
 14593  1FAD  30B1               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 14594  1FAE  0085               	movwf	5
 14595  1FAF  0800               	movf	0,w	;code access
 14596  1FB0  0255               	subwf	LTC6804_rdcv@current_cell_1296,w
 14597  1FB1  1C03               	skipc
 14598  1FB2  2F5F               	goto	l7322
 14599  1FB3                     l7332:	
 14600                           
 14601                           ;ltc6804.c: 361: }
 14602                           ;ltc6804.c: 363: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 14603  1FB3  0857               	movf	LTC6804_rdcv@data_counter,w
 14604  1FB4  3E01               	addlw	1
 14605  1FB5  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14606  1FB6  0086               	movwf	6
 14607  1FB7  0187               	clrf	7
 14608  1FB8  0801               	movf	1,w
 14609  1FB9  00BD               	movwf	??_LTC6804_rdcv
 14610  1FBA  01BE               	clrf	??_LTC6804_rdcv+1
 14611  1FBB  0857               	movf	LTC6804_rdcv@data_counter,w
 14612  1FBC  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14613  1FBD  0086               	movwf	6
 14614  1FBE  0187               	clrf	7
 14615  1FBF  0801               	movf	1,w
 14616  1FC0  00BF               	movwf	??_LTC6804_rdcv+2
 14617  1FC1  01C0               	clrf	??_LTC6804_rdcv+3
 14618  1FC2  083F               	movf	??_LTC6804_rdcv+2,w
 14619  1FC3  00C0               	movwf	??_LTC6804_rdcv+3
 14620  1FC4  01BF               	clrf	??_LTC6804_rdcv+2
 14621  1FC5  083D               	movf	??_LTC6804_rdcv,w
 14622  1FC6  073F               	addwf	??_LTC6804_rdcv+2,w
 14623  1FC7  00CD               	movwf	LTC6804_rdcv@received_pec
 14624  1FC8  083E               	movf	??_LTC6804_rdcv+1,w
 14625  1FC9  3D40               	addwfc	??_LTC6804_rdcv+3,w
 14626  1FCA  00CE               	movwf	LTC6804_rdcv@received_pec+1
 14627                           
 14628                           ;ltc6804.c: 365: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 14629  1FCB  30C2               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14630  1FCC  0084               	movwf	4
 14631  1FCD  30B0               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 14632  1FCE  0085               	movwf	5
 14633  1FCF  0800               	movf	0,w	;code access
 14634  1FD0  00BD               	movwf	??_LTC6804_rdcv
 14635  1FD1  083D               	movf	??_LTC6804_rdcv,w
 14636  1FD2  00F2               	movwf	___bmul@multiplicand
 14637  1FD3  0854               	movf	LTC6804_rdcv@current_ic_1295,w
 14638  1FD4  31AE  264D  319E   	fcall	___bmul
 14639  1FD7  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 14640  1FD8  00F6               	movwf	pec15_calc@data
 14641  1FD9  3000               	movlw	0
 14642  1FDA  00F7               	movwf	pec15_calc@data+1
 14643  1FDB  3067               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14644  1FDC  0084               	movwf	4
 14645  1FDD  30B1               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 14646  1FDE  0085               	movwf	5
 14647  1FDF  0800               	movf	0,w	;code access
 14648  1FE0  31A1  213C  319E   	fcall	_pec15_calc
 14649  1FE3  0877               	movf	?_pec15_calc+1,w
 14650  1FE4  0020               	movlb	0	; select bank0
 14651  1FE5  00D0               	movwf	LTC6804_rdcv@data_pec+1
 14652  1FE6  0876               	movf	?_pec15_calc,w
 14653  1FE7  00CF               	movwf	LTC6804_rdcv@data_pec
 14654                           
 14655                           ;ltc6804.c: 366: if(received_pec != data_pec)
 14656  1FE8  0850               	movf	LTC6804_rdcv@data_pec+1,w
 14657  1FE9  064E               	xorwf	LTC6804_rdcv@received_pec+1,w
 14658  1FEA  1D03               	skipz
 14659  1FEB  2FEE               	goto	u10395
 14660  1FEC  084F               	movf	LTC6804_rdcv@data_pec,w
 14661  1FED  064D               	xorwf	LTC6804_rdcv@received_pec,w
 14662  1FEE                     u10395:	
 14663  1FEE  1903               	skipnz
 14664  1FEF  2FF4               	goto	l7340
 14665                           
 14666                           ;ltc6804.c: 367: {
 14667                           ;ltc6804.c: 368: pec_error = -1;
 14668  1FF0  30FF               	movlw	255
 14669  1FF1  00BD               	movwf	??_LTC6804_rdcv
 14670  1FF2  083D               	movf	??_LTC6804_rdcv,w
 14671  1FF3  00CA               	movwf	LTC6804_rdcv@pec_error
 14672  1FF4                     l7340:	
 14673                           
 14674                           ;ltc6804.c: 370: }
 14675                           ;ltc6804.c: 371: data_counter= data_counter + 2;
 14676  1FF4  0857               	movf	LTC6804_rdcv@data_counter,w
 14677  1FF5  3E02               	addlw	2
 14678  1FF6  00BD               	movwf	??_LTC6804_rdcv
 14679  1FF7  083D               	movf	??_LTC6804_rdcv,w
 14680  1FF8  00D7               	movwf	LTC6804_rdcv@data_counter
 14681  1FF9  3001               	movlw	1
 14682  1FFA  00BD               	movwf	??_LTC6804_rdcv
 14683  1FFB  083D               	movf	??_LTC6804_rdcv,w
 14684  1FFC  07D4               	addwf	LTC6804_rdcv@current_ic_1295,f
 14685  1FFD  2F52               	goto	l585
 14686  1FFE                     l7344:	
 14687                           
 14688                           ;ltc6804.c: 373: }
 14689                           ;ltc6804.c: 374: }
 14690                           ;ltc6804.c: 378: return(pec_error);
 14691  1FFE  084A               	movf	LTC6804_rdcv@pec_error,w
 14692  1FFF  0008               	return
 14693  2000                     __end_of_LTC6804_rdcv:	
 14694                           
 14695                           	psect	text34
 14696  2E96                     __ptext34:	
 14697 ;; *************** function ___wmul *****************
 14698 ;; Defined at:
 14699 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14700 ;; Parameters:    Size  Location     Type
 14701 ;;  multiplier      2    2[COMMON] unsigned int 
 14702 ;;  multiplicand    2    4[COMMON] unsigned int 
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;  product         2    6[COMMON] unsigned int 
 14705 ;; Return value:  Size  Location     Type
 14706 ;;                  2    2[COMMON] unsigned int 
 14707 ;; Registers used:
 14708 ;;		wreg, status,2, status,0
 14709 ;; Tracked objects:
 14710 ;;		On entry : 0/0
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14717 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14718 ;;Total ram usage:        6 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:    2
 14721 ;; This function calls:
 14722 ;;		Nothing
 14723 ;; This function is called by:
 14724 ;;		_LTC6804_rdcv
 14725 ;;		_sprintf
 14726 ;;		_LTC6804_rdaux
 14727 ;;		_LTC6804_rdcfg
 14728 ;; This function uses a non-reentrant model
 14729 ;;
 14730                           
 14731                           
 14732                           ;psect for function ___wmul
 14733  2E96                     ___wmul:	
 14734                           
 14735                           ;incstack = 0
 14736                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14737  2E96  01F6               	clrf	___wmul@product
 14738  2E97  01F7               	clrf	___wmul@product+1
 14739  2E98                     l6638:	
 14740  2E98  1C72               	btfss	___wmul@multiplier,0
 14741  2E99  2E9E               	goto	l947
 14742  2E9A  0874               	movf	___wmul@multiplicand,w
 14743  2E9B  07F6               	addwf	___wmul@product,f
 14744  2E9C  0875               	movf	___wmul@multiplicand+1,w
 14745  2E9D  3DF7               	addwfc	___wmul@product+1,f
 14746  2E9E                     l947:	
 14747  2E9E  3001               	movlw	1
 14748  2E9F                     u9025:	
 14749  2E9F  35F4               	lslf	___wmul@multiplicand,f
 14750  2EA0  0DF5               	rlf	___wmul@multiplicand+1,f
 14751  2EA1  0B89               	decfsz	9,f
 14752  2EA2  2E9F               	goto	u9025
 14753  2EA3  3001               	movlw	1
 14754  2EA4                     u9035:	
 14755  2EA4  36F3               	lsrf	___wmul@multiplier+1,f
 14756  2EA5  0CF2               	rrf	___wmul@multiplier,f
 14757  2EA6  0B89               	decfsz	9,f
 14758  2EA7  2EA4               	goto	u9035
 14759  2EA8  0872               	movf	___wmul@multiplier,w
 14760  2EA9  0473               	iorwf	___wmul@multiplier+1,w
 14761  2EAA  1D03               	btfss	3,2
 14762  2EAB  2E98               	goto	l6638
 14763  2EAC  0877               	movf	___wmul@product+1,w
 14764  2EAD  00F3               	movwf	?___wmul+1
 14765  2EAE  0876               	movf	___wmul@product,w
 14766  2EAF  00F2               	movwf	?___wmul
 14767  2EB0  0008               	return
 14768  2EB1                     __end_of___wmul:	
 14769                           
 14770                           	psect	text35
 14771  22D6                     __ptext35:	
 14772 ;; *************** function _LTC6804_rdcv_reg *****************
 14773 ;; Defined at:
 14774 ;;		line 428 in file "ltc6804.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  reg             1    wreg     unsigned char 
 14777 ;;  total_ic        1   15[BANK0 ] unsigned char 
 14778 ;;  data            1   16[BANK0 ] PTR unsigned char 
 14779 ;;		 -> LTC6804_rdcv@cell_data(8), 
 14780 ;; Auto vars:     Size  Location     Type
 14781 ;;  reg             1   26[BANK0 ] unsigned char 
 14782 ;;  cmd             4   22[BANK0 ] unsigned char [4]
 14783 ;;  cmd_pec         2   20[BANK0 ] int 
 14784 ;; Return value:  Size  Location     Type
 14785 ;;                  1    wreg      void 
 14786 ;; Registers used:
 14787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14788 ;; Tracked objects:
 14789 ;;		On entry : 0/0
 14790 ;;		On exit  : 0/0
 14791 ;;		Unchanged: 0/0
 14792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14793 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14794 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14795 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14796 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14797 ;;Total ram usage:       12 bytes
 14798 ;; Hardware stack levels used:    1
 14799 ;; Hardware stack levels required when called:    4
 14800 ;; This function calls:
 14801 ;;		___bmul
 14802 ;;		_pec15_calc
 14803 ;;		_spi_write_read
 14804 ;;		_wakeup_idle
 14805 ;; This function is called by:
 14806 ;;		_LTC6804_rdcv
 14807 ;; This function uses a non-reentrant model
 14808 ;;
 14809                           
 14810                           
 14811                           ;psect for function _LTC6804_rdcv_reg
 14812  22D6                     _LTC6804_rdcv_reg:	
 14813                           
 14814                           ;incstack = 0
 14815                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14816                           ;LTC6804_rdcv_reg@reg stored from wreg
 14817  22D6  0020               	movlb	0	; select bank0
 14818  22D7  00BA               	movwf	LTC6804_rdcv_reg@reg
 14819                           
 14820                           ;ltc6804.c: 433: const char REG_LEN = 8;
 14821                           ;ltc6804.c: 434: char cmd[4];
 14822                           ;ltc6804.c: 435: int cmd_pec;
 14823                           ;ltc6804.c: 438: if (reg == 1)
 14824  22D8  033A               	decf	LTC6804_rdcv_reg@reg,w
 14825  22D9  1D03               	btfss	3,2
 14826  22DA  2ADD               	goto	l7146
 14827                           
 14828                           ;ltc6804.c: 439: {
 14829                           ;ltc6804.c: 440: cmd[1] = 0x04;
 14830  22DB  3004               	movlw	4
 14831  22DC  2AEE               	goto	L13
 14832  22DD                     l7146:	
 14833                           ;ltc6804.c: 442: }
 14834                           
 14835                           ;ltc6804.c: 441: cmd[0] = 0x00;
 14836                           
 14837                           
 14838                           ;ltc6804.c: 443: else if(reg == 2)
 14839  22DD  3002               	movlw	2
 14840  22DE  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 14841  22DF  1D03               	btfss	3,2
 14842  22E0  2AE3               	goto	l7152
 14843                           
 14844                           ;ltc6804.c: 444: {
 14845                           ;ltc6804.c: 445: cmd[1] = 0x06;
 14846  22E1  3006               	movlw	6
 14847  22E2  2AEE               	goto	L13
 14848  22E3                     l7152:	
 14849                           ;ltc6804.c: 447: }
 14850                           
 14851                           ;ltc6804.c: 446: cmd[0] = 0x00;
 14852                           
 14853                           
 14854                           ;ltc6804.c: 448: else if(reg == 3)
 14855  22E3  3003               	movlw	3
 14856  22E4  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 14857  22E5  1D03               	btfss	3,2
 14858  22E6  2AE9               	goto	l7158
 14859                           
 14860                           ;ltc6804.c: 449: {
 14861                           ;ltc6804.c: 450: cmd[1] = 0x08;
 14862  22E7  3008               	movlw	8
 14863  22E8  2AEE               	goto	L13
 14864  22E9                     l7158:	
 14865                           ;ltc6804.c: 452: }
 14866                           
 14867                           ;ltc6804.c: 451: cmd[0] = 0x00;
 14868                           
 14869                           
 14870                           ;ltc6804.c: 453: else if(reg == 4)
 14871  22E9  3004               	movlw	4
 14872  22EA  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 14873  22EB  1D03               	btfss	3,2
 14874  22EC  2AF2               	goto	l7164
 14875                           
 14876                           ;ltc6804.c: 454: {
 14877                           ;ltc6804.c: 455: cmd[1] = 0x0A;
 14878  22ED  300A               	movlw	10
 14879  22EE                     L13:	
 14880  22EE  00B1               	movwf	??_LTC6804_rdcv_reg
 14881  22EF  0831               	movf	??_LTC6804_rdcv_reg,w
 14882  22F0  00B7               	movwf	LTC6804_rdcv_reg@cmd+1
 14883                           
 14884                           ;ltc6804.c: 456: cmd[0] = 0x00;
 14885  22F1  01B6               	clrf	LTC6804_rdcv_reg@cmd
 14886  22F2                     l7164:	
 14887                           
 14888                           ;ltc6804.c: 457: }
 14889                           ;ltc6804.c: 460: cmd_pec = pec15_calc(2, cmd);
 14890  22F2  3036               	movlw	low LTC6804_rdcv_reg@cmd
 14891  22F3  00F6               	movwf	pec15_calc@data
 14892  22F4  3000               	movlw	high LTC6804_rdcv_reg@cmd
 14893  22F5  00F7               	movwf	pec15_calc@data+1
 14894  22F6  3002               	movlw	2
 14895  22F7  31A1  213C  31A2   	fcall	_pec15_calc
 14896  22FA  0877               	movf	?_pec15_calc+1,w
 14897  22FB  0020               	movlb	0	; select bank0
 14898  22FC  00B5               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 14899  22FD  0876               	movf	?_pec15_calc,w
 14900  22FE  00B4               	movwf	LTC6804_rdcv_reg@cmd_pec
 14901                           
 14902                           ;ltc6804.c: 461: cmd[2] = (char)(cmd_pec >> 8);
 14903  22FF  0835               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 14904  2300  00B1               	movwf	??_LTC6804_rdcv_reg
 14905  2301  0831               	movf	??_LTC6804_rdcv_reg,w
 14906  2302  00B8               	movwf	LTC6804_rdcv_reg@cmd+2
 14907                           
 14908                           ;ltc6804.c: 462: cmd[3] = (char)(cmd_pec);
 14909  2303  0834               	movf	LTC6804_rdcv_reg@cmd_pec,w
 14910  2304  00B1               	movwf	??_LTC6804_rdcv_reg
 14911  2305  0831               	movf	??_LTC6804_rdcv_reg,w
 14912  2306  00B9               	movwf	LTC6804_rdcv_reg@cmd+3
 14913                           
 14914                           ;ltc6804.c: 465: wakeup_idle ();
 14915  2307  31AE  2615  31A2   	fcall	_wakeup_idle
 14916                           
 14917                           ;ltc6804.c: 468: LATDbits.LATD3 = 0;
 14918  230A  0022               	movlb	2	; select bank2
 14919  230B  118F               	bcf	15,3	;volatile
 14920                           
 14921                           ;ltc6804.c: 469: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 14922  230C  3004               	movlw	4
 14923  230D  0020               	movlb	0	; select bank0
 14924  230E  00B1               	movwf	??_LTC6804_rdcv_reg
 14925  230F  0831               	movf	??_LTC6804_rdcv_reg,w
 14926  2310  00F6               	movwf	spi_write_read@tx_len
 14927  2311  0830               	movf	LTC6804_rdcv_reg@data,w
 14928  2312  00F7               	movwf	spi_write_read@rx_data
 14929  2313  3000               	movlw	0
 14930  2314  00F8               	movwf	spi_write_read@rx_data+1
 14931  2315  082F               	movf	LTC6804_rdcv_reg@total_ic,w
 14932  2316  00B2               	movwf	??_LTC6804_rdcv_reg+1
 14933  2317  0832               	movf	??_LTC6804_rdcv_reg+1,w
 14934  2318  00F2               	movwf	___bmul@multiplicand
 14935  2319  3065               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 14936  231A  0084               	movwf	4
 14937  231B  30B1               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 14938  231C  0085               	movwf	5
 14939  231D  0800               	movf	0,w	;code access
 14940  231E  31AE  264D  31A2   	fcall	___bmul
 14941  2321  0020               	movlb	0	; select bank0
 14942  2322  00B3               	movwf	??_LTC6804_rdcv_reg+2
 14943  2323  0833               	movf	??_LTC6804_rdcv_reg+2,w
 14944  2324  00F9               	movwf	spi_write_read@rx_len
 14945  2325  3036               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 14946  2326  31AF  2754         	fcall	_spi_write_read
 14947                           
 14948                           ;ltc6804.c: 470: LATDbits.LATD3 = 1;
 14949  2328  0022               	movlb	2	; select bank2
 14950  2329  158F               	bsf	15,3	;volatile
 14951  232A  0008               	return
 14952  232B                     __end_of_LTC6804_rdcv_reg:	
 14953                           
 14954                           	psect	text36
 14955  2F54                     __ptext36:	
 14956 ;; *************** function _spi_write_read *****************
 14957 ;; Defined at:
 14958 ;;		line 1041 in file "ltc6804.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;  tx_Data         1    wreg     PTR unsigned char 
 14961 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 14962 ;;		 -> LTC6804_rdcv_reg@cmd(4), 
 14963 ;;  tx_len          1    6[COMMON] unsigned char 
 14964 ;;  rx_data         2    7[COMMON] PTR unsigned char 
 14965 ;;		 -> RAM(4096), LTC6804_rdcv@cell_data(8), NULL(0), 
 14966 ;;  rx_len          1    9[COMMON] unsigned char 
 14967 ;; Auto vars:     Size  Location     Type
 14968 ;;  tx_Data         1    7[BANK0 ] PTR unsigned char 
 14969 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 14970 ;;		 -> LTC6804_rdcv_reg@cmd(4), 
 14971 ;;  i               1    6[BANK0 ] unsigned char 
 14972 ;;  i               1    5[BANK0 ] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      void 
 14975 ;; Registers used:
 14976 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14983 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14984 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14985 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14986 ;;Total ram usage:       12 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; Hardware stack levels required when called:    3
 14989 ;; This function calls:
 14990 ;;		_spi_read
 14991 ;;		_spi_write
 14992 ;; This function is called by:
 14993 ;;		_LTC6804_rdcv_reg
 14994 ;;		_LTC6804_rdaux_reg
 14995 ;;		_LTC6804_clrcell
 14996 ;;		_LTC6804_clraux
 14997 ;;		_LTC6804_rdcfg
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           
 15002                           ;psect for function _spi_write_read
 15003  2F54                     _spi_write_read:	
 15004                           
 15005                           ;incstack = 0
 15006                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15007                           ;spi_write_read@tx_Data stored from wreg
 15008  2F54  0020               	movlb	0	; select bank0
 15009  2F55  00A7               	movwf	spi_write_read@tx_Data
 15010                           
 15011                           ;ltc6804.c: 1047: for(char i = 0; i < tx_len; i++)
 15012  2F56  01A5               	clrf	spi_write_read@i
 15013  2F57                     l4184:	
 15014  2F57  0876               	movf	spi_write_read@tx_len,w
 15015  2F58  0225               	subwf	spi_write_read@i,w
 15016  2F59  1803               	btfsc	3,0
 15017  2F5A  2F6B               	goto	l4186
 15018                           
 15019                           ;ltc6804.c: 1048: {
 15020                           ;ltc6804.c: 1049: spi_write(tx_Data[i]);
 15021  2F5B  0825               	movf	spi_write_read@i,w
 15022  2F5C  0727               	addwf	spi_write_read@tx_Data,w
 15023  2F5D  00A0               	movwf	??_spi_write_read
 15024  2F5E  0820               	movf	??_spi_write_read,w
 15025  2F5F  0086               	movwf	6
 15026  2F60  0187               	clrf	7
 15027  2F61  0801               	movf	1,w
 15028  2F62  31AE  2628  31AF   	fcall	_spi_write
 15029  2F65  3001               	movlw	1
 15030  2F66  0020               	movlb	0	; select bank0
 15031  2F67  00A0               	movwf	??_spi_write_read
 15032  2F68  0820               	movf	??_spi_write_read,w
 15033  2F69  07A5               	addwf	spi_write_read@i,f
 15034  2F6A  2F57               	goto	l4184
 15035  2F6B                     l4186:	
 15036                           
 15037                           ;ltc6804.c: 1051: }
 15038                           ;ltc6804.c: 1053: for(char i = 0; i < rx_len; i++)
 15039  2F6B  01A6               	clrf	spi_write_read@i_1378
 15040  2F6C                     l4192:	
 15041  2F6C  0879               	movf	spi_write_read@rx_len,w
 15042  2F6D  0226               	subwf	spi_write_read@i_1378,w
 15043  2F6E  1803               	btfsc	3,0
 15044  2F6F  0008               	return
 15045                           
 15046                           ;ltc6804.c: 1054: {
 15047                           ;ltc6804.c: 1055: rx_data[i] = (char)spi_read(0xFF);
 15048  2F70  30FF               	movlw	255
 15049  2F71  31AE  2633  31AF   	fcall	_spi_read
 15050  2F74  0020               	movlb	0	; select bank0
 15051  2F75  00A0               	movwf	??_spi_write_read
 15052  2F76  0826               	movf	spi_write_read@i_1378,w
 15053  2F77  00A1               	movwf	??_spi_write_read+1
 15054  2F78  01A2               	clrf	??_spi_write_read+2
 15055  2F79  0821               	movf	??_spi_write_read+1,w
 15056  2F7A  0777               	addwf	spi_write_read@rx_data,w
 15057  2F7B  00A3               	movwf	??_spi_write_read+3
 15058  2F7C  0822               	movf	??_spi_write_read+2,w
 15059  2F7D  3D78               	addwfc	spi_write_read@rx_data+1,w
 15060  2F7E  00A4               	movwf	??_spi_write_read+4
 15061  2F7F  0823               	movf	??_spi_write_read+3,w
 15062  2F80  0086               	movwf	6
 15063  2F81  0824               	movf	??_spi_write_read+4,w
 15064  2F82  0087               	movwf	7
 15065  2F83  0820               	movf	??_spi_write_read,w
 15066  2F84  0081               	movwf	1
 15067  2F85  3001               	movlw	1
 15068  2F86  00A0               	movwf	??_spi_write_read
 15069  2F87  0820               	movf	??_spi_write_read,w
 15070  2F88  07A6               	addwf	spi_write_read@i_1378,f
 15071  2F89  2F6C               	goto	l4192
 15072  2F8A                     __end_of_spi_write_read:	
 15073                           
 15074                           	psect	text37
 15075  2E33                     __ptext37:	
 15076 ;; *************** function _spi_read *****************
 15077 ;; Defined at:
 15078 ;;		line 42 in file "spi.c"
 15079 ;; Parameters:    Size  Location     Type
 15080 ;;  data            1    wreg     unsigned char 
 15081 ;; Auto vars:     Size  Location     Type
 15082 ;;  data            1    3[COMMON] unsigned char 
 15083 ;;  readData        1    4[COMMON] unsigned char 
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  1    wreg      unsigned char 
 15086 ;; Registers used:
 15087 ;;		wreg
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15096 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15097 ;;Total ram usage:        3 bytes
 15098 ;; Hardware stack levels used:    1
 15099 ;; Hardware stack levels required when called:    2
 15100 ;; This function calls:
 15101 ;;		Nothing
 15102 ;; This function is called by:
 15103 ;;		_spi_write_read
 15104 ;; This function uses a non-reentrant model
 15105 ;;
 15106                           
 15107                           
 15108                           ;psect for function _spi_read
 15109  2E33                     _spi_read:	
 15110                           
 15111                           ;incstack = 0
 15112                           ; Regs used in _spi_read: [wreg]
 15113                           ;spi_read@data stored from wreg
 15114  2E33  00F3               	movwf	spi_read@data
 15115                           
 15116                           ;spi.c: 43: SSP1BUF = data;
 15117  2E34  0873               	movf	spi_read@data,w
 15118  2E35  0024               	movlb	4	; select bank4
 15119  2E36  0091               	movwf	17	;volatile
 15120  2E37                     l720:	
 15121                           ;spi.c: 44: while(SSP1STATbits.BF == 0);
 15122                           
 15123  2E37  1C14               	btfss	20,0	;volatile
 15124  2E38  2E37               	goto	l720
 15125                           
 15126                           ;spi.c: 45: char readData = SSP1BUF;
 15127  2E39  0811               	movf	17,w	;volatile
 15128  2E3A  00F2               	movwf	??_spi_read
 15129  2E3B  0872               	movf	??_spi_read,w
 15130  2E3C  00F4               	movwf	spi_read@readData
 15131                           
 15132                           ;spi.c: 46: return readData;
 15133  2E3D  0874               	movf	spi_read@readData,w
 15134  2E3E  0008               	return
 15135  2E3F                     __end_of_spi_read:	
 15136                           
 15137                           	psect	text38
 15138  2E4D                     __ptext38:	
 15139 ;; *************** function ___bmul *****************
 15140 ;; Defined at:
 15141 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  multiplier      1    wreg     unsigned char 
 15144 ;;  multiplicand    1    2[COMMON] unsigned char 
 15145 ;; Auto vars:     Size  Location     Type
 15146 ;;  multiplier      1    5[COMMON] unsigned char 
 15147 ;;  product         1    4[COMMON] unsigned char 
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      unsigned char 
 15150 ;; Registers used:
 15151 ;;		wreg, status,2, status,0
 15152 ;; Tracked objects:
 15153 ;;		On entry : 0/0
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15157 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15158 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15159 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15160 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15161 ;;Total ram usage:        4 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:    2
 15164 ;; This function calls:
 15165 ;;		Nothing
 15166 ;; This function is called by:
 15167 ;;		_LTC6804_rdcv
 15168 ;;		_LTC6804_rdcv_reg
 15169 ;;		_LTC6804_rdaux
 15170 ;;		_LTC6804_rdaux_reg
 15171 ;;		_LTC6804_wrcfg
 15172 ;;		_LTC6804_rdcfg
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           
 15177                           ;psect for function ___bmul
 15178  2E4D                     ___bmul:	
 15179                           
 15180                           ;incstack = 0
 15181                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 15182                           ;___bmul@multiplier stored from wreg
 15183  2E4D  00F5               	movwf	___bmul@multiplier
 15184  2E4E  01F4               	clrf	___bmul@product
 15185  2E4F                     l4388:	
 15186  2E4F  1C75               	btfss	___bmul@multiplier,0
 15187  2E50  2E55               	goto	l4392
 15188  2E51  0872               	movf	___bmul@multiplicand,w
 15189  2E52  00F3               	movwf	??___bmul
 15190  2E53  0873               	movf	??___bmul,w
 15191  2E54  07F4               	addwf	___bmul@product,f
 15192  2E55                     l4392:	
 15193  2E55  1003               	clrc
 15194  2E56  0DF2               	rlf	___bmul@multiplicand,f
 15195  2E57  1003               	clrc
 15196  2E58  0CF5               	rrf	___bmul@multiplier,f
 15197  2E59  0875               	movf	___bmul@multiplier,w
 15198  2E5A  1D03               	btfss	3,2
 15199  2E5B  2E4F               	goto	l4388
 15200  2E5C  0874               	movf	___bmul@product,w
 15201  2E5D  0008               	return
 15202  2E5E                     __end_of___bmul:	
 15203                           
 15204                           	psect	text39
 15205  2001                     __ptext39:	
 15206 ;; *************** function _LTC6804_adcv *****************
 15207 ;; Defined at:
 15208 ;;		line 176 in file "ltc6804.c"
 15209 ;; Parameters:    Size  Location     Type
 15210 ;;		None
 15211 ;; Auto vars:     Size  Location     Type
 15212 ;;  cmd             4   15[BANK0 ] unsigned char [4]
 15213 ;;  cmd_pec         2   19[BANK0 ] int 
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  1    wreg      void 
 15216 ;; Registers used:
 15217 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15224 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15226 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15227 ;;Total ram usage:        7 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:    4
 15230 ;; This function calls:
 15231 ;;		_pec15_calc
 15232 ;;		_spi_write_array
 15233 ;;		_wakeup_idle
 15234 ;; This function is called by:
 15235 ;;		_measureVoltages
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           
 15240                           ;psect for function _LTC6804_adcv
 15241  2001                     _LTC6804_adcv:	
 15242                           
 15243                           ;ltc6804.c: 179: char cmd[4];
 15244                           ;ltc6804.c: 180: int cmd_pec;
 15245                           ;ltc6804.c: 183: cmd[0] = ADCV[0];
 15246                           
 15247                           ;incstack = 0
 15248                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15249  2001  0022               	movlb	2	; select bank2
 15250  2002  086D               	movf	_ADCV^(0+256),w
 15251  2003  00F9               	movwf	??_LTC6804_adcv
 15252  2004  0879               	movf	??_LTC6804_adcv,w
 15253  2005  0020               	movlb	0	; select bank0
 15254  2006  00AF               	movwf	LTC6804_adcv@cmd
 15255                           
 15256                           ;ltc6804.c: 184: cmd[1] = ADCV[1];
 15257  2007  0022               	movlb	2	; select bank2
 15258  2008  086E               	movf	(_ADCV^(0+256)+1),w
 15259  2009  00F9               	movwf	??_LTC6804_adcv
 15260  200A  0879               	movf	??_LTC6804_adcv,w
 15261  200B  0020               	movlb	0	; select bank0
 15262  200C  00B0               	movwf	LTC6804_adcv@cmd+1
 15263                           
 15264                           ;ltc6804.c: 187: cmd_pec = pec15_calc(2, ADCV);
 15265  200D  306D               	movlw	low _ADCV
 15266  200E  00F6               	movwf	pec15_calc@data
 15267  200F  3001               	movlw	high _ADCV
 15268  2010  00F7               	movwf	pec15_calc@data+1
 15269  2011  3002               	movlw	2
 15270  2012  31A1  213C  31A0   	fcall	_pec15_calc
 15271  2015  0877               	movf	?_pec15_calc+1,w
 15272  2016  0020               	movlb	0	; select bank0
 15273  2017  00B4               	movwf	LTC6804_adcv@cmd_pec+1
 15274  2018  0876               	movf	?_pec15_calc,w
 15275  2019  00B3               	movwf	LTC6804_adcv@cmd_pec
 15276                           
 15277                           ;ltc6804.c: 188: cmd[2] = (char)(cmd_pec >> 8);
 15278  201A  0834               	movf	LTC6804_adcv@cmd_pec+1,w
 15279  201B  00F9               	movwf	??_LTC6804_adcv
 15280  201C  0879               	movf	??_LTC6804_adcv,w
 15281  201D  00B1               	movwf	LTC6804_adcv@cmd+2
 15282                           
 15283                           ;ltc6804.c: 189: cmd[3] = (char)(cmd_pec);
 15284  201E  0833               	movf	LTC6804_adcv@cmd_pec,w
 15285  201F  00F9               	movwf	??_LTC6804_adcv
 15286  2020  0879               	movf	??_LTC6804_adcv,w
 15287  2021  00B2               	movwf	LTC6804_adcv@cmd+3
 15288                           
 15289                           ;ltc6804.c: 192: wakeup_idle ();
 15290  2022  31AE  2615  31A0   	fcall	_wakeup_idle
 15291                           
 15292                           ;ltc6804.c: 195: LATDbits.LATD3 = 0;
 15293  2025  0022               	movlb	2	; select bank2
 15294  2026  118F               	bcf	15,3	;volatile
 15295                           
 15296                           ;ltc6804.c: 196: spi_write_array(4,cmd);
 15297  2027  302F               	movlw	(low (LTC6804_adcv@cmd| 0))& (0+255)
 15298  2028  00F9               	movwf	??_LTC6804_adcv
 15299  2029  0879               	movf	??_LTC6804_adcv,w
 15300  202A  00F5               	movwf	spi_write_array@data
 15301  202B  3004               	movlw	4
 15302  202C  31AE  2681         	fcall	_spi_write_array
 15303                           
 15304                           ;ltc6804.c: 197: LATDbits.LATD3 = 1;
 15305  202E  0022               	movlb	2	; select bank2
 15306  202F  158F               	bsf	15,3	;volatile
 15307  2030  0008               	return
 15308  2031                     __end_of_LTC6804_adcv:	
 15309                           
 15310                           	psect	text40
 15311  2E15                     __ptext40:	
 15312 ;; *************** function _wakeup_idle *****************
 15313 ;; Defined at:
 15314 ;;		line 970 in file "ltc6804.c"
 15315 ;; Parameters:    Size  Location     Type
 15316 ;;		None
 15317 ;; Auto vars:     Size  Location     Type
 15318 ;;		None
 15319 ;; Return value:  Size  Location     Type
 15320 ;;                  1    wreg      void 
 15321 ;; Registers used:
 15322 ;;		wreg
 15323 ;; Tracked objects:
 15324 ;;		On entry : 0/0
 15325 ;;		On exit  : 0/0
 15326 ;;		Unchanged: 0/0
 15327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15332 ;;Total ram usage:        0 bytes
 15333 ;; Hardware stack levels used:    1
 15334 ;; Hardware stack levels required when called:    2
 15335 ;; This function calls:
 15336 ;;		Nothing
 15337 ;; This function is called by:
 15338 ;;		_LTC6804_adcv
 15339 ;;		_LTC6804_rdcv_reg
 15340 ;;		_LTC6804_adax
 15341 ;;		_LTC6804_rdaux_reg
 15342 ;;		_LTC6804_clrcell
 15343 ;;		_LTC6804_clraux
 15344 ;;		_LTC6804_wrcfg
 15345 ;;		_LTC6804_rdcfg
 15346 ;; This function uses a non-reentrant model
 15347 ;;
 15348                           
 15349                           
 15350                           ;psect for function _wakeup_idle
 15351  2E15                     _wakeup_idle:	
 15352                           
 15353                           ;ltc6804.c: 972: LATDbits.LATD3 = 0;
 15354                           
 15355                           ;incstack = 0
 15356                           ; Regs used in _wakeup_idle: [wreg]
 15357  2E15  0022               	movlb	2	; select bank2
 15358  2E16  118F               	bcf	15,3	;volatile
 15359                           
 15360                           ;ltc6804.c: 973: _delay((unsigned long)((2)*(32000000/4000000.0)));
 15361  2E17  3005               	movlw	5
 15362  2E18                     u10867:	
 15363  2E18  0B89               	decfsz	9,f
 15364  2E19  2E18               	goto	u10867
 15365  2E1A  0000               	nop
 15366                           
 15367                           ;ltc6804.c: 974: LATDbits.LATD3 = 1;
 15368  2E1B  0022               	movlb	2	; select bank2
 15369  2E1C  158F               	bsf	15,3	;volatile
 15370  2E1D  0008               	return
 15371  2E1E                     __end_of_wakeup_idle:	
 15372                           
 15373                           	psect	text41
 15374  2E81                     __ptext41:	
 15375 ;; *************** function _spi_write_array *****************
 15376 ;; Defined at:
 15377 ;;		line 1021 in file "ltc6804.c"
 15378 ;; Parameters:    Size  Location     Type
 15379 ;;  len             1    wreg     unsigned char 
 15380 ;;  data            1    5[COMMON] PTR unsigned char 
 15381 ;;		 -> LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), 
 15382 ;; Auto vars:     Size  Location     Type
 15383 ;;  len             1    7[COMMON] unsigned char 
 15384 ;;  i               1    8[COMMON] unsigned char 
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15389 ;; Tracked objects:
 15390 ;;		On entry : 0/0
 15391 ;;		On exit  : 0/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15394 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15397 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15398 ;;Total ram usage:        4 bytes
 15399 ;; Hardware stack levels used:    1
 15400 ;; Hardware stack levels required when called:    3
 15401 ;; This function calls:
 15402 ;;		_spi_write
 15403 ;; This function is called by:
 15404 ;;		_LTC6804_adcv
 15405 ;;		_LTC6804_adax
 15406 ;;		_LTC6804_wrcfg
 15407 ;; This function uses a non-reentrant model
 15408 ;;
 15409                           
 15410                           
 15411                           ;psect for function _spi_write_array
 15412  2E81                     _spi_write_array:	
 15413                           
 15414                           ;incstack = 0
 15415                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15416                           ;spi_write_array@len stored from wreg
 15417  2E81  00F7               	movwf	spi_write_array@len
 15418                           
 15419                           ;ltc6804.c: 1025: for(char i = 0; i < len; i++)
 15420  2E82  01F8               	clrf	spi_write_array@i
 15421  2E83                     l4906:	
 15422  2E83  0877               	movf	spi_write_array@len,w
 15423  2E84  0278               	subwf	spi_write_array@i,w
 15424  2E85  1803               	btfsc	3,0
 15425  2E86  0008               	return
 15426                           
 15427                           ;ltc6804.c: 1026: {
 15428                           ;ltc6804.c: 1027: spi_write((char)data[i]);
 15429  2E87  0878               	movf	spi_write_array@i,w
 15430  2E88  0775               	addwf	spi_write_array@data,w
 15431  2E89  00F6               	movwf	??_spi_write_array
 15432  2E8A  0876               	movf	??_spi_write_array,w
 15433  2E8B  0086               	movwf	6
 15434  2E8C  0187               	clrf	7
 15435  2E8D  0801               	movf	1,w
 15436  2E8E  31AE  2628  31AE   	fcall	_spi_write
 15437  2E91  3001               	movlw	1
 15438  2E92  00F6               	movwf	??_spi_write_array
 15439  2E93  0876               	movf	??_spi_write_array,w
 15440  2E94  07F8               	addwf	spi_write_array@i,f
 15441  2E95  2E83               	goto	l4906
 15442  2E96                     __end_of_spi_write_array:	
 15443                           
 15444                           	psect	text42
 15445  2E28                     __ptext42:	
 15446 ;; *************** function _spi_write *****************
 15447 ;; Defined at:
 15448 ;;		line 36 in file "spi.c"
 15449 ;; Parameters:    Size  Location     Type
 15450 ;;  data            1    wreg     unsigned char 
 15451 ;; Auto vars:     Size  Location     Type
 15452 ;;  data            1    4[COMMON] unsigned char 
 15453 ;;  readData        1    3[COMMON] unsigned char 
 15454 ;; Return value:  Size  Location     Type
 15455 ;;                  1    wreg      void 
 15456 ;; Registers used:
 15457 ;;		wreg
 15458 ;; Tracked objects:
 15459 ;;		On entry : 0/0
 15460 ;;		On exit  : 0/0
 15461 ;;		Unchanged: 0/0
 15462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15465 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15466 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15467 ;;Total ram usage:        3 bytes
 15468 ;; Hardware stack levels used:    1
 15469 ;; Hardware stack levels required when called:    2
 15470 ;; This function calls:
 15471 ;;		Nothing
 15472 ;; This function is called by:
 15473 ;;		_spi_write_array
 15474 ;;		_spi_write_read
 15475 ;; This function uses a non-reentrant model
 15476 ;;
 15477                           
 15478                           
 15479                           ;psect for function _spi_write
 15480  2E28                     _spi_write:	
 15481                           
 15482                           ;incstack = 0
 15483                           ; Regs used in _spi_write: [wreg]
 15484                           ;spi_write@data stored from wreg
 15485  2E28  00F4               	movwf	spi_write@data
 15486                           
 15487                           ;spi.c: 37: SSP1BUF = data;
 15488  2E29  0874               	movf	spi_write@data,w
 15489  2E2A  0024               	movlb	4	; select bank4
 15490  2E2B  0091               	movwf	17	;volatile
 15491  2E2C                     l714:	
 15492                           ;spi.c: 38: while(SSP1STATbits.BF == 0);
 15493                           
 15494  2E2C  1C14               	btfss	20,0	;volatile
 15495  2E2D  2E2C               	goto	l714
 15496                           
 15497                           ;spi.c: 39: char readData = SSP1BUF;
 15498  2E2E  0811               	movf	17,w	;volatile
 15499  2E2F  00F2               	movwf	??_spi_write
 15500  2E30  0872               	movf	??_spi_write,w
 15501  2E31  00F3               	movwf	spi_write@readData
 15502  2E32  0008               	return
 15503  2E33                     __end_of_spi_write:	
 15504                           
 15505                           	psect	text43
 15506  213C                     __ptext43:	
 15507 ;; *************** function _pec15_calc *****************
 15508 ;; Defined at:
 15509 ;;		line 998 in file "ltc6804.c"
 15510 ;; Parameters:    Size  Location     Type
 15511 ;;  len             1    wreg     unsigned char 
 15512 ;;  data            2    6[COMMON] PTR unsigned char 
 15513 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), RAM(4096), 
 15514 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), 
 15515 ;; Auto vars:     Size  Location     Type
 15516 ;;  len             1   11[BANK0 ] unsigned char 
 15517 ;;  i               1   12[BANK0 ] unsigned char 
 15518 ;;  remainder       2   13[BANK0 ] int 
 15519 ;;  addr            2    9[BANK0 ] int 
 15520 ;; Return value:  Size  Location     Type
 15521 ;;                  2    6[COMMON] int 
 15522 ;; Registers used:
 15523 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 15524 ;; Tracked objects:
 15525 ;;		On entry : 0/0
 15526 ;;		On exit  : 0/0
 15527 ;;		Unchanged: 0/0
 15528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15530 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15531 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15532 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15533 ;;Total ram usage:       17 bytes
 15534 ;; Hardware stack levels used:    1
 15535 ;; Hardware stack levels required when called:    2
 15536 ;; This function calls:
 15537 ;;		Nothing
 15538 ;; This function is called by:
 15539 ;;		_LTC6804_adcv
 15540 ;;		_LTC6804_rdcv
 15541 ;;		_LTC6804_rdcv_reg
 15542 ;;		_LTC6804_adax
 15543 ;;		_LTC6804_rdaux
 15544 ;;		_LTC6804_rdaux_reg
 15545 ;;		_LTC6804_clrcell
 15546 ;;		_LTC6804_clraux
 15547 ;;		_LTC6804_wrcfg
 15548 ;;		_LTC6804_rdcfg
 15549 ;; This function uses a non-reentrant model
 15550 ;;
 15551                           
 15552                           
 15553                           ;psect for function _pec15_calc
 15554  213C                     _pec15_calc:	
 15555                           
 15556                           ;incstack = 0
 15557                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 15558                           ;pec15_calc@len stored from wreg
 15559  213C  0020               	movlb	0	; select bank0
 15560  213D  00AB               	movwf	pec15_calc@len
 15561                           
 15562                           ;ltc6804.c: 1002: int remainder,addr;
 15563                           ;ltc6804.c: 1004: remainder = 16;
 15564  213E  3010               	movlw	16
 15565  213F  00AD               	movwf	pec15_calc@remainder
 15566  2140  3000               	movlw	0
 15567  2141  00AE               	movwf	pec15_calc@remainder+1
 15568                           
 15569                           ;ltc6804.c: 1005: for(char i = 0; i<len;i++)
 15570  2142  01AC               	clrf	pec15_calc@i
 15571  2143                     l4166:	
 15572  2143  082B               	movf	pec15_calc@len,w
 15573  2144  022C               	subwf	pec15_calc@i,w
 15574  2145  1803               	btfsc	3,0
 15575  2146  2986               	goto	l4168
 15576                           
 15577                           ;ltc6804.c: 1006: {
 15578                           ;ltc6804.c: 1007: addr = ((remainder>>7)^data[i])&0xff;
 15579  2147  082C               	movf	pec15_calc@i,w
 15580  2148  00A0               	movwf	??_pec15_calc
 15581  2149  01A1               	clrf	??_pec15_calc+1
 15582  214A  0820               	movf	??_pec15_calc,w
 15583  214B  0776               	addwf	pec15_calc@data,w
 15584  214C  0086               	movwf	6
 15585  214D  0821               	movf	??_pec15_calc+1,w
 15586  214E  3D77               	addwfc	pec15_calc@data+1,w
 15587  214F  0087               	movwf	7
 15588  2150  0801               	movf	1,w
 15589  2151  00A2               	movwf	??_pec15_calc+2
 15590  2152  01A3               	clrf	??_pec15_calc+3
 15591  2153  082E               	movf	pec15_calc@remainder+1,w
 15592  2154  00A5               	movwf	??_pec15_calc+5
 15593  2155  082D               	movf	pec15_calc@remainder,w
 15594  2156  00A4               	movwf	??_pec15_calc+4
 15595  2157  3007               	movlw	7
 15596  2158  00A6               	movwf	??_pec15_calc+6
 15597  2159                     u4815:	
 15598  2159  0D25               	rlf	??_pec15_calc+5,w
 15599  215A  0CA5               	rrf	??_pec15_calc+5,f
 15600  215B  0CA4               	rrf	??_pec15_calc+4,f
 15601  215C  0BA6               	decfsz	??_pec15_calc+6,f
 15602  215D  2959               	goto	u4815
 15603  215E  0822               	movf	??_pec15_calc+2,w
 15604  215F  0624               	xorwf	??_pec15_calc+4,w
 15605  2160  00A7               	movwf	??_pec15_calc+7
 15606  2161  0823               	movf	??_pec15_calc+3,w
 15607  2162  0625               	xorwf	??_pec15_calc+5,w
 15608  2163  00A8               	movwf	??_pec15_calc+8
 15609  2164  30FF               	movlw	255
 15610  2165  0527               	andwf	??_pec15_calc+7,w
 15611  2166  00A9               	movwf	pec15_calc@addr
 15612  2167  3000               	movlw	0
 15613  2168  0528               	andwf	??_pec15_calc+8,w
 15614  2169  00AA               	movwf	pec15_calc@addr+1
 15615                           
 15616                           ;ltc6804.c: 1008: remainder = (remainder<<8)^crc15Table[addr];
 15617  216A  082A               	movf	pec15_calc@addr+1,w
 15618  216B  0085               	movwf	5
 15619  216C  0829               	movf	pec15_calc@addr,w
 15620  216D  0084               	movwf	4
 15621  216E  3584               	lslf	4,f
 15622  216F  0D85               	rlf	5,f
 15623  2170  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 15624  2171  0784               	addwf	4,f
 15625  2172  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 15626  2173  3D85               	addwfc	5,f
 15627  2174  3F00               	moviw [0]fsr0
 15628  2175  00A0               	movwf	??_pec15_calc
 15629  2176  3F01               	moviw [1]fsr0
 15630  2177  00A1               	movwf	??_pec15_calc+1
 15631  2178  082D               	movf	pec15_calc@remainder,w
 15632  2179  00A3               	movwf	??_pec15_calc+3
 15633  217A  01A2               	clrf	??_pec15_calc+2
 15634  217B  0820               	movf	??_pec15_calc,w
 15635  217C  0622               	xorwf	??_pec15_calc+2,w
 15636  217D  00AD               	movwf	pec15_calc@remainder
 15637  217E  0821               	movf	??_pec15_calc+1,w
 15638  217F  0623               	xorwf	??_pec15_calc+3,w
 15639  2180  00AE               	movwf	pec15_calc@remainder+1
 15640  2181  3001               	movlw	1
 15641  2182  00A0               	movwf	??_pec15_calc
 15642  2183  0820               	movf	??_pec15_calc,w
 15643  2184  07AC               	addwf	pec15_calc@i,f
 15644  2185  2943               	goto	l4166
 15645  2186                     l4168:	
 15646                           
 15647                           ;ltc6804.c: 1009: }
 15648                           ;ltc6804.c: 1010: return(remainder*2);
 15649  2186  352D               	lslf	pec15_calc@remainder,w
 15650  2187  00F6               	movwf	?_pec15_calc
 15651  2188  0D2E               	rlf	pec15_calc@remainder+1,w
 15652  2189  00F7               	movwf	?_pec15_calc+1
 15653  218A  0008               	return
 15654  218B                     __end_of_pec15_calc:	
 15655                           
 15656                           	psect	text44
 15657  2E00                     __ptext44:	
 15658 ;; *************** function _i2cSwitch *****************
 15659 ;; Defined at:
 15660 ;;		line 34 in file "i2c.c"
 15661 ;; Parameters:    Size  Location     Type
 15662 ;;		None
 15663 ;; Auto vars:     Size  Location     Type
 15664 ;;		None
 15665 ;; Return value:  Size  Location     Type
 15666 ;;                  1    wreg      void 
 15667 ;; Registers used:
 15668 ;;		wreg
 15669 ;; Tracked objects:
 15670 ;;		On entry : 0/0
 15671 ;;		On exit  : 0/0
 15672 ;;		Unchanged: 0/0
 15673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15678 ;;Total ram usage:        0 bytes
 15679 ;; Hardware stack levels used:    1
 15680 ;; Hardware stack levels required when called:    2
 15681 ;; This function calls:
 15682 ;;		Nothing
 15683 ;; This function is called by:
 15684 ;;		_main
 15685 ;; This function uses a non-reentrant model
 15686 ;;
 15687                           
 15688                           
 15689                           ;psect for function _i2cSwitch
 15690  2E00                     _i2cSwitch:	
 15691                           
 15692                           ;i2c.c: 35: APFCON1bits.SDISEL = 1;
 15693                           
 15694                           ;incstack = 0
 15695                           ; Regs used in _i2cSwitch: [wreg]
 15696  2E00  0022               	movlb	2	; select bank2
 15697  2E01  159D               	bsf	29,3	;volatile
 15698                           
 15699                           ;i2c.c: 36: APFCON1bits.SCKSEL = 1;
 15700  2E02  161D               	bsf	29,4	;volatile
 15701                           
 15702                           ;i2c.c: 37: SSPCON1 = 0x28;
 15703  2E03  3028               	movlw	40
 15704  2E04  0024               	movlb	4	; select bank4
 15705  2E05  0095               	movwf	21	;volatile
 15706  2E06  0008               	return
 15707  2E07                     __end_of_i2cSwitch:	
 15708                           
 15709                           	psect	text45
 15710  2404                     __ptext45:	
 15711 ;; *************** function _getTemps *****************
 15712 ;; Defined at:
 15713 ;;		line 32 in file "adc.c"
 15714 ;; Parameters:    Size  Location     Type
 15715 ;;  temperatures    1    wreg     PTR int 
 15716 ;;		 -> temps(10), 
 15717 ;;  numTemps        2   40[BANK1 ] int 
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;  temperatures    1   48[BANK1 ] PTR int 
 15720 ;;		 -> temps(10), 
 15721 ;;  inc             2   49[BANK1 ] int 
 15722 ;;  highestTemp     2   46[BANK1 ] int 
 15723 ;; Return value:  Size  Location     Type
 15724 ;;                  2   40[BANK1 ] int 
 15725 ;; Registers used:
 15726 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15727 ;; Tracked objects:
 15728 ;;		On entry : 0/0
 15729 ;;		On exit  : 0/0
 15730 ;;		Unchanged: 0/0
 15731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15732 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15733 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15734 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15735 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15736 ;;Total ram usage:       11 bytes
 15737 ;; Hardware stack levels used:    1
 15738 ;; Hardware stack levels required when called:    5
 15739 ;; This function calls:
 15740 ;;		_adcRead
 15741 ;;		_calculateTemp
 15742 ;; This function is called by:
 15743 ;;		_main
 15744 ;; This function uses a non-reentrant model
 15745 ;;
 15746                           
 15747                           
 15748                           ;psect for function _getTemps
 15749  2404                     _getTemps:	
 15750                           
 15751                           ;incstack = 0
 15752                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15753                           ;getTemps@temperatures stored from wreg
 15754  2404  0021               	movlb	1	; select bank1
 15755  2405  00D0               	movwf	getTemps@temperatures^(0+128)
 15756                           
 15757                           ;adc.c: 33: int highestTemp = 0;
 15758  2406  01CE               	clrf	getTemps@highestTemp^(0+128)
 15759  2407  01CF               	clrf	(getTemps@highestTemp+1)^(0+128)
 15760                           
 15761                           ;adc.c: 35: LATBbits.LATB5 = 0;
 15762  2408  0022               	movlb	2	; select bank2
 15763  2409  128D               	bcf	13,5	;volatile
 15764                           
 15765                           ;adc.c: 36: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 15766  240A  0023               	movlb	3	; select bank3
 15767  240B  0858               	movf	_tempChannels^(0+384),w
 15768  240C  31A2  2282  31A4   	fcall	_adcRead
 15769  240F  0873               	movf	?_adcRead+1,w
 15770  2410  0021               	movlb	1	; select bank1
 15771  2411  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15772  2412  0872               	movf	?_adcRead,w
 15773  2413  00C0               	movwf	calculateTemp@adcValue^(0+128)
 15774  2414  31A5  250A  31A4   	fcall	_calculateTemp
 15775  2417  0021               	movlb	1	; select bank1
 15776  2418  0841               	movf	(?_calculateTemp+1)^(0+128),w
 15777  2419  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 15778  241A  0840               	movf	?_calculateTemp^(0+128),w
 15779  241B  00CE               	movwf	getTemps@highestTemp^(0+128)
 15780                           
 15781                           ;adc.c: 37: temperatures[0] = highestTemp;
 15782  241C  0850               	movf	getTemps@temperatures^(0+128),w
 15783  241D  0086               	movwf	6
 15784  241E  3001               	movlw	1	; select bank2/3
 15785  241F  0087               	movwf	7
 15786  2420  084E               	movf	getTemps@highestTemp^(0+128),w
 15787  2421  3FC0               	movwi [0]fsr1
 15788  2422  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15789  2423  3FC1               	movwi [1]fsr1
 15790                           
 15791                           ;adc.c: 38: for(int inc = 1; inc < numTemps; inc ++){
 15792  2424  3001               	movlw	1
 15793  2425  00D1               	movwf	getTemps@inc^(0+128)
 15794  2426  3000               	movlw	0
 15795  2427  00D2               	movwf	(getTemps@inc^(0+128)+1)
 15796  2428                     l7404:	
 15797  2428  0852               	movf	(getTemps@inc+1)^(0+128),w
 15798  2429  3A80               	xorlw	128
 15799  242A  00CA               	movwf	??_getTemps^(0+128)
 15800  242B  0849               	movf	(getTemps@numTemps+1)^(0+128),w
 15801  242C  3A80               	xorlw	128
 15802  242D  024A               	subwf	??_getTemps^(0+128),w
 15803  242E  1D03               	skipz
 15804  242F  2C32               	goto	u10525
 15805  2430  0848               	movf	getTemps@numTemps^(0+128),w
 15806  2431  0251               	subwf	getTemps@inc^(0+128),w
 15807  2432                     u10525:	
 15808  2432  1803               	btfsc	3,0
 15809  2433  2C7B               	goto	l189
 15810                           
 15811                           ;adc.c: 39: temperatures[inc] = calculateTemp(adcRead(tempChannels[inc]));
 15812  2434  0021               	movlb	1	; select bank1
 15813  2435  0851               	movf	getTemps@inc^(0+128),w
 15814  2436  3ED8               	addlw	(low (_tempChannels| (0+256)))& (0+255)
 15815  2437  0086               	movwf	6
 15816  2438  3001               	movlw	1	; select bank3/4
 15817  2439  0087               	movwf	7
 15818  243A  0801               	movf	1,w
 15819  243B  31A2  2282  31A4   	fcall	_adcRead
 15820  243E  0873               	movf	?_adcRead+1,w
 15821  243F  0021               	movlb	1	; select bank1
 15822  2440  00C1               	movwf	(calculateTemp@adcValue+1)^(0+128)
 15823  2441  0872               	movf	?_adcRead,w
 15824  2442  00C0               	movwf	calculateTemp@adcValue^(0+128)
 15825  2443  31A5  250A  31A4   	fcall	_calculateTemp
 15826  2446  0021               	movlb	1	; select bank1
 15827  2447  3551               	lslf	getTemps@inc^(0+128),w
 15828  2448  0750               	addwf	getTemps@temperatures^(0+128),w
 15829  2449  00CA               	movwf	??_getTemps^(0+128)
 15830  244A  084A               	movf	??_getTemps^(0+128),w
 15831  244B  0086               	movwf	6
 15832  244C  3001               	movlw	1	; select bank2/3
 15833  244D  0087               	movwf	7
 15834  244E  0840               	movf	?_calculateTemp^(0+128),w
 15835  244F  3FC0               	movwi [0]fsr1
 15836  2450  0841               	movf	(?_calculateTemp+1)^(0+128),w
 15837  2451  3FC1               	movwi [1]fsr1
 15838                           
 15839                           ;adc.c: 40: if(temperatures[inc] > highestTemp){
 15840  2452  3551               	lslf	getTemps@inc^(0+128),w
 15841  2453  0750               	addwf	getTemps@temperatures^(0+128),w
 15842  2454  00CA               	movwf	??_getTemps^(0+128)
 15843  2455  084A               	movf	??_getTemps^(0+128),w
 15844  2456  0086               	movwf	6
 15845  2457  3001               	movlw	1	; select bank2/3
 15846  2458  0087               	movwf	7
 15847  2459  3F40               	moviw [0]fsr1
 15848  245A  00CB               	movwf	(??_getTemps+1)^(0+128)
 15849  245B  3F41               	moviw [1]fsr1
 15850  245C  00CC               	movwf	((??_getTemps+1)^(0+128)+1)
 15851  245D  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15852  245E  3A80               	xorlw	128
 15853  245F  00CD               	movwf	(??_getTemps+3)^(0+128)
 15854  2460  084C               	movf	(??_getTemps+2)^(0+128),w
 15855  2461  3A80               	xorlw	128
 15856  2462  024D               	subwf	(??_getTemps+3)^(0+128),w
 15857  2463  1D03               	skipz
 15858  2464  2C67               	goto	u10515
 15859  2465  084B               	movf	(??_getTemps+1)^(0+128),w
 15860  2466  024E               	subwf	getTemps@highestTemp^(0+128),w
 15861  2467                     u10515:	
 15862  2467  1803               	skipnc
 15863  2468  2C75               	goto	l7402
 15864                           
 15865                           ;adc.c: 41: highestTemp = temperatures[inc];
 15866  2469  0021               	movlb	1	; select bank1
 15867  246A  3551               	lslf	getTemps@inc^(0+128),w
 15868  246B  0750               	addwf	getTemps@temperatures^(0+128),w
 15869  246C  00CA               	movwf	??_getTemps^(0+128)
 15870  246D  084A               	movf	??_getTemps^(0+128),w
 15871  246E  0086               	movwf	6
 15872  246F  3001               	movlw	1	; select bank2/3
 15873  2470  0087               	movwf	7
 15874  2471  3F40               	moviw [0]fsr1
 15875  2472  00CE               	movwf	getTemps@highestTemp^(0+128)
 15876  2473  3F41               	moviw [1]fsr1
 15877  2474  00CF               	movwf	(getTemps@highestTemp+1)^(0+128)
 15878  2475                     l7402:	
 15879  2475  3001               	movlw	1
 15880  2476  0021               	movlb	1	; select bank1
 15881  2477  07D1               	addwf	getTemps@inc^(0+128),f
 15882  2478  3000               	movlw	0
 15883  2479  3DD2               	addwfc	(getTemps@inc+1)^(0+128),f
 15884  247A  2C28               	goto	l7404
 15885  247B                     l189:	
 15886                           
 15887                           ;adc.c: 42: }
 15888                           ;adc.c: 43: }
 15889                           ;adc.c: 45: LATBbits.LATB5 = 1;
 15890  247B  0022               	movlb	2	; select bank2
 15891  247C  168D               	bsf	13,5	;volatile
 15892                           
 15893                           ;adc.c: 46: return highestTemp;
 15894  247D  0021               	movlb	1	; select bank1
 15895  247E  084F               	movf	(getTemps@highestTemp+1)^(0+128),w
 15896  247F  00C9               	movwf	(?_getTemps+1)^(0+128)
 15897  2480  084E               	movf	getTemps@highestTemp^(0+128),w
 15898  2481  00C8               	movwf	?_getTemps^(0+128)
 15899  2482  0008               	return
 15900  2483                     __end_of_getTemps:	
 15901                           
 15902                           	psect	text46
 15903  250A                     __ptext46:	
 15904 ;; *************** function _calculateTemp *****************
 15905 ;; Defined at:
 15906 ;;		line 12 in file "adc.c"
 15907 ;; Parameters:    Size  Location     Type
 15908 ;;  adcValue        2   32[BANK1 ] int 
 15909 ;; Auto vars:     Size  Location     Type
 15910 ;;  voltage         4   36[BANK1 ] float 
 15911 ;; Return value:  Size  Location     Type
 15912 ;;                  2   32[BANK1 ] int 
 15913 ;; Registers used:
 15914 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15915 ;; Tracked objects:
 15916 ;;		On entry : 0/0
 15917 ;;		On exit  : 0/0
 15918 ;;		Unchanged: 0/0
 15919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15920 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15921 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15922 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15923 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15924 ;;Total ram usage:        8 bytes
 15925 ;; Hardware stack levels used:    1
 15926 ;; Hardware stack levels required when called:    4
 15927 ;; This function calls:
 15928 ;;		___fldiv
 15929 ;;		___flmul
 15930 ;;		___fltol
 15931 ;;		___xxtofl
 15932 ;; This function is called by:
 15933 ;;		_getTemps
 15934 ;; This function uses a non-reentrant model
 15935 ;;
 15936                           
 15937                           
 15938                           ;psect for function _calculateTemp
 15939  250A                     _calculateTemp:	
 15940                           
 15941                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 15942                           
 15943                           ;incstack = 0
 15944                           ; Regs used in _calculateTemp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15945  250A  3040               	movlw	64
 15946  250B  0020               	movlb	0	; select bank0
 15947  250C  00D5               	movwf	___flmul@b+3
 15948  250D  30A0               	movlw	160
 15949  250E  00D4               	movwf	___flmul@b+2
 15950  250F  3000               	movlw	0
 15951  2510  00D3               	movwf	___flmul@b+1
 15952  2511  3000               	movlw	0
 15953  2512  00D2               	movwf	___flmul@b
 15954  2513  3045               	movlw	69
 15955  2514  00BB               	movwf	___fldiv@a+3
 15956  2515  3080               	movlw	128
 15957  2516  00BA               	movwf	___fldiv@a+2
 15958  2517  3000               	movlw	0
 15959  2518  00B9               	movwf	___fldiv@a+1
 15960  2519  3000               	movlw	0
 15961  251A  00B8               	movwf	___fldiv@a
 15962  251B  0021               	movlb	1	; select bank1
 15963  251C  0840               	movf	calculateTemp@adcValue^(0+128),w
 15964  251D  0020               	movlb	0	; select bank0
 15965  251E  00AE               	movwf	___xxtofl@val
 15966  251F  0021               	movlb	1	; select bank1
 15967  2520  0841               	movf	(calculateTemp@adcValue+1)^(0+128),w
 15968  2521  0020               	movlb	0	; select bank0
 15969  2522  00AF               	movwf	___xxtofl@val+1
 15970  2523  0D89               	rlf	9,f
 15971  2524  3B89               	subwfb	9,f
 15972  2525  0989               	comf	9,f
 15973  2526  00B0               	movwf	___xxtofl@val+2
 15974  2527  00B1               	movwf	___xxtofl@val+3
 15975  2528  3001               	movlw	1
 15976  2529  31A6  261A  31A5   	fcall	___xxtofl
 15977  252C  0020               	movlb	0	; select bank0
 15978  252D  0831               	movf	?___xxtofl+3,w
 15979  252E  00BF               	movwf	___fldiv@b+3
 15980  252F  0830               	movf	?___xxtofl+2,w
 15981  2530  00BE               	movwf	___fldiv@b+2
 15982  2531  082F               	movf	?___xxtofl+1,w
 15983  2532  00BD               	movwf	___fldiv@b+1
 15984  2533  082E               	movf	?___xxtofl,w
 15985  2534  00BC               	movwf	___fldiv@b
 15986  2535  3194  2468  31A5   	fcall	___fldiv
 15987  2538  0020               	movlb	0	; select bank0
 15988  2539  083B               	movf	?___fldiv+3,w
 15989  253A  00D9               	movwf	___flmul@a+3
 15990  253B  083A               	movf	?___fldiv+2,w
 15991  253C  00D8               	movwf	___flmul@a+2
 15992  253D  0839               	movf	?___fldiv+1,w
 15993  253E  00D7               	movwf	___flmul@a+1
 15994  253F  0838               	movf	?___fldiv,w
 15995  2540  00D6               	movwf	___flmul@a
 15996  2541  3183  23D5  31A5   	fcall	___flmul
 15997  2544  0020               	movlb	0	; select bank0
 15998  2545  0855               	movf	?___flmul+3,w
 15999  2546  0021               	movlb	1	; select bank1
 16000  2547  00C7               	movwf	(calculateTemp@voltage+3)^(0+128)
 16001  2548  0020               	movlb	0	; select bank0
 16002  2549  0854               	movf	?___flmul+2,w
 16003  254A  0021               	movlb	1	; select bank1
 16004  254B  00C6               	movwf	(calculateTemp@voltage+2)^(0+128)
 16005  254C  0020               	movlb	0	; select bank0
 16006  254D  0853               	movf	?___flmul+1,w
 16007  254E  0021               	movlb	1	; select bank1
 16008  254F  00C5               	movwf	(calculateTemp@voltage+1)^(0+128)
 16009  2550  0020               	movlb	0	; select bank0
 16010  2551  0852               	movf	?___flmul,w
 16011  2552  0021               	movlb	1	; select bank1
 16012  2553  00C4               	movwf	calculateTemp@voltage^(0+128)
 16013                           
 16014                           ;adc.c: 14: return temperatures[(int)(voltage*10)];
 16015  2554  0847               	movf	(calculateTemp@voltage+3)^(0+128),w
 16016  2555  0020               	movlb	0	; select bank0
 16017  2556  00D9               	movwf	___flmul@a+3
 16018  2557  0021               	movlb	1	; select bank1
 16019  2558  0846               	movf	(calculateTemp@voltage+2)^(0+128),w
 16020  2559  0020               	movlb	0	; select bank0
 16021  255A  00D8               	movwf	___flmul@a+2
 16022  255B  0021               	movlb	1	; select bank1
 16023  255C  0845               	movf	(calculateTemp@voltage+1)^(0+128),w
 16024  255D  0020               	movlb	0	; select bank0
 16025  255E  00D7               	movwf	___flmul@a+1
 16026  255F  0021               	movlb	1	; select bank1
 16027  2560  0844               	movf	calculateTemp@voltage^(0+128),w
 16028  2561  0020               	movlb	0	; select bank0
 16029  2562  00D6               	movwf	___flmul@a
 16030  2563  3041               	movlw	65
 16031  2564  00D5               	movwf	___flmul@b+3
 16032  2565  3020               	movlw	32
 16033  2566  00D4               	movwf	___flmul@b+2
 16034  2567  3000               	movlw	0
 16035  2568  00D3               	movwf	___flmul@b+1
 16036  2569  3000               	movlw	0
 16037  256A  00D2               	movwf	___flmul@b
 16038  256B  3183  23D5  31A5   	fcall	___flmul
 16039  256E  0020               	movlb	0	; select bank0
 16040  256F  0855               	movf	?___flmul+3,w
 16041  2570  0021               	movlb	1	; select bank1
 16042  2571  00B8               	movwf	(___fltol@f1+3)^(0+128)
 16043  2572  0020               	movlb	0	; select bank0
 16044  2573  0854               	movf	?___flmul+2,w
 16045  2574  0021               	movlb	1	; select bank1
 16046  2575  00B7               	movwf	(___fltol@f1+2)^(0+128)
 16047  2576  0020               	movlb	0	; select bank0
 16048  2577  0853               	movf	?___flmul+1,w
 16049  2578  0021               	movlb	1	; select bank1
 16050  2579  00B6               	movwf	(___fltol@f1+1)^(0+128)
 16051  257A  0020               	movlb	0	; select bank0
 16052  257B  0852               	movf	?___flmul,w
 16053  257C  0021               	movlb	1	; select bank1
 16054  257D  00B5               	movwf	___fltol@f1^(0+128)
 16055  257E  31A3  2385         	fcall	___fltol
 16056  2580  0021               	movlb	1	; select bank1
 16057  2581  0836               	movf	(?___fltol+1)^(0+128),w
 16058  2582  0085               	movwf	5
 16059  2583  0835               	movf	?___fltol^(0+128),w
 16060  2584  0084               	movwf	4
 16061  2585  3068               	movlw	low (_temperatures| (0+32768))
 16062  2586  0784               	addwf	4,f
 16063  2587  30B0               	movlw	high (_temperatures| (0+32768))
 16064  2588  3D85               	addwfc	5,f
 16065  2589  0800               	movf	0,w	;code access
 16066  258A  00C2               	movwf	??_calculateTemp^(0+128)
 16067  258B  01C3               	clrf	(??_calculateTemp^(0+128)+1)
 16068  258C  0842               	movf	??_calculateTemp^(0+128),w
 16069  258D  00C0               	movwf	?_calculateTemp^(0+128)
 16070  258E  0843               	movf	(??_calculateTemp+1)^(0+128),w
 16071  258F  00C1               	movwf	(?_calculateTemp+1)^(0+128)
 16072  2590  0008               	return
 16073  2591                     __end_of_calculateTemp:	
 16074                           
 16075                           	psect	text47
 16076  2385                     __ptext47:	
 16077 ;; *************** function ___fltol *****************
 16078 ;; Defined at:
 16079 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 16080 ;; Parameters:    Size  Location     Type
 16081 ;;  f1              4   21[BANK1 ] int 
 16082 ;; Auto vars:     Size  Location     Type
 16083 ;;  exp1            1   31[BANK1 ] unsigned char 
 16084 ;;  sign1           1   30[BANK1 ] unsigned char 
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  4   21[BANK1 ] long 
 16087 ;; Registers used:
 16088 ;;		wreg, status,2, status,0
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16094 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16095 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16096 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16097 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16098 ;;Total ram usage:       11 bytes
 16099 ;; Hardware stack levels used:    1
 16100 ;; Hardware stack levels required when called:    2
 16101 ;; This function calls:
 16102 ;;		Nothing
 16103 ;; This function is called by:
 16104 ;;		_calculateTemp
 16105 ;;		_sprintf
 16106 ;;		_startUp
 16107 ;; This function uses a non-reentrant model
 16108 ;;
 16109                           
 16110                           
 16111                           ;psect for function ___fltol
 16112  2385                     ___fltol:	
 16113                           
 16114                           ;incstack = 0
 16115                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 16116  2385  0021               	movlb	1	; select bank1
 16117  2386  0835               	movf	___fltol@f1^(0+128),w
 16118  2387  00B9               	movwf	??___fltol^(0+128)
 16119  2388  0836               	movf	(___fltol@f1+1)^(0+128),w
 16120  2389  00BA               	movwf	(??___fltol^(0+128)+1)
 16121  238A  0837               	movf	(___fltol@f1+2)^(0+128),w
 16122  238B  00BB               	movwf	(??___fltol^(0+128)+2)
 16123  238C  0838               	movf	(___fltol@f1+3)^(0+128),w
 16124  238D  00BC               	movwf	(??___fltol^(0+128)+3)
 16125  238E  1003               	clrc
 16126  238F  0D3B               	rlf	(??___fltol^(0+128)+2),w
 16127  2390  0D3C               	rlf	(??___fltol^(0+128)+3),w
 16128  2391  00BD               	movwf	(??___fltol+4)^(0+128)
 16129  2392  083D               	movf	(??___fltol+4)^(0+128),w
 16130  2393  00BF               	movwf	___fltol@exp1^(0+128)
 16131  2394  083F               	movf	___fltol@exp1^(0+128),w
 16132  2395  1D03               	btfss	3,2
 16133  2396  2BA0               	goto	l6690
 16134  2397  3000               	movlw	0
 16135  2398  00B8               	movwf	(?___fltol+3)^(0+128)
 16136  2399  3000               	movlw	0
 16137  239A  00B7               	movwf	(?___fltol+2)^(0+128)
 16138  239B  3000               	movlw	0
 16139  239C  00B6               	movwf	(?___fltol+1)^(0+128)
 16140  239D  3000               	movlw	0
 16141  239E  00B5               	movwf	?___fltol^(0+128)
 16142  239F  0008               	return
 16143  23A0                     l6690:	
 16144  23A0  0835               	movf	___fltol@f1^(0+128),w
 16145  23A1  00B9               	movwf	??___fltol^(0+128)
 16146  23A2  0836               	movf	(___fltol@f1+1)^(0+128),w
 16147  23A3  00BA               	movwf	(??___fltol^(0+128)+1)
 16148  23A4  0837               	movf	(___fltol@f1+2)^(0+128),w
 16149  23A5  00BB               	movwf	(??___fltol^(0+128)+2)
 16150  23A6  0838               	movf	(___fltol@f1+3)^(0+128),w
 16151  23A7  00BC               	movwf	(??___fltol^(0+128)+3)
 16152  23A8  301F               	movlw	31
 16153  23A9                     u9125:	
 16154  23A9  36BC               	lsrf	(??___fltol^(0+128)+3),f
 16155  23AA  0CBB               	rrf	(??___fltol^(0+128)+2),f
 16156  23AB  0CBA               	rrf	(??___fltol^(0+128)+1),f
 16157  23AC  0CB9               	rrf	??___fltol^(0+128),f
 16158  23AD  0B89               	decfsz	9,f
 16159  23AE  2BA9               	goto	u9125
 16160  23AF  0839               	movf	??___fltol^(0+128),w
 16161  23B0  00BD               	movwf	(??___fltol+4)^(0+128)
 16162  23B1  083D               	movf	(??___fltol+4)^(0+128),w
 16163  23B2  00BE               	movwf	___fltol@sign1^(0+128)
 16164  23B3  17B7               	bsf	(___fltol@f1^(0+128)+2),7
 16165  23B4  30FF               	movlw	255
 16166  23B5  05B5               	andwf	___fltol@f1^(0+128),f
 16167  23B6  30FF               	movlw	255
 16168  23B7  05B6               	andwf	(___fltol@f1+1)^(0+128),f
 16169  23B8  30FF               	movlw	255
 16170  23B9  05B7               	andwf	(___fltol@f1+2)^(0+128),f
 16171  23BA  3000               	movlw	0
 16172  23BB  05B8               	andwf	(___fltol@f1+3)^(0+128),f
 16173  23BC  3096               	movlw	150
 16174  23BD  02BF               	subwf	___fltol@exp1^(0+128),f
 16175  23BE  1FBF               	btfss	___fltol@exp1^(0+128),7
 16176  23BF  2BDC               	goto	l6708
 16177  23C0  083F               	movf	___fltol@exp1^(0+128),w
 16178  23C1  3A80               	xorlw	128
 16179  23C2  3E97               	addlw	151
 16180  23C3  1803               	skipnc
 16181  23C4  2BCE               	goto	l6706
 16182  23C5  3000               	movlw	0
 16183  23C6  00B8               	movwf	(?___fltol+3)^(0+128)
 16184  23C7  3000               	movlw	0
 16185  23C8  00B7               	movwf	(?___fltol+2)^(0+128)
 16186  23C9  3000               	movlw	0
 16187  23CA  00B6               	movwf	(?___fltol+1)^(0+128)
 16188  23CB  3000               	movlw	0
 16189  23CC  00B5               	movwf	?___fltol^(0+128)
 16190  23CD  0008               	return
 16191  23CE                     l6706:	
 16192  23CE  3001               	movlw	1
 16193  23CF                     u9155:	
 16194  23CF  36B8               	lsrf	(___fltol@f1+3)^(0+128),f
 16195  23D0  0CB7               	rrf	(___fltol@f1+2)^(0+128),f
 16196  23D1  0CB6               	rrf	(___fltol@f1+1)^(0+128),f
 16197  23D2  0CB5               	rrf	___fltol@f1^(0+128),f
 16198  23D3  0B89               	decfsz	9,f
 16199  23D4  2BCF               	goto	u9155
 16200  23D5  3001               	movlw	1
 16201  23D6  00B9               	movwf	??___fltol^(0+128)
 16202  23D7  0839               	movf	??___fltol^(0+128),w
 16203  23D8  07BF               	addwf	___fltol@exp1^(0+128),f
 16204  23D9  1903               	btfsc	3,2
 16205  23DA  2BF5               	goto	l6716
 16206  23DB  2BCE               	goto	l6706
 16207  23DC                     l6708:	
 16208  23DC  3020               	movlw	32
 16209  23DD  023F               	subwf	___fltol@exp1^(0+128),w
 16210  23DE  1C03               	skipc
 16211  23DF  2BF2               	goto	l1110
 16212  23E0  3000               	movlw	0
 16213  23E1  00B8               	movwf	(?___fltol+3)^(0+128)
 16214  23E2  3000               	movlw	0
 16215  23E3  00B7               	movwf	(?___fltol+2)^(0+128)
 16216  23E4  3000               	movlw	0
 16217  23E5  00B6               	movwf	(?___fltol+1)^(0+128)
 16218  23E6  3000               	movlw	0
 16219  23E7  00B5               	movwf	?___fltol^(0+128)
 16220  23E8  0008               	return
 16221  23E9                     l6714:	
 16222  23E9  3001               	movlw	1
 16223  23EA                     u9185:	
 16224  23EA  35B5               	lslf	___fltol@f1^(0+128),f
 16225  23EB  0DB6               	rlf	(___fltol@f1+1)^(0+128),f
 16226  23EC  0DB7               	rlf	(___fltol@f1+2)^(0+128),f
 16227  23ED  0DB8               	rlf	(___fltol@f1+3)^(0+128),f
 16228  23EE  0B89               	decfsz	9,f
 16229  23EF  2BEA               	goto	u9185
 16230  23F0  3001               	movlw	1
 16231  23F1  02BF               	subwf	___fltol@exp1^(0+128),f
 16232  23F2                     l1110:	
 16233  23F2  083F               	movf	___fltol@exp1^(0+128),w
 16234  23F3  1D03               	btfss	3,2
 16235  23F4  2BE9               	goto	l6714
 16236  23F5                     l6716:	
 16237  23F5  083E               	movf	___fltol@sign1^(0+128),w
 16238  23F6  1903               	btfsc	3,2
 16239  23F7  0008               	return
 16240  23F8  09B5               	comf	___fltol@f1^(0+128),f
 16241  23F9  09B6               	comf	(___fltol@f1+1)^(0+128),f
 16242  23FA  09B7               	comf	(___fltol@f1+2)^(0+128),f
 16243  23FB  09B8               	comf	(___fltol@f1+3)^(0+128),f
 16244  23FC  0AB5               	incf	___fltol@f1^(0+128),f
 16245  23FD  1903               	skipnz
 16246  23FE  0AB6               	incf	(___fltol@f1+1)^(0+128),f
 16247  23FF  1903               	skipnz
 16248  2400  0AB7               	incf	(___fltol@f1+2)^(0+128),f
 16249  2401  1903               	skipnz
 16250  2402  0AB8               	incf	(___fltol@f1+3)^(0+128),f
 16251  2403  0008               	return
 16252  2404                     __end_of___fltol:	
 16253                           
 16254                           	psect	text48
 16255  2FC2                     __ptext48:	
 16256 ;; *************** function _getCurrent *****************
 16257 ;; Defined at:
 16258 ;;		line 24 in file "adc.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;		None
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;  currentValue    4   69[BANK1 ] float 
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  4   65[BANK1 ] float 
 16265 ;; Registers used:
 16266 ;;		wreg, status,2, status,0, pclath, cstack
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16272 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16273 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16275 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16276 ;;Total ram usage:        8 bytes
 16277 ;; Hardware stack levels used:    1
 16278 ;; Hardware stack levels required when called:    5
 16279 ;; This function calls:
 16280 ;;		___xxtofl
 16281 ;;		_adcRead
 16282 ;;		_calculateCurrent
 16283 ;; This function is called by:
 16284 ;;		_main
 16285 ;;		_startUp
 16286 ;; This function uses a non-reentrant model
 16287 ;;
 16288                           
 16289                           
 16290                           ;psect for function _getCurrent
 16291  2FC2                     _getCurrent:	
 16292                           
 16293                           ;adc.c: 25: float currentValue = (float)adcRead((char)10101);
 16294                           
 16295                           ;incstack = 0
 16296                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 16297  2FC2  3075               	movlw	117
 16298  2FC3  31A2  2282  31AF   	fcall	_adcRead
 16299  2FC6  0872               	movf	?_adcRead,w
 16300  2FC7  0020               	movlb	0	; select bank0
 16301  2FC8  00AE               	movwf	___xxtofl@val
 16302  2FC9  0873               	movf	?_adcRead+1,w
 16303  2FCA  00AF               	movwf	___xxtofl@val+1
 16304  2FCB  0D89               	rlf	9,f
 16305  2FCC  3B89               	subwfb	9,f
 16306  2FCD  0989               	comf	9,f
 16307  2FCE  00B0               	movwf	___xxtofl@val+2
 16308  2FCF  00B1               	movwf	___xxtofl@val+3
 16309  2FD0  3001               	movlw	1
 16310  2FD1  31A6  261A  31AF   	fcall	___xxtofl
 16311  2FD4  0020               	movlb	0	; select bank0
 16312  2FD5  0831               	movf	?___xxtofl+3,w
 16313  2FD6  0021               	movlb	1	; select bank1
 16314  2FD7  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 16315  2FD8  0020               	movlb	0	; select bank0
 16316  2FD9  0830               	movf	?___xxtofl+2,w
 16317  2FDA  0021               	movlb	1	; select bank1
 16318  2FDB  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 16319  2FDC  0020               	movlb	0	; select bank0
 16320  2FDD  082F               	movf	?___xxtofl+1,w
 16321  2FDE  0021               	movlb	1	; select bank1
 16322  2FDF  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 16323  2FE0  0020               	movlb	0	; select bank0
 16324  2FE1  082E               	movf	?___xxtofl,w
 16325  2FE2  0021               	movlb	1	; select bank1
 16326  2FE3  00E5               	movwf	getCurrent@currentValue^(0+128)
 16327                           
 16328                           ;adc.c: 26: currentValue = calculateCurrent(currentValue);
 16329  2FE4  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 16330  2FE5  00D8               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 16331  2FE6  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 16332  2FE7  00D7               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 16333  2FE8  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 16334  2FE9  00D6               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 16335  2FEA  0865               	movf	getCurrent@currentValue^(0+128),w
 16336  2FEB  00D5               	movwf	calculateCurrent@adcValue^(0+128)
 16337  2FEC  31A5  2591         	fcall	_calculateCurrent
 16338  2FEE  0021               	movlb	1	; select bank1
 16339  2FEF  0858               	movf	(?_calculateCurrent+3)^(0+128),w
 16340  2FF0  00E8               	movwf	(getCurrent@currentValue+3)^(0+128)
 16341  2FF1  0857               	movf	(?_calculateCurrent+2)^(0+128),w
 16342  2FF2  00E7               	movwf	(getCurrent@currentValue+2)^(0+128)
 16343  2FF3  0856               	movf	(?_calculateCurrent+1)^(0+128),w
 16344  2FF4  00E6               	movwf	(getCurrent@currentValue+1)^(0+128)
 16345  2FF5  0855               	movf	?_calculateCurrent^(0+128),w
 16346  2FF6  00E5               	movwf	getCurrent@currentValue^(0+128)
 16347                           
 16348                           ;adc.c: 28: return currentValue;
 16349  2FF7  0868               	movf	(getCurrent@currentValue+3)^(0+128),w
 16350  2FF8  00E4               	movwf	(?_getCurrent+3)^(0+128)
 16351  2FF9  0867               	movf	(getCurrent@currentValue+2)^(0+128),w
 16352  2FFA  00E3               	movwf	(?_getCurrent+2)^(0+128)
 16353  2FFB  0866               	movf	(getCurrent@currentValue+1)^(0+128),w
 16354  2FFC  00E2               	movwf	(?_getCurrent+1)^(0+128)
 16355  2FFD  0865               	movf	getCurrent@currentValue^(0+128),w
 16356  2FFE  00E1               	movwf	?_getCurrent^(0+128)
 16357  2FFF  0008               	return
 16358  3000                     __end_of_getCurrent:	
 16359                           
 16360                           	psect	text49
 16361  2591                     __ptext49:	
 16362 ;; *************** function _calculateCurrent *****************
 16363 ;; Defined at:
 16364 ;;		line 19 in file "adc.c"
 16365 ;; Parameters:    Size  Location     Type
 16366 ;;  adcValue        4   53[BANK1 ] float 
 16367 ;; Auto vars:     Size  Location     Type
 16368 ;;  curr            4   57[BANK1 ] float 
 16369 ;; Return value:  Size  Location     Type
 16370 ;;                  4   53[BANK1 ] float 
 16371 ;; Registers used:
 16372 ;;		wreg, status,2, status,0, pclath, cstack
 16373 ;; Tracked objects:
 16374 ;;		On entry : 0/0
 16375 ;;		On exit  : 0/0
 16376 ;;		Unchanged: 0/0
 16377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16378 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16379 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16381 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16382 ;;Total ram usage:       12 bytes
 16383 ;; Hardware stack levels used:    1
 16384 ;; Hardware stack levels required when called:    4
 16385 ;; This function calls:
 16386 ;;		___fladd
 16387 ;;		___fldiv
 16388 ;;		___flmul
 16389 ;; This function is called by:
 16390 ;;		_getCurrent
 16391 ;; This function uses a non-reentrant model
 16392 ;;
 16393                           
 16394                           
 16395                           ;psect for function _calculateCurrent
 16396  2591                     _calculateCurrent:	
 16397                           
 16398                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16399                           
 16400                           ;incstack = 0
 16401                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 16402  2591  30C0               	movlw	192
 16403  2592  0021               	movlb	1	; select bank1
 16404  2593  00C0               	movwf	(___fladd@b+3)^(0+128)
 16405  2594  3020               	movlw	32
 16406  2595  00BF               	movwf	(___fladd@b+2)^(0+128)
 16407  2596  3000               	movlw	0
 16408  2597  00BE               	movwf	(___fladd@b+1)^(0+128)
 16409  2598  3000               	movlw	0
 16410  2599  00BD               	movwf	___fladd@b^(0+128)
 16411  259A  3040               	movlw	64
 16412  259B  0020               	movlb	0	; select bank0
 16413  259C  00D5               	movwf	___flmul@b+3
 16414  259D  30A0               	movlw	160
 16415  259E  00D4               	movwf	___flmul@b+2
 16416  259F  3000               	movlw	0
 16417  25A0  00D3               	movwf	___flmul@b+1
 16418  25A1  3000               	movlw	0
 16419  25A2  00D2               	movwf	___flmul@b
 16420  25A3  3045               	movlw	69
 16421  25A4  00BB               	movwf	___fldiv@a+3
 16422  25A5  307F               	movlw	127
 16423  25A6  00BA               	movwf	___fldiv@a+2
 16424  25A7  30F0               	movlw	240
 16425  25A8  00B9               	movwf	___fldiv@a+1
 16426  25A9  3000               	movlw	0
 16427  25AA  00B8               	movwf	___fldiv@a
 16428  25AB  0021               	movlb	1	; select bank1
 16429  25AC  0858               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 16430  25AD  0020               	movlb	0	; select bank0
 16431  25AE  00BF               	movwf	___fldiv@b+3
 16432  25AF  0021               	movlb	1	; select bank1
 16433  25B0  0857               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 16434  25B1  0020               	movlb	0	; select bank0
 16435  25B2  00BE               	movwf	___fldiv@b+2
 16436  25B3  0021               	movlb	1	; select bank1
 16437  25B4  0856               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 16438  25B5  0020               	movlb	0	; select bank0
 16439  25B6  00BD               	movwf	___fldiv@b+1
 16440  25B7  0021               	movlb	1	; select bank1
 16441  25B8  0855               	movf	calculateCurrent@adcValue^(0+128),w
 16442  25B9  0020               	movlb	0	; select bank0
 16443  25BA  00BC               	movwf	___fldiv@b
 16444  25BB  3194  2468  31A5   	fcall	___fldiv
 16445  25BE  0020               	movlb	0	; select bank0
 16446  25BF  083B               	movf	?___fldiv+3,w
 16447  25C0  00D9               	movwf	___flmul@a+3
 16448  25C1  083A               	movf	?___fldiv+2,w
 16449  25C2  00D8               	movwf	___flmul@a+2
 16450  25C3  0839               	movf	?___fldiv+1,w
 16451  25C4  00D7               	movwf	___flmul@a+1
 16452  25C5  0838               	movf	?___fldiv,w
 16453  25C6  00D6               	movwf	___flmul@a
 16454  25C7  3183  23D5  31A5   	fcall	___flmul
 16455  25CA  0020               	movlb	0	; select bank0
 16456  25CB  0855               	movf	?___flmul+3,w
 16457  25CC  0021               	movlb	1	; select bank1
 16458  25CD  00C4               	movwf	(___fladd@a+3)^(0+128)
 16459  25CE  0020               	movlb	0	; select bank0
 16460  25CF  0854               	movf	?___flmul+2,w
 16461  25D0  0021               	movlb	1	; select bank1
 16462  25D1  00C3               	movwf	(___fladd@a+2)^(0+128)
 16463  25D2  0020               	movlb	0	; select bank0
 16464  25D3  0853               	movf	?___flmul+1,w
 16465  25D4  0021               	movlb	1	; select bank1
 16466  25D5  00C2               	movwf	(___fladd@a+1)^(0+128)
 16467  25D6  0020               	movlb	0	; select bank0
 16468  25D7  0852               	movf	?___flmul,w
 16469  25D8  0021               	movlb	1	; select bank1
 16470  25D9  00C1               	movwf	___fladd@a^(0+128)
 16471  25DA  3186  2601  31A5   	fcall	___fladd
 16472  25DD  0021               	movlb	1	; select bank1
 16473  25DE  0840               	movf	(?___fladd+3)^(0+128),w
 16474  25DF  00E0               	movwf	(_calculateCurrent$2110+3)^(0+128)
 16475  25E0  083F               	movf	(?___fladd+2)^(0+128),w
 16476  25E1  00DF               	movwf	(_calculateCurrent$2110+2)^(0+128)
 16477  25E2  083E               	movf	(?___fladd+1)^(0+128),w
 16478  25E3  00DE               	movwf	(_calculateCurrent$2110+1)^(0+128)
 16479  25E4  083D               	movf	?___fladd^(0+128),w
 16480  25E5  00DD               	movwf	_calculateCurrent$2110^(0+128)
 16481                           
 16482                           ;adc.c: 20: float curr = (((((float)adcValue)/4095.0)*5.0) - 2.5)/0.0394;
 16483  25E6  303D               	movlw	61
 16484  25E7  0020               	movlb	0	; select bank0
 16485  25E8  00BB               	movwf	___fldiv@a+3
 16486  25E9  3021               	movlw	33
 16487  25EA  00BA               	movwf	___fldiv@a+2
 16488  25EB  3061               	movlw	97
 16489  25EC  00B9               	movwf	___fldiv@a+1
 16490  25ED  30E5               	movlw	229
 16491  25EE  00B8               	movwf	___fldiv@a
 16492  25EF  0021               	movlb	1	; select bank1
 16493  25F0  0860               	movf	(_calculateCurrent$2110+3)^(0+128),w
 16494  25F1  0020               	movlb	0	; select bank0
 16495  25F2  00BF               	movwf	___fldiv@b+3
 16496  25F3  0021               	movlb	1	; select bank1
 16497  25F4  085F               	movf	(_calculateCurrent$2110+2)^(0+128),w
 16498  25F5  0020               	movlb	0	; select bank0
 16499  25F6  00BE               	movwf	___fldiv@b+2
 16500  25F7  0021               	movlb	1	; select bank1
 16501  25F8  085E               	movf	(_calculateCurrent$2110+1)^(0+128),w
 16502  25F9  0020               	movlb	0	; select bank0
 16503  25FA  00BD               	movwf	___fldiv@b+1
 16504  25FB  0021               	movlb	1	; select bank1
 16505  25FC  085D               	movf	_calculateCurrent$2110^(0+128),w
 16506  25FD  0020               	movlb	0	; select bank0
 16507  25FE  00BC               	movwf	___fldiv@b
 16508  25FF  3194  2468         	fcall	___fldiv
 16509  2601  0020               	movlb	0	; select bank0
 16510  2602  083B               	movf	?___fldiv+3,w
 16511  2603  0021               	movlb	1	; select bank1
 16512  2604  00DC               	movwf	(calculateCurrent@curr+3)^(0+128)
 16513  2605  0020               	movlb	0	; select bank0
 16514  2606  083A               	movf	?___fldiv+2,w
 16515  2607  0021               	movlb	1	; select bank1
 16516  2608  00DB               	movwf	(calculateCurrent@curr+2)^(0+128)
 16517  2609  0020               	movlb	0	; select bank0
 16518  260A  0839               	movf	?___fldiv+1,w
 16519  260B  0021               	movlb	1	; select bank1
 16520  260C  00DA               	movwf	(calculateCurrent@curr+1)^(0+128)
 16521  260D  0020               	movlb	0	; select bank0
 16522  260E  0838               	movf	?___fldiv,w
 16523  260F  0021               	movlb	1	; select bank1
 16524  2610  00D9               	movwf	calculateCurrent@curr^(0+128)
 16525                           
 16526                           ;adc.c: 21: return curr;
 16527  2611  085C               	movf	(calculateCurrent@curr+3)^(0+128),w
 16528  2612  00D8               	movwf	(?_calculateCurrent+3)^(0+128)
 16529  2613  085B               	movf	(calculateCurrent@curr+2)^(0+128),w
 16530  2614  00D7               	movwf	(?_calculateCurrent+2)^(0+128)
 16531  2615  085A               	movf	(calculateCurrent@curr+1)^(0+128),w
 16532  2616  00D6               	movwf	(?_calculateCurrent+1)^(0+128)
 16533  2617  0859               	movf	calculateCurrent@curr^(0+128),w
 16534  2618  00D5               	movwf	?_calculateCurrent^(0+128)
 16535  2619  0008               	return
 16536  261A                     __end_of_calculateCurrent:	
 16537                           
 16538                           	psect	text50
 16539  03D5                     __ptext50:	
 16540 ;; *************** function ___flmul *****************
 16541 ;; Defined at:
 16542 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;  b               4   50[BANK0 ] float 
 16545 ;;  a               4   54[BANK0 ] float 
 16546 ;; Auto vars:     Size  Location     Type
 16547 ;;  prod            4   70[BANK0 ] struct .
 16548 ;;  grs             4   65[BANK0 ] unsigned long 
 16549 ;;  temp            2   74[BANK0 ] struct .
 16550 ;;  bexp            1   69[BANK0 ] unsigned char 
 16551 ;;  aexp            1   64[BANK0 ] unsigned char 
 16552 ;;  sign            1   63[BANK0 ] unsigned char 
 16553 ;; Return value:  Size  Location     Type
 16554 ;;                  4   50[BANK0 ] unsigned char 
 16555 ;; Registers used:
 16556 ;;		wreg, status,2, status,0, pclath, cstack
 16557 ;; Tracked objects:
 16558 ;;		On entry : 0/0
 16559 ;;		On exit  : 0/0
 16560 ;;		Unchanged: 0/0
 16561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16562 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16563 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16564 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16565 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16566 ;;Total ram usage:       26 bytes
 16567 ;; Hardware stack levels used:    1
 16568 ;; Hardware stack levels required when called:    3
 16569 ;; This function calls:
 16570 ;;		__Umul8_16
 16571 ;; This function is called by:
 16572 ;;		_calculateTemp
 16573 ;;		_calculateCurrent
 16574 ;;		_measureVoltages
 16575 ;;		_fround
 16576 ;;		_scale
 16577 ;;		_sprintf
 16578 ;;		_startUp
 16579 ;; This function uses a non-reentrant model
 16580 ;;
 16581                           
 16582                           
 16583                           ;psect for function ___flmul
 16584  03D5                     ___flmul:	
 16585                           
 16586                           ;incstack = 0
 16587                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 16588  03D5  0020               	movlb	0	; select bank0
 16589  03D6  0855               	movf	___flmul@b+3,w
 16590  03D7  3980               	andlw	128
 16591  03D8  00DA               	movwf	??___flmul
 16592  03D9  085A               	movf	??___flmul,w
 16593  03DA  00DF               	movwf	___flmul@sign
 16594  03DB  3555               	lslf	___flmul@b+3,w
 16595  03DC  00DA               	movwf	??___flmul
 16596  03DD  085A               	movf	??___flmul,w
 16597  03DE  00E5               	movwf	___flmul@bexp
 16598  03DF  1BD4               	btfsc	___flmul@b+2,7
 16599  03E0  1465               	bsf	___flmul@bexp,0
 16600  03E1  0865               	movf	___flmul@bexp,w
 16601  03E2  1903               	btfsc	3,2
 16602  03E3  2BF1               	goto	l6334
 16603  03E4  0A65               	incf	___flmul@bexp,w
 16604  03E5  1D03               	btfss	3,2
 16605  03E6  2BEF               	goto	l6332
 16606  03E7  3000               	movlw	0
 16607  03E8  00D5               	movwf	___flmul@b+3
 16608  03E9  3000               	movlw	0
 16609  03EA  00D4               	movwf	___flmul@b+2
 16610  03EB  3000               	movlw	0
 16611  03EC  00D3               	movwf	___flmul@b+1
 16612  03ED  3000               	movlw	0
 16613  03EE  00D2               	movwf	___flmul@b
 16614  03EF                     l6332:	
 16615  03EF  17D4               	bsf	___flmul@b+2,7
 16616  03F0  2BF9               	goto	l6336
 16617  03F1                     l6334:	
 16618  03F1  3000               	movlw	0
 16619  03F2  00D5               	movwf	___flmul@b+3
 16620  03F3  3000               	movlw	0
 16621  03F4  00D4               	movwf	___flmul@b+2
 16622  03F5  3000               	movlw	0
 16623  03F6  00D3               	movwf	___flmul@b+1
 16624  03F7  3000               	movlw	0
 16625  03F8  00D2               	movwf	___flmul@b
 16626  03F9                     l6336:	
 16627  03F9  0859               	movf	___flmul@a+3,w
 16628  03FA  3980               	andlw	128
 16629  03FB  00DA               	movwf	??___flmul
 16630  03FC  085A               	movf	??___flmul,w
 16631  03FD  06DF               	xorwf	___flmul@sign,f
 16632  03FE  3559               	lslf	___flmul@a+3,w
 16633  03FF  00DA               	movwf	??___flmul
 16634  0400  085A               	movf	??___flmul,w
 16635  0401  00E0               	movwf	___flmul@aexp
 16636  0402  1BD8               	btfsc	___flmul@a+2,7
 16637  0403  1460               	bsf	___flmul@aexp,0
 16638  0404  0860               	movf	___flmul@aexp,w
 16639  0405  1903               	btfsc	3,2
 16640  0406  2C14               	goto	l6352
 16641  0407  0A60               	incf	___flmul@aexp,w
 16642  0408  1D03               	btfss	3,2
 16643  0409  2C12               	goto	l6350
 16644  040A  3000               	movlw	0
 16645  040B  00D9               	movwf	___flmul@a+3
 16646  040C  3000               	movlw	0
 16647  040D  00D8               	movwf	___flmul@a+2
 16648  040E  3000               	movlw	0
 16649  040F  00D7               	movwf	___flmul@a+1
 16650  0410  3000               	movlw	0
 16651  0411  00D6               	movwf	___flmul@a
 16652  0412                     l6350:	
 16653  0412  17D8               	bsf	___flmul@a+2,7
 16654  0413  2C1C               	goto	l6354
 16655  0414                     l6352:	
 16656  0414  3000               	movlw	0
 16657  0415  00D9               	movwf	___flmul@a+3
 16658  0416  3000               	movlw	0
 16659  0417  00D8               	movwf	___flmul@a+2
 16660  0418  3000               	movlw	0
 16661  0419  00D7               	movwf	___flmul@a+1
 16662  041A  3000               	movlw	0
 16663  041B  00D6               	movwf	___flmul@a
 16664  041C                     l6354:	
 16665  041C  0860               	movf	___flmul@aexp,w
 16666  041D  1D03               	btfss	3,2
 16667  041E  0865               	movf	___flmul@bexp,w
 16668  041F  1D03               	btfss	3,2
 16669  0420  2C2A               	goto	l6362
 16670  0421  3000               	movlw	0
 16671  0422  00D5               	movwf	?___flmul+3
 16672  0423  3000               	movlw	0
 16673  0424  00D4               	movwf	?___flmul+2
 16674  0425  3000               	movlw	0
 16675  0426  00D3               	movwf	?___flmul+1
 16676  0427  3000               	movlw	0
 16677  0428  00D2               	movwf	?___flmul
 16678  0429  0008               	return
 16679  042A                     l6362:	
 16680  042A  0852               	movf	___flmul@b,w
 16681  042B  00DA               	movwf	??___flmul
 16682  042C  085A               	movf	??___flmul,w
 16683  042D  00F2               	movwf	__Umul8_16@multiplicand
 16684  042E  0858               	movf	___flmul@a+2,w
 16685  042F  31AE  26EE  3183   	fcall	__Umul8_16
 16686  0432  0873               	movf	?__Umul8_16+1,w
 16687  0433  0020               	movlb	0	; select bank0
 16688  0434  00EB               	movwf	___flmul@temp+1
 16689  0435  0872               	movf	?__Umul8_16,w
 16690  0436  00EA               	movwf	___flmul@temp
 16691  0437  086A               	movf	___flmul@temp,w
 16692  0438  00DA               	movwf	??___flmul
 16693  0439  01DB               	clrf	??___flmul+1
 16694  043A  01DC               	clrf	??___flmul+2
 16695  043B  01DD               	clrf	??___flmul+3
 16696  043C  085D               	movf	??___flmul+3,w
 16697  043D  00E4               	movwf	___flmul@grs+3
 16698  043E  085C               	movf	??___flmul+2,w
 16699  043F  00E3               	movwf	___flmul@grs+2
 16700  0440  085B               	movf	??___flmul+1,w
 16701  0441  00E2               	movwf	___flmul@grs+1
 16702  0442  085A               	movf	??___flmul,w
 16703  0443  00E1               	movwf	___flmul@grs
 16704  0444  086B               	movf	___flmul@temp+1,w
 16705  0445  00DA               	movwf	??___flmul
 16706  0446  01DB               	clrf	??___flmul+1
 16707  0447  01DC               	clrf	??___flmul+2
 16708  0448  01DD               	clrf	??___flmul+3
 16709  0449  085D               	movf	??___flmul+3,w
 16710  044A  00E9               	movwf	___flmul@prod+3
 16711  044B  085C               	movf	??___flmul+2,w
 16712  044C  00E8               	movwf	___flmul@prod+2
 16713  044D  085B               	movf	??___flmul+1,w
 16714  044E  00E7               	movwf	___flmul@prod+1
 16715  044F  085A               	movf	??___flmul,w
 16716  0450  00E6               	movwf	___flmul@prod
 16717  0451  0853               	movf	___flmul@b+1,w
 16718  0452  00DA               	movwf	??___flmul
 16719  0453  085A               	movf	??___flmul,w
 16720  0454  00F2               	movwf	__Umul8_16@multiplicand
 16721  0455  0857               	movf	___flmul@a+1,w
 16722  0456  31AE  26EE  3183   	fcall	__Umul8_16
 16723  0459  0873               	movf	?__Umul8_16+1,w
 16724  045A  0020               	movlb	0	; select bank0
 16725  045B  00EB               	movwf	___flmul@temp+1
 16726  045C  0872               	movf	?__Umul8_16,w
 16727  045D  00EA               	movwf	___flmul@temp
 16728  045E  086A               	movf	___flmul@temp,w
 16729  045F  00DA               	movwf	??___flmul
 16730  0460  01DB               	clrf	??___flmul+1
 16731  0461  01DC               	clrf	??___flmul+2
 16732  0462  01DD               	clrf	??___flmul+3
 16733  0463  085A               	movf	??___flmul,w
 16734  0464  07E1               	addwf	___flmul@grs,f
 16735  0465  085B               	movf	??___flmul+1,w
 16736  0466  3DE2               	addwfc	___flmul@grs+1,f
 16737  0467  085C               	movf	??___flmul+2,w
 16738  0468  3DE3               	addwfc	___flmul@grs+2,f
 16739  0469  085D               	movf	??___flmul+3,w
 16740  046A  3DE4               	addwfc	___flmul@grs+3,f
 16741  046B  086B               	movf	___flmul@temp+1,w
 16742  046C  00DA               	movwf	??___flmul
 16743  046D  01DB               	clrf	??___flmul+1
 16744  046E  01DC               	clrf	??___flmul+2
 16745  046F  01DD               	clrf	??___flmul+3
 16746  0470  085A               	movf	??___flmul,w
 16747  0471  07E6               	addwf	___flmul@prod,f
 16748  0472  085B               	movf	??___flmul+1,w
 16749  0473  3DE7               	addwfc	___flmul@prod+1,f
 16750  0474  085C               	movf	??___flmul+2,w
 16751  0475  3DE8               	addwfc	___flmul@prod+2,f
 16752  0476  085D               	movf	??___flmul+3,w
 16753  0477  3DE9               	addwfc	___flmul@prod+3,f
 16754  0478  0854               	movf	___flmul@b+2,w
 16755  0479  00DA               	movwf	??___flmul
 16756  047A  085A               	movf	??___flmul,w
 16757  047B  00F2               	movwf	__Umul8_16@multiplicand
 16758  047C  0856               	movf	___flmul@a,w
 16759  047D  31AE  26EE  3183   	fcall	__Umul8_16
 16760  0480  0873               	movf	?__Umul8_16+1,w
 16761  0481  0020               	movlb	0	; select bank0
 16762  0482  00EB               	movwf	___flmul@temp+1
 16763  0483  0872               	movf	?__Umul8_16,w
 16764  0484  00EA               	movwf	___flmul@temp
 16765  0485  086A               	movf	___flmul@temp,w
 16766  0486  00DA               	movwf	??___flmul
 16767  0487  01DB               	clrf	??___flmul+1
 16768  0488  01DC               	clrf	??___flmul+2
 16769  0489  01DD               	clrf	??___flmul+3
 16770  048A  085A               	movf	??___flmul,w
 16771  048B  07E1               	addwf	___flmul@grs,f
 16772  048C  085B               	movf	??___flmul+1,w
 16773  048D  3DE2               	addwfc	___flmul@grs+1,f
 16774  048E  085C               	movf	??___flmul+2,w
 16775  048F  3DE3               	addwfc	___flmul@grs+2,f
 16776  0490  085D               	movf	??___flmul+3,w
 16777  0491  3DE4               	addwfc	___flmul@grs+3,f
 16778  0492  086B               	movf	___flmul@temp+1,w
 16779  0493  00DA               	movwf	??___flmul
 16780  0494  01DB               	clrf	??___flmul+1
 16781  0495  01DC               	clrf	??___flmul+2
 16782  0496  01DD               	clrf	??___flmul+3
 16783  0497  085A               	movf	??___flmul,w
 16784  0498  07E6               	addwf	___flmul@prod,f
 16785  0499  085B               	movf	??___flmul+1,w
 16786  049A  3DE7               	addwfc	___flmul@prod+1,f
 16787  049B  085C               	movf	??___flmul+2,w
 16788  049C  3DE8               	addwfc	___flmul@prod+2,f
 16789  049D  085D               	movf	??___flmul+3,w
 16790  049E  3DE9               	addwfc	___flmul@prod+3,f
 16791  049F  3008               	movlw	8
 16792  04A0                     u8485:	
 16793  04A0  35E1               	lslf	___flmul@grs,f
 16794  04A1  0DE2               	rlf	___flmul@grs+1,f
 16795  04A2  0DE3               	rlf	___flmul@grs+2,f
 16796  04A3  0DE4               	rlf	___flmul@grs+3,f
 16797  04A4  0B89               	decfsz	9,f
 16798  04A5  2CA0               	goto	u8485
 16799  04A6  0853               	movf	___flmul@b+1,w
 16800  04A7  00DA               	movwf	??___flmul
 16801  04A8  085A               	movf	??___flmul,w
 16802  04A9  00F2               	movwf	__Umul8_16@multiplicand
 16803  04AA  0856               	movf	___flmul@a,w
 16804  04AB  31AE  26EE  3183   	fcall	__Umul8_16
 16805  04AE  0873               	movf	?__Umul8_16+1,w
 16806  04AF  0020               	movlb	0	; select bank0
 16807  04B0  00EB               	movwf	___flmul@temp+1
 16808  04B1  0872               	movf	?__Umul8_16,w
 16809  04B2  00EA               	movwf	___flmul@temp
 16810  04B3  086A               	movf	___flmul@temp,w
 16811  04B4  07E1               	addwf	___flmul@grs,f
 16812  04B5  086B               	movf	___flmul@temp+1,w
 16813  04B6  3DE2               	addwfc	___flmul@grs+1,f
 16814  04B7  3000               	movlw	0
 16815  04B8  3DE3               	addwfc	___flmul@grs+2,f
 16816  04B9  3DE4               	addwfc	___flmul@grs+3,f
 16817  04BA  0852               	movf	___flmul@b,w
 16818  04BB  00DA               	movwf	??___flmul
 16819  04BC  085A               	movf	??___flmul,w
 16820  04BD  00F2               	movwf	__Umul8_16@multiplicand
 16821  04BE  0857               	movf	___flmul@a+1,w
 16822  04BF  31AE  26EE  3183   	fcall	__Umul8_16
 16823  04C2  0873               	movf	?__Umul8_16+1,w
 16824  04C3  0020               	movlb	0	; select bank0
 16825  04C4  00EB               	movwf	___flmul@temp+1
 16826  04C5  0872               	movf	?__Umul8_16,w
 16827  04C6  00EA               	movwf	___flmul@temp
 16828  04C7  086A               	movf	___flmul@temp,w
 16829  04C8  07E1               	addwf	___flmul@grs,f
 16830  04C9  086B               	movf	___flmul@temp+1,w
 16831  04CA  3DE2               	addwfc	___flmul@grs+1,f
 16832  04CB  3000               	movlw	0
 16833  04CC  3DE3               	addwfc	___flmul@grs+2,f
 16834  04CD  3DE4               	addwfc	___flmul@grs+3,f
 16835  04CE  3008               	movlw	8
 16836  04CF                     u8495:	
 16837  04CF  35E1               	lslf	___flmul@grs,f
 16838  04D0  0DE2               	rlf	___flmul@grs+1,f
 16839  04D1  0DE3               	rlf	___flmul@grs+2,f
 16840  04D2  0DE4               	rlf	___flmul@grs+3,f
 16841  04D3  0B89               	decfsz	9,f
 16842  04D4  2CCF               	goto	u8495
 16843  04D5  0852               	movf	___flmul@b,w
 16844  04D6  00DA               	movwf	??___flmul
 16845  04D7  085A               	movf	??___flmul,w
 16846  04D8  00F2               	movwf	__Umul8_16@multiplicand
 16847  04D9  0856               	movf	___flmul@a,w
 16848  04DA  31AE  26EE  3183   	fcall	__Umul8_16
 16849  04DD  0873               	movf	?__Umul8_16+1,w
 16850  04DE  0020               	movlb	0	; select bank0
 16851  04DF  00EB               	movwf	___flmul@temp+1
 16852  04E0  0872               	movf	?__Umul8_16,w
 16853  04E1  00EA               	movwf	___flmul@temp
 16854  04E2  086A               	movf	___flmul@temp,w
 16855  04E3  07E1               	addwf	___flmul@grs,f
 16856  04E4  086B               	movf	___flmul@temp+1,w
 16857  04E5  3DE2               	addwfc	___flmul@grs+1,f
 16858  04E6  3000               	movlw	0
 16859  04E7  3DE3               	addwfc	___flmul@grs+2,f
 16860  04E8  3DE4               	addwfc	___flmul@grs+3,f
 16861  04E9  0853               	movf	___flmul@b+1,w
 16862  04EA  00DA               	movwf	??___flmul
 16863  04EB  085A               	movf	??___flmul,w
 16864  04EC  00F2               	movwf	__Umul8_16@multiplicand
 16865  04ED  0858               	movf	___flmul@a+2,w
 16866  04EE  31AE  26EE  3183   	fcall	__Umul8_16
 16867  04F1  0873               	movf	?__Umul8_16+1,w
 16868  04F2  0020               	movlb	0	; select bank0
 16869  04F3  00EB               	movwf	___flmul@temp+1
 16870  04F4  0872               	movf	?__Umul8_16,w
 16871  04F5  00EA               	movwf	___flmul@temp
 16872  04F6  086A               	movf	___flmul@temp,w
 16873  04F7  07E6               	addwf	___flmul@prod,f
 16874  04F8  086B               	movf	___flmul@temp+1,w
 16875  04F9  3DE7               	addwfc	___flmul@prod+1,f
 16876  04FA  3000               	movlw	0
 16877  04FB  3DE8               	addwfc	___flmul@prod+2,f
 16878  04FC  3DE9               	addwfc	___flmul@prod+3,f
 16879  04FD  0854               	movf	___flmul@b+2,w
 16880  04FE  00DA               	movwf	??___flmul
 16881  04FF  085A               	movf	??___flmul,w
 16882  0500  00F2               	movwf	__Umul8_16@multiplicand
 16883  0501  0857               	movf	___flmul@a+1,w
 16884  0502  31AE  26EE  3183   	fcall	__Umul8_16
 16885  0505  0873               	movf	?__Umul8_16+1,w
 16886  0506  0020               	movlb	0	; select bank0
 16887  0507  00EB               	movwf	___flmul@temp+1
 16888  0508  0872               	movf	?__Umul8_16,w
 16889  0509  00EA               	movwf	___flmul@temp
 16890  050A  086A               	movf	___flmul@temp,w
 16891  050B  07E6               	addwf	___flmul@prod,f
 16892  050C  086B               	movf	___flmul@temp+1,w
 16893  050D  3DE7               	addwfc	___flmul@prod+1,f
 16894  050E  3000               	movlw	0
 16895  050F  3DE8               	addwfc	___flmul@prod+2,f
 16896  0510  3DE9               	addwfc	___flmul@prod+3,f
 16897  0511  0854               	movf	___flmul@b+2,w
 16898  0512  00DA               	movwf	??___flmul
 16899  0513  085A               	movf	??___flmul,w
 16900  0514  00F2               	movwf	__Umul8_16@multiplicand
 16901  0515  0858               	movf	___flmul@a+2,w
 16902  0516  31AE  26EE  3183   	fcall	__Umul8_16
 16903  0519  0873               	movf	?__Umul8_16+1,w
 16904  051A  0020               	movlb	0	; select bank0
 16905  051B  00EB               	movwf	___flmul@temp+1
 16906  051C  0872               	movf	?__Umul8_16,w
 16907  051D  00EA               	movwf	___flmul@temp
 16908  051E  086A               	movf	___flmul@temp,w
 16909  051F  00DA               	movwf	??___flmul
 16910  0520  086B               	movf	___flmul@temp+1,w
 16911  0521  00DB               	movwf	??___flmul+1
 16912  0522  01DC               	clrf	??___flmul+2
 16913  0523  01DD               	clrf	??___flmul+3
 16914  0524  3008               	movlw	8
 16915  0525                     u8505:	
 16916  0525  35DA               	lslf	??___flmul,f
 16917  0526  0DDB               	rlf	??___flmul+1,f
 16918  0527  0DDC               	rlf	??___flmul+2,f
 16919  0528  0DDD               	rlf	??___flmul+3,f
 16920  0529  0B89               	decfsz	9,f
 16921  052A  2D25               	goto	u8505
 16922  052B  085A               	movf	??___flmul,w
 16923  052C  07E6               	addwf	___flmul@prod,f
 16924  052D  085B               	movf	??___flmul+1,w
 16925  052E  3DE7               	addwfc	___flmul@prod+1,f
 16926  052F  085C               	movf	??___flmul+2,w
 16927  0530  3DE8               	addwfc	___flmul@prod+2,f
 16928  0531  085D               	movf	??___flmul+3,w
 16929  0532  3DE9               	addwfc	___flmul@prod+3,f
 16930  0533  0861               	movf	___flmul@grs,w
 16931  0534  00DA               	movwf	??___flmul
 16932  0535  0862               	movf	___flmul@grs+1,w
 16933  0536  00DB               	movwf	??___flmul+1
 16934  0537  0863               	movf	___flmul@grs+2,w
 16935  0538  00DC               	movwf	??___flmul+2
 16936  0539  0864               	movf	___flmul@grs+3,w
 16937  053A  00DD               	movwf	??___flmul+3
 16938  053B  3018               	movlw	24
 16939  053C                     u8515:	
 16940  053C  36DD               	lsrf	??___flmul+3,f
 16941  053D  0CDC               	rrf	??___flmul+2,f
 16942  053E  0CDB               	rrf	??___flmul+1,f
 16943  053F  0CDA               	rrf	??___flmul,f
 16944  0540  0B89               	decfsz	9,f
 16945  0541  2D3C               	goto	u8515
 16946  0542  085A               	movf	??___flmul,w
 16947  0543  07E6               	addwf	___flmul@prod,f
 16948  0544  085B               	movf	??___flmul+1,w
 16949  0545  3DE7               	addwfc	___flmul@prod+1,f
 16950  0546  085C               	movf	??___flmul+2,w
 16951  0547  3DE8               	addwfc	___flmul@prod+2,f
 16952  0548  085D               	movf	??___flmul+3,w
 16953  0549  3DE9               	addwfc	___flmul@prod+3,f
 16954  054A  3008               	movlw	8
 16955  054B                     u8525:	
 16956  054B  35E1               	lslf	___flmul@grs,f
 16957  054C  0DE2               	rlf	___flmul@grs+1,f
 16958  054D  0DE3               	rlf	___flmul@grs+2,f
 16959  054E  0DE4               	rlf	___flmul@grs+3,f
 16960  054F  0B89               	decfsz	9,f
 16961  0550  2D4B               	goto	u8525
 16962  0551  0865               	movf	___flmul@bexp,w
 16963  0552  0760               	addwf	___flmul@aexp,w
 16964  0553  00DA               	movwf	??___flmul
 16965  0554  01DB               	clrf	??___flmul+1
 16966  0555  0DDB               	rlf	??___flmul+1,f
 16967  0556  085A               	movf	??___flmul,w
 16968  0557  3E82               	addlw	130
 16969  0558  00EA               	movwf	___flmul@temp
 16970  0559  30FF               	movlw	255
 16971  055A  3D5B               	addwfc	??___flmul+1,w
 16972  055B  00EB               	movwf	___flmul@temp+1
 16973  055C                     l6414:	
 16974  055C  1BE8               	btfsc	___flmul@prod+2,7
 16975  055D  2D73               	goto	l6416
 16976  055E  3001               	movlw	1
 16977  055F                     u8535:	
 16978  055F  35E6               	lslf	___flmul@prod,f
 16979  0560  0DE7               	rlf	___flmul@prod+1,f
 16980  0561  0DE8               	rlf	___flmul@prod+2,f
 16981  0562  0DE9               	rlf	___flmul@prod+3,f
 16982  0563  0B89               	decfsz	9,f
 16983  0564  2D5F               	goto	u8535
 16984  0565  1BE4               	btfsc	___flmul@grs+3,7
 16985  0566  1466               	bsf	___flmul@prod,0
 16986  0567  3001               	movlw	1
 16987  0568                     u8555:	
 16988  0568  35E1               	lslf	___flmul@grs,f
 16989  0569  0DE2               	rlf	___flmul@grs+1,f
 16990  056A  0DE3               	rlf	___flmul@grs+2,f
 16991  056B  0DE4               	rlf	___flmul@grs+3,f
 16992  056C  0B89               	decfsz	9,f
 16993  056D  2D68               	goto	u8555
 16994  056E  30FF               	movlw	255
 16995  056F  07EA               	addwf	___flmul@temp,f
 16996  0570  30FF               	movlw	255
 16997  0571  3DEB               	addwfc	___flmul@temp+1,f
 16998  0572  2D5C               	goto	l6414
 16999  0573                     l6416:	
 17000  0573  01E0               	clrf	___flmul@aexp
 17001  0574  1FE4               	btfss	___flmul@grs+3,7
 17002  0575  2D8C               	goto	l6426
 17003  0576  30FF               	movlw	255
 17004  0577  0561               	andwf	___flmul@grs,w
 17005  0578  00DA               	movwf	??___flmul
 17006  0579  30FF               	movlw	255
 17007  057A  0562               	andwf	___flmul@grs+1,w
 17008  057B  00DB               	movwf	??___flmul+1
 17009  057C  30FF               	movlw	255
 17010  057D  0563               	andwf	___flmul@grs+2,w
 17011  057E  00DC               	movwf	??___flmul+2
 17012  057F  307F               	movlw	127
 17013  0580  0564               	andwf	___flmul@grs+3,w
 17014  0581  00DD               	movwf	??___flmul+3
 17015  0582  085D               	movf	??___flmul+3,w
 17016  0583  045C               	iorwf	??___flmul+2,w
 17017  0584  045B               	iorwf	??___flmul+1,w
 17018  0585  045A               	iorwf	??___flmul,w
 17019  0586  1D03               	btfss	3,2
 17020  0587  2D8A               	goto	l6424
 17021  0588  1C66               	btfss	___flmul@prod,0
 17022  0589  2D8C               	goto	l6426
 17023  058A                     l6424:	
 17024  058A  01E0               	clrf	___flmul@aexp
 17025  058B  0AE0               	incf	___flmul@aexp,f
 17026  058C                     l6426:	
 17027  058C  0860               	movf	___flmul@aexp,w
 17028  058D  1903               	btfsc	3,2
 17029  058E  2DB5               	goto	l6436
 17030  058F  3001               	movlw	1
 17031  0590  07E6               	addwf	___flmul@prod,f
 17032  0591  3000               	movlw	0
 17033  0592  3DE7               	addwfc	___flmul@prod+1,f
 17034  0593  3000               	movlw	0
 17035  0594  3DE8               	addwfc	___flmul@prod+2,f
 17036  0595  3000               	movlw	0
 17037  0596  3DE9               	addwfc	___flmul@prod+3,f
 17038  0597  1C69               	btfss	___flmul@prod+3,0
 17039  0598  2DB5               	goto	l6436
 17040  0599  0866               	movf	___flmul@prod,w
 17041  059A  00DA               	movwf	??___flmul
 17042  059B  0867               	movf	___flmul@prod+1,w
 17043  059C  00DB               	movwf	??___flmul+1
 17044  059D  0868               	movf	___flmul@prod+2,w
 17045  059E  00DC               	movwf	??___flmul+2
 17046  059F  0869               	movf	___flmul@prod+3,w
 17047  05A0  00DD               	movwf	??___flmul+3
 17048  05A1  3001               	movlw	1
 17049  05A2  00DE               	movwf	??___flmul+4
 17050  05A3                     u8625:	
 17051  05A3  37DD               	asrf	??___flmul+3,f
 17052  05A4  0CDC               	rrf	??___flmul+2,f
 17053  05A5  0CDB               	rrf	??___flmul+1,f
 17054  05A6  0CDA               	rrf	??___flmul,f
 17055  05A7  0BDE               	decfsz	??___flmul+4,f
 17056  05A8  2DA3               	goto	u8625
 17057  05A9  085D               	movf	??___flmul+3,w
 17058  05AA  00E9               	movwf	___flmul@prod+3
 17059  05AB  085C               	movf	??___flmul+2,w
 17060  05AC  00E8               	movwf	___flmul@prod+2
 17061  05AD  085B               	movf	??___flmul+1,w
 17062  05AE  00E7               	movwf	___flmul@prod+1
 17063  05AF  085A               	movf	??___flmul,w
 17064  05B0  00E6               	movwf	___flmul@prod
 17065  05B1  3001               	movlw	1
 17066  05B2  07EA               	addwf	___flmul@temp,f
 17067  05B3  3000               	movlw	0
 17068  05B4  3DEB               	addwfc	___flmul@temp+1,f
 17069  05B5                     l6436:	
 17070  05B5  086B               	movf	___flmul@temp+1,w
 17071  05B6  3A80               	xorlw	128
 17072  05B7  00DA               	movwf	??___flmul
 17073  05B8  3080               	movlw	128
 17074  05B9  025A               	subwf	??___flmul,w
 17075  05BA  1D03               	skipz
 17076  05BB  2DBE               	goto	u8635
 17077  05BC  30FF               	movlw	255
 17078  05BD  026A               	subwf	___flmul@temp,w
 17079  05BE                     u8635:	
 17080  05BE  1C03               	skipc
 17081  05BF  2DCA               	goto	l6440
 17082  05C0  307F               	movlw	127
 17083  05C1  0020               	movlb	0	; select bank0
 17084  05C2  00E9               	movwf	___flmul@prod+3
 17085  05C3  3080               	movlw	128
 17086  05C4  00E8               	movwf	___flmul@prod+2
 17087  05C5  3000               	movlw	0
 17088  05C6  00E7               	movwf	___flmul@prod+1
 17089  05C7  3000               	movlw	0
 17090  05C8  00E6               	movwf	___flmul@prod
 17091  05C9  2DF4               	goto	l1334
 17092  05CA                     l6440:	
 17093  05CA  0020               	movlb	0	; select bank0
 17094  05CB  086B               	movf	___flmul@temp+1,w
 17095  05CC  3A80               	xorlw	128
 17096  05CD  00DA               	movwf	??___flmul
 17097  05CE  3080               	movlw	128
 17098  05CF  025A               	subwf	??___flmul,w
 17099  05D0  1D03               	skipz
 17100  05D1  2DD4               	goto	u8645
 17101  05D2  3001               	movlw	1
 17102  05D3  026A               	subwf	___flmul@temp,w
 17103  05D4                     u8645:	
 17104  05D4  1803               	skipnc
 17105  05D5  2DE1               	goto	l6446
 17106  05D6  3000               	movlw	0
 17107  05D7  0020               	movlb	0	; select bank0
 17108  05D8  00E9               	movwf	___flmul@prod+3
 17109  05D9  3000               	movlw	0
 17110  05DA  00E8               	movwf	___flmul@prod+2
 17111  05DB  3000               	movlw	0
 17112  05DC  00E7               	movwf	___flmul@prod+1
 17113  05DD  3000               	movlw	0
 17114  05DE  00E6               	movwf	___flmul@prod
 17115  05DF  01DF               	clrf	___flmul@sign
 17116  05E0  2DF4               	goto	l1334
 17117  05E1                     l6446:	
 17118  05E1  0020               	movlb	0	; select bank0
 17119  05E2  086A               	movf	___flmul@temp,w
 17120  05E3  00DA               	movwf	??___flmul
 17121  05E4  085A               	movf	??___flmul,w
 17122  05E5  00E5               	movwf	___flmul@bexp
 17123  05E6  30FF               	movlw	255
 17124  05E7  05E6               	andwf	___flmul@prod,f
 17125  05E8  30FF               	movlw	255
 17126  05E9  05E7               	andwf	___flmul@prod+1,f
 17127  05EA  307F               	movlw	127
 17128  05EB  05E8               	andwf	___flmul@prod+2,f
 17129  05EC  3000               	movlw	0
 17130  05ED  05E9               	andwf	___flmul@prod+3,f
 17131  05EE  1865               	btfsc	___flmul@bexp,0
 17132  05EF  17E8               	bsf	___flmul@prod+2,7
 17133  05F0  3665               	lsrf	___flmul@bexp,w
 17134  05F1  00DA               	movwf	??___flmul
 17135  05F2  085A               	movf	??___flmul,w
 17136  05F3  00E9               	movwf	___flmul@prod+3
 17137  05F4                     l1334:	
 17138  05F4  085F               	movf	___flmul@sign,w
 17139  05F5  00DA               	movwf	??___flmul
 17140  05F6  085A               	movf	??___flmul,w
 17141  05F7  04E9               	iorwf	___flmul@prod+3,f
 17142  05F8  0869               	movf	___flmul@prod+3,w
 17143  05F9  00D5               	movwf	?___flmul+3
 17144  05FA  0868               	movf	___flmul@prod+2,w
 17145  05FB  00D4               	movwf	?___flmul+2
 17146  05FC  0867               	movf	___flmul@prod+1,w
 17147  05FD  00D3               	movwf	?___flmul+1
 17148  05FE  0866               	movf	___flmul@prod,w
 17149  05FF  00D2               	movwf	?___flmul
 17150  0600  0008               	return
 17151  0601                     __end_of___flmul:	
 17152                           
 17153                           	psect	text51
 17154  2EEE                     __ptext51:	
 17155 ;; *************** function __Umul8_16 *****************
 17156 ;; Defined at:
 17157 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;  multiplier      1    wreg     unsigned char 
 17160 ;;  multiplicand    1    2[COMMON] unsigned char 
 17161 ;; Auto vars:     Size  Location     Type
 17162 ;;  multiplier      1    4[BANK0 ] unsigned char 
 17163 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 17164 ;;  product         2    0[BANK0 ] unsigned int 
 17165 ;; Return value:  Size  Location     Type
 17166 ;;                  2    2[COMMON] unsigned int 
 17167 ;; Registers used:
 17168 ;;		wreg, status,2, status,0
 17169 ;; Tracked objects:
 17170 ;;		On entry : 0/0
 17171 ;;		On exit  : 0/0
 17172 ;;		Unchanged: 0/0
 17173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17175 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17177 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17178 ;;Total ram usage:        9 bytes
 17179 ;; Hardware stack levels used:    1
 17180 ;; Hardware stack levels required when called:    2
 17181 ;; This function calls:
 17182 ;;		Nothing
 17183 ;; This function is called by:
 17184 ;;		___flmul
 17185 ;; This function uses a non-reentrant model
 17186 ;;
 17187                           
 17188                           
 17189                           ;psect for function __Umul8_16
 17190  2EEE                     __Umul8_16:	
 17191                           
 17192                           ;incstack = 0
 17193                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 17194                           ;__Umul8_16@multiplier stored from wreg
 17195  2EEE  0020               	movlb	0	; select bank0
 17196  2EEF  00A4               	movwf	__Umul8_16@multiplier
 17197  2EF0  01A0               	clrf	__Umul8_16@product
 17198  2EF1  01A1               	clrf	__Umul8_16@product+1
 17199  2EF2  0872               	movf	__Umul8_16@multiplicand,w
 17200  2EF3  00F4               	movwf	??__Umul8_16
 17201  2EF4  01F5               	clrf	??__Umul8_16+1
 17202  2EF5  0874               	movf	??__Umul8_16,w
 17203  2EF6  00A2               	movwf	__Umul8_16@word_mpld
 17204  2EF7  0875               	movf	??__Umul8_16+1,w
 17205  2EF8  00A3               	movwf	__Umul8_16@word_mpld+1
 17206  2EF9                     l6032:	
 17207  2EF9  1C24               	btfss	__Umul8_16@multiplier,0
 17208  2EFA  2EFF               	goto	l1360
 17209  2EFB  0822               	movf	__Umul8_16@word_mpld,w
 17210  2EFC  07A0               	addwf	__Umul8_16@product,f
 17211  2EFD  0823               	movf	__Umul8_16@word_mpld+1,w
 17212  2EFE  3DA1               	addwfc	__Umul8_16@product+1,f
 17213  2EFF                     l1360:	
 17214  2EFF  3001               	movlw	1
 17215  2F00                     u7765:	
 17216  2F00  35A2               	lslf	__Umul8_16@word_mpld,f
 17217  2F01  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 17218  2F02  0B89               	decfsz	9,f
 17219  2F03  2F00               	goto	u7765
 17220  2F04  1003               	clrc
 17221  2F05  0CA4               	rrf	__Umul8_16@multiplier,f
 17222  2F06  0824               	movf	__Umul8_16@multiplier,w
 17223  2F07  1D03               	btfss	3,2
 17224  2F08  2EF9               	goto	l6032
 17225  2F09  0821               	movf	__Umul8_16@product+1,w
 17226  2F0A  00F3               	movwf	?__Umul8_16+1
 17227  2F0B  0820               	movf	__Umul8_16@product,w
 17228  2F0C  00F2               	movwf	?__Umul8_16
 17229  2F0D  0008               	return
 17230  2F0E                     __end_of__Umul8_16:	
 17231                           
 17232                           	psect	text52
 17233  2282                     __ptext52:	
 17234 ;; *************** function _adcRead *****************
 17235 ;; Defined at:
 17236 ;;		line 50 in file "adc.c"
 17237 ;; Parameters:    Size  Location     Type
 17238 ;;  ch              1    wreg     unsigned char 
 17239 ;; Auto vars:     Size  Location     Type
 17240 ;;  ch              1    7[BANK0 ] unsigned char 
 17241 ;;  total           2   12[BANK0 ] int 
 17242 ;;  ansLow          2   10[BANK0 ] int 
 17243 ;;  ansHigh         2    8[BANK0 ] int 
 17244 ;; Return value:  Size  Location     Type
 17245 ;;                  2    2[COMMON] int 
 17246 ;; Registers used:
 17247 ;;		wreg, status,2, status,0
 17248 ;; Tracked objects:
 17249 ;;		On entry : 0/0
 17250 ;;		On exit  : 0/0
 17251 ;;		Unchanged: 0/0
 17252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17253 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17254 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17255 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17256 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17257 ;;Total ram usage:       16 bytes
 17258 ;; Hardware stack levels used:    1
 17259 ;; Hardware stack levels required when called:    2
 17260 ;; This function calls:
 17261 ;;		Nothing
 17262 ;; This function is called by:
 17263 ;;		_getCurrent
 17264 ;;		_getTemps
 17265 ;; This function uses a non-reentrant model
 17266 ;;
 17267                           
 17268                           
 17269                           ;psect for function _adcRead
 17270  2282                     _adcRead:	
 17271                           
 17272                           ;incstack = 0
 17273                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 17274                           ;adcRead@ch stored from wreg
 17275  2282  0020               	movlb	0	; select bank0
 17276  2283  00A7               	movwf	adcRead@ch
 17277                           
 17278                           ;adc.c: 51: ADCON0bits.CHS = ch;
 17279  2284  0827               	movf	adcRead@ch,w
 17280  2285  00A0               	movwf	??_adcRead
 17281  2286  0DA0               	rlf	??_adcRead,f
 17282  2287  0DA0               	rlf	??_adcRead,f
 17283  2288  0021               	movlb	1	; select bank1
 17284  2289  081D               	movf	29,w	;volatile
 17285  228A  0020               	movlb	0	; select bank0
 17286  228B  0620               	xorwf	??_adcRead,w
 17287  228C  3983               	andlw	-125
 17288  228D  0620               	xorwf	??_adcRead,w
 17289  228E  0021               	movlb	1	; select bank1
 17290  228F  009D               	movwf	29	;volatile
 17291                           
 17292                           ;adc.c: 52: ADCON0bits.ADON = 1;
 17293  2290  141D               	bsf	29,0	;volatile
 17294                           
 17295                           ;adc.c: 54: _delay((unsigned long)((100)*(32000000/4000000.0)));
 17296  2291  30A0               	movlw	160
 17297  2292                     u10877:	
 17298  2292  3200               	nop2
 17299  2293  0B89               	decfsz	9,f
 17300  2294  2A92               	goto	u10877
 17301                           
 17302                           ;adc.c: 55: ADCON0bits.GO = 1;
 17303  2295  0021               	movlb	1	; select bank1
 17304  2296  149D               	bsf	29,1	;volatile
 17305  2297                     l193:	
 17306                           ;adc.c: 57: while(ADCON0bits.DONE == 1);
 17307                           
 17308  2297  189D               	btfsc	29,1	;volatile
 17309  2298  2A97               	goto	l193
 17310                           
 17311                           ;adc.c: 59: int ansHigh = ADRESH;
 17312  2299  081C               	movf	28,w	;volatile
 17313  229A  0020               	movlb	0	; select bank0
 17314  229B  00A0               	movwf	??_adcRead
 17315  229C  01A1               	clrf	??_adcRead+1
 17316  229D  0820               	movf	??_adcRead,w
 17317  229E  00A8               	movwf	adcRead@ansHigh
 17318  229F  0821               	movf	??_adcRead+1,w
 17319  22A0  00A9               	movwf	adcRead@ansHigh+1
 17320                           
 17321                           ;adc.c: 60: int ansLow = ADRESL;
 17322  22A1  0021               	movlb	1	; select bank1
 17323  22A2  081B               	movf	27,w	;volatile
 17324  22A3  0020               	movlb	0	; select bank0
 17325  22A4  00A0               	movwf	??_adcRead
 17326  22A5  01A1               	clrf	??_adcRead+1
 17327  22A6  0820               	movf	??_adcRead,w
 17328  22A7  00AA               	movwf	adcRead@ansLow
 17329  22A8  0821               	movf	??_adcRead+1,w
 17330  22A9  00AB               	movwf	adcRead@ansLow+1
 17331                           
 17332                           ;adc.c: 62: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 17333  22AA  082B               	movf	adcRead@ansLow+1,w
 17334  22AB  00A1               	movwf	??_adcRead+1
 17335  22AC  082A               	movf	adcRead@ansLow,w
 17336  22AD  00A0               	movwf	??_adcRead
 17337  22AE  3004               	movlw	4
 17338  22AF  00A2               	movwf	??_adcRead+2
 17339  22B0                     u10095:	
 17340  22B0  0D21               	rlf	??_adcRead+1,w
 17341  22B1  0CA1               	rrf	??_adcRead+1,f
 17342  22B2  0CA0               	rrf	??_adcRead,f
 17343  22B3  0BA2               	decfsz	??_adcRead+2,f
 17344  22B4  2AB0               	goto	u10095
 17345  22B5  30FF               	movlw	255
 17346  22B6  0520               	andwf	??_adcRead,w
 17347  22B7  00A3               	movwf	??_adcRead+3
 17348  22B8  300F               	movlw	15
 17349  22B9  0521               	andwf	??_adcRead+1,w
 17350  22BA  00A4               	movwf	??_adcRead+4
 17351  22BB  0829               	movf	adcRead@ansHigh+1,w
 17352  22BC  00A6               	movwf	??_adcRead+6
 17353  22BD  0828               	movf	adcRead@ansHigh,w
 17354  22BE  00A5               	movwf	??_adcRead+5
 17355  22BF  0EA5               	swapf	??_adcRead+5,f
 17356  22C0  0EA6               	swapf	??_adcRead+6,f
 17357  22C1  30F0               	movlw	240
 17358  22C2  05A6               	andwf	??_adcRead+6,f
 17359  22C3  0825               	movf	??_adcRead+5,w
 17360  22C4  390F               	andlw	15
 17361  22C5  04A6               	iorwf	??_adcRead+6,f
 17362  22C6  30F0               	movlw	240
 17363  22C7  05A5               	andwf	??_adcRead+5,f
 17364  22C8  0823               	movf	??_adcRead+3,w
 17365  22C9  0425               	iorwf	??_adcRead+5,w
 17366  22CA  00AC               	movwf	adcRead@total
 17367  22CB  0824               	movf	??_adcRead+4,w
 17368  22CC  0426               	iorwf	??_adcRead+6,w
 17369  22CD  00AD               	movwf	adcRead@total+1
 17370                           
 17371                           ;adc.c: 63: ADCON0bits.ADON = 0;
 17372  22CE  0021               	movlb	1	; select bank1
 17373  22CF  101D               	bcf	29,0	;volatile
 17374                           
 17375                           ;adc.c: 64: return total;
 17376  22D0  0020               	movlb	0	; select bank0
 17377  22D1  082D               	movf	adcRead@total+1,w
 17378  22D2  00F3               	movwf	?_adcRead+1
 17379  22D3  082C               	movf	adcRead@total,w
 17380  22D4  00F2               	movwf	?_adcRead
 17381  22D5  0008               	return
 17382  22D6                     __end_of_adcRead:	
 17383                           
 17384                           	psect	text53
 17385  2483                     __ptext53:	
 17386 ;; *************** function _avgBuff *****************
 17387 ;; Defined at:
 17388 ;;		line 68 in file "adc.c"
 17389 ;; Parameters:    Size  Location     Type
 17390 ;;  buff            1    wreg     PTR float 
 17391 ;;		 -> currentBuff(80), 
 17392 ;;  size            2   53[BANK1 ] int 
 17393 ;; Auto vars:     Size  Location     Type
 17394 ;;  buff            1   59[BANK1 ] PTR float 
 17395 ;;		 -> currentBuff(80), 
 17396 ;;  total           4   60[BANK1 ] float 
 17397 ;;  inc             2   64[BANK1 ] int 
 17398 ;; Return value:  Size  Location     Type
 17399 ;;                  4   53[BANK1 ] float 
 17400 ;; Registers used:
 17401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17402 ;; Tracked objects:
 17403 ;;		On entry : 0/0
 17404 ;;		On exit  : 0/0
 17405 ;;		Unchanged: 0/0
 17406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17407 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17408 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17409 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17410 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17411 ;;Total ram usage:       13 bytes
 17412 ;; Hardware stack levels used:    1
 17413 ;; Hardware stack levels required when called:    3
 17414 ;; This function calls:
 17415 ;;		___fladd
 17416 ;;		___fldiv
 17417 ;;		___xxtofl
 17418 ;; This function is called by:
 17419 ;;		_main
 17420 ;; This function uses a non-reentrant model
 17421 ;;
 17422                           
 17423                           
 17424                           ;psect for function _avgBuff
 17425  2483                     _avgBuff:	
 17426                           
 17427                           ;incstack = 0
 17428                           ; Regs used in _avgBuff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 17429                           ;avgBuff@buff stored from wreg
 17430  2483  0021               	movlb	1	; select bank1
 17431  2484  00DB               	movwf	avgBuff@buff^(0+128)
 17432                           
 17433                           ;adc.c: 69: int inc = 0;
 17434  2485  01E0               	clrf	avgBuff@inc^(0+128)
 17435  2486  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 17436                           
 17437                           ;adc.c: 70: float total = 0;
 17438  2487  3000               	movlw	0
 17439  2488  00DF               	movwf	(avgBuff@total+3)^(0+128)
 17440  2489  3000               	movlw	0
 17441  248A  00DE               	movwf	(avgBuff@total+2)^(0+128)
 17442  248B  3000               	movlw	0
 17443  248C  00DD               	movwf	(avgBuff@total+1)^(0+128)
 17444  248D  3000               	movlw	0
 17445  248E  00DC               	movwf	avgBuff@total^(0+128)
 17446                           
 17447                           ;adc.c: 71: for(inc = 0; inc < size; inc++){
 17448  248F  01E0               	clrf	avgBuff@inc^(0+128)
 17449  2490  01E1               	clrf	(avgBuff@inc+1)^(0+128)
 17450  2491                     l7426:	
 17451  2491  0861               	movf	(avgBuff@inc+1)^(0+128),w
 17452  2492  3A80               	xorlw	128
 17453  2493  00D9               	movwf	??_avgBuff^(0+128)
 17454  2494  0856               	movf	(avgBuff@size+1)^(0+128),w
 17455  2495  3A80               	xorlw	128
 17456  2496  0259               	subwf	??_avgBuff^(0+128),w
 17457  2497  1D03               	skipz
 17458  2498  2C9B               	goto	u10545
 17459  2499  0855               	movf	avgBuff@size^(0+128),w
 17460  249A  0260               	subwf	avgBuff@inc^(0+128),w
 17461  249B                     u10545:	
 17462  249B  1803               	btfsc	3,0
 17463  249C  2CCD               	goto	l7428
 17464                           
 17465                           ;adc.c: 72: total += buff[inc];
 17466  249D  0021               	movlb	1	; select bank1
 17467  249E  0860               	movf	avgBuff@inc^(0+128),w
 17468  249F  00D9               	movwf	??_avgBuff^(0+128)
 17469  24A0  3001               	movlw	1
 17470  24A1                     u10535:	
 17471  24A1  35D9               	lslf	??_avgBuff^(0+128),f
 17472  24A2  3EFF               	addlw	-1
 17473  24A3  1D03               	skipz
 17474  24A4  2CA1               	goto	u10535
 17475  24A5  3559               	lslf	??_avgBuff^(0+128),w
 17476  24A6  075B               	addwf	avgBuff@buff^(0+128),w
 17477  24A7  00DA               	movwf	(??_avgBuff+1)^(0+128)
 17478  24A8  085A               	movf	(??_avgBuff+1)^(0+128),w
 17479  24A9  0086               	movwf	6
 17480  24AA  3003               	movlw	3	; select bank6/7
 17481  24AB  0087               	movwf	7
 17482  24AC  3F40               	moviw [0]fsr1
 17483  24AD  00BD               	movwf	___fladd@b^(0+128)
 17484  24AE  3F41               	moviw [1]fsr1
 17485  24AF  00BE               	movwf	(___fladd@b+1)^(0+128)
 17486  24B0  3F42               	moviw [2]fsr1
 17487  24B1  00BF               	movwf	(___fladd@b+2)^(0+128)
 17488  24B2  3F43               	moviw [3]fsr1
 17489  24B3  00C0               	movwf	(___fladd@b+3)^(0+128)
 17490  24B4  085F               	movf	(avgBuff@total+3)^(0+128),w
 17491  24B5  00C4               	movwf	(___fladd@a+3)^(0+128)
 17492  24B6  085E               	movf	(avgBuff@total+2)^(0+128),w
 17493  24B7  00C3               	movwf	(___fladd@a+2)^(0+128)
 17494  24B8  085D               	movf	(avgBuff@total+1)^(0+128),w
 17495  24B9  00C2               	movwf	(___fladd@a+1)^(0+128)
 17496  24BA  085C               	movf	avgBuff@total^(0+128),w
 17497  24BB  00C1               	movwf	___fladd@a^(0+128)
 17498  24BC  3186  2601  31A4   	fcall	___fladd
 17499  24BF  0021               	movlb	1	; select bank1
 17500  24C0  0840               	movf	(?___fladd+3)^(0+128),w
 17501  24C1  00DF               	movwf	(avgBuff@total+3)^(0+128)
 17502  24C2  083F               	movf	(?___fladd+2)^(0+128),w
 17503  24C3  00DE               	movwf	(avgBuff@total+2)^(0+128)
 17504  24C4  083E               	movf	(?___fladd+1)^(0+128),w
 17505  24C5  00DD               	movwf	(avgBuff@total+1)^(0+128)
 17506  24C6  083D               	movf	?___fladd^(0+128),w
 17507  24C7  00DC               	movwf	avgBuff@total^(0+128)
 17508  24C8  3001               	movlw	1
 17509  24C9  07E0               	addwf	avgBuff@inc^(0+128),f
 17510  24CA  3000               	movlw	0
 17511  24CB  3DE1               	addwfc	(avgBuff@inc+1)^(0+128),f
 17512  24CC  2C91               	goto	l7426
 17513  24CD                     l7428:	
 17514                           
 17515                           ;adc.c: 73: }
 17516                           ;adc.c: 75: return ((float) total)/((float) size);
 17517  24CD  0021               	movlb	1	; select bank1
 17518  24CE  0855               	movf	avgBuff@size^(0+128),w
 17519  24CF  0020               	movlb	0	; select bank0
 17520  24D0  00AE               	movwf	___xxtofl@val
 17521  24D1  0021               	movlb	1	; select bank1
 17522  24D2  0856               	movf	(avgBuff@size+1)^(0+128),w
 17523  24D3  0020               	movlb	0	; select bank0
 17524  24D4  00AF               	movwf	___xxtofl@val+1
 17525  24D5  0D89               	rlf	9,f
 17526  24D6  3B89               	subwfb	9,f
 17527  24D7  0989               	comf	9,f
 17528  24D8  00B0               	movwf	___xxtofl@val+2
 17529  24D9  00B1               	movwf	___xxtofl@val+3
 17530  24DA  3001               	movlw	1
 17531  24DB  31A6  261A  31A4   	fcall	___xxtofl
 17532  24DE  0020               	movlb	0	; select bank0
 17533  24DF  0831               	movf	?___xxtofl+3,w
 17534  24E0  00BB               	movwf	___fldiv@a+3
 17535  24E1  0830               	movf	?___xxtofl+2,w
 17536  24E2  00BA               	movwf	___fldiv@a+2
 17537  24E3  082F               	movf	?___xxtofl+1,w
 17538  24E4  00B9               	movwf	___fldiv@a+1
 17539  24E5  082E               	movf	?___xxtofl,w
 17540  24E6  00B8               	movwf	___fldiv@a
 17541  24E7  0021               	movlb	1	; select bank1
 17542  24E8  085F               	movf	(avgBuff@total+3)^(0+128),w
 17543  24E9  0020               	movlb	0	; select bank0
 17544  24EA  00BF               	movwf	___fldiv@b+3
 17545  24EB  0021               	movlb	1	; select bank1
 17546  24EC  085E               	movf	(avgBuff@total+2)^(0+128),w
 17547  24ED  0020               	movlb	0	; select bank0
 17548  24EE  00BE               	movwf	___fldiv@b+2
 17549  24EF  0021               	movlb	1	; select bank1
 17550  24F0  085D               	movf	(avgBuff@total+1)^(0+128),w
 17551  24F1  0020               	movlb	0	; select bank0
 17552  24F2  00BD               	movwf	___fldiv@b+1
 17553  24F3  0021               	movlb	1	; select bank1
 17554  24F4  085C               	movf	avgBuff@total^(0+128),w
 17555  24F5  0020               	movlb	0	; select bank0
 17556  24F6  00BC               	movwf	___fldiv@b
 17557  24F7  3194  2468         	fcall	___fldiv
 17558  24F9  0020               	movlb	0	; select bank0
 17559  24FA  083B               	movf	?___fldiv+3,w
 17560  24FB  0021               	movlb	1	; select bank1
 17561  24FC  00D8               	movwf	(?_avgBuff+3)^(0+128)
 17562  24FD  0020               	movlb	0	; select bank0
 17563  24FE  083A               	movf	?___fldiv+2,w
 17564  24FF  0021               	movlb	1	; select bank1
 17565  2500  00D7               	movwf	(?_avgBuff+2)^(0+128)
 17566  2501  0020               	movlb	0	; select bank0
 17567  2502  0839               	movf	?___fldiv+1,w
 17568  2503  0021               	movlb	1	; select bank1
 17569  2504  00D6               	movwf	(?_avgBuff+1)^(0+128)
 17570  2505  0020               	movlb	0	; select bank0
 17571  2506  0838               	movf	?___fldiv,w
 17572  2507  0021               	movlb	1	; select bank1
 17573  2508  00D5               	movwf	?_avgBuff^(0+128)
 17574  2509  0008               	return
 17575  250A                     __end_of_avgBuff:	
 17576                           
 17577                           	psect	text54
 17578  261A                     __ptext54:	
 17579 ;; *************** function ___xxtofl *****************
 17580 ;; Defined at:
 17581 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;  sign            1    wreg     unsigned char 
 17584 ;;  val             4   14[BANK0 ] long 
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;  sign            1   18[BANK0 ] unsigned char 
 17587 ;;  arg             4   20[BANK0 ] unsigned long 
 17588 ;;  exp             1   19[BANK0 ] unsigned char 
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  4   14[BANK0 ] unsigned char 
 17591 ;; Registers used:
 17592 ;;		wreg, status,2, status,0
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17599 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17601 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17602 ;;Total ram usage:       14 bytes
 17603 ;; Hardware stack levels used:    1
 17604 ;; Hardware stack levels required when called:    2
 17605 ;; This function calls:
 17606 ;;		Nothing
 17607 ;; This function is called by:
 17608 ;;		_calculateTemp
 17609 ;;		_getCurrent
 17610 ;;		_avgBuff
 17611 ;;		_measureVoltages
 17612 ;;		_sprintf
 17613 ;; This function uses a non-reentrant model
 17614 ;;
 17615                           
 17616                           
 17617                           ;psect for function ___xxtofl
 17618  261A                     ___xxtofl:	
 17619                           
 17620                           ;incstack = 0
 17621                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17622                           ;___xxtofl@sign stored from wreg
 17623  261A  0020               	movlb	0	; select bank0
 17624  261B  00B2               	movwf	___xxtofl@sign
 17625  261C  0832               	movf	___xxtofl@sign,w
 17626  261D  1D03               	btfss	3,2
 17627  261E  1FB1               	btfss	___xxtofl@val+3,7
 17628  261F  2E30               	goto	l6776
 17629  2620  092E               	comf	___xxtofl@val,w
 17630  2621  00B4               	movwf	___xxtofl@arg
 17631  2622  092F               	comf	___xxtofl@val+1,w
 17632  2623  00B5               	movwf	___xxtofl@arg+1
 17633  2624  0930               	comf	___xxtofl@val+2,w
 17634  2625  00B6               	movwf	___xxtofl@arg+2
 17635  2626  0931               	comf	___xxtofl@val+3,w
 17636  2627  00B7               	movwf	___xxtofl@arg+3
 17637  2628  0AB4               	incf	___xxtofl@arg,f
 17638  2629  1903               	skipnz
 17639  262A  0AB5               	incf	___xxtofl@arg+1,f
 17640  262B  1903               	skipnz
 17641  262C  0AB6               	incf	___xxtofl@arg+2,f
 17642  262D  1903               	skipnz
 17643  262E  0AB7               	incf	___xxtofl@arg+3,f
 17644  262F  2E38               	goto	l1341
 17645  2630                     l6776:	
 17646  2630  0831               	movf	___xxtofl@val+3,w
 17647  2631  00B7               	movwf	___xxtofl@arg+3
 17648  2632  0830               	movf	___xxtofl@val+2,w
 17649  2633  00B6               	movwf	___xxtofl@arg+2
 17650  2634  082F               	movf	___xxtofl@val+1,w
 17651  2635  00B5               	movwf	___xxtofl@arg+1
 17652  2636  082E               	movf	___xxtofl@val,w
 17653  2637  00B4               	movwf	___xxtofl@arg
 17654  2638                     l1341:	
 17655  2638  0831               	movf	___xxtofl@val+3,w
 17656  2639  0430               	iorwf	___xxtofl@val+2,w
 17657  263A  042F               	iorwf	___xxtofl@val+1,w
 17658  263B  042E               	iorwf	___xxtofl@val,w
 17659  263C  1D03               	skipz
 17660  263D  2E47               	goto	l6782
 17661  263E  3000               	movlw	0
 17662  263F  00B1               	movwf	?___xxtofl+3
 17663  2640  3000               	movlw	0
 17664  2641  00B0               	movwf	?___xxtofl+2
 17665  2642  3000               	movlw	0
 17666  2643  00AF               	movwf	?___xxtofl+1
 17667  2644  3000               	movlw	0
 17668  2645  00AE               	movwf	?___xxtofl
 17669  2646  0008               	return
 17670  2647                     l6782:	
 17671  2647  3096               	movlw	150
 17672  2648  00F4               	movwf	??___xxtofl
 17673  2649  0874               	movf	??___xxtofl,w
 17674  264A  00B3               	movwf	___xxtofl@exp
 17675  264B                     l6786:	
 17676  264B  30FE               	movlw	254
 17677  264C  0537               	andwf	___xxtofl@arg+3,w
 17678  264D  1903               	btfsc	3,2
 17679  264E  2E6E               	goto	l1347
 17680  264F  3001               	movlw	1
 17681  2650  00F4               	movwf	??___xxtofl
 17682  2651  0874               	movf	??___xxtofl,w
 17683  2652  07B3               	addwf	___xxtofl@exp,f
 17684  2653  3001               	movlw	1
 17685  2654                     u9375:	
 17686  2654  36B7               	lsrf	___xxtofl@arg+3,f
 17687  2655  0CB6               	rrf	___xxtofl@arg+2,f
 17688  2656  0CB5               	rrf	___xxtofl@arg+1,f
 17689  2657  0CB4               	rrf	___xxtofl@arg,f
 17690  2658  0B89               	decfsz	9,f
 17691  2659  2E54               	goto	u9375
 17692  265A  2E4B               	goto	l6786
 17693  265B                     l6788:	
 17694  265B  3001               	movlw	1
 17695  265C  00F4               	movwf	??___xxtofl
 17696  265D  0874               	movf	??___xxtofl,w
 17697  265E  07B3               	addwf	___xxtofl@exp,f
 17698  265F  3001               	movlw	1
 17699  2660  07B4               	addwf	___xxtofl@arg,f
 17700  2661  3000               	movlw	0
 17701  2662  3DB5               	addwfc	___xxtofl@arg+1,f
 17702  2663  3000               	movlw	0
 17703  2664  3DB6               	addwfc	___xxtofl@arg+2,f
 17704  2665  3000               	movlw	0
 17705  2666  3DB7               	addwfc	___xxtofl@arg+3,f
 17706  2667  3001               	movlw	1
 17707  2668                     u9395:	
 17708  2668  36B7               	lsrf	___xxtofl@arg+3,f
 17709  2669  0CB6               	rrf	___xxtofl@arg+2,f
 17710  266A  0CB5               	rrf	___xxtofl@arg+1,f
 17711  266B  0CB4               	rrf	___xxtofl@arg,f
 17712  266C  0B89               	decfsz	9,f
 17713  266D  2E68               	goto	u9395
 17714  266E                     l1347:	
 17715  266E  30FF               	movlw	255
 17716  266F  0537               	andwf	___xxtofl@arg+3,w
 17717  2670  1903               	btfsc	3,2
 17718  2671  2E7C               	goto	l6796
 17719  2672  2E5B               	goto	l6788
 17720  2673                     l6794:	
 17721  2673  3001               	movlw	1
 17722  2674  02B3               	subwf	___xxtofl@exp,f
 17723  2675  3001               	movlw	1
 17724  2676                     u9415:	
 17725  2676  35B4               	lslf	___xxtofl@arg,f
 17726  2677  0DB5               	rlf	___xxtofl@arg+1,f
 17727  2678  0DB6               	rlf	___xxtofl@arg+2,f
 17728  2679  0DB7               	rlf	___xxtofl@arg+3,f
 17729  267A  0B89               	decfsz	9,f
 17730  267B  2E76               	goto	u9415
 17731  267C                     l6796:	
 17732  267C  1BB6               	btfsc	___xxtofl@arg+2,7
 17733  267D  2E82               	goto	l1354
 17734  267E  3002               	movlw	2
 17735  267F  0233               	subwf	___xxtofl@exp,w
 17736  2680  1803               	skipnc
 17737  2681  2E73               	goto	l6794
 17738  2682                     l1354:	
 17739  2682  1833               	btfsc	___xxtofl@exp,0
 17740  2683  2E8C               	goto	l1355
 17741  2684  30FF               	movlw	255
 17742  2685  05B4               	andwf	___xxtofl@arg,f
 17743  2686  30FF               	movlw	255
 17744  2687  05B5               	andwf	___xxtofl@arg+1,f
 17745  2688  307F               	movlw	127
 17746  2689  05B6               	andwf	___xxtofl@arg+2,f
 17747  268A  30FF               	movlw	255
 17748  268B  05B7               	andwf	___xxtofl@arg+3,f
 17749  268C                     l1355:	
 17750  268C  1003               	clrc
 17751  268D  0CB3               	rrf	___xxtofl@exp,f
 17752  268E  0833               	movf	___xxtofl@exp,w
 17753  268F  00F4               	movwf	??___xxtofl
 17754  2690  01F5               	clrf	??___xxtofl+1
 17755  2691  01F6               	clrf	??___xxtofl+2
 17756  2692  01F7               	clrf	??___xxtofl+3
 17757  2693  3018               	movlw	24
 17758  2694                     u9455:	
 17759  2694  35F4               	lslf	??___xxtofl,f
 17760  2695  0DF5               	rlf	??___xxtofl+1,f
 17761  2696  0DF6               	rlf	??___xxtofl+2,f
 17762  2697  0DF7               	rlf	??___xxtofl+3,f
 17763  2698  0B89               	decfsz	9,f
 17764  2699  2E94               	goto	u9455
 17765  269A  0874               	movf	??___xxtofl,w
 17766  269B  04B4               	iorwf	___xxtofl@arg,f
 17767  269C  0875               	movf	??___xxtofl+1,w
 17768  269D  04B5               	iorwf	___xxtofl@arg+1,f
 17769  269E  0876               	movf	??___xxtofl+2,w
 17770  269F  04B6               	iorwf	___xxtofl@arg+2,f
 17771  26A0  0877               	movf	??___xxtofl+3,w
 17772  26A1  04B7               	iorwf	___xxtofl@arg+3,f
 17773  26A2  0832               	movf	___xxtofl@sign,w
 17774  26A3  1D03               	btfss	3,2
 17775  26A4  1FB1               	btfss	___xxtofl@val+3,7
 17776  26A5  2EA7               	goto	l6810
 17777  26A6  17B7               	bsf	___xxtofl@arg+3,7
 17778  26A7                     l6810:	
 17779  26A7  0837               	movf	___xxtofl@arg+3,w
 17780  26A8  00B1               	movwf	?___xxtofl+3
 17781  26A9  0836               	movf	___xxtofl@arg+2,w
 17782  26AA  00B0               	movwf	?___xxtofl+2
 17783  26AB  0835               	movf	___xxtofl@arg+1,w
 17784  26AC  00AF               	movwf	?___xxtofl+1
 17785  26AD  0834               	movf	___xxtofl@arg,w
 17786  26AE  00AE               	movwf	?___xxtofl
 17787  26AF  0008               	return
 17788  26B0                     __end_of___xxtofl:	
 17789                           
 17790                           	psect	text55
 17791  1468                     __ptext55:	
 17792 ;; *************** function ___fldiv *****************
 17793 ;; Defined at:
 17794 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 17795 ;; Parameters:    Size  Location     Type
 17796 ;;  a               4   24[BANK0 ] unsigned char 
 17797 ;;  b               4   28[BANK0 ] unsigned char 
 17798 ;; Auto vars:     Size  Location     Type
 17799 ;;  grs             4   44[BANK0 ] unsigned long 
 17800 ;;  rem             4   38[BANK0 ] unsigned long 
 17801 ;;  new_exp         2   42[BANK0 ] int 
 17802 ;;  aexp            1   49[BANK0 ] unsigned char 
 17803 ;;  bexp            1   48[BANK0 ] unsigned char 
 17804 ;;  sign            1   37[BANK0 ] unsigned char 
 17805 ;; Return value:  Size  Location     Type
 17806 ;;                  4   24[BANK0 ] unsigned char 
 17807 ;; Registers used:
 17808 ;;		wreg, status,2, status,0
 17809 ;; Tracked objects:
 17810 ;;		On entry : 0/0
 17811 ;;		On exit  : 0/0
 17812 ;;		Unchanged: 0/0
 17813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17814 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17815 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17816 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17817 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17818 ;;Total ram usage:       26 bytes
 17819 ;; Hardware stack levels used:    1
 17820 ;; Hardware stack levels required when called:    2
 17821 ;; This function calls:
 17822 ;;		Nothing
 17823 ;; This function is called by:
 17824 ;;		_calculateTemp
 17825 ;;		_calculateCurrent
 17826 ;;		_avgBuff
 17827 ;;		_measureVoltages
 17828 ;;		_startUp
 17829 ;; This function uses a non-reentrant model
 17830 ;;
 17831                           
 17832                           
 17833                           ;psect for function ___fldiv
 17834  1468                     ___fldiv:	
 17835                           
 17836                           ;incstack = 0
 17837                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 17838  1468  0020               	movlb	0	; select bank0
 17839  1469  083F               	movf	___fldiv@b+3,w
 17840  146A  3980               	andlw	128
 17841  146B  00C0               	movwf	??___fldiv
 17842  146C  0840               	movf	??___fldiv,w
 17843  146D  00C5               	movwf	___fldiv@sign
 17844  146E  353F               	lslf	___fldiv@b+3,w
 17845  146F  00C0               	movwf	??___fldiv
 17846  1470  0840               	movf	??___fldiv,w
 17847  1471  00D0               	movwf	___fldiv@bexp
 17848  1472  1BBE               	btfsc	___fldiv@b+2,7
 17849  1473  1450               	bsf	___fldiv@bexp,0
 17850  1474  0850               	movf	___fldiv@bexp,w
 17851  1475  1903               	btfsc	3,2
 17852  1476  2C85               	goto	l4964
 17853  1477  0A50               	incf	___fldiv@bexp,w
 17854  1478  1D03               	btfss	3,2
 17855  1479  2C82               	goto	l4960
 17856  147A  3000               	movlw	0
 17857  147B  00BF               	movwf	___fldiv@b+3
 17858  147C  3000               	movlw	0
 17859  147D  00BE               	movwf	___fldiv@b+2
 17860  147E  3000               	movlw	0
 17861  147F  00BD               	movwf	___fldiv@b+1
 17862  1480  3000               	movlw	0
 17863  1481  00BC               	movwf	___fldiv@b
 17864  1482                     l4960:	
 17865  1482  17BE               	bsf	___fldiv@b+2,7
 17866  1483  01BF               	clrf	___fldiv@b+3
 17867  1484  2C8D               	goto	l4966
 17868  1485                     l4964:	
 17869  1485  3000               	movlw	0
 17870  1486  00BF               	movwf	___fldiv@b+3
 17871  1487  3000               	movlw	0
 17872  1488  00BE               	movwf	___fldiv@b+2
 17873  1489  3000               	movlw	0
 17874  148A  00BD               	movwf	___fldiv@b+1
 17875  148B  3000               	movlw	0
 17876  148C  00BC               	movwf	___fldiv@b
 17877  148D                     l4966:	
 17878  148D  083B               	movf	___fldiv@a+3,w
 17879  148E  3980               	andlw	128
 17880  148F  00C0               	movwf	??___fldiv
 17881  1490  0840               	movf	??___fldiv,w
 17882  1491  06C5               	xorwf	___fldiv@sign,f
 17883  1492  353B               	lslf	___fldiv@a+3,w
 17884  1493  00C0               	movwf	??___fldiv
 17885  1494  0840               	movf	??___fldiv,w
 17886  1495  00D1               	movwf	___fldiv@aexp
 17887  1496  1BBA               	btfsc	___fldiv@a+2,7
 17888  1497  1451               	bsf	___fldiv@aexp,0
 17889  1498  0851               	movf	___fldiv@aexp,w
 17890  1499  1903               	btfsc	3,2
 17891  149A  2CA9               	goto	l4984
 17892  149B  0A51               	incf	___fldiv@aexp,w
 17893  149C  1D03               	btfss	3,2
 17894  149D  2CA6               	goto	l4980
 17895  149E  3000               	movlw	0
 17896  149F  00BB               	movwf	___fldiv@a+3
 17897  14A0  3000               	movlw	0
 17898  14A1  00BA               	movwf	___fldiv@a+2
 17899  14A2  3000               	movlw	0
 17900  14A3  00B9               	movwf	___fldiv@a+1
 17901  14A4  3000               	movlw	0
 17902  14A5  00B8               	movwf	___fldiv@a
 17903  14A6                     l4980:	
 17904  14A6  17BA               	bsf	___fldiv@a+2,7
 17905  14A7  01BB               	clrf	___fldiv@a+3
 17906  14A8  2CB1               	goto	l1282
 17907  14A9                     l4984:	
 17908  14A9  3000               	movlw	0
 17909  14AA  00BB               	movwf	___fldiv@a+3
 17910  14AB  3000               	movlw	0
 17911  14AC  00BA               	movwf	___fldiv@a+2
 17912  14AD  3000               	movlw	0
 17913  14AE  00B9               	movwf	___fldiv@a+1
 17914  14AF  3000               	movlw	0
 17915  14B0  00B8               	movwf	___fldiv@a
 17916  14B1                     l1282:	
 17917  14B1  083B               	movf	___fldiv@a+3,w
 17918  14B2  043A               	iorwf	___fldiv@a+2,w
 17919  14B3  0439               	iorwf	___fldiv@a+1,w
 17920  14B4  0438               	iorwf	___fldiv@a,w
 17921  14B5  1D03               	skipz
 17922  14B6  2CCC               	goto	l4990
 17923  14B7  3000               	movlw	0
 17924  14B8  00BF               	movwf	___fldiv@b+3
 17925  14B9  3000               	movlw	0
 17926  14BA  00BE               	movwf	___fldiv@b+2
 17927  14BB  3000               	movlw	0
 17928  14BC  00BD               	movwf	___fldiv@b+1
 17929  14BD  3000               	movlw	0
 17930  14BE  00BC               	movwf	___fldiv@b
 17931  14BF  3080               	movlw	128
 17932  14C0  04BE               	iorwf	___fldiv@b+2,f
 17933  14C1  307F               	movlw	127
 17934  14C2  04BF               	iorwf	___fldiv@b+3,f
 17935  14C3  083F               	movf	___fldiv@b+3,w
 17936  14C4  00BB               	movwf	?___fldiv+3
 17937  14C5  083E               	movf	___fldiv@b+2,w
 17938  14C6  00BA               	movwf	?___fldiv+2
 17939  14C7  083D               	movf	___fldiv@b+1,w
 17940  14C8  00B9               	movwf	?___fldiv+1
 17941  14C9  083C               	movf	___fldiv@b,w
 17942  14CA  00B8               	movwf	?___fldiv
 17943  14CB  0008               	return
 17944  14CC                     l4990:	
 17945  14CC  0850               	movf	___fldiv@bexp,w
 17946  14CD  1D03               	btfss	3,2
 17947  14CE  2CE0               	goto	l4996
 17948  14CF  3000               	movlw	0
 17949  14D0  00BF               	movwf	___fldiv@b+3
 17950  14D1  3000               	movlw	0
 17951  14D2  00BE               	movwf	___fldiv@b+2
 17952  14D3  3000               	movlw	0
 17953  14D4  00BD               	movwf	___fldiv@b+1
 17954  14D5  3000               	movlw	0
 17955  14D6  00BC               	movwf	___fldiv@b
 17956  14D7  083F               	movf	___fldiv@b+3,w
 17957  14D8  00BB               	movwf	?___fldiv+3
 17958  14D9  083E               	movf	___fldiv@b+2,w
 17959  14DA  00BA               	movwf	?___fldiv+2
 17960  14DB  083D               	movf	___fldiv@b+1,w
 17961  14DC  00B9               	movwf	?___fldiv+1
 17962  14DD  083C               	movf	___fldiv@b,w
 17963  14DE  00B8               	movwf	?___fldiv
 17964  14DF  0008               	return
 17965  14E0                     l4996:	
 17966  14E0  0851               	movf	___fldiv@aexp,w
 17967  14E1  00C0               	movwf	??___fldiv
 17968  14E2  01C1               	clrf	??___fldiv+1
 17969  14E3  09C0               	comf	??___fldiv,f
 17970  14E4  09C1               	comf	??___fldiv+1,f
 17971  14E5  0AC0               	incf	??___fldiv,f
 17972  14E6  1903               	skipnz
 17973  14E7  0AC1               	incf	??___fldiv+1,f
 17974  14E8  0850               	movf	___fldiv@bexp,w
 17975  14E9  0740               	addwf	??___fldiv,w
 17976  14EA  00C2               	movwf	??___fldiv+2
 17977  14EB  0841               	movf	??___fldiv+1,w
 17978  14EC  1803               	skipnc
 17979  14ED  0A41               	incf	??___fldiv+1,w
 17980  14EE  00C3               	movwf	??___fldiv+3
 17981  14EF  0842               	movf	??___fldiv+2,w
 17982  14F0  3E7F               	addlw	127
 17983  14F1  00CA               	movwf	___fldiv@new_exp
 17984  14F2  3000               	movlw	0
 17985  14F3  3D43               	addwfc	??___fldiv+3,w
 17986  14F4  00CB               	movwf	___fldiv@new_exp+1
 17987  14F5  083F               	movf	___fldiv@b+3,w
 17988  14F6  00C9               	movwf	___fldiv@rem+3
 17989  14F7  083E               	movf	___fldiv@b+2,w
 17990  14F8  00C8               	movwf	___fldiv@rem+2
 17991  14F9  083D               	movf	___fldiv@b+1,w
 17992  14FA  00C7               	movwf	___fldiv@rem+1
 17993  14FB  083C               	movf	___fldiv@b,w
 17994  14FC  00C6               	movwf	___fldiv@rem
 17995  14FD  3000               	movlw	0
 17996  14FE  00BF               	movwf	___fldiv@b+3
 17997  14FF  3000               	movlw	0
 17998  1500  00BE               	movwf	___fldiv@b+2
 17999  1501  3000               	movlw	0
 18000  1502  00BD               	movwf	___fldiv@b+1
 18001  1503  3000               	movlw	0
 18002  1504  00BC               	movwf	___fldiv@b
 18003  1505  3000               	movlw	0
 18004  1506  00CF               	movwf	___fldiv@grs+3
 18005  1507  3000               	movlw	0
 18006  1508  00CE               	movwf	___fldiv@grs+2
 18007  1509  3000               	movlw	0
 18008  150A  00CD               	movwf	___fldiv@grs+1
 18009  150B  3000               	movlw	0
 18010  150C  00CC               	movwf	___fldiv@grs
 18011  150D  01D1               	clrf	___fldiv@aexp
 18012  150E                     l5024:	
 18013  150E  301A               	movlw	26
 18014  150F  0251               	subwf	___fldiv@aexp,w
 18015  1510  1803               	btfsc	3,0
 18016  1511  2D4A               	goto	l5026
 18017  1512  0851               	movf	___fldiv@aexp,w
 18018  1513  1903               	btfsc	3,2
 18019  1514  2D2C               	goto	l5016
 18020  1515  3001               	movlw	1
 18021  1516                     u6425:	
 18022  1516  35C6               	lslf	___fldiv@rem,f
 18023  1517  0DC7               	rlf	___fldiv@rem+1,f
 18024  1518  0DC8               	rlf	___fldiv@rem+2,f
 18025  1519  0DC9               	rlf	___fldiv@rem+3,f
 18026  151A  0B89               	decfsz	9,f
 18027  151B  2D16               	goto	u6425
 18028  151C  3001               	movlw	1
 18029  151D                     u6435:	
 18030  151D  35BC               	lslf	___fldiv@b,f
 18031  151E  0DBD               	rlf	___fldiv@b+1,f
 18032  151F  0DBE               	rlf	___fldiv@b+2,f
 18033  1520  0DBF               	rlf	___fldiv@b+3,f
 18034  1521  0B89               	decfsz	9,f
 18035  1522  2D1D               	goto	u6435
 18036  1523  1BCF               	btfsc	___fldiv@grs+3,7
 18037  1524  143C               	bsf	___fldiv@b,0
 18038  1525  3001               	movlw	1
 18039  1526                     u6455:	
 18040  1526  35CC               	lslf	___fldiv@grs,f
 18041  1527  0DCD               	rlf	___fldiv@grs+1,f
 18042  1528  0DCE               	rlf	___fldiv@grs+2,f
 18043  1529  0DCF               	rlf	___fldiv@grs+3,f
 18044  152A  0B89               	decfsz	9,f
 18045  152B  2D26               	goto	u6455
 18046  152C                     l5016:	
 18047  152C  083B               	movf	___fldiv@a+3,w
 18048  152D  0249               	subwf	___fldiv@rem+3,w
 18049  152E  1D03               	skipz
 18050  152F  2D3A               	goto	u6465
 18051  1530  083A               	movf	___fldiv@a+2,w
 18052  1531  0248               	subwf	___fldiv@rem+2,w
 18053  1532  1D03               	skipz
 18054  1533  2D3A               	goto	u6465
 18055  1534  0839               	movf	___fldiv@a+1,w
 18056  1535  0247               	subwf	___fldiv@rem+1,w
 18057  1536  1D03               	skipz
 18058  1537  2D3A               	goto	u6465
 18059  1538  0838               	movf	___fldiv@a,w
 18060  1539  0246               	subwf	___fldiv@rem,w
 18061  153A                     u6465:	
 18062  153A  1C03               	skipc
 18063  153B  2D45               	goto	l5022
 18064  153C  174F               	bsf	___fldiv@grs+3,6
 18065  153D  0838               	movf	___fldiv@a,w
 18066  153E  02C6               	subwf	___fldiv@rem,f
 18067  153F  0839               	movf	___fldiv@a+1,w
 18068  1540  3BC7               	subwfb	___fldiv@rem+1,f
 18069  1541  083A               	movf	___fldiv@a+2,w
 18070  1542  3BC8               	subwfb	___fldiv@rem+2,f
 18071  1543  083B               	movf	___fldiv@a+3,w
 18072  1544  3BC9               	subwfb	___fldiv@rem+3,f
 18073  1545                     l5022:	
 18074  1545  3001               	movlw	1
 18075  1546  00C0               	movwf	??___fldiv
 18076  1547  0840               	movf	??___fldiv,w
 18077  1548  07D1               	addwf	___fldiv@aexp,f
 18078  1549  2D0E               	goto	l5024
 18079  154A                     l5026:	
 18080  154A  0849               	movf	___fldiv@rem+3,w
 18081  154B  0448               	iorwf	___fldiv@rem+2,w
 18082  154C  0447               	iorwf	___fldiv@rem+1,w
 18083  154D  0446               	iorwf	___fldiv@rem,w
 18084  154E  1D03               	btfss	3,2
 18085  154F  144C               	bsf	___fldiv@grs,0
 18086  1550                     l5040:	
 18087  1550  1BBE               	btfsc	___fldiv@b+2,7
 18088  1551  2D67               	goto	l5042
 18089  1552  3001               	movlw	1
 18090  1553                     u6495:	
 18091  1553  35BC               	lslf	___fldiv@b,f
 18092  1554  0DBD               	rlf	___fldiv@b+1,f
 18093  1555  0DBE               	rlf	___fldiv@b+2,f
 18094  1556  0DBF               	rlf	___fldiv@b+3,f
 18095  1557  0B89               	decfsz	9,f
 18096  1558  2D53               	goto	u6495
 18097  1559  1BCF               	btfsc	___fldiv@grs+3,7
 18098  155A  143C               	bsf	___fldiv@b,0
 18099  155B  3001               	movlw	1
 18100  155C                     u6515:	
 18101  155C  35CC               	lslf	___fldiv@grs,f
 18102  155D  0DCD               	rlf	___fldiv@grs+1,f
 18103  155E  0DCE               	rlf	___fldiv@grs+2,f
 18104  155F  0DCF               	rlf	___fldiv@grs+3,f
 18105  1560  0B89               	decfsz	9,f
 18106  1561  2D5C               	goto	u6515
 18107  1562  30FF               	movlw	255
 18108  1563  07CA               	addwf	___fldiv@new_exp,f
 18109  1564  30FF               	movlw	255
 18110  1565  3DCB               	addwfc	___fldiv@new_exp+1,f
 18111  1566  2D50               	goto	l5040
 18112  1567                     l5042:	
 18113  1567  01D1               	clrf	___fldiv@aexp
 18114  1568  1FCF               	btfss	___fldiv@grs+3,7
 18115  1569  2D80               	goto	l5052
 18116  156A  30FF               	movlw	255
 18117  156B  054C               	andwf	___fldiv@grs,w
 18118  156C  00C0               	movwf	??___fldiv
 18119  156D  30FF               	movlw	255
 18120  156E  054D               	andwf	___fldiv@grs+1,w
 18121  156F  00C1               	movwf	??___fldiv+1
 18122  1570  30FF               	movlw	255
 18123  1571  054E               	andwf	___fldiv@grs+2,w
 18124  1572  00C2               	movwf	??___fldiv+2
 18125  1573  307F               	movlw	127
 18126  1574  054F               	andwf	___fldiv@grs+3,w
 18127  1575  00C3               	movwf	??___fldiv+3
 18128  1576  0843               	movf	??___fldiv+3,w
 18129  1577  0442               	iorwf	??___fldiv+2,w
 18130  1578  0441               	iorwf	??___fldiv+1,w
 18131  1579  0440               	iorwf	??___fldiv,w
 18132  157A  1D03               	btfss	3,2
 18133  157B  2D7E               	goto	l5050
 18134  157C  1C3C               	btfss	___fldiv@b,0
 18135  157D  2D80               	goto	l5052
 18136  157E                     l5050:	
 18137  157E  01D1               	clrf	___fldiv@aexp
 18138  157F  0AD1               	incf	___fldiv@aexp,f
 18139  1580                     l5052:	
 18140  1580  0851               	movf	___fldiv@aexp,w
 18141  1581  1903               	btfsc	3,2
 18142  1582  2DA9               	goto	l5062
 18143  1583  3001               	movlw	1
 18144  1584  07BC               	addwf	___fldiv@b,f
 18145  1585  3000               	movlw	0
 18146  1586  3DBD               	addwfc	___fldiv@b+1,f
 18147  1587  3000               	movlw	0
 18148  1588  3DBE               	addwfc	___fldiv@b+2,f
 18149  1589  3000               	movlw	0
 18150  158A  3DBF               	addwfc	___fldiv@b+3,f
 18151  158B  1C3F               	btfss	___fldiv@b+3,0
 18152  158C  2DA9               	goto	l5062
 18153  158D  083C               	movf	___fldiv@b,w
 18154  158E  00C0               	movwf	??___fldiv
 18155  158F  083D               	movf	___fldiv@b+1,w
 18156  1590  00C1               	movwf	??___fldiv+1
 18157  1591  083E               	movf	___fldiv@b+2,w
 18158  1592  00C2               	movwf	??___fldiv+2
 18159  1593  083F               	movf	___fldiv@b+3,w
 18160  1594  00C3               	movwf	??___fldiv+3
 18161  1595  3001               	movlw	1
 18162  1596  00C4               	movwf	??___fldiv+4
 18163  1597                     u6585:	
 18164  1597  37C3               	asrf	??___fldiv+3,f
 18165  1598  0CC2               	rrf	??___fldiv+2,f
 18166  1599  0CC1               	rrf	??___fldiv+1,f
 18167  159A  0CC0               	rrf	??___fldiv,f
 18168  159B  0BC4               	decfsz	??___fldiv+4,f
 18169  159C  2D97               	goto	u6585
 18170  159D  0843               	movf	??___fldiv+3,w
 18171  159E  00BF               	movwf	___fldiv@b+3
 18172  159F  0842               	movf	??___fldiv+2,w
 18173  15A0  00BE               	movwf	___fldiv@b+2
 18174  15A1  0841               	movf	??___fldiv+1,w
 18175  15A2  00BD               	movwf	___fldiv@b+1
 18176  15A3  0840               	movf	??___fldiv,w
 18177  15A4  00BC               	movwf	___fldiv@b
 18178  15A5  3001               	movlw	1
 18179  15A6  07CA               	addwf	___fldiv@new_exp,f
 18180  15A7  3000               	movlw	0
 18181  15A8  3DCB               	addwfc	___fldiv@new_exp+1,f
 18182  15A9                     l5062:	
 18183  15A9  084B               	movf	___fldiv@new_exp+1,w
 18184  15AA  3A80               	xorlw	128
 18185  15AB  00C0               	movwf	??___fldiv
 18186  15AC  3080               	movlw	128
 18187  15AD  0240               	subwf	??___fldiv,w
 18188  15AE  1D03               	skipz
 18189  15AF  2DB2               	goto	u6595
 18190  15B0  30FF               	movlw	255
 18191  15B1  024A               	subwf	___fldiv@new_exp,w
 18192  15B2                     u6595:	
 18193  15B2  1C03               	skipc
 18194  15B3  2DC1               	goto	l1303
 18195  15B4  30FF               	movlw	255
 18196  15B5  0020               	movlb	0	; select bank0
 18197  15B6  00CA               	movwf	___fldiv@new_exp
 18198  15B7  3000               	movlw	0
 18199  15B8  00CB               	movwf	___fldiv@new_exp+1
 18200  15B9  3000               	movlw	0
 18201  15BA  00BF               	movwf	___fldiv@b+3
 18202  15BB  3000               	movlw	0
 18203  15BC  00BE               	movwf	___fldiv@b+2
 18204  15BD  3000               	movlw	0
 18205  15BE  00BD               	movwf	___fldiv@b+1
 18206  15BF  3000               	movlw	0
 18207  15C0  00BC               	movwf	___fldiv@b
 18208  15C1                     l1303:	
 18209  15C1  0020               	movlb	0	; select bank0
 18210  15C2  084B               	movf	___fldiv@new_exp+1,w
 18211  15C3  3A80               	xorlw	128
 18212  15C4  00C0               	movwf	??___fldiv
 18213  15C5  3080               	movlw	128
 18214  15C6  0240               	subwf	??___fldiv,w
 18215  15C7  1D03               	skipz
 18216  15C8  2DCB               	goto	u6605
 18217  15C9  3001               	movlw	1
 18218  15CA  024A               	subwf	___fldiv@new_exp,w
 18219  15CB                     u6605:	
 18220  15CB  1803               	skipnc
 18221  15CC  2DD9               	goto	l1304
 18222  15CD  0020               	movlb	0	; select bank0
 18223  15CE  01CA               	clrf	___fldiv@new_exp
 18224  15CF  01CB               	clrf	___fldiv@new_exp+1
 18225  15D0  3000               	movlw	0
 18226  15D1  00BF               	movwf	___fldiv@b+3
 18227  15D2  3000               	movlw	0
 18228  15D3  00BE               	movwf	___fldiv@b+2
 18229  15D4  3000               	movlw	0
 18230  15D5  00BD               	movwf	___fldiv@b+1
 18231  15D6  3000               	movlw	0
 18232  15D7  00BC               	movwf	___fldiv@b
 18233  15D8  01C5               	clrf	___fldiv@sign
 18234  15D9                     l1304:	
 18235  15D9  0020               	movlb	0	; select bank0
 18236  15DA  084A               	movf	___fldiv@new_exp,w
 18237  15DB  00C0               	movwf	??___fldiv
 18238  15DC  0840               	movf	??___fldiv,w
 18239  15DD  00D0               	movwf	___fldiv@bexp
 18240  15DE  1C50               	btfss	___fldiv@bexp,0
 18241  15DF  2DE2               	goto	l5076
 18242  15E0  17BE               	bsf	___fldiv@b+2,7
 18243  15E1  2DE6               	goto	l1306
 18244  15E2                     l5076:	
 18245  15E2  307F               	movlw	127
 18246  15E3  00C0               	movwf	??___fldiv
 18247  15E4  0840               	movf	??___fldiv,w
 18248  15E5  05BE               	andwf	___fldiv@b+2,f
 18249  15E6                     l1306:	
 18250  15E6  3650               	lsrf	___fldiv@bexp,w
 18251  15E7  00C0               	movwf	??___fldiv
 18252  15E8  0840               	movf	??___fldiv,w
 18253  15E9  00BF               	movwf	___fldiv@b+3
 18254  15EA  0845               	movf	___fldiv@sign,w
 18255  15EB  00C0               	movwf	??___fldiv
 18256  15EC  0840               	movf	??___fldiv,w
 18257  15ED  04BF               	iorwf	___fldiv@b+3,f
 18258  15EE  083F               	movf	___fldiv@b+3,w
 18259  15EF  00BB               	movwf	?___fldiv+3
 18260  15F0  083E               	movf	___fldiv@b+2,w
 18261  15F1  00BA               	movwf	?___fldiv+2
 18262  15F2  083D               	movf	___fldiv@b+1,w
 18263  15F3  00B9               	movwf	?___fldiv+1
 18264  15F4  083C               	movf	___fldiv@b,w
 18265  15F5  00B8               	movwf	?___fldiv
 18266  15F6  0008               	return
 18267  15F7                     __end_of___fldiv:	
 18268                           
 18269                           	psect	text56
 18270  0601                     __ptext56:	
 18271 ;; *************** function ___fladd *****************
 18272 ;; Defined at:
 18273 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 18274 ;; Parameters:    Size  Location     Type
 18275 ;;  b               4   29[BANK1 ] unsigned char 
 18276 ;;  a               4   33[BANK1 ] unsigned char 
 18277 ;; Auto vars:     Size  Location     Type
 18278 ;;  grs             1   52[BANK1 ] unsigned char 
 18279 ;;  bexp            1   51[BANK1 ] unsigned char 
 18280 ;;  aexp            1   50[BANK1 ] unsigned char 
 18281 ;;  signs           1   49[BANK1 ] unsigned char 
 18282 ;; Return value:  Size  Location     Type
 18283 ;;                  4   29[BANK1 ] unsigned char 
 18284 ;; Registers used:
 18285 ;;		wreg, status,2, status,0
 18286 ;; Tracked objects:
 18287 ;;		On entry : 0/0
 18288 ;;		On exit  : 0/0
 18289 ;;		Unchanged: 0/0
 18290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18291 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18292 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18293 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18294 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;Total ram usage:       24 bytes
 18296 ;; Hardware stack levels used:    1
 18297 ;; Hardware stack levels required when called:    2
 18298 ;; This function calls:
 18299 ;;		Nothing
 18300 ;; This function is called by:
 18301 ;;		_calculateCurrent
 18302 ;;		_avgBuff
 18303 ;;		_writeVoltages
 18304 ;;		_sumVoltages
 18305 ;;		_sprintf
 18306 ;;		___flsub
 18307 ;; This function uses a non-reentrant model
 18308 ;;
 18309                           
 18310                           
 18311                           ;psect for function ___fladd
 18312  0601                     ___fladd:	
 18313                           
 18314                           ;incstack = 0
 18315                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 18316  0601  0021               	movlb	1	; select bank1
 18317  0602  0840               	movf	(___fladd@b^(0+128)+3),w
 18318  0603  3980               	andlw	128
 18319  0604  00C5               	movwf	??___fladd^(0+128)
 18320  0605  0845               	movf	??___fladd^(0+128),w
 18321  0606  00D1               	movwf	___fladd@signs^(0+128)
 18322  0607  3540               	lslf	(___fladd@b^(0+128)+3),w
 18323  0608  00C5               	movwf	??___fladd^(0+128)
 18324  0609  0845               	movf	??___fladd^(0+128),w
 18325  060A  00D3               	movwf	___fladd@bexp^(0+128)
 18326  060B  1BBF               	btfsc	(___fladd@b^(0+128)+2),7
 18327  060C  1453               	bsf	___fladd@bexp^(0+128),0
 18328  060D  0853               	movf	___fladd@bexp^(0+128),w
 18329  060E  1903               	btfsc	3,2
 18330  060F  2E1E               	goto	l6142
 18331  0610  0A53               	incf	___fladd@bexp^(0+128),w
 18332  0611  1D03               	btfss	3,2
 18333  0612  2E1B               	goto	l6138
 18334  0613  3000               	movlw	0
 18335  0614  00C0               	movwf	(___fladd@b+3)^(0+128)
 18336  0615  3000               	movlw	0
 18337  0616  00BF               	movwf	(___fladd@b+2)^(0+128)
 18338  0617  3000               	movlw	0
 18339  0618  00BE               	movwf	(___fladd@b+1)^(0+128)
 18340  0619  3000               	movlw	0
 18341  061A  00BD               	movwf	___fladd@b^(0+128)
 18342  061B                     l6138:	
 18343  061B  17BF               	bsf	(___fladd@b^(0+128)+2),7
 18344  061C  01C0               	clrf	(___fladd@b^(0+128)+3)
 18345  061D  2E26               	goto	l6144
 18346  061E                     l6142:	
 18347  061E  3000               	movlw	0
 18348  061F  00C0               	movwf	(___fladd@b+3)^(0+128)
 18349  0620  3000               	movlw	0
 18350  0621  00BF               	movwf	(___fladd@b+2)^(0+128)
 18351  0622  3000               	movlw	0
 18352  0623  00BE               	movwf	(___fladd@b+1)^(0+128)
 18353  0624  3000               	movlw	0
 18354  0625  00BD               	movwf	___fladd@b^(0+128)
 18355  0626                     l6144:	
 18356  0626  0844               	movf	(___fladd@a^(0+128)+3),w
 18357  0627  3980               	andlw	128
 18358  0628  00C5               	movwf	??___fladd^(0+128)
 18359  0629  0845               	movf	??___fladd^(0+128),w
 18360  062A  00D2               	movwf	___fladd@aexp^(0+128)
 18361  062B  0852               	movf	___fladd@aexp^(0+128),w
 18362  062C  0651               	xorwf	___fladd@signs^(0+128),w
 18363  062D  1D03               	btfss	3,2
 18364  062E  1751               	bsf	___fladd@signs^(0+128),6
 18365  062F  3544               	lslf	(___fladd@a^(0+128)+3),w
 18366  0630  00C5               	movwf	??___fladd^(0+128)
 18367  0631  0845               	movf	??___fladd^(0+128),w
 18368  0632  00D2               	movwf	___fladd@aexp^(0+128)
 18369  0633  1BC3               	btfsc	(___fladd@a^(0+128)+2),7
 18370  0634  1452               	bsf	___fladd@aexp^(0+128),0
 18371  0635  0852               	movf	___fladd@aexp^(0+128),w
 18372  0636  1903               	btfsc	3,2
 18373  0637  2E46               	goto	l6166
 18374  0638  0A52               	incf	___fladd@aexp^(0+128),w
 18375  0639  1D03               	btfss	3,2
 18376  063A  2E43               	goto	l6162
 18377  063B  3000               	movlw	0
 18378  063C  00C4               	movwf	(___fladd@a+3)^(0+128)
 18379  063D  3000               	movlw	0
 18380  063E  00C3               	movwf	(___fladd@a+2)^(0+128)
 18381  063F  3000               	movlw	0
 18382  0640  00C2               	movwf	(___fladd@a+1)^(0+128)
 18383  0641  3000               	movlw	0
 18384  0642  00C1               	movwf	___fladd@a^(0+128)
 18385  0643                     l6162:	
 18386  0643  17C3               	bsf	(___fladd@a^(0+128)+2),7
 18387  0644  01C4               	clrf	(___fladd@a^(0+128)+3)
 18388  0645  2E4E               	goto	l1226
 18389  0646                     l6166:	
 18390  0646  3000               	movlw	0
 18391  0647  00C4               	movwf	(___fladd@a+3)^(0+128)
 18392  0648  3000               	movlw	0
 18393  0649  00C3               	movwf	(___fladd@a+2)^(0+128)
 18394  064A  3000               	movlw	0
 18395  064B  00C2               	movwf	(___fladd@a+1)^(0+128)
 18396  064C  3000               	movlw	0
 18397  064D  00C1               	movwf	___fladd@a^(0+128)
 18398  064E                     l1226:	
 18399  064E  0853               	movf	___fladd@bexp^(0+128),w
 18400  064F  0252               	subwf	___fladd@aexp^(0+128),w
 18401  0650  1803               	skipnc
 18402  0651  2E94               	goto	l6202
 18403  0652  1F51               	btfss	___fladd@signs^(0+128),6
 18404  0653  2E58               	goto	l6172
 18405  0654  3080               	movlw	128
 18406  0655  00C5               	movwf	??___fladd^(0+128)
 18407  0656  0845               	movf	??___fladd^(0+128),w
 18408  0657  06D1               	xorwf	___fladd@signs^(0+128),f
 18409  0658                     l6172:	
 18410  0658  0853               	movf	___fladd@bexp^(0+128),w
 18411  0659  00C5               	movwf	??___fladd^(0+128)
 18412  065A  0845               	movf	??___fladd^(0+128),w
 18413  065B  00D4               	movwf	___fladd@grs^(0+128)
 18414  065C  0852               	movf	___fladd@aexp^(0+128),w
 18415  065D  00C5               	movwf	??___fladd^(0+128)
 18416  065E  0845               	movf	??___fladd^(0+128),w
 18417  065F  00D3               	movwf	___fladd@bexp^(0+128)
 18418  0660  0854               	movf	___fladd@grs^(0+128),w
 18419  0661  00C5               	movwf	??___fladd^(0+128)
 18420  0662  0845               	movf	??___fladd^(0+128),w
 18421  0663  00D2               	movwf	___fladd@aexp^(0+128)
 18422  0664  083D               	movf	___fladd@b^(0+128),w
 18423  0665  00C5               	movwf	??___fladd^(0+128)
 18424  0666  0845               	movf	??___fladd^(0+128),w
 18425  0667  00D4               	movwf	___fladd@grs^(0+128)
 18426  0668  0841               	movf	___fladd@a^(0+128),w
 18427  0669  00C5               	movwf	??___fladd^(0+128)
 18428  066A  0845               	movf	??___fladd^(0+128),w
 18429  066B  00BD               	movwf	___fladd@b^(0+128)
 18430  066C  0854               	movf	___fladd@grs^(0+128),w
 18431  066D  00C5               	movwf	??___fladd^(0+128)
 18432  066E  0845               	movf	??___fladd^(0+128),w
 18433  066F  00C1               	movwf	___fladd@a^(0+128)
 18434  0670  083E               	movf	(___fladd@b^(0+128)+1),w
 18435  0671  00C5               	movwf	??___fladd^(0+128)
 18436  0672  0845               	movf	??___fladd^(0+128),w
 18437  0673  00D4               	movwf	___fladd@grs^(0+128)
 18438  0674  0842               	movf	(___fladd@a^(0+128)+1),w
 18439  0675  00C5               	movwf	??___fladd^(0+128)
 18440  0676  0845               	movf	??___fladd^(0+128),w
 18441  0677  00BE               	movwf	(___fladd@b^(0+128)+1)
 18442  0678  0854               	movf	___fladd@grs^(0+128),w
 18443  0679  00C5               	movwf	??___fladd^(0+128)
 18444  067A  0845               	movf	??___fladd^(0+128),w
 18445  067B  00C2               	movwf	(___fladd@a^(0+128)+1)
 18446  067C  083F               	movf	(___fladd@b^(0+128)+2),w
 18447  067D  00C5               	movwf	??___fladd^(0+128)
 18448  067E  0845               	movf	??___fladd^(0+128),w
 18449  067F  00D4               	movwf	___fladd@grs^(0+128)
 18450  0680  0843               	movf	(___fladd@a^(0+128)+2),w
 18451  0681  00C5               	movwf	??___fladd^(0+128)
 18452  0682  0845               	movf	??___fladd^(0+128),w
 18453  0683  00BF               	movwf	(___fladd@b^(0+128)+2)
 18454  0684  0854               	movf	___fladd@grs^(0+128),w
 18455  0685  00C5               	movwf	??___fladd^(0+128)
 18456  0686  0845               	movf	??___fladd^(0+128),w
 18457  0687  00C3               	movwf	(___fladd@a^(0+128)+2)
 18458  0688  0840               	movf	(___fladd@b^(0+128)+3),w
 18459  0689  00C5               	movwf	??___fladd^(0+128)
 18460  068A  0845               	movf	??___fladd^(0+128),w
 18461  068B  00D4               	movwf	___fladd@grs^(0+128)
 18462  068C  0844               	movf	(___fladd@a^(0+128)+3),w
 18463  068D  00C5               	movwf	??___fladd^(0+128)
 18464  068E  0845               	movf	??___fladd^(0+128),w
 18465  068F  00C0               	movwf	(___fladd@b^(0+128)+3)
 18466  0690  0854               	movf	___fladd@grs^(0+128),w
 18467  0691  00C5               	movwf	??___fladd^(0+128)
 18468  0692  0845               	movf	??___fladd^(0+128),w
 18469  0693  00C4               	movwf	(___fladd@a^(0+128)+3)
 18470  0694                     l6202:	
 18471  0694  01D4               	clrf	___fladd@grs^(0+128)
 18472  0695  0853               	movf	___fladd@bexp^(0+128),w
 18473  0696  00C5               	movwf	??___fladd^(0+128)
 18474  0697  01C6               	clrf	(??___fladd^(0+128)+1)
 18475  0698  09C5               	comf	??___fladd^(0+128),f
 18476  0699  09C6               	comf	(??___fladd^(0+128)+1),f
 18477  069A  0AC5               	incf	??___fladd^(0+128),f
 18478  069B  1903               	skipnz
 18479  069C  0AC6               	incf	(??___fladd^(0+128)+1),f
 18480  069D  0852               	movf	___fladd@aexp^(0+128),w
 18481  069E  0745               	addwf	??___fladd^(0+128),w
 18482  069F  00C7               	movwf	(??___fladd+2)^(0+128)
 18483  06A0  0846               	movf	(??___fladd+1)^(0+128),w
 18484  06A1  1803               	skipnc
 18485  06A2  0A46               	incf	(??___fladd+1)^(0+128),w
 18486  06A3  00C8               	movwf	((??___fladd+2)^(0+128)+1)
 18487  06A4  0848               	movf	(??___fladd+3)^(0+128),w
 18488  06A5  3A80               	xorlw	128
 18489  06A6  00C9               	movwf	(??___fladd+4)^(0+128)
 18490  06A7  3080               	movlw	128
 18491  06A8  0249               	subwf	(??___fladd+4)^(0+128),w
 18492  06A9  1D03               	skipz
 18493  06AA  2EAD               	goto	u8065
 18494  06AB  301A               	movlw	26
 18495  06AC  0247               	subwf	(??___fladd+2)^(0+128),w
 18496  06AD                     u8065:	
 18497  06AD  1C03               	skipc
 18498  06AE  2EE1               	goto	l6220
 18499  06AF  0021               	movlb	1	; select bank1
 18500  06B0  0840               	movf	(___fladd@b+3)^(0+128),w
 18501  06B1  043F               	iorwf	(___fladd@b+2)^(0+128),w
 18502  06B2  043E               	iorwf	(___fladd@b+1)^(0+128),w
 18503  06B3  043D               	iorwf	___fladd@b^(0+128),w
 18504  06B4  1903               	btfsc	3,2
 18505  06B5  2EB8               	goto	u8070
 18506  06B6  3001               	movlw	1
 18507  06B7  2EB9               	goto	u8080
 18508  06B8                     u8070:	
 18509  06B8  3000               	movlw	0
 18510  06B9                     u8080:	
 18511  06B9  00C5               	movwf	??___fladd^(0+128)
 18512  06BA  0845               	movf	??___fladd^(0+128),w
 18513  06BB  00D4               	movwf	___fladd@grs^(0+128)
 18514  06BC  3000               	movlw	0
 18515  06BD  00C0               	movwf	(___fladd@b+3)^(0+128)
 18516  06BE  3000               	movlw	0
 18517  06BF  00BF               	movwf	(___fladd@b+2)^(0+128)
 18518  06C0  3000               	movlw	0
 18519  06C1  00BE               	movwf	(___fladd@b+1)^(0+128)
 18520  06C2  3000               	movlw	0
 18521  06C3  00BD               	movwf	___fladd@b^(0+128)
 18522  06C4  0852               	movf	___fladd@aexp^(0+128),w
 18523  06C5  00C5               	movwf	??___fladd^(0+128)
 18524  06C6  0845               	movf	??___fladd^(0+128),w
 18525  06C7  00D3               	movwf	___fladd@bexp^(0+128)
 18526  06C8  2EE6               	goto	l1230
 18527  06C9                     l1232:	
 18528  06C9  1C54               	btfss	___fladd@grs^(0+128),0
 18529  06CA  2ED1               	goto	l6210
 18530  06CB  3654               	lsrf	___fladd@grs^(0+128),w
 18531  06CC  3801               	iorlw	1
 18532  06CD  00C5               	movwf	??___fladd^(0+128)
 18533  06CE  0845               	movf	??___fladd^(0+128),w
 18534  06CF  00D4               	movwf	___fladd@grs^(0+128)
 18535  06D0  2ED3               	goto	l6212
 18536  06D1                     l6210:	
 18537  06D1  1003               	clrc
 18538  06D2  0CD4               	rrf	___fladd@grs^(0+128),f
 18539  06D3                     l6212:	
 18540  06D3  183D               	btfsc	___fladd@b^(0+128),0
 18541  06D4  17D4               	bsf	___fladd@grs^(0+128),7
 18542  06D5  3001               	movlw	1
 18543  06D6  00C5               	movwf	??___fladd^(0+128)
 18544  06D7                     u8115:	
 18545  06D7  37C0               	asrf	(___fladd@b+3)^(0+128),f
 18546  06D8  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 18547  06D9  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 18548  06DA  0CBD               	rrf	___fladd@b^(0+128),f
 18549  06DB  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 18550  06DC  2ED7               	goto	u8115
 18551  06DD  3001               	movlw	1
 18552  06DE  00C5               	movwf	??___fladd^(0+128)
 18553  06DF  0845               	movf	??___fladd^(0+128),w
 18554  06E0  07D3               	addwf	___fladd@bexp^(0+128),f
 18555  06E1                     l6220:	
 18556  06E1  0021               	movlb	1	; select bank1
 18557  06E2  0852               	movf	___fladd@aexp^(0+128),w
 18558  06E3  0253               	subwf	___fladd@bexp^(0+128),w
 18559  06E4  1C03               	skipc
 18560  06E5  2EC9               	goto	l1232
 18561  06E6                     l1230:	
 18562  06E6  1B51               	btfsc	___fladd@signs^(0+128),6
 18563  06E7  2F19               	goto	l6246
 18564  06E8  0853               	movf	___fladd@bexp^(0+128),w
 18565  06E9  1D03               	btfss	3,2
 18566  06EA  2EF4               	goto	l6228
 18567  06EB  3000               	movlw	0
 18568  06EC  00C0               	movwf	(?___fladd+3)^(0+128)
 18569  06ED  3000               	movlw	0
 18570  06EE  00BF               	movwf	(?___fladd+2)^(0+128)
 18571  06EF  3000               	movlw	0
 18572  06F0  00BE               	movwf	(?___fladd+1)^(0+128)
 18573  06F1  3000               	movlw	0
 18574  06F2  00BD               	movwf	?___fladd^(0+128)
 18575  06F3  0008               	return
 18576  06F4                     l6228:	
 18577  06F4  0841               	movf	___fladd@a^(0+128),w
 18578  06F5  07BD               	addwf	___fladd@b^(0+128),f
 18579  06F6  0842               	movf	(___fladd@a+1)^(0+128),w
 18580  06F7  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 18581  06F8  0843               	movf	(___fladd@a+2)^(0+128),w
 18582  06F9  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 18583  06FA  0844               	movf	(___fladd@a+3)^(0+128),w
 18584  06FB  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 18585  06FC  1C40               	btfss	(___fladd@b+3)^(0+128),0
 18586  06FD  2FA6               	goto	l6280
 18587  06FE  1C54               	btfss	___fladd@grs^(0+128),0
 18588  06FF  2F08               	goto	l6236
 18589  0700  1003               	clrc
 18590  0701  0CD4               	rrf	___fladd@grs^(0+128),f
 18591  0702  0854               	movf	___fladd@grs^(0+128),w
 18592  0703  3801               	iorlw	1
 18593  0704  00C5               	movwf	??___fladd^(0+128)
 18594  0705  0845               	movf	??___fladd^(0+128),w
 18595  0706  00D4               	movwf	___fladd@grs^(0+128)
 18596  0707  2F0A               	goto	l6238
 18597  0708                     l6236:	
 18598  0708  1003               	clrc
 18599  0709  0CD4               	rrf	___fladd@grs^(0+128),f
 18600  070A                     l6238:	
 18601  070A  183D               	btfsc	___fladd@b^(0+128),0
 18602  070B  17D4               	bsf	___fladd@grs^(0+128),7
 18603  070C  3001               	movlw	1
 18604  070D  00C5               	movwf	??___fladd^(0+128)
 18605  070E                     u8185:	
 18606  070E  37C0               	asrf	(___fladd@b+3)^(0+128),f
 18607  070F  0CBF               	rrf	(___fladd@b+2)^(0+128),f
 18608  0710  0CBE               	rrf	(___fladd@b+1)^(0+128),f
 18609  0711  0CBD               	rrf	___fladd@b^(0+128),f
 18610  0712  0BC5               	decfsz	(??___fladd^(0+128))& (0+127),f
 18611  0713  2F0E               	goto	u8185
 18612  0714  3001               	movlw	1
 18613  0715  00C5               	movwf	??___fladd^(0+128)
 18614  0716  0845               	movf	??___fladd^(0+128),w
 18615  0717  07D3               	addwf	___fladd@bexp^(0+128),f
 18616  0718  2FA6               	goto	l6280
 18617  0719                     l6246:	
 18618  0719  0840               	movf	(___fladd@b+3)^(0+128),w
 18619  071A  3A80               	xorlw	128
 18620  071B  00C5               	movwf	??___fladd^(0+128)
 18621  071C  0844               	movf	(___fladd@a+3)^(0+128),w
 18622  071D  3A80               	xorlw	128
 18623  071E  0245               	subwf	??___fladd^(0+128),w
 18624  071F  1D03               	skipz
 18625  0720  2F2B               	goto	u8193
 18626  0721  0843               	movf	(___fladd@a+2)^(0+128),w
 18627  0722  023F               	subwf	(___fladd@b+2)^(0+128),w
 18628  0723  1D03               	skipz
 18629  0724  2F2B               	goto	u8193
 18630  0725  0842               	movf	(___fladd@a+1)^(0+128),w
 18631  0726  023E               	subwf	(___fladd@b+1)^(0+128),w
 18632  0727  1D03               	skipz
 18633  0728  2F2B               	goto	u8193
 18634  0729  0841               	movf	___fladd@a^(0+128),w
 18635  072A  023D               	subwf	___fladd@b^(0+128),w
 18636  072B                     u8193:	
 18637  072B  1803               	skipnc
 18638  072C  2F76               	goto	l6256
 18639  072D  30FF               	movlw	255
 18640  072E  00C5               	movwf	??___fladd^(0+128)
 18641  072F  30FF               	movlw	255
 18642  0730  00C6               	movwf	(??___fladd^(0+128)+1)
 18643  0731  30FF               	movlw	255
 18644  0732  00C7               	movwf	(??___fladd^(0+128)+2)
 18645  0733  30FF               	movlw	255
 18646  0734  00C8               	movwf	(??___fladd^(0+128)+3)
 18647  0735  0841               	movf	___fladd@a^(0+128),w
 18648  0736  00C9               	movwf	(??___fladd+4)^(0+128)
 18649  0737  0842               	movf	(___fladd@a+1)^(0+128),w
 18650  0738  00CA               	movwf	((??___fladd+4)^(0+128)+1)
 18651  0739  0843               	movf	(___fladd@a+2)^(0+128),w
 18652  073A  00CB               	movwf	((??___fladd+4)^(0+128)+2)
 18653  073B  0844               	movf	(___fladd@a+3)^(0+128),w
 18654  073C  00CC               	movwf	((??___fladd+4)^(0+128)+3)
 18655  073D  093D               	comf	___fladd@b^(0+128),w
 18656  073E  00CD               	movwf	(??___fladd+8)^(0+128)
 18657  073F  093E               	comf	(___fladd@b+1)^(0+128),w
 18658  0740  00CE               	movwf	((??___fladd+8)^(0+128)+1)
 18659  0741  093F               	comf	(___fladd@b+2)^(0+128),w
 18660  0742  00CF               	movwf	((??___fladd+8)^(0+128)+2)
 18661  0743  0940               	comf	(___fladd@b+3)^(0+128),w
 18662  0744  00D0               	movwf	((??___fladd+8)^(0+128)+3)
 18663  0745  0ACD               	incf	(??___fladd+8)^(0+128),f
 18664  0746  1903               	skipnz
 18665  0747  0ACE               	incf	((??___fladd+8)^(0+128)+1),f
 18666  0748  1903               	skipnz
 18667  0749  0ACF               	incf	((??___fladd+8)^(0+128)+2),f
 18668  074A  1903               	skipnz
 18669  074B  0AD0               	incf	((??___fladd+8)^(0+128)+3),f
 18670  074C  084D               	movf	(??___fladd+8)^(0+128),w
 18671  074D  07C9               	addwf	(??___fladd+4)^(0+128),f
 18672  074E  084E               	movf	(??___fladd+9)^(0+128),w
 18673  074F  3DCA               	addwfc	((??___fladd+4)^(0+128)+1),f
 18674  0750  084F               	movf	(??___fladd+10)^(0+128),w
 18675  0751  3DCB               	addwfc	((??___fladd+4)^(0+128)+2),f
 18676  0752  0850               	movf	(??___fladd+11)^(0+128),w
 18677  0753  3DCC               	addwfc	((??___fladd+4)^(0+128)+3),f
 18678  0754  0849               	movf	(??___fladd+4)^(0+128),w
 18679  0755  07C5               	addwf	??___fladd^(0+128),f
 18680  0756  084A               	movf	(??___fladd+5)^(0+128),w
 18681  0757  3DC6               	addwfc	(??___fladd^(0+128)+1),f
 18682  0758  084B               	movf	(??___fladd+6)^(0+128),w
 18683  0759  3DC7               	addwfc	(??___fladd^(0+128)+2),f
 18684  075A  084C               	movf	(??___fladd+7)^(0+128),w
 18685  075B  3DC8               	addwfc	(??___fladd^(0+128)+3),f
 18686  075C  0848               	movf	(??___fladd+3)^(0+128),w
 18687  075D  00C0               	movwf	(___fladd@b+3)^(0+128)
 18688  075E  0847               	movf	(??___fladd+2)^(0+128),w
 18689  075F  00BF               	movwf	(___fladd@b+2)^(0+128)
 18690  0760  0846               	movf	(??___fladd+1)^(0+128),w
 18691  0761  00BE               	movwf	(___fladd@b+1)^(0+128)
 18692  0762  0845               	movf	??___fladd^(0+128),w
 18693  0763  00BD               	movwf	___fladd@b^(0+128)
 18694  0764  3080               	movlw	128
 18695  0765  00C5               	movwf	??___fladd^(0+128)
 18696  0766  0845               	movf	??___fladd^(0+128),w
 18697  0767  06D1               	xorwf	___fladd@signs^(0+128),f
 18698  0768  09D4               	comf	___fladd@grs^(0+128),f
 18699  0769  0AD4               	incf	___fladd@grs^(0+128),f
 18700  076A  0854               	movf	___fladd@grs^(0+128),w
 18701  076B  1D03               	btfss	3,2
 18702  076C  2F7E               	goto	l1247
 18703  076D  3001               	movlw	1
 18704  076E  07BD               	addwf	___fladd@b^(0+128),f
 18705  076F  3000               	movlw	0
 18706  0770  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 18707  0771  3000               	movlw	0
 18708  0772  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 18709  0773  3000               	movlw	0
 18710  0774  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 18711  0775  2F7E               	goto	l1247
 18712  0776                     l6256:	
 18713  0776  0841               	movf	___fladd@a^(0+128),w
 18714  0777  02BD               	subwf	___fladd@b^(0+128),f
 18715  0778  0842               	movf	(___fladd@a+1)^(0+128),w
 18716  0779  3BBE               	subwfb	(___fladd@b+1)^(0+128),f
 18717  077A  0843               	movf	(___fladd@a+2)^(0+128),w
 18718  077B  3BBF               	subwfb	(___fladd@b+2)^(0+128),f
 18719  077C  0844               	movf	(___fladd@a+3)^(0+128),w
 18720  077D  3BC0               	subwfb	(___fladd@b+3)^(0+128),f
 18721  077E                     l1247:	
 18722  077E  0840               	movf	(___fladd@b+3)^(0+128),w
 18723  077F  043F               	iorwf	(___fladd@b+2)^(0+128),w
 18724  0780  043E               	iorwf	(___fladd@b+1)^(0+128),w
 18725  0781  043D               	iorwf	___fladd@b^(0+128),w
 18726  0782  1D03               	skipz
 18727  0783  2FA4               	goto	l6278
 18728  0784  0854               	movf	___fladd@grs^(0+128),w
 18729  0785  1D03               	btfss	3,2
 18730  0786  2FA4               	goto	l6278
 18731  0787  3000               	movlw	0
 18732  0788  00C0               	movwf	(?___fladd+3)^(0+128)
 18733  0789  3000               	movlw	0
 18734  078A  00BF               	movwf	(?___fladd+2)^(0+128)
 18735  078B  3000               	movlw	0
 18736  078C  00BE               	movwf	(?___fladd+1)^(0+128)
 18737  078D  3000               	movlw	0
 18738  078E  00BD               	movwf	?___fladd^(0+128)
 18739  078F  0008               	return
 18740  0790                     l6264:	
 18741  0790  3001               	movlw	1
 18742  0791                     u8235:	
 18743  0791  35BD               	lslf	___fladd@b^(0+128),f
 18744  0792  0DBE               	rlf	(___fladd@b+1)^(0+128),f
 18745  0793  0DBF               	rlf	(___fladd@b+2)^(0+128),f
 18746  0794  0DC0               	rlf	(___fladd@b+3)^(0+128),f
 18747  0795  0B89               	decfsz	9,f
 18748  0796  2F91               	goto	u8235
 18749  0797  1BD4               	btfsc	___fladd@grs^(0+128),7
 18750  0798  143D               	bsf	___fladd@b^(0+128),0
 18751  0799  1C54               	btfss	___fladd@grs^(0+128),0
 18752  079A  2F9D               	goto	l6272
 18753  079B  1403               	setc
 18754  079C  2F9E               	goto	L14
 18755  079D                     l6272:	
 18756  079D  1003               	clrc
 18757  079E                     L14:	
 18758  079E  0DD4               	rlf	___fladd@grs^(0+128),f
 18759  079F  0853               	movf	___fladd@bexp^(0+128),w
 18760  07A0  1903               	btfsc	3,2
 18761  07A1  2FA4               	goto	l6278
 18762  07A2  3001               	movlw	1
 18763  07A3  02D3               	subwf	___fladd@bexp^(0+128),f
 18764  07A4                     l6278:	
 18765  07A4  1FBF               	btfss	(___fladd@b+2)^(0+128),7
 18766  07A5  2F90               	goto	l6264
 18767  07A6                     l6280:	
 18768  07A6  01D2               	clrf	___fladd@aexp^(0+128)
 18769  07A7  1FD4               	btfss	___fladd@grs^(0+128),7
 18770  07A8  2FB1               	goto	l6290
 18771  07A9  0854               	movf	___fladd@grs^(0+128),w
 18772  07AA  397F               	andlw	127
 18773  07AB  1D03               	btfss	3,2
 18774  07AC  2FAF               	goto	l6288
 18775  07AD  1C3D               	btfss	___fladd@b^(0+128),0
 18776  07AE  2FB1               	goto	l6290
 18777  07AF                     l6288:	
 18778  07AF  01D2               	clrf	___fladd@aexp^(0+128)
 18779  07B0  0AD2               	incf	___fladd@aexp^(0+128),f
 18780  07B1                     l6290:	
 18781  07B1  0852               	movf	___fladd@aexp^(0+128),w
 18782  07B2  1903               	btfsc	3,2
 18783  07B3  2FDD               	goto	l1260
 18784  07B4  3001               	movlw	1
 18785  07B5  07BD               	addwf	___fladd@b^(0+128),f
 18786  07B6  3000               	movlw	0
 18787  07B7  3DBE               	addwfc	(___fladd@b+1)^(0+128),f
 18788  07B8  3000               	movlw	0
 18789  07B9  3DBF               	addwfc	(___fladd@b+2)^(0+128),f
 18790  07BA  3000               	movlw	0
 18791  07BB  3DC0               	addwfc	(___fladd@b+3)^(0+128),f
 18792  07BC  1C40               	btfss	(___fladd@b+3)^(0+128),0
 18793  07BD  2FDD               	goto	l1260
 18794  07BE  083D               	movf	___fladd@b^(0+128),w
 18795  07BF  00C5               	movwf	??___fladd^(0+128)
 18796  07C0  083E               	movf	(___fladd@b+1)^(0+128),w
 18797  07C1  00C6               	movwf	(??___fladd^(0+128)+1)
 18798  07C2  083F               	movf	(___fladd@b+2)^(0+128),w
 18799  07C3  00C7               	movwf	(??___fladd^(0+128)+2)
 18800  07C4  0840               	movf	(___fladd@b+3)^(0+128),w
 18801  07C5  00C8               	movwf	(??___fladd^(0+128)+3)
 18802  07C6  3001               	movlw	1
 18803  07C7  00C9               	movwf	(??___fladd+4)^(0+128)
 18804  07C8                     u8335:	
 18805  07C8  37C8               	asrf	(??___fladd^(0+128)+3),f
 18806  07C9  0CC7               	rrf	(??___fladd^(0+128)+2),f
 18807  07CA  0CC6               	rrf	(??___fladd^(0+128)+1),f
 18808  07CB  0CC5               	rrf	??___fladd^(0+128),f
 18809  07CC  0BC9               	decfsz	(??___fladd+4)^(0+128),f
 18810  07CD  2FC8               	goto	u8335
 18811  07CE  0848               	movf	(??___fladd+3)^(0+128),w
 18812  07CF  00C0               	movwf	(___fladd@b+3)^(0+128)
 18813  07D0  0847               	movf	(??___fladd+2)^(0+128),w
 18814  07D1  00BF               	movwf	(___fladd@b+2)^(0+128)
 18815  07D2  0846               	movf	(??___fladd+1)^(0+128),w
 18816  07D3  00BE               	movwf	(___fladd@b+1)^(0+128)
 18817  07D4  0845               	movf	??___fladd^(0+128),w
 18818  07D5  00BD               	movwf	___fladd@b^(0+128)
 18819  07D6  0A53               	incf	___fladd@bexp^(0+128),w
 18820  07D7  1903               	btfsc	3,2
 18821  07D8  2FDD               	goto	l1260
 18822  07D9  3001               	movlw	1
 18823  07DA  00C5               	movwf	??___fladd^(0+128)
 18824  07DB  0845               	movf	??___fladd^(0+128),w
 18825  07DC  07D3               	addwf	___fladd@bexp^(0+128),f
 18826  07DD                     l1260:	
 18827  07DD  0A53               	incf	___fladd@bexp^(0+128),w
 18828  07DE  1D03               	btfss	3,2
 18829  07DF  0853               	movf	___fladd@bexp^(0+128),w
 18830  07E0  1D03               	btfss	3,2
 18831  07E1  2FED               	goto	l6308
 18832  07E2  3000               	movlw	0
 18833  07E3  00C0               	movwf	(___fladd@b+3)^(0+128)
 18834  07E4  3000               	movlw	0
 18835  07E5  00BF               	movwf	(___fladd@b+2)^(0+128)
 18836  07E6  3000               	movlw	0
 18837  07E7  00BE               	movwf	(___fladd@b+1)^(0+128)
 18838  07E8  3000               	movlw	0
 18839  07E9  00BD               	movwf	___fladd@b^(0+128)
 18840  07EA  0853               	movf	___fladd@bexp^(0+128),w
 18841  07EB  1903               	btfsc	3,2
 18842  07EC  01D1               	clrf	___fladd@signs^(0+128)
 18843  07ED                     l6308:	
 18844  07ED  1C53               	btfss	___fladd@bexp^(0+128),0
 18845  07EE  2FF1               	goto	l6312
 18846  07EF  17BF               	bsf	(___fladd@b^(0+128)+2),7
 18847  07F0  2FF5               	goto	l1268
 18848  07F1                     l6312:	
 18849  07F1  307F               	movlw	127
 18850  07F2  00C5               	movwf	??___fladd^(0+128)
 18851  07F3  0845               	movf	??___fladd^(0+128),w
 18852  07F4  05BF               	andwf	(___fladd@b^(0+128)+2),f
 18853  07F5                     l1268:	
 18854  07F5  3653               	lsrf	___fladd@bexp^(0+128),w
 18855  07F6  00C5               	movwf	??___fladd^(0+128)
 18856  07F7  0845               	movf	??___fladd^(0+128),w
 18857  07F8  00C0               	movwf	(___fladd@b^(0+128)+3)
 18858  07F9  1FD1               	btfss	___fladd@signs^(0+128),7
 18859  07FA  0008               	return
 18860  07FB  17C0               	bsf	(___fladd@b^(0+128)+3),7
 18861  07FC  0008               	return
 18862  07FD                     __end_of___fladd:	
 18863                           
 18864                           	psect	intentry
 18865  0004                     __pintentry:	
 18866 ;; *************** function _ISR *****************
 18867 ;; Defined at:
 18868 ;;		line 133 in file "main.c"
 18869 ;; Parameters:    Size  Location     Type
 18870 ;;		None
 18871 ;; Auto vars:     Size  Location     Type
 18872 ;;		None
 18873 ;; Return value:  Size  Location     Type
 18874 ;;                  1    wreg      void 
 18875 ;; Registers used:
 18876 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18877 ;; Tracked objects:
 18878 ;;		On entry : 0/0
 18879 ;;		On exit  : 0/0
 18880 ;;		Unchanged: 0/0
 18881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18884 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18886 ;;Total ram usage:        2 bytes
 18887 ;; Hardware stack levels used:    1
 18888 ;; Hardware stack levels required when called:    1
 18889 ;; This function calls:
 18890 ;;		_uartDisable
 18891 ;; This function is called by:
 18892 ;;		Interrupt level 1
 18893 ;; This function uses a non-reentrant model
 18894 ;;
 18895                           
 18896  0004                     _ISR:	
 18897                           
 18898                           ;incstack = 0
 18899  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18900                           
 18901                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18902  0005  3180               	pagesel	$
 18903  0006  0020               	movlb	0	; select bank0
 18904  0007  087F               	movf	127,w
 18905  0008  00F1               	movwf	??_ISR+1
 18906                           
 18907                           ;main.c: 135: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 18908  0009  190B               	btfsc	11,2	;volatile
 18909  000A  1E8B               	btfss	11,5	;volatile
 18910  000B  283B               	goto	i1l5586
 18911                           
 18912                           ;main.c: 136: k ++;
 18913  000C  3001               	movlw	1
 18914  000D  0023               	movlb	3	; select bank3
 18915  000E  07C4               	addwf	_k^(0+384),f
 18916  000F  3000               	movlw	0
 18917  0010  3DC5               	addwfc	(_k+1)^(0+384),f
 18918                           
 18919                           ;main.c: 137: if(k >= 3){
 18920  0011  0845               	movf	(_k+1)^(0+384),w
 18921  0012  3A80               	xorlw	128
 18922  0013  00F0               	movwf	??_ISR
 18923  0014  3080               	movlw	128
 18924  0015  0270               	subwf	??_ISR,w
 18925  0016  1D03               	skipz
 18926  0017  281A               	goto	u726_25
 18927  0018  3003               	movlw	3
 18928  0019  0244               	subwf	_k^(0+384),w
 18929  001A                     u726_25:	
 18930  001A  1C03               	skipc
 18931  001B  2827               	goto	i1l5578
 18932                           
 18933                           ;main.c: 138: currentBool = 1;
 18934  001C  3001               	movlw	1
 18935  001D  0023               	movlb	3	; select bank3
 18936  001E  00C0               	movwf	_currentBool^(0+384)
 18937  001F  3000               	movlw	0
 18938  0020  00C1               	movwf	(_currentBool^(0+384)+1)
 18939                           
 18940                           ;main.c: 139: k=0;
 18941  0021  01C4               	clrf	_k^(0+384)
 18942  0022  01C5               	clrf	(_k+1)^(0+384)
 18943                           
 18944                           ;main.c: 140: j++;
 18945  0023  3001               	movlw	1
 18946  0024  07C6               	addwf	_j^(0+384),f
 18947  0025  3000               	movlw	0
 18948  0026  3DC7               	addwfc	(_j+1)^(0+384),f
 18949  0027                     i1l5578:	
 18950                           
 18951                           ;main.c: 141: }
 18952                           ;main.c: 143: if(j>=10000){
 18953  0027  0023               	movlb	3	; select bank3
 18954  0028  0847               	movf	(_j+1)^(0+384),w
 18955  0029  3A80               	xorlw	128
 18956  002A  00F0               	movwf	??_ISR
 18957  002B  30A7               	movlw	167
 18958  002C  0270               	subwf	??_ISR,w
 18959  002D  1D03               	skipz
 18960  002E  2831               	goto	u727_25
 18961  002F  3010               	movlw	16
 18962  0030  0246               	subwf	_j^(0+384),w
 18963  0031                     u727_25:	
 18964  0031  1C03               	skipc
 18965  0032  283A               	goto	i1l5584
 18966                           
 18967                           ;main.c: 144: uartBool = 1;
 18968  0033  3001               	movlw	1
 18969  0034  0023               	movlb	3	; select bank3
 18970  0035  00C2               	movwf	_uartBool^(0+384)
 18971  0036  3000               	movlw	0
 18972  0037  00C3               	movwf	(_uartBool^(0+384)+1)
 18973                           
 18974                           ;main.c: 145: j = 0;
 18975  0038  01C6               	clrf	_j^(0+384)
 18976  0039  01C7               	clrf	(_j+1)^(0+384)
 18977  003A                     i1l5584:	
 18978                           
 18979                           ;main.c: 146: }
 18980                           ;main.c: 147: INTCONbits.TMR0IF = 0;
 18981  003A  110B               	bcf	11,2	;volatile
 18982  003B                     i1l5586:	
 18983                           
 18984                           ;main.c: 148: }
 18985                           ;main.c: 150: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 18986  003B  0021               	movlb	1	; select bank1
 18987  003C  1C91               	btfss	17,1	;volatile
 18988  003D  2848               	goto	i1l5594
 18989  003E  0020               	movlb	0	; select bank0
 18990  003F  1C91               	btfss	17,1	;volatile
 18991  0040  2848               	goto	i1l5594
 18992                           
 18993                           ;main.c: 151: currentBool = 1;
 18994  0041  3001               	movlw	1
 18995  0042  0023               	movlb	3	; select bank3
 18996  0043  00C0               	movwf	_currentBool^(0+384)
 18997  0044  3000               	movlw	0
 18998  0045  00C1               	movwf	(_currentBool^(0+384)+1)
 18999                           
 19000                           ;main.c: 152: PIR1bits.TMR2IF = 0;
 19001  0046  0020               	movlb	0	; select bank0
 19002  0047  1091               	bcf	17,1	;volatile
 19003  0048                     i1l5594:	
 19004                           
 19005                           ;main.c: 153: }
 19006                           ;main.c: 155: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 19007  0048  0020               	movlb	0	; select bank0
 19008  0049  1E11               	btfss	17,4	;volatile
 19009  004A  2868               	goto	i1l5608
 19010  004B  0021               	movlb	1	; select bank1
 19011  004C  1E11               	btfss	17,4	;volatile
 19012  004D  2868               	goto	i1l5608
 19013                           
 19014                           ;main.c: 156: if(str[z] != '\0'){
 19015  004E  087A               	movf	_z,w
 19016  004F  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
 19017  0050  0086               	movwf	6
 19018  0051  3002               	movlw	2	; select bank5/6
 19019  0052  0087               	movwf	7
 19020  0053  0801               	movf	1,w
 19021  0054  1903               	btfsc	3,2
 19022  0055  2863               	goto	i1l5604
 19023                           
 19024                           ;main.c: 157: TXREG = str[z];
 19025  0056  087A               	movf	_z,w
 19026  0057  3EA0               	addlw	(low (_str| (0+512)))& (0+255)
 19027  0058  0086               	movwf	6
 19028  0059  3002               	movlw	2	; select bank5/6
 19029  005A  0087               	movwf	7
 19030  005B  0801               	movf	1,w
 19031  005C  0023               	movlb	3	; select bank3
 19032  005D  009A               	movwf	26	;volatile
 19033                           
 19034                           ;main.c: 158: z++;
 19035  005E  3001               	movlw	1
 19036  005F  07FA               	addwf	_z,f
 19037  0060  3000               	movlw	0
 19038  0061  3DFB               	addwfc	_z+1,f
 19039                           
 19040                           ;main.c: 159: }else{
 19041  0062  2868               	goto	i1l5608
 19042  0063                     i1l5604:	
 19043                           
 19044                           ;main.c: 160: z = 0;
 19045  0063  01FA               	clrf	_z
 19046  0064  01FB               	clrf	_z+1
 19047                           
 19048                           ;main.c: 161: uartDisable();
 19049  0065  31AD  25E6  3180   	fcall	_uartDisable
 19050  0068                     i1l5608:	
 19051                           
 19052                           ;main.c: 162: }
 19053                           ;main.c: 163: }
 19054                           ;main.c: 165: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 19055  0068  0020               	movlb	0	; select bank0
 19056  0069  1D91               	btfss	17,3	;volatile
 19057  006A  2870               	goto	i1l131
 19058  006B  0021               	movlb	1	; select bank1
 19059  006C  1D91               	btfss	17,3	;volatile
 19060  006D  2870               	goto	i1l131
 19061                           
 19062                           ;main.c: 166: PIR1bits.SSP1IF = 0;
 19063  006E  0020               	movlb	0	; select bank0
 19064  006F  1191               	bcf	17,3	;volatile
 19065  0070                     i1l131:	
 19066  0070  0871               	movf	??_ISR+1,w
 19067  0071  0020               	movlb	0	; select bank0
 19068  0072  00FF               	movwf	127
 19069  0073  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 19070  0074  0009               	retfie
 19071  0075                     __end_of_ISR:	
 19072                           
 19073                           	psect	text58
 19074  2DE6                     __ptext58:	
 19075 ;; *************** function _uartDisable *****************
 19076 ;; Defined at:
 19077 ;;		line 79 in file "uart.c"
 19078 ;; Parameters:    Size  Location     Type
 19079 ;;		None
 19080 ;; Auto vars:     Size  Location     Type
 19081 ;;		None
 19082 ;; Return value:  Size  Location     Type
 19083 ;;                  1    wreg      void 
 19084 ;; Registers used:
 19085 ;;		None
 19086 ;; Tracked objects:
 19087 ;;		On entry : 0/0
 19088 ;;		On exit  : 0/0
 19089 ;;		Unchanged: 0/0
 19090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19095 ;;Total ram usage:        0 bytes
 19096 ;; Hardware stack levels used:    1
 19097 ;; This function calls:
 19098 ;;		Nothing
 19099 ;; This function is called by:
 19100 ;;		_ISR
 19101 ;; This function uses a non-reentrant model
 19102 ;;
 19103                           
 19104                           
 19105                           ;psect for function _uartDisable
 19106  2DE6                     _uartDisable:	
 19107                           
 19108                           ;uart.c: 80: PIE1bits.TXIE = 0;
 19109                           
 19110                           ;incstack = 0
 19111                           ; Regs used in _uartDisable: []
 19112  2DE6  0021               	movlb	1	; select bank1
 19113  2DE7  1211               	bcf	17,4	;volatile
 19114  2DE8  0008               	return
 19115  2DE9                     __end_of_uartDisable:	
 19116  007E                     btemp	set	126	;btemp
 19117  007E                     int$flags	set	126
 19118  007E                     wtemp0	set	126


Data Sizes:
    Strings     150
    Constant    2002
    Data        7
    BSS         249
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     66      79
    BANK3            80      0      63
    BANK4            80      0      48
    BANK5            80      0      50
    BANK6            80      0      80
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 38
		 -> STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[20]), STR_5(CODE[15]), 
		 -> STR_4(CODE[19]), STR_3(CODE[38]), STR_2(CODE[23]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> str(BANK5[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), LTC6804_rdcv@cell_data(BANK0[8]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), 

    spi_write_array@data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 4096
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), RAM(DATA[4096]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK2[2]), ADCV(BANK2[2]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR unsigned int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK1[24]), 

    measureVoltages@measurements	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    sumVoltages@values	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 10
		 -> temps(BANK3[10]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 10
		 -> temps(BANK3[10]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> voltages(BANK4[48]), 

    avgBuff@buff	PTR float  size(1) Largest target is 80
		 -> currentBuff(BANK6[80]), 

    getTemps@temperatures	PTR int  size(1) Largest target is 10
		 -> temps(BANK3[10]), 


Critical Paths under _main in COMMON

    _writeVoltages->___flge
    _sprintf->___awdiv
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    _LTC6804_initialize->_set_adc
    _measureVoltages->_LTC6804_adcv
    _measureVoltages->___flge
    _LTC6804_rdcv_reg->_spi_write_read
    _spi_write_read->___bmul
    _LTC6804_adcv->_spi_write_array
    _spi_write_array->_spi_write
    _pec15_calc->___bmul
    ___flmul->___awdiv
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->_fround
    _sprintf->_scale
    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    _measureVoltages->___flmul
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    ___fltol->_scale
    ___flmul->___fldiv
    ___xxtofl->_adcRead
    ___fldiv->___xxtofl
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_writeValuesToUart
    _writeValuesToUart->_clearScreen
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___flsub
    ___flsub->___fladd
    _sumVoltages->___fladd
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    ___fltol->_scale
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fladd
    _avgBuff->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_writeValuesToUart
    _writeValuesToUart->_writeVoltages
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  292676
                                             65 BANK2      1     1      0
                            _avgBuff
                         _getCurrent
                           _getTemps
                          _i2cSwitch
                    _measureVoltages
                              _setup
                          _spiSwitch
                        _sumVoltages
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   18     1     17  230607
                                             79 BANK1      1     1      0
                                             48 BANK2     17     0     17
                        _clearScreen
                       _writeCurrent
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                       21    15      6   62848
                                             27 BANK2     21    15      6
                            ___fladd
                             ___flge
                            ___flneg
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                           8     4      4   55793
                                             77 BANK1      1     1      0
                                             27 BANK2      7     3      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         4     0      4   55506
                                             27 BANK2      4     0      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   55546
                                             77 BANK1      2     0      2
                                             27 BANK2      5     5      0
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (3) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             48    38     10   55385
                                             61 BANK1     16     6     10
                                              0 BANK2     27    27      0
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   11520
                                             76 BANK0      4     0      4
                                              0 BANK1     21    21      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      99
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4   11241
                                             76 BANK0      4     0      4
                                              0 BANK1     29    29      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     634
                                              2 COMMON     8     0      8
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4267
                                             53 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     245
                                              2 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) _sumVoltages                                         13     9      4    4472
                                             53 BANK1     13     9      4
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _spiSwitch                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     474
                 _LTC6804_initialize
                           _adcSetup
                           _i2cSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2cSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_initialize                                   0     0      0     474
                            _set_adc
 ---------------------------------------------------------------------------------
 (3) _set_adc                                              7     4      3     474
                                              2 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (1) _measureVoltages                                     34    32      2   24697
                                             76 BANK0      2     0      2
                                              0 BANK1     32    32      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2246
                                              2 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (2) _LTC6804_rdcv                                        29    27      2   10716
                                             27 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2876
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv_reg                                    12    10      2    4141
                                             15 BANK0     12    10      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (4) _spi_write_read                                      12     8      4    1553
                                              6 COMMON     4     0      4
                                              0 BANK0      8     8      0
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_read                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     582
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _LTC6804_adcv                                         7     7      0    1575
                                              9 COMMON     1     1      0
                                             15 BANK0      6     6      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (4) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _spi_write_array                                      4     3      1     341
                                              5 COMMON     4     3      1
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_write                                            3     3      0      23
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (3) _pec15_calc                                          17    15      2    1093
                                              6 COMMON     2     0      2
                                              0 BANK0     15    15      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _i2cSwitch                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _getTemps                                            11     9      2   11215
                                             40 BANK1     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                        8     6      2   10538
                                             32 BANK1      8     6      2
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     787
                                             21 BANK1     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (1) _getCurrent                                           8     4      4   13918
                                             65 BANK1      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (2) _calculateCurrent                                    12     8      4   12791
                                             53 BANK1     12     8      4
                            ___fladd
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    6593
                                             50 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _adcRead                                             16    14      2     133
                                              2 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (1) _avgBuff                                             13     9      4    7293
                                             53 BANK1     13     9      4
                            ___fladd
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     926
                                              4 COMMON     4     4      0
                                             14 BANK0     10     6      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1987
                                             24 BANK0     26    18      8
                          __Umul8_16 (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    4022
                                             29 BANK1     24    16      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                        _uartDisable
 ---------------------------------------------------------------------------------
 (8) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _avgBuff
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fldiv
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
   _i2cSwitch
   _measureVoltages
     _LTC6804_adcv
       _pec15_calc
         ___bmul (ARG)
       _spi_write_array
         _spi_write
       _wakeup_idle
     _LTC6804_rdcv
       _LTC6804_rdcv_reg
         ___bmul
         _pec15_calc
           ___bmul (ARG)
         _spi_write_read
           ___bmul (ARG)
           _spi_read (ARG)
           _spi_write (ARG)
         _wakeup_idle
       ___bmul
       ___wmul
       _pec15_calc
         ___bmul (ARG)
     ___fldiv
       __Umul8_16 (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
     ___xxtofl
       _adcRead (ARG)
   _setup
     _LTC6804_initialize
       _set_adc
     _adcSetup
     _i2cSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _spiSwitch
   _sumVoltages
     ___fladd
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
       ___flneg (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable
     _writeVoltages
       ___fladd
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       ___flge
       ___flneg
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___flneg (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___flneg (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                   __Umul8_16 (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
                 __Umul8_16 (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
       _uartEnable

 _ISR (ROOT)
   _uartDisable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     42      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3F      11       78.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      30      13       60.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1EC      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      32      16       62.5%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      50      18      100.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1EC      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Apr 09 19:09:16 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003B  
                         ___fldiv@aexp 0051                           ___fldiv@bexp 0050  
                                    _j 01C6                                      _k 01C4  
                                    _n 01C8                                      _z 007A  
                         ___fldiv@sign 0045                         ___bmul@product 0074  
                          __CFG_CP$OFF 0000                            _SSPSTATbits 0214  
                         ___awdiv@sign 0025                                     _t0 3159  
                  ___wmul@multiplicand 0074                        writeTemps@temps 013F  
                  __Umul8_16@word_mpld 0022                                    l101 1DA4  
             writeValuesToUart@current 015B                                    l251 1464  
                                  l244 13BE                                    l263 232F  
                                  l239 1315                                    l248 13E3  
                                  l193 2297                                    l281 206D  
                                  l257 2F2A                                    l265 2364  
                                  l189 247B                                    l277 2058  
                                  l269 2381                                    l720 2E37  
                                  l714 2E2C                                    l585 1F52  
                                  l841 0EE5                                    l578 1E93  
                                  l781 08DF                                    l766 0841  
                                  l947 2E9E                                    l789 0A20  
                                  _PR2 001B                           __CFG_CPD$OFF 0000  
                                  _ISR 0004                                    _SOC 01BC  
              __end_of_measureVoltages 1D9E                                    _cmd 0168  
                                  _str 02A0                      SSD1306_Test@F7528 01DD  
                          _sumVoltages 218B                           ___awmod@sign 0078  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                         __CFG_FOSC$HS 0000                           ___flmul@aexp 0060  
                         ___flmul@bexp 0065                           ___flmul@sign 005F  
                         ___flmul@temp 006A                           ___flmul@prod 0066  
                         __CFG_LVP$OFF 0000                                   ?_ISR 0070  
                         ___fltol@exp1 00BF                                   l1110 23F2  
                                 l1230 06E6                                   l1118 277B  
                                 l1303 15C1                                   l1232 06C9  
                                 l1304 15D9                                   l1128 27F4  
                                 l1226 064E                                   l1306 15E6  
                                 l1091 26CB                                   l1260 07DD  
                                 l1076 1C3E                                   l1341 2638  
                                 l1334 05F4                                   l1086 1CC2  
                                 l1247 077E                                   l1360 2EFF  
                                 l1282 14B1                                   l1354 2682  
                                 l1355 268C                                   l1347 266E  
                                 l1268 07F5                                   l5022 1545  
                                 l5040 1550                                   l5016 152C  
                                 l5024 150E                                   l5050 157E  
                                 l5042 1567                                   l5026 154A  
                                 l5052 1580                                   l5062 15A9  
                                 l4166 2143                                   l6032 2EF9  
                                 l4168 2186                                   l4192 2F6C  
                                 l4184 2F57                                   l6120 2137  
                                 l6112 2126                                   l6210 06D1  
                                 l6202 0694                                   l4186 2F6B  
                                 l6050 21E8                                   l6106 210E  
                                 l7002 0CD4                                   l6212 06D3  
                                 l6220 06E1                                   l5076 15E2  
                                 l6108 211A                                   l6116 212F  
                                 l6142 061E                                   l7102 0F5E  
                                 l7110 0F78                                   l6312 07F1  
                                 l6144 0626                                   l4392 2E55  
                                 l6056 21F3                                   l7112 0F7C  
                                 l7032 0E1B                                   l7016 0D18  
                                 l7008 0CF1                                   l7040 0E34  
                                 l6162 0643                                   l6138 061B  
                                 l6082 222A                                   l6074 2219  
                                 l6066 21FB                                   l7130 0FB0  
                                 l7050 0E60                                   l6308 07ED  
                                 l6236 0708                                   l6228 06F4  
                                 l6172 0658                                   l6332 03EF  
                                 l4388 2E4F                                   l6068 2207  
                                 l7132 0813                                   l6238 070A  
                                 l6246 0719                                   l6166 0646  
                                 l6414 055C                                   l6350 0412  
                                 l6334 03F1                                   l6078 2222  
                                 l6094 2101                                   l6510 0330  
                                 l6502 0245                                   l7118 0F94  
                                 l7062 0E74                                   l7038 0E2F  
                                 l7134 0FFA                                   l6272 079D  
                                 l6264 0790                                   l6256 0776  
                                 l6280 07A6                                   l6440 05CA  
                                 l6424 058A                                   l6416 0573  
                                 l6352 0414                                   l6336 03F9  
                                 l7152 22E3                                   l7304 1F35  
                                 l7312 1F44                                   l7080 0EFC  
                                 l7072 0EC9                                   l7056 0E6E  
                                 l7216 2036                                   l7232 1390  
                                 l6290 07B1                                   l6426 058C  
                                 l6362 042A                                   l6354 041C  
                                 l7402 2475                                   l4906 2E83  
                                 l7146 22DD                                   l7322 1F5F  
                                 l6098 2108                                   l7218 2061  
                                 l6436 05B5                                   l7404 2428  
                                 l7164 22F2                                   l7340 1FF4  
                                 l7332 1FB3                                   l7308 1F3F  
                                 l6612 1C83                                   l6604 1C63  
                                 l6516 03AF                                   l7092 0F3D  
                                 l7068 0EAB                                   l7228 1359  
                                 l6278 07A4                                   l6446 05E1  
                                 l7158 22E9                                   l6630 1CB9  
                                 l6622 1C9E                                   l7094 0F40  
                                 l7086 0F15                                   l7238 13C7  
                                 l6288 07AF                                   l4960 1482  
                                 l7344 1FFE                                   l6632 1CC5  
                                 l6624 1CAC                                   l6560 27B6  
                                 l6552 279C                                   l6528 2E4B  
                                 l7088 0F18                                   l7256 236D  
                                 l6810 26A7                                   l7426 2491  
                                 l6714 23E9                                   l6706 23CE  
                                 l7354 1CE5                                   l6570 27D0  
                                 l6538 2763                                   _ADAX 016B  
                                 l4980 14A6                                   l4964 1485  
                                 l7428 24CD                                   l6716 23F5  
                                 l6708 23DC                                   l6660 270E  
                                 l7380 2197                                   l6740 2279  
                                 l6580 27F7                                   l6572 27DE  
                                 l6476 17C6                                   l6468 1716  
                                 l6492 01A0                                   _ADCV 016D  
                                 l4990 14CC                                   l4966 148D  
                                 l6638 2E98                                   l7286 1EA0  
                                 l7382 21D3                                   l6726 2240  
                                 l6750 20BD                                   l6590 1C24  
                                 l6910 0A66                                   l6830 0852  
                                 l6822 083C                                   l7462 1E37  
                                 l4984 14A9                                   l7296 1EF4  
                                 l6664 2737                                   l6656 26E5  
                                 l7368 1D98                                   l6736 226E  
                                 l6728 224E                                   l6752 20CB  
                                 l6760 20EE                                   l6904 0A05  
                                 l7464 1E3A                                   l6690 23A0  
                                 l6578 27EB                                   l6498 021F  
                                 l6922 0ABA                                   l6834 085F  
                                 l6842 0892                                   l4996 14E0  
                                 l6756 20E3                                   l6932 0AF8  
                                 l6828 0848                        spi_write_read@i 0025  
                                 l6782 2647                                   l6942 0B69  
                                 l6918 0AA2                                   l6870 0911  
                                 l6862 08E1                                   l6854 08A5  
                                 l6776 2630                                   l6952 0BC9  
                                 l6936 0B63                                   l6880 0950  
                                 l6864 08FD                                   l6856 08DA  
                                 l6794 2673                                   l6786 264B  
                                 l6970 0BFA                                   l6796 267C  
                                 l6788 265B                                   l6972 0C1D  
                                 l6956 0BDB                                   l6948 0BA0  
                                 l6896 09A4                      spi_write@readData 0073  
                                 l6994 0C5C                                   l6978 0C31  
                                 l6996 0CC0                                   STR_1 3136  
                                 STR_2 30E9                                   STR_3 30C3  
                                 STR_4 3114                                   STR_5 3127  
                                 STR_6 3100                                   STR_7 3150  
                                 STR_8 3145                                   u4815 2159  
                                 u6255 2081                                   u6425 1516  
                                 u6265 208C                                   u8115 06D7  
                                 u6515 155C                                   u6435 151D  
                                 u6275 20A5                                   u6605 15CB  
                                 u8070 06B8                                   u6455 1526  
                                 u8080 06B9                                   u8065 06AD  
                                 u6465 153A                                   u9025 2E9F  
                                 u8235 0791                                   u9035 2EA4  
                                 u9125 23A9                                   u8335 07C8  
                                 u6495 1553                                   u8193 072B  
                                 u8185 070E                                   u6585 1597  
                                 u8505 0525                                   u9225 2243  
                                 u6595 15B2                                   u8515 053C  
                                 u9155 23CF                                   u9315 20D9  
                                 u8525 054B                                   u9245 224F  
                                 u9325 20E4                                   u9415 2676  
                                 u8535 055F                                   u9255 2263  
                                 u7815 21FE                                   u8625 05A3  
                                 u9185 23EA                                   u9265 226F  
                                 u8635 05BE                                   u8555 0568  
                                 u7835 2208                                   u7915 2111  
                                 u7765 2F00                                   u8645 05D4  
                                 u8485 04A0                                   u7845 2212  
                                 u9605 0A2C                                   u9455 2694  
                                 u9375 2654                                   u8495 04CF  
                                 u9295 20C0                                   u7855 221A  
                                 u7935 2120                                   u9615 0A72  
                                 u8905 1C64                                   u7945 2127  
                                 u9395 2668                                   u8915 1C78  
                                 u8835 27D1                                   u8925 1C84  
                                 u9645 0AA0                                   u8775 279D  
                                 u9735 0C06                                   u8865 27EC  
                                 u8785 27AD                                   u9745 0C3D  
                                 u8795 27B7                                   u9675 0B94  
                                 u8965 1C9F                                   u9935 0F0D  
                                 u9775 0CDF                                   u9945 0F2C  
                                 u9865 0E9F                                   u9785 0CED  
                                 u8995 1CBA                                   u9885 0EBF  
                                 u9895 0EDD                                   _WPUD 020F  
                                 _Beta 315D                           __CFG_WRT$OFF 0000  
               __end_of_spi_write_read 2F8A                          __CFG_FCMEN$ON 0000  
                                 _main 1D9E                                   _temp 01B8  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                           spi_read@data 0073  
                        __CFG_BOREN$ON 0000                                   start 0075  
                        __CFG_IESO$OFF 0000                        ___fldiv@new_exp 004A  
                         _sprintf$2115 0120                         ??_LTC6804_adcv 0079  
                    ___bmul@multiplier 0075                           _totalVoltage 01D4  
                        __CFG_MCLRE$ON 0000                         ??_LTC6804_rdcv 003D  
                       writeVoltages@k 014E                                  ??_ISR 0070  
                    ?_LTC6804_rdcv_reg 002F                          __CFG_PLLEN$ON 0000  
                     spi_write_array@i 0078                          ___fltol@sign1 00BE  
      writeValuesToUart@temperatureArr 0156             __size_of_writeValuesToUart 0038  
                      __end_of___fladd 07FD                                  ?_main 0070  
                      __end_of___fldiv 15F7                        __end_of_adcRead 22D6  
                      __end_of___awdiv 222F                        __end_of___flneg 1C09  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 213C  
                   ??_LTC6804_rdcv_reg 0031                        __end_of___flmul 0601  
                      __end_of___flsub 2EEE                        __end_of___fltol 2404  
                      __end_of___lldiv 2282                                  u10115 204A  
                                u10215 131F                                  u10135 1325  
                                u10145 133B                                  u10410 1CDE  
                                u10235 13EA                                  u10245 1402  
                                u10165 135D                                  u10095 22B0  
                                u10175 1373                                  u10345 1F2F  
                                u10505 21A1                                  u10515 2467  
                                u10435 1D04                                  u10275 233D  
                                u10195 13A3                        ___awdiv@divisor 0020  
                                u10525 2432                                  u10445 1D49  
                                u10535 24A1                                  u10455 1D61  
                                u10545 249B                        __end_of___llmod 20F7  
                                u10395 1FEE                                  u10475 1D85  
                                u10565 1DF7                                  u10495 21A7  
                                u10575 1E17                                  _T2CON 001C  
                                u10867 2E18                                  u10877 2292  
                                i1l131 0070                        ___awdiv@counter 0024  
                                _TXREG 019A                        __end_of_avgBuff 250A  
              __end_of_spi_write_array 2E96                     writeVoltages@volts 014D  
                      __end_of_dpowers 30C2                                  _scale 00B0  
                      __end_of_isdigit 2E4D                                  _temps 01CA  
                                _setup 2F2E                        __end_of_set_adc 20B4  
                  clearScreen@numLines 00ED                        ?_spi_write_read 0076  
                                status 0003                                  wtemp0 007E  
                      __end_of_sprintf 1000            LTC6804_rdcv@current_ic_1295 0054  
                __size_of_writeCurrent 0020                           __end_of_Beta 315F  
                 __size_of_clearScreen 0040                        __initialization 0077  
                         __end_of_main 1E77                       __end_of_i2cSetup 2E6F  
                   writeTemps@numTemps 013D                         __CFG_LPBOR$OFF 0000  
                     __end_of_OledFont 1300                                 ??_main 0161  
                         adcRead@total 002C                      ?_calculateCurrent 00D5  
                       set_adc@md_bits 0078                       ?_measureVoltages 006C  
                 __size_of__tdiv_to_l_ 00B6                     ??_calculateCurrent 007A  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 3163       writeValuesToUart@temperatureHigh 0159  
                  pec15_calc@remainder 002D                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                     ___llmod@dividend 002A                                 ?_scale 006C  
                               _ADRESH 009C                                 _ADRESL 009B  
                     ___awdiv@dividend 0022  writeValuesToUart@temperatureArrLength 0157  
                               ?_setup 0070                       __end_of_adcSetup 2ECF  
                         _writeCurrent 2F0E                                 _ANSELA 018C  
                               _ANSELB 018D                                 _ANSELD 018F  
                               i1l5604 0063                                 i1l5608 0068  
                               i1l5584 003A                                 i1l5594 0048  
                               i1l5578 0027                                 i1l5586 003B  
                   __size_of_i2cSwitch 0007                                 u726_25 001A  
                               u727_25 0031                                 _SPBRGH 019C  
                               _SPBRGL 019B                LTC6804_rdaux@BYT_IN_REG 3163  
                               _SSPADD 0212                                 _SSPBUF 0211  
                     __end_of___xxtofl 26B0                    writeVoltages@length 013B  
                       __CFG_PWRTE$OFF 0000                           ?_uartDisable 0070  
                     __end_of_getTemps 2483                       __end_of__powers_ 3034  
     __end_ofLTC6804_rdaux_reg@REG_LEN 3162                                 ___flge 26B0  
                               ___bmul 2E4D                     _writeVoltages$2111 0145  
                         ?_timer0Setup 0070                              ??___fladd 00C5  
                               ___wmul 2E96                              ??___fldiv 0040  
                            ??_adcRead 0020                              ??___awdiv 0079  
                         ?_timer2Setup 0070                              ??___flneg 0076  
                       __CFG_STVREN$ON 0000                              ??___awmod 0076  
                            ??___flmul 005A                              ??___flsub 007A  
                            ??___fltol 00B9                              ??___lldiv 0020  
                            ??___llmod 002E                                 _fround 15F7  
                     ___awdiv@quotient 0026                        ___awmod@divisor 0072  
                            ??_avgBuff 00D9                        ___awmod@counter 0077  
                         ?_wakeup_idle 0070                       getTemps@numTemps 00C8  
                            ??_isdigit 0072                     __size_of__Umul8_16 0020  
                     __end_of_spiSetup 2E81                              ??_set_adc 0075  
                     ?_spi_write_array 0075                       __end_of_spi_read 2E3F  
                 __end_of_LTC6804_adcv 2031         __end_ofLTC6804_rdcv@BYT_IN_REG 3168  
                 __end_of_LTC6804_rdcv 2000                              ??_sprintf 00E7  
                           ___flge@ff1 0072                             ___flge@ff2 0076  
                         sumVoltages@i 00E0                           ___xxtofl@arg 0034  
                         ___xxtofl@exp 0033                           ___xxtofl@val 002E  
              __end_of__initialization 00AC                          spi_write@data 0074  
                           ___flneg@f1 0072                  calculateTemp@adcValue 00C0  
                           ___fltol@f1 00B5                LTC6804_rdaux@NUM_RX_BYT 3164  
                  ___bmul@multiplicand 0072        __end_ofLTC6804_rdcv@CELL_IN_REG 3167  
                    ltc6804@crc15Table 1800                             _crc15Table 1A00  
                       __pcstackCOMMON 0070                           __pidataBANK3 2E0E  
                        __end_of_scale 03D5                          __end_of_setup 2F54  
                   _LTC6804_initialize 2E07                      __end_of_i2cSwitch 2E07  
               __size_of_writeVoltages 015B                             __end_of_t0 315D  
                           __div_to_l_ 1C09            measureVoltages@measurements 00BD  
                         ?_sumVoltages 00D5                    ?_LTC6804_initialize 0070  
                        adcRead@ansLow 002A                        __div_to_l_@exp1 002A  
                      __div_to_l_@cntr 0029                                ??_scale 00A0  
                      __div_to_l_@quot 0025                           sprintf@width 0131  
                              ??_setup 0079                             __pbssBANK2 0162  
                           __pbssBANK3 01A0                             __pbssBANK4 0220  
                           __pbssBANK5 02A0                             __pbssBANK6 0320  
                            ?_i2cSetup 0070         __end_ofLTC6804_rdcv@NUM_RX_BYT 30C3  
             LTC6804_rdaux@GPIO_IN_REG 3162                        __CFG_VCAPEN$OFF 0000  
            __end_ofltc6804@crc15Table 1A00                             _pec15_calc 213C  
                        __div_to_l_@f1 0072                          __div_to_l_@f2 0076  
                  writeCurrent@current 013B                   ??_LTC6804_initialize 0079  
                    __end_of__Umul8_16 2F0E                     spi_write_array@len 0077  
                           __pmaintext 1D9E                                ?___flge 0072  
                              ?___bmul 0072                 LTC6804_rdcv@cell_codes 003C  
                              ?___wmul 0072                             __pintentry 0004  
             LTC6804_rdcv@data_counter 0057                             _getCurrent 2FC2  
                              _CCP2CON 029A      writeValuesToUart@voltageArrLength 0150  
                              ?_fround 006C                              ?_adcSetup 0070  
             LTC6804_rdaux_reg@REG_LEN 3161                     __size_of_uartSetup 000D  
               __size_of_calculateTemp 0087                     __size_of_spiSwitch 000A  
                            ?___xxtofl 002E                 measureVoltages@ltcData 00A4  
                   __size_of_spi_write 000B                       ??_spi_write_read 0020  
                              _SSP1BUF 0211                              ?_getTemps 00C8  
                              _SSPCON1 0215                                _SSPSTAT 0214  
            __size_of_LTC6804_rdcv_reg 0055                             ??_i2cSetup 0072  
                        _writeVoltages 130D                   writeVoltages@maxCell 0149  
                 spi_write_read@i_1378 0026                   writeVoltages@minCell 014B  
                    __end_of__npowers_ 3068                             _scale$2114 00B0  
                            ?_spiSetup 0070                   __size_of_uartDisable 0003  
                      __size_of___flge 009A                        __size_of___bmul 0011  
                            ?_spi_read 0070                                ___fladd 0601  
                 spi_write_read@rx_len 0079                                ___fldiv 1468  
                              _adcRead 2282                                ___awdiv 21DD  
                              ___flneg 1C00                                ___awmod 20F7  
                              ___flmul 03D5                   spi_write_read@tx_len 0076  
                              ___flsub 2ECF                                ___fltol 2385  
                              ___lldiv 222F                        __size_of___wmul 001B  
                              ___llmod 20B4              writeVoltages@totalVoltage 013D  
                 __size_of_timer0Setup 0005                             ??_adcSetup 0072  
                 __size_of_timer2Setup 000B                        __size_of_fround 0209  
                              _avgBuff 2483                                __ptext1 2F8A  
                              __ptext2 130D                                __ptext3 232B  
                              __ptext4 2F0E                                __ptext5 2031  
                              __ptext6 07FD                                __ptext7 080B  
                              __ptext8 00B0                                __ptext9 2E3F  
                __size_of_LTC6804_adcv 0030            writeValuesToUart@voltageArr 00EF  
                         __size_of_ISR 0071                            ?__div_to_l_ 0072  
                __size_of_LTC6804_rdcv 0189                                _dpowers 309A  
                              _current 0162                                _isdigit 2E3F  
                           ??___xxtofl 0074                       ___awmod@dividend 0074  
                 __size_of_wakeup_idle 0009                 LTC6804_rdcv@current_ic 0052  
                              _set_adc 2071                             ??_getTemps 00CA  
                              _sprintf 080B                                clrloop0 2DF5  
                           avgBuff@inc 00E0                   end_of_initialization 00AC  
                       ?_writeVoltages 013B        __end_ofLTC6804_rdcv_reg@REG_LEN 3166  
                              init_ram 2DFA                                initloop 2DFB  
            __size_of_calculateCurrent 0089                          ??_clearScreen 013B  
                        pec15_calc@len 002B                            ?_pec15_calc 0076  
                    __end_of_uartSetup 130D                          _calculateTemp 250A  
             calculateCurrent@adcValue 00D5                        ___lldiv@divisor 0072  
                    __end_of_spiSwitch 2E28                        ___lldiv@counter 0025  
                           _uartEnable 07FD                   calculateCurrent@curr 00D9  
                           ??_spiSetup 0072                              _RCSTAbits 019D  
                    __end_of_spi_write 2E33                           _LTC6804_adcv 2001  
                           ??_spi_read 0072                           _LTC6804_rdcv 1E77  
                       __tdiv_to_l_@f1 0072                         __tdiv_to_l_@f2 0076  
                          ?_getCurrent 00E1                          ??__tdiv_to_l_ 0020  
                           _timerSetup 2DEE                    LTC6804_rdcv_reg@cmd 0036  
                  LTC6804_rdcv_reg@reg 003A                            ___fladd@grs 00D4  
                        ___xxtofl@sign 0032                              _TRISAbits 008C  
                            _TRISBbits 008D                              _TRISCbits 008E  
                            _TRISDbits 008F                   __size_of_sumVoltages 0052  
                          ___fldiv@grs 004C                            ___fldiv@rem 0046  
             __size_of_measureVoltages 00D0                            ___flmul@grs 0061  
                       ?_calculateTemp 00C0                              _TXSTAbits 019E  
                  __size_of__div_to_l_ 00C5                    __end_of_clearScreen 2071  
                       __end_of___flge 274A                         __end_of___bmul 2E5E  
                           _writeTemps 232B                         __end_of___wmul 2EB1  
                       __end_of_fround 1800                    __size_of_pec15_calc 004F  
                            _i2cSwitch 2E00                    start_initialization 0077  
                          __end_of_ISR 0075                    __end_of__tdiv_to_l_ 2800  
                 measureVoltages@F7575 01A0                        ??_writeVoltages 0141  
                     _LTC6804_rdcv_reg 22D6                    __size_of_getCurrent 003E  
             __size_of_spi_write_array 0015                        ___llmod@divisor 0026  
                    __size_of_i2cSetup 0011                        ___llmod@counter 002F  
                  getTemps@highestTemp 00CE                            _APFCON1bits 011D  
                       adcRead@ansHigh 0028                            ?_uartEnable 0070  
                             ??___flge 0020                               ??___bmul 0073  
                             ??___wmul 0076                              __Umul8_16 2EEE  
                          __pdataBANK3 01D8                               ??_fround 00A0  
                 getTemps@temperatures 00D0                        LTC6804_adcv@cmd 002F  
                          ?_timerSetup 0070                          sprintf@tmpval 0125  
                            ___fladd@a 00C1                              ___fladd@b 00BD  
                           fround@prec 00BC                      __size_of_adcSetup 001E  
                            ___fldiv@a 0038                              ___fldiv@b 003C  
                            ___flmul@a 0056                             ?_i2cSwitch 0070  
                            ___flmul@b 0052                            __pbssCOMMON 007A  
                            ___flsub@a 00D5                              ___flsub@b 00D9  
                            ___latbits 0003          writeValuesToUart@totalVoltage 0152  
                        __pcstackBANK0 0020                          __pcstackBANK1 00A0  
                        __pcstackBANK2 0120                LTC6804_rdcv@CELL_IN_REG 3166  
                    __size_of___xxtofl 0096                           _isdigit$1724 0072  
                            adcRead@ch 0027                        ??_calculateTemp 00C2  
                    __size_of_getTemps 007F                           _currentIndex 0166  
                      LTC6804_rdcv@reg 0051                            sprintf@flag 012F  
                          sprintf@fval 0133                       _calculateCurrent 2591  
                          sprintf@prec 0137                            _clearScreen 2031  
                  spi_write_array@data 0075                   calculateTemp@voltage 00C4  
                    ??_measureVoltages 00A0            __size_of_LTC6804_initialize 0007  
                LTC6804_rdcv@cell_data 0042                               ?___fladd 00BD  
                             ?___fldiv 0038                               ?_adcRead 0072  
                             ?___awdiv 0020                               ?___flneg 0072  
                             ?___awmod 0072                               ?___flmul 0052  
                             ?___flsub 00D5                               ?___fltol 00B5  
                             ?___lldiv 0072                               ?___llmod 0026  
                            __npowers_ 3034                             ?__Umul8_16 0072  
                 __end_of_temperatures 309A      __end_ofLTC6804_rdcfg@BYTES_IN_REG 3160  
    __end_ofLTC6804_wrcfg@BYTES_IN_REG 3161                 getCurrent@currentValue 00E5  
                          ?_writeTemps 013B                      __size_of_spiSetup 0012  
                    __size_of_spi_read 000C                               ?_avgBuff 00D5  
                          __tdiv_to_l_ 274A                           ??__div_to_l_ 0020  
                           set_adc@CHG 0074                             set_adc@DCP 0072  
                             ?_isdigit 0070                               ?_set_adc 0072  
                  __size_of_uartEnable 0003                               ?_sprintf 00DD  
                   __end_of_crc15Table 1C00                          ?_writeCurrent 013B  
                       __size_of_scale 0325                         __size_of_setup 0026  
                LTC6804_rdcv@pec_error 004A          LTC6804_rdcv@current_cell_1296 0055  
                       ___wmul@product 0076                    __size_of_timerSetup 0006  
                             _LATAbits 010C                               _LATBbits 010D  
                             _LATDbits 010F               LTC6804_rdcv@current_cell 0053  
                         ??_pec15_calc 0020                              clear_ram0 2DF4  
                             _PIE1bits 0091                               _PIE2bits 0092  
                        ??_uartDisable 0070                measureVoltages@pecError 00BC  
                             _PIR1bits 0011                     __end_of__div_to_l_ 1CCE  
                             _PIR2bits 0012                              _uartSetup 1300  
                    ??_spi_write_array 0076                          ??_timer0Setup 0072  
                        ??_timer2Setup 0072                               _SSP1CON1 0215  
                            _spiSwitch 2E1E                           ??_getCurrent 007A  
                          _highestTemp 01BE                              _spi_write 2E28  
                          writeTemps@k 0140                          ??_wakeup_idle 0072  
                           _ADCON0bits 009D                      ___wmul@multiplier 0072  
                          ??_i2cSwitch 0072                     __end_of_pec15_calc 218B  
                         clearScreen@j 013E                         ??_writeCurrent 007A  
                         avgBuff@total 00DC                               _i2cSetup 2E5E  
           measureVoltages@numVoltages 006C                    __size_of_writeTemps 005A  
                   __end_of_getCurrent 3000                       measureVoltages@i 00BE  
             LTC6804_rdcv@received_pec 004D                               _OledFont 1000  
             LTC6804_rdcv_reg@total_ic 002F                __size_of_spi_write_read 0036  
                           ?_uartSetup 0070                             ?_spiSwitch 0070  
                          ??__Umul8_16 0074               __end_of_LTC6804_rdcv_reg 232B  
                spi_write_read@tx_Data 0027                       __size_of___fladd 01FC  
                     __size_of___fldiv 018F                       __size_of_adcRead 0054  
                     __size_of___awdiv 0052                       __size_of___flneg 0009  
                  __end_of_uartDisable 2DE9                       __size_of___awmod 0045  
                spi_write_read@rx_data 0077                       __size_of___flmul 022C  
                     __size_of___flsub 001F                       __size_of___fltol 007F  
                     __size_of___lldiv 0053                       __size_of___llmod 0043  
                             _adcSetup 2EB1                             ?_spi_write 0070  
      __end_ofLTC6804_rdaux@BYT_IN_REG 3164                            _fround$2112 00B8  
                          _fround$2113 00B4                LTC6804_rdcv_reg@REG_LEN 3165  
                     __size_of_avgBuff 0087                    __end_of_timer0Setup 2DEE  
                  __end_of_timer2Setup 080B                            _currentBuff 0320  
                          _currentBool 01C0                          ??_sumVoltages 00D9  
                         _tempChannels 01D8                             sprintf@exp 012D  
                           sprintf@val 0129                               ___xxtofl 261A  
                     __size_of_isdigit 000E                   LTC6804_rdcv@data_pec 004F  
                 LTC6804_rdcv@cell_reg 0056                    __end_of_wakeup_idle 2E1E  
                     __size_of_set_adc 0043                               __ptext10 15F7  
                             __ptext11 20F7                               __ptext20 2E1E  
                             __ptext12 21DD                               __ptext21 2F2E  
                             __ptext13 274A                               __ptext30 2071  
                             __ptext22 1300                               __ptext14 1C09  
                             __ptext31 1CCE                               __ptext23 2DEE  
                             __ptext15 20B4                               __ptext40 2E15  
                             __ptext32 26B0                               __ptext24 0800  
                             __ptext16 222F                               __ptext41 2E81  
                             __ptext33 1E77                               __ptext25 2DE9  
                             __ptext17 2ECF                               __ptext50 03D5  
                             __ptext42 2E28                               __ptext34 2E96  
                             __ptext26 2E6F                               __ptext18 1C00  
                             __ptext51 2EEE                               __ptext43 213C  
                             __ptext35 22D6                               __ptext27 2E5E  
                             __ptext19 218B                               __ptext52 2282  
                             __ptext44 2E00                               __ptext36 2F54  
                             __ptext28 2EB1                               __ptext53 2483  
                             __ptext45 2404                               __ptext37 2E33  
                             __ptext29 2E07                               __ptext54 261A  
                             __ptext46 250A                               __ptext38 2E4D  
                             __ptext55 1468                               __ptext47 2385  
                             __ptext39 2001                               __ptext56 0601  
                             __ptext48 2FC2                               __ptext49 2591  
                             __ptext58 2DE6                               _getTemps 2404  
                         _SSP1CON1bits 0215                           _SSP1CON3bits 0217  
                             __powers_ 3000                    LTC6804_adcv@cmd_pec 0033  
                     __size_of_sprintf 07F5                              set_adc@CH 0073  
                            set_adc@MD 0077                          __size_of_main 00D9  
                         ??_uartEnable 0072                            pec15_calc@i 002C  
                             _uartBool 01C2                               _spiSetup 2E6F  
              LTC6804_rdcv_reg@cmd_pec 0034                               _spi_read 2E33  
                             int$flags 007E                  _calculateCurrent$2110 00DD  
                         _SSP1STATbits 0214                           ??_timerSetup 0072  
                 LTC6804_rdcv@total_ic 003B                               _voltages 0220  
           writeValuesToUart@uartLines 015F                            avgBuff@buff 00DB  
             __end_of_calculateCurrent 261A                            avgBuff@size 00D5  
      __end_ofLTC6804_rdaux@NUM_RX_BYT 3165                      _writeValuesToUart 2F8A  
                           _INTCONbits 000B                         __pstringtext10 315F  
                       __pstringtext11 3160                         __pstringtext20 30E9  
                       __pstringtext12 3161                         __pstringtext21 3100  
                       __pstringtext13 3162                         __pstringtext22 3114  
                       __pstringtext14 3163                         __pstringtext23 3127  
                       __pstringtext15 3164                         __pstringtext24 3136  
                       __pstringtext16 3165                         __pstringtext25 3145  
                       __pstringtext17 3166                         __pstringtext26 3150  
                       __pstringtext18 3167                         __pstringtext27 0000  
                       __pstringtext19 30C2                     ?_writeValuesToUart 0150  
                             isdigit@c 0073                LTC6804_rdcv@parsed_cell 004B  
                    sumVoltages@values 00DB                       spi_read@readData 0074  
                             scale@scl 00B4                     __end_of_uartEnable 0800  
                      _measureVoltages 1CCE                         pec15_calc@addr 0029  
                       pec15_calc@data 0076                    __end_of_sumVoltages 21DD  
                __end_of_writeVoltages 1468                               intlevel1 0000  
                         _temperatures 3068                              sprintf@ap 0124  
                     __tdiv_to_l_@exp1 0029                       __tdiv_to_l_@cntr 0028  
                            sprintf@sp 0139                       __tdiv_to_l_@quot 0024  
               sumVoltages@numVoltages 00D5                    ??_writeValuesToUart 007A  
                     ___lldiv@dividend 0076                 LTC6804_rdcv@BYT_IN_REG 3167  
                    __CFG_CLKOUTEN$OFF 0000                     __end_of_timerSetup 2DF4  
                         ?_clearScreen 00ED                            _uartDisable 2DE6  
                          ??_uartSetup 0072                            _timer0Setup 2DE9  
                 __end_of_writeCurrent 2F2E                            _timer2Setup 0800  
                          ??_spiSwitch 0072                  writeTemps@highestTemp 013B  
                         ??_writeTemps 00ED                            ??_spi_write 0072  
                         ?__tdiv_to_l_ 0072                          __pstringtext1 1000  
                        __pstringtext2 1800                          __pstringtext3 1A00  
                        __pstringtext4 3000                          __pstringtext5 3034  
                        __pstringtext6 3068                          __pstringtext7 309A  
                        __pstringtext8 3159                          __pstringtext9 315D  
            __end_of_writeValuesToUart 2FC2                       sumVoltages@total 00DC  
                          _wakeup_idle 2E15                 __Umul8_16@multiplicand 0072  
                           _OPTION_REG 0095                               sprintf@c 013A  
                             sprintf@f 00DD                       ___lldiv@quotient 0021  
                          _SSPCON2bits 0216              LTC6804_rdcfg@BYTES_IN_REG 315F  
            LTC6804_wrcfg@BYTES_IN_REG 3160                          ___fladd@signs 00D1  
                          getTemps@inc 00D1                        _spi_write_array 2E81  
                 LTC6804_rdcv_reg@data 0030                           ___fladd@aexp 00D2  
                         ___fladd@bexp 00D3                  __end_of_calculateTemp 2591  
                   __end_of_writeTemps 2385                   __Umul8_16@multiplier 0024  
           __end_of_LTC6804_initialize 2E0E                         _spi_write_read 2F54  
               LTC6804_rdcv@NUM_RX_BYT 30C2                      __Umul8_16@product 0020  
