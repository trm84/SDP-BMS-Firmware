

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Feb 21 17:28:33 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	stringtext17,global,class=STRCODE,delta=2
    22                           	psect	stringtext18,global,class=STRCODE,delta=2
    23                           	psect	stringtext19,global,class=STRCODE,delta=2
    24                           	psect	stringtext20,global,class=STRCODE,delta=2
    25                           	psect	stringtext21,global,class=STRCODE,delta=2
    26                           	psect	stringtext22,global,class=STRCODE,delta=2
    27                           	psect	stringtext23,global,class=STRCODE,delta=2
    28                           	psect	stringtext24,global,class=STRCODE,delta=2
    29                           	psect	cinit,global,class=CODE,merge=1,delta=2
    30                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    31                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    32                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    33                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    34                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    35                           	psect	clrtext,global,class=CODE,delta=2
    36                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1
    37                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    38                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    39                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    40                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    41                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    42                           	psect	text1,local,class=CODE,merge=1,delta=2
    43                           	psect	text2,local,class=CODE,merge=1,delta=2
    44                           	psect	text3,local,class=CODE,merge=1,delta=2
    45                           	psect	text4,local,class=CODE,merge=1,delta=2
    46                           	psect	text5,local,class=CODE,merge=1,delta=2
    47                           	psect	text6,local,class=CODE,merge=1,delta=2
    48                           	psect	text7,local,class=CODE,merge=1,delta=2
    49                           	psect	text8,local,class=CODE,merge=1,delta=2
    50                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text10,local,class=CODE,merge=1,delta=2
    52                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    54                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text18,local,class=CODE,merge=1,delta=2
    60                           	psect	text19,local,class=CODE,merge=1,delta=2
    61                           	psect	text20,local,class=CODE,merge=1,delta=2
    62                           	psect	text21,local,class=CODE,merge=1,delta=2
    63                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    64                           	psect	text23,local,class=CODE,merge=1,delta=2
    65                           	psect	text24,local,class=CODE,merge=1,delta=2
    66                           	psect	text25,local,class=CODE,merge=1,delta=2
    67                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text27,local,class=CODE,merge=1,delta=2
    69                           	psect	text28,local,class=CODE,merge=1,delta=2
    70                           	psect	text29,local,class=CODE,merge=1,delta=2
    71                           	psect	text30,local,class=CODE,merge=1,delta=2
    72                           	psect	text31,local,class=CODE,merge=1,delta=2
    73                           	psect	text32,local,class=CODE,merge=1,delta=2
    74                           	psect	text33,local,class=CODE,merge=1,delta=2
    75                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text38,local,class=CODE,merge=1,delta=2
    80                           	psect	text39,local,class=CODE,merge=1,delta=2
    81                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    82                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
    84                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text46,local,class=CODE,merge=1,delta=2
    88                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
    89                           	psect	text48,local,class=CODE,merge=1,delta=2
    90                           	psect	text49,local,class=CODE,merge=1,delta=2
    91                           	psect	text50,local,class=CODE,merge=1,delta=2
    92                           	psect	text51,local,class=CODE,merge=1,delta=2
    93                           	psect	text52,local,class=CODE,merge=1,delta=2
    94                           	psect	text53,local,class=CODE,merge=1,delta=2
    95                           	psect	text54,local,class=CODE,merge=1,delta=2
    96                           	psect	intentry,global,class=CODE,delta=2
    97                           	psect	text56,local,class=CODE,merge=1,delta=2
    98                           	psect	text57,local,class=CODE,merge=1,delta=2
    99                           	dabs	1,0xCA0,32
   100                           	dabs	1,0xC20,80
   101                           	dabs	1,0xBA0,80
   102                           	dabs	1,0xB20,80
   103                           	dabs	1,0xAA0,80
   104                           	dabs	1,0xA40,48
   105                           	dabs	1,0x2660,0,_currentBuff
   106                           	dabs	1,0x7E,2
   107  0000                     
   108                           ; Version 1.45
   109                           ; Generated 16/11/2017 GMT
   110                           ; 
   111                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   112                           ; All rights reserved.
   113                           ; 
   114                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   115                           ; 
   116                           ; Redistribution and use in source and binary forms, with or without modification, are
   117                           ; permitted provided that the following conditions are met:
   118                           ; 
   119                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   120                           ;        conditions and the following disclaimer.
   121                           ; 
   122                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   123                           ;        of conditions and the following disclaimer in the documentation and/or other
   124                           ;        materials provided with the distribution.
   125                           ; 
   126                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   127                           ;        software without specific prior written permission.
   128                           ; 
   129                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   130                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   131                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   132                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   133                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   134                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   135                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   136                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   137                           ; 
   138                           ; 
   139                           ; Code-generator required, PIC16F1789 Definitions
   140                           ; 
   141                           ; SFR Addresses
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  008F                     	;# 
   176  0090                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0095                     	;# 
   182  0096                     	;# 
   183  0097                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009A                     	;# 
   187  009B                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0110                     	;# 
   198  0111                     	;# 
   199  0112                     	;# 
   200  0113                     	;# 
   201  0114                     	;# 
   202  0115                     	;# 
   203  0116                     	;# 
   204  0117                     	;# 
   205  0118                     	;# 
   206  0119                     	;# 
   207  011A                     	;# 
   208  011B                     	;# 
   209  011C                     	;# 
   210  011D                     	;# 
   211  011D                     	;# 
   212  011D                     	;# 
   213  011E                     	;# 
   214  011F                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  018E                     	;# 
   218  018F                     	;# 
   219  0190                     	;# 
   220  0191                     	;# 
   221  0191                     	;# 
   222  0192                     	;# 
   223  0193                     	;# 
   224  0193                     	;# 
   225  0193                     	;# 
   226  0194                     	;# 
   227  0195                     	;# 
   228  0196                     	;# 
   229  0197                     	;# 
   230  0199                     	;# 
   231  0199                     	;# 
   232  0199                     	;# 
   233  019A                     	;# 
   234  019A                     	;# 
   235  019A                     	;# 
   236  019B                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019C                     	;# 
   244  019D                     	;# 
   245  019D                     	;# 
   246  019D                     	;# 
   247  019E                     	;# 
   248  019E                     	;# 
   249  019E                     	;# 
   250  019F                     	;# 
   251  019F                     	;# 
   252  019F                     	;# 
   253  019F                     	;# 
   254  019F                     	;# 
   255  020C                     	;# 
   256  020D                     	;# 
   257  020E                     	;# 
   258  020F                     	;# 
   259  0210                     	;# 
   260  0211                     	;# 
   261  0211                     	;# 
   262  0212                     	;# 
   263  0212                     	;# 
   264  0213                     	;# 
   265  0213                     	;# 
   266  0214                     	;# 
   267  0214                     	;# 
   268  0215                     	;# 
   269  0215                     	;# 
   270  0215                     	;# 
   271  0215                     	;# 
   272  0216                     	;# 
   273  0216                     	;# 
   274  0217                     	;# 
   275  0217                     	;# 
   276  028C                     	;# 
   277  028D                     	;# 
   278  028E                     	;# 
   279  028F                     	;# 
   280  0290                     	;# 
   281  0291                     	;# 
   282  0291                     	;# 
   283  0292                     	;# 
   284  0293                     	;# 
   285  0298                     	;# 
   286  0298                     	;# 
   287  0299                     	;# 
   288  029A                     	;# 
   289  030C                     	;# 
   290  030D                     	;# 
   291  030E                     	;# 
   292  030F                     	;# 
   293  0310                     	;# 
   294  0311                     	;# 
   295  0311                     	;# 
   296  0312                     	;# 
   297  0313                     	;# 
   298  038C                     	;# 
   299  038D                     	;# 
   300  038E                     	;# 
   301  038F                     	;# 
   302  0390                     	;# 
   303  0391                     	;# 
   304  0392                     	;# 
   305  0393                     	;# 
   306  0394                     	;# 
   307  0395                     	;# 
   308  0396                     	;# 
   309  0397                     	;# 
   310  0398                     	;# 
   311  0399                     	;# 
   312  039D                     	;# 
   313  039E                     	;# 
   314  039F                     	;# 
   315  0511                     	;# 
   316  0513                     	;# 
   317  0515                     	;# 
   318  051A                     	;# 
   319  0591                     	;# 
   320  0592                     	;# 
   321  0592                     	;# 
   322  0593                     	;# 
   323  0594                     	;# 
   324  0594                     	;# 
   325  0595                     	;# 
   326  0596                     	;# 
   327  0596                     	;# 
   328  0E91                     	;# 
   329  0E92                     	;# 
   330  0E93                     	;# 
   331  0E94                     	;# 
   332  0E95                     	;# 
   333  0E96                     	;# 
   334  0E97                     	;# 
   335  0E98                     	;# 
   336  0E99                     	;# 
   337  0E9A                     	;# 
   338  0E9B                     	;# 
   339  0E9C                     	;# 
   340  0E9D                     	;# 
   341  0E9E                     	;# 
   342  0E9F                     	;# 
   343  0EA0                     	;# 
   344  0EA1                     	;# 
   345  0EA1                     	;# 
   346  0EA2                     	;# 
   347  0EA3                     	;# 
   348  0EA3                     	;# 
   349  0EA4                     	;# 
   350  0EA5                     	;# 
   351  0EA5                     	;# 
   352  0EA6                     	;# 
   353  0EA7                     	;# 
   354  0EA7                     	;# 
   355  0EA8                     	;# 
   356  0EA9                     	;# 
   357  0EAA                     	;# 
   358  0EAB                     	;# 
   359  0EAC                     	;# 
   360  0EAD                     	;# 
   361  0EAE                     	;# 
   362  0EAF                     	;# 
   363  0EB1                     	;# 
   364  0EB2                     	;# 
   365  0EB3                     	;# 
   366  0EB4                     	;# 
   367  0EB5                     	;# 
   368  0EB6                     	;# 
   369  0EB7                     	;# 
   370  0EB8                     	;# 
   371  0EB9                     	;# 
   372  0EBA                     	;# 
   373  0EBB                     	;# 
   374  0EBC                     	;# 
   375  0EBD                     	;# 
   376  0EBE                     	;# 
   377  0EBF                     	;# 
   378  0EC0                     	;# 
   379  0EC1                     	;# 
   380  0EC1                     	;# 
   381  0EC2                     	;# 
   382  0EC3                     	;# 
   383  0EC3                     	;# 
   384  0EC4                     	;# 
   385  0EC5                     	;# 
   386  0EC5                     	;# 
   387  0EC6                     	;# 
   388  0EC7                     	;# 
   389  0EC7                     	;# 
   390  0EC8                     	;# 
   391  0EC9                     	;# 
   392  0ECA                     	;# 
   393  0ECB                     	;# 
   394  0ECC                     	;# 
   395  0ECD                     	;# 
   396  0ECE                     	;# 
   397  0ECF                     	;# 
   398  0ED1                     	;# 
   399  0ED2                     	;# 
   400  0ED3                     	;# 
   401  0ED4                     	;# 
   402  0ED5                     	;# 
   403  0ED6                     	;# 
   404  0ED7                     	;# 
   405  0ED8                     	;# 
   406  0ED9                     	;# 
   407  0EDA                     	;# 
   408  0EDB                     	;# 
   409  0EDC                     	;# 
   410  0EDD                     	;# 
   411  0EDE                     	;# 
   412  0EDF                     	;# 
   413  0EE0                     	;# 
   414  0EE1                     	;# 
   415  0EE1                     	;# 
   416  0EE2                     	;# 
   417  0EE3                     	;# 
   418  0EE3                     	;# 
   419  0EE4                     	;# 
   420  0EE5                     	;# 
   421  0EE5                     	;# 
   422  0EE6                     	;# 
   423  0EE7                     	;# 
   424  0EE7                     	;# 
   425  0EE8                     	;# 
   426  0EE9                     	;# 
   427  0EEA                     	;# 
   428  0EEB                     	;# 
   429  0EEC                     	;# 
   430  0EED                     	;# 
   431  0EEE                     	;# 
   432  0EEF                     	;# 
   433  0F11                     	;# 
   434  0F12                     	;# 
   435  0F13                     	;# 
   436  0F14                     	;# 
   437  0F15                     	;# 
   438  0F16                     	;# 
   439  0F17                     	;# 
   440  0F18                     	;# 
   441  0F19                     	;# 
   442  0F1A                     	;# 
   443  0F1B                     	;# 
   444  0F1C                     	;# 
   445  0F1D                     	;# 
   446  0F1E                     	;# 
   447  0F1F                     	;# 
   448  0F20                     	;# 
   449  0F21                     	;# 
   450  0F21                     	;# 
   451  0F22                     	;# 
   452  0F23                     	;# 
   453  0F23                     	;# 
   454  0F24                     	;# 
   455  0F25                     	;# 
   456  0F25                     	;# 
   457  0F26                     	;# 
   458  0F27                     	;# 
   459  0F27                     	;# 
   460  0F28                     	;# 
   461  0F29                     	;# 
   462  0F2A                     	;# 
   463  0F2B                     	;# 
   464  0F2C                     	;# 
   465  0F2D                     	;# 
   466  0F2E                     	;# 
   467  0F2F                     	;# 
   468  0FE4                     	;# 
   469  0FE5                     	;# 
   470  0FE6                     	;# 
   471  0FE7                     	;# 
   472  0FE8                     	;# 
   473  0FE9                     	;# 
   474  0FEA                     	;# 
   475  0FEB                     	;# 
   476  0FED                     	;# 
   477  0FEE                     	;# 
   478  0FEF                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000F                     	;# 
   495  0010                     	;# 
   496  0011                     	;# 
   497  0012                     	;# 
   498  0013                     	;# 
   499  0014                     	;# 
   500  0015                     	;# 
   501  0016                     	;# 
   502  0016                     	;# 
   503  0017                     	;# 
   504  0018                     	;# 
   505  0019                     	;# 
   506  001A                     	;# 
   507  001B                     	;# 
   508  001C                     	;# 
   509  008C                     	;# 
   510  008D                     	;# 
   511  008E                     	;# 
   512  008F                     	;# 
   513  0090                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0094                     	;# 
   518  0095                     	;# 
   519  0096                     	;# 
   520  0097                     	;# 
   521  0098                     	;# 
   522  0099                     	;# 
   523  009A                     	;# 
   524  009B                     	;# 
   525  009B                     	;# 
   526  009C                     	;# 
   527  009D                     	;# 
   528  009E                     	;# 
   529  009F                     	;# 
   530  010C                     	;# 
   531  010D                     	;# 
   532  010E                     	;# 
   533  010F                     	;# 
   534  0110                     	;# 
   535  0111                     	;# 
   536  0112                     	;# 
   537  0113                     	;# 
   538  0114                     	;# 
   539  0115                     	;# 
   540  0116                     	;# 
   541  0117                     	;# 
   542  0118                     	;# 
   543  0119                     	;# 
   544  011A                     	;# 
   545  011B                     	;# 
   546  011C                     	;# 
   547  011D                     	;# 
   548  011D                     	;# 
   549  011D                     	;# 
   550  011E                     	;# 
   551  011F                     	;# 
   552  018C                     	;# 
   553  018D                     	;# 
   554  018E                     	;# 
   555  018F                     	;# 
   556  0190                     	;# 
   557  0191                     	;# 
   558  0191                     	;# 
   559  0192                     	;# 
   560  0193                     	;# 
   561  0193                     	;# 
   562  0193                     	;# 
   563  0194                     	;# 
   564  0195                     	;# 
   565  0196                     	;# 
   566  0197                     	;# 
   567  0199                     	;# 
   568  0199                     	;# 
   569  0199                     	;# 
   570  019A                     	;# 
   571  019A                     	;# 
   572  019A                     	;# 
   573  019B                     	;# 
   574  019B                     	;# 
   575  019B                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019C                     	;# 
   579  019C                     	;# 
   580  019C                     	;# 
   581  019D                     	;# 
   582  019D                     	;# 
   583  019D                     	;# 
   584  019E                     	;# 
   585  019E                     	;# 
   586  019E                     	;# 
   587  019F                     	;# 
   588  019F                     	;# 
   589  019F                     	;# 
   590  019F                     	;# 
   591  019F                     	;# 
   592  020C                     	;# 
   593  020D                     	;# 
   594  020E                     	;# 
   595  020F                     	;# 
   596  0210                     	;# 
   597  0211                     	;# 
   598  0211                     	;# 
   599  0212                     	;# 
   600  0212                     	;# 
   601  0213                     	;# 
   602  0213                     	;# 
   603  0214                     	;# 
   604  0214                     	;# 
   605  0215                     	;# 
   606  0215                     	;# 
   607  0215                     	;# 
   608  0215                     	;# 
   609  0216                     	;# 
   610  0216                     	;# 
   611  0217                     	;# 
   612  0217                     	;# 
   613  028C                     	;# 
   614  028D                     	;# 
   615  028E                     	;# 
   616  028F                     	;# 
   617  0290                     	;# 
   618  0291                     	;# 
   619  0291                     	;# 
   620  0292                     	;# 
   621  0293                     	;# 
   622  0298                     	;# 
   623  0298                     	;# 
   624  0299                     	;# 
   625  029A                     	;# 
   626  030C                     	;# 
   627  030D                     	;# 
   628  030E                     	;# 
   629  030F                     	;# 
   630  0310                     	;# 
   631  0311                     	;# 
   632  0311                     	;# 
   633  0312                     	;# 
   634  0313                     	;# 
   635  038C                     	;# 
   636  038D                     	;# 
   637  038E                     	;# 
   638  038F                     	;# 
   639  0390                     	;# 
   640  0391                     	;# 
   641  0392                     	;# 
   642  0393                     	;# 
   643  0394                     	;# 
   644  0395                     	;# 
   645  0396                     	;# 
   646  0397                     	;# 
   647  0398                     	;# 
   648  0399                     	;# 
   649  039D                     	;# 
   650  039E                     	;# 
   651  039F                     	;# 
   652  0511                     	;# 
   653  0513                     	;# 
   654  0515                     	;# 
   655  051A                     	;# 
   656  0591                     	;# 
   657  0592                     	;# 
   658  0592                     	;# 
   659  0593                     	;# 
   660  0594                     	;# 
   661  0594                     	;# 
   662  0595                     	;# 
   663  0596                     	;# 
   664  0596                     	;# 
   665  0E91                     	;# 
   666  0E92                     	;# 
   667  0E93                     	;# 
   668  0E94                     	;# 
   669  0E95                     	;# 
   670  0E96                     	;# 
   671  0E97                     	;# 
   672  0E98                     	;# 
   673  0E99                     	;# 
   674  0E9A                     	;# 
   675  0E9B                     	;# 
   676  0E9C                     	;# 
   677  0E9D                     	;# 
   678  0E9E                     	;# 
   679  0E9F                     	;# 
   680  0EA0                     	;# 
   681  0EA1                     	;# 
   682  0EA1                     	;# 
   683  0EA2                     	;# 
   684  0EA3                     	;# 
   685  0EA3                     	;# 
   686  0EA4                     	;# 
   687  0EA5                     	;# 
   688  0EA5                     	;# 
   689  0EA6                     	;# 
   690  0EA7                     	;# 
   691  0EA7                     	;# 
   692  0EA8                     	;# 
   693  0EA9                     	;# 
   694  0EAA                     	;# 
   695  0EAB                     	;# 
   696  0EAC                     	;# 
   697  0EAD                     	;# 
   698  0EAE                     	;# 
   699  0EAF                     	;# 
   700  0EB1                     	;# 
   701  0EB2                     	;# 
   702  0EB3                     	;# 
   703  0EB4                     	;# 
   704  0EB5                     	;# 
   705  0EB6                     	;# 
   706  0EB7                     	;# 
   707  0EB8                     	;# 
   708  0EB9                     	;# 
   709  0EBA                     	;# 
   710  0EBB                     	;# 
   711  0EBC                     	;# 
   712  0EBD                     	;# 
   713  0EBE                     	;# 
   714  0EBF                     	;# 
   715  0EC0                     	;# 
   716  0EC1                     	;# 
   717  0EC1                     	;# 
   718  0EC2                     	;# 
   719  0EC3                     	;# 
   720  0EC3                     	;# 
   721  0EC4                     	;# 
   722  0EC5                     	;# 
   723  0EC5                     	;# 
   724  0EC6                     	;# 
   725  0EC7                     	;# 
   726  0EC7                     	;# 
   727  0EC8                     	;# 
   728  0EC9                     	;# 
   729  0ECA                     	;# 
   730  0ECB                     	;# 
   731  0ECC                     	;# 
   732  0ECD                     	;# 
   733  0ECE                     	;# 
   734  0ECF                     	;# 
   735  0ED1                     	;# 
   736  0ED2                     	;# 
   737  0ED3                     	;# 
   738  0ED4                     	;# 
   739  0ED5                     	;# 
   740  0ED6                     	;# 
   741  0ED7                     	;# 
   742  0ED8                     	;# 
   743  0ED9                     	;# 
   744  0EDA                     	;# 
   745  0EDB                     	;# 
   746  0EDC                     	;# 
   747  0EDD                     	;# 
   748  0EDE                     	;# 
   749  0EDF                     	;# 
   750  0EE0                     	;# 
   751  0EE1                     	;# 
   752  0EE1                     	;# 
   753  0EE2                     	;# 
   754  0EE3                     	;# 
   755  0EE3                     	;# 
   756  0EE4                     	;# 
   757  0EE5                     	;# 
   758  0EE5                     	;# 
   759  0EE6                     	;# 
   760  0EE7                     	;# 
   761  0EE7                     	;# 
   762  0EE8                     	;# 
   763  0EE9                     	;# 
   764  0EEA                     	;# 
   765  0EEB                     	;# 
   766  0EEC                     	;# 
   767  0EED                     	;# 
   768  0EEE                     	;# 
   769  0EEF                     	;# 
   770  0F11                     	;# 
   771  0F12                     	;# 
   772  0F13                     	;# 
   773  0F14                     	;# 
   774  0F15                     	;# 
   775  0F16                     	;# 
   776  0F17                     	;# 
   777  0F18                     	;# 
   778  0F19                     	;# 
   779  0F1A                     	;# 
   780  0F1B                     	;# 
   781  0F1C                     	;# 
   782  0F1D                     	;# 
   783  0F1E                     	;# 
   784  0F1F                     	;# 
   785  0F20                     	;# 
   786  0F21                     	;# 
   787  0F21                     	;# 
   788  0F22                     	;# 
   789  0F23                     	;# 
   790  0F23                     	;# 
   791  0F24                     	;# 
   792  0F25                     	;# 
   793  0F25                     	;# 
   794  0F26                     	;# 
   795  0F27                     	;# 
   796  0F27                     	;# 
   797  0F28                     	;# 
   798  0F29                     	;# 
   799  0F2A                     	;# 
   800  0F2B                     	;# 
   801  0F2C                     	;# 
   802  0F2D                     	;# 
   803  0F2E                     	;# 
   804  0F2F                     	;# 
   805  0FE4                     	;# 
   806  0FE5                     	;# 
   807  0FE6                     	;# 
   808  0FE7                     	;# 
   809  0FE8                     	;# 
   810  0FE9                     	;# 
   811  0FEA                     	;# 
   812  0FEB                     	;# 
   813  0FED                     	;# 
   814  0FEE                     	;# 
   815  0FEF                     	;# 
   816  0000                     	;# 
   817  0001                     	;# 
   818  0002                     	;# 
   819  0003                     	;# 
   820  0004                     	;# 
   821  0005                     	;# 
   822  0006                     	;# 
   823  0007                     	;# 
   824  0008                     	;# 
   825  0009                     	;# 
   826  000A                     	;# 
   827  000B                     	;# 
   828  000C                     	;# 
   829  000D                     	;# 
   830  000E                     	;# 
   831  000F                     	;# 
   832  0010                     	;# 
   833  0011                     	;# 
   834  0012                     	;# 
   835  0013                     	;# 
   836  0014                     	;# 
   837  0015                     	;# 
   838  0016                     	;# 
   839  0016                     	;# 
   840  0017                     	;# 
   841  0018                     	;# 
   842  0019                     	;# 
   843  001A                     	;# 
   844  001B                     	;# 
   845  001C                     	;# 
   846  008C                     	;# 
   847  008D                     	;# 
   848  008E                     	;# 
   849  008F                     	;# 
   850  0090                     	;# 
   851  0091                     	;# 
   852  0092                     	;# 
   853  0093                     	;# 
   854  0094                     	;# 
   855  0095                     	;# 
   856  0096                     	;# 
   857  0097                     	;# 
   858  0098                     	;# 
   859  0099                     	;# 
   860  009A                     	;# 
   861  009B                     	;# 
   862  009B                     	;# 
   863  009C                     	;# 
   864  009D                     	;# 
   865  009E                     	;# 
   866  009F                     	;# 
   867  010C                     	;# 
   868  010D                     	;# 
   869  010E                     	;# 
   870  010F                     	;# 
   871  0110                     	;# 
   872  0111                     	;# 
   873  0112                     	;# 
   874  0113                     	;# 
   875  0114                     	;# 
   876  0115                     	;# 
   877  0116                     	;# 
   878  0117                     	;# 
   879  0118                     	;# 
   880  0119                     	;# 
   881  011A                     	;# 
   882  011B                     	;# 
   883  011C                     	;# 
   884  011D                     	;# 
   885  011D                     	;# 
   886  011D                     	;# 
   887  011E                     	;# 
   888  011F                     	;# 
   889  018C                     	;# 
   890  018D                     	;# 
   891  018E                     	;# 
   892  018F                     	;# 
   893  0190                     	;# 
   894  0191                     	;# 
   895  0191                     	;# 
   896  0192                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0193                     	;# 
   900  0194                     	;# 
   901  0195                     	;# 
   902  0196                     	;# 
   903  0197                     	;# 
   904  0199                     	;# 
   905  0199                     	;# 
   906  0199                     	;# 
   907  019A                     	;# 
   908  019A                     	;# 
   909  019A                     	;# 
   910  019B                     	;# 
   911  019B                     	;# 
   912  019B                     	;# 
   913  019B                     	;# 
   914  019B                     	;# 
   915  019C                     	;# 
   916  019C                     	;# 
   917  019C                     	;# 
   918  019D                     	;# 
   919  019D                     	;# 
   920  019D                     	;# 
   921  019E                     	;# 
   922  019E                     	;# 
   923  019E                     	;# 
   924  019F                     	;# 
   925  019F                     	;# 
   926  019F                     	;# 
   927  019F                     	;# 
   928  019F                     	;# 
   929  020C                     	;# 
   930  020D                     	;# 
   931  020E                     	;# 
   932  020F                     	;# 
   933  0210                     	;# 
   934  0211                     	;# 
   935  0211                     	;# 
   936  0212                     	;# 
   937  0212                     	;# 
   938  0213                     	;# 
   939  0213                     	;# 
   940  0214                     	;# 
   941  0214                     	;# 
   942  0215                     	;# 
   943  0215                     	;# 
   944  0215                     	;# 
   945  0215                     	;# 
   946  0216                     	;# 
   947  0216                     	;# 
   948  0217                     	;# 
   949  0217                     	;# 
   950  028C                     	;# 
   951  028D                     	;# 
   952  028E                     	;# 
   953  028F                     	;# 
   954  0290                     	;# 
   955  0291                     	;# 
   956  0291                     	;# 
   957  0292                     	;# 
   958  0293                     	;# 
   959  0298                     	;# 
   960  0298                     	;# 
   961  0299                     	;# 
   962  029A                     	;# 
   963  030C                     	;# 
   964  030D                     	;# 
   965  030E                     	;# 
   966  030F                     	;# 
   967  0310                     	;# 
   968  0311                     	;# 
   969  0311                     	;# 
   970  0312                     	;# 
   971  0313                     	;# 
   972  038C                     	;# 
   973  038D                     	;# 
   974  038E                     	;# 
   975  038F                     	;# 
   976  0390                     	;# 
   977  0391                     	;# 
   978  0392                     	;# 
   979  0393                     	;# 
   980  0394                     	;# 
   981  0395                     	;# 
   982  0396                     	;# 
   983  0397                     	;# 
   984  0398                     	;# 
   985  0399                     	;# 
   986  039D                     	;# 
   987  039E                     	;# 
   988  039F                     	;# 
   989  0511                     	;# 
   990  0513                     	;# 
   991  0515                     	;# 
   992  051A                     	;# 
   993  0591                     	;# 
   994  0592                     	;# 
   995  0592                     	;# 
   996  0593                     	;# 
   997  0594                     	;# 
   998  0594                     	;# 
   999  0595                     	;# 
  1000  0596                     	;# 
  1001  0596                     	;# 
  1002  0E91                     	;# 
  1003  0E92                     	;# 
  1004  0E93                     	;# 
  1005  0E94                     	;# 
  1006  0E95                     	;# 
  1007  0E96                     	;# 
  1008  0E97                     	;# 
  1009  0E98                     	;# 
  1010  0E99                     	;# 
  1011  0E9A                     	;# 
  1012  0E9B                     	;# 
  1013  0E9C                     	;# 
  1014  0E9D                     	;# 
  1015  0E9E                     	;# 
  1016  0E9F                     	;# 
  1017  0EA0                     	;# 
  1018  0EA1                     	;# 
  1019  0EA1                     	;# 
  1020  0EA2                     	;# 
  1021  0EA3                     	;# 
  1022  0EA3                     	;# 
  1023  0EA4                     	;# 
  1024  0EA5                     	;# 
  1025  0EA5                     	;# 
  1026  0EA6                     	;# 
  1027  0EA7                     	;# 
  1028  0EA7                     	;# 
  1029  0EA8                     	;# 
  1030  0EA9                     	;# 
  1031  0EAA                     	;# 
  1032  0EAB                     	;# 
  1033  0EAC                     	;# 
  1034  0EAD                     	;# 
  1035  0EAE                     	;# 
  1036  0EAF                     	;# 
  1037  0EB1                     	;# 
  1038  0EB2                     	;# 
  1039  0EB3                     	;# 
  1040  0EB4                     	;# 
  1041  0EB5                     	;# 
  1042  0EB6                     	;# 
  1043  0EB7                     	;# 
  1044  0EB8                     	;# 
  1045  0EB9                     	;# 
  1046  0EBA                     	;# 
  1047  0EBB                     	;# 
  1048  0EBC                     	;# 
  1049  0EBD                     	;# 
  1050  0EBE                     	;# 
  1051  0EBF                     	;# 
  1052  0EC0                     	;# 
  1053  0EC1                     	;# 
  1054  0EC1                     	;# 
  1055  0EC2                     	;# 
  1056  0EC3                     	;# 
  1057  0EC3                     	;# 
  1058  0EC4                     	;# 
  1059  0EC5                     	;# 
  1060  0EC5                     	;# 
  1061  0EC6                     	;# 
  1062  0EC7                     	;# 
  1063  0EC7                     	;# 
  1064  0EC8                     	;# 
  1065  0EC9                     	;# 
  1066  0ECA                     	;# 
  1067  0ECB                     	;# 
  1068  0ECC                     	;# 
  1069  0ECD                     	;# 
  1070  0ECE                     	;# 
  1071  0ECF                     	;# 
  1072  0ED1                     	;# 
  1073  0ED2                     	;# 
  1074  0ED3                     	;# 
  1075  0ED4                     	;# 
  1076  0ED5                     	;# 
  1077  0ED6                     	;# 
  1078  0ED7                     	;# 
  1079  0ED8                     	;# 
  1080  0ED9                     	;# 
  1081  0EDA                     	;# 
  1082  0EDB                     	;# 
  1083  0EDC                     	;# 
  1084  0EDD                     	;# 
  1085  0EDE                     	;# 
  1086  0EDF                     	;# 
  1087  0EE0                     	;# 
  1088  0EE1                     	;# 
  1089  0EE1                     	;# 
  1090  0EE2                     	;# 
  1091  0EE3                     	;# 
  1092  0EE3                     	;# 
  1093  0EE4                     	;# 
  1094  0EE5                     	;# 
  1095  0EE5                     	;# 
  1096  0EE6                     	;# 
  1097  0EE7                     	;# 
  1098  0EE7                     	;# 
  1099  0EE8                     	;# 
  1100  0EE9                     	;# 
  1101  0EEA                     	;# 
  1102  0EEB                     	;# 
  1103  0EEC                     	;# 
  1104  0EED                     	;# 
  1105  0EEE                     	;# 
  1106  0EEF                     	;# 
  1107  0F11                     	;# 
  1108  0F12                     	;# 
  1109  0F13                     	;# 
  1110  0F14                     	;# 
  1111  0F15                     	;# 
  1112  0F16                     	;# 
  1113  0F17                     	;# 
  1114  0F18                     	;# 
  1115  0F19                     	;# 
  1116  0F1A                     	;# 
  1117  0F1B                     	;# 
  1118  0F1C                     	;# 
  1119  0F1D                     	;# 
  1120  0F1E                     	;# 
  1121  0F1F                     	;# 
  1122  0F20                     	;# 
  1123  0F21                     	;# 
  1124  0F21                     	;# 
  1125  0F22                     	;# 
  1126  0F23                     	;# 
  1127  0F23                     	;# 
  1128  0F24                     	;# 
  1129  0F25                     	;# 
  1130  0F25                     	;# 
  1131  0F26                     	;# 
  1132  0F27                     	;# 
  1133  0F27                     	;# 
  1134  0F28                     	;# 
  1135  0F29                     	;# 
  1136  0F2A                     	;# 
  1137  0F2B                     	;# 
  1138  0F2C                     	;# 
  1139  0F2D                     	;# 
  1140  0F2E                     	;# 
  1141  0F2F                     	;# 
  1142  0FE4                     	;# 
  1143  0FE5                     	;# 
  1144  0FE6                     	;# 
  1145  0FE7                     	;# 
  1146  0FE8                     	;# 
  1147  0FE9                     	;# 
  1148  0FEA                     	;# 
  1149  0FEB                     	;# 
  1150  0FED                     	;# 
  1151  0FEE                     	;# 
  1152  0FEF                     	;# 
  1153  0000                     	;# 
  1154  0001                     	;# 
  1155  0002                     	;# 
  1156  0003                     	;# 
  1157  0004                     	;# 
  1158  0005                     	;# 
  1159  0006                     	;# 
  1160  0007                     	;# 
  1161  0008                     	;# 
  1162  0009                     	;# 
  1163  000A                     	;# 
  1164  000B                     	;# 
  1165  000C                     	;# 
  1166  000D                     	;# 
  1167  000E                     	;# 
  1168  000F                     	;# 
  1169  0010                     	;# 
  1170  0011                     	;# 
  1171  0012                     	;# 
  1172  0013                     	;# 
  1173  0014                     	;# 
  1174  0015                     	;# 
  1175  0016                     	;# 
  1176  0016                     	;# 
  1177  0017                     	;# 
  1178  0018                     	;# 
  1179  0019                     	;# 
  1180  001A                     	;# 
  1181  001B                     	;# 
  1182  001C                     	;# 
  1183  008C                     	;# 
  1184  008D                     	;# 
  1185  008E                     	;# 
  1186  008F                     	;# 
  1187  0090                     	;# 
  1188  0091                     	;# 
  1189  0092                     	;# 
  1190  0093                     	;# 
  1191  0094                     	;# 
  1192  0095                     	;# 
  1193  0096                     	;# 
  1194  0097                     	;# 
  1195  0098                     	;# 
  1196  0099                     	;# 
  1197  009A                     	;# 
  1198  009B                     	;# 
  1199  009B                     	;# 
  1200  009C                     	;# 
  1201  009D                     	;# 
  1202  009E                     	;# 
  1203  009F                     	;# 
  1204  010C                     	;# 
  1205  010D                     	;# 
  1206  010E                     	;# 
  1207  010F                     	;# 
  1208  0110                     	;# 
  1209  0111                     	;# 
  1210  0112                     	;# 
  1211  0113                     	;# 
  1212  0114                     	;# 
  1213  0115                     	;# 
  1214  0116                     	;# 
  1215  0117                     	;# 
  1216  0118                     	;# 
  1217  0119                     	;# 
  1218  011A                     	;# 
  1219  011B                     	;# 
  1220  011C                     	;# 
  1221  011D                     	;# 
  1222  011D                     	;# 
  1223  011D                     	;# 
  1224  011E                     	;# 
  1225  011F                     	;# 
  1226  018C                     	;# 
  1227  018D                     	;# 
  1228  018E                     	;# 
  1229  018F                     	;# 
  1230  0190                     	;# 
  1231  0191                     	;# 
  1232  0191                     	;# 
  1233  0192                     	;# 
  1234  0193                     	;# 
  1235  0193                     	;# 
  1236  0193                     	;# 
  1237  0194                     	;# 
  1238  0195                     	;# 
  1239  0196                     	;# 
  1240  0197                     	;# 
  1241  0199                     	;# 
  1242  0199                     	;# 
  1243  0199                     	;# 
  1244  019A                     	;# 
  1245  019A                     	;# 
  1246  019A                     	;# 
  1247  019B                     	;# 
  1248  019B                     	;# 
  1249  019B                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019C                     	;# 
  1253  019C                     	;# 
  1254  019C                     	;# 
  1255  019D                     	;# 
  1256  019D                     	;# 
  1257  019D                     	;# 
  1258  019E                     	;# 
  1259  019E                     	;# 
  1260  019E                     	;# 
  1261  019F                     	;# 
  1262  019F                     	;# 
  1263  019F                     	;# 
  1264  019F                     	;# 
  1265  019F                     	;# 
  1266  020C                     	;# 
  1267  020D                     	;# 
  1268  020E                     	;# 
  1269  020F                     	;# 
  1270  0210                     	;# 
  1271  0211                     	;# 
  1272  0211                     	;# 
  1273  0212                     	;# 
  1274  0212                     	;# 
  1275  0213                     	;# 
  1276  0213                     	;# 
  1277  0214                     	;# 
  1278  0214                     	;# 
  1279  0215                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0215                     	;# 
  1283  0216                     	;# 
  1284  0216                     	;# 
  1285  0217                     	;# 
  1286  0217                     	;# 
  1287  028C                     	;# 
  1288  028D                     	;# 
  1289  028E                     	;# 
  1290  028F                     	;# 
  1291  0290                     	;# 
  1292  0291                     	;# 
  1293  0291                     	;# 
  1294  0292                     	;# 
  1295  0293                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  030C                     	;# 
  1301  030D                     	;# 
  1302  030E                     	;# 
  1303  030F                     	;# 
  1304  0310                     	;# 
  1305  0311                     	;# 
  1306  0311                     	;# 
  1307  0312                     	;# 
  1308  0313                     	;# 
  1309  038C                     	;# 
  1310  038D                     	;# 
  1311  038E                     	;# 
  1312  038F                     	;# 
  1313  0390                     	;# 
  1314  0391                     	;# 
  1315  0392                     	;# 
  1316  0393                     	;# 
  1317  0394                     	;# 
  1318  0395                     	;# 
  1319  0396                     	;# 
  1320  0397                     	;# 
  1321  0398                     	;# 
  1322  0399                     	;# 
  1323  039D                     	;# 
  1324  039E                     	;# 
  1325  039F                     	;# 
  1326  0511                     	;# 
  1327  0513                     	;# 
  1328  0515                     	;# 
  1329  051A                     	;# 
  1330  0591                     	;# 
  1331  0592                     	;# 
  1332  0592                     	;# 
  1333  0593                     	;# 
  1334  0594                     	;# 
  1335  0594                     	;# 
  1336  0595                     	;# 
  1337  0596                     	;# 
  1338  0596                     	;# 
  1339  0E91                     	;# 
  1340  0E92                     	;# 
  1341  0E93                     	;# 
  1342  0E94                     	;# 
  1343  0E95                     	;# 
  1344  0E96                     	;# 
  1345  0E97                     	;# 
  1346  0E98                     	;# 
  1347  0E99                     	;# 
  1348  0E9A                     	;# 
  1349  0E9B                     	;# 
  1350  0E9C                     	;# 
  1351  0E9D                     	;# 
  1352  0E9E                     	;# 
  1353  0E9F                     	;# 
  1354  0EA0                     	;# 
  1355  0EA1                     	;# 
  1356  0EA1                     	;# 
  1357  0EA2                     	;# 
  1358  0EA3                     	;# 
  1359  0EA3                     	;# 
  1360  0EA4                     	;# 
  1361  0EA5                     	;# 
  1362  0EA5                     	;# 
  1363  0EA6                     	;# 
  1364  0EA7                     	;# 
  1365  0EA7                     	;# 
  1366  0EA8                     	;# 
  1367  0EA9                     	;# 
  1368  0EAA                     	;# 
  1369  0EAB                     	;# 
  1370  0EAC                     	;# 
  1371  0EAD                     	;# 
  1372  0EAE                     	;# 
  1373  0EAF                     	;# 
  1374  0EB1                     	;# 
  1375  0EB2                     	;# 
  1376  0EB3                     	;# 
  1377  0EB4                     	;# 
  1378  0EB5                     	;# 
  1379  0EB6                     	;# 
  1380  0EB7                     	;# 
  1381  0EB8                     	;# 
  1382  0EB9                     	;# 
  1383  0EBA                     	;# 
  1384  0EBB                     	;# 
  1385  0EBC                     	;# 
  1386  0EBD                     	;# 
  1387  0EBE                     	;# 
  1388  0EBF                     	;# 
  1389  0EC0                     	;# 
  1390  0EC1                     	;# 
  1391  0EC1                     	;# 
  1392  0EC2                     	;# 
  1393  0EC3                     	;# 
  1394  0EC3                     	;# 
  1395  0EC4                     	;# 
  1396  0EC5                     	;# 
  1397  0EC5                     	;# 
  1398  0EC6                     	;# 
  1399  0EC7                     	;# 
  1400  0EC7                     	;# 
  1401  0EC8                     	;# 
  1402  0EC9                     	;# 
  1403  0ECA                     	;# 
  1404  0ECB                     	;# 
  1405  0ECC                     	;# 
  1406  0ECD                     	;# 
  1407  0ECE                     	;# 
  1408  0ECF                     	;# 
  1409  0ED1                     	;# 
  1410  0ED2                     	;# 
  1411  0ED3                     	;# 
  1412  0ED4                     	;# 
  1413  0ED5                     	;# 
  1414  0ED6                     	;# 
  1415  0ED7                     	;# 
  1416  0ED8                     	;# 
  1417  0ED9                     	;# 
  1418  0EDA                     	;# 
  1419  0EDB                     	;# 
  1420  0EDC                     	;# 
  1421  0EDD                     	;# 
  1422  0EDE                     	;# 
  1423  0EDF                     	;# 
  1424  0EE0                     	;# 
  1425  0EE1                     	;# 
  1426  0EE1                     	;# 
  1427  0EE2                     	;# 
  1428  0EE3                     	;# 
  1429  0EE3                     	;# 
  1430  0EE4                     	;# 
  1431  0EE5                     	;# 
  1432  0EE5                     	;# 
  1433  0EE6                     	;# 
  1434  0EE7                     	;# 
  1435  0EE7                     	;# 
  1436  0EE8                     	;# 
  1437  0EE9                     	;# 
  1438  0EEA                     	;# 
  1439  0EEB                     	;# 
  1440  0EEC                     	;# 
  1441  0EED                     	;# 
  1442  0EEE                     	;# 
  1443  0EEF                     	;# 
  1444  0F11                     	;# 
  1445  0F12                     	;# 
  1446  0F13                     	;# 
  1447  0F14                     	;# 
  1448  0F15                     	;# 
  1449  0F16                     	;# 
  1450  0F17                     	;# 
  1451  0F18                     	;# 
  1452  0F19                     	;# 
  1453  0F1A                     	;# 
  1454  0F1B                     	;# 
  1455  0F1C                     	;# 
  1456  0F1D                     	;# 
  1457  0F1E                     	;# 
  1458  0F1F                     	;# 
  1459  0F20                     	;# 
  1460  0F21                     	;# 
  1461  0F21                     	;# 
  1462  0F22                     	;# 
  1463  0F23                     	;# 
  1464  0F23                     	;# 
  1465  0F24                     	;# 
  1466  0F25                     	;# 
  1467  0F25                     	;# 
  1468  0F26                     	;# 
  1469  0F27                     	;# 
  1470  0F27                     	;# 
  1471  0F28                     	;# 
  1472  0F29                     	;# 
  1473  0F2A                     	;# 
  1474  0F2B                     	;# 
  1475  0F2C                     	;# 
  1476  0F2D                     	;# 
  1477  0F2E                     	;# 
  1478  0F2F                     	;# 
  1479  0FE4                     	;# 
  1480  0FE5                     	;# 
  1481  0FE6                     	;# 
  1482  0FE7                     	;# 
  1483  0FE8                     	;# 
  1484  0FE9                     	;# 
  1485  0FEA                     	;# 
  1486  0FEB                     	;# 
  1487  0FED                     	;# 
  1488  0FEE                     	;# 
  1489  0FEF                     	;# 
  1490  0000                     	;# 
  1491  0001                     	;# 
  1492  0002                     	;# 
  1493  0003                     	;# 
  1494  0004                     	;# 
  1495  0005                     	;# 
  1496  0006                     	;# 
  1497  0007                     	;# 
  1498  0008                     	;# 
  1499  0009                     	;# 
  1500  000A                     	;# 
  1501  000B                     	;# 
  1502  000C                     	;# 
  1503  000D                     	;# 
  1504  000E                     	;# 
  1505  000F                     	;# 
  1506  0010                     	;# 
  1507  0011                     	;# 
  1508  0012                     	;# 
  1509  0013                     	;# 
  1510  0014                     	;# 
  1511  0015                     	;# 
  1512  0016                     	;# 
  1513  0016                     	;# 
  1514  0017                     	;# 
  1515  0018                     	;# 
  1516  0019                     	;# 
  1517  001A                     	;# 
  1518  001B                     	;# 
  1519  001C                     	;# 
  1520  008C                     	;# 
  1521  008D                     	;# 
  1522  008E                     	;# 
  1523  008F                     	;# 
  1524  0090                     	;# 
  1525  0091                     	;# 
  1526  0092                     	;# 
  1527  0093                     	;# 
  1528  0094                     	;# 
  1529  0095                     	;# 
  1530  0096                     	;# 
  1531  0097                     	;# 
  1532  0098                     	;# 
  1533  0099                     	;# 
  1534  009A                     	;# 
  1535  009B                     	;# 
  1536  009B                     	;# 
  1537  009C                     	;# 
  1538  009D                     	;# 
  1539  009E                     	;# 
  1540  009F                     	;# 
  1541  010C                     	;# 
  1542  010D                     	;# 
  1543  010E                     	;# 
  1544  010F                     	;# 
  1545  0110                     	;# 
  1546  0111                     	;# 
  1547  0112                     	;# 
  1548  0113                     	;# 
  1549  0114                     	;# 
  1550  0115                     	;# 
  1551  0116                     	;# 
  1552  0117                     	;# 
  1553  0118                     	;# 
  1554  0119                     	;# 
  1555  011A                     	;# 
  1556  011B                     	;# 
  1557  011C                     	;# 
  1558  011D                     	;# 
  1559  011D                     	;# 
  1560  011D                     	;# 
  1561  011E                     	;# 
  1562  011F                     	;# 
  1563  018C                     	;# 
  1564  018D                     	;# 
  1565  018E                     	;# 
  1566  018F                     	;# 
  1567  0190                     	;# 
  1568  0191                     	;# 
  1569  0191                     	;# 
  1570  0192                     	;# 
  1571  0193                     	;# 
  1572  0193                     	;# 
  1573  0193                     	;# 
  1574  0194                     	;# 
  1575  0195                     	;# 
  1576  0196                     	;# 
  1577  0197                     	;# 
  1578  0199                     	;# 
  1579  0199                     	;# 
  1580  0199                     	;# 
  1581  019A                     	;# 
  1582  019A                     	;# 
  1583  019A                     	;# 
  1584  019B                     	;# 
  1585  019B                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019B                     	;# 
  1589  019C                     	;# 
  1590  019C                     	;# 
  1591  019C                     	;# 
  1592  019D                     	;# 
  1593  019D                     	;# 
  1594  019D                     	;# 
  1595  019E                     	;# 
  1596  019E                     	;# 
  1597  019E                     	;# 
  1598  019F                     	;# 
  1599  019F                     	;# 
  1600  019F                     	;# 
  1601  019F                     	;# 
  1602  019F                     	;# 
  1603  020C                     	;# 
  1604  020D                     	;# 
  1605  020E                     	;# 
  1606  020F                     	;# 
  1607  0210                     	;# 
  1608  0211                     	;# 
  1609  0211                     	;# 
  1610  0212                     	;# 
  1611  0212                     	;# 
  1612  0213                     	;# 
  1613  0213                     	;# 
  1614  0214                     	;# 
  1615  0214                     	;# 
  1616  0215                     	;# 
  1617  0215                     	;# 
  1618  0215                     	;# 
  1619  0215                     	;# 
  1620  0216                     	;# 
  1621  0216                     	;# 
  1622  0217                     	;# 
  1623  0217                     	;# 
  1624  028C                     	;# 
  1625  028D                     	;# 
  1626  028E                     	;# 
  1627  028F                     	;# 
  1628  0290                     	;# 
  1629  0291                     	;# 
  1630  0291                     	;# 
  1631  0292                     	;# 
  1632  0293                     	;# 
  1633  0298                     	;# 
  1634  0298                     	;# 
  1635  0299                     	;# 
  1636  029A                     	;# 
  1637  030C                     	;# 
  1638  030D                     	;# 
  1639  030E                     	;# 
  1640  030F                     	;# 
  1641  0310                     	;# 
  1642  0311                     	;# 
  1643  0311                     	;# 
  1644  0312                     	;# 
  1645  0313                     	;# 
  1646  038C                     	;# 
  1647  038D                     	;# 
  1648  038E                     	;# 
  1649  038F                     	;# 
  1650  0390                     	;# 
  1651  0391                     	;# 
  1652  0392                     	;# 
  1653  0393                     	;# 
  1654  0394                     	;# 
  1655  0395                     	;# 
  1656  0396                     	;# 
  1657  0397                     	;# 
  1658  0398                     	;# 
  1659  0399                     	;# 
  1660  039D                     	;# 
  1661  039E                     	;# 
  1662  039F                     	;# 
  1663  0511                     	;# 
  1664  0513                     	;# 
  1665  0515                     	;# 
  1666  051A                     	;# 
  1667  0591                     	;# 
  1668  0592                     	;# 
  1669  0592                     	;# 
  1670  0593                     	;# 
  1671  0594                     	;# 
  1672  0594                     	;# 
  1673  0595                     	;# 
  1674  0596                     	;# 
  1675  0596                     	;# 
  1676  0E91                     	;# 
  1677  0E92                     	;# 
  1678  0E93                     	;# 
  1679  0E94                     	;# 
  1680  0E95                     	;# 
  1681  0E96                     	;# 
  1682  0E97                     	;# 
  1683  0E98                     	;# 
  1684  0E99                     	;# 
  1685  0E9A                     	;# 
  1686  0E9B                     	;# 
  1687  0E9C                     	;# 
  1688  0E9D                     	;# 
  1689  0E9E                     	;# 
  1690  0E9F                     	;# 
  1691  0EA0                     	;# 
  1692  0EA1                     	;# 
  1693  0EA1                     	;# 
  1694  0EA2                     	;# 
  1695  0EA3                     	;# 
  1696  0EA3                     	;# 
  1697  0EA4                     	;# 
  1698  0EA5                     	;# 
  1699  0EA5                     	;# 
  1700  0EA6                     	;# 
  1701  0EA7                     	;# 
  1702  0EA7                     	;# 
  1703  0EA8                     	;# 
  1704  0EA9                     	;# 
  1705  0EAA                     	;# 
  1706  0EAB                     	;# 
  1707  0EAC                     	;# 
  1708  0EAD                     	;# 
  1709  0EAE                     	;# 
  1710  0EAF                     	;# 
  1711  0EB1                     	;# 
  1712  0EB2                     	;# 
  1713  0EB3                     	;# 
  1714  0EB4                     	;# 
  1715  0EB5                     	;# 
  1716  0EB6                     	;# 
  1717  0EB7                     	;# 
  1718  0EB8                     	;# 
  1719  0EB9                     	;# 
  1720  0EBA                     	;# 
  1721  0EBB                     	;# 
  1722  0EBC                     	;# 
  1723  0EBD                     	;# 
  1724  0EBE                     	;# 
  1725  0EBF                     	;# 
  1726  0EC0                     	;# 
  1727  0EC1                     	;# 
  1728  0EC1                     	;# 
  1729  0EC2                     	;# 
  1730  0EC3                     	;# 
  1731  0EC3                     	;# 
  1732  0EC4                     	;# 
  1733  0EC5                     	;# 
  1734  0EC5                     	;# 
  1735  0EC6                     	;# 
  1736  0EC7                     	;# 
  1737  0EC7                     	;# 
  1738  0EC8                     	;# 
  1739  0EC9                     	;# 
  1740  0ECA                     	;# 
  1741  0ECB                     	;# 
  1742  0ECC                     	;# 
  1743  0ECD                     	;# 
  1744  0ECE                     	;# 
  1745  0ECF                     	;# 
  1746  0ED1                     	;# 
  1747  0ED2                     	;# 
  1748  0ED3                     	;# 
  1749  0ED4                     	;# 
  1750  0ED5                     	;# 
  1751  0ED6                     	;# 
  1752  0ED7                     	;# 
  1753  0ED8                     	;# 
  1754  0ED9                     	;# 
  1755  0EDA                     	;# 
  1756  0EDB                     	;# 
  1757  0EDC                     	;# 
  1758  0EDD                     	;# 
  1759  0EDE                     	;# 
  1760  0EDF                     	;# 
  1761  0EE0                     	;# 
  1762  0EE1                     	;# 
  1763  0EE1                     	;# 
  1764  0EE2                     	;# 
  1765  0EE3                     	;# 
  1766  0EE3                     	;# 
  1767  0EE4                     	;# 
  1768  0EE5                     	;# 
  1769  0EE5                     	;# 
  1770  0EE6                     	;# 
  1771  0EE7                     	;# 
  1772  0EE7                     	;# 
  1773  0EE8                     	;# 
  1774  0EE9                     	;# 
  1775  0EEA                     	;# 
  1776  0EEB                     	;# 
  1777  0EEC                     	;# 
  1778  0EED                     	;# 
  1779  0EEE                     	;# 
  1780  0EEF                     	;# 
  1781  0F11                     	;# 
  1782  0F12                     	;# 
  1783  0F13                     	;# 
  1784  0F14                     	;# 
  1785  0F15                     	;# 
  1786  0F16                     	;# 
  1787  0F17                     	;# 
  1788  0F18                     	;# 
  1789  0F19                     	;# 
  1790  0F1A                     	;# 
  1791  0F1B                     	;# 
  1792  0F1C                     	;# 
  1793  0F1D                     	;# 
  1794  0F1E                     	;# 
  1795  0F1F                     	;# 
  1796  0F20                     	;# 
  1797  0F21                     	;# 
  1798  0F21                     	;# 
  1799  0F22                     	;# 
  1800  0F23                     	;# 
  1801  0F23                     	;# 
  1802  0F24                     	;# 
  1803  0F25                     	;# 
  1804  0F25                     	;# 
  1805  0F26                     	;# 
  1806  0F27                     	;# 
  1807  0F27                     	;# 
  1808  0F28                     	;# 
  1809  0F29                     	;# 
  1810  0F2A                     	;# 
  1811  0F2B                     	;# 
  1812  0F2C                     	;# 
  1813  0F2D                     	;# 
  1814  0F2E                     	;# 
  1815  0F2F                     	;# 
  1816  0FE4                     	;# 
  1817  0FE5                     	;# 
  1818  0FE6                     	;# 
  1819  0FE7                     	;# 
  1820  0FE8                     	;# 
  1821  0FE9                     	;# 
  1822  0FEA                     	;# 
  1823  0FEB                     	;# 
  1824  0FED                     	;# 
  1825  0FEE                     	;# 
  1826  0FEF                     	;# 
  1827  0000                     	;# 
  1828  0001                     	;# 
  1829  0002                     	;# 
  1830  0003                     	;# 
  1831  0004                     	;# 
  1832  0005                     	;# 
  1833  0006                     	;# 
  1834  0007                     	;# 
  1835  0008                     	;# 
  1836  0009                     	;# 
  1837  000A                     	;# 
  1838  000B                     	;# 
  1839  000C                     	;# 
  1840  000D                     	;# 
  1841  000E                     	;# 
  1842  000F                     	;# 
  1843  0010                     	;# 
  1844  0011                     	;# 
  1845  0012                     	;# 
  1846  0013                     	;# 
  1847  0014                     	;# 
  1848  0015                     	;# 
  1849  0016                     	;# 
  1850  0016                     	;# 
  1851  0017                     	;# 
  1852  0018                     	;# 
  1853  0019                     	;# 
  1854  001A                     	;# 
  1855  001B                     	;# 
  1856  001C                     	;# 
  1857  008C                     	;# 
  1858  008D                     	;# 
  1859  008E                     	;# 
  1860  008F                     	;# 
  1861  0090                     	;# 
  1862  0091                     	;# 
  1863  0092                     	;# 
  1864  0093                     	;# 
  1865  0094                     	;# 
  1866  0095                     	;# 
  1867  0096                     	;# 
  1868  0097                     	;# 
  1869  0098                     	;# 
  1870  0099                     	;# 
  1871  009A                     	;# 
  1872  009B                     	;# 
  1873  009B                     	;# 
  1874  009C                     	;# 
  1875  009D                     	;# 
  1876  009E                     	;# 
  1877  009F                     	;# 
  1878  010C                     	;# 
  1879  010D                     	;# 
  1880  010E                     	;# 
  1881  010F                     	;# 
  1882  0110                     	;# 
  1883  0111                     	;# 
  1884  0112                     	;# 
  1885  0113                     	;# 
  1886  0114                     	;# 
  1887  0115                     	;# 
  1888  0116                     	;# 
  1889  0117                     	;# 
  1890  0118                     	;# 
  1891  0119                     	;# 
  1892  011A                     	;# 
  1893  011B                     	;# 
  1894  011C                     	;# 
  1895  011D                     	;# 
  1896  011D                     	;# 
  1897  011D                     	;# 
  1898  011E                     	;# 
  1899  011F                     	;# 
  1900  018C                     	;# 
  1901  018D                     	;# 
  1902  018E                     	;# 
  1903  018F                     	;# 
  1904  0190                     	;# 
  1905  0191                     	;# 
  1906  0191                     	;# 
  1907  0192                     	;# 
  1908  0193                     	;# 
  1909  0193                     	;# 
  1910  0193                     	;# 
  1911  0194                     	;# 
  1912  0195                     	;# 
  1913  0196                     	;# 
  1914  0197                     	;# 
  1915  0199                     	;# 
  1916  0199                     	;# 
  1917  0199                     	;# 
  1918  019A                     	;# 
  1919  019A                     	;# 
  1920  019A                     	;# 
  1921  019B                     	;# 
  1922  019B                     	;# 
  1923  019B                     	;# 
  1924  019B                     	;# 
  1925  019B                     	;# 
  1926  019C                     	;# 
  1927  019C                     	;# 
  1928  019C                     	;# 
  1929  019D                     	;# 
  1930  019D                     	;# 
  1931  019D                     	;# 
  1932  019E                     	;# 
  1933  019E                     	;# 
  1934  019E                     	;# 
  1935  019F                     	;# 
  1936  019F                     	;# 
  1937  019F                     	;# 
  1938  019F                     	;# 
  1939  019F                     	;# 
  1940  020C                     	;# 
  1941  020D                     	;# 
  1942  020E                     	;# 
  1943  020F                     	;# 
  1944  0210                     	;# 
  1945  0211                     	;# 
  1946  0211                     	;# 
  1947  0212                     	;# 
  1948  0212                     	;# 
  1949  0213                     	;# 
  1950  0213                     	;# 
  1951  0214                     	;# 
  1952  0214                     	;# 
  1953  0215                     	;# 
  1954  0215                     	;# 
  1955  0215                     	;# 
  1956  0215                     	;# 
  1957  0216                     	;# 
  1958  0216                     	;# 
  1959  0217                     	;# 
  1960  0217                     	;# 
  1961  028C                     	;# 
  1962  028D                     	;# 
  1963  028E                     	;# 
  1964  028F                     	;# 
  1965  0290                     	;# 
  1966  0291                     	;# 
  1967  0291                     	;# 
  1968  0292                     	;# 
  1969  0293                     	;# 
  1970  0298                     	;# 
  1971  0298                     	;# 
  1972  0299                     	;# 
  1973  029A                     	;# 
  1974  030C                     	;# 
  1975  030D                     	;# 
  1976  030E                     	;# 
  1977  030F                     	;# 
  1978  0310                     	;# 
  1979  0311                     	;# 
  1980  0311                     	;# 
  1981  0312                     	;# 
  1982  0313                     	;# 
  1983  038C                     	;# 
  1984  038D                     	;# 
  1985  038E                     	;# 
  1986  038F                     	;# 
  1987  0390                     	;# 
  1988  0391                     	;# 
  1989  0392                     	;# 
  1990  0393                     	;# 
  1991  0394                     	;# 
  1992  0395                     	;# 
  1993  0396                     	;# 
  1994  0397                     	;# 
  1995  0398                     	;# 
  1996  0399                     	;# 
  1997  039D                     	;# 
  1998  039E                     	;# 
  1999  039F                     	;# 
  2000  0511                     	;# 
  2001  0513                     	;# 
  2002  0515                     	;# 
  2003  051A                     	;# 
  2004  0591                     	;# 
  2005  0592                     	;# 
  2006  0592                     	;# 
  2007  0593                     	;# 
  2008  0594                     	;# 
  2009  0594                     	;# 
  2010  0595                     	;# 
  2011  0596                     	;# 
  2012  0596                     	;# 
  2013  0E91                     	;# 
  2014  0E92                     	;# 
  2015  0E93                     	;# 
  2016  0E94                     	;# 
  2017  0E95                     	;# 
  2018  0E96                     	;# 
  2019  0E97                     	;# 
  2020  0E98                     	;# 
  2021  0E99                     	;# 
  2022  0E9A                     	;# 
  2023  0E9B                     	;# 
  2024  0E9C                     	;# 
  2025  0E9D                     	;# 
  2026  0E9E                     	;# 
  2027  0E9F                     	;# 
  2028  0EA0                     	;# 
  2029  0EA1                     	;# 
  2030  0EA1                     	;# 
  2031  0EA2                     	;# 
  2032  0EA3                     	;# 
  2033  0EA3                     	;# 
  2034  0EA4                     	;# 
  2035  0EA5                     	;# 
  2036  0EA5                     	;# 
  2037  0EA6                     	;# 
  2038  0EA7                     	;# 
  2039  0EA7                     	;# 
  2040  0EA8                     	;# 
  2041  0EA9                     	;# 
  2042  0EAA                     	;# 
  2043  0EAB                     	;# 
  2044  0EAC                     	;# 
  2045  0EAD                     	;# 
  2046  0EAE                     	;# 
  2047  0EAF                     	;# 
  2048  0EB1                     	;# 
  2049  0EB2                     	;# 
  2050  0EB3                     	;# 
  2051  0EB4                     	;# 
  2052  0EB5                     	;# 
  2053  0EB6                     	;# 
  2054  0EB7                     	;# 
  2055  0EB8                     	;# 
  2056  0EB9                     	;# 
  2057  0EBA                     	;# 
  2058  0EBB                     	;# 
  2059  0EBC                     	;# 
  2060  0EBD                     	;# 
  2061  0EBE                     	;# 
  2062  0EBF                     	;# 
  2063  0EC0                     	;# 
  2064  0EC1                     	;# 
  2065  0EC1                     	;# 
  2066  0EC2                     	;# 
  2067  0EC3                     	;# 
  2068  0EC3                     	;# 
  2069  0EC4                     	;# 
  2070  0EC5                     	;# 
  2071  0EC5                     	;# 
  2072  0EC6                     	;# 
  2073  0EC7                     	;# 
  2074  0EC7                     	;# 
  2075  0EC8                     	;# 
  2076  0EC9                     	;# 
  2077  0ECA                     	;# 
  2078  0ECB                     	;# 
  2079  0ECC                     	;# 
  2080  0ECD                     	;# 
  2081  0ECE                     	;# 
  2082  0ECF                     	;# 
  2083  0ED1                     	;# 
  2084  0ED2                     	;# 
  2085  0ED3                     	;# 
  2086  0ED4                     	;# 
  2087  0ED5                     	;# 
  2088  0ED6                     	;# 
  2089  0ED7                     	;# 
  2090  0ED8                     	;# 
  2091  0ED9                     	;# 
  2092  0EDA                     	;# 
  2093  0EDB                     	;# 
  2094  0EDC                     	;# 
  2095  0EDD                     	;# 
  2096  0EDE                     	;# 
  2097  0EDF                     	;# 
  2098  0EE0                     	;# 
  2099  0EE1                     	;# 
  2100  0EE1                     	;# 
  2101  0EE2                     	;# 
  2102  0EE3                     	;# 
  2103  0EE3                     	;# 
  2104  0EE4                     	;# 
  2105  0EE5                     	;# 
  2106  0EE5                     	;# 
  2107  0EE6                     	;# 
  2108  0EE7                     	;# 
  2109  0EE7                     	;# 
  2110  0EE8                     	;# 
  2111  0EE9                     	;# 
  2112  0EEA                     	;# 
  2113  0EEB                     	;# 
  2114  0EEC                     	;# 
  2115  0EED                     	;# 
  2116  0EEE                     	;# 
  2117  0EEF                     	;# 
  2118  0F11                     	;# 
  2119  0F12                     	;# 
  2120  0F13                     	;# 
  2121  0F14                     	;# 
  2122  0F15                     	;# 
  2123  0F16                     	;# 
  2124  0F17                     	;# 
  2125  0F18                     	;# 
  2126  0F19                     	;# 
  2127  0F1A                     	;# 
  2128  0F1B                     	;# 
  2129  0F1C                     	;# 
  2130  0F1D                     	;# 
  2131  0F1E                     	;# 
  2132  0F1F                     	;# 
  2133  0F20                     	;# 
  2134  0F21                     	;# 
  2135  0F21                     	;# 
  2136  0F22                     	;# 
  2137  0F23                     	;# 
  2138  0F23                     	;# 
  2139  0F24                     	;# 
  2140  0F25                     	;# 
  2141  0F25                     	;# 
  2142  0F26                     	;# 
  2143  0F27                     	;# 
  2144  0F27                     	;# 
  2145  0F28                     	;# 
  2146  0F29                     	;# 
  2147  0F2A                     	;# 
  2148  0F2B                     	;# 
  2149  0F2C                     	;# 
  2150  0F2D                     	;# 
  2151  0F2E                     	;# 
  2152  0F2F                     	;# 
  2153  0FE4                     	;# 
  2154  0FE5                     	;# 
  2155  0FE6                     	;# 
  2156  0FE7                     	;# 
  2157  0FE8                     	;# 
  2158  0FE9                     	;# 
  2159  0FEA                     	;# 
  2160  0FEB                     	;# 
  2161  0FED                     	;# 
  2162  0FEE                     	;# 
  2163  0FEF                     	;# 
  2164  0000                     	;# 
  2165  0001                     	;# 
  2166  0002                     	;# 
  2167  0003                     	;# 
  2168  0004                     	;# 
  2169  0005                     	;# 
  2170  0006                     	;# 
  2171  0007                     	;# 
  2172  0008                     	;# 
  2173  0009                     	;# 
  2174  000A                     	;# 
  2175  000B                     	;# 
  2176  000C                     	;# 
  2177  000D                     	;# 
  2178  000E                     	;# 
  2179  000F                     	;# 
  2180  0010                     	;# 
  2181  0011                     	;# 
  2182  0012                     	;# 
  2183  0013                     	;# 
  2184  0014                     	;# 
  2185  0015                     	;# 
  2186  0016                     	;# 
  2187  0016                     	;# 
  2188  0017                     	;# 
  2189  0018                     	;# 
  2190  0019                     	;# 
  2191  001A                     	;# 
  2192  001B                     	;# 
  2193  001C                     	;# 
  2194  008C                     	;# 
  2195  008D                     	;# 
  2196  008E                     	;# 
  2197  008F                     	;# 
  2198  0090                     	;# 
  2199  0091                     	;# 
  2200  0092                     	;# 
  2201  0093                     	;# 
  2202  0094                     	;# 
  2203  0095                     	;# 
  2204  0096                     	;# 
  2205  0097                     	;# 
  2206  0098                     	;# 
  2207  0099                     	;# 
  2208  009A                     	;# 
  2209  009B                     	;# 
  2210  009B                     	;# 
  2211  009C                     	;# 
  2212  009D                     	;# 
  2213  009E                     	;# 
  2214  009F                     	;# 
  2215  010C                     	;# 
  2216  010D                     	;# 
  2217  010E                     	;# 
  2218  010F                     	;# 
  2219  0110                     	;# 
  2220  0111                     	;# 
  2221  0112                     	;# 
  2222  0113                     	;# 
  2223  0114                     	;# 
  2224  0115                     	;# 
  2225  0116                     	;# 
  2226  0117                     	;# 
  2227  0118                     	;# 
  2228  0119                     	;# 
  2229  011A                     	;# 
  2230  011B                     	;# 
  2231  011C                     	;# 
  2232  011D                     	;# 
  2233  011D                     	;# 
  2234  011D                     	;# 
  2235  011E                     	;# 
  2236  011F                     	;# 
  2237  018C                     	;# 
  2238  018D                     	;# 
  2239  018E                     	;# 
  2240  018F                     	;# 
  2241  0190                     	;# 
  2242  0191                     	;# 
  2243  0191                     	;# 
  2244  0192                     	;# 
  2245  0193                     	;# 
  2246  0193                     	;# 
  2247  0193                     	;# 
  2248  0194                     	;# 
  2249  0195                     	;# 
  2250  0196                     	;# 
  2251  0197                     	;# 
  2252  0199                     	;# 
  2253  0199                     	;# 
  2254  0199                     	;# 
  2255  019A                     	;# 
  2256  019A                     	;# 
  2257  019A                     	;# 
  2258  019B                     	;# 
  2259  019B                     	;# 
  2260  019B                     	;# 
  2261  019B                     	;# 
  2262  019B                     	;# 
  2263  019C                     	;# 
  2264  019C                     	;# 
  2265  019C                     	;# 
  2266  019D                     	;# 
  2267  019D                     	;# 
  2268  019D                     	;# 
  2269  019E                     	;# 
  2270  019E                     	;# 
  2271  019E                     	;# 
  2272  019F                     	;# 
  2273  019F                     	;# 
  2274  019F                     	;# 
  2275  019F                     	;# 
  2276  019F                     	;# 
  2277  020C                     	;# 
  2278  020D                     	;# 
  2279  020E                     	;# 
  2280  020F                     	;# 
  2281  0210                     	;# 
  2282  0211                     	;# 
  2283  0211                     	;# 
  2284  0212                     	;# 
  2285  0212                     	;# 
  2286  0213                     	;# 
  2287  0213                     	;# 
  2288  0214                     	;# 
  2289  0214                     	;# 
  2290  0215                     	;# 
  2291  0215                     	;# 
  2292  0215                     	;# 
  2293  0215                     	;# 
  2294  0216                     	;# 
  2295  0216                     	;# 
  2296  0217                     	;# 
  2297  0217                     	;# 
  2298  028C                     	;# 
  2299  028D                     	;# 
  2300  028E                     	;# 
  2301  028F                     	;# 
  2302  0290                     	;# 
  2303  0291                     	;# 
  2304  0291                     	;# 
  2305  0292                     	;# 
  2306  0293                     	;# 
  2307  0298                     	;# 
  2308  0298                     	;# 
  2309  0299                     	;# 
  2310  029A                     	;# 
  2311  030C                     	;# 
  2312  030D                     	;# 
  2313  030E                     	;# 
  2314  030F                     	;# 
  2315  0310                     	;# 
  2316  0311                     	;# 
  2317  0311                     	;# 
  2318  0312                     	;# 
  2319  0313                     	;# 
  2320  038C                     	;# 
  2321  038D                     	;# 
  2322  038E                     	;# 
  2323  038F                     	;# 
  2324  0390                     	;# 
  2325  0391                     	;# 
  2326  0392                     	;# 
  2327  0393                     	;# 
  2328  0394                     	;# 
  2329  0395                     	;# 
  2330  0396                     	;# 
  2331  0397                     	;# 
  2332  0398                     	;# 
  2333  0399                     	;# 
  2334  039D                     	;# 
  2335  039E                     	;# 
  2336  039F                     	;# 
  2337  0511                     	;# 
  2338  0513                     	;# 
  2339  0515                     	;# 
  2340  051A                     	;# 
  2341  0591                     	;# 
  2342  0592                     	;# 
  2343  0592                     	;# 
  2344  0593                     	;# 
  2345  0594                     	;# 
  2346  0594                     	;# 
  2347  0595                     	;# 
  2348  0596                     	;# 
  2349  0596                     	;# 
  2350  0E91                     	;# 
  2351  0E92                     	;# 
  2352  0E93                     	;# 
  2353  0E94                     	;# 
  2354  0E95                     	;# 
  2355  0E96                     	;# 
  2356  0E97                     	;# 
  2357  0E98                     	;# 
  2358  0E99                     	;# 
  2359  0E9A                     	;# 
  2360  0E9B                     	;# 
  2361  0E9C                     	;# 
  2362  0E9D                     	;# 
  2363  0E9E                     	;# 
  2364  0E9F                     	;# 
  2365  0EA0                     	;# 
  2366  0EA1                     	;# 
  2367  0EA1                     	;# 
  2368  0EA2                     	;# 
  2369  0EA3                     	;# 
  2370  0EA3                     	;# 
  2371  0EA4                     	;# 
  2372  0EA5                     	;# 
  2373  0EA5                     	;# 
  2374  0EA6                     	;# 
  2375  0EA7                     	;# 
  2376  0EA7                     	;# 
  2377  0EA8                     	;# 
  2378  0EA9                     	;# 
  2379  0EAA                     	;# 
  2380  0EAB                     	;# 
  2381  0EAC                     	;# 
  2382  0EAD                     	;# 
  2383  0EAE                     	;# 
  2384  0EAF                     	;# 
  2385  0EB1                     	;# 
  2386  0EB2                     	;# 
  2387  0EB3                     	;# 
  2388  0EB4                     	;# 
  2389  0EB5                     	;# 
  2390  0EB6                     	;# 
  2391  0EB7                     	;# 
  2392  0EB8                     	;# 
  2393  0EB9                     	;# 
  2394  0EBA                     	;# 
  2395  0EBB                     	;# 
  2396  0EBC                     	;# 
  2397  0EBD                     	;# 
  2398  0EBE                     	;# 
  2399  0EBF                     	;# 
  2400  0EC0                     	;# 
  2401  0EC1                     	;# 
  2402  0EC1                     	;# 
  2403  0EC2                     	;# 
  2404  0EC3                     	;# 
  2405  0EC3                     	;# 
  2406  0EC4                     	;# 
  2407  0EC5                     	;# 
  2408  0EC5                     	;# 
  2409  0EC6                     	;# 
  2410  0EC7                     	;# 
  2411  0EC7                     	;# 
  2412  0EC8                     	;# 
  2413  0EC9                     	;# 
  2414  0ECA                     	;# 
  2415  0ECB                     	;# 
  2416  0ECC                     	;# 
  2417  0ECD                     	;# 
  2418  0ECE                     	;# 
  2419  0ECF                     	;# 
  2420  0ED1                     	;# 
  2421  0ED2                     	;# 
  2422  0ED3                     	;# 
  2423  0ED4                     	;# 
  2424  0ED5                     	;# 
  2425  0ED6                     	;# 
  2426  0ED7                     	;# 
  2427  0ED8                     	;# 
  2428  0ED9                     	;# 
  2429  0EDA                     	;# 
  2430  0EDB                     	;# 
  2431  0EDC                     	;# 
  2432  0EDD                     	;# 
  2433  0EDE                     	;# 
  2434  0EDF                     	;# 
  2435  0EE0                     	;# 
  2436  0EE1                     	;# 
  2437  0EE1                     	;# 
  2438  0EE2                     	;# 
  2439  0EE3                     	;# 
  2440  0EE3                     	;# 
  2441  0EE4                     	;# 
  2442  0EE5                     	;# 
  2443  0EE5                     	;# 
  2444  0EE6                     	;# 
  2445  0EE7                     	;# 
  2446  0EE7                     	;# 
  2447  0EE8                     	;# 
  2448  0EE9                     	;# 
  2449  0EEA                     	;# 
  2450  0EEB                     	;# 
  2451  0EEC                     	;# 
  2452  0EED                     	;# 
  2453  0EEE                     	;# 
  2454  0EEF                     	;# 
  2455  0F11                     	;# 
  2456  0F12                     	;# 
  2457  0F13                     	;# 
  2458  0F14                     	;# 
  2459  0F15                     	;# 
  2460  0F16                     	;# 
  2461  0F17                     	;# 
  2462  0F18                     	;# 
  2463  0F19                     	;# 
  2464  0F1A                     	;# 
  2465  0F1B                     	;# 
  2466  0F1C                     	;# 
  2467  0F1D                     	;# 
  2468  0F1E                     	;# 
  2469  0F1F                     	;# 
  2470  0F20                     	;# 
  2471  0F21                     	;# 
  2472  0F21                     	;# 
  2473  0F22                     	;# 
  2474  0F23                     	;# 
  2475  0F23                     	;# 
  2476  0F24                     	;# 
  2477  0F25                     	;# 
  2478  0F25                     	;# 
  2479  0F26                     	;# 
  2480  0F27                     	;# 
  2481  0F27                     	;# 
  2482  0F28                     	;# 
  2483  0F29                     	;# 
  2484  0F2A                     	;# 
  2485  0F2B                     	;# 
  2486  0F2C                     	;# 
  2487  0F2D                     	;# 
  2488  0F2E                     	;# 
  2489  0F2F                     	;# 
  2490  0FE4                     	;# 
  2491  0FE5                     	;# 
  2492  0FE6                     	;# 
  2493  0FE7                     	;# 
  2494  0FE8                     	;# 
  2495  0FE9                     	;# 
  2496  0FEA                     	;# 
  2497  0FEB                     	;# 
  2498  0FED                     	;# 
  2499  0FEE                     	;# 
  2500  0FEF                     	;# 
  2501  0000                     	;# 
  2502  0001                     	;# 
  2503  0002                     	;# 
  2504  0003                     	;# 
  2505  0004                     	;# 
  2506  0005                     	;# 
  2507  0006                     	;# 
  2508  0007                     	;# 
  2509  0008                     	;# 
  2510  0009                     	;# 
  2511  000A                     	;# 
  2512  000B                     	;# 
  2513  000C                     	;# 
  2514  000D                     	;# 
  2515  000E                     	;# 
  2516  000F                     	;# 
  2517  0010                     	;# 
  2518  0011                     	;# 
  2519  0012                     	;# 
  2520  0013                     	;# 
  2521  0014                     	;# 
  2522  0015                     	;# 
  2523  0016                     	;# 
  2524  0016                     	;# 
  2525  0017                     	;# 
  2526  0018                     	;# 
  2527  0019                     	;# 
  2528  001A                     	;# 
  2529  001B                     	;# 
  2530  001C                     	;# 
  2531  008C                     	;# 
  2532  008D                     	;# 
  2533  008E                     	;# 
  2534  008F                     	;# 
  2535  0090                     	;# 
  2536  0091                     	;# 
  2537  0092                     	;# 
  2538  0093                     	;# 
  2539  0094                     	;# 
  2540  0095                     	;# 
  2541  0096                     	;# 
  2542  0097                     	;# 
  2543  0098                     	;# 
  2544  0099                     	;# 
  2545  009A                     	;# 
  2546  009B                     	;# 
  2547  009B                     	;# 
  2548  009C                     	;# 
  2549  009D                     	;# 
  2550  009E                     	;# 
  2551  009F                     	;# 
  2552  010C                     	;# 
  2553  010D                     	;# 
  2554  010E                     	;# 
  2555  010F                     	;# 
  2556  0110                     	;# 
  2557  0111                     	;# 
  2558  0112                     	;# 
  2559  0113                     	;# 
  2560  0114                     	;# 
  2561  0115                     	;# 
  2562  0116                     	;# 
  2563  0117                     	;# 
  2564  0118                     	;# 
  2565  0119                     	;# 
  2566  011A                     	;# 
  2567  011B                     	;# 
  2568  011C                     	;# 
  2569  011D                     	;# 
  2570  011D                     	;# 
  2571  011D                     	;# 
  2572  011E                     	;# 
  2573  011F                     	;# 
  2574  018C                     	;# 
  2575  018D                     	;# 
  2576  018E                     	;# 
  2577  018F                     	;# 
  2578  0190                     	;# 
  2579  0191                     	;# 
  2580  0191                     	;# 
  2581  0192                     	;# 
  2582  0193                     	;# 
  2583  0193                     	;# 
  2584  0193                     	;# 
  2585  0194                     	;# 
  2586  0195                     	;# 
  2587  0196                     	;# 
  2588  0197                     	;# 
  2589  0199                     	;# 
  2590  0199                     	;# 
  2591  0199                     	;# 
  2592  019A                     	;# 
  2593  019A                     	;# 
  2594  019A                     	;# 
  2595  019B                     	;# 
  2596  019B                     	;# 
  2597  019B                     	;# 
  2598  019B                     	;# 
  2599  019B                     	;# 
  2600  019C                     	;# 
  2601  019C                     	;# 
  2602  019C                     	;# 
  2603  019D                     	;# 
  2604  019D                     	;# 
  2605  019D                     	;# 
  2606  019E                     	;# 
  2607  019E                     	;# 
  2608  019E                     	;# 
  2609  019F                     	;# 
  2610  019F                     	;# 
  2611  019F                     	;# 
  2612  019F                     	;# 
  2613  019F                     	;# 
  2614  020C                     	;# 
  2615  020D                     	;# 
  2616  020E                     	;# 
  2617  020F                     	;# 
  2618  0210                     	;# 
  2619  0211                     	;# 
  2620  0211                     	;# 
  2621  0212                     	;# 
  2622  0212                     	;# 
  2623  0213                     	;# 
  2624  0213                     	;# 
  2625  0214                     	;# 
  2626  0214                     	;# 
  2627  0215                     	;# 
  2628  0215                     	;# 
  2629  0215                     	;# 
  2630  0215                     	;# 
  2631  0216                     	;# 
  2632  0216                     	;# 
  2633  0217                     	;# 
  2634  0217                     	;# 
  2635  028C                     	;# 
  2636  028D                     	;# 
  2637  028E                     	;# 
  2638  028F                     	;# 
  2639  0290                     	;# 
  2640  0291                     	;# 
  2641  0291                     	;# 
  2642  0292                     	;# 
  2643  0293                     	;# 
  2644  0298                     	;# 
  2645  0298                     	;# 
  2646  0299                     	;# 
  2647  029A                     	;# 
  2648  030C                     	;# 
  2649  030D                     	;# 
  2650  030E                     	;# 
  2651  030F                     	;# 
  2652  0310                     	;# 
  2653  0311                     	;# 
  2654  0311                     	;# 
  2655  0312                     	;# 
  2656  0313                     	;# 
  2657  038C                     	;# 
  2658  038D                     	;# 
  2659  038E                     	;# 
  2660  038F                     	;# 
  2661  0390                     	;# 
  2662  0391                     	;# 
  2663  0392                     	;# 
  2664  0393                     	;# 
  2665  0394                     	;# 
  2666  0395                     	;# 
  2667  0396                     	;# 
  2668  0397                     	;# 
  2669  0398                     	;# 
  2670  0399                     	;# 
  2671  039D                     	;# 
  2672  039E                     	;# 
  2673  039F                     	;# 
  2674  0511                     	;# 
  2675  0513                     	;# 
  2676  0515                     	;# 
  2677  051A                     	;# 
  2678  0591                     	;# 
  2679  0592                     	;# 
  2680  0592                     	;# 
  2681  0593                     	;# 
  2682  0594                     	;# 
  2683  0594                     	;# 
  2684  0595                     	;# 
  2685  0596                     	;# 
  2686  0596                     	;# 
  2687  0E91                     	;# 
  2688  0E92                     	;# 
  2689  0E93                     	;# 
  2690  0E94                     	;# 
  2691  0E95                     	;# 
  2692  0E96                     	;# 
  2693  0E97                     	;# 
  2694  0E98                     	;# 
  2695  0E99                     	;# 
  2696  0E9A                     	;# 
  2697  0E9B                     	;# 
  2698  0E9C                     	;# 
  2699  0E9D                     	;# 
  2700  0E9E                     	;# 
  2701  0E9F                     	;# 
  2702  0EA0                     	;# 
  2703  0EA1                     	;# 
  2704  0EA1                     	;# 
  2705  0EA2                     	;# 
  2706  0EA3                     	;# 
  2707  0EA3                     	;# 
  2708  0EA4                     	;# 
  2709  0EA5                     	;# 
  2710  0EA5                     	;# 
  2711  0EA6                     	;# 
  2712  0EA7                     	;# 
  2713  0EA7                     	;# 
  2714  0EA8                     	;# 
  2715  0EA9                     	;# 
  2716  0EAA                     	;# 
  2717  0EAB                     	;# 
  2718  0EAC                     	;# 
  2719  0EAD                     	;# 
  2720  0EAE                     	;# 
  2721  0EAF                     	;# 
  2722  0EB1                     	;# 
  2723  0EB2                     	;# 
  2724  0EB3                     	;# 
  2725  0EB4                     	;# 
  2726  0EB5                     	;# 
  2727  0EB6                     	;# 
  2728  0EB7                     	;# 
  2729  0EB8                     	;# 
  2730  0EB9                     	;# 
  2731  0EBA                     	;# 
  2732  0EBB                     	;# 
  2733  0EBC                     	;# 
  2734  0EBD                     	;# 
  2735  0EBE                     	;# 
  2736  0EBF                     	;# 
  2737  0EC0                     	;# 
  2738  0EC1                     	;# 
  2739  0EC1                     	;# 
  2740  0EC2                     	;# 
  2741  0EC3                     	;# 
  2742  0EC3                     	;# 
  2743  0EC4                     	;# 
  2744  0EC5                     	;# 
  2745  0EC5                     	;# 
  2746  0EC6                     	;# 
  2747  0EC7                     	;# 
  2748  0EC7                     	;# 
  2749  0EC8                     	;# 
  2750  0EC9                     	;# 
  2751  0ECA                     	;# 
  2752  0ECB                     	;# 
  2753  0ECC                     	;# 
  2754  0ECD                     	;# 
  2755  0ECE                     	;# 
  2756  0ECF                     	;# 
  2757  0ED1                     	;# 
  2758  0ED2                     	;# 
  2759  0ED3                     	;# 
  2760  0ED4                     	;# 
  2761  0ED5                     	;# 
  2762  0ED6                     	;# 
  2763  0ED7                     	;# 
  2764  0ED8                     	;# 
  2765  0ED9                     	;# 
  2766  0EDA                     	;# 
  2767  0EDB                     	;# 
  2768  0EDC                     	;# 
  2769  0EDD                     	;# 
  2770  0EDE                     	;# 
  2771  0EDF                     	;# 
  2772  0EE0                     	;# 
  2773  0EE1                     	;# 
  2774  0EE1                     	;# 
  2775  0EE2                     	;# 
  2776  0EE3                     	;# 
  2777  0EE3                     	;# 
  2778  0EE4                     	;# 
  2779  0EE5                     	;# 
  2780  0EE5                     	;# 
  2781  0EE6                     	;# 
  2782  0EE7                     	;# 
  2783  0EE7                     	;# 
  2784  0EE8                     	;# 
  2785  0EE9                     	;# 
  2786  0EEA                     	;# 
  2787  0EEB                     	;# 
  2788  0EEC                     	;# 
  2789  0EED                     	;# 
  2790  0EEE                     	;# 
  2791  0EEF                     	;# 
  2792  0F11                     	;# 
  2793  0F12                     	;# 
  2794  0F13                     	;# 
  2795  0F14                     	;# 
  2796  0F15                     	;# 
  2797  0F16                     	;# 
  2798  0F17                     	;# 
  2799  0F18                     	;# 
  2800  0F19                     	;# 
  2801  0F1A                     	;# 
  2802  0F1B                     	;# 
  2803  0F1C                     	;# 
  2804  0F1D                     	;# 
  2805  0F1E                     	;# 
  2806  0F1F                     	;# 
  2807  0F20                     	;# 
  2808  0F21                     	;# 
  2809  0F21                     	;# 
  2810  0F22                     	;# 
  2811  0F23                     	;# 
  2812  0F23                     	;# 
  2813  0F24                     	;# 
  2814  0F25                     	;# 
  2815  0F25                     	;# 
  2816  0F26                     	;# 
  2817  0F27                     	;# 
  2818  0F27                     	;# 
  2819  0F28                     	;# 
  2820  0F29                     	;# 
  2821  0F2A                     	;# 
  2822  0F2B                     	;# 
  2823  0F2C                     	;# 
  2824  0F2D                     	;# 
  2825  0F2E                     	;# 
  2826  0F2F                     	;# 
  2827  0FE4                     	;# 
  2828  0FE5                     	;# 
  2829  0FE6                     	;# 
  2830  0FE7                     	;# 
  2831  0FE8                     	;# 
  2832  0FE9                     	;# 
  2833  0FEA                     	;# 
  2834  0FEB                     	;# 
  2835  0FED                     	;# 
  2836  0FEE                     	;# 
  2837  0FEF                     	;_currentBuff
  2838                           
  2839                           	psect	idataBANK3
  2840  2F79                     __pidataBANK3:	
  2841                           
  2842                           ;initializer for _tempChannels
  2843  2F79  340C               	retlw	12
  2844  2F7A  340A               	retlw	10
  2845  2F7B  3408               	retlw	8
  2846  2F7C  3409               	retlw	9
  2847  2F7D  340B               	retlw	11
  2848                           
  2849                           ;initializer for SSD1306_Test@F7478
  2850  2F7E  348D               	retlw	141
  2851  2F7F  3414               	retlw	20
  2852                           
  2853                           	psect	stringtext1
  2854  1800                     __pstringtext1:	
  2855  1800                     ltc6804@crc15Table:	
  2856  1800  3400               	retlw	0
  2857  1801  3400               	retlw	0
  2858  1802  3499               	retlw	153
  2859  1803  34C5               	retlw	197
  2860  1804  34AB               	retlw	171
  2861  1805  34CE               	retlw	206
  2862  1806  3432               	retlw	50
  2863  1807  340B               	retlw	11
  2864  1808  34CF               	retlw	207
  2865  1809  34D8               	retlw	216
  2866  180A  3456               	retlw	86
  2867  180B  341D               	retlw	29
  2868  180C  3464               	retlw	100
  2869  180D  3416               	retlw	22
  2870  180E  34FD               	retlw	253
  2871  180F  34D3               	retlw	211
  2872  1810  3407               	retlw	7
  2873  1811  34F4               	retlw	244
  2874  1812  349E               	retlw	158
  2875  1813  3431               	retlw	49
  2876  1814  34AC               	retlw	172
  2877  1815  343A               	retlw	58
  2878  1816  3435               	retlw	53
  2879  1817  34FF               	retlw	255
  2880  1818  34C8               	retlw	200
  2881  1819  342C               	retlw	44
  2882  181A  3451               	retlw	81
  2883  181B  34E9               	retlw	233
  2884  181C  3463               	retlw	99
  2885  181D  34E2               	retlw	226
  2886  181E  34FA               	retlw	250
  2887  181F  3427               	retlw	39
  2888  1820  3497               	retlw	151
  2889  1821  34AD               	retlw	173
  2890  1822  340E               	retlw	14
  2891  1823  3468               	retlw	104
  2892  1824  343C               	retlw	60
  2893  1825  3463               	retlw	99
  2894  1826  34A5               	retlw	165
  2895  1827  34A6               	retlw	166
  2896  1828  3458               	retlw	88
  2897  1829  3475               	retlw	117
  2898  182A  34C1               	retlw	193
  2899  182B  34B0               	retlw	176
  2900  182C  34F3               	retlw	243
  2901  182D  34BB               	retlw	187
  2902  182E  346A               	retlw	106
  2903  182F  347E               	retlw	126
  2904  1830  3490               	retlw	144
  2905  1831  3459               	retlw	89
  2906  1832  3409               	retlw	9
  2907  1833  349C               	retlw	156
  2908  1834  343B               	retlw	59
  2909  1835  3497               	retlw	151
  2910  1836  34A2               	retlw	162
  2911  1837  3452               	retlw	82
  2912  1838  345F               	retlw	95
  2913  1839  3481               	retlw	129
  2914  183A  34C6               	retlw	198
  2915  183B  3444               	retlw	68
  2916  183C  34F4               	retlw	244
  2917  183D  344F               	retlw	79
  2918  183E  346D               	retlw	109
  2919  183F  348A               	retlw	138
  2920  1840  342E               	retlw	46
  2921  1841  345B               	retlw	91
  2922  1842  34B7               	retlw	183
  2923  1843  349E               	retlw	158
  2924  1844  3485               	retlw	133
  2925  1845  3495               	retlw	149
  2926  1846  341C               	retlw	28
  2927  1847  3450               	retlw	80
  2928  1848  34E1               	retlw	225
  2929  1849  3483               	retlw	131
  2930  184A  3478               	retlw	120
  2931  184B  3446               	retlw	70
  2932  184C  344A               	retlw	74
  2933  184D  344D               	retlw	77
  2934  184E  34D3               	retlw	211
  2935  184F  3488               	retlw	136
  2936  1850  3429               	retlw	41
  2937  1851  34AF               	retlw	175
  2938  1852  34B0               	retlw	176
  2939  1853  346A               	retlw	106
  2940  1854  3482               	retlw	130
  2941  1855  3461               	retlw	97
  2942  1856  341B               	retlw	27
  2943  1857  34A4               	retlw	164
  2944  1858  34E6               	retlw	230
  2945  1859  3477               	retlw	119
  2946  185A  347F               	retlw	127
  2947  185B  34B2               	retlw	178
  2948  185C  344D               	retlw	77
  2949  185D  34B9               	retlw	185
  2950  185E  34D4               	retlw	212
  2951  185F  347C               	retlw	124
  2952  1860  34B9               	retlw	185
  2953  1861  34F6               	retlw	246
  2954  1862  3420               	retlw	32
  2955  1863  3433               	retlw	51
  2956  1864  3412               	retlw	18
  2957  1865  3438               	retlw	56
  2958  1866  348B               	retlw	139
  2959  1867  34FD               	retlw	253
  2960  1868  3476               	retlw	118
  2961  1869  342E               	retlw	46
  2962  186A  34EF               	retlw	239
  2963  186B  34EB               	retlw	235
  2964  186C  34DD               	retlw	221
  2965  186D  34E0               	retlw	224
  2966  186E  3444               	retlw	68
  2967  186F  3425               	retlw	37
  2968  1870  34BE               	retlw	190
  2969  1871  3402               	retlw	2
  2970  1872  3427               	retlw	39
  2971  1873  34C7               	retlw	199
  2972  1874  3415               	retlw	21
  2973  1875  34CC               	retlw	204
  2974  1876  348C               	retlw	140
  2975  1877  3409               	retlw	9
  2976  1878  3471               	retlw	113
  2977  1879  34DA               	retlw	218
  2978  187A  34E8               	retlw	232
  2979  187B  341F               	retlw	31
  2980  187C  34DA               	retlw	218
  2981  187D  3414               	retlw	20
  2982  187E  3443               	retlw	67
  2983  187F  34D1               	retlw	209
  2984  1880  34C5               	retlw	197
  2985  1881  34F3               	retlw	243
  2986  1882  345C               	retlw	92
  2987  1883  3436               	retlw	54
  2988  1884  346E               	retlw	110
  2989  1885  343D               	retlw	61
  2990  1886  34F7               	retlw	247
  2991  1887  34F8               	retlw	248
  2992  1888  340A               	retlw	10
  2993  1889  342B               	retlw	43
  2994  188A  3493               	retlw	147
  2995  188B  34EE               	retlw	238
  2996  188C  34A1               	retlw	161
  2997  188D  34E5               	retlw	229
  2998  188E  3438               	retlw	56
  2999  188F  3420               	retlw	32
  3000  1890  34C2               	retlw	194
  3001  1891  3407               	retlw	7
  3002  1892  345B               	retlw	91
  3003  1893  34C2               	retlw	194
  3004  1894  3469               	retlw	105
  3005  1895  34C9               	retlw	201
  3006  1896  34F0               	retlw	240
  3007  1897  340C               	retlw	12
  3008  1898  340D               	retlw	13
  3009  1899  34DF               	retlw	223
  3010  189A  3494               	retlw	148
  3011  189B  341A               	retlw	26
  3012  189C  34A6               	retlw	166
  3013  189D  3411               	retlw	17
  3014  189E  343F               	retlw	63
  3015  189F  34D4               	retlw	212
  3016  18A0  3452               	retlw	82
  3017  18A1  345E               	retlw	94
  3018  18A2  34CB               	retlw	203
  3019  18A3  349B               	retlw	155
  3020  18A4  34F9               	retlw	249
  3021  18A5  3490               	retlw	144
  3022  18A6  3460               	retlw	96
  3023  18A7  3455               	retlw	85
  3024  18A8  349D               	retlw	157
  3025  18A9  3486               	retlw	134
  3026  18AA  3404               	retlw	4
  3027  18AB  3443               	retlw	67
  3028  18AC  3436               	retlw	54
  3029  18AD  3448               	retlw	72
  3030  18AE  34AF               	retlw	175
  3031  18AF  348D               	retlw	141
  3032  18B0  3455               	retlw	85
  3033  18B1  34AA               	retlw	170
  3034  18B2  34CC               	retlw	204
  3035  18B3  346F               	retlw	111
  3036  18B4  34FE               	retlw	254
  3037  18B5  3464               	retlw	100
  3038  18B6  3467               	retlw	103
  3039  18B7  34A1               	retlw	161
  3040  18B8  349A               	retlw	154
  3041  18B9  3472               	retlw	114
  3042  18BA  3403               	retlw	3
  3043  18BB  34B7               	retlw	183
  3044  18BC  3431               	retlw	49
  3045  18BD  34BC               	retlw	188
  3046  18BE  34A8               	retlw	168
  3047  18BF  3479               	retlw	121
  3048  18C0  34EB               	retlw	235
  3049  18C1  34A8               	retlw	168
  3050  18C2  3472               	retlw	114
  3051  18C3  346D               	retlw	109
  3052  18C4  3440               	retlw	64
  3053  18C5  3466               	retlw	102
  3054  18C6  34D9               	retlw	217
  3055  18C7  34A3               	retlw	163
  3056  18C8  3424               	retlw	36
  3057  18C9  3470               	retlw	112
  3058  18CA  34BD               	retlw	189
  3059  18CB  34B5               	retlw	181
  3060  18CC  348F               	retlw	143
  3061  18CD  34BE               	retlw	190
  3062  18CE  3416               	retlw	22
  3063  18CF  347B               	retlw	123
  3064  18D0  34EC               	retlw	236
  3065  18D1  345C               	retlw	92
  3066  18D2  3475               	retlw	117
  3067  18D3  3499               	retlw	153
  3068  18D4  3447               	retlw	71
  3069  18D5  3492               	retlw	146
  3070  18D6  34DE               	retlw	222
  3071  18D7  3457               	retlw	87
  3072  18D8  3423               	retlw	35
  3073  18D9  3484               	retlw	132
  3074  18DA  34BA               	retlw	186
  3075  18DB  3441               	retlw	65
  3076  18DC  3488               	retlw	136
  3077  18DD  344A               	retlw	74
  3078  18DE  3411               	retlw	17
  3079  18DF  348F               	retlw	143
  3080  18E0  347C               	retlw	124
  3081  18E1  3405               	retlw	5
  3082  18E2  34E5               	retlw	229
  3083  18E3  34C0               	retlw	192
  3084  18E4  34D7               	retlw	215
  3085  18E5  34CB               	retlw	203
  3086  18E6  344E               	retlw	78
  3087  18E7  340E               	retlw	14
  3088  18E8  34B3               	retlw	179
  3089  18E9  34DD               	retlw	221
  3090  18EA  342A               	retlw	42
  3091  18EB  3418               	retlw	24
  3092  18EC  3418               	retlw	24
  3093  18ED  3413               	retlw	19
  3094  18EE  3481               	retlw	129
  3095  18EF  34D6               	retlw	214
  3096  18F0  347B               	retlw	123
  3097  18F1  34F1               	retlw	241
  3098  18F2  34E2               	retlw	226
  3099  18F3  3434               	retlw	52
  3100  18F4  34D0               	retlw	208
  3101  18F5  343F               	retlw	63
  3102  18F6  3449               	retlw	73
  3103  18F7  34FA               	retlw	250
  3104  18F8  34B4               	retlw	180
  3105  18F9  3429               	retlw	41
  3106  18FA  342D               	retlw	45
  3107  18FB  34EC               	retlw	236
  3108  18FC  341F               	retlw	31
  3109  18FD  34E7               	retlw	231
  3110  18FE  3486               	retlw	134
  3111  18FF  3422               	retlw	34
  3112  1900  3413               	retlw	19
  3113  1901  34A2               	retlw	162
  3114  1902  348A               	retlw	138
  3115  1903  3467               	retlw	103
  3116  1904  34B8               	retlw	184
  3117  1905  346C               	retlw	108
  3118  1906  3421               	retlw	33
  3119  1907  34A9               	retlw	169
  3120  1908  34DC               	retlw	220
  3121  1909  347A               	retlw	122
  3122  190A  3445               	retlw	69
  3123  190B  34BF               	retlw	191
  3124  190C  3477               	retlw	119
  3125  190D  34B4               	retlw	180
  3126  190E  34EE               	retlw	238
  3127  190F  3471               	retlw	113
  3128  1910  3414               	retlw	20
  3129  1911  3456               	retlw	86
  3130  1912  348D               	retlw	141
  3131  1913  3493               	retlw	147
  3132  1914  34BF               	retlw	191
  3133  1915  3498               	retlw	152
  3134  1916  3426               	retlw	38
  3135  1917  345D               	retlw	93
  3136  1918  34DB               	retlw	219
  3137  1919  348E               	retlw	142
  3138  191A  3442               	retlw	66
  3139  191B  344B               	retlw	75
  3140  191C  3470               	retlw	112
  3141  191D  3440               	retlw	64
  3142  191E  34E9               	retlw	233
  3143  191F  3485               	retlw	133
  3144  1920  3484               	retlw	132
  3145  1921  340F               	retlw	15
  3146  1922  341D               	retlw	29
  3147  1923  34CA               	retlw	202
  3148  1924  342F               	retlw	47
  3149  1925  34C1               	retlw	193
  3150  1926  34B6               	retlw	182
  3151  1927  3404               	retlw	4
  3152  1928  344B               	retlw	75
  3153  1929  34D7               	retlw	215
  3154  192A  34D2               	retlw	210
  3155  192B  3412               	retlw	18
  3156  192C  34E0               	retlw	224
  3157  192D  3419               	retlw	25
  3158  192E  3479               	retlw	121
  3159  192F  34DC               	retlw	220
  3160  1930  3483               	retlw	131
  3161  1931  34FB               	retlw	251
  3162  1932  341A               	retlw	26
  3163  1933  343E               	retlw	62
  3164  1934  3428               	retlw	40
  3165  1935  3435               	retlw	53
  3166  1936  34B1               	retlw	177
  3167  1937  34F0               	retlw	240
  3168  1938  344C               	retlw	76
  3169  1939  3423               	retlw	35
  3170  193A  34D5               	retlw	213
  3171  193B  34E6               	retlw	230
  3172  193C  34E7               	retlw	231
  3173  193D  34ED               	retlw	237
  3174  193E  347E               	retlw	126
  3175  193F  3428               	retlw	40
  3176  1940  343D               	retlw	61
  3177  1941  34F9               	retlw	249
  3178  1942  34A4               	retlw	164
  3179  1943  343C               	retlw	60
  3180  1944  3496               	retlw	150
  3181  1945  3437               	retlw	55
  3182  1946  340F               	retlw	15
  3183  1947  34F2               	retlw	242
  3184  1948  34F2               	retlw	242
  3185  1949  3421               	retlw	33
  3186  194A  346B               	retlw	107
  3187  194B  34E4               	retlw	228
  3188  194C  3459               	retlw	89
  3189  194D  34EF               	retlw	239
  3190  194E  34C0               	retlw	192
  3191  194F  342A               	retlw	42
  3192  1950  343A               	retlw	58
  3193  1951  340D               	retlw	13
  3194  1952  34A3               	retlw	163
  3195  1953  34C8               	retlw	200
  3196  1954  3491               	retlw	145
  3197  1955  34C3               	retlw	195
  3198  1956  3408               	retlw	8
  3199  1957  3406               	retlw	6
  3200  1958  34F5               	retlw	245
  3201  1959  34D5               	retlw	213
  3202  195A  346C               	retlw	108
  3203  195B  3410               	retlw	16
  3204  195C  345E               	retlw	94
  3205  195D  341B               	retlw	27
  3206  195E  34C7               	retlw	199
  3207  195F  34DE               	retlw	222
  3208  1960  34AA               	retlw	170
  3209  1961  3454               	retlw	84
  3210  1962  3433               	retlw	51
  3211  1963  3491               	retlw	145
  3212  1964  3401               	retlw	1
  3213  1965  349A               	retlw	154
  3214  1966  3498               	retlw	152
  3215  1967  345F               	retlw	95
  3216  1968  3465               	retlw	101
  3217  1969  348C               	retlw	140
  3218  196A  34FC               	retlw	252
  3219  196B  3449               	retlw	73
  3220  196C  34CE               	retlw	206
  3221  196D  3442               	retlw	66
  3222  196E  3457               	retlw	87
  3223  196F  3487               	retlw	135
  3224  1970  34AD               	retlw	173
  3225  1971  34A0               	retlw	160
  3226  1972  3434               	retlw	52
  3227  1973  3465               	retlw	101
  3228  1974  3406               	retlw	6
  3229  1975  346E               	retlw	110
  3230  1976  349F               	retlw	159
  3231  1977  34AB               	retlw	171
  3232  1978  3462               	retlw	98
  3233  1979  3478               	retlw	120
  3234  197A  34FB               	retlw	251
  3235  197B  34BD               	retlw	189
  3236  197C  34C9               	retlw	201
  3237  197D  34B6               	retlw	182
  3238  197E  3450               	retlw	80
  3239  197F  3473               	retlw	115
  3240  1980  34D6               	retlw	214
  3241  1981  3451               	retlw	81
  3242  1982  344F               	retlw	79
  3243  1983  3494               	retlw	148
  3244  1984  347D               	retlw	125
  3245  1985  349F               	retlw	159
  3246  1986  34E4               	retlw	228
  3247  1987  345A               	retlw	90
  3248  1988  3419               	retlw	25
  3249  1989  3489               	retlw	137
  3250  198A  3480               	retlw	128
  3251  198B  344C               	retlw	76
  3252  198C  34B2               	retlw	178
  3253  198D  3447               	retlw	71
  3254  198E  342B               	retlw	43
  3255  198F  3482               	retlw	130
  3256  1990  34D1               	retlw	209
  3257  1991  34A5               	retlw	165
  3258  1992  3448               	retlw	72
  3259  1993  3460               	retlw	96
  3260  1994  347A               	retlw	122
  3261  1995  346B               	retlw	107
  3262  1996  34E3               	retlw	227
  3263  1997  34AE               	retlw	174
  3264  1998  341E               	retlw	30
  3265  1999  347D               	retlw	125
  3266  199A  3487               	retlw	135
  3267  199B  34B8               	retlw	184
  3268  199C  34B5               	retlw	181
  3269  199D  34B3               	retlw	179
  3270  199E  342C               	retlw	44
  3271  199F  3476               	retlw	118
  3272  19A0  3441               	retlw	65
  3273  19A1  34FC               	retlw	252
  3274  19A2  34D8               	retlw	216
  3275  19A3  3439               	retlw	57
  3276  19A4  34EA               	retlw	234
  3277  19A5  3432               	retlw	50
  3278  19A6  3473               	retlw	115
  3279  19A7  34F7               	retlw	247
  3280  19A8  348E               	retlw	142
  3281  19A9  3424               	retlw	36
  3282  19AA  3417               	retlw	23
  3283  19AB  34E1               	retlw	225
  3284  19AC  3425               	retlw	37
  3285  19AD  34EA               	retlw	234
  3286  19AE  34BC               	retlw	188
  3287  19AF  342F               	retlw	47
  3288  19B0  3446               	retlw	70
  3289  19B1  3408               	retlw	8
  3290  19B2  34DF               	retlw	223
  3291  19B3  34CD               	retlw	205
  3292  19B4  34ED               	retlw	237
  3293  19B5  34C6               	retlw	198
  3294  19B6  3474               	retlw	116
  3295  19B7  3403               	retlw	3
  3296  19B8  3489               	retlw	137
  3297  19B9  34D0               	retlw	208
  3298  19BA  3410               	retlw	16
  3299  19BB  3415               	retlw	21
  3300  19BC  3422               	retlw	34
  3301  19BD  341E               	retlw	30
  3302  19BE  34BB               	retlw	187
  3303  19BF  34DB               	retlw	219
  3304  19C0  34F8               	retlw	248
  3305  19C1  340A               	retlw	10
  3306  19C2  3461               	retlw	97
  3307  19C3  34CF               	retlw	207
  3308  19C4  3453               	retlw	83
  3309  19C5  34C4               	retlw	196
  3310  19C6  34CA               	retlw	202
  3311  19C7  3401               	retlw	1
  3312  19C8  3437               	retlw	55
  3313  19C9  34D2               	retlw	210
  3314  19CA  34AE               	retlw	174
  3315  19CB  3417               	retlw	23
  3316  19CC  349C               	retlw	156
  3317  19CD  341C               	retlw	28
  3318  19CE  3405               	retlw	5
  3319  19CF  34D9               	retlw	217
  3320  19D0  34FF               	retlw	255
  3321  19D1  34FE               	retlw	254
  3322  19D2  3466               	retlw	102
  3323  19D3  343B               	retlw	59
  3324  19D4  3454               	retlw	84
  3325  19D5  3430               	retlw	48
  3326  19D6  34CD               	retlw	205
  3327  19D7  34F5               	retlw	245
  3328  19D8  3430               	retlw	48
  3329  19D9  3426               	retlw	38
  3330  19DA  34A9               	retlw	169
  3331  19DB  34E3               	retlw	227
  3332  19DC  349B               	retlw	155
  3333  19DD  34E8               	retlw	232
  3334  19DE  3402               	retlw	2
  3335  19DF  342D               	retlw	45
  3336  19E0  346F               	retlw	111
  3337  19E1  34A7               	retlw	167
  3338  19E2  34F6               	retlw	246
  3339  19E3  3462               	retlw	98
  3340  19E4  34C4               	retlw	196
  3341  19E5  3469               	retlw	105
  3342  19E6  345D               	retlw	93
  3343  19E7  34AC               	retlw	172
  3344  19E8  34A0               	retlw	160
  3345  19E9  347F               	retlw	127
  3346  19EA  3439               	retlw	57
  3347  19EB  34BA               	retlw	186
  3348  19EC  340B               	retlw	11
  3349  19ED  34B1               	retlw	177
  3350  19EE  3492               	retlw	146
  3351  19EF  3474               	retlw	116
  3352  19F0  3468               	retlw	104
  3353  19F1  3453               	retlw	83
  3354  19F2  34F1               	retlw	241
  3355  19F3  3496               	retlw	150
  3356  19F4  34C3               	retlw	195
  3357  19F5  349D               	retlw	157
  3358  19F6  345A               	retlw	90
  3359  19F7  3458               	retlw	88
  3360  19F8  34A7               	retlw	167
  3361  19F9  348B               	retlw	139
  3362  19FA  343E               	retlw	62
  3363  19FB  344E               	retlw	78
  3364  19FC  340C               	retlw	12
  3365  19FD  3445               	retlw	69
  3366  19FE  3495               	retlw	149
  3367  19FF  3480               	retlw	128
  3368  1A00                     __end_ofltc6804@crc15Table:	
  3369                           
  3370                           	psect	stringtext2
  3371  1A00                     __pstringtext2:	
  3372  1A00                     _crc15Table:	
  3373  1A00  3400               	retlw	0
  3374  1A01  3400               	retlw	0
  3375  1A02  3499               	retlw	153
  3376  1A03  34C5               	retlw	197
  3377  1A04  34AB               	retlw	171
  3378  1A05  34CE               	retlw	206
  3379  1A06  3432               	retlw	50
  3380  1A07  340B               	retlw	11
  3381  1A08  34CF               	retlw	207
  3382  1A09  34D8               	retlw	216
  3383  1A0A  3456               	retlw	86
  3384  1A0B  341D               	retlw	29
  3385  1A0C  3464               	retlw	100
  3386  1A0D  3416               	retlw	22
  3387  1A0E  34FD               	retlw	253
  3388  1A0F  34D3               	retlw	211
  3389  1A10  3407               	retlw	7
  3390  1A11  34F4               	retlw	244
  3391  1A12  349E               	retlw	158
  3392  1A13  3431               	retlw	49
  3393  1A14  34AC               	retlw	172
  3394  1A15  343A               	retlw	58
  3395  1A16  3435               	retlw	53
  3396  1A17  34FF               	retlw	255
  3397  1A18  34C8               	retlw	200
  3398  1A19  342C               	retlw	44
  3399  1A1A  3451               	retlw	81
  3400  1A1B  34E9               	retlw	233
  3401  1A1C  3463               	retlw	99
  3402  1A1D  34E2               	retlw	226
  3403  1A1E  34FA               	retlw	250
  3404  1A1F  3427               	retlw	39
  3405  1A20  3497               	retlw	151
  3406  1A21  34AD               	retlw	173
  3407  1A22  340E               	retlw	14
  3408  1A23  3468               	retlw	104
  3409  1A24  343C               	retlw	60
  3410  1A25  3463               	retlw	99
  3411  1A26  34A5               	retlw	165
  3412  1A27  34A6               	retlw	166
  3413  1A28  3458               	retlw	88
  3414  1A29  3475               	retlw	117
  3415  1A2A  34C1               	retlw	193
  3416  1A2B  34B0               	retlw	176
  3417  1A2C  34F3               	retlw	243
  3418  1A2D  34BB               	retlw	187
  3419  1A2E  346A               	retlw	106
  3420  1A2F  347E               	retlw	126
  3421  1A30  3490               	retlw	144
  3422  1A31  3459               	retlw	89
  3423  1A32  3409               	retlw	9
  3424  1A33  349C               	retlw	156
  3425  1A34  343B               	retlw	59
  3426  1A35  3497               	retlw	151
  3427  1A36  34A2               	retlw	162
  3428  1A37  3452               	retlw	82
  3429  1A38  345F               	retlw	95
  3430  1A39  3481               	retlw	129
  3431  1A3A  34C6               	retlw	198
  3432  1A3B  3444               	retlw	68
  3433  1A3C  34F4               	retlw	244
  3434  1A3D  344F               	retlw	79
  3435  1A3E  346D               	retlw	109
  3436  1A3F  348A               	retlw	138
  3437  1A40  342E               	retlw	46
  3438  1A41  345B               	retlw	91
  3439  1A42  34B7               	retlw	183
  3440  1A43  349E               	retlw	158
  3441  1A44  3485               	retlw	133
  3442  1A45  3495               	retlw	149
  3443  1A46  341C               	retlw	28
  3444  1A47  3450               	retlw	80
  3445  1A48  34E1               	retlw	225
  3446  1A49  3483               	retlw	131
  3447  1A4A  3478               	retlw	120
  3448  1A4B  3446               	retlw	70
  3449  1A4C  344A               	retlw	74
  3450  1A4D  344D               	retlw	77
  3451  1A4E  34D3               	retlw	211
  3452  1A4F  3488               	retlw	136
  3453  1A50  3429               	retlw	41
  3454  1A51  34AF               	retlw	175
  3455  1A52  34B0               	retlw	176
  3456  1A53  346A               	retlw	106
  3457  1A54  3482               	retlw	130
  3458  1A55  3461               	retlw	97
  3459  1A56  341B               	retlw	27
  3460  1A57  34A4               	retlw	164
  3461  1A58  34E6               	retlw	230
  3462  1A59  3477               	retlw	119
  3463  1A5A  347F               	retlw	127
  3464  1A5B  34B2               	retlw	178
  3465  1A5C  344D               	retlw	77
  3466  1A5D  34B9               	retlw	185
  3467  1A5E  34D4               	retlw	212
  3468  1A5F  347C               	retlw	124
  3469  1A60  34B9               	retlw	185
  3470  1A61  34F6               	retlw	246
  3471  1A62  3420               	retlw	32
  3472  1A63  3433               	retlw	51
  3473  1A64  3412               	retlw	18
  3474  1A65  3438               	retlw	56
  3475  1A66  348B               	retlw	139
  3476  1A67  34FD               	retlw	253
  3477  1A68  3476               	retlw	118
  3478  1A69  342E               	retlw	46
  3479  1A6A  34EF               	retlw	239
  3480  1A6B  34EB               	retlw	235
  3481  1A6C  34DD               	retlw	221
  3482  1A6D  34E0               	retlw	224
  3483  1A6E  3444               	retlw	68
  3484  1A6F  3425               	retlw	37
  3485  1A70  34BE               	retlw	190
  3486  1A71  3402               	retlw	2
  3487  1A72  3427               	retlw	39
  3488  1A73  34C7               	retlw	199
  3489  1A74  3415               	retlw	21
  3490  1A75  34CC               	retlw	204
  3491  1A76  348C               	retlw	140
  3492  1A77  3409               	retlw	9
  3493  1A78  3471               	retlw	113
  3494  1A79  34DA               	retlw	218
  3495  1A7A  34E8               	retlw	232
  3496  1A7B  341F               	retlw	31
  3497  1A7C  34DA               	retlw	218
  3498  1A7D  3414               	retlw	20
  3499  1A7E  3443               	retlw	67
  3500  1A7F  34D1               	retlw	209
  3501  1A80  34C5               	retlw	197
  3502  1A81  34F3               	retlw	243
  3503  1A82  345C               	retlw	92
  3504  1A83  3436               	retlw	54
  3505  1A84  346E               	retlw	110
  3506  1A85  343D               	retlw	61
  3507  1A86  34F7               	retlw	247
  3508  1A87  34F8               	retlw	248
  3509  1A88  340A               	retlw	10
  3510  1A89  342B               	retlw	43
  3511  1A8A  3493               	retlw	147
  3512  1A8B  34EE               	retlw	238
  3513  1A8C  34A1               	retlw	161
  3514  1A8D  34E5               	retlw	229
  3515  1A8E  3438               	retlw	56
  3516  1A8F  3420               	retlw	32
  3517  1A90  34C2               	retlw	194
  3518  1A91  3407               	retlw	7
  3519  1A92  345B               	retlw	91
  3520  1A93  34C2               	retlw	194
  3521  1A94  3469               	retlw	105
  3522  1A95  34C9               	retlw	201
  3523  1A96  34F0               	retlw	240
  3524  1A97  340C               	retlw	12
  3525  1A98  340D               	retlw	13
  3526  1A99  34DF               	retlw	223
  3527  1A9A  3494               	retlw	148
  3528  1A9B  341A               	retlw	26
  3529  1A9C  34A6               	retlw	166
  3530  1A9D  3411               	retlw	17
  3531  1A9E  343F               	retlw	63
  3532  1A9F  34D4               	retlw	212
  3533  1AA0  3452               	retlw	82
  3534  1AA1  345E               	retlw	94
  3535  1AA2  34CB               	retlw	203
  3536  1AA3  349B               	retlw	155
  3537  1AA4  34F9               	retlw	249
  3538  1AA5  3490               	retlw	144
  3539  1AA6  3460               	retlw	96
  3540  1AA7  3455               	retlw	85
  3541  1AA8  349D               	retlw	157
  3542  1AA9  3486               	retlw	134
  3543  1AAA  3404               	retlw	4
  3544  1AAB  3443               	retlw	67
  3545  1AAC  3436               	retlw	54
  3546  1AAD  3448               	retlw	72
  3547  1AAE  34AF               	retlw	175
  3548  1AAF  348D               	retlw	141
  3549  1AB0  3455               	retlw	85
  3550  1AB1  34AA               	retlw	170
  3551  1AB2  34CC               	retlw	204
  3552  1AB3  346F               	retlw	111
  3553  1AB4  34FE               	retlw	254
  3554  1AB5  3464               	retlw	100
  3555  1AB6  3467               	retlw	103
  3556  1AB7  34A1               	retlw	161
  3557  1AB8  349A               	retlw	154
  3558  1AB9  3472               	retlw	114
  3559  1ABA  3403               	retlw	3
  3560  1ABB  34B7               	retlw	183
  3561  1ABC  3431               	retlw	49
  3562  1ABD  34BC               	retlw	188
  3563  1ABE  34A8               	retlw	168
  3564  1ABF  3479               	retlw	121
  3565  1AC0  34EB               	retlw	235
  3566  1AC1  34A8               	retlw	168
  3567  1AC2  3472               	retlw	114
  3568  1AC3  346D               	retlw	109
  3569  1AC4  3440               	retlw	64
  3570  1AC5  3466               	retlw	102
  3571  1AC6  34D9               	retlw	217
  3572  1AC7  34A3               	retlw	163
  3573  1AC8  3424               	retlw	36
  3574  1AC9  3470               	retlw	112
  3575  1ACA  34BD               	retlw	189
  3576  1ACB  34B5               	retlw	181
  3577  1ACC  348F               	retlw	143
  3578  1ACD  34BE               	retlw	190
  3579  1ACE  3416               	retlw	22
  3580  1ACF  347B               	retlw	123
  3581  1AD0  34EC               	retlw	236
  3582  1AD1  345C               	retlw	92
  3583  1AD2  3475               	retlw	117
  3584  1AD3  3499               	retlw	153
  3585  1AD4  3447               	retlw	71
  3586  1AD5  3492               	retlw	146
  3587  1AD6  34DE               	retlw	222
  3588  1AD7  3457               	retlw	87
  3589  1AD8  3423               	retlw	35
  3590  1AD9  3484               	retlw	132
  3591  1ADA  34BA               	retlw	186
  3592  1ADB  3441               	retlw	65
  3593  1ADC  3488               	retlw	136
  3594  1ADD  344A               	retlw	74
  3595  1ADE  3411               	retlw	17
  3596  1ADF  348F               	retlw	143
  3597  1AE0  347C               	retlw	124
  3598  1AE1  3405               	retlw	5
  3599  1AE2  34E5               	retlw	229
  3600  1AE3  34C0               	retlw	192
  3601  1AE4  34D7               	retlw	215
  3602  1AE5  34CB               	retlw	203
  3603  1AE6  344E               	retlw	78
  3604  1AE7  340E               	retlw	14
  3605  1AE8  34B3               	retlw	179
  3606  1AE9  34DD               	retlw	221
  3607  1AEA  342A               	retlw	42
  3608  1AEB  3418               	retlw	24
  3609  1AEC  3418               	retlw	24
  3610  1AED  3413               	retlw	19
  3611  1AEE  3481               	retlw	129
  3612  1AEF  34D6               	retlw	214
  3613  1AF0  347B               	retlw	123
  3614  1AF1  34F1               	retlw	241
  3615  1AF2  34E2               	retlw	226
  3616  1AF3  3434               	retlw	52
  3617  1AF4  34D0               	retlw	208
  3618  1AF5  343F               	retlw	63
  3619  1AF6  3449               	retlw	73
  3620  1AF7  34FA               	retlw	250
  3621  1AF8  34B4               	retlw	180
  3622  1AF9  3429               	retlw	41
  3623  1AFA  342D               	retlw	45
  3624  1AFB  34EC               	retlw	236
  3625  1AFC  341F               	retlw	31
  3626  1AFD  34E7               	retlw	231
  3627  1AFE  3486               	retlw	134
  3628  1AFF  3422               	retlw	34
  3629  1B00  3413               	retlw	19
  3630  1B01  34A2               	retlw	162
  3631  1B02  348A               	retlw	138
  3632  1B03  3467               	retlw	103
  3633  1B04  34B8               	retlw	184
  3634  1B05  346C               	retlw	108
  3635  1B06  3421               	retlw	33
  3636  1B07  34A9               	retlw	169
  3637  1B08  34DC               	retlw	220
  3638  1B09  347A               	retlw	122
  3639  1B0A  3445               	retlw	69
  3640  1B0B  34BF               	retlw	191
  3641  1B0C  3477               	retlw	119
  3642  1B0D  34B4               	retlw	180
  3643  1B0E  34EE               	retlw	238
  3644  1B0F  3471               	retlw	113
  3645  1B10  3414               	retlw	20
  3646  1B11  3456               	retlw	86
  3647  1B12  348D               	retlw	141
  3648  1B13  3493               	retlw	147
  3649  1B14  34BF               	retlw	191
  3650  1B15  3498               	retlw	152
  3651  1B16  3426               	retlw	38
  3652  1B17  345D               	retlw	93
  3653  1B18  34DB               	retlw	219
  3654  1B19  348E               	retlw	142
  3655  1B1A  3442               	retlw	66
  3656  1B1B  344B               	retlw	75
  3657  1B1C  3470               	retlw	112
  3658  1B1D  3440               	retlw	64
  3659  1B1E  34E9               	retlw	233
  3660  1B1F  3485               	retlw	133
  3661  1B20  3484               	retlw	132
  3662  1B21  340F               	retlw	15
  3663  1B22  341D               	retlw	29
  3664  1B23  34CA               	retlw	202
  3665  1B24  342F               	retlw	47
  3666  1B25  34C1               	retlw	193
  3667  1B26  34B6               	retlw	182
  3668  1B27  3404               	retlw	4
  3669  1B28  344B               	retlw	75
  3670  1B29  34D7               	retlw	215
  3671  1B2A  34D2               	retlw	210
  3672  1B2B  3412               	retlw	18
  3673  1B2C  34E0               	retlw	224
  3674  1B2D  3419               	retlw	25
  3675  1B2E  3479               	retlw	121
  3676  1B2F  34DC               	retlw	220
  3677  1B30  3483               	retlw	131
  3678  1B31  34FB               	retlw	251
  3679  1B32  341A               	retlw	26
  3680  1B33  343E               	retlw	62
  3681  1B34  3428               	retlw	40
  3682  1B35  3435               	retlw	53
  3683  1B36  34B1               	retlw	177
  3684  1B37  34F0               	retlw	240
  3685  1B38  344C               	retlw	76
  3686  1B39  3423               	retlw	35
  3687  1B3A  34D5               	retlw	213
  3688  1B3B  34E6               	retlw	230
  3689  1B3C  34E7               	retlw	231
  3690  1B3D  34ED               	retlw	237
  3691  1B3E  347E               	retlw	126
  3692  1B3F  3428               	retlw	40
  3693  1B40  343D               	retlw	61
  3694  1B41  34F9               	retlw	249
  3695  1B42  34A4               	retlw	164
  3696  1B43  343C               	retlw	60
  3697  1B44  3496               	retlw	150
  3698  1B45  3437               	retlw	55
  3699  1B46  340F               	retlw	15
  3700  1B47  34F2               	retlw	242
  3701  1B48  34F2               	retlw	242
  3702  1B49  3421               	retlw	33
  3703  1B4A  346B               	retlw	107
  3704  1B4B  34E4               	retlw	228
  3705  1B4C  3459               	retlw	89
  3706  1B4D  34EF               	retlw	239
  3707  1B4E  34C0               	retlw	192
  3708  1B4F  342A               	retlw	42
  3709  1B50  343A               	retlw	58
  3710  1B51  340D               	retlw	13
  3711  1B52  34A3               	retlw	163
  3712  1B53  34C8               	retlw	200
  3713  1B54  3491               	retlw	145
  3714  1B55  34C3               	retlw	195
  3715  1B56  3408               	retlw	8
  3716  1B57  3406               	retlw	6
  3717  1B58  34F5               	retlw	245
  3718  1B59  34D5               	retlw	213
  3719  1B5A  346C               	retlw	108
  3720  1B5B  3410               	retlw	16
  3721  1B5C  345E               	retlw	94
  3722  1B5D  341B               	retlw	27
  3723  1B5E  34C7               	retlw	199
  3724  1B5F  34DE               	retlw	222
  3725  1B60  34AA               	retlw	170
  3726  1B61  3454               	retlw	84
  3727  1B62  3433               	retlw	51
  3728  1B63  3491               	retlw	145
  3729  1B64  3401               	retlw	1
  3730  1B65  349A               	retlw	154
  3731  1B66  3498               	retlw	152
  3732  1B67  345F               	retlw	95
  3733  1B68  3465               	retlw	101
  3734  1B69  348C               	retlw	140
  3735  1B6A  34FC               	retlw	252
  3736  1B6B  3449               	retlw	73
  3737  1B6C  34CE               	retlw	206
  3738  1B6D  3442               	retlw	66
  3739  1B6E  3457               	retlw	87
  3740  1B6F  3487               	retlw	135
  3741  1B70  34AD               	retlw	173
  3742  1B71  34A0               	retlw	160
  3743  1B72  3434               	retlw	52
  3744  1B73  3465               	retlw	101
  3745  1B74  3406               	retlw	6
  3746  1B75  346E               	retlw	110
  3747  1B76  349F               	retlw	159
  3748  1B77  34AB               	retlw	171
  3749  1B78  3462               	retlw	98
  3750  1B79  3478               	retlw	120
  3751  1B7A  34FB               	retlw	251
  3752  1B7B  34BD               	retlw	189
  3753  1B7C  34C9               	retlw	201
  3754  1B7D  34B6               	retlw	182
  3755  1B7E  3450               	retlw	80
  3756  1B7F  3473               	retlw	115
  3757  1B80  34D6               	retlw	214
  3758  1B81  3451               	retlw	81
  3759  1B82  344F               	retlw	79
  3760  1B83  3494               	retlw	148
  3761  1B84  347D               	retlw	125
  3762  1B85  349F               	retlw	159
  3763  1B86  34E4               	retlw	228
  3764  1B87  345A               	retlw	90
  3765  1B88  3419               	retlw	25
  3766  1B89  3489               	retlw	137
  3767  1B8A  3480               	retlw	128
  3768  1B8B  344C               	retlw	76
  3769  1B8C  34B2               	retlw	178
  3770  1B8D  3447               	retlw	71
  3771  1B8E  342B               	retlw	43
  3772  1B8F  3482               	retlw	130
  3773  1B90  34D1               	retlw	209
  3774  1B91  34A5               	retlw	165
  3775  1B92  3448               	retlw	72
  3776  1B93  3460               	retlw	96
  3777  1B94  347A               	retlw	122
  3778  1B95  346B               	retlw	107
  3779  1B96  34E3               	retlw	227
  3780  1B97  34AE               	retlw	174
  3781  1B98  341E               	retlw	30
  3782  1B99  347D               	retlw	125
  3783  1B9A  3487               	retlw	135
  3784  1B9B  34B8               	retlw	184
  3785  1B9C  34B5               	retlw	181
  3786  1B9D  34B3               	retlw	179
  3787  1B9E  342C               	retlw	44
  3788  1B9F  3476               	retlw	118
  3789  1BA0  3441               	retlw	65
  3790  1BA1  34FC               	retlw	252
  3791  1BA2  34D8               	retlw	216
  3792  1BA3  3439               	retlw	57
  3793  1BA4  34EA               	retlw	234
  3794  1BA5  3432               	retlw	50
  3795  1BA6  3473               	retlw	115
  3796  1BA7  34F7               	retlw	247
  3797  1BA8  348E               	retlw	142
  3798  1BA9  3424               	retlw	36
  3799  1BAA  3417               	retlw	23
  3800  1BAB  34E1               	retlw	225
  3801  1BAC  3425               	retlw	37
  3802  1BAD  34EA               	retlw	234
  3803  1BAE  34BC               	retlw	188
  3804  1BAF  342F               	retlw	47
  3805  1BB0  3446               	retlw	70
  3806  1BB1  3408               	retlw	8
  3807  1BB2  34DF               	retlw	223
  3808  1BB3  34CD               	retlw	205
  3809  1BB4  34ED               	retlw	237
  3810  1BB5  34C6               	retlw	198
  3811  1BB6  3474               	retlw	116
  3812  1BB7  3403               	retlw	3
  3813  1BB8  3489               	retlw	137
  3814  1BB9  34D0               	retlw	208
  3815  1BBA  3410               	retlw	16
  3816  1BBB  3415               	retlw	21
  3817  1BBC  3422               	retlw	34
  3818  1BBD  341E               	retlw	30
  3819  1BBE  34BB               	retlw	187
  3820  1BBF  34DB               	retlw	219
  3821  1BC0  34F8               	retlw	248
  3822  1BC1  340A               	retlw	10
  3823  1BC2  3461               	retlw	97
  3824  1BC3  34CF               	retlw	207
  3825  1BC4  3453               	retlw	83
  3826  1BC5  34C4               	retlw	196
  3827  1BC6  34CA               	retlw	202
  3828  1BC7  3401               	retlw	1
  3829  1BC8  3437               	retlw	55
  3830  1BC9  34D2               	retlw	210
  3831  1BCA  34AE               	retlw	174
  3832  1BCB  3417               	retlw	23
  3833  1BCC  349C               	retlw	156
  3834  1BCD  341C               	retlw	28
  3835  1BCE  3405               	retlw	5
  3836  1BCF  34D9               	retlw	217
  3837  1BD0  34FF               	retlw	255
  3838  1BD1  34FE               	retlw	254
  3839  1BD2  3466               	retlw	102
  3840  1BD3  343B               	retlw	59
  3841  1BD4  3454               	retlw	84
  3842  1BD5  3430               	retlw	48
  3843  1BD6  34CD               	retlw	205
  3844  1BD7  34F5               	retlw	245
  3845  1BD8  3430               	retlw	48
  3846  1BD9  3426               	retlw	38
  3847  1BDA  34A9               	retlw	169
  3848  1BDB  34E3               	retlw	227
  3849  1BDC  349B               	retlw	155
  3850  1BDD  34E8               	retlw	232
  3851  1BDE  3402               	retlw	2
  3852  1BDF  342D               	retlw	45
  3853  1BE0  346F               	retlw	111
  3854  1BE1  34A7               	retlw	167
  3855  1BE2  34F6               	retlw	246
  3856  1BE3  3462               	retlw	98
  3857  1BE4  34C4               	retlw	196
  3858  1BE5  3469               	retlw	105
  3859  1BE6  345D               	retlw	93
  3860  1BE7  34AC               	retlw	172
  3861  1BE8  34A0               	retlw	160
  3862  1BE9  347F               	retlw	127
  3863  1BEA  3439               	retlw	57
  3864  1BEB  34BA               	retlw	186
  3865  1BEC  340B               	retlw	11
  3866  1BED  34B1               	retlw	177
  3867  1BEE  3492               	retlw	146
  3868  1BEF  3474               	retlw	116
  3869  1BF0  3468               	retlw	104
  3870  1BF1  3453               	retlw	83
  3871  1BF2  34F1               	retlw	241
  3872  1BF3  3496               	retlw	150
  3873  1BF4  34C3               	retlw	195
  3874  1BF5  349D               	retlw	157
  3875  1BF6  345A               	retlw	90
  3876  1BF7  3458               	retlw	88
  3877  1BF8  34A7               	retlw	167
  3878  1BF9  348B               	retlw	139
  3879  1BFA  343E               	retlw	62
  3880  1BFB  344E               	retlw	78
  3881  1BFC  340C               	retlw	12
  3882  1BFD  3445               	retlw	69
  3883  1BFE  3495               	retlw	149
  3884  1BFF  3480               	retlw	128
  3885  1C00                     __end_of_crc15Table:	
  3886                           
  3887                           	psect	stringtext3
  3888  2838                     __pstringtext3:	
  3889  2838                     __powers_:	
  3890  2838  3400               	retlw	0
  3891  2839  3400               	retlw	0
  3892  283A  3480               	retlw	128
  3893  283B  343F               	retlw	63
  3894  283C  3400               	retlw	0
  3895  283D  3400               	retlw	0
  3896  283E  3420               	retlw	32
  3897  283F  3441               	retlw	65
  3898  2840  3400               	retlw	0
  3899  2841  3400               	retlw	0
  3900  2842  34C8               	retlw	200
  3901  2843  3442               	retlw	66
  3902  2844  3400               	retlw	0
  3903  2845  3400               	retlw	0
  3904  2846  347A               	retlw	122
  3905  2847  3444               	retlw	68
  3906  2848  3400               	retlw	0
  3907  2849  3440               	retlw	64
  3908  284A  341C               	retlw	28
  3909  284B  3446               	retlw	70
  3910  284C  3400               	retlw	0
  3911  284D  3450               	retlw	80
  3912  284E  34C3               	retlw	195
  3913  284F  3447               	retlw	71
  3914  2850  3400               	retlw	0
  3915  2851  3424               	retlw	36
  3916  2852  3474               	retlw	116
  3917  2853  3449               	retlw	73
  3918  2854  3480               	retlw	128
  3919  2855  3496               	retlw	150
  3920  2856  3418               	retlw	24
  3921  2857  344B               	retlw	75
  3922  2858  3420               	retlw	32
  3923  2859  34BC               	retlw	188
  3924  285A  34BE               	retlw	190
  3925  285B  344C               	retlw	76
  3926  285C  3428               	retlw	40
  3927  285D  346B               	retlw	107
  3928  285E  346E               	retlw	110
  3929  285F  344E               	retlw	78
  3930  2860  34F9               	retlw	249
  3931  2861  3402               	retlw	2
  3932  2862  3415               	retlw	21
  3933  2863  3450               	retlw	80
  3934  2864  34EC               	retlw	236
  3935  2865  3478               	retlw	120
  3936  2866  34AD               	retlw	173
  3937  2867  3460               	retlw	96
  3938  2868  34CA               	retlw	202
  3939  2869  34F2               	retlw	242
  3940  286A  3449               	retlw	73
  3941  286B  3471               	retlw	113
  3942  286C                     __end_of__powers_:	
  3943                           
  3944                           	psect	stringtext4
  3945  286C                     __pstringtext4:	
  3946  286C                     __npowers_:	
  3947  286C  3400               	retlw	0
  3948  286D  3400               	retlw	0
  3949  286E  3480               	retlw	128
  3950  286F  343F               	retlw	63
  3951  2870  34CD               	retlw	205
  3952  2871  34CC               	retlw	204
  3953  2872  34CC               	retlw	204
  3954  2873  343D               	retlw	61
  3955  2874  340A               	retlw	10
  3956  2875  34D7               	retlw	215
  3957  2876  3423               	retlw	35
  3958  2877  343C               	retlw	60
  3959  2878  346F               	retlw	111
  3960  2879  3412               	retlw	18
  3961  287A  3483               	retlw	131
  3962  287B  343A               	retlw	58
  3963  287C  3417               	retlw	23
  3964  287D  34B7               	retlw	183
  3965  287E  34D1               	retlw	209
  3966  287F  3438               	retlw	56
  3967  2880  34AC               	retlw	172
  3968  2881  34C5               	retlw	197
  3969  2882  3427               	retlw	39
  3970  2883  3437               	retlw	55
  3971  2884  34BD               	retlw	189
  3972  2885  3437               	retlw	55
  3973  2886  3486               	retlw	134
  3974  2887  3435               	retlw	53
  3975  2888  3495               	retlw	149
  3976  2889  34BF               	retlw	191
  3977  288A  34D6               	retlw	214
  3978  288B  3433               	retlw	51
  3979  288C  3477               	retlw	119
  3980  288D  34CC               	retlw	204
  3981  288E  342B               	retlw	43
  3982  288F  3432               	retlw	50
  3983  2890  345F               	retlw	95
  3984  2891  3470               	retlw	112
  3985  2892  3489               	retlw	137
  3986  2893  3430               	retlw	48
  3987  2894  34FF               	retlw	255
  3988  2895  34E6               	retlw	230
  3989  2896  34DB               	retlw	219
  3990  2897  342E               	retlw	46
  3991  2898  3408               	retlw	8
  3992  2899  34E5               	retlw	229
  3993  289A  343C               	retlw	60
  3994  289B  341E               	retlw	30
  3995  289C  3460               	retlw	96
  3996  289D  3442               	retlw	66
  3997  289E  34A2               	retlw	162
  3998  289F  340D               	retlw	13
  3999  28A0                     __end_of__npowers_:	
  4000                           
  4001                           	psect	stringtext5
  4002  28A0                     __pstringtext5:	
  4003  28A0                     _dpowers:	
  4004  28A0  3401               	retlw	1
  4005  28A1  3400               	retlw	0
  4006  28A2  3400               	retlw	0
  4007  28A3  3400               	retlw	0
  4008  28A4  340A               	retlw	10
  4009  28A5  3400               	retlw	0
  4010  28A6  3400               	retlw	0
  4011  28A7  3400               	retlw	0
  4012  28A8  3464               	retlw	100
  4013  28A9  3400               	retlw	0
  4014  28AA  3400               	retlw	0
  4015  28AB  3400               	retlw	0
  4016  28AC  34E8               	retlw	232
  4017  28AD  3403               	retlw	3
  4018  28AE  3400               	retlw	0
  4019  28AF  3400               	retlw	0
  4020  28B0  3410               	retlw	16
  4021  28B1  3427               	retlw	39
  4022  28B2  3400               	retlw	0
  4023  28B3  3400               	retlw	0
  4024  28B4  34A0               	retlw	160
  4025  28B5  3486               	retlw	134
  4026  28B6  3401               	retlw	1
  4027  28B7  3400               	retlw	0
  4028  28B8  3440               	retlw	64
  4029  28B9  3442               	retlw	66
  4030  28BA  340F               	retlw	15
  4031  28BB  3400               	retlw	0
  4032  28BC  3480               	retlw	128
  4033  28BD  3496               	retlw	150
  4034  28BE  3498               	retlw	152
  4035  28BF  3400               	retlw	0
  4036  28C0  3400               	retlw	0
  4037  28C1  34E1               	retlw	225
  4038  28C2  34F5               	retlw	245
  4039  28C3  3405               	retlw	5
  4040  28C4  3400               	retlw	0
  4041  28C5  34CA               	retlw	202
  4042  28C6  349A               	retlw	154
  4043  28C7  343B               	retlw	59
  4044  28C8                     __end_of_dpowers:	
  4045                           
  4046                           	psect	stringtext6
  4047  3045                     __pstringtext6:	
  4048  3045                     _t0:	
  4049  3045  3433               	retlw	51
  4050  3046  3413               	retlw	19
  4051  3047  3495               	retlw	149
  4052  3048  3443               	retlw	67
  4053  3049                     __end_of_t0:	
  4054                           
  4055                           	psect	stringtext7
  4056  3049                     __pstringtext7:	
  4057  3049                     _Beta:	
  4058  3049  3489               	retlw	137
  4059  304A  340F               	retlw	15
  4060  304B                     __end_of_Beta:	
  4061                           
  4062                           	psect	stringtext8
  4063  304B                     __pstringtext8:	
  4064  304B                     LTC6804_rdcfg@BYTES_IN_REG:	
  4065  304B  3408               	retlw	8
  4066  304C                     __end_ofLTC6804_rdcfg@BYTES_IN_REG:	
  4067                           
  4068                           	psect	stringtext9
  4069  304C                     __pstringtext9:	
  4070  304C                     LTC6804_wrcfg@BYTES_IN_REG:	
  4071  304C  3406               	retlw	6
  4072  304D                     __end_ofLTC6804_wrcfg@BYTES_IN_REG:	
  4073                           
  4074                           	psect	stringtext10
  4075  304D                     __pstringtext10:	
  4076  304D                     LTC6804_rdaux_reg@REG_LEN:	
  4077  304D  3408               	retlw	8
  4078  304E                     __end_ofLTC6804_rdaux_reg@REG_LEN:	
  4079                           
  4080                           	psect	stringtext11
  4081  304E                     __pstringtext11:	
  4082  304E                     LTC6804_rdaux@GPIO_IN_REG:	
  4083  304E  3403               	retlw	3
  4084  304F                     __end_ofLTC6804_rdaux@GPIO_IN_REG:	
  4085                           
  4086                           	psect	stringtext12
  4087  304F                     __pstringtext12:	
  4088  304F                     LTC6804_rdaux@BYT_IN_REG:	
  4089  304F  3406               	retlw	6
  4090  3050                     __end_ofLTC6804_rdaux@BYT_IN_REG:	
  4091                           
  4092                           	psect	stringtext13
  4093  3050                     __pstringtext13:	
  4094  3050                     LTC6804_rdaux@NUM_RX_BYT:	
  4095  3050  3408               	retlw	8
  4096  3051                     __end_ofLTC6804_rdaux@NUM_RX_BYT:	
  4097                           
  4098                           	psect	stringtext14
  4099  3051                     __pstringtext14:	
  4100  3051                     LTC6804_rdcv_reg@REG_LEN:	
  4101  3051  3408               	retlw	8
  4102  3052                     __end_ofLTC6804_rdcv_reg@REG_LEN:	
  4103                           
  4104                           	psect	stringtext15
  4105  3052                     __pstringtext15:	
  4106  3052                     LTC6804_rdcv@CELL_IN_REG:	
  4107  3052  3403               	retlw	3
  4108  3053                     __end_ofLTC6804_rdcv@CELL_IN_REG:	
  4109                           
  4110                           	psect	stringtext16
  4111  3053                     __pstringtext16:	
  4112  3053                     LTC6804_rdcv@BYT_IN_REG:	
  4113  3053  3406               	retlw	6
  4114  3054                     __end_ofLTC6804_rdcv@BYT_IN_REG:	
  4115                           
  4116                           	psect	stringtext17
  4117  3054                     __pstringtext17:	
  4118  3054                     LTC6804_rdcv@NUM_RX_BYT:	
  4119  3054  3408               	retlw	8
  4120  3055                     __end_ofLTC6804_rdcv@NUM_RX_BYT:	
  4121                           
  4122                           	psect	stringtext18
  4123  2800                     __pstringtext18:	
  4124  2800                     log@coeff:	
  4125  2800  3400               	retlw	0
  4126  2801  3400               	retlw	0
  4127  2802  3400               	retlw	0
  4128  2803  3400               	retlw	0
  4129  2804  34C4               	retlw	196
  4130  2805  34FF               	retlw	255
  4131  2806  347F               	retlw	127
  4132  2807  343F               	retlw	63
  4133  2808  3480               	retlw	128
  4134  2809  34EF               	retlw	239
  4135  280A  34FF               	retlw	255
  4136  280B  34BE               	retlw	190
  4137  280C  3490               	retlw	144
  4138  280D  34E1               	retlw	225
  4139  280E  34A9               	retlw	169
  4140  280F  343E               	retlw	62
  4141  2810  34EC               	retlw	236
  4142  2811  3482               	retlw	130
  4143  2812  3476               	retlw	118
  4144  2813  34BE               	retlw	190
  4145  2814  3482               	retlw	130
  4146  2815  34AD               	retlw	173
  4147  2816  342B               	retlw	43
  4148  2817  343E               	retlw	62
  4149  2818  340E               	retlw	14
  4150  2819  343C               	retlw	60
  4151  281A  34C3               	retlw	195
  4152  281B  34BD               	retlw	189
  4153  281C  3487               	retlw	135
  4154  281D  34D1               	retlw	209
  4155  281E  3413               	retlw	19
  4156  281F  343D               	retlw	61
  4157  2820  3441               	retlw	65
  4158  2821  3478               	retlw	120
  4159  2822  34D3               	retlw	211
  4160  2823  34BB               	retlw	187
  4161  2824                     __end_oflog@coeff:	
  4162  0012                     _PIR2bits	set	18
  4163  001C                     _T2CON	set	28
  4164  001B                     _PR2	set	27
  4165  000F                     _PORTDbits	set	15
  4166  0011                     _PIR1bits	set	17
  4167  000B                     _INTCONbits	set	11
  4168  000C                     _PORTAbits	set	12
  4169  0092                     _PIE2bits	set	146
  4170  008E                     _TRISCbits	set	142
  4171  0095                     _OPTION_REG	set	149
  4172  009F                     _ADCON2	set	159
  4173  009E                     _ADCON1	set	158
  4174  009D                     _ADCON0	set	157
  4175  008D                     _TRISBbits	set	141
  4176  009B                     _ADRESL	set	155
  4177  009C                     _ADRESH	set	156
  4178  009D                     _ADCON0bits	set	157
  4179  008C                     _TRISAbits	set	140
  4180  008F                     _TRISDbits	set	143
  4181  0091                     _PIE1bits	set	145
  4182  011D                     _APFCON1bits	set	285
  4183  010D                     _LATBbits	set	269
  4184  010F                     _LATDbits	set	271
  4185  019B                     _SPBRGL	set	411
  4186  019C                     _SPBRGH	set	412
  4187  019D                     _RCSTAbits	set	413
  4188  019E                     _TXSTAbits	set	414
  4189  018F                     _ANSELD	set	399
  4190  018D                     _ANSELB	set	397
  4191  018C                     _ANSELA	set	396
  4192  019A                     _TXREG	set	410
  4193  0211                     _SSP1BUF	set	529
  4194  0215                     _SSP1CON1bits	set	533
  4195  0215                     _SSP1CON1	set	533
  4196  0214                     _SSP1STATbits	set	532
  4197  0217                     _SSP1CON3bits	set	535
  4198  0214                     _SSPSTAT	set	532
  4199  0215                     _SSPCON1	set	533
  4200  0212                     _SSPADD	set	530
  4201  0214                     _SSPSTATbits	set	532
  4202  0216                     _SSPCON2bits	set	534
  4203  0211                     _SSPBUF	set	529
  4204  029A                     _CCP2CON	set	666
  4205  2824                     STR_4:	
  4206  2824  3448               	retlw	72	;'H'
  4207  2825  3469               	retlw	105	;'i'
  4208  2826  3467               	retlw	103	;'g'
  4209  2827  3468               	retlw	104	;'h'
  4210  2828  3465               	retlw	101	;'e'
  4211  2829  3473               	retlw	115	;'s'
  4212  282A  3474               	retlw	116	;'t'
  4213  282B  3420               	retlw	32	;' '
  4214  282C  3454               	retlw	84	;'T'
  4215  282D  3465               	retlw	101	;'e'
  4216  282E  346D               	retlw	109	;'m'
  4217  282F  3470               	retlw	112	;'p'
  4218  2830  343A               	retlw	58	;':'
  4219  2831  3420               	retlw	32	;' '
  4220  2832  3425               	retlw	37	;'%'
  4221  2833  3469               	retlw	105	;'i'
  4222  2834  3443               	retlw	67	;'C'
  4223  2835  340A               	retlw	10
  4224  2836  340D               	retlw	13
  4225  2837  3400               	retlw	0
  4226                           
  4227                           	psect	stringtext19
  4228  3000                     __pstringtext19:	
  4229  3000                     STR_2:	
  4230  3000  3463               	retlw	99	;'c'
  4231  3001  3475               	retlw	117	;'u'
  4232  3002  3472               	retlw	114	;'r'
  4233  3003  3472               	retlw	114	;'r'
  4234  3004  3465               	retlw	101	;'e'
  4235  3005  346E               	retlw	110	;'n'
  4236  3006  3474               	retlw	116	;'t'
  4237  3007  3420               	retlw	32	;' '
  4238  3008  343D               	retlw	61	;'='
  4239  3009  3420               	retlw	32	;' '
  4240  300A  3425               	retlw	37	;'%'
  4241  300B  3430               	retlw	48	;'0'
  4242  300C  342E               	retlw	46	;'.'
  4243  300D  3432               	retlw	50	;'2'
  4244  300E  3466               	retlw	102	;'f'
  4245  300F  3441               	retlw	65	;'A'
  4246  3010  340A               	retlw	10
  4247  3011  340D               	retlw	13
  4248  3012  3400               	retlw	0
  4249                           
  4250                           	psect	stringtext20
  4251  3013                     __pstringtext20:	
  4252  3013                     STR_3:	
  4253  3013  3454               	retlw	84	;'T'
  4254  3014  3465               	retlw	101	;'e'
  4255  3015  346D               	retlw	109	;'m'
  4256  3016  3470               	retlw	112	;'p'
  4257  3017  3425               	retlw	37	;'%'
  4258  3018  3469               	retlw	105	;'i'
  4259  3019  3420               	retlw	32	;' '
  4260  301A  343D               	retlw	61	;'='
  4261  301B  3420               	retlw	32	;' '
  4262  301C  3425               	retlw	37	;'%'
  4263  301D  3469               	retlw	105	;'i'
  4264  301E  3443               	retlw	67	;'C'
  4265  301F  340A               	retlw	10
  4266  3020  340D               	retlw	13
  4267  3021  3400               	retlw	0
  4268                           
  4269                           	psect	stringtext21
  4270  3022                     __pstringtext21:	
  4271  3022                     STR_1:	
  4272  3022  3456               	retlw	86	;'V'
  4273  3023  3425               	retlw	37	;'%'
  4274  3024  3469               	retlw	105	;'i'
  4275  3025  3420               	retlw	32	;' '
  4276  3026  343D               	retlw	61	;'='
  4277  3027  3420               	retlw	32	;' '
  4278  3028  3425               	retlw	37	;'%'
  4279  3029  3430               	retlw	48	;'0'
  4280  302A  342E               	retlw	46	;'.'
  4281  302B  3432               	retlw	50	;'2'
  4282  302C  3466               	retlw	102	;'f'
  4283  302D  3456               	retlw	86	;'V'
  4284  302E  340A               	retlw	10
  4285  302F  340D               	retlw	13
  4286  3030  3400               	retlw	0
  4287                           
  4288                           	psect	stringtext22
  4289  3031                     __pstringtext22:	
  4290  3031                     STR_6:	
  4291  3031  341B               	retlw	27
  4292  3032  345B               	retlw	91	;'['
  4293  3033  3432               	retlw	50	;'2'
  4294  3034  344B               	retlw	75	;'K'
  4295  3035  3420               	retlw	32	;' '
  4296  3036  341B               	retlw	27
  4297  3037  345B               	retlw	91	;'['
  4298  3038  3441               	retlw	65	;'A'
  4299  3039  3420               	retlw	32	;' '
  4300  303A  340D               	retlw	13
  4301  303B  3400               	retlw	0
  4302                           
  4303                           	psect	stringtext23
  4304  303C                     __pstringtext23:	
  4305  303C                     STR_5:	
  4306  303C  341B               	retlw	27
  4307  303D  345B               	retlw	91	;'['
  4308  303E  3432               	retlw	50	;'2'
  4309  303F  344B               	retlw	75	;'K'
  4310  3040  3420               	retlw	32	;' '
  4311  3041  341B               	retlw	27
  4312  3042  345B               	retlw	91	;'['
  4313  3043  3441               	retlw	65	;'A'
  4314  3044  3400               	retlw	0
  4315                           
  4316                           	psect	stringtext24
  4317  0000                     __pstringtext24:	
  4318                           
  4319                           ; #config settings
  4320  0000                     
  4321                           	psect	cinit
  4322  0063                     start_initialization:	
  4323  0063                     __initialization:		;BIGRAM
  4324                           
  4325                           ; Initialize objects allocated to BANK3
  4326  0063  3079               	movlw	low __pidataBANK3
  4327  0064  0084               	movwf	4
  4328  0065  30AF               	movlw	(high __pidataBANK3)| (0+128)
  4329  0066  0085               	movwf	5
  4330  0067  0023               	movlb	3	; select bank3
  4331  0068  0012               	moviw fsr0++
  4332  0069  00E6               	movwf	__pdataBANK3& (0+127)
  4333  006A  0012               	moviw fsr0++
  4334  006B  00E7               	movwf	(__pdataBANK3+1)& (0+127)
  4335  006C  0012               	moviw fsr0++
  4336  006D  00E8               	movwf	(__pdataBANK3+2)& (0+127)
  4337  006E  0012               	moviw fsr0++
  4338  006F  00E9               	movwf	(__pdataBANK3+3)& (0+127)
  4339  0070  0012               	moviw fsr0++
  4340  0071  00EA               	movwf	(__pdataBANK3+4)& (0+127)
  4341  0072  0012               	moviw fsr0++
  4342  0073  00EB               	movwf	(__pdataBANK3+5)& (0+127)
  4343  0074  0012               	moviw fsr0++
  4344  0075  00EC               	movwf	(__pdataBANK3+6)& (0+127)
  4345                           
  4346                           ; Clear objects allocated to BIGRAM
  4347  0076  3060               	movlw	low (0+9824)
  4348  0077  0084               	movwf	4
  4349  0078  3026               	movlw	high (0+9824)
  4350  0079  0085               	movwf	5
  4351  007A  3090               	movlw	144
  4352  007B  00FE               	movwf	btemp
  4353  007C  3001               	movlw	1
  4354  007D  00FF               	movwf	btemp+1
  4355  007E  31AF  27B5  3180   	fcall	clear_ram0
  4356                           
  4357                           ; Clear objects allocated to COMMON
  4358  0081  01FA               	clrf	__pbssCOMMON& (0+127)
  4359  0082  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
  4360                           
  4361                           ; Clear objects allocated to BANK2
  4362  0083  305E               	movlw	low __pbssBANK2
  4363  0084  0084               	movwf	4
  4364  0085  3001               	movlw	high __pbssBANK2
  4365  0086  0085               	movwf	5
  4366  0087  300A               	movlw	10
  4367  0088  00FE               	movwf	btemp
  4368  0089  3000               	movlw	0
  4369  008A  00FF               	movwf	btemp+1
  4370  008B  31AF  27B5  3180   	fcall	clear_ram0
  4371                           
  4372                           ; Clear objects allocated to BANK3
  4373  008E  30A0               	movlw	low __pbssBANK3
  4374  008F  0084               	movwf	4
  4375  0090  3001               	movlw	high __pbssBANK3
  4376  0091  0085               	movwf	5
  4377  0092  3046               	movlw	70
  4378  0093  00FE               	movwf	btemp
  4379  0094  3000               	movlw	0
  4380  0095  00FF               	movwf	btemp+1
  4381  0096  31AF  27B5  3180   	fcall	clear_ram0
  4382                           
  4383                           ; Clear objects allocated to BANK4
  4384  0099  3020               	movlw	low __pbssBANK4
  4385  009A  0084               	movwf	4
  4386  009B  3002               	movlw	high __pbssBANK4
  4387  009C  0085               	movwf	5
  4388  009D  304A               	movlw	74
  4389  009E  00FE               	movwf	btemp
  4390  009F  3000               	movlw	0
  4391  00A0  00FF               	movwf	btemp+1
  4392  00A1  31AF  27B5         	fcall	clear_ram0
  4393  00A3                     end_of_initialization:	
  4394                           ;End of C runtime variable initialization code
  4395                           
  4396  00A3                     __end_of__initialization:	
  4397  00A3  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4398  00A4  0020               	movlb	0
  4399  00A5  31A4  2CCF         	ljmp	_main	;jump to C main() function
  4400                           
  4401                           	psect	bssCOMMON
  4402  007A                     __pbssCOMMON:	
  4403  007A                     _z:	
  4404  007A                     	ds	2
  4405                           
  4406                           	psect	bssBANK2
  4407  015E                     __pbssBANK2:	
  4408  015E                     _current:	
  4409  015E                     	ds	4
  4410  0162                     _n:	
  4411  0162                     	ds	2
  4412  0164                     _ADAX:	
  4413  0164                     	ds	2
  4414  0166                     _ADCV:	
  4415  0166                     	ds	2
  4416                           
  4417                           	psect	bssBANK3
  4418  01A0                     __pbssBANK3:	
  4419  01A0                     _temp:	
  4420  01A0                     	ds	4
  4421  01A4                     _errno:	
  4422  01A4                     	ds	2
  4423  01A6                     _SOC:	
  4424  01A6                     	ds	2
  4425  01A8                     _highestTemp:	
  4426  01A8                     	ds	2
  4427  01AA                     _currentBool:	
  4428  01AA                     	ds	2
  4429  01AC                     _uartBool:	
  4430  01AC                     	ds	2
  4431  01AE                     _k:	
  4432  01AE                     	ds	2
  4433  01B0                     _voltages:	
  4434  01B0                     	ds	48
  4435  01E0                     _temps:	
  4436  01E0                     	ds	6
  4437                           
  4438                           	psect	dataBANK3
  4439  01E6                     __pdataBANK3:	
  4440  01E6                     _tempChannels:	
  4441  01E6                     	ds	5
  4442  01EB                     SSD1306_Test@F7478:	
  4443  01EB                     	ds	2
  4444                           
  4445                           	psect	bssBANK4
  4446  0220                     __pbssBANK4:	
  4447  0220                     measureVoltages@F7570:	
  4448  0220                     	ds	24
  4449  0238                     _str:	
  4450  0238                     	ds	50
  4451                           
  4452                           	psect	clrtext
  4453  2FB5                     clear_ram0:	
  4454                           ;	Called with FSR0 containing the base address, and
  4455                           ;	btemp/btemp+1 has the size to clear
  4456                           
  4457  2FB5  0064               	clrwdt	;clear the watchdog before getting into this loop
  4458  2FB6                     clrloop0:	
  4459  2FB6  0180               	clrf	0	;clear RAM location pointed to by FSR
  4460  2FB7  3101               	addfsr 0,1
  4461  2FB8  3001               	movlw	1
  4462  2FB9  02FE               	subwf	126,f
  4463  2FBA  3000               	movlw	0
  4464  2FBB  3BFF               	subwfb	127,f
  4465  2FBC  087F               	movf	127,w
  4466  2FBD  047E               	iorwf	126,w
  4467  2FBE  1903               	btfsc	3,2
  4468  2FBF  3400               	retlw	0	;all done for this memory range, return
  4469  2FC0  2FB6               	goto	clrloop0	;have we reached the end yet?
  4470                           
  4471                           	psect	cstackBANK5
  4472  02A0                     __pcstackBANK5:	
  4473  02A0                     ?_writeValuesToUart:	
  4474  02A0                     writeValuesToUart@voltageArrLength:	
  4475                           ; 1 bytes @ 0x0
  4476                           
  4477                           
  4478                           ; 2 bytes @ 0x0
  4479  02A0                     	ds	2
  4480  02A2                     writeValuesToUart@temperatureArr:	
  4481                           
  4482                           ; 1 bytes @ 0x2
  4483  02A2                     	ds	1
  4484  02A3                     writeValuesToUart@temperatureArrLength:	
  4485                           
  4486                           ; 2 bytes @ 0x3
  4487  02A3                     	ds	2
  4488  02A5                     writeValuesToUart@temperatureHigh:	
  4489                           
  4490                           ; 2 bytes @ 0x5
  4491  02A5                     	ds	2
  4492  02A7                     writeValuesToUart@current:	
  4493                           
  4494                           ; 4 bytes @ 0x7
  4495  02A7                     	ds	4
  4496                           
  4497                           	psect	cstackBANK2
  4498  0120                     __pcstackBANK2:	
  4499  0120                     ?___fltol:	
  4500  0120                     ___fltol@f1:	
  4501                           ; 4 bytes @ 0x0
  4502                           
  4503  0120                     _calculateCurrent$2062:	
  4504                           ; 4 bytes @ 0x0
  4505                           
  4506  0120                     measureVoltages@ltcData:	
  4507                           ; 4 bytes @ 0x0
  4508                           
  4509                           
  4510                           ; 24 bytes @ 0x0
  4511  0120                     	ds	4
  4512  0124                     ??___fltol:	
  4513  0124                     calculateCurrent@curr:	
  4514                           ; 1 bytes @ 0x4
  4515                           
  4516                           
  4517                           ; 4 bytes @ 0x4
  4518  0124                     	ds	4
  4519  0128                     ?_getCurrent:	
  4520                           
  4521                           ; 4 bytes @ 0x8
  4522  0128                     	ds	1
  4523  0129                     ___fltol@sign1:	
  4524                           
  4525                           ; 1 bytes @ 0x9
  4526  0129                     	ds	1
  4527  012A                     ___fltol@exp1:	
  4528                           
  4529                           ; 1 bytes @ 0xA
  4530  012A                     	ds	1
  4531  012B                     ?_sprintf:	
  4532  012B                     ?_calculateTemp:	
  4533                           ; 2 bytes @ 0xB
  4534                           
  4535  012B                     calculateTemp@adcValue:	
  4536                           ; 2 bytes @ 0xB
  4537                           
  4538  012B                     sprintf@f:	
  4539                           ; 2 bytes @ 0xB
  4540                           
  4541                           
  4542                           ; 2 bytes @ 0xB
  4543  012B                     	ds	1
  4544  012C                     getCurrent@currentValue:	
  4545                           
  4546                           ; 4 bytes @ 0xC
  4547  012C                     	ds	1
  4548  012D                     ??_calculateTemp:	
  4549                           
  4550                           ; 1 bytes @ 0xD
  4551  012D                     	ds	6
  4552  0133                     ??_sprintf:	
  4553                           
  4554                           ; 1 bytes @ 0x13
  4555  0133                     	ds	5
  4556  0138                     measureVoltages@pecError:	
  4557                           
  4558                           ; 1 bytes @ 0x18
  4559  0138                     	ds	1
  4560  0139                     measureVoltages@measurements:	
  4561  0139                     calculateTemp@r:	
  4562                           ; 1 bytes @ 0x19
  4563                           
  4564  0139                     _sprintf$2066:	
  4565                           ; 4 bytes @ 0x19
  4566                           
  4567                           
  4568                           ; 4 bytes @ 0x19
  4569  0139                     	ds	1
  4570  013A                     measureVoltages@i:	
  4571                           
  4572                           ; 2 bytes @ 0x1A
  4573  013A                     	ds	3
  4574  013D                     sprintf@ap:	
  4575  013D                     _calculateTemp$2060:	
  4576                           ; 1 bytes @ 0x1D
  4577                           
  4578                           
  4579                           ; 4 bytes @ 0x1D
  4580  013D                     	ds	1
  4581  013E                     sprintf@tmpval:	
  4582                           
  4583                           ; 4 bytes @ 0x1E
  4584  013E                     	ds	3
  4585  0141                     _calculateTemp$2061:	
  4586                           
  4587                           ; 4 bytes @ 0x21
  4588  0141                     	ds	1
  4589  0142                     sprintf@val:	
  4590                           
  4591                           ; 4 bytes @ 0x22
  4592  0142                     	ds	3
  4593  0145                     calculateTemp@voltage:	
  4594                           
  4595                           ; 4 bytes @ 0x25
  4596  0145                     	ds	1
  4597  0146                     sprintf@exp:	
  4598                           
  4599                           ; 2 bytes @ 0x26
  4600  0146                     	ds	2
  4601  0148                     sprintf@flag:	
  4602                           
  4603                           ; 2 bytes @ 0x28
  4604  0148                     	ds	1
  4605  0149                     ?_getTemps:	
  4606  0149                     getTemps@numTemps:	
  4607                           ; 2 bytes @ 0x29
  4608                           
  4609                           
  4610                           ; 2 bytes @ 0x29
  4611  0149                     	ds	1
  4612  014A                     sprintf@width:	
  4613                           
  4614                           ; 2 bytes @ 0x2A
  4615  014A                     	ds	1
  4616  014B                     ??_getTemps:	
  4617                           
  4618                           ; 1 bytes @ 0x2B
  4619  014B                     	ds	1
  4620  014C                     sprintf@fval:	
  4621                           
  4622                           ; 4 bytes @ 0x2C
  4623  014C                     	ds	3
  4624  014F                     getTemps@highestTemp:	
  4625                           
  4626                           ; 2 bytes @ 0x2F
  4627  014F                     	ds	1
  4628  0150                     sprintf@prec:	
  4629                           
  4630                           ; 2 bytes @ 0x30
  4631  0150                     	ds	1
  4632  0151                     getTemps@temperatures:	
  4633                           
  4634                           ; 1 bytes @ 0x31
  4635  0151                     	ds	1
  4636  0152                     sprintf@sp:	
  4637  0152                     getTemps@inc:	
  4638                           ; 1 bytes @ 0x32
  4639                           
  4640                           
  4641                           ; 2 bytes @ 0x32
  4642  0152                     	ds	1
  4643  0153                     sprintf@c:	
  4644                           
  4645                           ; 1 bytes @ 0x33
  4646  0153                     	ds	1
  4647  0154                     ?_clearScreen:	
  4648  0154                     ?_writeVoltages:	
  4649                           ; 1 bytes @ 0x34
  4650                           
  4651  0154                     ?_writeTemps:	
  4652                           ; 1 bytes @ 0x34
  4653                           
  4654  0154                     ?_writeCurrent:	
  4655                           ; 1 bytes @ 0x34
  4656                           
  4657  0154                     ?_startUp:	
  4658                           ; 1 bytes @ 0x34
  4659                           
  4660  0154                     writeVoltages@length:	
  4661                           ; 2 bytes @ 0x34
  4662                           
  4663  0154                     writeTemps@highestTemp:	
  4664                           ; 2 bytes @ 0x34
  4665                           
  4666  0154                     clearScreen@numLines:	
  4667                           ; 2 bytes @ 0x34
  4668                           
  4669  0154                     writeCurrent@current:	
  4670                           ; 2 bytes @ 0x34
  4671                           
  4672                           
  4673                           ; 4 bytes @ 0x34
  4674  0154                     	ds	2
  4675  0156                     ??_startUp:	
  4676  0156                     ??_clearScreen:	
  4677                           ; 1 bytes @ 0x36
  4678                           
  4679  0156                     ??_writeVoltages:	
  4680                           ; 1 bytes @ 0x36
  4681                           
  4682  0156                     writeTemps@numTemps:	
  4683                           ; 1 bytes @ 0x36
  4684                           
  4685                           
  4686                           ; 2 bytes @ 0x36
  4687  0156                     	ds	2
  4688  0158                     ??_writeTemps:	
  4689  0158                     writeVoltages@volts:	
  4690                           ; 1 bytes @ 0x38
  4691                           
  4692                           
  4693                           ; 1 bytes @ 0x38
  4694  0158                     	ds	1
  4695  0159                     writeTemps@temps:	
  4696  0159                     startUp@i:	
  4697                           ; 1 bytes @ 0x39
  4698                           
  4699  0159                     writeVoltages@k:	
  4700                           ; 2 bytes @ 0x39
  4701                           
  4702  0159                     clearScreen@j:	
  4703                           ; 2 bytes @ 0x39
  4704                           
  4705                           
  4706                           ; 2 bytes @ 0x39
  4707  0159                     	ds	1
  4708  015A                     writeTemps@k:	
  4709                           
  4710                           ; 2 bytes @ 0x3A
  4711  015A                     	ds	1
  4712  015B                     startUp@i_323:	
  4713                           
  4714                           ; 2 bytes @ 0x3B
  4715  015B                     	ds	1
  4716  015C                     writeValuesToUart@voltageArr:	
  4717                           
  4718                           ; 1 bytes @ 0x3C
  4719  015C                     	ds	1
  4720  015D                     ??_main:	
  4721                           
  4722                           ; 1 bytes @ 0x3D
  4723  015D                     	ds	1
  4724                           
  4725                           	psect	cstackBANK1
  4726  00A0                     __pcstackBANK1:	
  4727  00A0                     _fround$2064:	
  4728                           
  4729                           ; 4 bytes @ 0x0
  4730  00A0                     	ds	4
  4731  00A4                     _fround$2063:	
  4732                           
  4733                           ; 4 bytes @ 0x4
  4734  00A4                     	ds	4
  4735  00A8                     fround@prec:	
  4736                           
  4737                           ; 1 bytes @ 0x8
  4738  00A8                     	ds	1
  4739  00A9                     ?___fladd:	
  4740  00A9                     ___fladd@b:	
  4741                           ; 4 bytes @ 0x9
  4742                           
  4743                           
  4744                           ; 4 bytes @ 0x9
  4745  00A9                     	ds	4
  4746  00AD                     ___fladd@a:	
  4747                           
  4748                           ; 4 bytes @ 0xD
  4749  00AD                     	ds	4
  4750  00B1                     ??___fladd:	
  4751                           
  4752                           ; 1 bytes @ 0x11
  4753  00B1                     	ds	12
  4754  00BD                     ?_totalVoltage:	
  4755  00BD                     ?_eval_poly:	
  4756                           ; 4 bytes @ 0x1D
  4757                           
  4758  00BD                     ?___flsub:	
  4759                           ; 4 bytes @ 0x1D
  4760                           
  4761  00BD                     totalVoltage@lenValues:	
  4762                           ; 4 bytes @ 0x1D
  4763                           
  4764  00BD                     ___flsub@a:	
  4765                           ; 2 bytes @ 0x1D
  4766                           
  4767  00BD                     eval_poly@x:	
  4768                           ; 4 bytes @ 0x1D
  4769                           
  4770                           
  4771                           ; 4 bytes @ 0x1D
  4772  00BD                     	ds	4
  4773  00C1                     totalVoltage@values:	
  4774  00C1                     eval_poly@d:	
  4775                           ; 1 bytes @ 0x21
  4776                           
  4777  00C1                     ___flsub@b:	
  4778                           ; 2 bytes @ 0x21
  4779                           
  4780                           
  4781                           ; 4 bytes @ 0x21
  4782  00C1                     	ds	1
  4783  00C2                     totalVoltage@total:	
  4784                           
  4785                           ; 4 bytes @ 0x22
  4786  00C2                     	ds	1
  4787  00C3                     eval_poly@n:	
  4788                           
  4789                           ; 2 bytes @ 0x23
  4790  00C3                     	ds	2
  4791  00C5                     ??_eval_poly:	
  4792                           
  4793                           ; 1 bytes @ 0x25
  4794  00C5                     	ds	1
  4795  00C6                     totalVoltage@i:	
  4796                           
  4797                           ; 2 bytes @ 0x26
  4798  00C6                     	ds	5
  4799  00CB                     eval_poly@res:	
  4800                           
  4801                           ; 4 bytes @ 0x2B
  4802  00CB                     	ds	4
  4803  00CF                     ?___fldiv:	
  4804  00CF                     ___fldiv@a:	
  4805                           ; 4 bytes @ 0x2F
  4806                           
  4807                           
  4808                           ; 4 bytes @ 0x2F
  4809  00CF                     	ds	4
  4810  00D3                     ___fldiv@b:	
  4811                           
  4812                           ; 4 bytes @ 0x33
  4813  00D3                     	ds	4
  4814  00D7                     ??___fldiv:	
  4815                           
  4816                           ; 1 bytes @ 0x37
  4817  00D7                     	ds	5
  4818  00DC                     ___fldiv@sign:	
  4819                           
  4820                           ; 1 bytes @ 0x3C
  4821  00DC                     	ds	1
  4822  00DD                     ___fldiv@rem:	
  4823                           
  4824                           ; 4 bytes @ 0x3D
  4825  00DD                     	ds	4
  4826  00E1                     ___fldiv@new_exp:	
  4827                           
  4828                           ; 2 bytes @ 0x41
  4829  00E1                     	ds	2
  4830  00E3                     ___fldiv@grs:	
  4831                           
  4832                           ; 4 bytes @ 0x43
  4833  00E3                     	ds	4
  4834  00E7                     ___fldiv@bexp:	
  4835                           
  4836                           ; 1 bytes @ 0x47
  4837  00E7                     	ds	1
  4838  00E8                     ___fldiv@aexp:	
  4839                           
  4840                           ; 1 bytes @ 0x48
  4841  00E8                     	ds	1
  4842  00E9                     ??_measureVoltages:	
  4843  00E9                     ?_log:	
  4844                           ; 1 bytes @ 0x49
  4845                           
  4846  00E9                     ?_calculateCurrent:	
  4847                           ; 4 bytes @ 0x49
  4848                           
  4849  00E9                     calculateCurrent@adcValue:	
  4850                           ; 4 bytes @ 0x49
  4851                           
  4852  00E9                     log@x:	
  4853                           ; 4 bytes @ 0x49
  4854                           
  4855                           
  4856                           ; 4 bytes @ 0x49
  4857  00E9                     	ds	4
  4858  00ED                     ??_log:	
  4859                           
  4860                           ; 1 bytes @ 0x4D
  4861  00ED                     	ds	1
  4862  00EE                     log@exponent:	
  4863                           
  4864                           ; 2 bytes @ 0x4E
  4865  00EE                     	ds	2
  4866                           
  4867                           	psect	cstackCOMMON
  4868  0070                     __pcstackCOMMON:	
  4869  0070                     ?_isdigit:	
  4870  0070                     ?_setup:	
  4871                           ; 1 bit 
  4872                           
  4873  0070                     ?_measureVoltages:	
  4874                           ; 1 bytes @ 0x0
  4875                           
  4876  0070                     ?_adcSetup:	
  4877                           ; 1 bytes @ 0x0
  4878                           
  4879  0070                     ?_uartDisable:	
  4880                           ; 1 bytes @ 0x0
  4881                           
  4882  0070                     ??_uartDisable:	
  4883                           ; 1 bytes @ 0x0
  4884                           
  4885  0070                     ?_timerSetup:	
  4886                           ; 1 bytes @ 0x0
  4887                           
  4888  0070                     ?_uartSetup:	
  4889                           ; 1 bytes @ 0x0
  4890                           
  4891  0070                     ?_spiSetup:	
  4892                           ; 1 bytes @ 0x0
  4893                           
  4894  0070                     ?_uartEnable:	
  4895                           ; 1 bytes @ 0x0
  4896                           
  4897  0070                     ?_timer0Setup:	
  4898                           ; 1 bytes @ 0x0
  4899                           
  4900  0070                     ?_timer2Setup:	
  4901                           ; 1 bytes @ 0x0
  4902                           
  4903  0070                     ?_LTC6804_adcv:	
  4904                           ; 1 bytes @ 0x0
  4905                           
  4906  0070                     ?_wakeup_idle:	
  4907                           ; 1 bytes @ 0x0
  4908                           
  4909  0070                     ?_spi_write:	
  4910                           ; 1 bytes @ 0x0
  4911                           
  4912  0070                     ?_spi_read:	
  4913                           ; 1 bytes @ 0x0
  4914                           
  4915  0070                     ?_main:	
  4916                           ; 1 bytes @ 0x0
  4917                           
  4918  0070                     ?_ISR:	
  4919                           ; 1 bytes @ 0x0
  4920                           
  4921  0070                     ??_ISR:	
  4922                           ; 1 bytes @ 0x0
  4923                           
  4924  0070                     ?i1_adcSetup:	
  4925                           ; 1 bytes @ 0x0
  4926                           
  4927  0070                     ??i1_adcSetup:	
  4928                           ; 1 bytes @ 0x0
  4929                           
  4930                           
  4931                           ; 1 bytes @ 0x0
  4932  0070                     	ds	2
  4933  0072                     ?___flge:	
  4934  0072                     ??_setup:	
  4935                           ; 1 bit 
  4936                           
  4937  0072                     ??_adcSetup:	
  4938                           ; 1 bytes @ 0x2
  4939                           
  4940  0072                     ??_timerSetup:	
  4941                           ; 1 bytes @ 0x2
  4942                           
  4943  0072                     ??_uartSetup:	
  4944                           ; 1 bytes @ 0x2
  4945                           
  4946  0072                     ??_spiSetup:	
  4947                           ; 1 bytes @ 0x2
  4948                           
  4949  0072                     ??_uartEnable:	
  4950                           ; 1 bytes @ 0x2
  4951                           
  4952  0072                     ??_timer0Setup:	
  4953                           ; 1 bytes @ 0x2
  4954                           
  4955  0072                     ??_timer2Setup:	
  4956                           ; 1 bytes @ 0x2
  4957                           
  4958  0072                     ??_wakeup_idle:	
  4959                           ; 1 bytes @ 0x2
  4960                           
  4961  0072                     ??_spi_write:	
  4962                           ; 1 bytes @ 0x2
  4963                           
  4964  0072                     ??_spi_read:	
  4965                           ; 1 bytes @ 0x2
  4966                           
  4967  0072                     ??_isdigit:	
  4968                           ; 1 bytes @ 0x2
  4969                           
  4970  0072                     ?___bmul:	
  4971                           ; 1 bytes @ 0x2
  4972                           
  4973  0072                     ?_adcRead:	
  4974                           ; 1 bytes @ 0x2
  4975                           
  4976  0072                     ?__Umul8_16:	
  4977                           ; 2 bytes @ 0x2
  4978                           
  4979  0072                     ?___wmul:	
  4980                           ; 2 bytes @ 0x2
  4981                           
  4982  0072                     ?___awmod:	
  4983                           ; 2 bytes @ 0x2
  4984                           
  4985  0072                     ?__tdiv_to_l_:	
  4986                           ; 2 bytes @ 0x2
  4987                           
  4988  0072                     ?__div_to_l_:	
  4989                           ; 4 bytes @ 0x2
  4990                           
  4991  0072                     ?_frexp:	
  4992                           ; 4 bytes @ 0x2
  4993                           
  4994  0072                     ?___lldiv:	
  4995                           ; 4 bytes @ 0x2
  4996                           
  4997  0072                     ___bmul@multiplicand:	
  4998                           ; 4 bytes @ 0x2
  4999                           
  5000  0072                     _isdigit$1627:	
  5001                           ; 1 bytes @ 0x2
  5002                           
  5003  0072                     __Umul8_16@multiplicand:	
  5004                           ; 1 bytes @ 0x2
  5005                           
  5006  0072                     ___wmul@multiplier:	
  5007                           ; 1 bytes @ 0x2
  5008                           
  5009  0072                     ___awmod@divisor:	
  5010                           ; 2 bytes @ 0x2
  5011                           
  5012  0072                     __div_to_l_@f1:	
  5013                           ; 2 bytes @ 0x2
  5014                           
  5015  0072                     ___flge@ff1:	
  5016                           ; 4 bytes @ 0x2
  5017                           
  5018  0072                     __tdiv_to_l_@f1:	
  5019                           ; 4 bytes @ 0x2
  5020                           
  5021  0072                     ___lldiv@divisor:	
  5022                           ; 4 bytes @ 0x2
  5023                           
  5024  0072                     frexp@value:	
  5025                           ; 4 bytes @ 0x2
  5026                           
  5027                           
  5028                           ; 4 bytes @ 0x2
  5029  0072                     	ds	1
  5030  0073                     ??___bmul:	
  5031  0073                     spi_write@readData:	
  5032                           ; 1 bytes @ 0x3
  5033                           
  5034  0073                     spi_read@data:	
  5035                           ; 1 bytes @ 0x3
  5036                           
  5037  0073                     isdigit@c:	
  5038                           ; 1 bytes @ 0x3
  5039                           
  5040                           
  5041                           ; 1 bytes @ 0x3
  5042  0073                     	ds	1
  5043  0074                     ??__Umul8_16:	
  5044  0074                     ??___xxtofl:	
  5045                           ; 1 bytes @ 0x4
  5046                           
  5047  0074                     spi_write@data:	
  5048                           ; 1 bytes @ 0x4
  5049                           
  5050  0074                     spi_read@readData:	
  5051                           ; 1 bytes @ 0x4
  5052                           
  5053  0074                     ___bmul@product:	
  5054                           ; 1 bytes @ 0x4
  5055                           
  5056  0074                     ___wmul@multiplicand:	
  5057                           ; 1 bytes @ 0x4
  5058                           
  5059  0074                     ___awmod@dividend:	
  5060                           ; 2 bytes @ 0x4
  5061                           
  5062                           
  5063                           ; 2 bytes @ 0x4
  5064  0074                     	ds	1
  5065  0075                     ?_spi_write_array:	
  5066  0075                     ___bmul@multiplier:	
  5067                           ; 1 bytes @ 0x5
  5068                           
  5069  0075                     spi_write_array@data:	
  5070                           ; 1 bytes @ 0x5
  5071                           
  5072                           
  5073                           ; 2 bytes @ 0x5
  5074  0075                     	ds	1
  5075  0076                     ?_spi_write_read:	
  5076  0076                     ??___wmul:	
  5077                           ; 1 bytes @ 0x6
  5078                           
  5079  0076                     ??___awmod:	
  5080                           ; 1 bytes @ 0x6
  5081                           
  5082  0076                     ?_pec15_calc:	
  5083                           ; 1 bytes @ 0x6
  5084                           
  5085  0076                     spi_write_read@tx_len:	
  5086                           ; 2 bytes @ 0x6
  5087                           
  5088  0076                     frexp@eptr:	
  5089                           ; 1 bytes @ 0x6
  5090                           
  5091  0076                     pec15_calc@data:	
  5092                           ; 1 bytes @ 0x6
  5093                           
  5094  0076                     ___wmul@product:	
  5095                           ; 2 bytes @ 0x6
  5096                           
  5097  0076                     __div_to_l_@f2:	
  5098                           ; 2 bytes @ 0x6
  5099                           
  5100  0076                     ___flge@ff2:	
  5101                           ; 4 bytes @ 0x6
  5102                           
  5103  0076                     __tdiv_to_l_@f2:	
  5104                           ; 4 bytes @ 0x6
  5105                           
  5106  0076                     ___lldiv@dividend:	
  5107                           ; 4 bytes @ 0x6
  5108                           
  5109                           
  5110                           ; 4 bytes @ 0x6
  5111  0076                     	ds	1
  5112  0077                     ??_spi_write_array:	
  5113  0077                     ??_frexp:	
  5114                           ; 1 bytes @ 0x7
  5115                           
  5116  0077                     ___awmod@counter:	
  5117                           ; 1 bytes @ 0x7
  5118                           
  5119  0077                     spi_write_read@rx_data:	
  5120                           ; 1 bytes @ 0x7
  5121                           
  5122                           
  5123                           ; 2 bytes @ 0x7
  5124  0077                     	ds	1
  5125  0078                     ___awmod@sign:	
  5126                           
  5127                           ; 1 bytes @ 0x8
  5128  0078                     	ds	1
  5129  0079                     ??_LTC6804_adcv:	
  5130  0079                     ??___awdiv:	
  5131                           ; 1 bytes @ 0x9
  5132                           
  5133  0079                     spi_write_read@rx_len:	
  5134                           ; 1 bytes @ 0x9
  5135                           
  5136                           
  5137                           ; 1 bytes @ 0x9
  5138  0079                     	ds	1
  5139  007A                     ??_getCurrent:	
  5140  007A                     ??_writeValuesToUart:	
  5141                           ; 1 bytes @ 0xA
  5142                           
  5143  007A                     ??_writeCurrent:	
  5144                           ; 1 bytes @ 0xA
  5145                           
  5146  007A                     ??_calculateCurrent:	
  5147                           ; 1 bytes @ 0xA
  5148                           
  5149  007A                     ??___flneg:	
  5150                           ; 1 bytes @ 0xA
  5151                           
  5152  007A                     ??___flsub:	
  5153                           ; 1 bytes @ 0xA
  5154                           
  5155                           
  5156                           	psect	cstackBANK0
  5157  0020                     __pcstackBANK0:	
  5158                           ; 1 bytes @ 0xA
  5159                           
  5160  0020                     ??_adcRead:	
  5161  0020                     ??_pec15_calc:	
  5162                           ; 1 bytes @ 0x0
  5163                           
  5164  0020                     ??_spi_write_read:	
  5165                           ; 1 bytes @ 0x0
  5166                           
  5167  0020                     ??__tdiv_to_l_:	
  5168                           ; 1 bytes @ 0x0
  5169                           
  5170  0020                     ??__div_to_l_:	
  5171                           ; 1 bytes @ 0x0
  5172                           
  5173  0020                     ??___flge:	
  5174                           ; 1 bytes @ 0x0
  5175                           
  5176  0020                     ??___lldiv:	
  5177                           ; 1 bytes @ 0x0
  5178                           
  5179  0020                     ?___awdiv:	
  5180                           ; 1 bytes @ 0x0
  5181                           
  5182  0020                     spi_write_array@len:	
  5183                           ; 2 bytes @ 0x0
  5184                           
  5185  0020                     ___awdiv@divisor:	
  5186                           ; 1 bytes @ 0x0
  5187                           
  5188  0020                     __Umul8_16@product:	
  5189                           ; 2 bytes @ 0x0
  5190                           
  5191                           
  5192                           ; 2 bytes @ 0x0
  5193  0020                     	ds	1
  5194  0021                     spi_write_array@i:	
  5195  0021                     ___lldiv@quotient:	
  5196                           ; 1 bytes @ 0x1
  5197                           
  5198                           
  5199                           ; 4 bytes @ 0x1
  5200  0021                     	ds	1
  5201  0022                     ___awdiv@dividend:	
  5202  0022                     __Umul8_16@word_mpld:	
  5203                           ; 2 bytes @ 0x2
  5204                           
  5205                           
  5206                           ; 2 bytes @ 0x2
  5207  0022                     	ds	2
  5208  0024                     ___awdiv@counter:	
  5209  0024                     __Umul8_16@multiplier:	
  5210                           ; 1 bytes @ 0x4
  5211                           
  5212  0024                     __tdiv_to_l_@quot:	
  5213                           ; 1 bytes @ 0x4
  5214                           
  5215                           
  5216                           ; 4 bytes @ 0x4
  5217  0024                     	ds	1
  5218  0025                     spi_write_read@tx_Data:	
  5219  0025                     ___awdiv@sign:	
  5220                           ; 1 bytes @ 0x5
  5221                           
  5222  0025                     ___lldiv@counter:	
  5223                           ; 1 bytes @ 0x5
  5224                           
  5225  0025                     __div_to_l_@quot:	
  5226                           ; 1 bytes @ 0x5
  5227                           
  5228                           
  5229                           ; 4 bytes @ 0x5
  5230  0025                     	ds	1
  5231  0026                     ?___llmod:	
  5232  0026                     spi_write_read@i:	
  5233                           ; 4 bytes @ 0x6
  5234                           
  5235  0026                     ___awdiv@quotient:	
  5236                           ; 1 bytes @ 0x6
  5237                           
  5238  0026                     ___llmod@divisor:	
  5239                           ; 2 bytes @ 0x6
  5240                           
  5241                           
  5242                           ; 4 bytes @ 0x6
  5243  0026                     	ds	1
  5244  0027                     adcRead@ch:	
  5245  0027                     spi_write_read@i_1252:	
  5246                           ; 1 bytes @ 0x7
  5247                           
  5248                           
  5249                           ; 1 bytes @ 0x7
  5250  0027                     	ds	1
  5251  0028                     __tdiv_to_l_@cntr:	
  5252  0028                     adcRead@ansHigh:	
  5253                           ; 1 bytes @ 0x8
  5254                           
  5255                           
  5256                           ; 2 bytes @ 0x8
  5257  0028                     	ds	1
  5258  0029                     __div_to_l_@cntr:	
  5259  0029                     __tdiv_to_l_@exp1:	
  5260                           ; 1 bytes @ 0x9
  5261                           
  5262  0029                     pec15_calc@addr:	
  5263                           ; 1 bytes @ 0x9
  5264                           
  5265                           
  5266                           ; 2 bytes @ 0x9
  5267  0029                     	ds	1
  5268  002A                     __div_to_l_@exp1:	
  5269  002A                     adcRead@ansLow:	
  5270                           ; 1 bytes @ 0xA
  5271                           
  5272  002A                     ___llmod@dividend:	
  5273                           ; 2 bytes @ 0xA
  5274                           
  5275                           
  5276                           ; 4 bytes @ 0xA
  5277  002A                     	ds	1
  5278  002B                     pec15_calc@len:	
  5279                           
  5280                           ; 1 bytes @ 0xB
  5281  002B                     	ds	1
  5282  002C                     pec15_calc@i:	
  5283  002C                     adcRead@total:	
  5284                           ; 1 bytes @ 0xC
  5285                           
  5286                           
  5287                           ; 2 bytes @ 0xC
  5288  002C                     	ds	1
  5289  002D                     pec15_calc@remainder:	
  5290                           
  5291                           ; 2 bytes @ 0xD
  5292  002D                     	ds	1
  5293  002E                     ??___llmod:	
  5294  002E                     ?___xxtofl:	
  5295                           ; 1 bytes @ 0xE
  5296                           
  5297  002E                     ___xxtofl@val:	
  5298                           ; 4 bytes @ 0xE
  5299                           
  5300                           
  5301                           ; 4 bytes @ 0xE
  5302  002E                     	ds	1
  5303  002F                     ?_LTC6804_rdcv_reg:	
  5304  002F                     LTC6804_rdcv_reg@total_ic:	
  5305                           ; 1 bytes @ 0xF
  5306                           
  5307  002F                     ___llmod@counter:	
  5308                           ; 1 bytes @ 0xF
  5309                           
  5310  002F                     LTC6804_adcv@cmd:	
  5311                           ; 1 bytes @ 0xF
  5312                           
  5313                           
  5314                           ; 4 bytes @ 0xF
  5315  002F                     	ds	1
  5316  0030                     LTC6804_rdcv_reg@data:	
  5317                           
  5318                           ; 1 bytes @ 0x10
  5319  0030                     	ds	1
  5320  0031                     ??_LTC6804_rdcv_reg:	
  5321                           
  5322                           ; 1 bytes @ 0x11
  5323  0031                     	ds	1
  5324  0032                     ___xxtofl@sign:	
  5325                           
  5326                           ; 1 bytes @ 0x12
  5327  0032                     	ds	1
  5328  0033                     ___xxtofl@exp:	
  5329  0033                     LTC6804_adcv@cmd_pec:	
  5330                           ; 1 bytes @ 0x13
  5331                           
  5332                           
  5333                           ; 2 bytes @ 0x13
  5334  0033                     	ds	1
  5335  0034                     LTC6804_rdcv_reg@cmd_pec:	
  5336  0034                     ___xxtofl@arg:	
  5337                           ; 2 bytes @ 0x14
  5338                           
  5339                           
  5340                           ; 4 bytes @ 0x14
  5341  0034                     	ds	2
  5342  0036                     LTC6804_rdcv_reg@cmd:	
  5343                           
  5344                           ; 4 bytes @ 0x16
  5345  0036                     	ds	2
  5346  0038                     ?___flmul:	
  5347  0038                     ___flmul@b:	
  5348                           ; 4 bytes @ 0x18
  5349                           
  5350                           
  5351                           ; 4 bytes @ 0x18
  5352  0038                     	ds	2
  5353  003A                     LTC6804_rdcv_reg@reg:	
  5354                           
  5355                           ; 1 bytes @ 0x1A
  5356  003A                     	ds	1
  5357  003B                     ?_LTC6804_rdcv:	
  5358  003B                     LTC6804_rdcv@total_ic:	
  5359                           ; 1 bytes @ 0x1B
  5360                           
  5361                           
  5362                           ; 1 bytes @ 0x1B
  5363  003B                     	ds	1
  5364  003C                     LTC6804_rdcv@cell_codes:	
  5365  003C                     ___flmul@a:	
  5366                           ; 1 bytes @ 0x1C
  5367                           
  5368                           
  5369                           ; 4 bytes @ 0x1C
  5370  003C                     	ds	1
  5371  003D                     ??_LTC6804_rdcv:	
  5372                           
  5373                           ; 1 bytes @ 0x1D
  5374  003D                     	ds	3
  5375  0040                     ??___flmul:	
  5376                           
  5377                           ; 1 bytes @ 0x20
  5378  0040                     	ds	2
  5379  0042                     LTC6804_rdcv@cell_data:	
  5380                           
  5381                           ; 8 bytes @ 0x22
  5382  0042                     	ds	3
  5383  0045                     ___flmul@sign:	
  5384                           
  5385                           ; 1 bytes @ 0x25
  5386  0045                     	ds	1
  5387  0046                     ___flmul@aexp:	
  5388                           
  5389                           ; 1 bytes @ 0x26
  5390  0046                     	ds	1
  5391  0047                     ___flmul@grs:	
  5392                           
  5393                           ; 4 bytes @ 0x27
  5394  0047                     	ds	3
  5395  004A                     LTC6804_rdcv@pec_error:	
  5396                           
  5397                           ; 1 bytes @ 0x2A
  5398  004A                     	ds	1
  5399  004B                     ___flmul@bexp:	
  5400  004B                     LTC6804_rdcv@parsed_cell:	
  5401                           ; 1 bytes @ 0x2B
  5402                           
  5403                           
  5404                           ; 2 bytes @ 0x2B
  5405  004B                     	ds	1
  5406  004C                     ___flmul@prod:	
  5407                           
  5408                           ; 4 bytes @ 0x2C
  5409  004C                     	ds	1
  5410  004D                     LTC6804_rdcv@received_pec:	
  5411                           
  5412                           ; 2 bytes @ 0x2D
  5413  004D                     	ds	2
  5414  004F                     LTC6804_rdcv@data_pec:	
  5415                           
  5416                           ; 2 bytes @ 0x2F
  5417  004F                     	ds	1
  5418  0050                     ___flmul@temp:	
  5419                           
  5420                           ; 2 bytes @ 0x30
  5421  0050                     	ds	1
  5422  0051                     LTC6804_rdcv@reg:	
  5423                           
  5424                           ; 1 bytes @ 0x31
  5425  0051                     	ds	1
  5426  0052                     ?_fround:	
  5427  0052                     ?_scale:	
  5428                           ; 4 bytes @ 0x32
  5429                           
  5430  0052                     ?___flneg:	
  5431                           ; 4 bytes @ 0x32
  5432                           
  5433  0052                     LTC6804_rdcv@current_ic:	
  5434                           ; 4 bytes @ 0x32
  5435                           
  5436  0052                     ___flneg@f1:	
  5437                           ; 1 bytes @ 0x32
  5438                           
  5439                           
  5440                           ; 4 bytes @ 0x32
  5441  0052                     	ds	1
  5442  0053                     LTC6804_rdcv@current_cell:	
  5443                           
  5444                           ; 1 bytes @ 0x33
  5445  0053                     	ds	1
  5446  0054                     LTC6804_rdcv@current_ic_1169:	
  5447                           
  5448                           ; 1 bytes @ 0x34
  5449  0054                     	ds	1
  5450  0055                     LTC6804_rdcv@current_cell_1170:	
  5451                           
  5452                           ; 1 bytes @ 0x35
  5453  0055                     	ds	1
  5454  0056                     ??_fround:	
  5455  0056                     ??_scale:	
  5456                           ; 1 bytes @ 0x36
  5457                           
  5458  0056                     LTC6804_rdcv@cell_reg:	
  5459                           ; 1 bytes @ 0x36
  5460                           
  5461                           
  5462                           ; 1 bytes @ 0x36
  5463  0056                     	ds	1
  5464  0057                     LTC6804_rdcv@data_counter:	
  5465                           
  5466                           ; 1 bytes @ 0x37
  5467  0057                     	ds	15
  5468  0066                     _scale$2065:	
  5469                           
  5470                           ; 4 bytes @ 0x46
  5471  0066                     	ds	4
  5472  006A                     scale@scl:	
  5473  006A                     ___fladd@signs:	
  5474                           ; 1 bytes @ 0x4A
  5475                           
  5476                           
  5477                           ; 1 bytes @ 0x4A
  5478  006A                     	ds	1
  5479  006B                     ___fladd@aexp:	
  5480                           
  5481                           ; 1 bytes @ 0x4B
  5482  006B                     	ds	1
  5483  006C                     ___fladd@bexp:	
  5484                           
  5485                           ; 1 bytes @ 0x4C
  5486  006C                     	ds	1
  5487  006D                     ___fladd@grs:	
  5488                           
  5489                           ; 1 bytes @ 0x4D
  5490  006D                     	ds	1
  5491  006E                     ??_totalVoltage:	
  5492                           
  5493                           ; 1 bytes @ 0x4E
  5494  006E                     	ds	2
  5495                           
  5496                           	psect	maintext
  5497  24CF                     __pmaintext:	
  5498 ;;
  5499 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  5500 ;;
  5501 ;; *************** function _main *****************
  5502 ;; Defined at:
  5503 ;;		line 49 in file "main.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;		None
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5512 ;; Tracked objects:
  5513 ;;		On entry : B1F/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5520 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5521 ;;Total ram usage:        1 bytes
  5522 ;; Hardware stack levels required when called:    9
  5523 ;; This function calls:
  5524 ;;		_getCurrent
  5525 ;;		_getTemps
  5526 ;;		_setup
  5527 ;;		_startUp
  5528 ;;		_writeValuesToUart
  5529 ;; This function is called by:
  5530 ;;		Startup code after reset
  5531 ;; This function uses a non-reentrant model
  5532 ;;
  5533                           
  5534                           
  5535                           ;psect for function _main
  5536  24CF                     _main:	
  5537                           
  5538                           ;main.c: 51: setup();
  5539                           
  5540                           ;incstack = 0
  5541                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5542  24CF  31AF  27E9  31A4   	fcall	_setup
  5543                           
  5544                           ;main.c: 52: LATDbits.LATD5 = 0;
  5545  24D2  0022               	movlb	2	; select bank2
  5546  24D3  128F               	bcf	15,5	;volatile
  5547                           
  5548                           ;main.c: 53: LATDbits.LATD4 = 0;
  5549  24D4  120F               	bcf	15,4	;volatile
  5550                           
  5551                           ;main.c: 55: if(PORTAbits.RA0 == 1 ){
  5552  24D5  0020               	movlb	0	; select bank0
  5553  24D6  1C0C               	btfss	12,0	;volatile
  5554  24D7  2CE3               	goto	l7185
  5555                           
  5556                           ;main.c: 56: LATDbits.LATD4 = startUp();
  5557  24D8  319E  26A6  31A4   	fcall	_startUp
  5558  24DB  0022               	movlb	2	; select bank2
  5559  24DC  0854               	movf	?_startUp^(0+256),w
  5560  24DD  00DD               	movwf	??_main^(0+256)
  5561  24DE  0EDD               	swapf	??_main^(0+256),f
  5562  24DF  080F               	movf	15,w	;volatile
  5563  24E0  065D               	xorwf	??_main^(0+256),w
  5564  24E1  39EF               	andlw	-17
  5565  24E2  2CEE               	goto	L1
  5566  24E3                     l7185:	
  5567                           ;main.c: 57: }else{
  5568                           
  5569                           
  5570                           ;main.c: 58: LATDbits.LATD5 = startUp();
  5571  24E3  319E  26A6  31A4   	fcall	_startUp
  5572  24E6  0022               	movlb	2	; select bank2
  5573  24E7  0854               	movf	?_startUp^(0+256),w
  5574  24E8  00DD               	movwf	??_main^(0+256)
  5575  24E9  0EDD               	swapf	??_main^(0+256),f
  5576  24EA  0DDD               	rlf	??_main^(0+256),f
  5577  24EB  080F               	movf	15,w	;volatile
  5578  24EC  065D               	xorwf	??_main^(0+256),w
  5579  24ED  39DF               	andlw	-33
  5580  24EE                     L1:	
  5581  24EE  065D               	xorwf	??_main^(0+256),w
  5582  24EF  008F               	movwf	15	;volatile
  5583  24F0                     l83:	
  5584                           ;main.c: 59: }
  5585                           ;main.c: 62: while(1){
  5586                           
  5587                           
  5588                           ;main.c: 65: highestTemp = getTemps(temps, 3);
  5589  24F0  3003               	movlw	3
  5590  24F1  0022               	movlb	2	; select bank2
  5591  24F2  00C9               	movwf	getTemps@numTemps^(0+256)
  5592  24F3  3000               	movlw	0
  5593  24F4  00CA               	movwf	(getTemps@numTemps^(0+256)+1)
  5594  24F5  30E0               	movlw	(low (_temps| (0+256)))& (0+255)
  5595  24F6  31A5  2548  31A4   	fcall	_getTemps
  5596  24F9  0022               	movlb	2	; select bank2
  5597  24FA  084A               	movf	(?_getTemps+1)^(0+256),w
  5598  24FB  0023               	movlb	3	; select bank3
  5599  24FC  00A9               	movwf	(_highestTemp+1)^(0+384)
  5600  24FD  0022               	movlb	2	; select bank2
  5601  24FE  0849               	movf	?_getTemps^(0+256),w
  5602  24FF  0023               	movlb	3	; select bank3
  5603  2500  00A8               	movwf	_highestTemp^(0+384)
  5604                           
  5605                           ;main.c: 67: if(currentBool == 1){
  5606  2501  032A               	decf	_currentBool^(0+384),w
  5607  2502  042B               	iorwf	(_currentBool+1)^(0+384),w
  5608  2503  1D03               	btfss	3,2
  5609  2504  2D15               	goto	l7195
  5610                           
  5611                           ;main.c: 68: current = getCurrent();
  5612  2505  31A2  228D  31A4   	fcall	_getCurrent
  5613  2508  0022               	movlb	2	; select bank2
  5614  2509  082B               	movf	(?_getCurrent+3)^(0+256),w
  5615  250A  00E1               	movwf	(_current+3)^(0+256)
  5616  250B  082A               	movf	(?_getCurrent+2)^(0+256),w
  5617  250C  00E0               	movwf	(_current+2)^(0+256)
  5618  250D  0829               	movf	(?_getCurrent+1)^(0+256),w
  5619  250E  00DF               	movwf	(_current+1)^(0+256)
  5620  250F  0828               	movf	?_getCurrent^(0+256),w
  5621  2510  00DE               	movwf	_current^(0+256)
  5622                           
  5623                           ;main.c: 69: LATDbits.LATD7 ^ 1;
  5624  2511  080F               	movf	15,w	;volatile
  5625                           
  5626                           ;main.c: 70: currentBool = 0;
  5627  2512  0023               	movlb	3	; select bank3
  5628  2513  01AA               	clrf	_currentBool^(0+384)
  5629  2514  01AB               	clrf	(_currentBool+1)^(0+384)
  5630  2515                     l7195:	
  5631                           
  5632                           ;main.c: 71: }
  5633                           ;main.c: 72: if(uartBool == 1){
  5634  2515  032C               	decf	_uartBool^(0+384),w
  5635  2516  042D               	iorwf	(_uartBool+1)^(0+384),w
  5636  2517  1D03               	btfss	3,2
  5637  2518  2CF0               	goto	l83
  5638                           
  5639                           ;main.c: 73: writeValuesToUart(voltages, 12, temps, 3, highestTemp, current);
  5640  2519  300C               	movlw	12
  5641  251A  0025               	movlb	5	; select bank5
  5642  251B  00A0               	movwf	writeValuesToUart@voltageArrLength^(0+640)
  5643  251C  3000               	movlw	0
  5644  251D  00A1               	movwf	(writeValuesToUart@voltageArrLength^(0+640)+1)
  5645  251E  30E0               	movlw	(low (_temps| (0+256)))& (0+255)
  5646  251F  0022               	movlb	2	; select bank2
  5647  2520  00DD               	movwf	??_main^(0+256)
  5648  2521  085D               	movf	??_main^(0+256),w
  5649  2522  0025               	movlb	5	; select bank5
  5650  2523  00A2               	movwf	writeValuesToUart@temperatureArr^(0+640)
  5651  2524  3003               	movlw	3
  5652  2525  00A3               	movwf	writeValuesToUart@temperatureArrLength^(0+640)
  5653  2526  3000               	movlw	0
  5654  2527  00A4               	movwf	(writeValuesToUart@temperatureArrLength^(0+640)+1)
  5655  2528  0023               	movlb	3	; select bank3
  5656  2529  0829               	movf	(_highestTemp+1)^(0+384),w
  5657  252A  0025               	movlb	5	; select bank5
  5658  252B  00A6               	movwf	(writeValuesToUart@temperatureHigh+1)^(0+640)
  5659  252C  0023               	movlb	3	; select bank3
  5660  252D  0828               	movf	_highestTemp^(0+384),w
  5661  252E  0025               	movlb	5	; select bank5
  5662  252F  00A5               	movwf	writeValuesToUart@temperatureHigh^(0+640)
  5663  2530  0022               	movlb	2	; select bank2
  5664  2531  0861               	movf	(_current+3)^(0+256),w
  5665  2532  0025               	movlb	5	; select bank5
  5666  2533  00AA               	movwf	(writeValuesToUart@current+3)^(0+640)
  5667  2534  0022               	movlb	2	; select bank2
  5668  2535  0860               	movf	(_current+2)^(0+256),w
  5669  2536  0025               	movlb	5	; select bank5
  5670  2537  00A9               	movwf	(writeValuesToUart@current+2)^(0+640)
  5671  2538  0022               	movlb	2	; select bank2
  5672  2539  085F               	movf	(_current+1)^(0+256),w
  5673  253A  0025               	movlb	5	; select bank5
  5674  253B  00A8               	movwf	(writeValuesToUart@current+1)^(0+640)
  5675  253C  0022               	movlb	2	; select bank2
  5676  253D  085E               	movf	_current^(0+256),w
  5677  253E  0025               	movlb	5	; select bank5
  5678  253F  00A7               	movwf	writeValuesToUart@current^(0+640)
  5679  2540  30B0               	movlw	(low (_voltages| (0+256)))& (0+255)
  5680  2541  319C  2400  31A4   	fcall	_writeValuesToUart
  5681                           
  5682                           ;main.c: 74: uartBool = 0;
  5683  2544  0023               	movlb	3	; select bank3
  5684  2545  01AC               	clrf	_uartBool^(0+384)
  5685  2546  01AD               	clrf	(_uartBool+1)^(0+384)
  5686  2547  2CF0               	goto	l83
  5687  2548                     __end_of_main:	
  5688                           
  5689                           	psect	text1
  5690  1C00                     __ptext1:	
  5691 ;; *************** function _writeValuesToUart *****************
  5692 ;; Defined at:
  5693 ;;		line 11 in file "uart.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  voltageArr      1    wreg     PTR float 
  5696 ;;		 -> voltages(48), 
  5697 ;;  voltageArrLe    2    0[BANK5 ] int 
  5698 ;;  temperatureA    1    2[BANK5 ] PTR int 
  5699 ;;		 -> temps(6), 
  5700 ;;  temperatureA    2    3[BANK5 ] int 
  5701 ;;  temperatureH    2    5[BANK5 ] int 
  5702 ;;  current         4    7[BANK5 ] float 
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;  voltageArr      1   60[BANK2 ] PTR float 
  5705 ;;		 -> voltages(48), 
  5706 ;; Return value:  Size  Location     Type
  5707 ;;                  1    wreg      void 
  5708 ;; Registers used:
  5709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5710 ;; Tracked objects:
  5711 ;;		On entry : 0/0
  5712 ;;		On exit  : 0/0
  5713 ;;		Unchanged: 0/0
  5714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5715 ;;      Params:         0       0       0       0       0       0      11       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5716 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5718 ;;      Totals:         0       0       0       1       0       0      11       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5719 ;;Total ram usage:       12 bytes
  5720 ;; Hardware stack levels used:    1
  5721 ;; Hardware stack levels required when called:    7
  5722 ;; This function calls:
  5723 ;;		_clearScreen
  5724 ;;		_writeCurrent
  5725 ;;		_writeTemps
  5726 ;;		_writeVoltages
  5727 ;; This function is called by:
  5728 ;;		_main
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           
  5733                           ;psect for function _writeValuesToUart
  5734  1C00                     _writeValuesToUart:	
  5735                           
  5736                           ;incstack = 0
  5737                           ; Regs used in _writeValuesToUart: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5738                           ;writeValuesToUart@voltageArr stored from wreg
  5739  1C00  0022               	movlb	2	; select bank2
  5740  1C01  00DC               	movwf	writeValuesToUart@voltageArr^(0+256)
  5741                           
  5742                           ;uart.c: 12: clearScreen(17);
  5743  1C02  3011               	movlw	17
  5744  1C03  00D4               	movwf	clearScreen@numLines^(0+256)
  5745  1C04  3000               	movlw	0
  5746  1C05  00D5               	movwf	(clearScreen@numLines^(0+256)+1)
  5747  1C06  31A0  20FF  319C   	fcall	_clearScreen
  5748                           
  5749                           ;uart.c: 13: writeVoltages(voltageArr, voltageArrLength);
  5750  1C09  0025               	movlb	5	; select bank5
  5751  1C0A  0821               	movf	(writeValuesToUart@voltageArrLength+1)^(0+640),w
  5752  1C0B  0022               	movlb	2	; select bank2
  5753  1C0C  00D5               	movwf	(writeVoltages@length+1)^(0+256)
  5754  1C0D  0025               	movlb	5	; select bank5
  5755  1C0E  0820               	movf	writeValuesToUart@voltageArrLength^(0+640),w
  5756  1C0F  0022               	movlb	2	; select bank2
  5757  1C10  00D4               	movwf	writeVoltages@length^(0+256)
  5758  1C11  085C               	movf	writeValuesToUart@voltageArr^(0+256),w
  5759  1C12  31A1  2179  319C   	fcall	_writeVoltages
  5760                           
  5761                           ;uart.c: 14: writeTemps(temperatureArr, temperatureHigh , temperatureArrLength);
  5762  1C15  0025               	movlb	5	; select bank5
  5763  1C16  0826               	movf	(writeValuesToUart@temperatureHigh+1)^(0+640),w
  5764  1C17  0022               	movlb	2	; select bank2
  5765  1C18  00D5               	movwf	(writeTemps@highestTemp+1)^(0+256)
  5766  1C19  0025               	movlb	5	; select bank5
  5767  1C1A  0825               	movf	writeValuesToUart@temperatureHigh^(0+640),w
  5768  1C1B  0022               	movlb	2	; select bank2
  5769  1C1C  00D4               	movwf	writeTemps@highestTemp^(0+256)
  5770  1C1D  0025               	movlb	5	; select bank5
  5771  1C1E  0824               	movf	(writeValuesToUart@temperatureArrLength+1)^(0+640),w
  5772  1C1F  0022               	movlb	2	; select bank2
  5773  1C20  00D7               	movwf	(writeTemps@numTemps+1)^(0+256)
  5774  1C21  0025               	movlb	5	; select bank5
  5775  1C22  0823               	movf	writeValuesToUart@temperatureArrLength^(0+640),w
  5776  1C23  0022               	movlb	2	; select bank2
  5777  1C24  00D6               	movwf	writeTemps@numTemps^(0+256)
  5778  1C25  0025               	movlb	5	; select bank5
  5779  1C26  0822               	movf	writeValuesToUart@temperatureArr^(0+640),w
  5780  1C27  31A2  2242  319C   	fcall	_writeTemps
  5781                           
  5782                           ;uart.c: 15: writeCurrent(current);
  5783  1C2A  0025               	movlb	5	; select bank5
  5784  1C2B  082A               	movf	(writeValuesToUart@current+3)^(0+640),w
  5785  1C2C  0022               	movlb	2	; select bank2
  5786  1C2D  00D7               	movwf	(writeCurrent@current+3)^(0+256)
  5787  1C2E  0025               	movlb	5	; select bank5
  5788  1C2F  0829               	movf	(writeValuesToUart@current+2)^(0+640),w
  5789  1C30  0022               	movlb	2	; select bank2
  5790  1C31  00D6               	movwf	(writeCurrent@current+2)^(0+256)
  5791  1C32  0025               	movlb	5	; select bank5
  5792  1C33  0828               	movf	(writeValuesToUart@current+1)^(0+640),w
  5793  1C34  0022               	movlb	2	; select bank2
  5794  1C35  00D5               	movwf	(writeCurrent@current+1)^(0+256)
  5795  1C36  0025               	movlb	5	; select bank5
  5796  1C37  0827               	movf	writeValuesToUart@current^(0+640),w
  5797  1C38  0022               	movlb	2	; select bank2
  5798  1C39  00D4               	movwf	writeCurrent@current^(0+256)
  5799  1C3A  31A0  200F         	fcall	_writeCurrent
  5800  1C3C  0008               	return
  5801  1C3D                     __end_of_writeValuesToUart:	
  5802                           
  5803                           	psect	text2
  5804  2179                     __ptext2:	
  5805 ;; *************** function _writeVoltages *****************
  5806 ;; Defined at:
  5807 ;;		line 18 in file "uart.c"
  5808 ;; Parameters:    Size  Location     Type
  5809 ;;  volts           1    wreg     PTR float 
  5810 ;;		 -> voltages(48), 
  5811 ;;  length          2   52[BANK2 ] int 
  5812 ;; Auto vars:     Size  Location     Type
  5813 ;;  volts           1   56[BANK2 ] PTR float 
  5814 ;;		 -> voltages(48), 
  5815 ;;  k               2   57[BANK2 ] int 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 0/0
  5822 ;;		On exit  : 0/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5825 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5826 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5827 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5828 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5829 ;;Total ram usage:        7 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:    6
  5832 ;; This function calls:
  5833 ;;		_sprintf
  5834 ;;		_uartEnable
  5835 ;; This function is called by:
  5836 ;;		_writeValuesToUart
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           
  5841                           ;psect for function _writeVoltages
  5842  2179                     _writeVoltages:	
  5843                           
  5844                           ;incstack = 0
  5845                           ; Regs used in _writeVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5846                           ;writeVoltages@volts stored from wreg
  5847  2179  0022               	movlb	2	; select bank2
  5848  217A  00D8               	movwf	writeVoltages@volts^(0+256)
  5849                           
  5850                           ;uart.c: 19: for(int k = 0; k < length; k++){
  5851  217B  01D9               	clrf	writeVoltages@k^(0+256)
  5852  217C  01DA               	clrf	(writeVoltages@k+1)^(0+256)
  5853  217D                     l223:	
  5854  217D  085A               	movf	(writeVoltages@k+1)^(0+256),w
  5855  217E  3A80               	xorlw	128
  5856  217F  00D6               	movwf	??_writeVoltages^(0+256)
  5857  2180  0855               	movf	(writeVoltages@length+1)^(0+256),w
  5858  2181  3A80               	xorlw	128
  5859  2182  0256               	subwf	??_writeVoltages^(0+256),w
  5860  2183  1D03               	skipz
  5861  2184  2987               	goto	u10095
  5862  2185  0854               	movf	writeVoltages@length^(0+256),w
  5863  2186  0259               	subwf	writeVoltages@k^(0+256),w
  5864  2187                     u10095:	
  5865  2187  1803               	btfsc	3,0
  5866  2188  0008               	return
  5867                           
  5868                           ;uart.c: 20: sprintf(&str[0], "V%i = %0.2fV\n\r", k+1, volts[k]);
  5869  2189  3022               	movlw	low (STR_1| (0+32768))
  5870  218A  0022               	movlb	2	; select bank2
  5871  218B  00AB               	movwf	sprintf@f^(0+256)
  5872  218C  30B0               	movlw	high (STR_1| (0+32768))
  5873  218D  00AC               	movwf	(sprintf@f^(0+256)+1)
  5874  218E  0859               	movf	writeVoltages@k^(0+256),w
  5875  218F  3E01               	addlw	1
  5876  2190  00AD               	movwf	(?_sprintf^(0+256)+2)
  5877  2191  3000               	movlw	0
  5878  2192  3D5A               	addwfc	(writeVoltages@k+1)^(0+256),w
  5879  2193  00AE               	movwf	((?_sprintf+1)^(0+256)+2)
  5880  2194  0859               	movf	writeVoltages@k^(0+256),w
  5881  2195  00D6               	movwf	??_writeVoltages^(0+256)
  5882  2196  3001               	movlw	1
  5883  2197                     u10075:	
  5884  2197  35D6               	lslf	??_writeVoltages^(0+256),f
  5885  2198  3EFF               	addlw	-1
  5886  2199  1D03               	skipz
  5887  219A  2997               	goto	u10075
  5888  219B  3556               	lslf	??_writeVoltages^(0+256),w
  5889  219C  0758               	addwf	writeVoltages@volts^(0+256),w
  5890  219D  00D7               	movwf	(??_writeVoltages+1)^(0+256)
  5891  219E  0857               	movf	(??_writeVoltages+1)^(0+256),w
  5892  219F  0086               	movwf	6
  5893  21A0  3001               	movlw	1	; select bank2/3
  5894  21A1  0087               	movwf	7
  5895  21A2  3F40               	moviw [0]fsr1
  5896  21A3  00AF               	movwf	(?_sprintf^(0+256)+4)
  5897  21A4  3F41               	moviw [1]fsr1
  5898  21A5  00B0               	movwf	((?_sprintf+1)^(0+256)+4)
  5899  21A6  3F42               	moviw [2]fsr1
  5900  21A7  00B1               	movwf	((?_sprintf+2)^(0+256)+4)
  5901  21A8  3F43               	moviw [3]fsr1
  5902  21A9  00B2               	movwf	((?_sprintf+3)^(0+256)+4)
  5903  21AA  3038               	movlw	(low (_str| (0+512)))& (0+255)
  5904  21AB  3180  20A7  31A1   	fcall	_sprintf
  5905                           
  5906                           ;uart.c: 21: uartEnable();
  5907  21AE  31AF  276B  31A1   	fcall	_uartEnable
  5908  21B1                     l225:	
  5909                           ;uart.c: 22: while(PIE1bits.TXIE);
  5910                           
  5911  21B1  0021               	movlb	1	; select bank1
  5912  21B2  1A11               	btfsc	17,4	;volatile
  5913  21B3  29B1               	goto	l225
  5914  21B4  3001               	movlw	1
  5915  21B5  0022               	movlb	2	; select bank2
  5916  21B6  07D9               	addwf	writeVoltages@k^(0+256),f
  5917  21B7  3000               	movlw	0
  5918  21B8  3DDA               	addwfc	(writeVoltages@k+1)^(0+256),f
  5919  21B9  297D               	goto	l223
  5920  21BA                     __end_of_writeVoltages:	
  5921                           
  5922                           	psect	text3
  5923  2242                     __ptext3:	
  5924 ;; *************** function _writeTemps *****************
  5925 ;; Defined at:
  5926 ;;		line 31 in file "uart.c"
  5927 ;; Parameters:    Size  Location     Type
  5928 ;;  temps           1    wreg     PTR int 
  5929 ;;		 -> temps(6), 
  5930 ;;  highestTemp     2   52[BANK2 ] int 
  5931 ;;  numTemps        2   54[BANK2 ] int 
  5932 ;; Auto vars:     Size  Location     Type
  5933 ;;  temps           1   57[BANK2 ] PTR int 
  5934 ;;		 -> temps(6), 
  5935 ;;  k               2   58[BANK2 ] int 
  5936 ;; Return value:  Size  Location     Type
  5937 ;;                  1    wreg      void 
  5938 ;; Registers used:
  5939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5940 ;; Tracked objects:
  5941 ;;		On entry : 0/0
  5942 ;;		On exit  : 0/0
  5943 ;;		Unchanged: 0/0
  5944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5945 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5946 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5947 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5948 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5949 ;;Total ram usage:        8 bytes
  5950 ;; Hardware stack levels used:    1
  5951 ;; Hardware stack levels required when called:    6
  5952 ;; This function calls:
  5953 ;;		_sprintf
  5954 ;;		_uartEnable
  5955 ;; This function is called by:
  5956 ;;		_writeValuesToUart
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           
  5961                           ;psect for function _writeTemps
  5962  2242                     _writeTemps:	
  5963                           
  5964                           ;incstack = 0
  5965                           ; Regs used in _writeTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5966                           ;writeTemps@temps stored from wreg
  5967  2242  0022               	movlb	2	; select bank2
  5968  2243  00D9               	movwf	writeTemps@temps^(0+256)
  5969                           
  5970                           ;uart.c: 32: for(int k = 0; k<numTemps; k++){
  5971  2244  01DA               	clrf	writeTemps@k^(0+256)
  5972  2245  01DB               	clrf	(writeTemps@k+1)^(0+256)
  5973  2246                     l238:	
  5974  2246  085B               	movf	(writeTemps@k+1)^(0+256),w
  5975  2247  3A80               	xorlw	128
  5976  2248  00D8               	movwf	??_writeTemps^(0+256)
  5977  2249  0857               	movf	(writeTemps@numTemps+1)^(0+256),w
  5978  224A  3A80               	xorlw	128
  5979  224B  0258               	subwf	??_writeTemps^(0+256),w
  5980  224C  1D03               	skipz
  5981  224D  2A50               	goto	u10115
  5982  224E  0856               	movf	writeTemps@numTemps^(0+256),w
  5983  224F  025A               	subwf	writeTemps@k^(0+256),w
  5984  2250                     u10115:	
  5985  2250  1803               	btfsc	3,0
  5986  2251  2A79               	goto	l7115
  5987                           
  5988                           ;uart.c: 33: sprintf(&str[n], "Temp%i = %iC\n\r", k+1, temps[k]);
  5989  2252  3013               	movlw	low (STR_3| (0+32768))
  5990  2253  0022               	movlb	2	; select bank2
  5991  2254  00AB               	movwf	sprintf@f^(0+256)
  5992  2255  30B0               	movlw	high (STR_3| (0+32768))
  5993  2256  00AC               	movwf	(sprintf@f^(0+256)+1)
  5994  2257  085A               	movf	writeTemps@k^(0+256),w
  5995  2258  3E01               	addlw	1
  5996  2259  00AD               	movwf	(?_sprintf^(0+256)+2)
  5997  225A  3000               	movlw	0
  5998  225B  3D5B               	addwfc	(writeTemps@k+1)^(0+256),w
  5999  225C  00AE               	movwf	((?_sprintf+1)^(0+256)+2)
  6000  225D  355A               	lslf	writeTemps@k^(0+256),w
  6001  225E  0759               	addwf	writeTemps@temps^(0+256),w
  6002  225F  00D8               	movwf	??_writeTemps^(0+256)
  6003  2260  0858               	movf	??_writeTemps^(0+256),w
  6004  2261  0086               	movwf	6
  6005  2262  3001               	movlw	1	; select bank2/3
  6006  2263  0087               	movwf	7
  6007  2264  3F40               	moviw [0]fsr1
  6008  2265  00AF               	movwf	(?_sprintf^(0+256)+4)
  6009  2266  3F41               	moviw [1]fsr1
  6010  2267  00B0               	movwf	((?_sprintf+1)^(0+256)+4)
  6011  2268  0862               	movf	_n^(0+256),w
  6012  2269  3E38               	addlw	(low (_str| (0+512)))& (0+255)
  6013  226A  3180  20A7  31A2   	fcall	_sprintf
  6014                           
  6015                           ;uart.c: 34: uartEnable();
  6016  226D  31AF  276B  31A2   	fcall	_uartEnable
  6017  2270                     l240:	
  6018                           ;uart.c: 35: while(PIE1bits.TXIE);
  6019                           
  6020  2270  0021               	movlb	1	; select bank1
  6021  2271  1A11               	btfsc	17,4	;volatile
  6022  2272  2A70               	goto	l240
  6023  2273  3001               	movlw	1
  6024  2274  0022               	movlb	2	; select bank2
  6025  2275  07DA               	addwf	writeTemps@k^(0+256),f
  6026  2276  3000               	movlw	0
  6027  2277  3DDB               	addwfc	(writeTemps@k+1)^(0+256),f
  6028  2278  2A46               	goto	l238
  6029  2279                     l7115:	
  6030                           
  6031                           ;uart.c: 36: }
  6032                           ;uart.c: 39: sprintf(&str[0], "Highest Temp: %iC\n\r", highestTemp);
  6033  2279  3024               	movlw	low (STR_4| (0+32768))
  6034  227A  0022               	movlb	2	; select bank2
  6035  227B  00AB               	movwf	sprintf@f^(0+256)
  6036  227C  30A8               	movlw	high (STR_4| (0+32768))
  6037  227D  00AC               	movwf	(sprintf@f^(0+256)+1)
  6038  227E  0855               	movf	(writeTemps@highestTemp+1)^(0+256),w
  6039  227F  00AE               	movwf	((?_sprintf+1)^(0+256)+2)
  6040  2280  0854               	movf	writeTemps@highestTemp^(0+256),w
  6041  2281  00AD               	movwf	(?_sprintf^(0+256)+2)
  6042  2282  3038               	movlw	(low (_str| (0+512)))& (0+255)
  6043  2283  3180  20A7  31A2   	fcall	_sprintf
  6044                           
  6045                           ;uart.c: 40: uartEnable();
  6046  2286  31AF  276B  31A2   	fcall	_uartEnable
  6047  2289                     l244:	
  6048                           ;uart.c: 41: while(PIE1bits.TXIE);
  6049                           
  6050  2289  0021               	movlb	1	; select bank1
  6051  228A  1E11               	btfss	17,4	;volatile
  6052  228B  0008               	return
  6053  228C  2A89               	goto	l244
  6054  228D                     __end_of_writeTemps:	
  6055                           
  6056                           	psect	text4
  6057  200F                     __ptext4:	
  6058 ;; *************** function _writeCurrent *****************
  6059 ;; Defined at:
  6060 ;;		line 26 in file "uart.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  current         4   52[BANK2 ] float 
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6074 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6077 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6078 ;;Total ram usage:        4 bytes
  6079 ;; Hardware stack levels used:    1
  6080 ;; Hardware stack levels required when called:    6
  6081 ;; This function calls:
  6082 ;;		_sprintf
  6083 ;;		_uartEnable
  6084 ;; This function is called by:
  6085 ;;		_writeValuesToUart
  6086 ;; This function uses a non-reentrant model
  6087 ;;
  6088                           
  6089                           
  6090                           ;psect for function _writeCurrent
  6091  200F                     _writeCurrent:	
  6092                           
  6093                           ;uart.c: 27: sprintf(&str[0], "current = %0.2fA\n\r", current);
  6094                           
  6095                           ;incstack = 0
  6096                           ; Regs used in _writeCurrent: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6097  200F  3000               	movlw	low (STR_2| (0+32768))
  6098  2010  0022               	movlb	2	; select bank2
  6099  2011  00AB               	movwf	sprintf@f^(0+256)
  6100  2012  30B0               	movlw	high (STR_2| (0+32768))
  6101  2013  00AC               	movwf	(sprintf@f^(0+256)+1)
  6102  2014  0857               	movf	(writeCurrent@current+3)^(0+256),w
  6103  2015  00B0               	movwf	((?_sprintf+3)^(0+256)+2)
  6104  2016  0856               	movf	(writeCurrent@current+2)^(0+256),w
  6105  2017  00AF               	movwf	((?_sprintf+2)^(0+256)+2)
  6106  2018  0855               	movf	(writeCurrent@current+1)^(0+256),w
  6107  2019  00AE               	movwf	((?_sprintf+1)^(0+256)+2)
  6108  201A  0854               	movf	writeCurrent@current^(0+256),w
  6109  201B  00AD               	movwf	(?_sprintf^(0+256)+2)
  6110  201C  3038               	movlw	(low (_str| (0+512)))& (0+255)
  6111  201D  3180  20A7  31A0   	fcall	_sprintf
  6112                           
  6113                           ;uart.c: 28: uartEnable();
  6114  2020  31AF  276B  31A0   	fcall	_uartEnable
  6115  2023                     l232:	
  6116                           ;uart.c: 29: while(PIE1bits.TXIE);
  6117                           
  6118  2023  0021               	movlb	1	; select bank1
  6119  2024  1E11               	btfss	17,4	;volatile
  6120  2025  0008               	return
  6121  2026  2823               	goto	l232
  6122  2027                     __end_of_writeCurrent:	
  6123                           
  6124                           	psect	text5
  6125  20FF                     __ptext5:	
  6126 ;; *************** function _clearScreen *****************
  6127 ;; Defined at:
  6128 ;;		line 44 in file "uart.c"
  6129 ;; Parameters:    Size  Location     Type
  6130 ;;  numLines        2   52[BANK2 ] int 
  6131 ;; Auto vars:     Size  Location     Type
  6132 ;;  j               2   57[BANK2 ] int 
  6133 ;; Return value:  Size  Location     Type
  6134 ;;                  1    wreg      void 
  6135 ;; Registers used:
  6136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6137 ;; Tracked objects:
  6138 ;;		On entry : 0/0
  6139 ;;		On exit  : 0/0
  6140 ;;		Unchanged: 0/0
  6141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6142 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6143 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6144 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6145 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6146 ;;Total ram usage:        7 bytes
  6147 ;; Hardware stack levels used:    1
  6148 ;; Hardware stack levels required when called:    6
  6149 ;; This function calls:
  6150 ;;		_sprintf
  6151 ;;		_uartEnable
  6152 ;; This function is called by:
  6153 ;;		_writeValuesToUart
  6154 ;; This function uses a non-reentrant model
  6155 ;;
  6156                           
  6157                           
  6158                           ;psect for function _clearScreen
  6159  20FF                     _clearScreen:	
  6160                           
  6161                           ;uart.c: 45: int j = 0;
  6162                           
  6163                           ;incstack = 0
  6164                           ; Regs used in _clearScreen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6165  20FF  0022               	movlb	2	; select bank2
  6166  2100  01D9               	clrf	clearScreen@j^(0+256)
  6167  2101  01DA               	clrf	(clearScreen@j+1)^(0+256)
  6168                           
  6169                           ;uart.c: 47: for(j = 0; j < numLines-1; j++){
  6170  2102  01D9               	clrf	clearScreen@j^(0+256)
  6171  2103  01DA               	clrf	(clearScreen@j+1)^(0+256)
  6172  2104                     l7093:	
  6173  2104  0854               	movf	clearScreen@numLines^(0+256),w
  6174  2105  3EFF               	addlw	255
  6175  2106  00D6               	movwf	??_clearScreen^(0+256)
  6176  2107  30FF               	movlw	255
  6177  2108  3D55               	addwfc	(clearScreen@numLines+1)^(0+256),w
  6178  2109  00D7               	movwf	(??_clearScreen+1)^(0+256)
  6179  210A  085A               	movf	(clearScreen@j+1)^(0+256),w
  6180  210B  3A80               	xorlw	128
  6181  210C  00D8               	movwf	(??_clearScreen+2)^(0+256)
  6182  210D  0857               	movf	(??_clearScreen+1)^(0+256),w
  6183  210E  3A80               	xorlw	128
  6184  210F  0258               	subwf	(??_clearScreen+2)^(0+256),w
  6185  2110  1D03               	skipz
  6186  2111  2914               	goto	u10055
  6187  2112  0856               	movf	??_clearScreen^(0+256),w
  6188  2113  0259               	subwf	clearScreen@j^(0+256),w
  6189  2114                     u10055:	
  6190  2114  1803               	btfsc	3,0
  6191  2115  292B               	goto	l7095
  6192                           
  6193                           ;uart.c: 48: sprintf(&str[0], "\33[2K \033[A");
  6194  2116  303C               	movlw	low (STR_5| (0+32768))
  6195  2117  0022               	movlb	2	; select bank2
  6196  2118  00AB               	movwf	sprintf@f^(0+256)
  6197  2119  30B0               	movlw	high (STR_5| (0+32768))
  6198  211A  00AC               	movwf	(sprintf@f^(0+256)+1)
  6199  211B  3038               	movlw	(low (_str| (0+512)))& (0+255)
  6200  211C  3180  20A7  31A0   	fcall	_sprintf
  6201                           
  6202                           ;uart.c: 49: uartEnable();
  6203  211F  31AF  276B  31A0   	fcall	_uartEnable
  6204  2122                     l252:	
  6205                           ;uart.c: 50: while(PIE1bits.TXIE);
  6206                           
  6207  2122  0021               	movlb	1	; select bank1
  6208  2123  1A11               	btfsc	17,4	;volatile
  6209  2124  2922               	goto	l252
  6210  2125  3001               	movlw	1
  6211  2126  0022               	movlb	2	; select bank2
  6212  2127  07D9               	addwf	clearScreen@j^(0+256),f
  6213  2128  3000               	movlw	0
  6214  2129  3DDA               	addwfc	(clearScreen@j+1)^(0+256),f
  6215  212A  2904               	goto	l7093
  6216  212B                     l7095:	
  6217                           
  6218                           ;uart.c: 51: }
  6219                           ;uart.c: 53: sprintf(&str[0], "\33[2K \033[A \r");
  6220  212B  3031               	movlw	low (STR_6| (0+32768))
  6221  212C  0022               	movlb	2	; select bank2
  6222  212D  00AB               	movwf	sprintf@f^(0+256)
  6223  212E  30B0               	movlw	high (STR_6| (0+32768))
  6224  212F  00AC               	movwf	(sprintf@f^(0+256)+1)
  6225  2130  3038               	movlw	(low (_str| (0+512)))& (0+255)
  6226  2131  3180  20A7  31A0   	fcall	_sprintf
  6227                           
  6228                           ;uart.c: 54: uartEnable();
  6229  2134  31AF  276B  31A0   	fcall	_uartEnable
  6230  2137                     l256:	
  6231                           ;uart.c: 55: while(PIE1bits.TXIE);
  6232                           
  6233  2137  0021               	movlb	1	; select bank1
  6234  2138  1E11               	btfss	17,4	;volatile
  6235  2139  0008               	return
  6236  213A  2937               	goto	l256
  6237  213B                     __end_of_clearScreen:	
  6238                           
  6239                           	psect	text6
  6240  2F6B                     __ptext6:	
  6241 ;; *************** function _uartEnable *****************
  6242 ;; Defined at:
  6243 ;;		line 58 in file "uart.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;		None
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		None
  6252 ;; Tracked objects:
  6253 ;;		On entry : 0/0
  6254 ;;		On exit  : 0/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6261 ;;Total ram usage:        0 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    2
  6264 ;; This function calls:
  6265 ;;		Nothing
  6266 ;; This function is called by:
  6267 ;;		_writeVoltages
  6268 ;;		_writeCurrent
  6269 ;;		_writeTemps
  6270 ;;		_clearScreen
  6271 ;; This function uses a non-reentrant model
  6272 ;;
  6273                           
  6274                           
  6275                           ;psect for function _uartEnable
  6276  2F6B                     _uartEnable:	
  6277                           
  6278                           ;uart.c: 59: PIE1bits.TXIE = 1;
  6279                           
  6280                           ;incstack = 0
  6281                           ; Regs used in _uartEnable: []
  6282  2F6B  0021               	movlb	1	; select bank1
  6283  2F6C  1611               	bsf	17,4	;volatile
  6284  2F6D  0008               	return
  6285  2F6E                     __end_of_uartEnable:	
  6286                           
  6287                           	psect	text7
  6288  00A7                     __ptext7:	
  6289 ;; *************** function _sprintf *****************
  6290 ;; Defined at:
  6291 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  6292 ;; Parameters:    Size  Location     Type
  6293 ;;  sp              1    wreg     PTR unsigned char 
  6294 ;;		 -> str(50), 
  6295 ;;  f               2   11[BANK2 ] PTR const unsigned char 
  6296 ;;		 -> STR_6(11), STR_5(9), STR_4(20), STR_3(15), 
  6297 ;;		 -> STR_2(19), STR_1(15), 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;  sp              1   50[BANK2 ] PTR unsigned char 
  6300 ;;		 -> str(50), 
  6301 ;;  fval            4   44[BANK2 ] PTR unsigned char 
  6302 ;;  val             4   34[BANK2 ] unsigned long 
  6303 ;;  tmpval          4   30[BANK2 ] struct .
  6304 ;;  prec            2   48[BANK2 ] int 
  6305 ;;  width           2   42[BANK2 ] int 
  6306 ;;  flag            2   40[BANK2 ] unsigned short 
  6307 ;;  exp             2   38[BANK2 ] int 
  6308 ;;  cp              2    0        PTR const unsigned char 
  6309 ;;  len             2    0        unsigned int 
  6310 ;;  c               1   51[BANK2 ] char 
  6311 ;;  ap              1   29[BANK2 ] PTR void [1]
  6312 ;;		 -> ?_sprintf(2), 
  6313 ;;  d               1    0        unsigned char 
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  2   11[BANK2 ] int 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 0/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6323 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6324 ;;      Locals:         0       0       0      27       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6325 ;;      Temps:          0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6326 ;;      Totals:         0       0       0      41       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6327 ;;Total ram usage:       41 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    5
  6330 ;; This function calls:
  6331 ;;		___awdiv
  6332 ;;		___fladd
  6333 ;;		___flge
  6334 ;;		___flmul
  6335 ;;		___flneg
  6336 ;;		___flsub
  6337 ;;		___fltol
  6338 ;;		___lldiv
  6339 ;;		___llmod
  6340 ;;		___wmul
  6341 ;;		___xxtofl
  6342 ;;		__div_to_l_
  6343 ;;		__tdiv_to_l_
  6344 ;;		_fround
  6345 ;;		_isdigit
  6346 ;;		_scale
  6347 ;; This function is called by:
  6348 ;;		_writeVoltages
  6349 ;;		_writeCurrent
  6350 ;;		_writeTemps
  6351 ;;		_clearScreen
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           
  6356                           ;psect for function _sprintf
  6357  00A7                     _sprintf:	
  6358                           
  6359                           ;incstack = 0
  6360                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6361                           ;sprintf@sp stored from wreg
  6362  00A7  0022               	movlb	2	; select bank2
  6363  00A8  00D2               	movwf	sprintf@sp^(0+256)
  6364                           
  6365                           ;doprnt.c: 494: va_list ap;
  6366                           ;doprnt.c: 499: signed char c;
  6367                           ;doprnt.c: 501: int width;
  6368                           ;doprnt.c: 504: int prec;
  6369                           ;doprnt.c: 508: unsigned short flag;
  6370                           ;doprnt.c: 515: char d;
  6371                           ;doprnt.c: 516: double fval;
  6372                           ;doprnt.c: 517: int exp;
  6373                           ;doprnt.c: 523: union {
  6374                           ;doprnt.c: 524: unsigned long vd;
  6375                           ;doprnt.c: 525: double integ;
  6376                           ;doprnt.c: 526: } tmpval;
  6377                           ;doprnt.c: 528: unsigned long val;
  6378                           ;doprnt.c: 529: unsigned len;
  6379                           ;doprnt.c: 530: const char * cp;
  6380                           ;doprnt.c: 533: *ap = __va_start();
  6381  00A9  302D               	movlw	(low ((?_sprintf| (0+256)+2)))& (0+255)
  6382  00AA  00B3               	movwf	??_sprintf^(0+256)
  6383  00AB  0833               	movf	??_sprintf^(0+256),w
  6384  00AC  00BD               	movwf	sprintf@ap^(0+256)
  6385  00AD                     l6911:	
  6386                           ;doprnt.c: 536: while(c = *f++) {
  6387                           
  6388  00AD  082C               	movf	(sprintf@f+1)^(0+256),w
  6389  00AE  00B4               	movwf	(??_sprintf^(0+256)+1)
  6390  00AF  082B               	movf	sprintf@f^(0+256),w
  6391  00B0  00B3               	movwf	??_sprintf^(0+256)
  6392  00B1  0AAB               	incf	sprintf@f^(0+256),f
  6393  00B2  1903               	skipnz
  6394  00B3  0AAC               	incf	(sprintf@f+1)^(0+256),f
  6395  00B4  0833               	movf	??_sprintf^(0+256),w
  6396  00B5  0084               	movwf	4
  6397  00B6  0834               	movf	(??_sprintf+1)^(0+256),w
  6398  00B7  0085               	movwf	5
  6399  00B8  0800               	movf	0,w	;code access
  6400  00B9  00B5               	movwf	(??_sprintf+2)^(0+256)
  6401  00BA  0835               	movf	(??_sprintf+2)^(0+256),w
  6402  00BB  00D3               	movwf	sprintf@c^(0+256)
  6403  00BC  0853               	movf	sprintf@c^(0+256),w
  6404  00BD  1903               	btfsc	3,2
  6405  00BE  2FC3               	goto	l6913
  6406                           
  6407                           ;doprnt.c: 538: if(c != '%')
  6408  00BF  3025               	movlw	37
  6409  00C0  0653               	xorwf	sprintf@c^(0+256),w
  6410  00C1  1903               	btfsc	3,2
  6411  00C2  28D0               	goto	l6601
  6412                           
  6413                           ;doprnt.c: 540: {
  6414                           ;doprnt.c: 541: ((*sp++ = (c)));
  6415  00C3  0853               	movf	sprintf@c^(0+256),w
  6416  00C4  00B3               	movwf	??_sprintf^(0+256)
  6417  00C5  0852               	movf	sprintf@sp^(0+256),w
  6418  00C6  0086               	movwf	6
  6419  00C7  3002               	movlw	2	; select bank4/5
  6420  00C8  0087               	movwf	7
  6421  00C9  0833               	movf	??_sprintf^(0+256),w
  6422  00CA  0081               	movwf	1
  6423  00CB  3001               	movlw	1
  6424  00CC  00B3               	movwf	??_sprintf^(0+256)
  6425  00CD  0833               	movf	??_sprintf^(0+256),w
  6426  00CE  07D2               	addwf	sprintf@sp^(0+256),f
  6427                           
  6428                           ;doprnt.c: 542: continue;
  6429  00CF  28AD               	goto	l6911
  6430  00D0                     l6601:	
  6431                           
  6432                           ;doprnt.c: 543: }
  6433                           ;doprnt.c: 546: width = 0;
  6434  00D0  01CA               	clrf	sprintf@width^(0+256)
  6435  00D1  01CB               	clrf	(sprintf@width+1)^(0+256)
  6436                           
  6437                           ;doprnt.c: 548: flag = 0;
  6438  00D2  01C8               	clrf	sprintf@flag^(0+256)
  6439  00D3  01C9               	clrf	(sprintf@flag+1)^(0+256)
  6440                           
  6441                           ;doprnt.c: 551: switch(*f) {
  6442                           
  6443                           ;doprnt.c: 550: for(;;) {
  6444  00D4  28DA               	goto	l6607
  6445  00D5                     l631:	
  6446                           ;doprnt.c: 579: case '0':
  6447                           
  6448                           
  6449                           ;doprnt.c: 580: flag |= 0x04;
  6450  00D5  1548               	bsf	sprintf@flag^(0+256),2
  6451                           
  6452                           ;doprnt.c: 581: f++;
  6453  00D6  3001               	movlw	1
  6454  00D7  07AB               	addwf	sprintf@f^(0+256),f
  6455  00D8  3000               	movlw	0
  6456  00D9  3DAC               	addwfc	(sprintf@f+1)^(0+256),f
  6457  00DA                     l6607:	
  6458                           ;doprnt.c: 584: }
  6459                           
  6460                           ;doprnt.c: 582: continue;
  6461                           
  6462  00DA  082B               	movf	sprintf@f^(0+256),w
  6463  00DB  0084               	movwf	4
  6464  00DC  082C               	movf	(sprintf@f+1)^(0+256),w
  6465  00DD  0085               	movwf	5
  6466  00DE  0800               	movf	0,w	;code access
  6467                           
  6468                           ; Switch size 1, requested type "space"
  6469                           ; Number of cases is 1, Range of values is 48 to 48
  6470                           ; switch strategies available:
  6471                           ; Name         Instructions Cycles
  6472                           ; simple_byte            4     3 (average)
  6473                           ; direct_byte           11     9 (fixed)
  6474                           ; jumptable            263     9 (fixed)
  6475                           ;	Chosen strategy is simple_byte
  6476  00DF  3A30               	xorlw	48	; case 48
  6477  00E0  1903               	skipnz
  6478  00E1  28D5               	goto	l631
  6479  00E2  28E3               	goto	l6609
  6480  00E3                     l6609:	
  6481                           ;doprnt.c: 586: }
  6482                           
  6483                           ;doprnt.c: 585: break;
  6484                           
  6485                           
  6486                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  6487  00E3  082B               	movf	sprintf@f^(0+256),w
  6488  00E4  0084               	movwf	4
  6489  00E5  082C               	movf	(sprintf@f+1)^(0+256),w
  6490  00E6  0085               	movwf	5
  6491  00E7  0800               	movf	0,w	;code access
  6492  00E8  3190  2000  3180   	fcall	_isdigit
  6493  00EB  1C03               	btfss	3,0
  6494  00EC  291E               	goto	l6621
  6495                           
  6496                           ;doprnt.c: 598: width = 0;
  6497  00ED  0022               	movlb	2	; select bank2
  6498  00EE  01CA               	clrf	sprintf@width^(0+256)
  6499  00EF  01CB               	clrf	(sprintf@width+1)^(0+256)
  6500  00F0                     l6613:	
  6501                           ;doprnt.c: 599: do {
  6502                           
  6503                           
  6504                           ;doprnt.c: 600: width *= 10;
  6505  00F0  300A               	movlw	10
  6506  00F1  00F2               	movwf	___wmul@multiplier
  6507  00F2  3000               	movlw	0
  6508  00F3  00F3               	movwf	___wmul@multiplier+1
  6509  00F4  0022               	movlb	2	; select bank2
  6510  00F5  084B               	movf	(sprintf@width+1)^(0+256),w
  6511  00F6  00F5               	movwf	___wmul@multiplicand+1
  6512  00F7  084A               	movf	sprintf@width^(0+256),w
  6513  00F8  00F4               	movwf	___wmul@multiplicand
  6514  00F9  31A0  2075  3180   	fcall	___wmul
  6515  00FC  0873               	movf	?___wmul+1,w
  6516  00FD  0022               	movlb	2	; select bank2
  6517  00FE  00CB               	movwf	(sprintf@width+1)^(0+256)
  6518  00FF  0872               	movf	?___wmul,w
  6519  0100  00CA               	movwf	sprintf@width^(0+256)
  6520                           
  6521                           ;doprnt.c: 601: width += *f++ - '0';
  6522  0101  082B               	movf	sprintf@f^(0+256),w
  6523  0102  0084               	movwf	4
  6524  0103  082C               	movf	(sprintf@f+1)^(0+256),w
  6525  0104  0085               	movwf	5
  6526  0105  0800               	movf	0,w	;code access
  6527  0106  3ED0               	addlw	208
  6528  0107  00B3               	movwf	??_sprintf^(0+256)
  6529  0108  30FF               	movlw	255
  6530  0109  1803               	skipnc
  6531  010A  3000               	movlw	0
  6532  010B  00B4               	movwf	(??_sprintf^(0+256)+1)
  6533  010C  0833               	movf	??_sprintf^(0+256),w
  6534  010D  07CA               	addwf	sprintf@width^(0+256),f
  6535  010E  0834               	movf	(??_sprintf+1)^(0+256),w
  6536  010F  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  6537  0110  3001               	movlw	1
  6538  0111  07AB               	addwf	sprintf@f^(0+256),f
  6539  0112  3000               	movlw	0
  6540  0113  3DAC               	addwfc	(sprintf@f+1)^(0+256),f
  6541                           
  6542                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  6543  0114  082B               	movf	sprintf@f^(0+256),w
  6544  0115  0084               	movwf	4
  6545  0116  082C               	movf	(sprintf@f+1)^(0+256),w
  6546  0117  0085               	movwf	5
  6547  0118  0800               	movf	0,w	;code access
  6548  0119  3190  2000  3180   	fcall	_isdigit
  6549  011C  1803               	btfsc	3,0
  6550  011D  28F0               	goto	l6613
  6551  011E                     l6621:	
  6552                           
  6553                           ;doprnt.c: 608: }
  6554                           ;doprnt.c: 611: if(*f == '.') {
  6555  011E  0022               	movlb	2	; select bank2
  6556  011F  082B               	movf	sprintf@f^(0+256),w
  6557  0120  0084               	movwf	4
  6558  0121  082C               	movf	(sprintf@f+1)^(0+256),w
  6559  0122  0085               	movwf	5
  6560  0123  0012               	moviw fsr0++
  6561  0124  3A2E               	xorlw	46
  6562  0125  1D03               	btfss	3,2
  6563  0126  295D               	goto	l6635
  6564                           
  6565                           ;doprnt.c: 612: flag |= 0x4000;
  6566  0127  1749               	bsf	(sprintf@flag^(0+256)+1),6
  6567                           
  6568                           ;doprnt.c: 613: f++;
  6569  0128  3001               	movlw	1
  6570  0129  07AB               	addwf	sprintf@f^(0+256),f
  6571  012A  3000               	movlw	0
  6572  012B  3DAC               	addwfc	(sprintf@f+1)^(0+256),f
  6573                           
  6574                           ;doprnt.c: 620: {
  6575                           ;doprnt.c: 621: prec = 0;
  6576  012C  01D0               	clrf	sprintf@prec^(0+256)
  6577  012D  01D1               	clrf	(sprintf@prec+1)^(0+256)
  6578  012E                     l6633:	
  6579                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  6580                           
  6581  012E  082B               	movf	sprintf@f^(0+256),w
  6582  012F  0084               	movwf	4
  6583  0130  082C               	movf	(sprintf@f+1)^(0+256),w
  6584  0131  0085               	movwf	5
  6585  0132  0800               	movf	0,w	;code access
  6586  0133  3190  2000  3180   	fcall	_isdigit
  6587  0136  1C03               	btfss	3,0
  6588  0137  2964               	goto	l6641
  6589                           
  6590                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  6591  0138  0022               	movlb	2	; select bank2
  6592  0139  082B               	movf	sprintf@f^(0+256),w
  6593  013A  0084               	movwf	4
  6594  013B  082C               	movf	(sprintf@f+1)^(0+256),w
  6595  013C  0085               	movwf	5
  6596  013D  0800               	movf	0,w	;code access
  6597  013E  00B3               	movwf	??_sprintf^(0+256)
  6598  013F  01B4               	clrf	(??_sprintf^(0+256)+1)
  6599  0140  0851               	movf	(sprintf@prec+1)^(0+256),w
  6600  0141  00F3               	movwf	___wmul@multiplier+1
  6601  0142  0850               	movf	sprintf@prec^(0+256),w
  6602  0143  00F2               	movwf	___wmul@multiplier
  6603  0144  300A               	movlw	10
  6604  0145  00F4               	movwf	___wmul@multiplicand
  6605  0146  3000               	movlw	0
  6606  0147  00F5               	movwf	___wmul@multiplicand+1
  6607  0148  31A0  2075  3180   	fcall	___wmul
  6608  014B  0022               	movlb	2	; select bank2
  6609  014C  0833               	movf	??_sprintf^(0+256),w
  6610  014D  0772               	addwf	?___wmul,w
  6611  014E  00B5               	movwf	(??_sprintf+2)^(0+256)
  6612  014F  0834               	movf	(??_sprintf+1)^(0+256),w
  6613  0150  3D73               	addwfc	?___wmul+1,w
  6614  0151  00B6               	movwf	(??_sprintf+3)^(0+256)
  6615  0152  0835               	movf	(??_sprintf+2)^(0+256),w
  6616  0153  3ED0               	addlw	208
  6617  0154  00D0               	movwf	sprintf@prec^(0+256)
  6618  0155  30FF               	movlw	255
  6619  0156  3D36               	addwfc	(??_sprintf+3)^(0+256),w
  6620  0157  00D1               	movwf	(sprintf@prec+1)^(0+256)
  6621  0158  3001               	movlw	1
  6622  0159  07AB               	addwf	sprintf@f^(0+256),f
  6623  015A  3000               	movlw	0
  6624  015B  3DAC               	addwfc	(sprintf@f+1)^(0+256),f
  6625  015C  292E               	goto	l6633
  6626  015D                     l6635:	
  6627                           ;doprnt.c: 624: }
  6628                           ;doprnt.c: 625: } else {
  6629                           
  6630                           
  6631                           ;doprnt.c: 626: prec = 0;
  6632  015D  0022               	movlb	2	; select bank2
  6633  015E  01D0               	clrf	sprintf@prec^(0+256)
  6634  015F  01D1               	clrf	(sprintf@prec+1)^(0+256)
  6635                           
  6636                           ;doprnt.c: 628: flag |= 0x1000;
  6637  0160  1649               	bsf	(sprintf@flag^(0+256)+1),4
  6638                           
  6639                           ;doprnt.c: 630: }
  6640                           ;doprnt.c: 635: switch(c = *f++) {
  6641  0161  2964               	goto	l6641
  6642  0162                     l646:	
  6643                           ;doprnt.c: 662: case 'f':
  6644                           
  6645                           ;doprnt.c: 638: goto alldone;
  6646                           
  6647                           ;doprnt.c: 637: case 0:
  6648                           
  6649                           
  6650                           ;doprnt.c: 663: flag |= 0x400;
  6651  0162  1549               	bsf	(sprintf@flag^(0+256)+1),2
  6652                           
  6653                           ;doprnt.c: 698: case 'i':
  6654                           ;doprnt.c: 699: break;
  6655                           
  6656                           ;doprnt.c: 697: case 'd':
  6657                           
  6658                           ;doprnt.c: 664: break;
  6659  0163  297F               	goto	l6643
  6660  0164                     l6641:	
  6661                           ;doprnt.c: 822: }
  6662                           
  6663                           ;doprnt.c: 813: continue;
  6664                           
  6665                           ;doprnt.c: 802: default:
  6666                           
  6667  0164  0022               	movlb	2	; select bank2
  6668  0165  082C               	movf	(sprintf@f+1)^(0+256),w
  6669  0166  00B4               	movwf	(??_sprintf^(0+256)+1)
  6670  0167  082B               	movf	sprintf@f^(0+256),w
  6671  0168  00B3               	movwf	??_sprintf^(0+256)
  6672  0169  0AAB               	incf	sprintf@f^(0+256),f
  6673  016A  1903               	skipnz
  6674  016B  0AAC               	incf	(sprintf@f+1)^(0+256),f
  6675  016C  0833               	movf	??_sprintf^(0+256),w
  6676  016D  0084               	movwf	4
  6677  016E  0834               	movf	(??_sprintf+1)^(0+256),w
  6678  016F  0085               	movwf	5
  6679  0170  0800               	movf	0,w	;code access
  6680  0171  00D3               	movwf	sprintf@c^(0+256)
  6681                           
  6682                           ; Switch size 1, requested type "space"
  6683                           ; Number of cases is 4, Range of values is 0 to 105
  6684                           ; switch strategies available:
  6685                           ; Name         Instructions Cycles
  6686                           ; simple_byte           13     7 (average)
  6687                           ; direct_byte          218     6 (fixed)
  6688                           ; jumptable            260     6 (fixed)
  6689                           ;	Chosen strategy is simple_byte
  6690  0172  3A00               	xorlw	0	; case 0
  6691  0173  1903               	skipnz
  6692  0174  2FC3               	goto	l6913
  6693  0175  3A64               	xorlw	100	; case 100
  6694  0176  1903               	skipnz
  6695  0177  297F               	goto	l6643
  6696  0178  3A02               	xorlw	2	; case 102
  6697  0179  1903               	skipnz
  6698  017A  2962               	goto	l646
  6699  017B  3A0F               	xorlw	15	; case 105
  6700  017C  1903               	skipnz
  6701  017D  297F               	goto	l6643
  6702  017E  28AD               	goto	l6911
  6703  017F                     l6643:	
  6704                           
  6705                           ;doprnt.c: 825: if(flag & (0x700)) {
  6706  017F  3000               	movlw	0
  6707  0180  0548               	andwf	sprintf@flag^(0+256),w
  6708  0181  00B3               	movwf	??_sprintf^(0+256)
  6709  0182  3007               	movlw	7
  6710  0183  0549               	andwf	(sprintf@flag+1)^(0+256),w
  6711  0184  00B4               	movwf	(??_sprintf+1)^(0+256)
  6712  0185  0833               	movf	??_sprintf^(0+256),w
  6713  0186  0434               	iorwf	(??_sprintf^(0+256)+1),w
  6714  0187  1903               	btfsc	3,2
  6715  0188  2E42               	goto	l6819
  6716                           
  6717                           ;doprnt.c: 827: if(flag & 0x1000)
  6718  0189  1E49               	btfss	(sprintf@flag+1)^(0+256),4
  6719  018A  298F               	goto	l6649
  6720                           
  6721                           ;doprnt.c: 829: prec = 6;
  6722  018B  3006               	movlw	6
  6723  018C  00D0               	movwf	sprintf@prec^(0+256)
  6724  018D  3000               	movlw	0
  6725  018E  00D1               	movwf	(sprintf@prec^(0+256)+1)
  6726  018F                     l6649:	
  6727                           
  6728                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6729  018F  083D               	movf	sprintf@ap^(0+256),w
  6730  0190  0086               	movwf	6
  6731  0191  3001               	movlw	1	; select bank2/3
  6732  0192  0087               	movwf	7
  6733  0193  3F40               	moviw [0]fsr1
  6734  0194  00CC               	movwf	sprintf@fval^(0+256)
  6735  0195  3F41               	moviw [1]fsr1
  6736  0196  00CD               	movwf	(sprintf@fval+1)^(0+256)
  6737  0197  3F42               	moviw [2]fsr1
  6738  0198  00CE               	movwf	(sprintf@fval+2)^(0+256)
  6739  0199  3F43               	moviw [3]fsr1
  6740  019A  00CF               	movwf	(sprintf@fval+3)^(0+256)
  6741  019B  3004               	movlw	4
  6742  019C  00B3               	movwf	??_sprintf^(0+256)
  6743  019D  0833               	movf	??_sprintf^(0+256),w
  6744  019E  07BD               	addwf	sprintf@ap^(0+256),f
  6745                           
  6746                           ;doprnt.c: 831: if(fval < 0.0) {
  6747  019F  084F               	movf	(sprintf@fval+3)^(0+256),w
  6748  01A0  00F5               	movwf	___flge@ff1+3
  6749  01A1  084E               	movf	(sprintf@fval+2)^(0+256),w
  6750  01A2  00F4               	movwf	___flge@ff1+2
  6751  01A3  084D               	movf	(sprintf@fval+1)^(0+256),w
  6752  01A4  00F3               	movwf	___flge@ff1+1
  6753  01A5  084C               	movf	sprintf@fval^(0+256),w
  6754  01A6  00F2               	movwf	___flge@ff1
  6755  01A7  3000               	movlw	0
  6756  01A8  00F9               	movwf	___flge@ff2+3
  6757  01A9  3000               	movlw	0
  6758  01AA  00F8               	movwf	___flge@ff2+2
  6759  01AB  3000               	movlw	0
  6760  01AC  00F7               	movwf	___flge@ff2+1
  6761  01AD  3000               	movlw	0
  6762  01AE  00F6               	movwf	___flge@ff2
  6763  01AF  31A7  2766  3180   	fcall	___flge
  6764  01B2  1803               	btfsc	3,0
  6765  01B3  29DB               	goto	l6659
  6766                           
  6767                           ;doprnt.c: 832: fval = -fval;
  6768  01B4  0022               	movlb	2	; select bank2
  6769  01B5  084F               	movf	(sprintf@fval+3)^(0+256),w
  6770  01B6  0020               	movlb	0	; select bank0
  6771  01B7  00D5               	movwf	___flneg@f1+3
  6772  01B8  0022               	movlb	2	; select bank2
  6773  01B9  084E               	movf	(sprintf@fval+2)^(0+256),w
  6774  01BA  0020               	movlb	0	; select bank0
  6775  01BB  00D4               	movwf	___flneg@f1+2
  6776  01BC  0022               	movlb	2	; select bank2
  6777  01BD  084D               	movf	(sprintf@fval+1)^(0+256),w
  6778  01BE  0020               	movlb	0	; select bank0
  6779  01BF  00D3               	movwf	___flneg@f1+1
  6780  01C0  0022               	movlb	2	; select bank2
  6781  01C1  084C               	movf	sprintf@fval^(0+256),w
  6782  01C2  0020               	movlb	0	; select bank0
  6783  01C3  00D2               	movwf	___flneg@f1
  6784  01C4  31AF  2789  3180   	fcall	___flneg
  6785  01C7  0020               	movlb	0	; select bank0
  6786  01C8  0855               	movf	?___flneg+3,w
  6787  01C9  0022               	movlb	2	; select bank2
  6788  01CA  00CF               	movwf	(sprintf@fval+3)^(0+256)
  6789  01CB  0020               	movlb	0	; select bank0
  6790  01CC  0854               	movf	?___flneg+2,w
  6791  01CD  0022               	movlb	2	; select bank2
  6792  01CE  00CE               	movwf	(sprintf@fval+2)^(0+256)
  6793  01CF  0020               	movlb	0	; select bank0
  6794  01D0  0853               	movf	?___flneg+1,w
  6795  01D1  0022               	movlb	2	; select bank2
  6796  01D2  00CD               	movwf	(sprintf@fval+1)^(0+256)
  6797  01D3  0020               	movlb	0	; select bank0
  6798  01D4  0852               	movf	?___flneg,w
  6799  01D5  0022               	movlb	2	; select bank2
  6800  01D6  00CC               	movwf	sprintf@fval^(0+256)
  6801                           
  6802                           ;doprnt.c: 833: flag |= 0x03;
  6803  01D7  3003               	movlw	3
  6804  01D8  04C8               	iorwf	sprintf@flag^(0+256),f
  6805  01D9  3000               	movlw	0
  6806  01DA  04C9               	iorwf	(sprintf@flag+1)^(0+256),f
  6807  01DB                     l6659:	
  6808                           
  6809                           ;doprnt.c: 834: }
  6810                           ;doprnt.c: 835: exp = 0;
  6811  01DB  0022               	movlb	2	; select bank2
  6812  01DC  01C6               	clrf	sprintf@exp^(0+256)
  6813  01DD  01C7               	clrf	(sprintf@exp+1)^(0+256)
  6814                           
  6815                           ;doprnt.c: 836: if( fval!=0) {
  6816  01DE  084F               	movf	(sprintf@fval+3)^(0+256),w
  6817  01DF  044E               	iorwf	(sprintf@fval+2)^(0+256),w
  6818  01E0  044D               	iorwf	(sprintf@fval+1)^(0+256),w
  6819  01E1  044C               	iorwf	sprintf@fval^(0+256),w
  6820  01E2  1903               	skipnz
  6821  01E3  2AA3               	goto	l654
  6822                           
  6823                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  6824  01E4  084C               	movf	sprintf@fval^(0+256),w
  6825  01E5  00B3               	movwf	??_sprintf^(0+256)
  6826  01E6  084D               	movf	(sprintf@fval+1)^(0+256),w
  6827  01E7  00B4               	movwf	(??_sprintf^(0+256)+1)
  6828  01E8  084E               	movf	(sprintf@fval+2)^(0+256),w
  6829  01E9  00B5               	movwf	(??_sprintf^(0+256)+2)
  6830  01EA  084F               	movf	(sprintf@fval+3)^(0+256),w
  6831  01EB  00B6               	movwf	(??_sprintf^(0+256)+3)
  6832  01EC  1003               	clrc
  6833  01ED  0D35               	rlf	(??_sprintf^(0+256)+2),w
  6834  01EE  0D36               	rlf	(??_sprintf^(0+256)+3),w
  6835  01EF  3E82               	addlw	130
  6836  01F0  00C6               	movwf	sprintf@exp^(0+256)
  6837  01F1  30FF               	movlw	255
  6838  01F2  1803               	skipnc
  6839  01F3  3000               	movlw	0
  6840  01F4  00C7               	movwf	(sprintf@exp^(0+256)+1)
  6841                           
  6842                           ;doprnt.c: 838: exp--;
  6843  01F5  30FF               	movlw	255
  6844  01F6  07C6               	addwf	sprintf@exp^(0+256),f
  6845  01F7  30FF               	movlw	255
  6846  01F8  3DC7               	addwfc	(sprintf@exp+1)^(0+256),f
  6847                           
  6848                           ;doprnt.c: 839: exp *= 3;
  6849  01F9  3003               	movlw	3
  6850  01FA  00F2               	movwf	___wmul@multiplier
  6851  01FB  3000               	movlw	0
  6852  01FC  00F3               	movwf	___wmul@multiplier+1
  6853  01FD  0847               	movf	(sprintf@exp+1)^(0+256),w
  6854  01FE  00F5               	movwf	___wmul@multiplicand+1
  6855  01FF  0846               	movf	sprintf@exp^(0+256),w
  6856  0200  00F4               	movwf	___wmul@multiplicand
  6857  0201  31A0  2075  3180   	fcall	___wmul
  6858  0204  0873               	movf	?___wmul+1,w
  6859  0205  0022               	movlb	2	; select bank2
  6860  0206  00C7               	movwf	(sprintf@exp+1)^(0+256)
  6861  0207  0872               	movf	?___wmul,w
  6862  0208  00C6               	movwf	sprintf@exp^(0+256)
  6863                           
  6864                           ;doprnt.c: 840: exp /= 10;
  6865  0209  300A               	movlw	10
  6866  020A  0020               	movlb	0	; select bank0
  6867  020B  00A0               	movwf	___awdiv@divisor
  6868  020C  3000               	movlw	0
  6869  020D  00A1               	movwf	___awdiv@divisor+1
  6870  020E  0022               	movlb	2	; select bank2
  6871  020F  0847               	movf	(sprintf@exp+1)^(0+256),w
  6872  0210  0020               	movlb	0	; select bank0
  6873  0211  00A3               	movwf	___awdiv@dividend+1
  6874  0212  0022               	movlb	2	; select bank2
  6875  0213  0846               	movf	sprintf@exp^(0+256),w
  6876  0214  0020               	movlb	0	; select bank0
  6877  0215  00A2               	movwf	___awdiv@dividend
  6878  0216  31A3  2328  3180   	fcall	___awdiv
  6879  0219  0020               	movlb	0	; select bank0
  6880  021A  0821               	movf	?___awdiv+1,w
  6881  021B  0022               	movlb	2	; select bank2
  6882  021C  00C7               	movwf	(sprintf@exp+1)^(0+256)
  6883  021D  0020               	movlb	0	; select bank0
  6884  021E  0820               	movf	?___awdiv,w
  6885  021F  0022               	movlb	2	; select bank2
  6886  0220  00C6               	movwf	sprintf@exp^(0+256)
  6887                           
  6888                           ;doprnt.c: 841: if(exp < 0)
  6889  0221  1FC7               	btfss	(sprintf@exp+1)^(0+256),7
  6890  0222  2A27               	goto	l6675
  6891                           
  6892                           ;doprnt.c: 842: exp--;
  6893  0223  30FF               	movlw	255
  6894  0224  07C6               	addwf	sprintf@exp^(0+256),f
  6895  0225  30FF               	movlw	255
  6896  0226  3DC7               	addwfc	(sprintf@exp+1)^(0+256),f
  6897  0227                     l6675:	
  6898                           
  6899                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6900  0227  0346               	decf	sprintf@exp^(0+256),w
  6901  0228  3AFF               	xorlw	255
  6902  0229  318D  2570  3180   	fcall	_scale
  6903  022C  0020               	movlb	0	; select bank0
  6904  022D  0855               	movf	?_scale+3,w
  6905  022E  0022               	movlb	2	; select bank2
  6906  022F  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  6907  0230  0020               	movlb	0	; select bank0
  6908  0231  0854               	movf	?_scale+2,w
  6909  0232  0022               	movlb	2	; select bank2
  6910  0233  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  6911  0234  0020               	movlb	0	; select bank0
  6912  0235  0853               	movf	?_scale+1,w
  6913  0236  0022               	movlb	2	; select bank2
  6914  0237  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  6915  0238  0020               	movlb	0	; select bank0
  6916  0239  0852               	movf	?_scale,w
  6917  023A  0022               	movlb	2	; select bank2
  6918  023B  00BE               	movwf	sprintf@tmpval^(0+256)
  6919                           
  6920                           ;doprnt.c: 847: tmpval.integ *= fval;
  6921  023C  084F               	movf	(sprintf@fval+3)^(0+256),w
  6922  023D  0020               	movlb	0	; select bank0
  6923  023E  00BB               	movwf	___flmul@b+3
  6924  023F  0022               	movlb	2	; select bank2
  6925  0240  084E               	movf	(sprintf@fval+2)^(0+256),w
  6926  0241  0020               	movlb	0	; select bank0
  6927  0242  00BA               	movwf	___flmul@b+2
  6928  0243  0022               	movlb	2	; select bank2
  6929  0244  084D               	movf	(sprintf@fval+1)^(0+256),w
  6930  0245  0020               	movlb	0	; select bank0
  6931  0246  00B9               	movwf	___flmul@b+1
  6932  0247  0022               	movlb	2	; select bank2
  6933  0248  084C               	movf	sprintf@fval^(0+256),w
  6934  0249  0020               	movlb	0	; select bank0
  6935  024A  00B8               	movwf	___flmul@b
  6936  024B  0022               	movlb	2	; select bank2
  6937  024C  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  6938  024D  0020               	movlb	0	; select bank0
  6939  024E  00BF               	movwf	___flmul@a+3
  6940  024F  0022               	movlb	2	; select bank2
  6941  0250  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  6942  0251  0020               	movlb	0	; select bank0
  6943  0252  00BE               	movwf	___flmul@a+2
  6944  0253  0022               	movlb	2	; select bank2
  6945  0254  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  6946  0255  0020               	movlb	0	; select bank0
  6947  0256  00BD               	movwf	___flmul@a+1
  6948  0257  0022               	movlb	2	; select bank2
  6949  0258  083E               	movf	sprintf@tmpval^(0+256),w
  6950  0259  0020               	movlb	0	; select bank0
  6951  025A  00BC               	movwf	___flmul@a
  6952  025B  3188  20E4  3180   	fcall	___flmul
  6953  025E  0020               	movlb	0	; select bank0
  6954  025F  083B               	movf	?___flmul+3,w
  6955  0260  0022               	movlb	2	; select bank2
  6956  0261  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  6957  0262  0020               	movlb	0	; select bank0
  6958  0263  083A               	movf	?___flmul+2,w
  6959  0264  0022               	movlb	2	; select bank2
  6960  0265  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  6961  0266  0020               	movlb	0	; select bank0
  6962  0267  0839               	movf	?___flmul+1,w
  6963  0268  0022               	movlb	2	; select bank2
  6964  0269  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  6965  026A  0020               	movlb	0	; select bank0
  6966  026B  0838               	movf	?___flmul,w
  6967  026C  0022               	movlb	2	; select bank2
  6968  026D  00BE               	movwf	sprintf@tmpval^(0+256)
  6969                           
  6970                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6971  026E  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  6972  026F  00F5               	movwf	___flge@ff1+3
  6973  0270  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  6974  0271  00F4               	movwf	___flge@ff1+2
  6975  0272  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  6976  0273  00F3               	movwf	___flge@ff1+1
  6977  0274  083E               	movf	sprintf@tmpval^(0+256),w
  6978  0275  00F2               	movwf	___flge@ff1
  6979  0276  303F               	movlw	63
  6980  0277  00F9               	movwf	___flge@ff2+3
  6981  0278  3080               	movlw	128
  6982  0279  00F8               	movwf	___flge@ff2+2
  6983  027A  3000               	movlw	0
  6984  027B  00F7               	movwf	___flge@ff2+1
  6985  027C  3000               	movlw	0
  6986  027D  00F6               	movwf	___flge@ff2
  6987  027E  31A7  2766  3180   	fcall	___flge
  6988  0281  1803               	btfsc	3,0
  6989  0282  2A88               	goto	l6683
  6990                           
  6991                           ;doprnt.c: 849: exp--;
  6992  0283  30FF               	movlw	255
  6993  0284  0022               	movlb	2	; select bank2
  6994  0285  07C6               	addwf	sprintf@exp^(0+256),f
  6995  0286  30FF               	movlw	255
  6996  0287  2AA2               	goto	L3
  6997  0288                     l6683:	
  6998                           
  6999                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  7000  0288  0022               	movlb	2	; select bank2
  7001  0289  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  7002  028A  00F5               	movwf	___flge@ff1+3
  7003  028B  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  7004  028C  00F4               	movwf	___flge@ff1+2
  7005  028D  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  7006  028E  00F3               	movwf	___flge@ff1+1
  7007  028F  083E               	movf	sprintf@tmpval^(0+256),w
  7008  0290  00F2               	movwf	___flge@ff1
  7009  0291  3041               	movlw	65
  7010  0292  00F9               	movwf	___flge@ff2+3
  7011  0293  3020               	movlw	32
  7012  0294  00F8               	movwf	___flge@ff2+2
  7013  0295  3000               	movlw	0
  7014  0296  00F7               	movwf	___flge@ff2+1
  7015  0297  3000               	movlw	0
  7016  0298  00F6               	movwf	___flge@ff2
  7017  0299  31A7  2766  3180   	fcall	___flge
  7018  029C  1C03               	btfss	3,0
  7019  029D  2AA3               	goto	l654
  7020                           
  7021                           ;doprnt.c: 851: exp++;
  7022  029E  3001               	movlw	1
  7023  029F  0022               	movlb	2	; select bank2
  7024  02A0  07C6               	addwf	sprintf@exp^(0+256),f
  7025  02A1  3000               	movlw	0
  7026  02A2                     L3:	
  7027  02A2  3DC7               	addwfc	(sprintf@exp+1)^(0+256),f
  7028  02A3                     l654:	
  7029                           
  7030                           ;doprnt.c: 852: }
  7031                           ;doprnt.c: 1112: if(prec <= 12)
  7032  02A3  0022               	movlb	2	; select bank2
  7033  02A4  0851               	movf	(sprintf@prec+1)^(0+256),w
  7034  02A5  3A80               	xorlw	128
  7035  02A6  00B3               	movwf	??_sprintf^(0+256)
  7036  02A7  3080               	movlw	128
  7037  02A8  0233               	subwf	??_sprintf^(0+256),w
  7038  02A9  1D03               	skipz
  7039  02AA  2AAD               	goto	u9375
  7040  02AB  300D               	movlw	13
  7041  02AC  0250               	subwf	sprintf@prec^(0+256),w
  7042  02AD                     u9375:	
  7043  02AD  1803               	skipnc
  7044  02AE  2AE7               	goto	l6689
  7045                           
  7046                           ;doprnt.c: 1113: fval += fround(prec);
  7047  02AF  0022               	movlb	2	; select bank2
  7048  02B0  0850               	movf	sprintf@prec^(0+256),w
  7049  02B1  3194  241B  3180   	fcall	_fround
  7050  02B4  0020               	movlb	0	; select bank0
  7051  02B5  0855               	movf	?_fround+3,w
  7052  02B6  0021               	movlb	1	; select bank1
  7053  02B7  00AC               	movwf	(___fladd@b+3)^(0+128)
  7054  02B8  0020               	movlb	0	; select bank0
  7055  02B9  0854               	movf	?_fround+2,w
  7056  02BA  0021               	movlb	1	; select bank1
  7057  02BB  00AB               	movwf	(___fladd@b+2)^(0+128)
  7058  02BC  0020               	movlb	0	; select bank0
  7059  02BD  0853               	movf	?_fround+1,w
  7060  02BE  0021               	movlb	1	; select bank1
  7061  02BF  00AA               	movwf	(___fladd@b+1)^(0+128)
  7062  02C0  0020               	movlb	0	; select bank0
  7063  02C1  0852               	movf	?_fround,w
  7064  02C2  0021               	movlb	1	; select bank1
  7065  02C3  00A9               	movwf	___fladd@b^(0+128)
  7066  02C4  0022               	movlb	2	; select bank2
  7067  02C5  084F               	movf	(sprintf@fval+3)^(0+256),w
  7068  02C6  0021               	movlb	1	; select bank1
  7069  02C7  00B0               	movwf	(___fladd@a+3)^(0+128)
  7070  02C8  0022               	movlb	2	; select bank2
  7071  02C9  084E               	movf	(sprintf@fval+2)^(0+256),w
  7072  02CA  0021               	movlb	1	; select bank1
  7073  02CB  00AF               	movwf	(___fladd@a+2)^(0+128)
  7074  02CC  0022               	movlb	2	; select bank2
  7075  02CD  084D               	movf	(sprintf@fval+1)^(0+256),w
  7076  02CE  0021               	movlb	1	; select bank1
  7077  02CF  00AE               	movwf	(___fladd@a+1)^(0+128)
  7078  02D0  0022               	movlb	2	; select bank2
  7079  02D1  084C               	movf	sprintf@fval^(0+256),w
  7080  02D2  0021               	movlb	1	; select bank1
  7081  02D3  00AD               	movwf	___fladd@a^(0+128)
  7082  02D4  318B  2310  3180   	fcall	___fladd
  7083  02D7  0021               	movlb	1	; select bank1
  7084  02D8  082C               	movf	(?___fladd+3)^(0+128),w
  7085  02D9  0022               	movlb	2	; select bank2
  7086  02DA  00CF               	movwf	(sprintf@fval+3)^(0+256)
  7087  02DB  0021               	movlb	1	; select bank1
  7088  02DC  082B               	movf	(?___fladd+2)^(0+128),w
  7089  02DD  0022               	movlb	2	; select bank2
  7090  02DE  00CE               	movwf	(sprintf@fval+2)^(0+256)
  7091  02DF  0021               	movlb	1	; select bank1
  7092  02E0  082A               	movf	(?___fladd+1)^(0+128),w
  7093  02E1  0022               	movlb	2	; select bank2
  7094  02E2  00CD               	movwf	(sprintf@fval+1)^(0+256)
  7095  02E3  0021               	movlb	1	; select bank1
  7096  02E4  0829               	movf	?___fladd^(0+128),w
  7097  02E5  0022               	movlb	2	; select bank2
  7098  02E6  00CC               	movwf	sprintf@fval^(0+256)
  7099  02E7                     l6689:	
  7100                           
  7101                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  7102  02E7  0022               	movlb	2	; select bank2
  7103  02E8  0847               	movf	(sprintf@exp+1)^(0+256),w
  7104  02E9  3A80               	xorlw	128
  7105  02EA  00B3               	movwf	??_sprintf^(0+256)
  7106  02EB  3080               	movlw	128
  7107  02EC  0233               	subwf	??_sprintf^(0+256),w
  7108  02ED  1D03               	skipz
  7109  02EE  2AF1               	goto	u9385
  7110  02EF  300A               	movlw	10
  7111  02F0  0246               	subwf	sprintf@exp^(0+256),w
  7112  02F1                     u9385:	
  7113  02F1  1803               	skipnc
  7114  02F2  2B17               	goto	l6697
  7115  02F3  0022               	movlb	2	; select bank2
  7116  02F4  084F               	movf	(sprintf@fval+3)^(0+256),w
  7117  02F5  044E               	iorwf	(sprintf@fval+2)^(0+256),w
  7118  02F6  044D               	iorwf	(sprintf@fval+1)^(0+256),w
  7119  02F7  044C               	iorwf	sprintf@fval^(0+256),w
  7120  02F8  1903               	skipnz
  7121  02F9  2B6D               	goto	l6711
  7122  02FA  084F               	movf	(sprintf@fval+3)^(0+256),w
  7123  02FB  00A3               	movwf	(___fltol@f1+3)^(0+256)
  7124  02FC  084E               	movf	(sprintf@fval+2)^(0+256),w
  7125  02FD  00A2               	movwf	(___fltol@f1+2)^(0+256)
  7126  02FE  084D               	movf	(sprintf@fval+1)^(0+256),w
  7127  02FF  00A1               	movwf	(___fltol@f1+1)^(0+256)
  7128  0300  084C               	movf	sprintf@fval^(0+256),w
  7129  0301  00A0               	movwf	___fltol@f1^(0+256)
  7130  0302  31A5  25C5  3180   	fcall	___fltol
  7131  0305  0022               	movlb	2	; select bank2
  7132  0306  0823               	movf	(?___fltol+3)^(0+256),w
  7133  0307  0422               	iorwf	(?___fltol+2)^(0+256),w
  7134  0308  0421               	iorwf	(?___fltol+1)^(0+256),w
  7135  0309  0420               	iorwf	?___fltol^(0+256),w
  7136  030A  1D03               	skipz
  7137  030B  2B6D               	goto	l6711
  7138  030C  0847               	movf	(sprintf@exp+1)^(0+256),w
  7139  030D  3A80               	xorlw	128
  7140  030E  00B3               	movwf	??_sprintf^(0+256)
  7141  030F  3080               	movlw	128
  7142  0310  0233               	subwf	??_sprintf^(0+256),w
  7143  0311  1D03               	skipz
  7144  0312  2B15               	goto	u9415
  7145  0313  3002               	movlw	2
  7146  0314  0246               	subwf	sprintf@exp^(0+256),w
  7147  0315                     u9415:	
  7148  0315  1C03               	skipc
  7149  0316  2B6D               	goto	l6711
  7150  0317                     l6697:	
  7151                           
  7152                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  7153  0317  0022               	movlb	2	; select bank2
  7154  0318  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  7155  0319  00F5               	movwf	___flge@ff1+3
  7156  031A  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  7157  031B  00F4               	movwf	___flge@ff1+2
  7158  031C  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  7159  031D  00F3               	movwf	___flge@ff1+1
  7160  031E  083E               	movf	sprintf@tmpval^(0+256),w
  7161  031F  00F2               	movwf	___flge@ff1
  7162  0320  3040               	movlw	64
  7163  0321  00F9               	movwf	___flge@ff2+3
  7164  0322  3089               	movlw	137
  7165  0323  00F8               	movwf	___flge@ff2+2
  7166  0324  3070               	movlw	112
  7167  0325  00F7               	movwf	___flge@ff2+1
  7168  0326  305F               	movlw	95
  7169  0327  00F6               	movwf	___flge@ff2
  7170  0328  31A7  2766  3180   	fcall	___flge
  7171  032B  1803               	btfsc	3,0
  7172  032C  2B2F               	goto	l6701
  7173                           
  7174                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  7175  032D  30F7               	movlw	247
  7176  032E  2B30               	goto	L4
  7177  032F                     l6701:	
  7178                           ;doprnt.c: 1122: }else{
  7179                           
  7180                           
  7181                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  7182  032F  30F8               	movlw	248
  7183  0330                     L4:	
  7184  0330  0022               	movlb	2	; select bank2
  7185  0331  07C6               	addwf	sprintf@exp^(0+256),f
  7186  0332  30FF               	movlw	255
  7187  0333  3DC7               	addwfc	(sprintf@exp+1)^(0+256),f
  7188                           
  7189                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  7190  0334  0846               	movf	sprintf@exp^(0+256),w
  7191  0335  318D  2570  3180   	fcall	_scale
  7192  0338  0020               	movlb	0	; select bank0
  7193  0339  0855               	movf	?_scale+3,w
  7194  033A  0022               	movlb	2	; select bank2
  7195  033B  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  7196  033C  0020               	movlb	0	; select bank0
  7197  033D  0854               	movf	?_scale+2,w
  7198  033E  0022               	movlb	2	; select bank2
  7199  033F  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  7200  0340  0020               	movlb	0	; select bank0
  7201  0341  0853               	movf	?_scale+1,w
  7202  0342  0022               	movlb	2	; select bank2
  7203  0343  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  7204  0344  0020               	movlb	0	; select bank0
  7205  0345  0852               	movf	?_scale,w
  7206  0346  0022               	movlb	2	; select bank2
  7207  0347  00BE               	movwf	sprintf@tmpval^(0+256)
  7208  0348  084F               	movf	(sprintf@fval+3)^(0+256),w
  7209  0349  00F5               	movwf	__div_to_l_@f1+3
  7210  034A  084E               	movf	(sprintf@fval+2)^(0+256),w
  7211  034B  00F4               	movwf	__div_to_l_@f1+2
  7212  034C  084D               	movf	(sprintf@fval+1)^(0+256),w
  7213  034D  00F3               	movwf	__div_to_l_@f1+1
  7214  034E  084C               	movf	sprintf@fval^(0+256),w
  7215  034F  00F2               	movwf	__div_to_l_@f1
  7216  0350  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  7217  0351  00F9               	movwf	__div_to_l_@f2+3
  7218  0352  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  7219  0353  00F8               	movwf	__div_to_l_@f2+2
  7220  0354  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  7221  0355  00F7               	movwf	__div_to_l_@f2+1
  7222  0356  083E               	movf	sprintf@tmpval^(0+256),w
  7223  0357  00F6               	movwf	__div_to_l_@f2
  7224  0358  319C  24F3  3180   	fcall	__div_to_l_
  7225  035B  0875               	movf	?__div_to_l_+3,w
  7226  035C  0022               	movlb	2	; select bank2
  7227  035D  00C5               	movwf	(sprintf@val+3)^(0+256)
  7228  035E  0874               	movf	?__div_to_l_+2,w
  7229  035F  00C4               	movwf	(sprintf@val+2)^(0+256)
  7230  0360  0873               	movf	?__div_to_l_+1,w
  7231  0361  00C3               	movwf	(sprintf@val+1)^(0+256)
  7232  0362  0872               	movf	?__div_to_l_,w
  7233  0363  00C2               	movwf	sprintf@val^(0+256)
  7234                           
  7235                           ;doprnt.c: 1129: fval = 0.0;
  7236  0364  3000               	movlw	0
  7237  0365  00CF               	movwf	(sprintf@fval+3)^(0+256)
  7238  0366  3000               	movlw	0
  7239  0367  00CE               	movwf	(sprintf@fval+2)^(0+256)
  7240  0368  3000               	movlw	0
  7241  0369  00CD               	movwf	(sprintf@fval+1)^(0+256)
  7242  036A  3000               	movlw	0
  7243  036B  00CC               	movwf	sprintf@fval^(0+256)
  7244                           
  7245                           ;doprnt.c: 1130: } else {
  7246  036C  2BCA               	goto	l6715
  7247  036D                     l6711:	
  7248                           
  7249                           ;doprnt.c: 1131: val = (unsigned long)fval;
  7250  036D  0022               	movlb	2	; select bank2
  7251  036E  084F               	movf	(sprintf@fval+3)^(0+256),w
  7252  036F  00A3               	movwf	(___fltol@f1+3)^(0+256)
  7253  0370  084E               	movf	(sprintf@fval+2)^(0+256),w
  7254  0371  00A2               	movwf	(___fltol@f1+2)^(0+256)
  7255  0372  084D               	movf	(sprintf@fval+1)^(0+256),w
  7256  0373  00A1               	movwf	(___fltol@f1+1)^(0+256)
  7257  0374  084C               	movf	sprintf@fval^(0+256),w
  7258  0375  00A0               	movwf	___fltol@f1^(0+256)
  7259  0376  31A5  25C5  3180   	fcall	___fltol
  7260  0379  0022               	movlb	2	; select bank2
  7261  037A  0823               	movf	(?___fltol+3)^(0+256),w
  7262  037B  00C5               	movwf	(sprintf@val+3)^(0+256)
  7263  037C  0822               	movf	(?___fltol+2)^(0+256),w
  7264  037D  00C4               	movwf	(sprintf@val+2)^(0+256)
  7265  037E  0821               	movf	(?___fltol+1)^(0+256),w
  7266  037F  00C3               	movwf	(sprintf@val+1)^(0+256)
  7267  0380  0820               	movf	?___fltol^(0+256),w
  7268  0381  00C2               	movwf	sprintf@val^(0+256)
  7269                           
  7270                           ;doprnt.c: 1132: fval -= (double)val;
  7271  0382  0845               	movf	(sprintf@val+3)^(0+256),w
  7272  0383  0020               	movlb	0	; select bank0
  7273  0384  00B1               	movwf	___xxtofl@val+3
  7274  0385  0022               	movlb	2	; select bank2
  7275  0386  0844               	movf	(sprintf@val+2)^(0+256),w
  7276  0387  0020               	movlb	0	; select bank0
  7277  0388  00B0               	movwf	___xxtofl@val+2
  7278  0389  0022               	movlb	2	; select bank2
  7279  038A  0843               	movf	(sprintf@val+1)^(0+256),w
  7280  038B  0020               	movlb	0	; select bank0
  7281  038C  00AF               	movwf	___xxtofl@val+1
  7282  038D  0022               	movlb	2	; select bank2
  7283  038E  0842               	movf	sprintf@val^(0+256),w
  7284  038F  0020               	movlb	0	; select bank0
  7285  0390  00AE               	movwf	___xxtofl@val
  7286  0391  3000               	movlw	0
  7287  0392  31A6  26D0  3180   	fcall	___xxtofl
  7288  0395  0020               	movlb	0	; select bank0
  7289  0396  0831               	movf	?___xxtofl+3,w
  7290  0397  0021               	movlb	1	; select bank1
  7291  0398  00C0               	movwf	(___flsub@a+3)^(0+128)
  7292  0399  0020               	movlb	0	; select bank0
  7293  039A  0830               	movf	?___xxtofl+2,w
  7294  039B  0021               	movlb	1	; select bank1
  7295  039C  00BF               	movwf	(___flsub@a+2)^(0+128)
  7296  039D  0020               	movlb	0	; select bank0
  7297  039E  082F               	movf	?___xxtofl+1,w
  7298  039F  0021               	movlb	1	; select bank1
  7299  03A0  00BE               	movwf	(___flsub@a+1)^(0+128)
  7300  03A1  0020               	movlb	0	; select bank0
  7301  03A2  082E               	movf	?___xxtofl,w
  7302  03A3  0021               	movlb	1	; select bank1
  7303  03A4  00BD               	movwf	___flsub@a^(0+128)
  7304  03A5  0022               	movlb	2	; select bank2
  7305  03A6  084F               	movf	(sprintf@fval+3)^(0+256),w
  7306  03A7  0021               	movlb	1	; select bank1
  7307  03A8  00C4               	movwf	(___flsub@b+3)^(0+128)
  7308  03A9  0022               	movlb	2	; select bank2
  7309  03AA  084E               	movf	(sprintf@fval+2)^(0+256),w
  7310  03AB  0021               	movlb	1	; select bank1
  7311  03AC  00C3               	movwf	(___flsub@b+2)^(0+128)
  7312  03AD  0022               	movlb	2	; select bank2
  7313  03AE  084D               	movf	(sprintf@fval+1)^(0+256),w
  7314  03AF  0021               	movlb	1	; select bank1
  7315  03B0  00C2               	movwf	(___flsub@b+1)^(0+128)
  7316  03B1  0022               	movlb	2	; select bank2
  7317  03B2  084C               	movf	sprintf@fval^(0+256),w
  7318  03B3  0021               	movlb	1	; select bank1
  7319  03B4  00C1               	movwf	___flsub@b^(0+128)
  7320  03B5  31A0  2090  3180   	fcall	___flsub
  7321  03B8  0021               	movlb	1	; select bank1
  7322  03B9  0840               	movf	(?___flsub+3)^(0+128),w
  7323  03BA  0022               	movlb	2	; select bank2
  7324  03BB  00CF               	movwf	(sprintf@fval+3)^(0+256)
  7325  03BC  0021               	movlb	1	; select bank1
  7326  03BD  083F               	movf	(?___flsub+2)^(0+128),w
  7327  03BE  0022               	movlb	2	; select bank2
  7328  03BF  00CE               	movwf	(sprintf@fval+2)^(0+256)
  7329  03C0  0021               	movlb	1	; select bank1
  7330  03C1  083E               	movf	(?___flsub+1)^(0+128),w
  7331  03C2  0022               	movlb	2	; select bank2
  7332  03C3  00CD               	movwf	(sprintf@fval+1)^(0+256)
  7333  03C4  0021               	movlb	1	; select bank1
  7334  03C5  083D               	movf	?___flsub^(0+128),w
  7335  03C6  0022               	movlb	2	; select bank2
  7336  03C7  00CC               	movwf	sprintf@fval^(0+256)
  7337                           
  7338                           ;doprnt.c: 1133: exp = 0;
  7339  03C8  01C6               	clrf	sprintf@exp^(0+256)
  7340  03C9  01C7               	clrf	(sprintf@exp+1)^(0+256)
  7341  03CA                     l6715:	
  7342                           
  7343                           ;doprnt.c: 1134: }
  7344                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  7345  03CA  01D3               	clrf	sprintf@c^(0+256)
  7346  03CB  0AD3               	incf	sprintf@c^(0+256),f
  7347  03CC  300A               	movlw	10
  7348  03CD  0653               	xorwf	sprintf@c^(0+256),w
  7349  03CE  1903               	btfsc	3,2
  7350  03CF  2BFD               	goto	l6727
  7351  03D0                     l6721:	
  7352                           
  7353                           ;doprnt.c: 1137: if(val < dpowers[c])
  7354  03D0  0853               	movf	sprintf@c^(0+256),w
  7355  03D1  00B3               	movwf	??_sprintf^(0+256)
  7356  03D2  01B4               	clrf	(??_sprintf^(0+256)+1)
  7357  03D3  35B3               	lslf	??_sprintf^(0+256),f
  7358  03D4  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7359  03D5  35B3               	lslf	??_sprintf^(0+256),f
  7360  03D6  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7361  03D7  30A0               	movlw	low (_dpowers| (0+32768))
  7362  03D8  0733               	addwf	??_sprintf^(0+256),w
  7363  03D9  0084               	movwf	4
  7364  03DA  30A8               	movlw	high (_dpowers| (0+32768))
  7365  03DB  3D34               	addwfc	(??_sprintf+1)^(0+256),w
  7366  03DC  0085               	movwf	5
  7367  03DD  3F00               	moviw [0]fsr0
  7368  03DE  00B5               	movwf	(??_sprintf+2)^(0+256)
  7369  03DF  3F01               	moviw [1]fsr0
  7370  03E0  00B6               	movwf	((??_sprintf+2)^(0+256)+1)
  7371  03E1  3F02               	moviw [2]fsr0
  7372  03E2  00B7               	movwf	((??_sprintf+2)^(0+256)+2)
  7373  03E3  3F03               	moviw [3]fsr0
  7374  03E4  00B8               	movwf	((??_sprintf+2)^(0+256)+3)
  7375  03E5  0838               	movf	(??_sprintf+5)^(0+256),w
  7376  03E6  0245               	subwf	(sprintf@val+3)^(0+256),w
  7377  03E7  1D03               	skipz
  7378  03E8  2BF3               	goto	u9445
  7379  03E9  0837               	movf	(??_sprintf+4)^(0+256),w
  7380  03EA  0244               	subwf	(sprintf@val+2)^(0+256),w
  7381  03EB  1D03               	skipz
  7382  03EC  2BF3               	goto	u9445
  7383  03ED  0836               	movf	(??_sprintf+3)^(0+256),w
  7384  03EE  0243               	subwf	(sprintf@val+1)^(0+256),w
  7385  03EF  1D03               	skipz
  7386  03F0  2BF3               	goto	u9445
  7387  03F1  0835               	movf	(??_sprintf+2)^(0+256),w
  7388  03F2  0242               	subwf	sprintf@val^(0+256),w
  7389  03F3                     u9445:	
  7390  03F3  1C03               	btfss	3,0
  7391  03F4  2BFD               	goto	l6727
  7392                           
  7393                           ;doprnt.c: 1138: break;
  7394  03F5  3001               	movlw	1
  7395  03F6  00B3               	movwf	??_sprintf^(0+256)
  7396  03F7  0833               	movf	??_sprintf^(0+256),w
  7397  03F8  07D3               	addwf	sprintf@c^(0+256),f
  7398  03F9  300A               	movlw	10
  7399  03FA  0653               	xorwf	sprintf@c^(0+256),w
  7400  03FB  1D03               	btfss	3,2
  7401  03FC  2BD0               	goto	l6721
  7402  03FD                     l6727:	
  7403                           
  7404                           ;doprnt.c: 1142: width -= prec + c + exp;
  7405  03FD  0853               	movf	sprintf@c^(0+256),w
  7406  03FE  00B3               	movwf	??_sprintf^(0+256)
  7407  03FF  01B4               	clrf	(??_sprintf^(0+256)+1)
  7408  0400  1BB3               	btfsc	??_sprintf^(0+256),7
  7409  0401  03B4               	decf	(??_sprintf^(0+256)+1),f
  7410  0402  0850               	movf	sprintf@prec^(0+256),w
  7411  0403  0733               	addwf	??_sprintf^(0+256),w
  7412  0404  00B5               	movwf	(??_sprintf+2)^(0+256)
  7413  0405  0851               	movf	(sprintf@prec+1)^(0+256),w
  7414  0406  3D34               	addwfc	(??_sprintf+1)^(0+256),w
  7415  0407  00B6               	movwf	(??_sprintf+3)^(0+256)
  7416  0408  0846               	movf	sprintf@exp^(0+256),w
  7417  0409  0735               	addwf	(??_sprintf+2)^(0+256),w
  7418  040A  00B7               	movwf	(??_sprintf+4)^(0+256)
  7419  040B  0847               	movf	(sprintf@exp+1)^(0+256),w
  7420  040C  3D36               	addwfc	(??_sprintf+3)^(0+256),w
  7421  040D  00B8               	movwf	(??_sprintf+5)^(0+256)
  7422  040E  0837               	movf	(??_sprintf+4)^(0+256),w
  7423  040F  02CA               	subwf	sprintf@width^(0+256),f
  7424  0410  0838               	movf	(??_sprintf+5)^(0+256),w
  7425  0411  3BCB               	subwfb	(sprintf@width+1)^(0+256),f
  7426                           
  7427                           ;doprnt.c: 1143: if(
  7428                           ;doprnt.c: 1147: prec)
  7429  0412  0850               	movf	sprintf@prec^(0+256),w
  7430  0413  0451               	iorwf	(sprintf@prec+1)^(0+256),w
  7431  0414  1903               	btfsc	3,2
  7432  0415  2C1A               	goto	l6731
  7433                           
  7434                           ;doprnt.c: 1148: width--;
  7435  0416  30FF               	movlw	255
  7436  0417  07CA               	addwf	sprintf@width^(0+256),f
  7437  0418  30FF               	movlw	255
  7438  0419  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  7439  041A                     l6731:	
  7440                           
  7441                           ;doprnt.c: 1149: if(flag & 0x03)
  7442  041A  3003               	movlw	3
  7443  041B  0548               	andwf	sprintf@flag^(0+256),w
  7444  041C  00B3               	movwf	??_sprintf^(0+256)
  7445  041D  3000               	movlw	0
  7446  041E  0549               	andwf	(sprintf@flag+1)^(0+256),w
  7447  041F  00B4               	movwf	(??_sprintf+1)^(0+256)
  7448  0420  0833               	movf	??_sprintf^(0+256),w
  7449  0421  0434               	iorwf	(??_sprintf^(0+256)+1),w
  7450  0422  1903               	btfsc	3,2
  7451  0423  2C28               	goto	l6735
  7452                           
  7453                           ;doprnt.c: 1150: width--;
  7454  0424  30FF               	movlw	255
  7455  0425  07CA               	addwf	sprintf@width^(0+256),f
  7456  0426  30FF               	movlw	255
  7457  0427  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  7458  0428                     l6735:	
  7459                           
  7460                           ;doprnt.c: 1153: if(flag & 0x04) {
  7461  0428  1D48               	btfss	sprintf@flag^(0+256),2
  7462  0429  2C6E               	goto	l6757
  7463                           
  7464                           ;doprnt.c: 1157: if(flag & 0x03)
  7465  042A  3003               	movlw	3
  7466  042B  0548               	andwf	sprintf@flag^(0+256),w
  7467  042C  00B3               	movwf	??_sprintf^(0+256)
  7468  042D  3000               	movlw	0
  7469  042E  0549               	andwf	(sprintf@flag+1)^(0+256),w
  7470  042F  00B4               	movwf	(??_sprintf+1)^(0+256)
  7471  0430  0833               	movf	??_sprintf^(0+256),w
  7472  0431  0434               	iorwf	(??_sprintf^(0+256)+1),w
  7473  0432  1903               	btfsc	3,2
  7474  0433  2C40               	goto	l6749
  7475                           
  7476                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  7477  0434  302D               	movlw	45
  7478  0435  00B3               	movwf	??_sprintf^(0+256)
  7479  0436  0852               	movf	sprintf@sp^(0+256),w
  7480  0437  0086               	movwf	6
  7481  0438  3002               	movlw	2	; select bank4/5
  7482  0439  0087               	movwf	7
  7483  043A  0833               	movf	??_sprintf^(0+256),w
  7484  043B  0081               	movwf	1
  7485  043C  3001               	movlw	1
  7486  043D  00B3               	movwf	??_sprintf^(0+256)
  7487  043E  0833               	movf	??_sprintf^(0+256),w
  7488  043F  07D2               	addwf	sprintf@sp^(0+256),f
  7489  0440                     l6749:	
  7490                           ;doprnt.c: 1168: while(width > 0) {
  7491                           
  7492  0440  084B               	movf	(sprintf@width+1)^(0+256),w
  7493  0441  3A80               	xorlw	128
  7494  0442  00B3               	movwf	??_sprintf^(0+256)
  7495  0443  3080               	movlw	128
  7496  0444  0233               	subwf	??_sprintf^(0+256),w
  7497  0445  1D03               	skipz
  7498  0446  2C49               	goto	u9505
  7499  0447  3001               	movlw	1
  7500  0448  024A               	subwf	sprintf@width^(0+256),w
  7501  0449                     u9505:	
  7502  0449  1C03               	btfss	3,0
  7503  044A  2C91               	goto	l6773
  7504                           
  7505                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  7506  044B  3030               	movlw	48
  7507  044C  0022               	movlb	2	; select bank2
  7508  044D  00B3               	movwf	??_sprintf^(0+256)
  7509  044E  0852               	movf	sprintf@sp^(0+256),w
  7510  044F  0086               	movwf	6
  7511  0450  3002               	movlw	2	; select bank4/5
  7512  0451  0087               	movwf	7
  7513  0452  0833               	movf	??_sprintf^(0+256),w
  7514  0453  0081               	movwf	1
  7515  0454  3001               	movlw	1
  7516  0455  00B3               	movwf	??_sprintf^(0+256)
  7517  0456  0833               	movf	??_sprintf^(0+256),w
  7518  0457  07D2               	addwf	sprintf@sp^(0+256),f
  7519                           
  7520                           ;doprnt.c: 1170: width--;
  7521  0458  30FF               	movlw	255
  7522  0459  07CA               	addwf	sprintf@width^(0+256),f
  7523  045A  30FF               	movlw	255
  7524  045B  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  7525  045C  2C40               	goto	l6749
  7526  045D                     l6751:	
  7527                           ;doprnt.c: 1175: {
  7528                           ;doprnt.c: 1180: while(width > 0) {
  7529                           
  7530                           ;doprnt.c: 1171: }
  7531                           ;doprnt.c: 1173: } else
  7532                           
  7533                           
  7534                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  7535  045D  3020               	movlw	32
  7536  045E  0022               	movlb	2	; select bank2
  7537  045F  00B3               	movwf	??_sprintf^(0+256)
  7538  0460  0852               	movf	sprintf@sp^(0+256),w
  7539  0461  0086               	movwf	6
  7540  0462  3002               	movlw	2	; select bank4/5
  7541  0463  0087               	movwf	7
  7542  0464  0833               	movf	??_sprintf^(0+256),w
  7543  0465  0081               	movwf	1
  7544  0466  3001               	movlw	1
  7545  0467  00B3               	movwf	??_sprintf^(0+256)
  7546  0468  0833               	movf	??_sprintf^(0+256),w
  7547  0469  07D2               	addwf	sprintf@sp^(0+256),f
  7548                           
  7549                           ;doprnt.c: 1182: width--;
  7550  046A  30FF               	movlw	255
  7551  046B  07CA               	addwf	sprintf@width^(0+256),f
  7552  046C  30FF               	movlw	255
  7553  046D  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  7554  046E                     l6757:	
  7555  046E  0022               	movlb	2	; select bank2
  7556  046F  084B               	movf	(sprintf@width+1)^(0+256),w
  7557  0470  3A80               	xorlw	128
  7558  0471  00B3               	movwf	??_sprintf^(0+256)
  7559  0472  3080               	movlw	128
  7560  0473  0233               	subwf	??_sprintf^(0+256),w
  7561  0474  1D03               	skipz
  7562  0475  2C78               	goto	u9515
  7563  0476  3001               	movlw	1
  7564  0477  024A               	subwf	sprintf@width^(0+256),w
  7565  0478                     u9515:	
  7566  0478  1803               	skipnc
  7567  0479  2C5D               	goto	l6751
  7568                           
  7569                           ;doprnt.c: 1183: }
  7570                           ;doprnt.c: 1188: if(flag & 0x03)
  7571  047A  3003               	movlw	3
  7572  047B  0022               	movlb	2	; select bank2
  7573  047C  0548               	andwf	sprintf@flag^(0+256),w
  7574  047D  00B3               	movwf	??_sprintf^(0+256)
  7575  047E  3000               	movlw	0
  7576  047F  0549               	andwf	(sprintf@flag+1)^(0+256),w
  7577  0480  00B4               	movwf	(??_sprintf+1)^(0+256)
  7578  0481  0833               	movf	??_sprintf^(0+256),w
  7579  0482  0434               	iorwf	(??_sprintf^(0+256)+1),w
  7580  0483  1903               	btfsc	3,2
  7581  0484  2C91               	goto	l6773
  7582                           
  7583                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  7584  0485  302D               	movlw	45
  7585  0486                     L8:	
  7586  0486  00B3               	movwf	??_sprintf^(0+256)
  7587  0487  0852               	movf	sprintf@sp^(0+256),w
  7588  0488  0086               	movwf	6
  7589  0489  3002               	movlw	2	; select bank4/5
  7590  048A  0087               	movwf	7
  7591  048B  0833               	movf	??_sprintf^(0+256),w
  7592  048C  0081               	movwf	1
  7593  048D  3001               	movlw	1
  7594  048E  00B3               	movwf	??_sprintf^(0+256)
  7595  048F  0833               	movf	??_sprintf^(0+256),w
  7596  0490  07D2               	addwf	sprintf@sp^(0+256),f
  7597  0491                     l6773:	
  7598  0491  30FF               	movlw	255
  7599  0492  0022               	movlb	2	; select bank2
  7600  0493  00B3               	movwf	??_sprintf^(0+256)
  7601  0494  0833               	movf	??_sprintf^(0+256),w
  7602  0495  07D3               	addwf	sprintf@c^(0+256),f
  7603  0496  0A53               	incf	sprintf@c^(0+256),w
  7604  0497  1903               	btfsc	3,2
  7605  0498  2D02               	goto	l6781
  7606                           
  7607                           ;doprnt.c: 1200: {
  7608                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7609                           
  7610                           ;doprnt.c: 1195: }
  7611                           ;doprnt.c: 1196: while(c--) {
  7612  0499  0853               	movf	sprintf@c^(0+256),w
  7613  049A  00B3               	movwf	??_sprintf^(0+256)
  7614  049B  01B4               	clrf	(??_sprintf^(0+256)+1)
  7615  049C  35B3               	lslf	??_sprintf^(0+256),f
  7616  049D  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7617  049E  35B3               	lslf	??_sprintf^(0+256),f
  7618  049F  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7619  04A0  30A0               	movlw	low (_dpowers| (0+32768))
  7620  04A1  0733               	addwf	??_sprintf^(0+256),w
  7621  04A2  0084               	movwf	4
  7622  04A3  30A8               	movlw	high (_dpowers| (0+32768))
  7623  04A4  3D34               	addwfc	(??_sprintf+1)^(0+256),w
  7624  04A5  0085               	movwf	5
  7625  04A6  3F00               	moviw [0]fsr0
  7626  04A7  00F2               	movwf	___lldiv@divisor
  7627  04A8  3F01               	moviw [1]fsr0
  7628  04A9  00F3               	movwf	___lldiv@divisor+1
  7629  04AA  3F02               	moviw [2]fsr0
  7630  04AB  00F4               	movwf	___lldiv@divisor+2
  7631  04AC  3F03               	moviw [3]fsr0
  7632  04AD  00F5               	movwf	___lldiv@divisor+3
  7633  04AE  0845               	movf	(sprintf@val+3)^(0+256),w
  7634  04AF  00F9               	movwf	___lldiv@dividend+3
  7635  04B0  0844               	movf	(sprintf@val+2)^(0+256),w
  7636  04B1  00F8               	movwf	___lldiv@dividend+2
  7637  04B2  0843               	movf	(sprintf@val+1)^(0+256),w
  7638  04B3  00F7               	movwf	___lldiv@dividend+1
  7639  04B4  0842               	movf	sprintf@val^(0+256),w
  7640  04B5  00F6               	movwf	___lldiv@dividend
  7641  04B6  31A3  23CD  3180   	fcall	___lldiv
  7642  04B9  0875               	movf	?___lldiv+3,w
  7643  04BA  0022               	movlb	2	; select bank2
  7644  04BB  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  7645  04BC  0874               	movf	?___lldiv+2,w
  7646  04BD  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  7647  04BE  0873               	movf	?___lldiv+1,w
  7648  04BF  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  7649  04C0  0872               	movf	?___lldiv,w
  7650  04C1  00BE               	movwf	sprintf@tmpval^(0+256)
  7651                           
  7652                           ;doprnt.c: 1202: tmpval.vd %= 10;
  7653  04C2  3000               	movlw	0
  7654  04C3  0020               	movlb	0	; select bank0
  7655  04C4  00A9               	movwf	___llmod@divisor+3
  7656  04C5  3000               	movlw	0
  7657  04C6  00A8               	movwf	___llmod@divisor+2
  7658  04C7  3000               	movlw	0
  7659  04C8  00A7               	movwf	___llmod@divisor+1
  7660  04C9  300A               	movlw	10
  7661  04CA  00A6               	movwf	___llmod@divisor
  7662  04CB  0022               	movlb	2	; select bank2
  7663  04CC  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  7664  04CD  0020               	movlb	0	; select bank0
  7665  04CE  00AD               	movwf	___llmod@dividend+3
  7666  04CF  0022               	movlb	2	; select bank2
  7667  04D0  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  7668  04D1  0020               	movlb	0	; select bank0
  7669  04D2  00AC               	movwf	___llmod@dividend+2
  7670  04D3  0022               	movlb	2	; select bank2
  7671  04D4  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  7672  04D5  0020               	movlb	0	; select bank0
  7673  04D6  00AB               	movwf	___llmod@dividend+1
  7674  04D7  0022               	movlb	2	; select bank2
  7675  04D8  083E               	movf	sprintf@tmpval^(0+256),w
  7676  04D9  0020               	movlb	0	; select bank0
  7677  04DA  00AA               	movwf	___llmod@dividend
  7678  04DB  31A1  21BA  3180   	fcall	___llmod
  7679  04DE  0020               	movlb	0	; select bank0
  7680  04DF  0829               	movf	?___llmod+3,w
  7681  04E0  0022               	movlb	2	; select bank2
  7682  04E1  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  7683  04E2  0020               	movlb	0	; select bank0
  7684  04E3  0828               	movf	?___llmod+2,w
  7685  04E4  0022               	movlb	2	; select bank2
  7686  04E5  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  7687  04E6  0020               	movlb	0	; select bank0
  7688  04E7  0827               	movf	?___llmod+1,w
  7689  04E8  0022               	movlb	2	; select bank2
  7690  04E9  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  7691  04EA  0020               	movlb	0	; select bank0
  7692  04EB  0826               	movf	?___llmod,w
  7693  04EC  0022               	movlb	2	; select bank2
  7694  04ED  00BE               	movwf	sprintf@tmpval^(0+256)
  7695                           
  7696                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7697  04EE  083E               	movf	sprintf@tmpval^(0+256),w
  7698  04EF  3E30               	addlw	48
  7699  04F0  2C86               	goto	L8
  7700  04F1                     l6775:	
  7701                           ;doprnt.c: 1204: }
  7702                           ;doprnt.c: 1206: }
  7703                           ;doprnt.c: 1207: while(exp > 0) {
  7704                           
  7705                           
  7706                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7707  04F1  3030               	movlw	48
  7708  04F2  0022               	movlb	2	; select bank2
  7709  04F3  00B3               	movwf	??_sprintf^(0+256)
  7710  04F4  0852               	movf	sprintf@sp^(0+256),w
  7711  04F5  0086               	movwf	6
  7712  04F6  3002               	movlw	2	; select bank4/5
  7713  04F7  0087               	movwf	7
  7714  04F8  0833               	movf	??_sprintf^(0+256),w
  7715  04F9  0081               	movwf	1
  7716  04FA  3001               	movlw	1
  7717  04FB  00B3               	movwf	??_sprintf^(0+256)
  7718  04FC  0833               	movf	??_sprintf^(0+256),w
  7719  04FD  07D2               	addwf	sprintf@sp^(0+256),f
  7720                           
  7721                           ;doprnt.c: 1209: exp--;
  7722  04FE  30FF               	movlw	255
  7723  04FF  07C6               	addwf	sprintf@exp^(0+256),f
  7724  0500  30FF               	movlw	255
  7725  0501  3DC7               	addwfc	(sprintf@exp+1)^(0+256),f
  7726  0502                     l6781:	
  7727  0502  0847               	movf	(sprintf@exp+1)^(0+256),w
  7728  0503  3A80               	xorlw	128
  7729  0504  00B3               	movwf	??_sprintf^(0+256)
  7730  0505  3080               	movlw	128
  7731  0506  0233               	subwf	??_sprintf^(0+256),w
  7732  0507  1D03               	skipz
  7733  0508  2D0B               	goto	u9545
  7734  0509  3001               	movlw	1
  7735  050A  0246               	subwf	sprintf@exp^(0+256),w
  7736  050B                     u9545:	
  7737  050B  1803               	skipnc
  7738  050C  2CF1               	goto	l6775
  7739                           
  7740                           ;doprnt.c: 1210: }
  7741                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7742  050D  0022               	movlb	2	; select bank2
  7743  050E  0851               	movf	(sprintf@prec+1)^(0+256),w
  7744  050F  3A80               	xorlw	128
  7745  0510  00B3               	movwf	??_sprintf^(0+256)
  7746  0511  3080               	movlw	128
  7747  0512  0233               	subwf	??_sprintf^(0+256),w
  7748  0513  1D03               	skipz
  7749  0514  2D17               	goto	u9555
  7750  0515  3009               	movlw	9
  7751  0516  0250               	subwf	sprintf@prec^(0+256),w
  7752  0517                     u9555:	
  7753  0517  1C03               	skipc
  7754  0518  2D1C               	goto	l6787
  7755                           
  7756                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7757  0519  3008               	movlw	8
  7758  051A  0022               	movlb	2	; select bank2
  7759  051B  2D1E               	goto	L6
  7760  051C                     l6787:	
  7761                           
  7762                           ;doprnt.c: 1213: else
  7763                           ;doprnt.c: 1214: c = prec;
  7764  051C  0022               	movlb	2	; select bank2
  7765  051D  0850               	movf	sprintf@prec^(0+256),w
  7766  051E                     L6:	
  7767  051E  00B3               	movwf	??_sprintf^(0+256)
  7768  051F  0833               	movf	??_sprintf^(0+256),w
  7769  0520  00D3               	movwf	sprintf@c^(0+256)
  7770                           
  7771                           ;doprnt.c: 1215: prec -= c;
  7772  0521  0853               	movf	sprintf@c^(0+256),w
  7773  0522  00B3               	movwf	??_sprintf^(0+256)
  7774  0523  01B4               	clrf	(??_sprintf^(0+256)+1)
  7775  0524  1BB3               	btfsc	??_sprintf^(0+256),7
  7776  0525  03B4               	decf	(??_sprintf^(0+256)+1),f
  7777  0526  0833               	movf	??_sprintf^(0+256),w
  7778  0527  02D0               	subwf	sprintf@prec^(0+256),f
  7779  0528  0834               	movf	(??_sprintf+1)^(0+256),w
  7780  0529  3BD1               	subwfb	(sprintf@prec+1)^(0+256),f
  7781                           
  7782                           ;doprnt.c: 1219: if(c)
  7783  052A  0853               	movf	sprintf@c^(0+256),w
  7784  052B  1903               	btfsc	3,2
  7785  052C  2D39               	goto	l6795
  7786                           
  7787                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7788  052D  302E               	movlw	46
  7789  052E  00B3               	movwf	??_sprintf^(0+256)
  7790  052F  0852               	movf	sprintf@sp^(0+256),w
  7791  0530  0086               	movwf	6
  7792  0531  3002               	movlw	2	; select bank4/5
  7793  0532  0087               	movwf	7
  7794  0533  0833               	movf	??_sprintf^(0+256),w
  7795  0534  0081               	movwf	1
  7796  0535  3001               	movlw	1
  7797  0536  00B3               	movwf	??_sprintf^(0+256)
  7798  0537  0833               	movf	??_sprintf^(0+256),w
  7799  0538  07D2               	addwf	sprintf@sp^(0+256),f
  7800  0539                     l6795:	
  7801                           
  7802                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7803  0539  0853               	movf	sprintf@c^(0+256),w
  7804  053A  318D  2570  3180   	fcall	_scale
  7805  053D  0020               	movlb	0	; select bank0
  7806  053E  0855               	movf	?_scale+3,w
  7807  053F  0022               	movlb	2	; select bank2
  7808  0540  00BC               	movwf	(_sprintf$2066+3)^(0+256)
  7809  0541  0020               	movlb	0	; select bank0
  7810  0542  0854               	movf	?_scale+2,w
  7811  0543  0022               	movlb	2	; select bank2
  7812  0544  00BB               	movwf	(_sprintf$2066+2)^(0+256)
  7813  0545  0020               	movlb	0	; select bank0
  7814  0546  0853               	movf	?_scale+1,w
  7815  0547  0022               	movlb	2	; select bank2
  7816  0548  00BA               	movwf	(_sprintf$2066+1)^(0+256)
  7817  0549  0020               	movlb	0	; select bank0
  7818  054A  0852               	movf	?_scale,w
  7819  054B  0022               	movlb	2	; select bank2
  7820  054C  00B9               	movwf	_sprintf$2066^(0+256)
  7821                           
  7822                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7823  054D  083C               	movf	(_sprintf$2066+3)^(0+256),w
  7824  054E  0020               	movlb	0	; select bank0
  7825  054F  00BF               	movwf	___flmul@a+3
  7826  0550  0022               	movlb	2	; select bank2
  7827  0551  083B               	movf	(_sprintf$2066+2)^(0+256),w
  7828  0552  0020               	movlb	0	; select bank0
  7829  0553  00BE               	movwf	___flmul@a+2
  7830  0554  0022               	movlb	2	; select bank2
  7831  0555  083A               	movf	(_sprintf$2066+1)^(0+256),w
  7832  0556  0020               	movlb	0	; select bank0
  7833  0557  00BD               	movwf	___flmul@a+1
  7834  0558  0022               	movlb	2	; select bank2
  7835  0559  0839               	movf	_sprintf$2066^(0+256),w
  7836  055A  0020               	movlb	0	; select bank0
  7837  055B  00BC               	movwf	___flmul@a
  7838  055C  0022               	movlb	2	; select bank2
  7839  055D  084F               	movf	(sprintf@fval+3)^(0+256),w
  7840  055E  0020               	movlb	0	; select bank0
  7841  055F  00BB               	movwf	___flmul@b+3
  7842  0560  0022               	movlb	2	; select bank2
  7843  0561  084E               	movf	(sprintf@fval+2)^(0+256),w
  7844  0562  0020               	movlb	0	; select bank0
  7845  0563  00BA               	movwf	___flmul@b+2
  7846  0564  0022               	movlb	2	; select bank2
  7847  0565  084D               	movf	(sprintf@fval+1)^(0+256),w
  7848  0566  0020               	movlb	0	; select bank0
  7849  0567  00B9               	movwf	___flmul@b+1
  7850  0568  0022               	movlb	2	; select bank2
  7851  0569  084C               	movf	sprintf@fval^(0+256),w
  7852  056A  0020               	movlb	0	; select bank0
  7853  056B  00B8               	movwf	___flmul@b
  7854  056C  3188  20E4  3180   	fcall	___flmul
  7855  056F  0020               	movlb	0	; select bank0
  7856  0570  083B               	movf	?___flmul+3,w
  7857  0571  0022               	movlb	2	; select bank2
  7858  0572  00A3               	movwf	(___fltol@f1+3)^(0+256)
  7859  0573  0020               	movlb	0	; select bank0
  7860  0574  083A               	movf	?___flmul+2,w
  7861  0575  0022               	movlb	2	; select bank2
  7862  0576  00A2               	movwf	(___fltol@f1+2)^(0+256)
  7863  0577  0020               	movlb	0	; select bank0
  7864  0578  0839               	movf	?___flmul+1,w
  7865  0579  0022               	movlb	2	; select bank2
  7866  057A  00A1               	movwf	(___fltol@f1+1)^(0+256)
  7867  057B  0020               	movlb	0	; select bank0
  7868  057C  0838               	movf	?___flmul,w
  7869  057D  0022               	movlb	2	; select bank2
  7870  057E  00A0               	movwf	___fltol@f1^(0+256)
  7871  057F  31A5  25C5  3180   	fcall	___fltol
  7872  0582  0022               	movlb	2	; select bank2
  7873  0583  0823               	movf	(?___fltol+3)^(0+256),w
  7874  0584  00C5               	movwf	(sprintf@val+3)^(0+256)
  7875  0585  0822               	movf	(?___fltol+2)^(0+256),w
  7876  0586  00C4               	movwf	(sprintf@val+2)^(0+256)
  7877  0587  0821               	movf	(?___fltol+1)^(0+256),w
  7878  0588  00C3               	movwf	(sprintf@val+1)^(0+256)
  7879  0589  0820               	movf	?___fltol^(0+256),w
  7880  058A                     L7:	
  7881  058A  00C2               	movwf	sprintf@val^(0+256)
  7882  058B  30FF               	movlw	255
  7883  058C  00B3               	movwf	??_sprintf^(0+256)
  7884  058D  0833               	movf	??_sprintf^(0+256),w
  7885  058E  07D3               	addwf	sprintf@c^(0+256),f
  7886  058F  0A53               	incf	sprintf@c^(0+256),w
  7887  0590  1903               	btfsc	3,2
  7888  0591  2E3D               	goto	l6817
  7889                           
  7890                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7891                           
  7892                           ;doprnt.c: 1228: while(c--) {
  7893  0592  0853               	movf	sprintf@c^(0+256),w
  7894  0593  00B3               	movwf	??_sprintf^(0+256)
  7895  0594  01B4               	clrf	(??_sprintf^(0+256)+1)
  7896  0595  35B3               	lslf	??_sprintf^(0+256),f
  7897  0596  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7898  0597  35B3               	lslf	??_sprintf^(0+256),f
  7899  0598  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7900  0599  30A0               	movlw	low (_dpowers| (0+32768))
  7901  059A  0733               	addwf	??_sprintf^(0+256),w
  7902  059B  0084               	movwf	4
  7903  059C  30A8               	movlw	high (_dpowers| (0+32768))
  7904  059D  3D34               	addwfc	(??_sprintf+1)^(0+256),w
  7905  059E  0085               	movwf	5
  7906  059F  3F00               	moviw [0]fsr0
  7907  05A0  00F2               	movwf	___lldiv@divisor
  7908  05A1  3F01               	moviw [1]fsr0
  7909  05A2  00F3               	movwf	___lldiv@divisor+1
  7910  05A3  3F02               	moviw [2]fsr0
  7911  05A4  00F4               	movwf	___lldiv@divisor+2
  7912  05A5  3F03               	moviw [3]fsr0
  7913  05A6  00F5               	movwf	___lldiv@divisor+3
  7914  05A7  0845               	movf	(sprintf@val+3)^(0+256),w
  7915  05A8  00F9               	movwf	___lldiv@dividend+3
  7916  05A9  0844               	movf	(sprintf@val+2)^(0+256),w
  7917  05AA  00F8               	movwf	___lldiv@dividend+2
  7918  05AB  0843               	movf	(sprintf@val+1)^(0+256),w
  7919  05AC  00F7               	movwf	___lldiv@dividend+1
  7920  05AD  0842               	movf	sprintf@val^(0+256),w
  7921  05AE  00F6               	movwf	___lldiv@dividend
  7922  05AF  31A3  23CD  3180   	fcall	___lldiv
  7923  05B2  0875               	movf	?___lldiv+3,w
  7924  05B3  0022               	movlb	2	; select bank2
  7925  05B4  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  7926  05B5  0874               	movf	?___lldiv+2,w
  7927  05B6  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  7928  05B7  0873               	movf	?___lldiv+1,w
  7929  05B8  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  7930  05B9  0872               	movf	?___lldiv,w
  7931  05BA  00BE               	movwf	sprintf@tmpval^(0+256)
  7932                           
  7933                           ;doprnt.c: 1230: tmpval.vd %= 10;
  7934  05BB  3000               	movlw	0
  7935  05BC  0020               	movlb	0	; select bank0
  7936  05BD  00A9               	movwf	___llmod@divisor+3
  7937  05BE  3000               	movlw	0
  7938  05BF  00A8               	movwf	___llmod@divisor+2
  7939  05C0  3000               	movlw	0
  7940  05C1  00A7               	movwf	___llmod@divisor+1
  7941  05C2  300A               	movlw	10
  7942  05C3  00A6               	movwf	___llmod@divisor
  7943  05C4  0022               	movlb	2	; select bank2
  7944  05C5  0841               	movf	(sprintf@tmpval+3)^(0+256),w
  7945  05C6  0020               	movlb	0	; select bank0
  7946  05C7  00AD               	movwf	___llmod@dividend+3
  7947  05C8  0022               	movlb	2	; select bank2
  7948  05C9  0840               	movf	(sprintf@tmpval+2)^(0+256),w
  7949  05CA  0020               	movlb	0	; select bank0
  7950  05CB  00AC               	movwf	___llmod@dividend+2
  7951  05CC  0022               	movlb	2	; select bank2
  7952  05CD  083F               	movf	(sprintf@tmpval+1)^(0+256),w
  7953  05CE  0020               	movlb	0	; select bank0
  7954  05CF  00AB               	movwf	___llmod@dividend+1
  7955  05D0  0022               	movlb	2	; select bank2
  7956  05D1  083E               	movf	sprintf@tmpval^(0+256),w
  7957  05D2  0020               	movlb	0	; select bank0
  7958  05D3  00AA               	movwf	___llmod@dividend
  7959  05D4  31A1  21BA  3180   	fcall	___llmod
  7960  05D7  0020               	movlb	0	; select bank0
  7961  05D8  0829               	movf	?___llmod+3,w
  7962  05D9  0022               	movlb	2	; select bank2
  7963  05DA  00C1               	movwf	(sprintf@tmpval+3)^(0+256)
  7964  05DB  0020               	movlb	0	; select bank0
  7965  05DC  0828               	movf	?___llmod+2,w
  7966  05DD  0022               	movlb	2	; select bank2
  7967  05DE  00C0               	movwf	(sprintf@tmpval+2)^(0+256)
  7968  05DF  0020               	movlb	0	; select bank0
  7969  05E0  0827               	movf	?___llmod+1,w
  7970  05E1  0022               	movlb	2	; select bank2
  7971  05E2  00BF               	movwf	(sprintf@tmpval+1)^(0+256)
  7972  05E3  0020               	movlb	0	; select bank0
  7973  05E4  0826               	movf	?___llmod,w
  7974  05E5  0022               	movlb	2	; select bank2
  7975  05E6  00BE               	movwf	sprintf@tmpval^(0+256)
  7976                           
  7977                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7978  05E7  083E               	movf	sprintf@tmpval^(0+256),w
  7979  05E8  3E30               	addlw	48
  7980  05E9  00B3               	movwf	??_sprintf^(0+256)
  7981  05EA  0852               	movf	sprintf@sp^(0+256),w
  7982  05EB  0086               	movwf	6
  7983  05EC  3002               	movlw	2	; select bank4/5
  7984  05ED  0087               	movwf	7
  7985  05EE  0833               	movf	??_sprintf^(0+256),w
  7986  05EF  0081               	movwf	1
  7987  05F0  3001               	movlw	1
  7988  05F1  00B3               	movwf	??_sprintf^(0+256)
  7989  05F2  0833               	movf	??_sprintf^(0+256),w
  7990  05F3  07D2               	addwf	sprintf@sp^(0+256),f
  7991                           
  7992                           ;doprnt.c: 1232: val %= dpowers[c];
  7993  05F4  0853               	movf	sprintf@c^(0+256),w
  7994  05F5  00B3               	movwf	??_sprintf^(0+256)
  7995  05F6  01B4               	clrf	(??_sprintf^(0+256)+1)
  7996  05F7  35B3               	lslf	??_sprintf^(0+256),f
  7997  05F8  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  7998  05F9  35B3               	lslf	??_sprintf^(0+256),f
  7999  05FA  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  8000  05FB  30A0               	movlw	low (_dpowers| (0+32768))
  8001  05FC  0733               	addwf	??_sprintf^(0+256),w
  8002  05FD  0084               	movwf	4
  8003  05FE  30A8               	movlw	high (_dpowers| (0+32768))
  8004  05FF  3D34               	addwfc	(??_sprintf+1)^(0+256),w
  8005  0600  0085               	movwf	5
  8006  0601  3F00               	moviw [0]fsr0
  8007  0602  0020               	movlb	0	; select bank0
  8008  0603  00A6               	movwf	___llmod@divisor
  8009  0604  3F01               	moviw [1]fsr0
  8010  0605  00A7               	movwf	___llmod@divisor+1
  8011  0606  3F02               	moviw [2]fsr0
  8012  0607  00A8               	movwf	___llmod@divisor+2
  8013  0608  3F03               	moviw [3]fsr0
  8014  0609  00A9               	movwf	___llmod@divisor+3
  8015  060A  0022               	movlb	2	; select bank2
  8016  060B  0845               	movf	(sprintf@val+3)^(0+256),w
  8017  060C  0020               	movlb	0	; select bank0
  8018  060D  00AD               	movwf	___llmod@dividend+3
  8019  060E  0022               	movlb	2	; select bank2
  8020  060F  0844               	movf	(sprintf@val+2)^(0+256),w
  8021  0610  0020               	movlb	0	; select bank0
  8022  0611  00AC               	movwf	___llmod@dividend+2
  8023  0612  0022               	movlb	2	; select bank2
  8024  0613  0843               	movf	(sprintf@val+1)^(0+256),w
  8025  0614  0020               	movlb	0	; select bank0
  8026  0615  00AB               	movwf	___llmod@dividend+1
  8027  0616  0022               	movlb	2	; select bank2
  8028  0617  0842               	movf	sprintf@val^(0+256),w
  8029  0618  0020               	movlb	0	; select bank0
  8030  0619  00AA               	movwf	___llmod@dividend
  8031  061A  31A1  21BA  3180   	fcall	___llmod
  8032  061D  0020               	movlb	0	; select bank0
  8033  061E  0829               	movf	?___llmod+3,w
  8034  061F  0022               	movlb	2	; select bank2
  8035  0620  00C5               	movwf	(sprintf@val+3)^(0+256)
  8036  0621  0020               	movlb	0	; select bank0
  8037  0622  0828               	movf	?___llmod+2,w
  8038  0623  0022               	movlb	2	; select bank2
  8039  0624  00C4               	movwf	(sprintf@val+2)^(0+256)
  8040  0625  0020               	movlb	0	; select bank0
  8041  0626  0827               	movf	?___llmod+1,w
  8042  0627  0022               	movlb	2	; select bank2
  8043  0628  00C3               	movwf	(sprintf@val+1)^(0+256)
  8044  0629  0020               	movlb	0	; select bank0
  8045  062A  0826               	movf	?___llmod,w
  8046  062B  0022               	movlb	2	; select bank2
  8047  062C  2D8A               	goto	L7
  8048  062D                     l6811:	
  8049                           ;doprnt.c: 1233: }
  8050                           ;doprnt.c: 1235: while(prec) {
  8051                           
  8052                           
  8053                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  8054  062D  3030               	movlw	48
  8055  062E  00B3               	movwf	??_sprintf^(0+256)
  8056  062F  0852               	movf	sprintf@sp^(0+256),w
  8057  0630  0086               	movwf	6
  8058  0631  3002               	movlw	2	; select bank4/5
  8059  0632  0087               	movwf	7
  8060  0633  0833               	movf	??_sprintf^(0+256),w
  8061  0634  0081               	movwf	1
  8062  0635  3001               	movlw	1
  8063  0636  00B3               	movwf	??_sprintf^(0+256)
  8064  0637  0833               	movf	??_sprintf^(0+256),w
  8065  0638  07D2               	addwf	sprintf@sp^(0+256),f
  8066                           
  8067                           ;doprnt.c: 1237: prec--;
  8068  0639  30FF               	movlw	255
  8069  063A  07D0               	addwf	sprintf@prec^(0+256),f
  8070  063B  30FF               	movlw	255
  8071  063C  3DD1               	addwfc	(sprintf@prec+1)^(0+256),f
  8072  063D                     l6817:	
  8073  063D  0850               	movf	sprintf@prec^(0+256),w
  8074  063E  0451               	iorwf	(sprintf@prec+1)^(0+256),w
  8075  063F  1903               	btfsc	3,2
  8076  0640  28AD               	goto	l6911
  8077  0641  2E2D               	goto	l6811
  8078  0642                     l6819:	
  8079                           ;doprnt.c: 1238: }
  8080                           ;doprnt.c: 1245: continue;
  8081                           
  8082                           
  8083                           ;doprnt.c: 1246: }
  8084                           ;doprnt.c: 1253: {
  8085                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  8086  0642  083D               	movf	sprintf@ap^(0+256),w
  8087  0643  0086               	movwf	6
  8088  0644  3001               	movlw	1	; select bank2/3
  8089  0645  0087               	movwf	7
  8090  0646  3F40               	moviw [0]fsr1
  8091  0647  00B3               	movwf	??_sprintf^(0+256)
  8092  0648  3F41               	moviw [1]fsr1
  8093  0649  00B4               	movwf	(??_sprintf^(0+256)+1)
  8094  064A  0833               	movf	??_sprintf^(0+256),w
  8095  064B  00C2               	movwf	sprintf@val^(0+256)
  8096  064C  0834               	movf	(??_sprintf+1)^(0+256),w
  8097  064D  00C3               	movwf	(sprintf@val+1)^(0+256)
  8098  064E  0D89               	rlf	9,f
  8099  064F  3B89               	subwfb	9,f
  8100  0650  0989               	comf	9,f
  8101  0651  00C4               	movwf	(sprintf@val+2)^(0+256)
  8102  0652  00C5               	movwf	(sprintf@val+3)^(0+256)
  8103  0653  3002               	movlw	2
  8104  0654  00B3               	movwf	??_sprintf^(0+256)
  8105  0655  0833               	movf	??_sprintf^(0+256),w
  8106  0656  07BD               	addwf	sprintf@ap^(0+256),f
  8107                           
  8108                           ;doprnt.c: 1261: if((long)val < 0) {
  8109  0657  1FC5               	btfss	(sprintf@val+3)^(0+256),7
  8110  0658  2E68               	goto	l6829
  8111                           
  8112                           ;doprnt.c: 1262: flag |= 0x03;
  8113  0659  3003               	movlw	3
  8114  065A  04C8               	iorwf	sprintf@flag^(0+256),f
  8115  065B  3000               	movlw	0
  8116  065C  04C9               	iorwf	(sprintf@flag+1)^(0+256),f
  8117                           
  8118                           ;doprnt.c: 1263: val = -val;
  8119  065D  09C2               	comf	sprintf@val^(0+256),f
  8120  065E  09C3               	comf	(sprintf@val+1)^(0+256),f
  8121  065F  09C4               	comf	(sprintf@val+2)^(0+256),f
  8122  0660  09C5               	comf	(sprintf@val+3)^(0+256),f
  8123  0661  0AC2               	incf	sprintf@val^(0+256),f
  8124  0662  1903               	skipnz
  8125  0663  0AC3               	incf	(sprintf@val+1)^(0+256),f
  8126  0664  1903               	skipnz
  8127  0665  0AC4               	incf	(sprintf@val+2)^(0+256),f
  8128  0666  1903               	skipnz
  8129  0667  0AC5               	incf	(sprintf@val+3)^(0+256),f
  8130  0668                     l6829:	
  8131                           
  8132                           ;doprnt.c: 1264: }
  8133                           ;doprnt.c: 1266: }
  8134                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  8135  0668  0850               	movf	sprintf@prec^(0+256),w
  8136  0669  0451               	iorwf	(sprintf@prec+1)^(0+256),w
  8137  066A  1D03               	btfss	3,2
  8138  066B  2E76               	goto	l6835
  8139  066C  0845               	movf	(sprintf@val+3)^(0+256),w
  8140  066D  0444               	iorwf	(sprintf@val+2)^(0+256),w
  8141  066E  0443               	iorwf	(sprintf@val+1)^(0+256),w
  8142  066F  0442               	iorwf	sprintf@val^(0+256),w
  8143  0670  1D03               	skipz
  8144  0671  2E76               	goto	l6835
  8145                           
  8146                           ;doprnt.c: 1291: prec++;
  8147  0672  3001               	movlw	1
  8148  0673  07D0               	addwf	sprintf@prec^(0+256),f
  8149  0674  3000               	movlw	0
  8150  0675  3DD1               	addwfc	(sprintf@prec+1)^(0+256),f
  8151  0676                     l6835:	
  8152                           
  8153                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8154  0676  01D3               	clrf	sprintf@c^(0+256)
  8155  0677  0AD3               	incf	sprintf@c^(0+256),f
  8156  0678  300A               	movlw	10
  8157  0679  0653               	xorwf	sprintf@c^(0+256),w
  8158  067A  1903               	btfsc	3,2
  8159  067B  2EA9               	goto	l6847
  8160  067C                     l6841:	
  8161                           
  8162                           ;doprnt.c: 1306: if(val < dpowers[c])
  8163  067C  0853               	movf	sprintf@c^(0+256),w
  8164  067D  00B3               	movwf	??_sprintf^(0+256)
  8165  067E  01B4               	clrf	(??_sprintf^(0+256)+1)
  8166  067F  35B3               	lslf	??_sprintf^(0+256),f
  8167  0680  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  8168  0681  35B3               	lslf	??_sprintf^(0+256),f
  8169  0682  0DB4               	rlf	(??_sprintf^(0+256)+1),f
  8170  0683  30A0               	movlw	low (_dpowers| (0+32768))
  8171  0684  0733               	addwf	??_sprintf^(0+256),w
  8172  0685  0084               	movwf	4
  8173  0686  30A8               	movlw	high (_dpowers| (0+32768))
  8174  0687  3D34               	addwfc	(??_sprintf+1)^(0+256),w
  8175  0688  0085               	movwf	5
  8176  0689  3F00               	moviw [0]fsr0
  8177  068A  00B5               	movwf	(??_sprintf+2)^(0+256)
  8178  068B  3F01               	moviw [1]fsr0
  8179  068C  00B6               	movwf	((??_sprintf+2)^(0+256)+1)
  8180  068D  3F02               	moviw [2]fsr0
  8181  068E  00B7               	movwf	((??_sprintf+2)^(0+256)+2)
  8182  068F  3F03               	moviw [3]fsr0
  8183  0690  00B8               	movwf	((??_sprintf+2)^(0+256)+3)
  8184  0691  0838               	movf	(??_sprintf+5)^(0+256),w
  8185  0692  0245               	subwf	(sprintf@val+3)^(0+256),w
  8186  0693  1D03               	skipz
  8187  0694  2E9F               	goto	u9635
  8188  0695  0837               	movf	(??_sprintf+4)^(0+256),w
  8189  0696  0244               	subwf	(sprintf@val+2)^(0+256),w
  8190  0697  1D03               	skipz
  8191  0698  2E9F               	goto	u9635
  8192  0699  0836               	movf	(??_sprintf+3)^(0+256),w
  8193  069A  0243               	subwf	(sprintf@val+1)^(0+256),w
  8194  069B  1D03               	skipz
  8195  069C  2E9F               	goto	u9635
  8196  069D  0835               	movf	(??_sprintf+2)^(0+256),w
  8197  069E  0242               	subwf	sprintf@val^(0+256),w
  8198  069F                     u9635:	
  8199  069F  1C03               	btfss	3,0
  8200  06A0  2EA9               	goto	l6847
  8201                           
  8202                           ;doprnt.c: 1307: break;
  8203  06A1  3001               	movlw	1
  8204  06A2  00B3               	movwf	??_sprintf^(0+256)
  8205  06A3  0833               	movf	??_sprintf^(0+256),w
  8206  06A4  07D3               	addwf	sprintf@c^(0+256),f
  8207  06A5  300A               	movlw	10
  8208  06A6  0653               	xorwf	sprintf@c^(0+256),w
  8209  06A7  1D03               	btfss	3,2
  8210  06A8  2E7C               	goto	l6841
  8211  06A9                     l6847:	
  8212                           
  8213                           ;doprnt.c: 1339: if(c < prec)
  8214  06A9  0853               	movf	sprintf@c^(0+256),w
  8215  06AA  00B3               	movwf	??_sprintf^(0+256)
  8216  06AB  01B4               	clrf	(??_sprintf^(0+256)+1)
  8217  06AC  1BB3               	btfsc	??_sprintf^(0+256),7
  8218  06AD  03B4               	decf	(??_sprintf^(0+256)+1),f
  8219  06AE  0834               	movf	(??_sprintf+1)^(0+256),w
  8220  06AF  3A80               	xorlw	128
  8221  06B0  00B5               	movwf	(??_sprintf+2)^(0+256)
  8222  06B1  0851               	movf	(sprintf@prec+1)^(0+256),w
  8223  06B2  3A80               	xorlw	128
  8224  06B3  0235               	subwf	(??_sprintf+2)^(0+256),w
  8225  06B4  1D03               	skipz
  8226  06B5  2EB8               	goto	u9655
  8227  06B6  0850               	movf	sprintf@prec^(0+256),w
  8228  06B7  0233               	subwf	??_sprintf^(0+256),w
  8229  06B8                     u9655:	
  8230  06B8  1803               	skipnc
  8231  06B9  2EC0               	goto	l6851
  8232                           
  8233                           ;doprnt.c: 1340: c = prec;
  8234  06BA  0022               	movlb	2	; select bank2
  8235  06BB  0850               	movf	sprintf@prec^(0+256),w
  8236  06BC  00B3               	movwf	??_sprintf^(0+256)
  8237  06BD  0833               	movf	??_sprintf^(0+256),w
  8238  06BE  00D3               	movwf	sprintf@c^(0+256)
  8239  06BF  2ED8               	goto	l706
  8240  06C0                     l6851:	
  8241                           
  8242                           ;doprnt.c: 1341: else if(prec < c)
  8243  06C0  0022               	movlb	2	; select bank2
  8244  06C1  0853               	movf	sprintf@c^(0+256),w
  8245  06C2  00B3               	movwf	??_sprintf^(0+256)
  8246  06C3  01B4               	clrf	(??_sprintf^(0+256)+1)
  8247  06C4  1BB3               	btfsc	??_sprintf^(0+256),7
  8248  06C5  03B4               	decf	(??_sprintf^(0+256)+1),f
  8249  06C6  0851               	movf	(sprintf@prec+1)^(0+256),w
  8250  06C7  3A80               	xorlw	128
  8251  06C8  00B5               	movwf	(??_sprintf+2)^(0+256)
  8252  06C9  0834               	movf	(??_sprintf+1)^(0+256),w
  8253  06CA  3A80               	xorlw	128
  8254  06CB  0235               	subwf	(??_sprintf+2)^(0+256),w
  8255  06CC  1D03               	skipz
  8256  06CD  2ED0               	goto	u9665
  8257  06CE  0833               	movf	??_sprintf^(0+256),w
  8258  06CF  0250               	subwf	sprintf@prec^(0+256),w
  8259  06D0                     u9665:	
  8260  06D0  1803               	skipnc
  8261  06D1  2ED8               	goto	l706
  8262                           
  8263                           ;doprnt.c: 1342: prec = c;
  8264  06D2  0022               	movlb	2	; select bank2
  8265  06D3  0853               	movf	sprintf@c^(0+256),w
  8266  06D4  00D0               	movwf	sprintf@prec^(0+256)
  8267  06D5  01D1               	clrf	(sprintf@prec+1)^(0+256)
  8268  06D6  1BD0               	btfsc	sprintf@prec^(0+256),7
  8269  06D7  03D1               	decf	(sprintf@prec+1)^(0+256),f
  8270  06D8                     l706:	
  8271                           
  8272                           ;doprnt.c: 1345: if(width && flag & 0x03)
  8273  06D8  0022               	movlb	2	; select bank2
  8274  06D9  084A               	movf	sprintf@width^(0+256),w
  8275  06DA  044B               	iorwf	(sprintf@width+1)^(0+256),w
  8276  06DB  1903               	btfsc	3,2
  8277  06DC  2EEB               	goto	l6859
  8278  06DD  3003               	movlw	3
  8279  06DE  0548               	andwf	sprintf@flag^(0+256),w
  8280  06DF  00B3               	movwf	??_sprintf^(0+256)
  8281  06E0  3000               	movlw	0
  8282  06E1  0549               	andwf	(sprintf@flag+1)^(0+256),w
  8283  06E2  00B4               	movwf	(??_sprintf+1)^(0+256)
  8284  06E3  0833               	movf	??_sprintf^(0+256),w
  8285  06E4  0434               	iorwf	(??_sprintf^(0+256)+1),w
  8286  06E5  1903               	btfsc	3,2
  8287  06E6  2EEB               	goto	l6859
  8288                           
  8289                           ;doprnt.c: 1346: width--;
  8290  06E7  30FF               	movlw	255
  8291  06E8  07CA               	addwf	sprintf@width^(0+256),f
  8292  06E9  30FF               	movlw	255
  8293  06EA  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  8294  06EB                     l6859:	
  8295                           
  8296                           ;doprnt.c: 1348: if(flag & 0x4000) {
  8297  06EB  1F49               	btfss	(sprintf@flag+1)^(0+256),6
  8298  06EC  2F02               	goto	l6867
  8299                           
  8300                           ;doprnt.c: 1349: if(width > prec)
  8301  06ED  0851               	movf	(sprintf@prec+1)^(0+256),w
  8302  06EE  3A80               	xorlw	128
  8303  06EF  00B3               	movwf	??_sprintf^(0+256)
  8304  06F0  084B               	movf	(sprintf@width+1)^(0+256),w
  8305  06F1  3A80               	xorlw	128
  8306  06F2  0233               	subwf	??_sprintf^(0+256),w
  8307  06F3  1D03               	skipz
  8308  06F4  2EF7               	goto	u9705
  8309  06F5  084A               	movf	sprintf@width^(0+256),w
  8310  06F6  0250               	subwf	sprintf@prec^(0+256),w
  8311  06F7                     u9705:	
  8312  06F7  1803               	skipnc
  8313  06F8  2EFF               	goto	l6865
  8314                           
  8315                           ;doprnt.c: 1350: width -= prec;
  8316  06F9  0022               	movlb	2	; select bank2
  8317  06FA  0850               	movf	sprintf@prec^(0+256),w
  8318  06FB  02CA               	subwf	sprintf@width^(0+256),f
  8319  06FC  0851               	movf	(sprintf@prec+1)^(0+256),w
  8320  06FD  3BCB               	subwfb	(sprintf@width+1)^(0+256),f
  8321  06FE  2F02               	goto	l6867
  8322  06FF                     l6865:	
  8323                           
  8324                           ;doprnt.c: 1351: else
  8325                           ;doprnt.c: 1352: width = 0;
  8326  06FF  0022               	movlb	2	; select bank2
  8327  0700  01CA               	clrf	sprintf@width^(0+256)
  8328  0701  01CB               	clrf	(sprintf@width+1)^(0+256)
  8329  0702                     l6867:	
  8330                           
  8331                           ;doprnt.c: 1353: }
  8332                           ;doprnt.c: 1381: if(width > c)
  8333  0702  0853               	movf	sprintf@c^(0+256),w
  8334  0703  00B3               	movwf	??_sprintf^(0+256)
  8335  0704  01B4               	clrf	(??_sprintf^(0+256)+1)
  8336  0705  1BB3               	btfsc	??_sprintf^(0+256),7
  8337  0706  03B4               	decf	(??_sprintf^(0+256)+1),f
  8338  0707  0834               	movf	(??_sprintf+1)^(0+256),w
  8339  0708  3A80               	xorlw	128
  8340  0709  00B5               	movwf	(??_sprintf+2)^(0+256)
  8341  070A  084B               	movf	(sprintf@width+1)^(0+256),w
  8342  070B  3A80               	xorlw	128
  8343  070C  0235               	subwf	(??_sprintf+2)^(0+256),w
  8344  070D  1D03               	skipz
  8345  070E  2F11               	goto	u9715
  8346  070F  084A               	movf	sprintf@width^(0+256),w
  8347  0710  0233               	subwf	??_sprintf^(0+256),w
  8348  0711                     u9715:	
  8349  0711  1803               	skipnc
  8350  0712  2F1E               	goto	l6871
  8351                           
  8352                           ;doprnt.c: 1382: width -= c;
  8353  0713  0022               	movlb	2	; select bank2
  8354  0714  0853               	movf	sprintf@c^(0+256),w
  8355  0715  00B3               	movwf	??_sprintf^(0+256)
  8356  0716  01B4               	clrf	(??_sprintf^(0+256)+1)
  8357  0717  1BB3               	btfsc	??_sprintf^(0+256),7
  8358  0718  03B4               	decf	(??_sprintf^(0+256)+1),f
  8359  0719  0833               	movf	??_sprintf^(0+256),w
  8360  071A  02CA               	subwf	sprintf@width^(0+256),f
  8361  071B  0834               	movf	(??_sprintf+1)^(0+256),w
  8362  071C  3BCB               	subwfb	(sprintf@width+1)^(0+256),f
  8363  071D  2F21               	goto	l6873
  8364  071E                     l6871:	
  8365                           
  8366                           ;doprnt.c: 1383: else
  8367                           ;doprnt.c: 1384: width = 0;
  8368  071E  0022               	movlb	2	; select bank2
  8369  071F  01CA               	clrf	sprintf@width^(0+256)
  8370  0720  01CB               	clrf	(sprintf@width+1)^(0+256)
  8371  0721                     l6873:	
  8372                           
  8373                           ;doprnt.c: 1387: if(flag & 0x04) {
  8374  0721  1D48               	btfss	sprintf@flag^(0+256),2
  8375  0722  2F4E               	goto	l6889
  8376                           
  8377                           ;doprnt.c: 1392: if(flag & 0x03)
  8378  0723  3003               	movlw	3
  8379  0724  0548               	andwf	sprintf@flag^(0+256),w
  8380  0725  00B3               	movwf	??_sprintf^(0+256)
  8381  0726  3000               	movlw	0
  8382  0727  0549               	andwf	(sprintf@flag+1)^(0+256),w
  8383  0728  00B4               	movwf	(??_sprintf+1)^(0+256)
  8384  0729  0833               	movf	??_sprintf^(0+256),w
  8385  072A  0434               	iorwf	(??_sprintf^(0+256)+1),w
  8386  072B  1903               	btfsc	3,2
  8387  072C  2F39               	goto	l6881
  8388                           
  8389                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  8390  072D  302D               	movlw	45
  8391  072E  00B3               	movwf	??_sprintf^(0+256)
  8392  072F  0852               	movf	sprintf@sp^(0+256),w
  8393  0730  0086               	movwf	6
  8394  0731  3002               	movlw	2	; select bank4/5
  8395  0732  0087               	movwf	7
  8396  0733  0833               	movf	??_sprintf^(0+256),w
  8397  0734  0081               	movwf	1
  8398  0735  3001               	movlw	1
  8399  0736  00B3               	movwf	??_sprintf^(0+256)
  8400  0737  0833               	movf	??_sprintf^(0+256),w
  8401  0738  07D2               	addwf	sprintf@sp^(0+256),f
  8402  0739                     l6881:	
  8403                           
  8404                           ;doprnt.c: 1415: if(width)
  8405  0739  084A               	movf	sprintf@width^(0+256),w
  8406  073A  044B               	iorwf	(sprintf@width+1)^(0+256),w
  8407  073B  1903               	btfsc	3,2
  8408  073C  2F7C               	goto	l6909
  8409                           
  8410                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8411                           
  8412                           ;doprnt.c: 1416: do
  8413  073D  3030               	movlw	48
  8414  073E  00B3               	movwf	??_sprintf^(0+256)
  8415  073F  0852               	movf	sprintf@sp^(0+256),w
  8416  0740  0086               	movwf	6
  8417  0741  3002               	movlw	2	; select bank4/5
  8418  0742  0087               	movwf	7
  8419  0743  0833               	movf	??_sprintf^(0+256),w
  8420  0744  0081               	movwf	1
  8421  0745  3001               	movlw	1
  8422  0746  00B3               	movwf	??_sprintf^(0+256)
  8423  0747  0833               	movf	??_sprintf^(0+256),w
  8424  0748  07D2               	addwf	sprintf@sp^(0+256),f
  8425                           
  8426                           ;doprnt.c: 1418: while(--width);
  8427  0749  30FF               	movlw	255
  8428  074A  07CA               	addwf	sprintf@width^(0+256),f
  8429  074B  30FF               	movlw	255
  8430  074C  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  8431  074D  2F39               	goto	l6881
  8432  074E                     l6889:	
  8433                           ;doprnt.c: 1420: } else
  8434                           
  8435                           
  8436                           ;doprnt.c: 1422: {
  8437                           ;doprnt.c: 1424: if(width
  8438                           ;doprnt.c: 1428: )
  8439  074E  084A               	movf	sprintf@width^(0+256),w
  8440  074F  044B               	iorwf	(sprintf@width+1)^(0+256),w
  8441  0750  1903               	btfsc	3,2
  8442  0751  2F66               	goto	l6897
  8443  0752                     l6891:	
  8444                           ;doprnt.c: 1429: do
  8445                           
  8446                           
  8447                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8448  0752  3020               	movlw	32
  8449  0753  00B3               	movwf	??_sprintf^(0+256)
  8450  0754  0852               	movf	sprintf@sp^(0+256),w
  8451  0755  0086               	movwf	6
  8452  0756  3002               	movlw	2	; select bank4/5
  8453  0757  0087               	movwf	7
  8454  0758  0833               	movf	??_sprintf^(0+256),w
  8455  0759  0081               	movwf	1
  8456  075A  3001               	movlw	1
  8457  075B  00B3               	movwf	??_sprintf^(0+256)
  8458  075C  0833               	movf	??_sprintf^(0+256),w
  8459  075D  07D2               	addwf	sprintf@sp^(0+256),f
  8460                           
  8461                           ;doprnt.c: 1431: while(--width);
  8462  075E  30FF               	movlw	255
  8463  075F  07CA               	addwf	sprintf@width^(0+256),f
  8464  0760  30FF               	movlw	255
  8465  0761  3DCB               	addwfc	(sprintf@width+1)^(0+256),f
  8466  0762  084A               	movf	sprintf@width^(0+256),w
  8467  0763  044B               	iorwf	(sprintf@width+1)^(0+256),w
  8468  0764  1D03               	btfss	3,2
  8469  0765  2F52               	goto	l6891
  8470  0766                     l6897:	
  8471                           
  8472                           ;doprnt.c: 1438: if(flag & 0x03)
  8473  0766  3003               	movlw	3
  8474  0767  0548               	andwf	sprintf@flag^(0+256),w
  8475  0768  00B3               	movwf	??_sprintf^(0+256)
  8476  0769  3000               	movlw	0
  8477  076A  0549               	andwf	(sprintf@flag+1)^(0+256),w
  8478  076B  00B4               	movwf	(??_sprintf+1)^(0+256)
  8479  076C  0833               	movf	??_sprintf^(0+256),w
  8480  076D  0434               	iorwf	(??_sprintf^(0+256)+1),w
  8481  076E  1903               	btfsc	3,2
  8482  076F  2F7C               	goto	l6909
  8483                           
  8484                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8485  0770  302D               	movlw	45
  8486  0771                     L9:	
  8487  0771  00B3               	movwf	??_sprintf^(0+256)
  8488  0772  0852               	movf	sprintf@sp^(0+256),w
  8489  0773  0086               	movwf	6
  8490  0774  3002               	movlw	2	; select bank4/5
  8491  0775  0087               	movwf	7
  8492  0776  0833               	movf	??_sprintf^(0+256),w
  8493  0777  0081               	movwf	1
  8494  0778  3001               	movlw	1
  8495  0779  00B3               	movwf	??_sprintf^(0+256)
  8496  077A  0833               	movf	??_sprintf^(0+256),w
  8497  077B  07D2               	addwf	sprintf@sp^(0+256),f
  8498  077C                     l6909:	
  8499  077C  30FF               	movlw	255
  8500  077D  07D0               	addwf	sprintf@prec^(0+256),f
  8501  077E  30FF               	movlw	255
  8502  077F  3DD1               	addwfc	(sprintf@prec+1)^(0+256),f
  8503  0780  0A50               	incf	sprintf@prec^(0+256),w
  8504  0781  1903               	btfsc	3,2
  8505  0782  0A51               	incf	(sprintf@prec+1)^(0+256),w
  8506  0783  1903               	btfsc	3,2
  8507  0784  28AD               	goto	l6911
  8508                           
  8509                           ;doprnt.c: 1478: {
  8510                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8511                           
  8512                           ;doprnt.c: 1469: }
  8513                           ;doprnt.c: 1474: while(prec--) {
  8514  0785  3000               	movlw	0
  8515  0786  0020               	movlb	0	; select bank0
  8516  0787  00A9               	movwf	___llmod@divisor+3
  8517  0788  3000               	movlw	0
  8518  0789  00A8               	movwf	___llmod@divisor+2
  8519  078A  3000               	movlw	0
  8520  078B  00A7               	movwf	___llmod@divisor+1
  8521  078C  300A               	movlw	10
  8522  078D  00A6               	movwf	___llmod@divisor
  8523  078E  0022               	movlb	2	; select bank2
  8524  078F  0851               	movf	(sprintf@prec+1)^(0+256),w
  8525  0790  0085               	movwf	5
  8526  0791  0850               	movf	sprintf@prec^(0+256),w
  8527  0792  0084               	movwf	4
  8528  0793  3584               	lslf	4,f
  8529  0794  0D85               	rlf	5,f
  8530  0795  3584               	lslf	4,f
  8531  0796  0D85               	rlf	5,f
  8532  0797  30A0               	movlw	low (_dpowers| (0+32768))
  8533  0798  0784               	addwf	4,f
  8534  0799  30A8               	movlw	high (_dpowers| (0+32768))
  8535  079A  3D85               	addwfc	5,f
  8536  079B  3F00               	moviw [0]fsr0
  8537  079C  00F2               	movwf	___lldiv@divisor
  8538  079D  3F01               	moviw [1]fsr0
  8539  079E  00F3               	movwf	___lldiv@divisor+1
  8540  079F  3F02               	moviw [2]fsr0
  8541  07A0  00F4               	movwf	___lldiv@divisor+2
  8542  07A1  3F03               	moviw [3]fsr0
  8543  07A2  00F5               	movwf	___lldiv@divisor+3
  8544  07A3  0845               	movf	(sprintf@val+3)^(0+256),w
  8545  07A4  00F9               	movwf	___lldiv@dividend+3
  8546  07A5  0844               	movf	(sprintf@val+2)^(0+256),w
  8547  07A6  00F8               	movwf	___lldiv@dividend+2
  8548  07A7  0843               	movf	(sprintf@val+1)^(0+256),w
  8549  07A8  00F7               	movwf	___lldiv@dividend+1
  8550  07A9  0842               	movf	sprintf@val^(0+256),w
  8551  07AA  00F6               	movwf	___lldiv@dividend
  8552  07AB  31A3  23CD  3180   	fcall	___lldiv
  8553  07AE  0875               	movf	?___lldiv+3,w
  8554  07AF  0020               	movlb	0	; select bank0
  8555  07B0  00AD               	movwf	___llmod@dividend+3
  8556  07B1  0874               	movf	?___lldiv+2,w
  8557  07B2  00AC               	movwf	___llmod@dividend+2
  8558  07B3  0873               	movf	?___lldiv+1,w
  8559  07B4  00AB               	movwf	___llmod@dividend+1
  8560  07B5  0872               	movf	?___lldiv,w
  8561  07B6  00AA               	movwf	___llmod@dividend
  8562  07B7  31A1  21BA  3180   	fcall	___llmod
  8563  07BA  0020               	movlb	0	; select bank0
  8564  07BB  0826               	movf	?___llmod,w
  8565  07BC  3E30               	addlw	48
  8566  07BD  0022               	movlb	2	; select bank2
  8567  07BE  00B3               	movwf	??_sprintf^(0+256)
  8568  07BF  0833               	movf	??_sprintf^(0+256),w
  8569  07C0  00D3               	movwf	sprintf@c^(0+256)
  8570                           
  8571                           ;doprnt.c: 1523: }
  8572                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8573  07C1  0853               	movf	sprintf@c^(0+256),w
  8574  07C2  2F71               	goto	L9
  8575  07C3                     l6913:	
  8576                           ;doprnt.c: 1525: }
  8577                           ;doprnt.c: 1533: }
  8578                           ;doprnt.c: 1535: alldone:
  8579                           
  8580                           
  8581                           ;doprnt.c: 1538: *sp = 0;
  8582  07C3  0852               	movf	sprintf@sp^(0+256),w
  8583  07C4  0086               	movwf	6
  8584  07C5  3002               	movlw	2	; select bank4/5
  8585  07C6  0087               	movwf	7
  8586  07C7  0181               	clrf	1
  8587  07C8  0008               	return
  8588  07C9                     __end_of_sprintf:	
  8589                           ;doprnt.c: 1540: return 0;
  8590                           ;	Return value of _sprintf is never used
  8591                           
  8592                           
  8593                           	psect	text8
  8594  0D70                     __ptext8:	
  8595 ;; *************** function _scale *****************
  8596 ;; Defined at:
  8597 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  scl             1    wreg     char 
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;  scl             1   74[BANK0 ] char 
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  4   50[BANK0 ] char 
  8604 ;; Registers used:
  8605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8612 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8613 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8614 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8615 ;;Total ram usage:       25 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    4
  8618 ;; This function calls:
  8619 ;;		___awdiv
  8620 ;;		___awmod
  8621 ;;		___flmul
  8622 ;; This function is called by:
  8623 ;;		_sprintf
  8624 ;; This function uses a non-reentrant model
  8625 ;;
  8626                           
  8627                           
  8628                           ;psect for function _scale
  8629  0D70                     _scale:	
  8630                           
  8631                           ;incstack = 0
  8632                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8633                           ;scale@scl stored from wreg
  8634  0D70  0020               	movlb	0	; select bank0
  8635  0D71  00EA               	movwf	scale@scl
  8636                           
  8637                           ;doprnt.c: 428: if(scl < 0) {
  8638  0D72  1FEA               	btfss	scale@scl,7
  8639  0D73  2EBB               	goto	l6309
  8640                           
  8641                           ;doprnt.c: 429: scl = -scl;
  8642  0D74  09EA               	comf	scale@scl,f
  8643  0D75  0AEA               	incf	scale@scl,f
  8644                           
  8645                           ;doprnt.c: 430: if(scl>=110)
  8646  0D76  086A               	movf	scale@scl,w
  8647  0D77  3A80               	xorlw	128
  8648  0D78  3E12               	addlw	-238
  8649  0D79  1C03               	skipc
  8650  0D7A  2E32               	goto	l6299
  8651                           
  8652                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8653  0D7B  300A               	movlw	10
  8654  0D7C  00A0               	movwf	___awdiv@divisor
  8655  0D7D  3000               	movlw	0
  8656  0D7E  00A1               	movwf	___awdiv@divisor+1
  8657  0D7F  086A               	movf	scale@scl,w
  8658  0D80  00F4               	movwf	___awmod@dividend
  8659  0D81  01F5               	clrf	___awmod@dividend+1
  8660  0D82  1BF4               	btfsc	___awmod@dividend,7
  8661  0D83  03F5               	decf	___awmod@dividend+1,f
  8662  0D84  3064               	movlw	100
  8663  0D85  00F2               	movwf	___awmod@divisor
  8664  0D86  3000               	movlw	0
  8665  0D87  00F3               	movwf	___awmod@divisor+1
  8666  0D88  31A1  21FD  318D   	fcall	___awmod
  8667  0D8B  0873               	movf	?___awmod+1,w
  8668  0D8C  0020               	movlb	0	; select bank0
  8669  0D8D  00A3               	movwf	___awdiv@dividend+1
  8670  0D8E  0872               	movf	?___awmod,w
  8671  0D8F  00A2               	movwf	___awdiv@dividend
  8672  0D90  31A3  2328  318D   	fcall	___awdiv
  8673  0D93  0020               	movlb	0	; select bank0
  8674  0D94  0820               	movf	?___awdiv,w
  8675  0D95  00D6               	movwf	??_scale
  8676  0D96  0821               	movf	?___awdiv+1,w
  8677  0D97  00D7               	movwf	??_scale+1
  8678  0D98  35D6               	lslf	??_scale,f
  8679  0D99  0DD7               	rlf	??_scale+1,f
  8680  0D9A  35D6               	lslf	??_scale,f
  8681  0D9B  0DD7               	rlf	??_scale+1,f
  8682  0D9C  0856               	movf	??_scale,w
  8683  0D9D  3E24               	addlw	36
  8684  0D9E  00D8               	movwf	??_scale+2
  8685  0D9F  3000               	movlw	0
  8686  0DA0  3D57               	addwfc	??_scale+1,w
  8687  0DA1  00D9               	movwf	??_scale+3
  8688  0DA2  306C               	movlw	low (__npowers_| (0+32768))
  8689  0DA3  0758               	addwf	??_scale+2,w
  8690  0DA4  0084               	movwf	4
  8691  0DA5  30A8               	movlw	high (__npowers_| (0+32768))
  8692  0DA6  3D59               	addwfc	??_scale+3,w
  8693  0DA7  0085               	movwf	5
  8694  0DA8  3F00               	moviw [0]fsr0
  8695  0DA9  00DA               	movwf	??_scale+4
  8696  0DAA  3F01               	moviw [1]fsr0
  8697  0DAB  00DB               	movwf	??_scale+5
  8698  0DAC  3F02               	moviw [2]fsr0
  8699  0DAD  00DC               	movwf	??_scale+6
  8700  0DAE  3F03               	moviw [3]fsr0
  8701  0DAF  00DD               	movwf	??_scale+7
  8702  0DB0  085D               	movf	??_scale+7,w
  8703  0DB1  00BB               	movwf	___flmul@b+3
  8704  0DB2  085C               	movf	??_scale+6,w
  8705  0DB3  00BA               	movwf	___flmul@b+2
  8706  0DB4  085B               	movf	??_scale+5,w
  8707  0DB5  00B9               	movwf	___flmul@b+1
  8708  0DB6  085A               	movf	??_scale+4,w
  8709  0DB7  00B8               	movwf	___flmul@b
  8710  0DB8  3064               	movlw	100
  8711  0DB9  00A0               	movwf	___awdiv@divisor
  8712  0DBA  3000               	movlw	0
  8713  0DBB  00A1               	movwf	___awdiv@divisor+1
  8714  0DBC  086A               	movf	scale@scl,w
  8715  0DBD  00A2               	movwf	___awdiv@dividend
  8716  0DBE  01A3               	clrf	___awdiv@dividend+1
  8717  0DBF  1BA2               	btfsc	___awdiv@dividend,7
  8718  0DC0  03A3               	decf	___awdiv@dividend+1,f
  8719  0DC1  31A3  2328  318D   	fcall	___awdiv
  8720  0DC4  0020               	movlb	0	; select bank0
  8721  0DC5  0820               	movf	?___awdiv,w
  8722  0DC6  00DE               	movwf	??_scale+8
  8723  0DC7  0821               	movf	?___awdiv+1,w
  8724  0DC8  00DF               	movwf	??_scale+9
  8725  0DC9  35DE               	lslf	??_scale+8,f
  8726  0DCA  0DDF               	rlf	??_scale+9,f
  8727  0DCB  35DE               	lslf	??_scale+8,f
  8728  0DCC  0DDF               	rlf	??_scale+9,f
  8729  0DCD  085E               	movf	??_scale+8,w
  8730  0DCE  3E48               	addlw	72
  8731  0DCF  00E0               	movwf	??_scale+10
  8732  0DD0  3000               	movlw	0
  8733  0DD1  3D5F               	addwfc	??_scale+9,w
  8734  0DD2  00E1               	movwf	??_scale+11
  8735  0DD3  306C               	movlw	low (__npowers_| (0+32768))
  8736  0DD4  0760               	addwf	??_scale+10,w
  8737  0DD5  0084               	movwf	4
  8738  0DD6  30A8               	movlw	high (__npowers_| (0+32768))
  8739  0DD7  3D61               	addwfc	??_scale+11,w
  8740  0DD8  0085               	movwf	5
  8741  0DD9  3F00               	moviw [0]fsr0
  8742  0DDA  00E2               	movwf	??_scale+12
  8743  0DDB  3F01               	moviw [1]fsr0
  8744  0DDC  00E3               	movwf	??_scale+13
  8745  0DDD  3F02               	moviw [2]fsr0
  8746  0DDE  00E4               	movwf	??_scale+14
  8747  0DDF  3F03               	moviw [3]fsr0
  8748  0DE0  00E5               	movwf	??_scale+15
  8749  0DE1  0865               	movf	??_scale+15,w
  8750  0DE2  00BF               	movwf	___flmul@a+3
  8751  0DE3  0864               	movf	??_scale+14,w
  8752  0DE4  00BE               	movwf	___flmul@a+2
  8753  0DE5  0863               	movf	??_scale+13,w
  8754  0DE6  00BD               	movwf	___flmul@a+1
  8755  0DE7  0862               	movf	??_scale+12,w
  8756  0DE8  00BC               	movwf	___flmul@a
  8757  0DE9  3188  20E4  318D   	fcall	___flmul
  8758  0DEC  0020               	movlb	0	; select bank0
  8759  0DED  083B               	movf	?___flmul+3,w
  8760  0DEE  00E9               	movwf	_scale$2065+3
  8761  0DEF  083A               	movf	?___flmul+2,w
  8762  0DF0  00E8               	movwf	_scale$2065+2
  8763  0DF1  0839               	movf	?___flmul+1,w
  8764  0DF2  00E7               	movwf	_scale$2065+1
  8765  0DF3  0838               	movf	?___flmul,w
  8766  0DF4  00E6               	movwf	_scale$2065
  8767                           
  8768                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  8769  0DF5  300A               	movlw	10
  8770  0DF6  00F2               	movwf	___awmod@divisor
  8771  0DF7  3000               	movlw	0
  8772  0DF8  00F3               	movwf	___awmod@divisor+1
  8773  0DF9  086A               	movf	scale@scl,w
  8774  0DFA  00F4               	movwf	___awmod@dividend
  8775  0DFB  01F5               	clrf	___awmod@dividend+1
  8776  0DFC  1BF4               	btfsc	___awmod@dividend,7
  8777  0DFD  03F5               	decf	___awmod@dividend+1,f
  8778  0DFE  31A1  21FD  318D   	fcall	___awmod
  8779  0E01  0873               	movf	?___awmod+1,w
  8780  0E02  0085               	movwf	5
  8781  0E03  0872               	movf	?___awmod,w
  8782  0E04  0084               	movwf	4
  8783  0E05  3584               	lslf	4,f
  8784  0E06  0D85               	rlf	5,f
  8785  0E07  3584               	lslf	4,f
  8786  0E08  0D85               	rlf	5,f
  8787  0E09  306C               	movlw	low (__npowers_| (0+32768))
  8788  0E0A  0784               	addwf	4,f
  8789  0E0B  30A8               	movlw	high (__npowers_| (0+32768))
  8790  0E0C  3D85               	addwfc	5,f
  8791  0E0D  3F00               	moviw [0]fsr0
  8792  0E0E  0020               	movlb	0	; select bank0
  8793  0E0F  00D6               	movwf	??_scale
  8794  0E10  3F01               	moviw [1]fsr0
  8795  0E11  00D7               	movwf	??_scale+1
  8796  0E12  3F02               	moviw [2]fsr0
  8797  0E13  00D8               	movwf	??_scale+2
  8798  0E14  3F03               	moviw [3]fsr0
  8799  0E15  00D9               	movwf	??_scale+3
  8800  0E16  0859               	movf	??_scale+3,w
  8801  0E17  00BB               	movwf	___flmul@b+3
  8802  0E18  0858               	movf	??_scale+2,w
  8803  0E19  00BA               	movwf	___flmul@b+2
  8804  0E1A  0857               	movf	??_scale+1,w
  8805  0E1B  00B9               	movwf	___flmul@b+1
  8806  0E1C  0856               	movf	??_scale,w
  8807  0E1D  00B8               	movwf	___flmul@b
  8808  0E1E  0869               	movf	_scale$2065+3,w
  8809  0E1F  00BF               	movwf	___flmul@a+3
  8810  0E20  0868               	movf	_scale$2065+2,w
  8811  0E21  00BE               	movwf	___flmul@a+2
  8812  0E22  0867               	movf	_scale$2065+1,w
  8813  0E23  00BD               	movwf	___flmul@a+1
  8814  0E24  0866               	movf	_scale$2065,w
  8815  0E25  00BC               	movwf	___flmul@a
  8816  0E26  3188  20E4         	fcall	___flmul
  8817  0E28  0020               	movlb	0	; select bank0
  8818  0E29  083B               	movf	?___flmul+3,w
  8819  0E2A  00D5               	movwf	?_scale+3
  8820  0E2B  083A               	movf	?___flmul+2,w
  8821  0E2C  00D4               	movwf	?_scale+2
  8822  0E2D  0839               	movf	?___flmul+1,w
  8823  0E2E  00D3               	movwf	?_scale+1
  8824  0E2F  0838               	movf	?___flmul,w
  8825  0E30  00D2               	movwf	?_scale
  8826  0E31  0008               	return
  8827  0E32                     l6299:	
  8828                           
  8829                           ;doprnt.c: 432: else if(scl > 10)
  8830  0E32  086A               	movf	scale@scl,w
  8831  0E33  3A80               	xorlw	128
  8832  0E34  3E75               	addlw	-139
  8833  0E35  1C03               	skipc
  8834  0E36  2E9D               	goto	l6305
  8835                           
  8836                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8837  0E37  300A               	movlw	10
  8838  0E38  00F2               	movwf	___awmod@divisor
  8839  0E39  3000               	movlw	0
  8840  0E3A  00F3               	movwf	___awmod@divisor+1
  8841  0E3B  086A               	movf	scale@scl,w
  8842  0E3C  00F4               	movwf	___awmod@dividend
  8843  0E3D  01F5               	clrf	___awmod@dividend+1
  8844  0E3E  1BF4               	btfsc	___awmod@dividend,7
  8845  0E3F  03F5               	decf	___awmod@dividend+1,f
  8846  0E40  31A1  21FD  318D   	fcall	___awmod
  8847  0E43  0873               	movf	?___awmod+1,w
  8848  0E44  0085               	movwf	5
  8849  0E45  0872               	movf	?___awmod,w
  8850  0E46  0084               	movwf	4
  8851  0E47  3584               	lslf	4,f
  8852  0E48  0D85               	rlf	5,f
  8853  0E49  3584               	lslf	4,f
  8854  0E4A  0D85               	rlf	5,f
  8855  0E4B  306C               	movlw	low (__npowers_| (0+32768))
  8856  0E4C  0784               	addwf	4,f
  8857  0E4D  30A8               	movlw	high (__npowers_| (0+32768))
  8858  0E4E  3D85               	addwfc	5,f
  8859  0E4F  3F00               	moviw [0]fsr0
  8860  0E50  0020               	movlb	0	; select bank0
  8861  0E51  00D6               	movwf	??_scale
  8862  0E52  3F01               	moviw [1]fsr0
  8863  0E53  00D7               	movwf	??_scale+1
  8864  0E54  3F02               	moviw [2]fsr0
  8865  0E55  00D8               	movwf	??_scale+2
  8866  0E56  3F03               	moviw [3]fsr0
  8867  0E57  00D9               	movwf	??_scale+3
  8868  0E58  0859               	movf	??_scale+3,w
  8869  0E59  00BB               	movwf	___flmul@b+3
  8870  0E5A  0858               	movf	??_scale+2,w
  8871  0E5B  00BA               	movwf	___flmul@b+2
  8872  0E5C  0857               	movf	??_scale+1,w
  8873  0E5D  00B9               	movwf	___flmul@b+1
  8874  0E5E  0856               	movf	??_scale,w
  8875  0E5F  00B8               	movwf	___flmul@b
  8876  0E60  300A               	movlw	10
  8877  0E61  00A0               	movwf	___awdiv@divisor
  8878  0E62  3000               	movlw	0
  8879  0E63  00A1               	movwf	___awdiv@divisor+1
  8880  0E64  086A               	movf	scale@scl,w
  8881  0E65  00A2               	movwf	___awdiv@dividend
  8882  0E66  01A3               	clrf	___awdiv@dividend+1
  8883  0E67  1BA2               	btfsc	___awdiv@dividend,7
  8884  0E68  03A3               	decf	___awdiv@dividend+1,f
  8885  0E69  31A3  2328  318D   	fcall	___awdiv
  8886  0E6C  0020               	movlb	0	; select bank0
  8887  0E6D  0820               	movf	?___awdiv,w
  8888  0E6E  00DA               	movwf	??_scale+4
  8889  0E6F  0821               	movf	?___awdiv+1,w
  8890  0E70  00DB               	movwf	??_scale+5
  8891  0E71  35DA               	lslf	??_scale+4,f
  8892  0E72  0DDB               	rlf	??_scale+5,f
  8893  0E73  35DA               	lslf	??_scale+4,f
  8894  0E74  0DDB               	rlf	??_scale+5,f
  8895  0E75  085A               	movf	??_scale+4,w
  8896  0E76  3E24               	addlw	36
  8897  0E77  00DC               	movwf	??_scale+6
  8898  0E78  3000               	movlw	0
  8899  0E79  3D5B               	addwfc	??_scale+5,w
  8900  0E7A  00DD               	movwf	??_scale+7
  8901  0E7B  306C               	movlw	low (__npowers_| (0+32768))
  8902  0E7C  075C               	addwf	??_scale+6,w
  8903  0E7D  0084               	movwf	4
  8904  0E7E  30A8               	movlw	high (__npowers_| (0+32768))
  8905  0E7F  3D5D               	addwfc	??_scale+7,w
  8906  0E80  0085               	movwf	5
  8907  0E81  3F00               	moviw [0]fsr0
  8908  0E82  00DE               	movwf	??_scale+8
  8909  0E83  3F01               	moviw [1]fsr0
  8910  0E84  00DF               	movwf	??_scale+9
  8911  0E85  3F02               	moviw [2]fsr0
  8912  0E86  00E0               	movwf	??_scale+10
  8913  0E87  3F03               	moviw [3]fsr0
  8914  0E88  00E1               	movwf	??_scale+11
  8915  0E89  0861               	movf	??_scale+11,w
  8916  0E8A  00BF               	movwf	___flmul@a+3
  8917  0E8B  0860               	movf	??_scale+10,w
  8918  0E8C  00BE               	movwf	___flmul@a+2
  8919  0E8D  085F               	movf	??_scale+9,w
  8920  0E8E  00BD               	movwf	___flmul@a+1
  8921  0E8F  085E               	movf	??_scale+8,w
  8922  0E90  00BC               	movwf	___flmul@a
  8923  0E91  3188  20E4         	fcall	___flmul
  8924  0E93  0020               	movlb	0	; select bank0
  8925  0E94  083B               	movf	?___flmul+3,w
  8926  0E95  00D5               	movwf	?_scale+3
  8927  0E96  083A               	movf	?___flmul+2,w
  8928  0E97  00D4               	movwf	?_scale+2
  8929  0E98  0839               	movf	?___flmul+1,w
  8930  0E99  00D3               	movwf	?_scale+1
  8931  0E9A  0838               	movf	?___flmul,w
  8932  0E9B  00D2               	movwf	?_scale
  8933  0E9C  0008               	return
  8934  0E9D                     l6305:	
  8935                           
  8936                           ;doprnt.c: 434: return _npowers_[scl];
  8937  0E9D  086A               	movf	scale@scl,w
  8938  0E9E  00D6               	movwf	??_scale
  8939  0E9F  01D7               	clrf	??_scale+1
  8940  0EA0  35D6               	lslf	??_scale,f
  8941  0EA1  0DD7               	rlf	??_scale+1,f
  8942  0EA2  35D6               	lslf	??_scale,f
  8943  0EA3  0DD7               	rlf	??_scale+1,f
  8944  0EA4  306C               	movlw	low (__npowers_| (0+32768))
  8945  0EA5  0756               	addwf	??_scale,w
  8946  0EA6  0084               	movwf	4
  8947  0EA7  30A8               	movlw	high (__npowers_| (0+32768))
  8948  0EA8  3D57               	addwfc	??_scale+1,w
  8949  0EA9  0085               	movwf	5
  8950  0EAA  3F00               	moviw [0]fsr0
  8951  0EAB  00D8               	movwf	??_scale+2
  8952  0EAC  3F01               	moviw [1]fsr0
  8953  0EAD  00D9               	movwf	??_scale+3
  8954  0EAE  3F02               	moviw [2]fsr0
  8955  0EAF  00DA               	movwf	??_scale+4
  8956  0EB0  3F03               	moviw [3]fsr0
  8957  0EB1  00DB               	movwf	??_scale+5
  8958  0EB2  085B               	movf	??_scale+5,w
  8959  0EB3  00D5               	movwf	?_scale+3
  8960  0EB4  085A               	movf	??_scale+4,w
  8961  0EB5  00D4               	movwf	?_scale+2
  8962  0EB6  0859               	movf	??_scale+3,w
  8963  0EB7  00D3               	movwf	?_scale+1
  8964  0EB8  0858               	movf	??_scale+2,w
  8965  0EB9  00D2               	movwf	?_scale
  8966  0EBA  0008               	return
  8967  0EBB                     l6309:	
  8968                           
  8969                           ;doprnt.c: 435: }
  8970                           ;doprnt.c: 436: if(scl>=110)
  8971  0EBB  086A               	movf	scale@scl,w
  8972  0EBC  3A80               	xorlw	128
  8973  0EBD  3E12               	addlw	-238
  8974  0EBE  1C03               	skipc
  8975  0EBF  2F77               	goto	l6317
  8976                           
  8977                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  8978  0EC0  300A               	movlw	10
  8979  0EC1  00A0               	movwf	___awdiv@divisor
  8980  0EC2  3000               	movlw	0
  8981  0EC3  00A1               	movwf	___awdiv@divisor+1
  8982  0EC4  086A               	movf	scale@scl,w
  8983  0EC5  00F4               	movwf	___awmod@dividend
  8984  0EC6  01F5               	clrf	___awmod@dividend+1
  8985  0EC7  1BF4               	btfsc	___awmod@dividend,7
  8986  0EC8  03F5               	decf	___awmod@dividend+1,f
  8987  0EC9  3064               	movlw	100
  8988  0ECA  00F2               	movwf	___awmod@divisor
  8989  0ECB  3000               	movlw	0
  8990  0ECC  00F3               	movwf	___awmod@divisor+1
  8991  0ECD  31A1  21FD  318D   	fcall	___awmod
  8992  0ED0  0873               	movf	?___awmod+1,w
  8993  0ED1  0020               	movlb	0	; select bank0
  8994  0ED2  00A3               	movwf	___awdiv@dividend+1
  8995  0ED3  0872               	movf	?___awmod,w
  8996  0ED4  00A2               	movwf	___awdiv@dividend
  8997  0ED5  31A3  2328  318D   	fcall	___awdiv
  8998  0ED8  0020               	movlb	0	; select bank0
  8999  0ED9  0820               	movf	?___awdiv,w
  9000  0EDA  00D6               	movwf	??_scale
  9001  0EDB  0821               	movf	?___awdiv+1,w
  9002  0EDC  00D7               	movwf	??_scale+1
  9003  0EDD  35D6               	lslf	??_scale,f
  9004  0EDE  0DD7               	rlf	??_scale+1,f
  9005  0EDF  35D6               	lslf	??_scale,f
  9006  0EE0  0DD7               	rlf	??_scale+1,f
  9007  0EE1  0856               	movf	??_scale,w
  9008  0EE2  3E24               	addlw	36
  9009  0EE3  00D8               	movwf	??_scale+2
  9010  0EE4  3000               	movlw	0
  9011  0EE5  3D57               	addwfc	??_scale+1,w
  9012  0EE6  00D9               	movwf	??_scale+3
  9013  0EE7  3038               	movlw	low (__powers_| (0+32768))
  9014  0EE8  0758               	addwf	??_scale+2,w
  9015  0EE9  0084               	movwf	4
  9016  0EEA  30A8               	movlw	high (__powers_| (0+32768))
  9017  0EEB  3D59               	addwfc	??_scale+3,w
  9018  0EEC  0085               	movwf	5
  9019  0EED  3F00               	moviw [0]fsr0
  9020  0EEE  00DA               	movwf	??_scale+4
  9021  0EEF  3F01               	moviw [1]fsr0
  9022  0EF0  00DB               	movwf	??_scale+5
  9023  0EF1  3F02               	moviw [2]fsr0
  9024  0EF2  00DC               	movwf	??_scale+6
  9025  0EF3  3F03               	moviw [3]fsr0
  9026  0EF4  00DD               	movwf	??_scale+7
  9027  0EF5  085D               	movf	??_scale+7,w
  9028  0EF6  00BB               	movwf	___flmul@b+3
  9029  0EF7  085C               	movf	??_scale+6,w
  9030  0EF8  00BA               	movwf	___flmul@b+2
  9031  0EF9  085B               	movf	??_scale+5,w
  9032  0EFA  00B9               	movwf	___flmul@b+1
  9033  0EFB  085A               	movf	??_scale+4,w
  9034  0EFC  00B8               	movwf	___flmul@b
  9035  0EFD  3064               	movlw	100
  9036  0EFE  00A0               	movwf	___awdiv@divisor
  9037  0EFF  3000               	movlw	0
  9038  0F00  00A1               	movwf	___awdiv@divisor+1
  9039  0F01  086A               	movf	scale@scl,w
  9040  0F02  00A2               	movwf	___awdiv@dividend
  9041  0F03  01A3               	clrf	___awdiv@dividend+1
  9042  0F04  1BA2               	btfsc	___awdiv@dividend,7
  9043  0F05  03A3               	decf	___awdiv@dividend+1,f
  9044  0F06  31A3  2328  318D   	fcall	___awdiv
  9045  0F09  0020               	movlb	0	; select bank0
  9046  0F0A  0820               	movf	?___awdiv,w
  9047  0F0B  00DE               	movwf	??_scale+8
  9048  0F0C  0821               	movf	?___awdiv+1,w
  9049  0F0D  00DF               	movwf	??_scale+9
  9050  0F0E  35DE               	lslf	??_scale+8,f
  9051  0F0F  0DDF               	rlf	??_scale+9,f
  9052  0F10  35DE               	lslf	??_scale+8,f
  9053  0F11  0DDF               	rlf	??_scale+9,f
  9054  0F12  085E               	movf	??_scale+8,w
  9055  0F13  3E48               	addlw	72
  9056  0F14  00E0               	movwf	??_scale+10
  9057  0F15  3000               	movlw	0
  9058  0F16  3D5F               	addwfc	??_scale+9,w
  9059  0F17  00E1               	movwf	??_scale+11
  9060  0F18  3038               	movlw	low (__powers_| (0+32768))
  9061  0F19  0760               	addwf	??_scale+10,w
  9062  0F1A  0084               	movwf	4
  9063  0F1B  30A8               	movlw	high (__powers_| (0+32768))
  9064  0F1C  3D61               	addwfc	??_scale+11,w
  9065  0F1D  0085               	movwf	5
  9066  0F1E  3F00               	moviw [0]fsr0
  9067  0F1F  00E2               	movwf	??_scale+12
  9068  0F20  3F01               	moviw [1]fsr0
  9069  0F21  00E3               	movwf	??_scale+13
  9070  0F22  3F02               	moviw [2]fsr0
  9071  0F23  00E4               	movwf	??_scale+14
  9072  0F24  3F03               	moviw [3]fsr0
  9073  0F25  00E5               	movwf	??_scale+15
  9074  0F26  0865               	movf	??_scale+15,w
  9075  0F27  00BF               	movwf	___flmul@a+3
  9076  0F28  0864               	movf	??_scale+14,w
  9077  0F29  00BE               	movwf	___flmul@a+2
  9078  0F2A  0863               	movf	??_scale+13,w
  9079  0F2B  00BD               	movwf	___flmul@a+1
  9080  0F2C  0862               	movf	??_scale+12,w
  9081  0F2D  00BC               	movwf	___flmul@a
  9082  0F2E  3188  20E4  318D   	fcall	___flmul
  9083  0F31  0020               	movlb	0	; select bank0
  9084  0F32  083B               	movf	?___flmul+3,w
  9085  0F33  00E9               	movwf	_scale$2065+3
  9086  0F34  083A               	movf	?___flmul+2,w
  9087  0F35  00E8               	movwf	_scale$2065+2
  9088  0F36  0839               	movf	?___flmul+1,w
  9089  0F37  00E7               	movwf	_scale$2065+1
  9090  0F38  0838               	movf	?___flmul,w
  9091  0F39  00E6               	movwf	_scale$2065
  9092                           
  9093                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  9094  0F3A  300A               	movlw	10
  9095  0F3B  00F2               	movwf	___awmod@divisor
  9096  0F3C  3000               	movlw	0
  9097  0F3D  00F3               	movwf	___awmod@divisor+1
  9098  0F3E  086A               	movf	scale@scl,w
  9099  0F3F  00F4               	movwf	___awmod@dividend
  9100  0F40  01F5               	clrf	___awmod@dividend+1
  9101  0F41  1BF4               	btfsc	___awmod@dividend,7
  9102  0F42  03F5               	decf	___awmod@dividend+1,f
  9103  0F43  31A1  21FD  318D   	fcall	___awmod
  9104  0F46  0873               	movf	?___awmod+1,w
  9105  0F47  0085               	movwf	5
  9106  0F48  0872               	movf	?___awmod,w
  9107  0F49  0084               	movwf	4
  9108  0F4A  3584               	lslf	4,f
  9109  0F4B  0D85               	rlf	5,f
  9110  0F4C  3584               	lslf	4,f
  9111  0F4D  0D85               	rlf	5,f
  9112  0F4E  3038               	movlw	low (__powers_| (0+32768))
  9113  0F4F  0784               	addwf	4,f
  9114  0F50  30A8               	movlw	high (__powers_| (0+32768))
  9115  0F51  3D85               	addwfc	5,f
  9116  0F52  3F00               	moviw [0]fsr0
  9117  0F53  0020               	movlb	0	; select bank0
  9118  0F54  00D6               	movwf	??_scale
  9119  0F55  3F01               	moviw [1]fsr0
  9120  0F56  00D7               	movwf	??_scale+1
  9121  0F57  3F02               	moviw [2]fsr0
  9122  0F58  00D8               	movwf	??_scale+2
  9123  0F59  3F03               	moviw [3]fsr0
  9124  0F5A  00D9               	movwf	??_scale+3
  9125  0F5B  0859               	movf	??_scale+3,w
  9126  0F5C  00BB               	movwf	___flmul@b+3
  9127  0F5D  0858               	movf	??_scale+2,w
  9128  0F5E  00BA               	movwf	___flmul@b+2
  9129  0F5F  0857               	movf	??_scale+1,w
  9130  0F60  00B9               	movwf	___flmul@b+1
  9131  0F61  0856               	movf	??_scale,w
  9132  0F62  00B8               	movwf	___flmul@b
  9133  0F63  0869               	movf	_scale$2065+3,w
  9134  0F64  00BF               	movwf	___flmul@a+3
  9135  0F65  0868               	movf	_scale$2065+2,w
  9136  0F66  00BE               	movwf	___flmul@a+2
  9137  0F67  0867               	movf	_scale$2065+1,w
  9138  0F68  00BD               	movwf	___flmul@a+1
  9139  0F69  0866               	movf	_scale$2065,w
  9140  0F6A  00BC               	movwf	___flmul@a
  9141  0F6B  3188  20E4         	fcall	___flmul
  9142  0F6D  0020               	movlb	0	; select bank0
  9143  0F6E  083B               	movf	?___flmul+3,w
  9144  0F6F  00D5               	movwf	?_scale+3
  9145  0F70  083A               	movf	?___flmul+2,w
  9146  0F71  00D4               	movwf	?_scale+2
  9147  0F72  0839               	movf	?___flmul+1,w
  9148  0F73  00D3               	movwf	?_scale+1
  9149  0F74  0838               	movf	?___flmul,w
  9150  0F75  00D2               	movwf	?_scale
  9151  0F76  0008               	return
  9152  0F77                     l6317:	
  9153                           
  9154                           ;doprnt.c: 438: else if(scl > 10)
  9155  0F77  086A               	movf	scale@scl,w
  9156  0F78  3A80               	xorlw	128
  9157  0F79  3E75               	addlw	-139
  9158  0F7A  1C03               	skipc
  9159  0F7B  2FE2               	goto	l6323
  9160                           
  9161                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  9162  0F7C  300A               	movlw	10
  9163  0F7D  00F2               	movwf	___awmod@divisor
  9164  0F7E  3000               	movlw	0
  9165  0F7F  00F3               	movwf	___awmod@divisor+1
  9166  0F80  086A               	movf	scale@scl,w
  9167  0F81  00F4               	movwf	___awmod@dividend
  9168  0F82  01F5               	clrf	___awmod@dividend+1
  9169  0F83  1BF4               	btfsc	___awmod@dividend,7
  9170  0F84  03F5               	decf	___awmod@dividend+1,f
  9171  0F85  31A1  21FD  318D   	fcall	___awmod
  9172  0F88  0873               	movf	?___awmod+1,w
  9173  0F89  0085               	movwf	5
  9174  0F8A  0872               	movf	?___awmod,w
  9175  0F8B  0084               	movwf	4
  9176  0F8C  3584               	lslf	4,f
  9177  0F8D  0D85               	rlf	5,f
  9178  0F8E  3584               	lslf	4,f
  9179  0F8F  0D85               	rlf	5,f
  9180  0F90  3038               	movlw	low (__powers_| (0+32768))
  9181  0F91  0784               	addwf	4,f
  9182  0F92  30A8               	movlw	high (__powers_| (0+32768))
  9183  0F93  3D85               	addwfc	5,f
  9184  0F94  3F00               	moviw [0]fsr0
  9185  0F95  0020               	movlb	0	; select bank0
  9186  0F96  00D6               	movwf	??_scale
  9187  0F97  3F01               	moviw [1]fsr0
  9188  0F98  00D7               	movwf	??_scale+1
  9189  0F99  3F02               	moviw [2]fsr0
  9190  0F9A  00D8               	movwf	??_scale+2
  9191  0F9B  3F03               	moviw [3]fsr0
  9192  0F9C  00D9               	movwf	??_scale+3
  9193  0F9D  0859               	movf	??_scale+3,w
  9194  0F9E  00BB               	movwf	___flmul@b+3
  9195  0F9F  0858               	movf	??_scale+2,w
  9196  0FA0  00BA               	movwf	___flmul@b+2
  9197  0FA1  0857               	movf	??_scale+1,w
  9198  0FA2  00B9               	movwf	___flmul@b+1
  9199  0FA3  0856               	movf	??_scale,w
  9200  0FA4  00B8               	movwf	___flmul@b
  9201  0FA5  300A               	movlw	10
  9202  0FA6  00A0               	movwf	___awdiv@divisor
  9203  0FA7  3000               	movlw	0
  9204  0FA8  00A1               	movwf	___awdiv@divisor+1
  9205  0FA9  086A               	movf	scale@scl,w
  9206  0FAA  00A2               	movwf	___awdiv@dividend
  9207  0FAB  01A3               	clrf	___awdiv@dividend+1
  9208  0FAC  1BA2               	btfsc	___awdiv@dividend,7
  9209  0FAD  03A3               	decf	___awdiv@dividend+1,f
  9210  0FAE  31A3  2328  318D   	fcall	___awdiv
  9211  0FB1  0020               	movlb	0	; select bank0
  9212  0FB2  0820               	movf	?___awdiv,w
  9213  0FB3  00DA               	movwf	??_scale+4
  9214  0FB4  0821               	movf	?___awdiv+1,w
  9215  0FB5  00DB               	movwf	??_scale+5
  9216  0FB6  35DA               	lslf	??_scale+4,f
  9217  0FB7  0DDB               	rlf	??_scale+5,f
  9218  0FB8  35DA               	lslf	??_scale+4,f
  9219  0FB9  0DDB               	rlf	??_scale+5,f
  9220  0FBA  085A               	movf	??_scale+4,w
  9221  0FBB  3E24               	addlw	36
  9222  0FBC  00DC               	movwf	??_scale+6
  9223  0FBD  3000               	movlw	0
  9224  0FBE  3D5B               	addwfc	??_scale+5,w
  9225  0FBF  00DD               	movwf	??_scale+7
  9226  0FC0  3038               	movlw	low (__powers_| (0+32768))
  9227  0FC1  075C               	addwf	??_scale+6,w
  9228  0FC2  0084               	movwf	4
  9229  0FC3  30A8               	movlw	high (__powers_| (0+32768))
  9230  0FC4  3D5D               	addwfc	??_scale+7,w
  9231  0FC5  0085               	movwf	5
  9232  0FC6  3F00               	moviw [0]fsr0
  9233  0FC7  00DE               	movwf	??_scale+8
  9234  0FC8  3F01               	moviw [1]fsr0
  9235  0FC9  00DF               	movwf	??_scale+9
  9236  0FCA  3F02               	moviw [2]fsr0
  9237  0FCB  00E0               	movwf	??_scale+10
  9238  0FCC  3F03               	moviw [3]fsr0
  9239  0FCD  00E1               	movwf	??_scale+11
  9240  0FCE  0861               	movf	??_scale+11,w
  9241  0FCF  00BF               	movwf	___flmul@a+3
  9242  0FD0  0860               	movf	??_scale+10,w
  9243  0FD1  00BE               	movwf	___flmul@a+2
  9244  0FD2  085F               	movf	??_scale+9,w
  9245  0FD3  00BD               	movwf	___flmul@a+1
  9246  0FD4  085E               	movf	??_scale+8,w
  9247  0FD5  00BC               	movwf	___flmul@a
  9248  0FD6  3188  20E4         	fcall	___flmul
  9249  0FD8  0020               	movlb	0	; select bank0
  9250  0FD9  083B               	movf	?___flmul+3,w
  9251  0FDA  00D5               	movwf	?_scale+3
  9252  0FDB  083A               	movf	?___flmul+2,w
  9253  0FDC  00D4               	movwf	?_scale+2
  9254  0FDD  0839               	movf	?___flmul+1,w
  9255  0FDE  00D3               	movwf	?_scale+1
  9256  0FDF  0838               	movf	?___flmul,w
  9257  0FE0  00D2               	movwf	?_scale
  9258  0FE1  0008               	return
  9259  0FE2                     l6323:	
  9260                           
  9261                           ;doprnt.c: 440: return _powers_[scl];
  9262  0FE2  086A               	movf	scale@scl,w
  9263  0FE3  00D6               	movwf	??_scale
  9264  0FE4  01D7               	clrf	??_scale+1
  9265  0FE5  35D6               	lslf	??_scale,f
  9266  0FE6  0DD7               	rlf	??_scale+1,f
  9267  0FE7  35D6               	lslf	??_scale,f
  9268  0FE8  0DD7               	rlf	??_scale+1,f
  9269  0FE9  3038               	movlw	low (__powers_| (0+32768))
  9270  0FEA  0756               	addwf	??_scale,w
  9271  0FEB  0084               	movwf	4
  9272  0FEC  30A8               	movlw	high (__powers_| (0+32768))
  9273  0FED  3D57               	addwfc	??_scale+1,w
  9274  0FEE  0085               	movwf	5
  9275  0FEF  3F00               	moviw [0]fsr0
  9276  0FF0  00D8               	movwf	??_scale+2
  9277  0FF1  3F01               	moviw [1]fsr0
  9278  0FF2  00D9               	movwf	??_scale+3
  9279  0FF3  3F02               	moviw [2]fsr0
  9280  0FF4  00DA               	movwf	??_scale+4
  9281  0FF5  3F03               	moviw [3]fsr0
  9282  0FF6  00DB               	movwf	??_scale+5
  9283  0FF7  085B               	movf	??_scale+5,w
  9284  0FF8  00D5               	movwf	?_scale+3
  9285  0FF9  085A               	movf	??_scale+4,w
  9286  0FFA  00D4               	movwf	?_scale+2
  9287  0FFB  0859               	movf	??_scale+3,w
  9288  0FFC  00D3               	movwf	?_scale+1
  9289  0FFD  0858               	movf	??_scale+2,w
  9290  0FFE  00D2               	movwf	?_scale
  9291  0FFF  0008               	return
  9292  1000                     __end_of_scale:	
  9293                           
  9294                           	psect	text9
  9295  1000                     __ptext9:	
  9296 ;; *************** function _isdigit *****************
  9297 ;; Defined at:
  9298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9299 ;; Parameters:    Size  Location     Type
  9300 ;;  c               1    wreg     unsigned char 
  9301 ;; Auto vars:     Size  Location     Type
  9302 ;;  c               1    3[COMMON] unsigned char 
  9303 ;; Return value:  Size  Location     Type
  9304 ;;		None               void
  9305 ;; Registers used:
  9306 ;;		wreg, status,2, status,0
  9307 ;; Tracked objects:
  9308 ;;		On entry : 0/0
  9309 ;;		On exit  : 0/0
  9310 ;;		Unchanged: 0/0
  9311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9313 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9315 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9316 ;;Total ram usage:        2 bytes
  9317 ;; Hardware stack levels used:    1
  9318 ;; Hardware stack levels required when called:    2
  9319 ;; This function calls:
  9320 ;;		Nothing
  9321 ;; This function is called by:
  9322 ;;		_sprintf
  9323 ;; This function uses a non-reentrant model
  9324 ;;
  9325                           
  9326                           
  9327                           ;psect for function _isdigit
  9328  1000                     _isdigit:	
  9329                           
  9330                           ;incstack = 0
  9331                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  9332                           ;isdigit@c stored from wreg
  9333  1000  00F3               	movwf	isdigit@c
  9334  1001  01F2               	clrf	_isdigit$1627
  9335  1002  303A               	movlw	58
  9336  1003  0273               	subwf	isdigit@c,w
  9337  1004  1803               	skipnc
  9338  1005  280C               	goto	l4233
  9339  1006  3030               	movlw	48
  9340  1007  0273               	subwf	isdigit@c,w
  9341  1008  1C03               	skipc
  9342  1009  280C               	goto	l4233
  9343  100A  01F2               	clrf	_isdigit$1627
  9344  100B  0AF2               	incf	_isdigit$1627,f
  9345  100C                     l4233:	
  9346  100C  0C72               	rrf	_isdigit$1627,w
  9347  100D  0008               	return
  9348  100E                     __end_of_isdigit:	
  9349                           
  9350                           	psect	text10
  9351  141B                     __ptext10:	
  9352 ;; *************** function _fround *****************
  9353 ;; Defined at:
  9354 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9355 ;; Parameters:    Size  Location     Type
  9356 ;;  prec            1    wreg     unsigned char 
  9357 ;; Auto vars:     Size  Location     Type
  9358 ;;  prec            1    8[BANK1 ] unsigned char 
  9359 ;; Return value:  Size  Location     Type
  9360 ;;                  4   50[BANK0 ] unsigned char 
  9361 ;; Registers used:
  9362 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9363 ;; Tracked objects:
  9364 ;;		On entry : 0/0
  9365 ;;		On exit  : 0/0
  9366 ;;		Unchanged: 0/0
  9367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9368 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9369 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9370 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9371 ;;      Totals:         0      24       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9372 ;;Total ram usage:       33 bytes
  9373 ;; Hardware stack levels used:    1
  9374 ;; Hardware stack levels required when called:    4
  9375 ;; This function calls:
  9376 ;;		___awdiv
  9377 ;;		___awmod
  9378 ;;		___flmul
  9379 ;; This function is called by:
  9380 ;;		_sprintf
  9381 ;; This function uses a non-reentrant model
  9382 ;;
  9383                           
  9384                           
  9385                           ;psect for function _fround
  9386  141B                     _fround:	
  9387                           
  9388                           ;incstack = 0
  9389                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9390                           ;fround@prec stored from wreg
  9391  141B  0021               	movlb	1	; select bank1
  9392  141C  00A8               	movwf	fround@prec^(0+128)
  9393                           
  9394                           ;doprnt.c: 413: if(prec>=110)
  9395  141D  306E               	movlw	110
  9396  141E  0228               	subwf	fround@prec^(0+128),w
  9397  141F  1C03               	skipc
  9398  1420  2D1F               	goto	l6275
  9399                           
  9400                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9401  1421  300A               	movlw	10
  9402  1422  0020               	movlb	0	; select bank0
  9403  1423  00A0               	movwf	___awdiv@divisor
  9404  1424  3000               	movlw	0
  9405  1425  00A1               	movwf	___awdiv@divisor+1
  9406  1426  0021               	movlb	1	; select bank1
  9407  1427  0828               	movf	fround@prec^(0+128),w
  9408  1428  0020               	movlb	0	; select bank0
  9409  1429  00D6               	movwf	??_fround
  9410  142A  01D7               	clrf	??_fround+1
  9411  142B  0856               	movf	??_fround,w
  9412  142C  00F4               	movwf	___awmod@dividend
  9413  142D  0857               	movf	??_fround+1,w
  9414  142E  00F5               	movwf	___awmod@dividend+1
  9415  142F  3064               	movlw	100
  9416  1430  00F2               	movwf	___awmod@divisor
  9417  1431  3000               	movlw	0
  9418  1432  00F3               	movwf	___awmod@divisor+1
  9419  1433  31A1  21FD  3194   	fcall	___awmod
  9420  1436  0873               	movf	?___awmod+1,w
  9421  1437  0020               	movlb	0	; select bank0
  9422  1438  00A3               	movwf	___awdiv@dividend+1
  9423  1439  0872               	movf	?___awmod,w
  9424  143A  00A2               	movwf	___awdiv@dividend
  9425  143B  31A3  2328  3194   	fcall	___awdiv
  9426  143E  0020               	movlb	0	; select bank0
  9427  143F  0820               	movf	?___awdiv,w
  9428  1440  00D8               	movwf	??_fround+2
  9429  1441  0821               	movf	?___awdiv+1,w
  9430  1442  00D9               	movwf	??_fround+3
  9431  1443  35D8               	lslf	??_fround+2,f
  9432  1444  0DD9               	rlf	??_fround+3,f
  9433  1445  35D8               	lslf	??_fround+2,f
  9434  1446  0DD9               	rlf	??_fround+3,f
  9435  1447  0858               	movf	??_fround+2,w
  9436  1448  3E24               	addlw	36
  9437  1449  00DA               	movwf	??_fround+4
  9438  144A  3000               	movlw	0
  9439  144B  3D59               	addwfc	??_fround+3,w
  9440  144C  00DB               	movwf	??_fround+5
  9441  144D  306C               	movlw	low (__npowers_| (0+32768))
  9442  144E  075A               	addwf	??_fround+4,w
  9443  144F  0084               	movwf	4
  9444  1450  30A8               	movlw	high (__npowers_| (0+32768))
  9445  1451  3D5B               	addwfc	??_fround+5,w
  9446  1452  0085               	movwf	5
  9447  1453  3F00               	moviw [0]fsr0
  9448  1454  00DC               	movwf	??_fround+6
  9449  1455  3F01               	moviw [1]fsr0
  9450  1456  00DD               	movwf	??_fround+7
  9451  1457  3F02               	moviw [2]fsr0
  9452  1458  00DE               	movwf	??_fround+8
  9453  1459  3F03               	moviw [3]fsr0
  9454  145A  00DF               	movwf	??_fround+9
  9455  145B  085F               	movf	??_fround+9,w
  9456  145C  00BB               	movwf	___flmul@b+3
  9457  145D  085E               	movf	??_fround+8,w
  9458  145E  00BA               	movwf	___flmul@b+2
  9459  145F  085D               	movf	??_fround+7,w
  9460  1460  00B9               	movwf	___flmul@b+1
  9461  1461  085C               	movf	??_fround+6,w
  9462  1462  00B8               	movwf	___flmul@b
  9463  1463  3064               	movlw	100
  9464  1464  00A0               	movwf	___awdiv@divisor
  9465  1465  3000               	movlw	0
  9466  1466  00A1               	movwf	___awdiv@divisor+1
  9467  1467  0021               	movlb	1	; select bank1
  9468  1468  0828               	movf	fround@prec^(0+128),w
  9469  1469  0020               	movlb	0	; select bank0
  9470  146A  00E0               	movwf	??_fround+10
  9471  146B  01E1               	clrf	??_fround+11
  9472  146C  0860               	movf	??_fround+10,w
  9473  146D  00A2               	movwf	___awdiv@dividend
  9474  146E  0861               	movf	??_fround+11,w
  9475  146F  00A3               	movwf	___awdiv@dividend+1
  9476  1470  31A3  2328  3194   	fcall	___awdiv
  9477  1473  0020               	movlb	0	; select bank0
  9478  1474  0820               	movf	?___awdiv,w
  9479  1475  00E2               	movwf	??_fround+12
  9480  1476  0821               	movf	?___awdiv+1,w
  9481  1477  00E3               	movwf	??_fround+13
  9482  1478  35E2               	lslf	??_fround+12,f
  9483  1479  0DE3               	rlf	??_fround+13,f
  9484  147A  35E2               	lslf	??_fround+12,f
  9485  147B  0DE3               	rlf	??_fround+13,f
  9486  147C  0862               	movf	??_fround+12,w
  9487  147D  3E48               	addlw	72
  9488  147E  00E4               	movwf	??_fround+14
  9489  147F  3000               	movlw	0
  9490  1480  3D63               	addwfc	??_fround+13,w
  9491  1481  00E5               	movwf	??_fround+15
  9492  1482  306C               	movlw	low (__npowers_| (0+32768))
  9493  1483  0764               	addwf	??_fround+14,w
  9494  1484  0084               	movwf	4
  9495  1485  30A8               	movlw	high (__npowers_| (0+32768))
  9496  1486  3D65               	addwfc	??_fround+15,w
  9497  1487  0085               	movwf	5
  9498  1488  3F00               	moviw [0]fsr0
  9499  1489  00E6               	movwf	??_fround+16
  9500  148A  3F01               	moviw [1]fsr0
  9501  148B  00E7               	movwf	??_fround+17
  9502  148C  3F02               	moviw [2]fsr0
  9503  148D  00E8               	movwf	??_fround+18
  9504  148E  3F03               	moviw [3]fsr0
  9505  148F  00E9               	movwf	??_fround+19
  9506  1490  0869               	movf	??_fround+19,w
  9507  1491  00BF               	movwf	___flmul@a+3
  9508  1492  0868               	movf	??_fround+18,w
  9509  1493  00BE               	movwf	___flmul@a+2
  9510  1494  0867               	movf	??_fround+17,w
  9511  1495  00BD               	movwf	___flmul@a+1
  9512  1496  0866               	movf	??_fround+16,w
  9513  1497  00BC               	movwf	___flmul@a
  9514  1498  3188  20E4  3194   	fcall	___flmul
  9515  149B  0020               	movlb	0	; select bank0
  9516  149C  083B               	movf	?___flmul+3,w
  9517  149D  0021               	movlb	1	; select bank1
  9518  149E  00A7               	movwf	(_fround$2063+3)^(0+128)
  9519  149F  0020               	movlb	0	; select bank0
  9520  14A0  083A               	movf	?___flmul+2,w
  9521  14A1  0021               	movlb	1	; select bank1
  9522  14A2  00A6               	movwf	(_fround$2063+2)^(0+128)
  9523  14A3  0020               	movlb	0	; select bank0
  9524  14A4  0839               	movf	?___flmul+1,w
  9525  14A5  0021               	movlb	1	; select bank1
  9526  14A6  00A5               	movwf	(_fround$2063+1)^(0+128)
  9527  14A7  0020               	movlb	0	; select bank0
  9528  14A8  0838               	movf	?___flmul,w
  9529  14A9  0021               	movlb	1	; select bank1
  9530  14AA  00A4               	movwf	_fround$2063^(0+128)
  9531                           
  9532                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9533  14AB  300A               	movlw	10
  9534  14AC  00F2               	movwf	___awmod@divisor
  9535  14AD  3000               	movlw	0
  9536  14AE  00F3               	movwf	___awmod@divisor+1
  9537  14AF  0828               	movf	fround@prec^(0+128),w
  9538  14B0  0020               	movlb	0	; select bank0
  9539  14B1  00D6               	movwf	??_fround
  9540  14B2  01D7               	clrf	??_fround+1
  9541  14B3  0856               	movf	??_fround,w
  9542  14B4  00F4               	movwf	___awmod@dividend
  9543  14B5  0857               	movf	??_fround+1,w
  9544  14B6  00F5               	movwf	___awmod@dividend+1
  9545  14B7  31A1  21FD  3194   	fcall	___awmod
  9546  14BA  0873               	movf	?___awmod+1,w
  9547  14BB  0085               	movwf	5
  9548  14BC  0872               	movf	?___awmod,w
  9549  14BD  0084               	movwf	4
  9550  14BE  3584               	lslf	4,f
  9551  14BF  0D85               	rlf	5,f
  9552  14C0  3584               	lslf	4,f
  9553  14C1  0D85               	rlf	5,f
  9554  14C2  306C               	movlw	low (__npowers_| (0+32768))
  9555  14C3  0784               	addwf	4,f
  9556  14C4  30A8               	movlw	high (__npowers_| (0+32768))
  9557  14C5  3D85               	addwfc	5,f
  9558  14C6  3F00               	moviw [0]fsr0
  9559  14C7  0020               	movlb	0	; select bank0
  9560  14C8  00D8               	movwf	??_fround+2
  9561  14C9  3F01               	moviw [1]fsr0
  9562  14CA  00D9               	movwf	??_fround+3
  9563  14CB  3F02               	moviw [2]fsr0
  9564  14CC  00DA               	movwf	??_fround+4
  9565  14CD  3F03               	moviw [3]fsr0
  9566  14CE  00DB               	movwf	??_fround+5
  9567  14CF  085B               	movf	??_fround+5,w
  9568  14D0  00BB               	movwf	___flmul@b+3
  9569  14D1  085A               	movf	??_fround+4,w
  9570  14D2  00BA               	movwf	___flmul@b+2
  9571  14D3  0859               	movf	??_fround+3,w
  9572  14D4  00B9               	movwf	___flmul@b+1
  9573  14D5  0858               	movf	??_fround+2,w
  9574  14D6  00B8               	movwf	___flmul@b
  9575  14D7  0021               	movlb	1	; select bank1
  9576  14D8  0827               	movf	(_fround$2063+3)^(0+128),w
  9577  14D9  0020               	movlb	0	; select bank0
  9578  14DA  00BF               	movwf	___flmul@a+3
  9579  14DB  0021               	movlb	1	; select bank1
  9580  14DC  0826               	movf	(_fround$2063+2)^(0+128),w
  9581  14DD  0020               	movlb	0	; select bank0
  9582  14DE  00BE               	movwf	___flmul@a+2
  9583  14DF  0021               	movlb	1	; select bank1
  9584  14E0  0825               	movf	(_fround$2063+1)^(0+128),w
  9585  14E1  0020               	movlb	0	; select bank0
  9586  14E2  00BD               	movwf	___flmul@a+1
  9587  14E3  0021               	movlb	1	; select bank1
  9588  14E4  0824               	movf	_fround$2063^(0+128),w
  9589  14E5  0020               	movlb	0	; select bank0
  9590  14E6  00BC               	movwf	___flmul@a
  9591  14E7  3188  20E4  3194   	fcall	___flmul
  9592  14EA  0020               	movlb	0	; select bank0
  9593  14EB  083B               	movf	?___flmul+3,w
  9594  14EC  0021               	movlb	1	; select bank1
  9595  14ED  00A3               	movwf	(_fround$2064+3)^(0+128)
  9596  14EE  0020               	movlb	0	; select bank0
  9597  14EF  083A               	movf	?___flmul+2,w
  9598  14F0  0021               	movlb	1	; select bank1
  9599  14F1  00A2               	movwf	(_fround$2064+2)^(0+128)
  9600  14F2  0020               	movlb	0	; select bank0
  9601  14F3  0839               	movf	?___flmul+1,w
  9602  14F4  0021               	movlb	1	; select bank1
  9603  14F5  00A1               	movwf	(_fround$2064+1)^(0+128)
  9604  14F6  0020               	movlb	0	; select bank0
  9605  14F7  0838               	movf	?___flmul,w
  9606  14F8  0021               	movlb	1	; select bank1
  9607  14F9  00A0               	movwf	_fround$2064^(0+128)
  9608                           
  9609                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  9610  14FA  303F               	movlw	63
  9611  14FB  0020               	movlb	0	; select bank0
  9612  14FC  00BB               	movwf	___flmul@b+3
  9613  14FD  3000               	movlw	0
  9614  14FE  00BA               	movwf	___flmul@b+2
  9615  14FF  3000               	movlw	0
  9616  1500  00B9               	movwf	___flmul@b+1
  9617  1501  3000               	movlw	0
  9618  1502  00B8               	movwf	___flmul@b
  9619  1503  0021               	movlb	1	; select bank1
  9620  1504  0823               	movf	(_fround$2064+3)^(0+128),w
  9621  1505  0020               	movlb	0	; select bank0
  9622  1506  00BF               	movwf	___flmul@a+3
  9623  1507  0021               	movlb	1	; select bank1
  9624  1508  0822               	movf	(_fround$2064+2)^(0+128),w
  9625  1509  0020               	movlb	0	; select bank0
  9626  150A  00BE               	movwf	___flmul@a+2
  9627  150B  0021               	movlb	1	; select bank1
  9628  150C  0821               	movf	(_fround$2064+1)^(0+128),w
  9629  150D  0020               	movlb	0	; select bank0
  9630  150E  00BD               	movwf	___flmul@a+1
  9631  150F  0021               	movlb	1	; select bank1
  9632  1510  0820               	movf	_fround$2064^(0+128),w
  9633  1511  0020               	movlb	0	; select bank0
  9634  1512  00BC               	movwf	___flmul@a
  9635  1513  3188  20E4         	fcall	___flmul
  9636  1515  0020               	movlb	0	; select bank0
  9637  1516  083B               	movf	?___flmul+3,w
  9638  1517  00D5               	movwf	?_fround+3
  9639  1518  083A               	movf	?___flmul+2,w
  9640  1519  00D4               	movwf	?_fround+2
  9641  151A  0839               	movf	?___flmul+1,w
  9642  151B  00D3               	movwf	?_fround+1
  9643  151C  0838               	movf	?___flmul,w
  9644  151D  00D2               	movwf	?_fround
  9645  151E  0008               	return
  9646  151F                     l6275:	
  9647                           
  9648                           ;doprnt.c: 415: else if(prec > 10)
  9649  151F  300B               	movlw	11
  9650  1520  0021               	movlb	1	; select bank1
  9651  1521  0228               	subwf	fround@prec^(0+128),w
  9652  1522  1C03               	skipc
  9653  1523  2DBD               	goto	l6283
  9654                           
  9655                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9656  1524  300A               	movlw	10
  9657  1525  00F2               	movwf	___awmod@divisor
  9658  1526  3000               	movlw	0
  9659  1527  00F3               	movwf	___awmod@divisor+1
  9660  1528  0828               	movf	fround@prec^(0+128),w
  9661  1529  0020               	movlb	0	; select bank0
  9662  152A  00D6               	movwf	??_fround
  9663  152B  01D7               	clrf	??_fround+1
  9664  152C  0856               	movf	??_fround,w
  9665  152D  00F4               	movwf	___awmod@dividend
  9666  152E  0857               	movf	??_fround+1,w
  9667  152F  00F5               	movwf	___awmod@dividend+1
  9668  1530  31A1  21FD  3194   	fcall	___awmod
  9669  1533  0873               	movf	?___awmod+1,w
  9670  1534  0085               	movwf	5
  9671  1535  0872               	movf	?___awmod,w
  9672  1536  0084               	movwf	4
  9673  1537  3584               	lslf	4,f
  9674  1538  0D85               	rlf	5,f
  9675  1539  3584               	lslf	4,f
  9676  153A  0D85               	rlf	5,f
  9677  153B  306C               	movlw	low (__npowers_| (0+32768))
  9678  153C  0784               	addwf	4,f
  9679  153D  30A8               	movlw	high (__npowers_| (0+32768))
  9680  153E  3D85               	addwfc	5,f
  9681  153F  3F00               	moviw [0]fsr0
  9682  1540  0020               	movlb	0	; select bank0
  9683  1541  00D8               	movwf	??_fround+2
  9684  1542  3F01               	moviw [1]fsr0
  9685  1543  00D9               	movwf	??_fround+3
  9686  1544  3F02               	moviw [2]fsr0
  9687  1545  00DA               	movwf	??_fround+4
  9688  1546  3F03               	moviw [3]fsr0
  9689  1547  00DB               	movwf	??_fround+5
  9690  1548  085B               	movf	??_fround+5,w
  9691  1549  00BB               	movwf	___flmul@b+3
  9692  154A  085A               	movf	??_fround+4,w
  9693  154B  00BA               	movwf	___flmul@b+2
  9694  154C  0859               	movf	??_fround+3,w
  9695  154D  00B9               	movwf	___flmul@b+1
  9696  154E  0858               	movf	??_fround+2,w
  9697  154F  00B8               	movwf	___flmul@b
  9698  1550  300A               	movlw	10
  9699  1551  00A0               	movwf	___awdiv@divisor
  9700  1552  3000               	movlw	0
  9701  1553  00A1               	movwf	___awdiv@divisor+1
  9702  1554  0021               	movlb	1	; select bank1
  9703  1555  0828               	movf	fround@prec^(0+128),w
  9704  1556  0020               	movlb	0	; select bank0
  9705  1557  00DC               	movwf	??_fround+6
  9706  1558  01DD               	clrf	??_fround+7
  9707  1559  085C               	movf	??_fround+6,w
  9708  155A  00A2               	movwf	___awdiv@dividend
  9709  155B  085D               	movf	??_fround+7,w
  9710  155C  00A3               	movwf	___awdiv@dividend+1
  9711  155D  31A3  2328  3194   	fcall	___awdiv
  9712  1560  0020               	movlb	0	; select bank0
  9713  1561  0820               	movf	?___awdiv,w
  9714  1562  00DE               	movwf	??_fround+8
  9715  1563  0821               	movf	?___awdiv+1,w
  9716  1564  00DF               	movwf	??_fround+9
  9717  1565  35DE               	lslf	??_fround+8,f
  9718  1566  0DDF               	rlf	??_fround+9,f
  9719  1567  35DE               	lslf	??_fround+8,f
  9720  1568  0DDF               	rlf	??_fround+9,f
  9721  1569  085E               	movf	??_fround+8,w
  9722  156A  3E24               	addlw	36
  9723  156B  00E0               	movwf	??_fround+10
  9724  156C  3000               	movlw	0
  9725  156D  3D5F               	addwfc	??_fround+9,w
  9726  156E  00E1               	movwf	??_fround+11
  9727  156F  306C               	movlw	low (__npowers_| (0+32768))
  9728  1570  0760               	addwf	??_fround+10,w
  9729  1571  0084               	movwf	4
  9730  1572  30A8               	movlw	high (__npowers_| (0+32768))
  9731  1573  3D61               	addwfc	??_fround+11,w
  9732  1574  0085               	movwf	5
  9733  1575  3F00               	moviw [0]fsr0
  9734  1576  00E2               	movwf	??_fround+12
  9735  1577  3F01               	moviw [1]fsr0
  9736  1578  00E3               	movwf	??_fround+13
  9737  1579  3F02               	moviw [2]fsr0
  9738  157A  00E4               	movwf	??_fround+14
  9739  157B  3F03               	moviw [3]fsr0
  9740  157C  00E5               	movwf	??_fround+15
  9741  157D  0865               	movf	??_fround+15,w
  9742  157E  00BF               	movwf	___flmul@a+3
  9743  157F  0864               	movf	??_fround+14,w
  9744  1580  00BE               	movwf	___flmul@a+2
  9745  1581  0863               	movf	??_fround+13,w
  9746  1582  00BD               	movwf	___flmul@a+1
  9747  1583  0862               	movf	??_fround+12,w
  9748  1584  00BC               	movwf	___flmul@a
  9749  1585  3188  20E4  3194   	fcall	___flmul
  9750  1588  0020               	movlb	0	; select bank0
  9751  1589  083B               	movf	?___flmul+3,w
  9752  158A  0021               	movlb	1	; select bank1
  9753  158B  00A7               	movwf	(_fround$2063+3)^(0+128)
  9754  158C  0020               	movlb	0	; select bank0
  9755  158D  083A               	movf	?___flmul+2,w
  9756  158E  0021               	movlb	1	; select bank1
  9757  158F  00A6               	movwf	(_fround$2063+2)^(0+128)
  9758  1590  0020               	movlb	0	; select bank0
  9759  1591  0839               	movf	?___flmul+1,w
  9760  1592  0021               	movlb	1	; select bank1
  9761  1593  00A5               	movwf	(_fround$2063+1)^(0+128)
  9762  1594  0020               	movlb	0	; select bank0
  9763  1595  0838               	movf	?___flmul,w
  9764  1596  0021               	movlb	1	; select bank1
  9765  1597  00A4               	movwf	_fround$2063^(0+128)
  9766                           
  9767                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9768  1598  303F               	movlw	63
  9769  1599  0020               	movlb	0	; select bank0
  9770  159A  00BB               	movwf	___flmul@b+3
  9771  159B  3000               	movlw	0
  9772  159C  00BA               	movwf	___flmul@b+2
  9773  159D  3000               	movlw	0
  9774  159E  00B9               	movwf	___flmul@b+1
  9775  159F  3000               	movlw	0
  9776  15A0  00B8               	movwf	___flmul@b
  9777  15A1  0021               	movlb	1	; select bank1
  9778  15A2  0827               	movf	(_fround$2063+3)^(0+128),w
  9779  15A3  0020               	movlb	0	; select bank0
  9780  15A4  00BF               	movwf	___flmul@a+3
  9781  15A5  0021               	movlb	1	; select bank1
  9782  15A6  0826               	movf	(_fround$2063+2)^(0+128),w
  9783  15A7  0020               	movlb	0	; select bank0
  9784  15A8  00BE               	movwf	___flmul@a+2
  9785  15A9  0021               	movlb	1	; select bank1
  9786  15AA  0825               	movf	(_fround$2063+1)^(0+128),w
  9787  15AB  0020               	movlb	0	; select bank0
  9788  15AC  00BD               	movwf	___flmul@a+1
  9789  15AD  0021               	movlb	1	; select bank1
  9790  15AE  0824               	movf	_fround$2063^(0+128),w
  9791  15AF  0020               	movlb	0	; select bank0
  9792  15B0  00BC               	movwf	___flmul@a
  9793  15B1  3188  20E4         	fcall	___flmul
  9794  15B3  0020               	movlb	0	; select bank0
  9795  15B4  083B               	movf	?___flmul+3,w
  9796  15B5  00D5               	movwf	?_fround+3
  9797  15B6  083A               	movf	?___flmul+2,w
  9798  15B7  00D4               	movwf	?_fround+2
  9799  15B8  0839               	movf	?___flmul+1,w
  9800  15B9  00D3               	movwf	?_fround+1
  9801  15BA  0838               	movf	?___flmul,w
  9802  15BB  00D2               	movwf	?_fround
  9803  15BC  0008               	return
  9804  15BD                     l6283:	
  9805                           
  9806                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9807  15BD  303F               	movlw	63
  9808  15BE  0020               	movlb	0	; select bank0
  9809  15BF  00BB               	movwf	___flmul@b+3
  9810  15C0  3000               	movlw	0
  9811  15C1  00BA               	movwf	___flmul@b+2
  9812  15C2  3000               	movlw	0
  9813  15C3  00B9               	movwf	___flmul@b+1
  9814  15C4  3000               	movlw	0
  9815  15C5  00B8               	movwf	___flmul@b
  9816  15C6  0021               	movlb	1	; select bank1
  9817  15C7  0828               	movf	fround@prec^(0+128),w
  9818  15C8  0020               	movlb	0	; select bank0
  9819  15C9  00D6               	movwf	??_fround
  9820  15CA  01D7               	clrf	??_fround+1
  9821  15CB  35D6               	lslf	??_fround,f
  9822  15CC  0DD7               	rlf	??_fround+1,f
  9823  15CD  35D6               	lslf	??_fround,f
  9824  15CE  0DD7               	rlf	??_fround+1,f
  9825  15CF  306C               	movlw	low (__npowers_| (0+32768))
  9826  15D0  0756               	addwf	??_fround,w
  9827  15D1  0084               	movwf	4
  9828  15D2  30A8               	movlw	high (__npowers_| (0+32768))
  9829  15D3  3D57               	addwfc	??_fround+1,w
  9830  15D4  0085               	movwf	5
  9831  15D5  3F00               	moviw [0]fsr0
  9832  15D6  00D8               	movwf	??_fround+2
  9833  15D7  3F01               	moviw [1]fsr0
  9834  15D8  00D9               	movwf	??_fround+3
  9835  15D9  3F02               	moviw [2]fsr0
  9836  15DA  00DA               	movwf	??_fround+4
  9837  15DB  3F03               	moviw [3]fsr0
  9838  15DC  00DB               	movwf	??_fround+5
  9839  15DD  085B               	movf	??_fround+5,w
  9840  15DE  00BF               	movwf	___flmul@a+3
  9841  15DF  085A               	movf	??_fround+4,w
  9842  15E0  00BE               	movwf	___flmul@a+2
  9843  15E1  0859               	movf	??_fround+3,w
  9844  15E2  00BD               	movwf	___flmul@a+1
  9845  15E3  0858               	movf	??_fround+2,w
  9846  15E4  00BC               	movwf	___flmul@a
  9847  15E5  3188  20E4         	fcall	___flmul
  9848  15E7  0020               	movlb	0	; select bank0
  9849  15E8  083B               	movf	?___flmul+3,w
  9850  15E9  00D5               	movwf	?_fround+3
  9851  15EA  083A               	movf	?___flmul+2,w
  9852  15EB  00D4               	movwf	?_fround+2
  9853  15EC  0839               	movf	?___flmul+1,w
  9854  15ED  00D3               	movwf	?_fround+1
  9855  15EE  0838               	movf	?___flmul,w
  9856  15EF  00D2               	movwf	?_fround
  9857  15F0  0008               	return
  9858  15F1                     __end_of_fround:	
  9859                           
  9860                           	psect	text11
  9861  21FD                     __ptext11:	
  9862 ;; *************** function ___awmod *****************
  9863 ;; Defined at:
  9864 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
  9865 ;; Parameters:    Size  Location     Type
  9866 ;;  divisor         2    2[COMMON] int 
  9867 ;;  dividend        2    4[COMMON] int 
  9868 ;; Auto vars:     Size  Location     Type
  9869 ;;  sign            1    8[COMMON] unsigned char 
  9870 ;;  counter         1    7[COMMON] unsigned char 
  9871 ;; Return value:  Size  Location     Type
  9872 ;;                  2    2[COMMON] int 
  9873 ;; Registers used:
  9874 ;;		wreg, status,2, status,0
  9875 ;; Tracked objects:
  9876 ;;		On entry : 0/0
  9877 ;;		On exit  : 0/0
  9878 ;;		Unchanged: 0/0
  9879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9882 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9884 ;;Total ram usage:        7 bytes
  9885 ;; Hardware stack levels used:    1
  9886 ;; Hardware stack levels required when called:    2
  9887 ;; This function calls:
  9888 ;;		Nothing
  9889 ;; This function is called by:
  9890 ;;		_fround
  9891 ;;		_scale
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           
  9896                           ;psect for function ___awmod
  9897  21FD                     ___awmod:	
  9898                           
  9899                           ;incstack = 0
  9900                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9901  21FD  01F8               	clrf	___awmod@sign
  9902  21FE  1FF5               	btfss	___awmod@dividend+1,7
  9903  21FF  2A07               	goto	l6087
  9904  2200  09F4               	comf	___awmod@dividend,f
  9905  2201  09F5               	comf	___awmod@dividend+1,f
  9906  2202  0AF4               	incf	___awmod@dividend,f
  9907  2203  1903               	skipnz
  9908  2204  0AF5               	incf	___awmod@dividend+1,f
  9909  2205  01F8               	clrf	___awmod@sign
  9910  2206  0AF8               	incf	___awmod@sign,f
  9911  2207                     l6087:	
  9912  2207  1FF3               	btfss	___awmod@divisor+1,7
  9913  2208  2A0E               	goto	l6091
  9914  2209  09F2               	comf	___awmod@divisor,f
  9915  220A  09F3               	comf	___awmod@divisor+1,f
  9916  220B  0AF2               	incf	___awmod@divisor,f
  9917  220C  1903               	skipnz
  9918  220D  0AF3               	incf	___awmod@divisor+1,f
  9919  220E                     l6091:	
  9920  220E  0872               	movf	___awmod@divisor,w
  9921  220F  0473               	iorwf	___awmod@divisor+1,w
  9922  2210  1903               	btfsc	3,2
  9923  2211  2A35               	goto	l6109
  9924  2212  01F7               	clrf	___awmod@counter
  9925  2213  0AF7               	incf	___awmod@counter,f
  9926  2214                     l6099:	
  9927  2214  1BF3               	btfsc	___awmod@divisor+1,7
  9928  2215  2A20               	goto	l6101
  9929  2216  3001               	movlw	1
  9930  2217                     u8295:	
  9931  2217  35F2               	lslf	___awmod@divisor,f
  9932  2218  0DF3               	rlf	___awmod@divisor+1,f
  9933  2219  0B89               	decfsz	9,f
  9934  221A  2A17               	goto	u8295
  9935  221B  3001               	movlw	1
  9936  221C  00F6               	movwf	??___awmod
  9937  221D  0876               	movf	??___awmod,w
  9938  221E  07F7               	addwf	___awmod@counter,f
  9939  221F  2A14               	goto	l6099
  9940  2220                     l6101:	
  9941  2220  0873               	movf	___awmod@divisor+1,w
  9942  2221  0275               	subwf	___awmod@dividend+1,w
  9943  2222  1D03               	skipz
  9944  2223  2A26               	goto	u8315
  9945  2224  0872               	movf	___awmod@divisor,w
  9946  2225  0274               	subwf	___awmod@dividend,w
  9947  2226                     u8315:	
  9948  2226  1C03               	skipc
  9949  2227  2A2C               	goto	l6105
  9950  2228  0872               	movf	___awmod@divisor,w
  9951  2229  02F4               	subwf	___awmod@dividend,f
  9952  222A  0873               	movf	___awmod@divisor+1,w
  9953  222B  3BF5               	subwfb	___awmod@dividend+1,f
  9954  222C                     l6105:	
  9955  222C  3001               	movlw	1
  9956  222D                     u8325:	
  9957  222D  36F3               	lsrf	___awmod@divisor+1,f
  9958  222E  0CF2               	rrf	___awmod@divisor,f
  9959  222F  0B89               	decfsz	9,f
  9960  2230  2A2D               	goto	u8325
  9961  2231  3001               	movlw	1
  9962  2232  02F7               	subwf	___awmod@counter,f
  9963  2233  1D03               	btfss	3,2
  9964  2234  2A20               	goto	l6101
  9965  2235                     l6109:	
  9966  2235  0878               	movf	___awmod@sign,w
  9967  2236  1903               	btfsc	3,2
  9968  2237  2A3D               	goto	l6113
  9969  2238  09F4               	comf	___awmod@dividend,f
  9970  2239  09F5               	comf	___awmod@dividend+1,f
  9971  223A  0AF4               	incf	___awmod@dividend,f
  9972  223B  1903               	skipnz
  9973  223C  0AF5               	incf	___awmod@dividend+1,f
  9974  223D                     l6113:	
  9975  223D  0875               	movf	___awmod@dividend+1,w
  9976  223E  00F3               	movwf	?___awmod+1
  9977  223F  0874               	movf	___awmod@dividend,w
  9978  2240  00F2               	movwf	?___awmod
  9979  2241  0008               	return
  9980  2242                     __end_of___awmod:	
  9981                           
  9982                           	psect	text12
  9983  2328                     __ptext12:	
  9984 ;; *************** function ___awdiv *****************
  9985 ;; Defined at:
  9986 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;  divisor         2    0[BANK0 ] int 
  9989 ;;  dividend        2    2[BANK0 ] int 
  9990 ;; Auto vars:     Size  Location     Type
  9991 ;;  quotient        2    6[BANK0 ] int 
  9992 ;;  sign            1    5[BANK0 ] unsigned char 
  9993 ;;  counter         1    4[BANK0 ] unsigned char 
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  2    0[BANK0 ] int 
  9996 ;; Registers used:
  9997 ;;		wreg, status,2, status,0
  9998 ;; Tracked objects:
  9999 ;;		On entry : 0/0
 10000 ;;		On exit  : 0/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10003 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10004 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10005 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10006 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10007 ;;Total ram usage:        9 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:    2
 10010 ;; This function calls:
 10011 ;;		Nothing
 10012 ;; This function is called by:
 10013 ;;		_fround
 10014 ;;		_scale
 10015 ;;		_sprintf
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           
 10020                           ;psect for function ___awdiv
 10021  2328                     ___awdiv:	
 10022                           
 10023                           ;incstack = 0
 10024                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10025  2328  0020               	movlb	0	; select bank0
 10026  2329  01A5               	clrf	___awdiv@sign
 10027  232A  1FA1               	btfss	___awdiv@divisor+1,7
 10028  232B  2B33               	goto	l6043
 10029  232C  09A0               	comf	___awdiv@divisor,f
 10030  232D  09A1               	comf	___awdiv@divisor+1,f
 10031  232E  0AA0               	incf	___awdiv@divisor,f
 10032  232F  1903               	skipnz
 10033  2330  0AA1               	incf	___awdiv@divisor+1,f
 10034  2331  01A5               	clrf	___awdiv@sign
 10035  2332  0AA5               	incf	___awdiv@sign,f
 10036  2333                     l6043:	
 10037  2333  1FA3               	btfss	___awdiv@dividend+1,7
 10038  2334  2B3E               	goto	l6049
 10039  2335  09A2               	comf	___awdiv@dividend,f
 10040  2336  09A3               	comf	___awdiv@dividend+1,f
 10041  2337  0AA2               	incf	___awdiv@dividend,f
 10042  2338  1903               	skipnz
 10043  2339  0AA3               	incf	___awdiv@dividend+1,f
 10044  233A  3001               	movlw	1
 10045  233B  00F9               	movwf	??___awdiv
 10046  233C  0879               	movf	??___awdiv,w
 10047  233D  06A5               	xorwf	___awdiv@sign,f
 10048  233E                     l6049:	
 10049  233E  01A6               	clrf	___awdiv@quotient
 10050  233F  01A7               	clrf	___awdiv@quotient+1
 10051  2340  0820               	movf	___awdiv@divisor,w
 10052  2341  0421               	iorwf	___awdiv@divisor+1,w
 10053  2342  1903               	btfsc	3,2
 10054  2343  2B6D               	goto	l6071
 10055  2344  01A4               	clrf	___awdiv@counter
 10056  2345  0AA4               	incf	___awdiv@counter,f
 10057  2346                     l6059:	
 10058  2346  1BA1               	btfsc	___awdiv@divisor+1,7
 10059  2347  2B52               	goto	l6061
 10060  2348  3001               	movlw	1
 10061  2349                     u8195:	
 10062  2349  35A0               	lslf	___awdiv@divisor,f
 10063  234A  0DA1               	rlf	___awdiv@divisor+1,f
 10064  234B  0B89               	decfsz	9,f
 10065  234C  2B49               	goto	u8195
 10066  234D  3001               	movlw	1
 10067  234E  00F9               	movwf	??___awdiv
 10068  234F  0879               	movf	??___awdiv,w
 10069  2350  07A4               	addwf	___awdiv@counter,f
 10070  2351  2B46               	goto	l6059
 10071  2352                     l6061:	
 10072  2352  3001               	movlw	1
 10073  2353                     u8215:	
 10074  2353  35A6               	lslf	___awdiv@quotient,f
 10075  2354  0DA7               	rlf	___awdiv@quotient+1,f
 10076  2355  0B89               	decfsz	9,f
 10077  2356  2B53               	goto	u8215
 10078  2357  0821               	movf	___awdiv@divisor+1,w
 10079  2358  0223               	subwf	___awdiv@dividend+1,w
 10080  2359  1D03               	skipz
 10081  235A  2B5D               	goto	u8225
 10082  235B  0820               	movf	___awdiv@divisor,w
 10083  235C  0222               	subwf	___awdiv@dividend,w
 10084  235D                     u8225:	
 10085  235D  1C03               	skipc
 10086  235E  2B64               	goto	l6067
 10087  235F  0820               	movf	___awdiv@divisor,w
 10088  2360  02A2               	subwf	___awdiv@dividend,f
 10089  2361  0821               	movf	___awdiv@divisor+1,w
 10090  2362  3BA3               	subwfb	___awdiv@dividend+1,f
 10091  2363  1426               	bsf	___awdiv@quotient,0
 10092  2364                     l6067:	
 10093  2364  3001               	movlw	1
 10094  2365                     u8235:	
 10095  2365  36A1               	lsrf	___awdiv@divisor+1,f
 10096  2366  0CA0               	rrf	___awdiv@divisor,f
 10097  2367  0B89               	decfsz	9,f
 10098  2368  2B65               	goto	u8235
 10099  2369  3001               	movlw	1
 10100  236A  02A4               	subwf	___awdiv@counter,f
 10101  236B  1D03               	btfss	3,2
 10102  236C  2B52               	goto	l6061
 10103  236D                     l6071:	
 10104  236D  0825               	movf	___awdiv@sign,w
 10105  236E  1903               	btfsc	3,2
 10106  236F  2B75               	goto	l6075
 10107  2370  09A6               	comf	___awdiv@quotient,f
 10108  2371  09A7               	comf	___awdiv@quotient+1,f
 10109  2372  0AA6               	incf	___awdiv@quotient,f
 10110  2373  1903               	skipnz
 10111  2374  0AA7               	incf	___awdiv@quotient+1,f
 10112  2375                     l6075:	
 10113  2375  0827               	movf	___awdiv@quotient+1,w
 10114  2376  00A1               	movwf	?___awdiv+1
 10115  2377  0826               	movf	___awdiv@quotient,w
 10116  2378  00A0               	movwf	?___awdiv
 10117  2379  0008               	return
 10118  237A                     __end_of___awdiv:	
 10119                           
 10120                           	psect	text13
 10121  1C3D                     __ptext13:	
 10122 ;; *************** function __tdiv_to_l_ *****************
 10123 ;; Defined at:
 10124 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  f1              4    2[COMMON] float 
 10127 ;;  f2              4    6[COMMON] float 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  quot            4    4[BANK0 ] unsigned long 
 10130 ;;  exp1            1    9[BANK0 ] unsigned char 
 10131 ;;  cntr            1    8[BANK0 ] unsigned char 
 10132 ;; Return value:  Size  Location     Type
 10133 ;;                  4    2[COMMON] unsigned long 
 10134 ;; Registers used:
 10135 ;;		wreg, status,2, status,0
 10136 ;; Tracked objects:
 10137 ;;		On entry : 0/0
 10138 ;;		On exit  : 0/0
 10139 ;;		Unchanged: 0/0
 10140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10141 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10142 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10143 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10144 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10145 ;;Total ram usage:       18 bytes
 10146 ;; Hardware stack levels used:    1
 10147 ;; Hardware stack levels required when called:    2
 10148 ;; This function calls:
 10149 ;;		Nothing
 10150 ;; This function is called by:
 10151 ;;		_sprintf
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           
 10156                           ;psect for function __tdiv_to_l_
 10157  1C3D                     __tdiv_to_l_:	
 10158                           
 10159                           ;incstack = 0
 10160                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 10161  1C3D  0872               	movf	__tdiv_to_l_@f1,w
 10162  1C3E  0020               	movlb	0	; select bank0
 10163  1C3F  00A0               	movwf	??__tdiv_to_l_
 10164  1C40  0873               	movf	__tdiv_to_l_@f1+1,w
 10165  1C41  00A1               	movwf	??__tdiv_to_l_+1
 10166  1C42  0874               	movf	__tdiv_to_l_@f1+2,w
 10167  1C43  00A2               	movwf	??__tdiv_to_l_+2
 10168  1C44  1003               	clrc
 10169  1C45  0D21               	rlf	??__tdiv_to_l_+1,w
 10170  1C46  0D22               	rlf	??__tdiv_to_l_+2,w
 10171  1C47  00A3               	movwf	??__tdiv_to_l_+3
 10172  1C48  0823               	movf	??__tdiv_to_l_+3,w
 10173  1C49  00A9               	movwf	__tdiv_to_l_@exp1
 10174  1C4A  0829               	movf	__tdiv_to_l_@exp1,w
 10175  1C4B  1D03               	btfss	3,2
 10176  1C4C  2C56               	goto	l4243
 10177  1C4D  3000               	movlw	0
 10178  1C4E  00F5               	movwf	?__tdiv_to_l_+3
 10179  1C4F  3000               	movlw	0
 10180  1C50  00F4               	movwf	?__tdiv_to_l_+2
 10181  1C51  3000               	movlw	0
 10182  1C52  00F3               	movwf	?__tdiv_to_l_+1
 10183  1C53  3000               	movlw	0
 10184  1C54  00F2               	movwf	?__tdiv_to_l_
 10185  1C55  0008               	return
 10186  1C56                     l4243:	
 10187  1C56  0876               	movf	__tdiv_to_l_@f2,w
 10188  1C57  00A0               	movwf	??__tdiv_to_l_
 10189  1C58  0877               	movf	__tdiv_to_l_@f2+1,w
 10190  1C59  00A1               	movwf	??__tdiv_to_l_+1
 10191  1C5A  0878               	movf	__tdiv_to_l_@f2+2,w
 10192  1C5B  00A2               	movwf	??__tdiv_to_l_+2
 10193  1C5C  1003               	clrc
 10194  1C5D  0D21               	rlf	??__tdiv_to_l_+1,w
 10195  1C5E  0D22               	rlf	??__tdiv_to_l_+2,w
 10196  1C5F  00A3               	movwf	??__tdiv_to_l_+3
 10197  1C60  0823               	movf	??__tdiv_to_l_+3,w
 10198  1C61  00A8               	movwf	__tdiv_to_l_@cntr
 10199  1C62  0828               	movf	__tdiv_to_l_@cntr,w
 10200  1C63  1D03               	btfss	3,2
 10201  1C64  2C6E               	goto	l983
 10202  1C65  3000               	movlw	0
 10203  1C66  00F5               	movwf	?__tdiv_to_l_+3
 10204  1C67  3000               	movlw	0
 10205  1C68  00F4               	movwf	?__tdiv_to_l_+2
 10206  1C69  3000               	movlw	0
 10207  1C6A  00F3               	movwf	?__tdiv_to_l_+1
 10208  1C6B  3000               	movlw	0
 10209  1C6C  00F2               	movwf	?__tdiv_to_l_
 10210  1C6D  0008               	return
 10211  1C6E                     l983:	
 10212  1C6E  17F3               	bsf	__tdiv_to_l_@f1+1,7
 10213  1C6F  30FF               	movlw	255
 10214  1C70  05F2               	andwf	__tdiv_to_l_@f1,f
 10215  1C71  30FF               	movlw	255
 10216  1C72  05F3               	andwf	__tdiv_to_l_@f1+1,f
 10217  1C73  3000               	movlw	0
 10218  1C74  05F4               	andwf	__tdiv_to_l_@f1+2,f
 10219  1C75  17F7               	bsf	__tdiv_to_l_@f2+1,7
 10220  1C76  30FF               	movlw	255
 10221  1C77  05F6               	andwf	__tdiv_to_l_@f2,f
 10222  1C78  30FF               	movlw	255
 10223  1C79  05F7               	andwf	__tdiv_to_l_@f2+1,f
 10224  1C7A  3000               	movlw	0
 10225  1C7B  05F8               	andwf	__tdiv_to_l_@f2+2,f
 10226  1C7C  3000               	movlw	0
 10227  1C7D  00A7               	movwf	__tdiv_to_l_@quot+3
 10228  1C7E  3000               	movlw	0
 10229  1C7F  00A6               	movwf	__tdiv_to_l_@quot+2
 10230  1C80  3000               	movlw	0
 10231  1C81  00A5               	movwf	__tdiv_to_l_@quot+1
 10232  1C82  3000               	movlw	0
 10233  1C83  00A4               	movwf	__tdiv_to_l_@quot
 10234  1C84  307F               	movlw	127
 10235  1C85  02A9               	subwf	__tdiv_to_l_@exp1,f
 10236  1C86  3098               	movlw	152
 10237  1C87  0728               	addwf	__tdiv_to_l_@cntr,w
 10238  1C88  00A0               	movwf	??__tdiv_to_l_
 10239  1C89  0820               	movf	??__tdiv_to_l_,w
 10240  1C8A  02A9               	subwf	__tdiv_to_l_@exp1,f
 10241  1C8B  3018               	movlw	24
 10242  1C8C  00A0               	movwf	??__tdiv_to_l_
 10243  1C8D  0820               	movf	??__tdiv_to_l_,w
 10244  1C8E  00A8               	movwf	__tdiv_to_l_@cntr
 10245  1C8F                     l4257:	
 10246  1C8F  3001               	movlw	1
 10247  1C90                     u5095:	
 10248  1C90  35A4               	lslf	__tdiv_to_l_@quot,f
 10249  1C91  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 10250  1C92  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 10251  1C93  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 10252  1C94  0B89               	decfsz	9,f
 10253  1C95  2C90               	goto	u5095
 10254  1C96  0878               	movf	__tdiv_to_l_@f2+2,w
 10255  1C97  0274               	subwf	__tdiv_to_l_@f1+2,w
 10256  1C98  1D03               	skipz
 10257  1C99  2CA0               	goto	u5105
 10258  1C9A  0877               	movf	__tdiv_to_l_@f2+1,w
 10259  1C9B  0273               	subwf	__tdiv_to_l_@f1+1,w
 10260  1C9C  1D03               	skipz
 10261  1C9D  2CA0               	goto	u5105
 10262  1C9E  0876               	movf	__tdiv_to_l_@f2,w
 10263  1C9F  0272               	subwf	__tdiv_to_l_@f1,w
 10264  1CA0                     u5105:	
 10265  1CA0  1C03               	skipc
 10266  1CA1  2CA9               	goto	l4265
 10267  1CA2  0876               	movf	__tdiv_to_l_@f2,w
 10268  1CA3  02F2               	subwf	__tdiv_to_l_@f1,f
 10269  1CA4  0877               	movf	__tdiv_to_l_@f2+1,w
 10270  1CA5  3BF3               	subwfb	__tdiv_to_l_@f1+1,f
 10271  1CA6  0878               	movf	__tdiv_to_l_@f2+2,w
 10272  1CA7  3BF4               	subwfb	__tdiv_to_l_@f1+2,f
 10273  1CA8  1424               	bsf	__tdiv_to_l_@quot,0
 10274  1CA9                     l4265:	
 10275  1CA9  3001               	movlw	1
 10276  1CAA                     u5115:	
 10277  1CAA  35F2               	lslf	__tdiv_to_l_@f1,f
 10278  1CAB  0DF3               	rlf	__tdiv_to_l_@f1+1,f
 10279  1CAC  0DF4               	rlf	__tdiv_to_l_@f1+2,f
 10280  1CAD  0B89               	decfsz	9,f
 10281  1CAE  2CAA               	goto	u5115
 10282  1CAF  3001               	movlw	1
 10283  1CB0  02A8               	subwf	__tdiv_to_l_@cntr,f
 10284  1CB1  1D03               	btfss	3,2
 10285  1CB2  2C8F               	goto	l4257
 10286  1CB3  1FA9               	btfss	__tdiv_to_l_@exp1,7
 10287  1CB4  2CD1               	goto	l4277
 10288  1CB5  0829               	movf	__tdiv_to_l_@exp1,w
 10289  1CB6  3A80               	xorlw	128
 10290  1CB7  3E97               	addlw	151
 10291  1CB8  1803               	skipnc
 10292  1CB9  2CC3               	goto	l4275
 10293  1CBA  3000               	movlw	0
 10294  1CBB  00F5               	movwf	?__tdiv_to_l_+3
 10295  1CBC  3000               	movlw	0
 10296  1CBD  00F4               	movwf	?__tdiv_to_l_+2
 10297  1CBE  3000               	movlw	0
 10298  1CBF  00F3               	movwf	?__tdiv_to_l_+1
 10299  1CC0  3000               	movlw	0
 10300  1CC1  00F2               	movwf	?__tdiv_to_l_
 10301  1CC2  0008               	return
 10302  1CC3                     l4275:	
 10303  1CC3  3001               	movlw	1
 10304  1CC4                     u5155:	
 10305  1CC4  36A7               	lsrf	__tdiv_to_l_@quot+3,f
 10306  1CC5  0CA6               	rrf	__tdiv_to_l_@quot+2,f
 10307  1CC6  0CA5               	rrf	__tdiv_to_l_@quot+1,f
 10308  1CC7  0CA4               	rrf	__tdiv_to_l_@quot,f
 10309  1CC8  0B89               	decfsz	9,f
 10310  1CC9  2CC4               	goto	u5155
 10311  1CCA  3001               	movlw	1
 10312  1CCB  00A0               	movwf	??__tdiv_to_l_
 10313  1CCC  0820               	movf	??__tdiv_to_l_,w
 10314  1CCD  07A9               	addwf	__tdiv_to_l_@exp1,f
 10315  1CCE  1903               	btfsc	3,2
 10316  1CCF  2CEA               	goto	l4285
 10317  1CD0  2CC3               	goto	l4275
 10318  1CD1                     l4277:	
 10319  1CD1  3018               	movlw	24
 10320  1CD2  0229               	subwf	__tdiv_to_l_@exp1,w
 10321  1CD3  1C03               	skipc
 10322  1CD4  2CE7               	goto	l993
 10323  1CD5  3000               	movlw	0
 10324  1CD6  00F5               	movwf	?__tdiv_to_l_+3
 10325  1CD7  3000               	movlw	0
 10326  1CD8  00F4               	movwf	?__tdiv_to_l_+2
 10327  1CD9  3000               	movlw	0
 10328  1CDA  00F3               	movwf	?__tdiv_to_l_+1
 10329  1CDB  3000               	movlw	0
 10330  1CDC  00F2               	movwf	?__tdiv_to_l_
 10331  1CDD  0008               	return
 10332  1CDE                     l4283:	
 10333  1CDE  3001               	movlw	1
 10334  1CDF                     u5185:	
 10335  1CDF  35A4               	lslf	__tdiv_to_l_@quot,f
 10336  1CE0  0DA5               	rlf	__tdiv_to_l_@quot+1,f
 10337  1CE1  0DA6               	rlf	__tdiv_to_l_@quot+2,f
 10338  1CE2  0DA7               	rlf	__tdiv_to_l_@quot+3,f
 10339  1CE3  0B89               	decfsz	9,f
 10340  1CE4  2CDF               	goto	u5185
 10341  1CE5  3001               	movlw	1
 10342  1CE6  02A9               	subwf	__tdiv_to_l_@exp1,f
 10343  1CE7                     l993:	
 10344  1CE7  0829               	movf	__tdiv_to_l_@exp1,w
 10345  1CE8  1D03               	btfss	3,2
 10346  1CE9  2CDE               	goto	l4283
 10347  1CEA                     l4285:	
 10348  1CEA  0827               	movf	__tdiv_to_l_@quot+3,w
 10349  1CEB  00F5               	movwf	?__tdiv_to_l_+3
 10350  1CEC  0826               	movf	__tdiv_to_l_@quot+2,w
 10351  1CED  00F4               	movwf	?__tdiv_to_l_+2
 10352  1CEE  0825               	movf	__tdiv_to_l_@quot+1,w
 10353  1CEF  00F3               	movwf	?__tdiv_to_l_+1
 10354  1CF0  0824               	movf	__tdiv_to_l_@quot,w
 10355  1CF1  00F2               	movwf	?__tdiv_to_l_
 10356  1CF2  0008               	return
 10357  1CF3                     __end_of__tdiv_to_l_:	
 10358                           
 10359                           	psect	text14
 10360  1CF3                     __ptext14:	
 10361 ;; *************** function __div_to_l_ *****************
 10362 ;; Defined at:
 10363 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;  f1              4    2[COMMON] unsigned long 
 10366 ;;  f2              4    6[COMMON] unsigned long 
 10367 ;; Auto vars:     Size  Location     Type
 10368 ;;  quot            4    5[BANK0 ] unsigned long 
 10369 ;;  exp1            1   10[BANK0 ] unsigned char 
 10370 ;;  cntr            1    9[BANK0 ] unsigned char 
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  4    2[COMMON] unsigned long 
 10373 ;; Registers used:
 10374 ;;		wreg, status,2, status,0
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10380 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10381 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10382 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10383 ;;      Totals:         8      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10384 ;;Total ram usage:       19 bytes
 10385 ;; Hardware stack levels used:    1
 10386 ;; Hardware stack levels required when called:    2
 10387 ;; This function calls:
 10388 ;;		Nothing
 10389 ;; This function is called by:
 10390 ;;		_sprintf
 10391 ;; This function uses a non-reentrant model
 10392 ;;
 10393                           
 10394                           
 10395                           ;psect for function __div_to_l_
 10396  1CF3                     __div_to_l_:	
 10397                           
 10398                           ;incstack = 0
 10399                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
 10400  1CF3  0872               	movf	__div_to_l_@f1,w
 10401  1CF4  0020               	movlb	0	; select bank0
 10402  1CF5  00A0               	movwf	??__div_to_l_
 10403  1CF6  0873               	movf	__div_to_l_@f1+1,w
 10404  1CF7  00A1               	movwf	??__div_to_l_+1
 10405  1CF8  0874               	movf	__div_to_l_@f1+2,w
 10406  1CF9  00A2               	movwf	??__div_to_l_+2
 10407  1CFA  0875               	movf	__div_to_l_@f1+3,w
 10408  1CFB  00A3               	movwf	??__div_to_l_+3
 10409  1CFC  1003               	clrc
 10410  1CFD  0D22               	rlf	??__div_to_l_+2,w
 10411  1CFE  0D23               	rlf	??__div_to_l_+3,w
 10412  1CFF  00A4               	movwf	??__div_to_l_+4
 10413  1D00  0824               	movf	??__div_to_l_+4,w
 10414  1D01  00AA               	movwf	__div_to_l_@exp1
 10415  1D02  082A               	movf	__div_to_l_@exp1,w
 10416  1D03  1D03               	btfss	3,2
 10417  1D04  2D0E               	goto	l4295
 10418  1D05  3000               	movlw	0
 10419  1D06  00F5               	movwf	?__div_to_l_+3
 10420  1D07  3000               	movlw	0
 10421  1D08  00F4               	movwf	?__div_to_l_+2
 10422  1D09  3000               	movlw	0
 10423  1D0A  00F3               	movwf	?__div_to_l_+1
 10424  1D0B  3000               	movlw	0
 10425  1D0C  00F2               	movwf	?__div_to_l_
 10426  1D0D  0008               	return
 10427  1D0E                     l4295:	
 10428  1D0E  0876               	movf	__div_to_l_@f2,w
 10429  1D0F  00A0               	movwf	??__div_to_l_
 10430  1D10  0877               	movf	__div_to_l_@f2+1,w
 10431  1D11  00A1               	movwf	??__div_to_l_+1
 10432  1D12  0878               	movf	__div_to_l_@f2+2,w
 10433  1D13  00A2               	movwf	??__div_to_l_+2
 10434  1D14  0879               	movf	__div_to_l_@f2+3,w
 10435  1D15  00A3               	movwf	??__div_to_l_+3
 10436  1D16  1003               	clrc
 10437  1D17  0D22               	rlf	??__div_to_l_+2,w
 10438  1D18  0D23               	rlf	??__div_to_l_+3,w
 10439  1D19  00A4               	movwf	??__div_to_l_+4
 10440  1D1A  0824               	movf	??__div_to_l_+4,w
 10441  1D1B  00A9               	movwf	__div_to_l_@cntr
 10442  1D1C  0829               	movf	__div_to_l_@cntr,w
 10443  1D1D  1D03               	btfss	3,2
 10444  1D1E  2D28               	goto	l941
 10445  1D1F  3000               	movlw	0
 10446  1D20  00F5               	movwf	?__div_to_l_+3
 10447  1D21  3000               	movlw	0
 10448  1D22  00F4               	movwf	?__div_to_l_+2
 10449  1D23  3000               	movlw	0
 10450  1D24  00F3               	movwf	?__div_to_l_+1
 10451  1D25  3000               	movlw	0
 10452  1D26  00F2               	movwf	?__div_to_l_
 10453  1D27  0008               	return
 10454  1D28                     l941:	
 10455  1D28  17F4               	bsf	__div_to_l_@f1+2,7
 10456  1D29  30FF               	movlw	255
 10457  1D2A  05F2               	andwf	__div_to_l_@f1,f
 10458  1D2B  30FF               	movlw	255
 10459  1D2C  05F3               	andwf	__div_to_l_@f1+1,f
 10460  1D2D  30FF               	movlw	255
 10461  1D2E  05F4               	andwf	__div_to_l_@f1+2,f
 10462  1D2F  3000               	movlw	0
 10463  1D30  05F5               	andwf	__div_to_l_@f1+3,f
 10464  1D31  17F8               	bsf	__div_to_l_@f2+2,7
 10465  1D32  30FF               	movlw	255
 10466  1D33  05F6               	andwf	__div_to_l_@f2,f
 10467  1D34  30FF               	movlw	255
 10468  1D35  05F7               	andwf	__div_to_l_@f2+1,f
 10469  1D36  30FF               	movlw	255
 10470  1D37  05F8               	andwf	__div_to_l_@f2+2,f
 10471  1D38  3000               	movlw	0
 10472  1D39  05F9               	andwf	__div_to_l_@f2+3,f
 10473  1D3A  3000               	movlw	0
 10474  1D3B  00A8               	movwf	__div_to_l_@quot+3
 10475  1D3C  3000               	movlw	0
 10476  1D3D  00A7               	movwf	__div_to_l_@quot+2
 10477  1D3E  3000               	movlw	0
 10478  1D3F  00A6               	movwf	__div_to_l_@quot+1
 10479  1D40  3000               	movlw	0
 10480  1D41  00A5               	movwf	__div_to_l_@quot
 10481  1D42  307F               	movlw	127
 10482  1D43  02AA               	subwf	__div_to_l_@exp1,f
 10483  1D44  30A0               	movlw	160
 10484  1D45  0729               	addwf	__div_to_l_@cntr,w
 10485  1D46  00A0               	movwf	??__div_to_l_
 10486  1D47  0820               	movf	??__div_to_l_,w
 10487  1D48  02AA               	subwf	__div_to_l_@exp1,f
 10488  1D49  3020               	movlw	32
 10489  1D4A  00A0               	movwf	??__div_to_l_
 10490  1D4B  0820               	movf	??__div_to_l_,w
 10491  1D4C  00A9               	movwf	__div_to_l_@cntr
 10492  1D4D                     l4309:	
 10493  1D4D  3001               	movlw	1
 10494  1D4E                     u5225:	
 10495  1D4E  35A5               	lslf	__div_to_l_@quot,f
 10496  1D4F  0DA6               	rlf	__div_to_l_@quot+1,f
 10497  1D50  0DA7               	rlf	__div_to_l_@quot+2,f
 10498  1D51  0DA8               	rlf	__div_to_l_@quot+3,f
 10499  1D52  0B89               	decfsz	9,f
 10500  1D53  2D4E               	goto	u5225
 10501  1D54  0879               	movf	__div_to_l_@f2+3,w
 10502  1D55  0275               	subwf	__div_to_l_@f1+3,w
 10503  1D56  1D03               	skipz
 10504  1D57  2D62               	goto	u5235
 10505  1D58  0878               	movf	__div_to_l_@f2+2,w
 10506  1D59  0274               	subwf	__div_to_l_@f1+2,w
 10507  1D5A  1D03               	skipz
 10508  1D5B  2D62               	goto	u5235
 10509  1D5C  0877               	movf	__div_to_l_@f2+1,w
 10510  1D5D  0273               	subwf	__div_to_l_@f1+1,w
 10511  1D5E  1D03               	skipz
 10512  1D5F  2D62               	goto	u5235
 10513  1D60  0876               	movf	__div_to_l_@f2,w
 10514  1D61  0272               	subwf	__div_to_l_@f1,w
 10515  1D62                     u5235:	
 10516  1D62  1C03               	skipc
 10517  1D63  2D6D               	goto	l4317
 10518  1D64  0876               	movf	__div_to_l_@f2,w
 10519  1D65  02F2               	subwf	__div_to_l_@f1,f
 10520  1D66  0877               	movf	__div_to_l_@f2+1,w
 10521  1D67  3BF3               	subwfb	__div_to_l_@f1+1,f
 10522  1D68  0878               	movf	__div_to_l_@f2+2,w
 10523  1D69  3BF4               	subwfb	__div_to_l_@f1+2,f
 10524  1D6A  0879               	movf	__div_to_l_@f2+3,w
 10525  1D6B  3BF5               	subwfb	__div_to_l_@f1+3,f
 10526  1D6C  1425               	bsf	__div_to_l_@quot,0
 10527  1D6D                     l4317:	
 10528  1D6D  3001               	movlw	1
 10529  1D6E                     u5245:	
 10530  1D6E  35F2               	lslf	__div_to_l_@f1,f
 10531  1D6F  0DF3               	rlf	__div_to_l_@f1+1,f
 10532  1D70  0DF4               	rlf	__div_to_l_@f1+2,f
 10533  1D71  0DF5               	rlf	__div_to_l_@f1+3,f
 10534  1D72  0B89               	decfsz	9,f
 10535  1D73  2D6E               	goto	u5245
 10536  1D74  3001               	movlw	1
 10537  1D75  02A9               	subwf	__div_to_l_@cntr,f
 10538  1D76  1D03               	btfss	3,2
 10539  1D77  2D4D               	goto	l4309
 10540  1D78  1FAA               	btfss	__div_to_l_@exp1,7
 10541  1D79  2D96               	goto	l4329
 10542  1D7A  082A               	movf	__div_to_l_@exp1,w
 10543  1D7B  3A80               	xorlw	128
 10544  1D7C  3E9F               	addlw	159
 10545  1D7D  1803               	skipnc
 10546  1D7E  2D88               	goto	l4327
 10547  1D7F  3000               	movlw	0
 10548  1D80  00F5               	movwf	?__div_to_l_+3
 10549  1D81  3000               	movlw	0
 10550  1D82  00F4               	movwf	?__div_to_l_+2
 10551  1D83  3000               	movlw	0
 10552  1D84  00F3               	movwf	?__div_to_l_+1
 10553  1D85  3000               	movlw	0
 10554  1D86  00F2               	movwf	?__div_to_l_
 10555  1D87  0008               	return
 10556  1D88                     l4327:	
 10557  1D88  3001               	movlw	1
 10558  1D89                     u5285:	
 10559  1D89  36A8               	lsrf	__div_to_l_@quot+3,f
 10560  1D8A  0CA7               	rrf	__div_to_l_@quot+2,f
 10561  1D8B  0CA6               	rrf	__div_to_l_@quot+1,f
 10562  1D8C  0CA5               	rrf	__div_to_l_@quot,f
 10563  1D8D  0B89               	decfsz	9,f
 10564  1D8E  2D89               	goto	u5285
 10565  1D8F  3001               	movlw	1
 10566  1D90  00A0               	movwf	??__div_to_l_
 10567  1D91  0820               	movf	??__div_to_l_,w
 10568  1D92  07AA               	addwf	__div_to_l_@exp1,f
 10569  1D93  1903               	btfsc	3,2
 10570  1D94  2DAF               	goto	l4337
 10571  1D95  2D88               	goto	l4327
 10572  1D96                     l4329:	
 10573  1D96  3020               	movlw	32
 10574  1D97  022A               	subwf	__div_to_l_@exp1,w
 10575  1D98  1C03               	skipc
 10576  1D99  2DAC               	goto	l951
 10577  1D9A  3000               	movlw	0
 10578  1D9B  00F5               	movwf	?__div_to_l_+3
 10579  1D9C  3000               	movlw	0
 10580  1D9D  00F4               	movwf	?__div_to_l_+2
 10581  1D9E  3000               	movlw	0
 10582  1D9F  00F3               	movwf	?__div_to_l_+1
 10583  1DA0  3000               	movlw	0
 10584  1DA1  00F2               	movwf	?__div_to_l_
 10585  1DA2  0008               	return
 10586  1DA3                     l4335:	
 10587  1DA3  3001               	movlw	1
 10588  1DA4                     u5315:	
 10589  1DA4  35A5               	lslf	__div_to_l_@quot,f
 10590  1DA5  0DA6               	rlf	__div_to_l_@quot+1,f
 10591  1DA6  0DA7               	rlf	__div_to_l_@quot+2,f
 10592  1DA7  0DA8               	rlf	__div_to_l_@quot+3,f
 10593  1DA8  0B89               	decfsz	9,f
 10594  1DA9  2DA4               	goto	u5315
 10595  1DAA  3001               	movlw	1
 10596  1DAB  02AA               	subwf	__div_to_l_@exp1,f
 10597  1DAC                     l951:	
 10598  1DAC  082A               	movf	__div_to_l_@exp1,w
 10599  1DAD  1D03               	btfss	3,2
 10600  1DAE  2DA3               	goto	l4335
 10601  1DAF                     l4337:	
 10602  1DAF  0828               	movf	__div_to_l_@quot+3,w
 10603  1DB0  00F5               	movwf	?__div_to_l_+3
 10604  1DB1  0827               	movf	__div_to_l_@quot+2,w
 10605  1DB2  00F4               	movwf	?__div_to_l_+2
 10606  1DB3  0826               	movf	__div_to_l_@quot+1,w
 10607  1DB4  00F3               	movwf	?__div_to_l_+1
 10608  1DB5  0825               	movf	__div_to_l_@quot,w
 10609  1DB6  00F2               	movwf	?__div_to_l_
 10610  1DB7  0008               	return
 10611  1DB8                     __end_of__div_to_l_:	
 10612                           
 10613                           	psect	text15
 10614  21BA                     __ptext15:	
 10615 ;; *************** function ___llmod *****************
 10616 ;; Defined at:
 10617 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10618 ;; Parameters:    Size  Location     Type
 10619 ;;  divisor         4    6[BANK0 ] unsigned long 
 10620 ;;  dividend        4   10[BANK0 ] unsigned long 
 10621 ;; Auto vars:     Size  Location     Type
 10622 ;;  counter         1   15[BANK0 ] unsigned char 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  4    6[BANK0 ] unsigned long 
 10625 ;; Registers used:
 10626 ;;		wreg, status,2, status,0
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10632 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10633 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10635 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10636 ;;Total ram usage:       10 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; Hardware stack levels required when called:    2
 10639 ;; This function calls:
 10640 ;;		Nothing
 10641 ;; This function is called by:
 10642 ;;		_sprintf
 10643 ;; This function uses a non-reentrant model
 10644 ;;
 10645                           
 10646                           
 10647                           ;psect for function ___llmod
 10648  21BA                     ___llmod:	
 10649                           
 10650                           ;incstack = 0
 10651                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 10652  21BA  0020               	movlb	0	; select bank0
 10653  21BB  0829               	movf	___llmod@divisor+3,w
 10654  21BC  0428               	iorwf	___llmod@divisor+2,w
 10655  21BD  0427               	iorwf	___llmod@divisor+1,w
 10656  21BE  0426               	iorwf	___llmod@divisor,w
 10657  21BF  1903               	skipnz
 10658  21C0  29F4               	goto	l6411
 10659  21C1  01AF               	clrf	___llmod@counter
 10660  21C2  0AAF               	incf	___llmod@counter,f
 10661  21C3                     l6401:	
 10662  21C3  1BA9               	btfsc	___llmod@divisor+3,7
 10663  21C4  29D1               	goto	l6403
 10664  21C5  3001               	movlw	1
 10665  21C6                     u8885:	
 10666  21C6  35A6               	lslf	___llmod@divisor,f
 10667  21C7  0DA7               	rlf	___llmod@divisor+1,f
 10668  21C8  0DA8               	rlf	___llmod@divisor+2,f
 10669  21C9  0DA9               	rlf	___llmod@divisor+3,f
 10670  21CA  0B89               	decfsz	9,f
 10671  21CB  29C6               	goto	u8885
 10672  21CC  3001               	movlw	1
 10673  21CD  00AE               	movwf	??___llmod
 10674  21CE  082E               	movf	??___llmod,w
 10675  21CF  07AF               	addwf	___llmod@counter,f
 10676  21D0  29C3               	goto	l6401
 10677  21D1                     l6403:	
 10678  21D1  0829               	movf	___llmod@divisor+3,w
 10679  21D2  022D               	subwf	___llmod@dividend+3,w
 10680  21D3  1D03               	skipz
 10681  21D4  29DF               	goto	u8905
 10682  21D5  0828               	movf	___llmod@divisor+2,w
 10683  21D6  022C               	subwf	___llmod@dividend+2,w
 10684  21D7  1D03               	skipz
 10685  21D8  29DF               	goto	u8905
 10686  21D9  0827               	movf	___llmod@divisor+1,w
 10687  21DA  022B               	subwf	___llmod@dividend+1,w
 10688  21DB  1D03               	skipz
 10689  21DC  29DF               	goto	u8905
 10690  21DD  0826               	movf	___llmod@divisor,w
 10691  21DE  022A               	subwf	___llmod@dividend,w
 10692  21DF                     u8905:	
 10693  21DF  1C03               	skipc
 10694  21E0  29E9               	goto	l6407
 10695  21E1  0826               	movf	___llmod@divisor,w
 10696  21E2  02AA               	subwf	___llmod@dividend,f
 10697  21E3  0827               	movf	___llmod@divisor+1,w
 10698  21E4  3BAB               	subwfb	___llmod@dividend+1,f
 10699  21E5  0828               	movf	___llmod@divisor+2,w
 10700  21E6  3BAC               	subwfb	___llmod@dividend+2,f
 10701  21E7  0829               	movf	___llmod@divisor+3,w
 10702  21E8  3BAD               	subwfb	___llmod@dividend+3,f
 10703  21E9                     l6407:	
 10704  21E9  3001               	movlw	1
 10705  21EA                     u8915:	
 10706  21EA  36A9               	lsrf	___llmod@divisor+3,f
 10707  21EB  0CA8               	rrf	___llmod@divisor+2,f
 10708  21EC  0CA7               	rrf	___llmod@divisor+1,f
 10709  21ED  0CA6               	rrf	___llmod@divisor,f
 10710  21EE  0B89               	decfsz	9,f
 10711  21EF  29EA               	goto	u8915
 10712  21F0  3001               	movlw	1
 10713  21F1  02AF               	subwf	___llmod@counter,f
 10714  21F2  1D03               	btfss	3,2
 10715  21F3  29D1               	goto	l6403
 10716  21F4                     l6411:	
 10717  21F4  082D               	movf	___llmod@dividend+3,w
 10718  21F5  00A9               	movwf	?___llmod+3
 10719  21F6  082C               	movf	___llmod@dividend+2,w
 10720  21F7  00A8               	movwf	?___llmod+2
 10721  21F8  082B               	movf	___llmod@dividend+1,w
 10722  21F9  00A7               	movwf	?___llmod+1
 10723  21FA  082A               	movf	___llmod@dividend,w
 10724  21FB  00A6               	movwf	?___llmod
 10725  21FC  0008               	return
 10726  21FD                     __end_of___llmod:	
 10727                           
 10728                           	psect	text16
 10729  23CD                     __ptext16:	
 10730 ;; *************** function ___lldiv *****************
 10731 ;; Defined at:
 10732 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10733 ;; Parameters:    Size  Location     Type
 10734 ;;  divisor         4    2[COMMON] unsigned long 
 10735 ;;  dividend        4    6[COMMON] unsigned long 
 10736 ;; Auto vars:     Size  Location     Type
 10737 ;;  quotient        4    1[BANK0 ] unsigned long 
 10738 ;;  counter         1    5[BANK0 ] unsigned char 
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  4    2[COMMON] unsigned long 
 10741 ;; Registers used:
 10742 ;;		wreg, status,2, status,0
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10748 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10749 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10750 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10751 ;;      Totals:         8       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10752 ;;Total ram usage:       14 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    2
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_sprintf
 10759 ;; This function uses a non-reentrant model
 10760 ;;
 10761                           
 10762                           
 10763                           ;psect for function ___lldiv
 10764  23CD                     ___lldiv:	
 10765                           
 10766                           ;incstack = 0
 10767                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 10768  23CD  3000               	movlw	0
 10769  23CE  0020               	movlb	0	; select bank0
 10770  23CF  00A4               	movwf	___lldiv@quotient+3
 10771  23D0  3000               	movlw	0
 10772  23D1  00A3               	movwf	___lldiv@quotient+2
 10773  23D2  3000               	movlw	0
 10774  23D3  00A2               	movwf	___lldiv@quotient+1
 10775  23D4  3000               	movlw	0
 10776  23D5  00A1               	movwf	___lldiv@quotient
 10777  23D6  0875               	movf	___lldiv@divisor+3,w
 10778  23D7  0474               	iorwf	___lldiv@divisor+2,w
 10779  23D8  0473               	iorwf	___lldiv@divisor+1,w
 10780  23D9  0472               	iorwf	___lldiv@divisor,w
 10781  23DA  1903               	skipnz
 10782  23DB  2C17               	goto	l6391
 10783  23DC  01A5               	clrf	___lldiv@counter
 10784  23DD  0AA5               	incf	___lldiv@counter,f
 10785  23DE                     l6377:	
 10786  23DE  1BF5               	btfsc	___lldiv@divisor+3,7
 10787  23DF  2BEC               	goto	l6379
 10788  23E0  3001               	movlw	1
 10789  23E1                     u8815:	
 10790  23E1  35F2               	lslf	___lldiv@divisor,f
 10791  23E2  0DF3               	rlf	___lldiv@divisor+1,f
 10792  23E3  0DF4               	rlf	___lldiv@divisor+2,f
 10793  23E4  0DF5               	rlf	___lldiv@divisor+3,f
 10794  23E5  0B89               	decfsz	9,f
 10795  23E6  2BE1               	goto	u8815
 10796  23E7  3001               	movlw	1
 10797  23E8  00A0               	movwf	??___lldiv
 10798  23E9  0820               	movf	??___lldiv,w
 10799  23EA  07A5               	addwf	___lldiv@counter,f
 10800  23EB  2BDE               	goto	l6377
 10801  23EC                     l6379:	
 10802  23EC  3001               	movlw	1
 10803  23ED                     u8835:	
 10804  23ED  35A1               	lslf	___lldiv@quotient,f
 10805  23EE  0DA2               	rlf	___lldiv@quotient+1,f
 10806  23EF  0DA3               	rlf	___lldiv@quotient+2,f
 10807  23F0  0DA4               	rlf	___lldiv@quotient+3,f
 10808  23F1  0B89               	decfsz	9,f
 10809  23F2  2BED               	goto	u8835
 10810  23F3  0875               	movf	___lldiv@divisor+3,w
 10811  23F4  0279               	subwf	___lldiv@dividend+3,w
 10812  23F5  1D03               	skipz
 10813  23F6  2C01               	goto	u8845
 10814  23F7  0874               	movf	___lldiv@divisor+2,w
 10815  23F8  0278               	subwf	___lldiv@dividend+2,w
 10816  23F9  1D03               	skipz
 10817  23FA  2C01               	goto	u8845
 10818  23FB  0873               	movf	___lldiv@divisor+1,w
 10819  23FC  0277               	subwf	___lldiv@dividend+1,w
 10820  23FD  1D03               	skipz
 10821  23FE  2C01               	goto	u8845
 10822  23FF  0872               	movf	___lldiv@divisor,w
 10823  2400  0276               	subwf	___lldiv@dividend,w
 10824  2401                     u8845:	
 10825  2401  1C03               	skipc
 10826  2402  2C0C               	goto	l6387
 10827  2403  0872               	movf	___lldiv@divisor,w
 10828  2404  02F6               	subwf	___lldiv@dividend,f
 10829  2405  0873               	movf	___lldiv@divisor+1,w
 10830  2406  3BF7               	subwfb	___lldiv@dividend+1,f
 10831  2407  0874               	movf	___lldiv@divisor+2,w
 10832  2408  3BF8               	subwfb	___lldiv@dividend+2,f
 10833  2409  0875               	movf	___lldiv@divisor+3,w
 10834  240A  3BF9               	subwfb	___lldiv@dividend+3,f
 10835  240B  1421               	bsf	___lldiv@quotient,0
 10836  240C                     l6387:	
 10837  240C  3001               	movlw	1
 10838  240D                     u8855:	
 10839  240D  36F5               	lsrf	___lldiv@divisor+3,f
 10840  240E  0CF4               	rrf	___lldiv@divisor+2,f
 10841  240F  0CF3               	rrf	___lldiv@divisor+1,f
 10842  2410  0CF2               	rrf	___lldiv@divisor,f
 10843  2411  0B89               	decfsz	9,f
 10844  2412  2C0D               	goto	u8855
 10845  2413  3001               	movlw	1
 10846  2414  02A5               	subwf	___lldiv@counter,f
 10847  2415  1D03               	btfss	3,2
 10848  2416  2BEC               	goto	l6379
 10849  2417                     l6391:	
 10850  2417  0824               	movf	___lldiv@quotient+3,w
 10851  2418  00F5               	movwf	?___lldiv+3
 10852  2419  0823               	movf	___lldiv@quotient+2,w
 10853  241A  00F4               	movwf	?___lldiv+2
 10854  241B  0822               	movf	___lldiv@quotient+1,w
 10855  241C  00F3               	movwf	?___lldiv+1
 10856  241D  0821               	movf	___lldiv@quotient,w
 10857  241E  00F2               	movwf	?___lldiv
 10858  241F  0008               	return
 10859  2420                     __end_of___lldiv:	
 10860                           
 10861                           	psect	text17
 10862  2090                     __ptext17:	
 10863 ;; *************** function ___flsub *****************
 10864 ;; Defined at:
 10865 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10866 ;; Parameters:    Size  Location     Type
 10867 ;;  a               4   29[BANK1 ] unsigned long 
 10868 ;;  b               4   33[BANK1 ] unsigned long 
 10869 ;; Auto vars:     Size  Location     Type
 10870 ;;		None
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  4   29[BANK1 ] unsigned long 
 10873 ;; Registers used:
 10874 ;;		wreg, status,2, status,0, pclath, cstack
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/0
 10877 ;;		On exit  : 0/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10880 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10883 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10884 ;;Total ram usage:        8 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:    3
 10887 ;; This function calls:
 10888 ;;		___fladd
 10889 ;; This function is called by:
 10890 ;;		_sprintf
 10891 ;; This function uses a non-reentrant model
 10892 ;;
 10893                           
 10894                           
 10895                           ;psect for function ___flsub
 10896  2090                     ___flsub:	
 10897                           
 10898                           ;incstack = 0
 10899                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
 10900  2090  3080               	movlw	128
 10901  2091  0021               	movlb	1	; select bank1
 10902  2092  06C0               	xorwf	(___flsub@a+3)^(0+128),f
 10903  2093  0844               	movf	(___flsub@b+3)^(0+128),w
 10904  2094  00AC               	movwf	(___fladd@b+3)^(0+128)
 10905  2095  0843               	movf	(___flsub@b+2)^(0+128),w
 10906  2096  00AB               	movwf	(___fladd@b+2)^(0+128)
 10907  2097  0842               	movf	(___flsub@b+1)^(0+128),w
 10908  2098  00AA               	movwf	(___fladd@b+1)^(0+128)
 10909  2099  0841               	movf	___flsub@b^(0+128),w
 10910  209A  00A9               	movwf	___fladd@b^(0+128)
 10911  209B  0840               	movf	(___flsub@a+3)^(0+128),w
 10912  209C  00B0               	movwf	(___fladd@a+3)^(0+128)
 10913  209D  083F               	movf	(___flsub@a+2)^(0+128),w
 10914  209E  00AF               	movwf	(___fladd@a+2)^(0+128)
 10915  209F  083E               	movf	(___flsub@a+1)^(0+128),w
 10916  20A0  00AE               	movwf	(___fladd@a+1)^(0+128)
 10917  20A1  083D               	movf	___flsub@a^(0+128),w
 10918  20A2  00AD               	movwf	___fladd@a^(0+128)
 10919  20A3  318B  2310         	fcall	___fladd
 10920  20A5  0021               	movlb	1	; select bank1
 10921  20A6  082C               	movf	(?___fladd+3)^(0+128),w
 10922  20A7  00C0               	movwf	(?___flsub+3)^(0+128)
 10923  20A8  082B               	movf	(?___fladd+2)^(0+128),w
 10924  20A9  00BF               	movwf	(?___flsub+2)^(0+128)
 10925  20AA  082A               	movf	(?___fladd+1)^(0+128),w
 10926  20AB  00BE               	movwf	(?___flsub+1)^(0+128)
 10927  20AC  0829               	movf	?___fladd^(0+128),w
 10928  20AD  00BD               	movwf	?___flsub^(0+128)
 10929  20AE  0008               	return
 10930  20AF                     __end_of___flsub:	
 10931                           
 10932                           	psect	text18
 10933  1EA6                     __ptext18:	
 10934 ;; *************** function _startUp *****************
 10935 ;; Defined at:
 10936 ;;		line 82 in file "main.c"
 10937 ;; Parameters:    Size  Location     Type
 10938 ;;		None
 10939 ;; Auto vars:     Size  Location     Type
 10940 ;;  i               2   59[BANK2 ] int 
 10941 ;;  i               2   57[BANK2 ] int 
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  2   52[BANK2 ] int 
 10944 ;; Registers used:
 10945 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10946 ;; Tracked objects:
 10947 ;;		On entry : 0/0
 10948 ;;		On exit  : 0/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10951 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10952 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10953 ;;      Temps:          0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10954 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10955 ;;Total ram usage:        9 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    8
 10958 ;; This function calls:
 10959 ;;		___fldiv
 10960 ;;		___flge
 10961 ;;		___flmul
 10962 ;;		___fltol
 10963 ;;		_getCurrent
 10964 ;;		_getTemps
 10965 ;;		_measureVoltages
 10966 ;;		_totalVoltage
 10967 ;; This function is called by:
 10968 ;;		_main
 10969 ;; This function uses a non-reentrant model
 10970 ;;
 10971                           
 10972                           
 10973                           ;psect for function _startUp
 10974  1EA6                     _startUp:	
 10975                           
 10976                           ;main.c: 83: highestTemp = getTemps(temps, 3);
 10977                           
 10978                           ;incstack = 0
 10979                           ; Regs used in _startUp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10980  1EA6  3003               	movlw	3
 10981  1EA7  0022               	movlb	2	; select bank2
 10982  1EA8  00C9               	movwf	getTemps@numTemps^(0+256)
 10983  1EA9  3000               	movlw	0
 10984  1EAA  00CA               	movwf	(getTemps@numTemps^(0+256)+1)
 10985  1EAB  30E0               	movlw	(low (_temps| (0+256)))& (0+255)
 10986  1EAC  31A5  2548  319E   	fcall	_getTemps
 10987  1EAF  0022               	movlb	2	; select bank2
 10988  1EB0  084A               	movf	(?_getTemps+1)^(0+256),w
 10989  1EB1  0023               	movlb	3	; select bank3
 10990  1EB2  00A9               	movwf	(_highestTemp+1)^(0+384)
 10991  1EB3  0022               	movlb	2	; select bank2
 10992  1EB4  0849               	movf	?_getTemps^(0+256),w
 10993  1EB5  0023               	movlb	3	; select bank3
 10994  1EB6  00A8               	movwf	_highestTemp^(0+384)
 10995                           
 10996                           ;main.c: 84: for(int i = 0; i < 3; i++){
 10997  1EB7  0022               	movlb	2	; select bank2
 10998  1EB8  01D9               	clrf	startUp@i^(0+256)
 10999  1EB9  01DA               	clrf	(startUp@i+1)^(0+256)
 11000  1EBA  085A               	movf	(startUp@i+1)^(0+256),w
 11001  1EBB  3A80               	xorlw	128
 11002  1EBC  00D6               	movwf	??_startUp^(0+256)
 11003  1EBD  3080               	movlw	128
 11004  1EBE  0256               	subwf	??_startUp^(0+256),w
 11005  1EBF  1D03               	skipz
 11006  1EC0  2EC3               	goto	u10145
 11007  1EC1  3003               	movlw	3
 11008  1EC2  0259               	subwf	startUp@i^(0+256),w
 11009  1EC3                     u10145:	
 11010  1EC3  1803               	btfsc	3,0
 11011  1EC4  2F03               	goto	l7141
 11012  1EC5                     l7131:	
 11013                           
 11014                           ;main.c: 85: if(temps[i] < 5 || temps[i] > 50){
 11015  1EC5  0022               	movlb	2	; select bank2
 11016  1EC6  3559               	lslf	startUp@i^(0+256),w
 11017  1EC7  3EE0               	addlw	(low (_temps| (0+256)))& (0+255)
 11018  1EC8  0086               	movwf	6
 11019  1EC9  3001               	movlw	1	; select bank3/4
 11020  1ECA  0087               	movwf	7
 11021  1ECB  3F40               	moviw [0]fsr1
 11022  1ECC  00D6               	movwf	??_startUp^(0+256)
 11023  1ECD  3F41               	moviw [1]fsr1
 11024  1ECE  00D7               	movwf	(??_startUp^(0+256)+1)
 11025  1ECF  0857               	movf	(??_startUp+1)^(0+256),w
 11026  1ED0  3A80               	xorlw	128
 11027  1ED1  00D8               	movwf	(??_startUp+2)^(0+256)
 11028  1ED2  3080               	movlw	128
 11029  1ED3  0258               	subwf	(??_startUp+2)^(0+256),w
 11030  1ED4  1D03               	skipz
 11031  1ED5  2ED8               	goto	u10155
 11032  1ED6  3005               	movlw	5
 11033  1ED7  0256               	subwf	??_startUp^(0+256),w
 11034  1ED8                     u10155:	
 11035  1ED8  1C03               	skipc
 11036  1ED9  2EEF               	goto	l7135
 11037  1EDA  0022               	movlb	2	; select bank2
 11038  1EDB  3559               	lslf	startUp@i^(0+256),w
 11039  1EDC  3EE0               	addlw	(low (_temps| (0+256)))& (0+255)
 11040  1EDD  0086               	movwf	6
 11041  1EDE  3001               	movlw	1	; select bank3/4
 11042  1EDF  0087               	movwf	7
 11043  1EE0  3F40               	moviw [0]fsr1
 11044  1EE1  00D6               	movwf	??_startUp^(0+256)
 11045  1EE2  3F41               	moviw [1]fsr1
 11046  1EE3  00D7               	movwf	(??_startUp^(0+256)+1)
 11047  1EE4  0857               	movf	(??_startUp+1)^(0+256),w
 11048  1EE5  3A80               	xorlw	128
 11049  1EE6  00D8               	movwf	(??_startUp+2)^(0+256)
 11050  1EE7  3080               	movlw	128
 11051  1EE8  0258               	subwf	(??_startUp+2)^(0+256),w
 11052  1EE9  1D03               	skipz
 11053  1EEA  2EED               	goto	u10165
 11054  1EEB  3033               	movlw	51
 11055  1EEC  0256               	subwf	??_startUp^(0+256),w
 11056  1EED                     u10165:	
 11057  1EED  1C03               	skipc
 11058  1EEE  2EF3               	goto	l7139
 11059  1EEF                     l7135:	
 11060                           
 11061                           ;main.c: 89: return 0;
 11062  1EEF  0022               	movlb	2	; select bank2
 11063  1EF0  01D4               	clrf	?_startUp^(0+256)
 11064  1EF1  01D5               	clrf	(?_startUp+1)^(0+256)
 11065  1EF2  0008               	return
 11066  1EF3                     l7139:	
 11067  1EF3  3001               	movlw	1
 11068  1EF4  0022               	movlb	2	; select bank2
 11069  1EF5  07D9               	addwf	startUp@i^(0+256),f
 11070  1EF6  3000               	movlw	0
 11071  1EF7  3DDA               	addwfc	(startUp@i+1)^(0+256),f
 11072  1EF8  085A               	movf	(startUp@i+1)^(0+256),w
 11073  1EF9  3A80               	xorlw	128
 11074  1EFA  00D6               	movwf	??_startUp^(0+256)
 11075  1EFB  3080               	movlw	128
 11076  1EFC  0256               	subwf	??_startUp^(0+256),w
 11077  1EFD  1D03               	skipz
 11078  1EFE  2F01               	goto	u10175
 11079  1EFF  3003               	movlw	3
 11080  1F00  0259               	subwf	startUp@i^(0+256),w
 11081  1F01                     u10175:	
 11082  1F01  1C03               	skipc
 11083  1F02  2EC5               	goto	l7131
 11084  1F03                     l7141:	
 11085                           
 11086                           ;main.c: 90: }
 11087                           ;main.c: 91: }
 11088                           ;main.c: 93: current = getCurrent();
 11089  1F03  31A2  228D  319E   	fcall	_getCurrent
 11090  1F06  0022               	movlb	2	; select bank2
 11091  1F07  082B               	movf	(?_getCurrent+3)^(0+256),w
 11092  1F08  00E1               	movwf	(_current+3)^(0+256)
 11093  1F09  082A               	movf	(?_getCurrent+2)^(0+256),w
 11094  1F0A  00E0               	movwf	(_current+2)^(0+256)
 11095  1F0B  0829               	movf	(?_getCurrent+1)^(0+256),w
 11096  1F0C  00DF               	movwf	(_current+1)^(0+256)
 11097  1F0D  0828               	movf	?_getCurrent^(0+256),w
 11098  1F0E  00DE               	movwf	_current^(0+256)
 11099                           
 11100                           ;main.c: 94: if(current < -3 || current > 2){
 11101  1F0F  0861               	movf	(_current+3)^(0+256),w
 11102  1F10  00F5               	movwf	___flge@ff1+3
 11103  1F11  0860               	movf	(_current+2)^(0+256),w
 11104  1F12  00F4               	movwf	___flge@ff1+2
 11105  1F13  085F               	movf	(_current+1)^(0+256),w
 11106  1F14  00F3               	movwf	___flge@ff1+1
 11107  1F15  085E               	movf	_current^(0+256),w
 11108  1F16  00F2               	movwf	___flge@ff1
 11109  1F17  30C0               	movlw	192
 11110  1F18  00F9               	movwf	___flge@ff2+3
 11111  1F19  3040               	movlw	64
 11112  1F1A  00F8               	movwf	___flge@ff2+2
 11113  1F1B  3000               	movlw	0
 11114  1F1C  00F7               	movwf	___flge@ff2+1
 11115  1F1D  3000               	movlw	0
 11116  1F1E  00F6               	movwf	___flge@ff2
 11117  1F1F  31A7  2766  319E   	fcall	___flge
 11118  1F22  1C03               	btfss	3,0
 11119  1F23  2F3A               	goto	l7145
 11120  1F24  3040               	movlw	64
 11121  1F25  00F5               	movwf	___flge@ff1+3
 11122  1F26  3000               	movlw	0
 11123  1F27  00F4               	movwf	___flge@ff1+2
 11124  1F28  3000               	movlw	0
 11125  1F29  00F3               	movwf	___flge@ff1+1
 11126  1F2A  3000               	movlw	0
 11127  1F2B  00F2               	movwf	___flge@ff1
 11128  1F2C  0022               	movlb	2	; select bank2
 11129  1F2D  0861               	movf	(_current+3)^(0+256),w
 11130  1F2E  00F9               	movwf	___flge@ff2+3
 11131  1F2F  0860               	movf	(_current+2)^(0+256),w
 11132  1F30  00F8               	movwf	___flge@ff2+2
 11133  1F31  085F               	movf	(_current+1)^(0+256),w
 11134  1F32  00F7               	movwf	___flge@ff2+1
 11135  1F33  085E               	movf	_current^(0+256),w
 11136  1F34  00F6               	movwf	___flge@ff2
 11137  1F35  31A7  2766  319E   	fcall	___flge
 11138  1F38  1803               	btfsc	3,0
 11139  1F39  2F3E               	goto	l7149
 11140  1F3A                     l7145:	
 11141                           
 11142                           ;main.c: 96: return 0;
 11143  1F3A  0022               	movlb	2	; select bank2
 11144  1F3B  01D4               	clrf	?_startUp^(0+256)
 11145  1F3C  01D5               	clrf	(?_startUp+1)^(0+256)
 11146  1F3D  0008               	return
 11147  1F3E                     l7149:	
 11148                           
 11149                           ;main.c: 97: }
 11150                           ;main.c: 99: measureVoltages(voltages);
 11151  1F3E  30B0               	movlw	(low (_voltages| (0+256)))& (0+255)
 11152  1F3F  3190  200E  319E   	fcall	_measureVoltages
 11153                           
 11154                           ;main.c: 100: for(int i = 0; i < 12; i++){
 11155  1F42  0022               	movlb	2	; select bank2
 11156  1F43  01DB               	clrf	startUp@i_323^(0+256)
 11157  1F44  01DC               	clrf	(startUp@i_323+1)^(0+256)
 11158  1F45  085C               	movf	(startUp@i_323+1)^(0+256),w
 11159  1F46  3A80               	xorlw	128
 11160  1F47  00D6               	movwf	??_startUp^(0+256)
 11161  1F48  3080               	movlw	128
 11162  1F49  0256               	subwf	??_startUp^(0+256),w
 11163  1F4A  1D03               	skipz
 11164  1F4B  2F4E               	goto	u10205
 11165  1F4C  300C               	movlw	12
 11166  1F4D  025B               	subwf	startUp@i_323^(0+256),w
 11167  1F4E                     u10205:	
 11168  1F4E  1803               	btfsc	3,0
 11169  1F4F  2FA8               	goto	l7167
 11170  1F50                     l7157:	
 11171                           
 11172                           ;main.c: 101: if(voltages[i] > 4.25 || voltages[i] < 3.2){
 11173  1F50  3040               	movlw	64
 11174  1F51  00F5               	movwf	___flge@ff1+3
 11175  1F52  3088               	movlw	136
 11176  1F53  00F4               	movwf	___flge@ff1+2
 11177  1F54  3000               	movlw	0
 11178  1F55  00F3               	movwf	___flge@ff1+1
 11179  1F56  3000               	movlw	0
 11180  1F57  00F2               	movwf	___flge@ff1
 11181  1F58  0022               	movlb	2	; select bank2
 11182  1F59  085B               	movf	startUp@i_323^(0+256),w
 11183  1F5A  00D6               	movwf	??_startUp^(0+256)
 11184  1F5B  3001               	movlw	1
 11185  1F5C                     u10215:	
 11186  1F5C  35D6               	lslf	??_startUp^(0+256),f
 11187  1F5D  3EFF               	addlw	-1
 11188  1F5E  1D03               	skipz
 11189  1F5F  2F5C               	goto	u10215
 11190  1F60  3556               	lslf	??_startUp^(0+256),w
 11191  1F61  3EB0               	addlw	(low (_voltages| (0+256)))& (0+255)
 11192  1F62  0086               	movwf	6
 11193  1F63  3001               	movlw	1	; select bank3/4
 11194  1F64  0087               	movwf	7
 11195  1F65  3F40               	moviw [0]fsr1
 11196  1F66  00F6               	movwf	___flge@ff2
 11197  1F67  3F41               	moviw [1]fsr1
 11198  1F68  00F7               	movwf	___flge@ff2+1
 11199  1F69  3F42               	moviw [2]fsr1
 11200  1F6A  00F8               	movwf	___flge@ff2+2
 11201  1F6B  3F43               	moviw [3]fsr1
 11202  1F6C  00F9               	movwf	___flge@ff2+3
 11203  1F6D  31A7  2766  319E   	fcall	___flge
 11204  1F70  1C03               	btfss	3,0
 11205  1F71  2F94               	goto	l7161
 11206  1F72  0022               	movlb	2	; select bank2
 11207  1F73  085B               	movf	startUp@i_323^(0+256),w
 11208  1F74  00D6               	movwf	??_startUp^(0+256)
 11209  1F75  3001               	movlw	1
 11210  1F76                     u10235:	
 11211  1F76  35D6               	lslf	??_startUp^(0+256),f
 11212  1F77  3EFF               	addlw	-1
 11213  1F78  1D03               	skipz
 11214  1F79  2F76               	goto	u10235
 11215  1F7A  3556               	lslf	??_startUp^(0+256),w
 11216  1F7B  3EB0               	addlw	(low (_voltages| (0+256)))& (0+255)
 11217  1F7C  0086               	movwf	6
 11218  1F7D  3001               	movlw	1	; select bank3/4
 11219  1F7E  0087               	movwf	7
 11220  1F7F  3F40               	moviw [0]fsr1
 11221  1F80  00F2               	movwf	___flge@ff1
 11222  1F81  3F41               	moviw [1]fsr1
 11223  1F82  00F3               	movwf	___flge@ff1+1
 11224  1F83  3F42               	moviw [2]fsr1
 11225  1F84  00F4               	movwf	___flge@ff1+2
 11226  1F85  3F43               	moviw [3]fsr1
 11227  1F86  00F5               	movwf	___flge@ff1+3
 11228  1F87  3040               	movlw	64
 11229  1F88  00F9               	movwf	___flge@ff2+3
 11230  1F89  304C               	movlw	76
 11231  1F8A  00F8               	movwf	___flge@ff2+2
 11232  1F8B  30CC               	movlw	204
 11233  1F8C  00F7               	movwf	___flge@ff2+1
 11234  1F8D  30CD               	movlw	205
 11235  1F8E  00F6               	movwf	___flge@ff2
 11236  1F8F  31A7  2766  319E   	fcall	___flge
 11237  1F92  1803               	btfsc	3,0
 11238  1F93  2F98               	goto	l7165
 11239  1F94                     l7161:	
 11240                           
 11241                           ;main.c: 103: return 0;
 11242  1F94  0022               	movlb	2	; select bank2
 11243  1F95  01D4               	clrf	?_startUp^(0+256)
 11244  1F96  01D5               	clrf	(?_startUp+1)^(0+256)
 11245  1F97  0008               	return
 11246  1F98                     l7165:	
 11247  1F98  3001               	movlw	1
 11248  1F99  0022               	movlb	2	; select bank2
 11249  1F9A  07DB               	addwf	startUp@i_323^(0+256),f
 11250  1F9B  3000               	movlw	0
 11251  1F9C  3DDC               	addwfc	(startUp@i_323+1)^(0+256),f
 11252  1F9D  085C               	movf	(startUp@i_323+1)^(0+256),w
 11253  1F9E  3A80               	xorlw	128
 11254  1F9F  00D6               	movwf	??_startUp^(0+256)
 11255  1FA0  3080               	movlw	128
 11256  1FA1  0256               	subwf	??_startUp^(0+256),w
 11257  1FA2  1D03               	skipz
 11258  1FA3  2FA6               	goto	u10255
 11259  1FA4  300C               	movlw	12
 11260  1FA5  025B               	subwf	startUp@i_323^(0+256),w
 11261  1FA6                     u10255:	
 11262  1FA6  1C03               	skipc
 11263  1FA7  2F50               	goto	l7157
 11264  1FA8                     l7167:	
 11265                           
 11266                           ;main.c: 104: }
 11267                           ;main.c: 105: }
 11268                           ;main.c: 107: SOC = (int)(100.0*(50.4 / totalVoltage(voltages, 12)));
 11269  1FA8  3042               	movlw	66
 11270  1FA9  0021               	movlb	1	; select bank1
 11271  1FAA  00D6               	movwf	(___fldiv@b+3)^(0+128)
 11272  1FAB  3049               	movlw	73
 11273  1FAC  00D5               	movwf	(___fldiv@b+2)^(0+128)
 11274  1FAD  3099               	movlw	153
 11275  1FAE  00D4               	movwf	(___fldiv@b+1)^(0+128)
 11276  1FAF  309A               	movlw	154
 11277  1FB0  00D3               	movwf	___fldiv@b^(0+128)
 11278  1FB1  300C               	movlw	12
 11279  1FB2  00BD               	movwf	totalVoltage@lenValues^(0+128)
 11280  1FB3  3000               	movlw	0
 11281  1FB4  00BE               	movwf	(totalVoltage@lenValues^(0+128)+1)
 11282  1FB5  30B0               	movlw	(low (_voltages| (0+256)))& (0+255)
 11283  1FB6  31A4  2475  319E   	fcall	_totalVoltage
 11284  1FB9  0021               	movlb	1	; select bank1
 11285  1FBA  0840               	movf	(?_totalVoltage+3)^(0+128),w
 11286  1FBB  00D2               	movwf	(___fldiv@a+3)^(0+128)
 11287  1FBC  083F               	movf	(?_totalVoltage+2)^(0+128),w
 11288  1FBD  00D1               	movwf	(___fldiv@a+2)^(0+128)
 11289  1FBE  083E               	movf	(?_totalVoltage+1)^(0+128),w
 11290  1FBF  00D0               	movwf	(___fldiv@a+1)^(0+128)
 11291  1FC0  083D               	movf	?_totalVoltage^(0+128),w
 11292  1FC1  00CF               	movwf	___fldiv@a^(0+128)
 11293  1FC2  3192  228C  319E   	fcall	___fldiv
 11294  1FC5  0021               	movlb	1	; select bank1
 11295  1FC6  0852               	movf	(?___fldiv+3)^(0+128),w
 11296  1FC7  0020               	movlb	0	; select bank0
 11297  1FC8  00BF               	movwf	___flmul@a+3
 11298  1FC9  0021               	movlb	1	; select bank1
 11299  1FCA  0851               	movf	(?___fldiv+2)^(0+128),w
 11300  1FCB  0020               	movlb	0	; select bank0
 11301  1FCC  00BE               	movwf	___flmul@a+2
 11302  1FCD  0021               	movlb	1	; select bank1
 11303  1FCE  0850               	movf	(?___fldiv+1)^(0+128),w
 11304  1FCF  0020               	movlb	0	; select bank0
 11305  1FD0  00BD               	movwf	___flmul@a+1
 11306  1FD1  0021               	movlb	1	; select bank1
 11307  1FD2  084F               	movf	?___fldiv^(0+128),w
 11308  1FD3  0020               	movlb	0	; select bank0
 11309  1FD4  00BC               	movwf	___flmul@a
 11310  1FD5  3042               	movlw	66
 11311  1FD6  00BB               	movwf	___flmul@b+3
 11312  1FD7  30C8               	movlw	200
 11313  1FD8  00BA               	movwf	___flmul@b+2
 11314  1FD9  3000               	movlw	0
 11315  1FDA  00B9               	movwf	___flmul@b+1
 11316  1FDB  3000               	movlw	0
 11317  1FDC  00B8               	movwf	___flmul@b
 11318  1FDD  3188  20E4  319E   	fcall	___flmul
 11319  1FE0  0020               	movlb	0	; select bank0
 11320  1FE1  083B               	movf	?___flmul+3,w
 11321  1FE2  0022               	movlb	2	; select bank2
 11322  1FE3  00A3               	movwf	(___fltol@f1+3)^(0+256)
 11323  1FE4  0020               	movlb	0	; select bank0
 11324  1FE5  083A               	movf	?___flmul+2,w
 11325  1FE6  0022               	movlb	2	; select bank2
 11326  1FE7  00A2               	movwf	(___fltol@f1+2)^(0+256)
 11327  1FE8  0020               	movlb	0	; select bank0
 11328  1FE9  0839               	movf	?___flmul+1,w
 11329  1FEA  0022               	movlb	2	; select bank2
 11330  1FEB  00A1               	movwf	(___fltol@f1+1)^(0+256)
 11331  1FEC  0020               	movlb	0	; select bank0
 11332  1FED  0838               	movf	?___flmul,w
 11333  1FEE  0022               	movlb	2	; select bank2
 11334  1FEF  00A0               	movwf	___fltol@f1^(0+256)
 11335  1FF0  31A5  25C5         	fcall	___fltol
 11336  1FF2  0022               	movlb	2	; select bank2
 11337  1FF3  0821               	movf	(?___fltol+1)^(0+256),w
 11338  1FF4  0023               	movlb	3	; select bank3
 11339  1FF5  00A7               	movwf	(_SOC+1)^(0+384)
 11340  1FF6  0022               	movlb	2	; select bank2
 11341  1FF7  0820               	movf	?___fltol^(0+256),w
 11342  1FF8  0023               	movlb	3	; select bank3
 11343  1FF9  00A6               	movwf	_SOC^(0+384)
 11344                           
 11345                           ;main.c: 108: return 1;
 11346  1FFA  3001               	movlw	1
 11347  1FFB  0022               	movlb	2	; select bank2
 11348  1FFC  00D4               	movwf	?_startUp^(0+256)
 11349  1FFD  3000               	movlw	0
 11350  1FFE  00D5               	movwf	(?_startUp^(0+256)+1)
 11351  1FFF  0008               	return
 11352  2000                     __end_of_startUp:	
 11353                           
 11354                           	psect	text19
 11355  2475                     __ptext19:	
 11356 ;; *************** function _totalVoltage *****************
 11357 ;; Defined at:
 11358 ;;		line 69 in file "ltc6804.c"
 11359 ;; Parameters:    Size  Location     Type
 11360 ;;  values          1    wreg     PTR float 
 11361 ;;		 -> voltages(48), 
 11362 ;;  lenValues       2   29[BANK1 ] int 
 11363 ;; Auto vars:     Size  Location     Type
 11364 ;;  values          1   33[BANK1 ] PTR float 
 11365 ;;		 -> voltages(48), 
 11366 ;;  i               2   38[BANK1 ] int 
 11367 ;;  total           4   34[BANK1 ] float 
 11368 ;; Return value:  Size  Location     Type
 11369 ;;                  4   29[BANK1 ] float 
 11370 ;; Registers used:
 11371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11372 ;; Tracked objects:
 11373 ;;		On entry : 0/0
 11374 ;;		On exit  : 0/0
 11375 ;;		Unchanged: 0/0
 11376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11377 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11378 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11379 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11380 ;;      Totals:         0       2      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11381 ;;Total ram usage:       13 bytes
 11382 ;; Hardware stack levels used:    1
 11383 ;; Hardware stack levels required when called:    3
 11384 ;; This function calls:
 11385 ;;		___fladd
 11386 ;; This function is called by:
 11387 ;;		_startUp
 11388 ;; This function uses a non-reentrant model
 11389 ;;
 11390                           
 11391                           
 11392                           ;psect for function _totalVoltage
 11393  2475                     _totalVoltage:	
 11394                           
 11395                           ;incstack = 0
 11396                           ; Regs used in _totalVoltage: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11397                           ;totalVoltage@values stored from wreg
 11398  2475  0021               	movlb	1	; select bank1
 11399  2476  00C1               	movwf	totalVoltage@values^(0+128)
 11400                           
 11401                           ;ltc6804.c: 70: float total = 0.0;
 11402  2477  3000               	movlw	0
 11403  2478  00C5               	movwf	(totalVoltage@total+3)^(0+128)
 11404  2479  3000               	movlw	0
 11405  247A  00C4               	movwf	(totalVoltage@total+2)^(0+128)
 11406  247B  3000               	movlw	0
 11407  247C  00C3               	movwf	(totalVoltage@total+1)^(0+128)
 11408  247D  3000               	movlw	0
 11409  247E  00C2               	movwf	totalVoltage@total^(0+128)
 11410                           
 11411                           ;ltc6804.c: 71: for(int i = 0; i < lenValues; i++){
 11412  247F  01C6               	clrf	totalVoltage@i^(0+128)
 11413  2480  01C7               	clrf	(totalVoltage@i+1)^(0+128)
 11414  2481                     l7079:	
 11415  2481  0847               	movf	(totalVoltage@i+1)^(0+128),w
 11416  2482  3A80               	xorlw	128
 11417  2483  0020               	movlb	0	; select bank0
 11418  2484  00EE               	movwf	??_totalVoltage
 11419  2485  0021               	movlb	1	; select bank1
 11420  2486  083E               	movf	(totalVoltage@lenValues+1)^(0+128),w
 11421  2487  3A80               	xorlw	128
 11422  2488  0020               	movlb	0	; select bank0
 11423  2489  026E               	subwf	??_totalVoltage,w
 11424  248A  1D03               	skipz
 11425  248B  2C8F               	goto	u10035
 11426  248C  0021               	movlb	1	; select bank1
 11427  248D  083D               	movf	totalVoltage@lenValues^(0+128),w
 11428  248E  0246               	subwf	totalVoltage@i^(0+128),w
 11429  248F                     u10035:	
 11430  248F  1803               	btfsc	3,0
 11431  2490  2CC5               	goto	l7081
 11432                           
 11433                           ;ltc6804.c: 72: total += values[i];
 11434  2491  0021               	movlb	1	; select bank1
 11435  2492  0846               	movf	totalVoltage@i^(0+128),w
 11436  2493  0020               	movlb	0	; select bank0
 11437  2494  00EE               	movwf	??_totalVoltage
 11438  2495  3001               	movlw	1
 11439  2496                     u10025:	
 11440  2496  35EE               	lslf	??_totalVoltage,f
 11441  2497  3EFF               	addlw	-1
 11442  2498  1D03               	skipz
 11443  2499  2C96               	goto	u10025
 11444  249A  356E               	lslf	??_totalVoltage,w
 11445  249B  0021               	movlb	1	; select bank1
 11446  249C  0741               	addwf	totalVoltage@values^(0+128),w
 11447  249D  0020               	movlb	0	; select bank0
 11448  249E  00EF               	movwf	??_totalVoltage+1
 11449  249F  086F               	movf	??_totalVoltage+1,w
 11450  24A0  0086               	movwf	6
 11451  24A1  3001               	movlw	1	; select bank2/3
 11452  24A2  0087               	movwf	7
 11453  24A3  3F40               	moviw [0]fsr1
 11454  24A4  0021               	movlb	1	; select bank1
 11455  24A5  00A9               	movwf	___fladd@b^(0+128)
 11456  24A6  3F41               	moviw [1]fsr1
 11457  24A7  00AA               	movwf	(___fladd@b+1)^(0+128)
 11458  24A8  3F42               	moviw [2]fsr1
 11459  24A9  00AB               	movwf	(___fladd@b+2)^(0+128)
 11460  24AA  3F43               	moviw [3]fsr1
 11461  24AB  00AC               	movwf	(___fladd@b+3)^(0+128)
 11462  24AC  0845               	movf	(totalVoltage@total+3)^(0+128),w
 11463  24AD  00B0               	movwf	(___fladd@a+3)^(0+128)
 11464  24AE  0844               	movf	(totalVoltage@total+2)^(0+128),w
 11465  24AF  00AF               	movwf	(___fladd@a+2)^(0+128)
 11466  24B0  0843               	movf	(totalVoltage@total+1)^(0+128),w
 11467  24B1  00AE               	movwf	(___fladd@a+1)^(0+128)
 11468  24B2  0842               	movf	totalVoltage@total^(0+128),w
 11469  24B3  00AD               	movwf	___fladd@a^(0+128)
 11470  24B4  318B  2310  31A4   	fcall	___fladd
 11471  24B7  0021               	movlb	1	; select bank1
 11472  24B8  082C               	movf	(?___fladd+3)^(0+128),w
 11473  24B9  00C5               	movwf	(totalVoltage@total+3)^(0+128)
 11474  24BA  082B               	movf	(?___fladd+2)^(0+128),w
 11475  24BB  00C4               	movwf	(totalVoltage@total+2)^(0+128)
 11476  24BC  082A               	movf	(?___fladd+1)^(0+128),w
 11477  24BD  00C3               	movwf	(totalVoltage@total+1)^(0+128)
 11478  24BE  0829               	movf	?___fladd^(0+128),w
 11479  24BF  00C2               	movwf	totalVoltage@total^(0+128)
 11480  24C0  3001               	movlw	1
 11481  24C1  07C6               	addwf	totalVoltage@i^(0+128),f
 11482  24C2  3000               	movlw	0
 11483  24C3  3DC7               	addwfc	(totalVoltage@i+1)^(0+128),f
 11484  24C4  2C81               	goto	l7079
 11485  24C5                     l7081:	
 11486                           
 11487                           ;ltc6804.c: 73: }
 11488                           ;ltc6804.c: 74: return total;
 11489  24C5  0021               	movlb	1	; select bank1
 11490  24C6  0845               	movf	(totalVoltage@total+3)^(0+128),w
 11491  24C7  00C0               	movwf	(?_totalVoltage+3)^(0+128)
 11492  24C8  0844               	movf	(totalVoltage@total+2)^(0+128),w
 11493  24C9  00BF               	movwf	(?_totalVoltage+2)^(0+128)
 11494  24CA  0843               	movf	(totalVoltage@total+1)^(0+128),w
 11495  24CB  00BE               	movwf	(?_totalVoltage+1)^(0+128)
 11496  24CC  0842               	movf	totalVoltage@total^(0+128),w
 11497  24CD  00BD               	movwf	?_totalVoltage^(0+128)
 11498  24CE  0008               	return
 11499  24CF                     __end_of_totalVoltage:	
 11500                           
 11501                           	psect	text20
 11502  100E                     __ptext20:	
 11503 ;; *************** function _measureVoltages *****************
 11504 ;; Defined at:
 11505 ;;		line 77 in file "ltc6804.c"
 11506 ;; Parameters:    Size  Location     Type
 11507 ;;  measurements    1    wreg     PTR float 
 11508 ;;		 -> voltages(48), 
 11509 ;; Auto vars:     Size  Location     Type
 11510 ;;  measurements    1   25[BANK2 ] PTR float 
 11511 ;;		 -> voltages(48), 
 11512 ;;  i               2   26[BANK2 ] int 
 11513 ;;  ltcData        24    0[BANK2 ] int [12][1]
 11514 ;;  pecError        1   24[BANK2 ] unsigned char 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11525 ;;      Locals:         0       0       0      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11526 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11527 ;;      Totals:         0       0       4      28       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11528 ;;Total ram usage:       32 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    6
 11531 ;; This function calls:
 11532 ;;		_LTC6804_adcv
 11533 ;;		_LTC6804_rdcv
 11534 ;;		___fldiv
 11535 ;;		___flge
 11536 ;;		___flmul
 11537 ;;		___xxtofl
 11538 ;; This function is called by:
 11539 ;;		_startUp
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543                           
 11544                           ;psect for function _measureVoltages
 11545  100E                     _measureVoltages:	
 11546                           
 11547                           ;incstack = 0
 11548                           ; Regs used in _measureVoltages: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11549                           ;measureVoltages@measurements stored from wreg
 11550  100E  0022               	movlb	2	; select bank2
 11551  100F  00B9               	movwf	measureVoltages@measurements^(0+256)
 11552                           
 11553                           ;ltc6804.c: 78: char pecError = -1;
 11554  1010  30FF               	movlw	255
 11555  1011  0021               	movlb	1	; select bank1
 11556  1012  00E9               	movwf	??_measureVoltages^(0+128)
 11557  1013  0869               	movf	??_measureVoltages^(0+128),w
 11558  1014  0022               	movlb	2	; select bank2
 11559  1015  00B8               	movwf	measureVoltages@pecError^(0+256)
 11560                           
 11561                           ;ltc6804.c: 79: int ltcData[1][12] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 11562  1016  3020               	movlw	low measureVoltages@F7570
 11563  1017  0086               	movwf	6
 11564  1018  3002               	movlw	high measureVoltages@F7570
 11565  1019  0087               	movwf	7
 11566  101A  3020               	movlw	low measureVoltages@ltcData
 11567  101B  0084               	movwf	4
 11568  101C  3001               	movlw	high measureVoltages@ltcData
 11569  101D  0085               	movwf	5
 11570  101E  3018               	movlw	24
 11571  101F  0021               	movlb	1	; select bank1
 11572  1020  00E9               	movwf	??_measureVoltages^(0+128)
 11573  1021                     u9940:	
 11574  1021  0016               	moviw fsr1++
 11575  1022  001A               	movwi fsr0++
 11576  1023  0BE9               	decfsz	??_measureVoltages^(0+128),f
 11577  1024  2821               	goto	u9940
 11578                           
 11579                           ;ltc6804.c: 81: LTC6804_adcv();
 11580  1025  31A0  20CF  3190   	fcall	_LTC6804_adcv
 11581  1028                     l7053:	
 11582                           ;ltc6804.c: 83: do{
 11583                           
 11584                           
 11585                           ;ltc6804.c: 84: pecError = LTC6804_rdcv(0, 1, ltcData);
 11586  1028  0020               	movlb	0	; select bank0
 11587  1029  01BB               	clrf	LTC6804_rdcv@total_ic
 11588  102A  0ABB               	incf	LTC6804_rdcv@total_ic,f
 11589  102B  3020               	movlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 11590  102C  0021               	movlb	1	; select bank1
 11591  102D  00E9               	movwf	??_measureVoltages^(0+128)
 11592  102E  0869               	movf	??_measureVoltages^(0+128),w
 11593  102F  0020               	movlb	0	; select bank0
 11594  1030  00BC               	movwf	LTC6804_rdcv@cell_codes
 11595  1031  3000               	movlw	0
 11596  1032  3191  2101  3190   	fcall	_LTC6804_rdcv
 11597  1035  0021               	movlb	1	; select bank1
 11598  1036  00EA               	movwf	(??_measureVoltages+1)^(0+128)
 11599  1037  086A               	movf	(??_measureVoltages+1)^(0+128),w
 11600  1038  0022               	movlb	2	; select bank2
 11601  1039  00B8               	movwf	measureVoltages@pecError^(0+256)
 11602                           
 11603                           ;ltc6804.c: 85: }while(pecError != 0);
 11604  103A  0838               	movf	measureVoltages@pecError^(0+256),w
 11605  103B  1D03               	btfss	3,2
 11606  103C  2828               	goto	l7053
 11607                           
 11608                           ;ltc6804.c: 87: for(int i = 0; i< 12; i ++){
 11609  103D  01BA               	clrf	measureVoltages@i^(0+256)
 11610  103E  01BB               	clrf	(measureVoltages@i+1)^(0+256)
 11611  103F                     L10:	
 11612  103F  083B               	movf	(measureVoltages@i+1)^(0+256),w
 11613  1040  3A80               	xorlw	128
 11614  1041  0021               	movlb	1	; select bank1
 11615  1042  00E9               	movwf	??_measureVoltages^(0+128)
 11616  1043  3080               	movlw	128
 11617  1044  0269               	subwf	??_measureVoltages^(0+128),w
 11618  1045  1D03               	skipz
 11619  1046  284A               	goto	u9965
 11620  1047  300C               	movlw	12
 11621  1048  0022               	movlb	2	; select bank2
 11622  1049  023A               	subwf	measureVoltages@i^(0+256),w
 11623  104A                     u9965:	
 11624  104A  1803               	btfsc	3,0
 11625  104B  0008               	return
 11626                           
 11627                           ;ltc6804.c: 88: measurements[i] = -1.0*((float)ltcData[0][i]/10000.0);
 11628  104C  30BF               	movlw	191
 11629  104D  0020               	movlb	0	; select bank0
 11630  104E  00BB               	movwf	___flmul@b+3
 11631  104F  3080               	movlw	128
 11632  1050  00BA               	movwf	___flmul@b+2
 11633  1051  3000               	movlw	0
 11634  1052  00B9               	movwf	___flmul@b+1
 11635  1053  3000               	movlw	0
 11636  1054  00B8               	movwf	___flmul@b
 11637  1055  3046               	movlw	70
 11638  1056  0021               	movlb	1	; select bank1
 11639  1057  00D2               	movwf	(___fldiv@a+3)^(0+128)
 11640  1058  301C               	movlw	28
 11641  1059  00D1               	movwf	(___fldiv@a+2)^(0+128)
 11642  105A  3040               	movlw	64
 11643  105B  00D0               	movwf	(___fldiv@a+1)^(0+128)
 11644  105C  3000               	movlw	0
 11645  105D  00CF               	movwf	___fldiv@a^(0+128)
 11646  105E  0022               	movlb	2	; select bank2
 11647  105F  353A               	lslf	measureVoltages@i^(0+256),w
 11648  1060  3E20               	addlw	(low (measureVoltages@ltcData| (0+256)))& (0+255)
 11649  1061  0086               	movwf	6
 11650  1062  3001               	movlw	1	; select bank2/3
 11651  1063  0087               	movwf	7
 11652  1064  3F40               	moviw [0]fsr1
 11653  1065  0021               	movlb	1	; select bank1
 11654  1066  00E9               	movwf	??_measureVoltages^(0+128)
 11655  1067  3F41               	moviw [1]fsr1
 11656  1068  00EA               	movwf	(??_measureVoltages^(0+128)+1)
 11657  1069  0869               	movf	??_measureVoltages^(0+128),w
 11658  106A  0020               	movlb	0	; select bank0
 11659  106B  00AE               	movwf	___xxtofl@val
 11660  106C  0021               	movlb	1	; select bank1
 11661  106D  086A               	movf	(??_measureVoltages+1)^(0+128),w
 11662  106E  0020               	movlb	0	; select bank0
 11663  106F  00AF               	movwf	___xxtofl@val+1
 11664  1070  0D89               	rlf	9,f
 11665  1071  3B89               	subwfb	9,f
 11666  1072  0989               	comf	9,f
 11667  1073  00B0               	movwf	___xxtofl@val+2
 11668  1074  00B1               	movwf	___xxtofl@val+3
 11669  1075  3001               	movlw	1
 11670  1076  31A6  26D0  3190   	fcall	___xxtofl
 11671  1079  0020               	movlb	0	; select bank0
 11672  107A  0831               	movf	?___xxtofl+3,w
 11673  107B  0021               	movlb	1	; select bank1
 11674  107C  00D6               	movwf	(___fldiv@b+3)^(0+128)
 11675  107D  0020               	movlb	0	; select bank0
 11676  107E  0830               	movf	?___xxtofl+2,w
 11677  107F  0021               	movlb	1	; select bank1
 11678  1080  00D5               	movwf	(___fldiv@b+2)^(0+128)
 11679  1081  0020               	movlb	0	; select bank0
 11680  1082  082F               	movf	?___xxtofl+1,w
 11681  1083  0021               	movlb	1	; select bank1
 11682  1084  00D4               	movwf	(___fldiv@b+1)^(0+128)
 11683  1085  0020               	movlb	0	; select bank0
 11684  1086  082E               	movf	?___xxtofl,w
 11685  1087  0021               	movlb	1	; select bank1
 11686  1088  00D3               	movwf	___fldiv@b^(0+128)
 11687  1089  3192  228C  3190   	fcall	___fldiv
 11688  108C  0021               	movlb	1	; select bank1
 11689  108D  0852               	movf	(?___fldiv+3)^(0+128),w
 11690  108E  0020               	movlb	0	; select bank0
 11691  108F  00BF               	movwf	___flmul@a+3
 11692  1090  0021               	movlb	1	; select bank1
 11693  1091  0851               	movf	(?___fldiv+2)^(0+128),w
 11694  1092  0020               	movlb	0	; select bank0
 11695  1093  00BE               	movwf	___flmul@a+2
 11696  1094  0021               	movlb	1	; select bank1
 11697  1095  0850               	movf	(?___fldiv+1)^(0+128),w
 11698  1096  0020               	movlb	0	; select bank0
 11699  1097  00BD               	movwf	___flmul@a+1
 11700  1098  0021               	movlb	1	; select bank1
 11701  1099  084F               	movf	?___fldiv^(0+128),w
 11702  109A  0020               	movlb	0	; select bank0
 11703  109B  00BC               	movwf	___flmul@a
 11704  109C  3188  20E4  3190   	fcall	___flmul
 11705  109F  0022               	movlb	2	; select bank2
 11706  10A0  083A               	movf	measureVoltages@i^(0+256),w
 11707  10A1  0021               	movlb	1	; select bank1
 11708  10A2  00EB               	movwf	(??_measureVoltages+2)^(0+128)
 11709  10A3  3001               	movlw	1
 11710  10A4                     u9975:	
 11711  10A4  35EB               	lslf	(??_measureVoltages+2)^(0+128),f
 11712  10A5  3EFF               	addlw	-1
 11713  10A6  1D03               	skipz
 11714  10A7  28A4               	goto	u9975
 11715  10A8  356B               	lslf	(??_measureVoltages+2)^(0+128),w
 11716  10A9  0022               	movlb	2	; select bank2
 11717  10AA  0739               	addwf	measureVoltages@measurements^(0+256),w
 11718  10AB  0021               	movlb	1	; select bank1
 11719  10AC  00EC               	movwf	(??_measureVoltages+3)^(0+128)
 11720  10AD  086C               	movf	(??_measureVoltages+3)^(0+128),w
 11721  10AE  0086               	movwf	6
 11722  10AF  3001               	movlw	1	; select bank2/3
 11723  10B0  0087               	movwf	7
 11724  10B1  0020               	movlb	0	; select bank0
 11725  10B2  0838               	movf	?___flmul,w
 11726  10B3  3FC0               	movwi [0]fsr1
 11727  10B4  0839               	movf	?___flmul+1,w
 11728  10B5  3FC1               	movwi [1]fsr1
 11729  10B6  083A               	movf	?___flmul+2,w
 11730  10B7  3FC2               	movwi [2]fsr1
 11731  10B8  083B               	movf	?___flmul+3,w
 11732  10B9  3FC3               	movwi [3]fsr1
 11733                           
 11734                           ;ltc6804.c: 90: if(measurements[i] < 0.1){
 11735  10BA  0022               	movlb	2	; select bank2
 11736  10BB  083A               	movf	measureVoltages@i^(0+256),w
 11737  10BC  0021               	movlb	1	; select bank1
 11738  10BD  00E9               	movwf	??_measureVoltages^(0+128)
 11739  10BE  3001               	movlw	1
 11740  10BF                     u9985:	
 11741  10BF  35E9               	lslf	??_measureVoltages^(0+128),f
 11742  10C0  3EFF               	addlw	-1
 11743  10C1  1D03               	skipz
 11744  10C2  28BF               	goto	u9985
 11745  10C3  3569               	lslf	??_measureVoltages^(0+128),w
 11746  10C4  0022               	movlb	2	; select bank2
 11747  10C5  0739               	addwf	measureVoltages@measurements^(0+256),w
 11748  10C6  0021               	movlb	1	; select bank1
 11749  10C7  00EA               	movwf	(??_measureVoltages+1)^(0+128)
 11750  10C8  086A               	movf	(??_measureVoltages+1)^(0+128),w
 11751  10C9  0086               	movwf	6
 11752  10CA  3001               	movlw	1	; select bank2/3
 11753  10CB  0087               	movwf	7
 11754  10CC  3F40               	moviw [0]fsr1
 11755  10CD  00F2               	movwf	___flge@ff1
 11756  10CE  3F41               	moviw [1]fsr1
 11757  10CF  00F3               	movwf	___flge@ff1+1
 11758  10D0  3F42               	moviw [2]fsr1
 11759  10D1  00F4               	movwf	___flge@ff1+2
 11760  10D2  3F43               	moviw [3]fsr1
 11761  10D3  00F5               	movwf	___flge@ff1+3
 11762  10D4  303D               	movlw	61
 11763  10D5  00F9               	movwf	___flge@ff2+3
 11764  10D6  30CC               	movlw	204
 11765  10D7  00F8               	movwf	___flge@ff2+2
 11766  10D8  30CC               	movlw	204
 11767  10D9  00F7               	movwf	___flge@ff2+1
 11768  10DA  30CD               	movlw	205
 11769  10DB  00F6               	movwf	___flge@ff2
 11770  10DC  31A7  2766  3190   	fcall	___flge
 11771  10DF  1803               	btfsc	3,0
 11772  10E0  28FB               	goto	l7067
 11773                           
 11774                           ;ltc6804.c: 91: measurements[i] = 0.0;
 11775  10E1  0022               	movlb	2	; select bank2
 11776  10E2  083A               	movf	measureVoltages@i^(0+256),w
 11777  10E3  0021               	movlb	1	; select bank1
 11778  10E4  00E9               	movwf	??_measureVoltages^(0+128)
 11779  10E5  3001               	movlw	1
 11780  10E6                     u10005:	
 11781  10E6  35E9               	lslf	??_measureVoltages^(0+128),f
 11782  10E7  3EFF               	addlw	-1
 11783  10E8  1D03               	skipz
 11784  10E9  28E6               	goto	u10005
 11785  10EA  3569               	lslf	??_measureVoltages^(0+128),w
 11786  10EB  0022               	movlb	2	; select bank2
 11787  10EC  0739               	addwf	measureVoltages@measurements^(0+256),w
 11788  10ED  0021               	movlb	1	; select bank1
 11789  10EE  00EA               	movwf	(??_measureVoltages+1)^(0+128)
 11790  10EF  086A               	movf	(??_measureVoltages+1)^(0+128),w
 11791  10F0  0086               	movwf	6
 11792  10F1  3001               	movlw	1	; select bank2/3
 11793  10F2  0087               	movwf	7
 11794  10F3  3000               	movlw	0
 11795  10F4  3FC0               	movwi [0]fsr1
 11796  10F5  3000               	movlw	0
 11797  10F6  3FC1               	movwi [1]fsr1
 11798  10F7  3000               	movlw	0
 11799  10F8  3FC2               	movwi [2]fsr1
 11800  10F9  3000               	movlw	0
 11801  10FA  3FC3               	movwi [3]fsr1
 11802  10FB                     l7067:	
 11803  10FB  3001               	movlw	1
 11804  10FC  0022               	movlb	2	; select bank2
 11805  10FD  07BA               	addwf	measureVoltages@i^(0+256),f
 11806  10FE  3000               	movlw	0
 11807  10FF  3DBB               	addwfc	(measureVoltages@i+1)^(0+256),f
 11808  1100  283F               	goto	L10
 11809  1101                     __end_of_measureVoltages:	
 11810                           
 11811                           	psect	text21
 11812  1101                     __ptext21:	
 11813 ;; *************** function _LTC6804_rdcv *****************
 11814 ;; Defined at:
 11815 ;;		line 286 in file "ltc6804.c"
 11816 ;; Parameters:    Size  Location     Type
 11817 ;;  reg             1    wreg     unsigned char 
 11818 ;;  total_ic        1   27[BANK0 ] unsigned char 
 11819 ;;  cell_codes      1   28[BANK0 ] PTR int [12]
 11820 ;;		 -> measureVoltages@ltcData(24), 
 11821 ;; Auto vars:     Size  Location     Type
 11822 ;;  reg             1   49[BANK0 ] unsigned char 
 11823 ;;  current_cell    1   51[BANK0 ] unsigned char 
 11824 ;;  current_cell    1   53[BANK0 ] unsigned char 
 11825 ;;  current_ic      1   50[BANK0 ] unsigned char 
 11826 ;;  current_ic      1   52[BANK0 ] unsigned char 
 11827 ;;  cell_reg        1   54[BANK0 ] unsigned char 
 11828 ;;  cell_data       8   34[BANK0 ] unsigned char [8]
 11829 ;;  data_pec        2   47[BANK0 ] int 
 11830 ;;  received_pec    2   45[BANK0 ] int 
 11831 ;;  parsed_cell     2   43[BANK0 ] int 
 11832 ;;  data_counter    1   55[BANK0 ] unsigned char 
 11833 ;;  pec_error       1   42[BANK0 ] unsigned char 
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  1    wreg      unsigned char 
 11836 ;; Registers used:
 11837 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11843 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11844 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11845 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11846 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11847 ;;Total ram usage:       29 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; Hardware stack levels required when called:    5
 11850 ;; This function calls:
 11851 ;;		_LTC6804_rdcv_reg
 11852 ;;		___bmul
 11853 ;;		___wmul
 11854 ;;		_pec15_calc
 11855 ;; This function is called by:
 11856 ;;		_measureVoltages
 11857 ;; This function uses a non-reentrant model
 11858 ;;
 11859                           
 11860                           
 11861                           ;psect for function _LTC6804_rdcv
 11862  1101                     _LTC6804_rdcv:	
 11863                           
 11864                           ;incstack = 0
 11865                           ; Regs used in _LTC6804_rdcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11866                           ;LTC6804_rdcv@reg stored from wreg
 11867  1101  0020               	movlb	0	; select bank0
 11868  1102  00D1               	movwf	LTC6804_rdcv@reg
 11869                           
 11870                           ;ltc6804.c: 292: const char NUM_RX_BYT = 8;
 11871                           ;ltc6804.c: 293: const char BYT_IN_REG = 6;
 11872                           ;ltc6804.c: 294: const char CELL_IN_REG = 3;
 11873                           ;ltc6804.c: 296: char cell_data[8];
 11874                           ;ltc6804.c: 297: char pec_error = 0;
 11875  1103  01CA               	clrf	LTC6804_rdcv@pec_error
 11876                           
 11877                           ;ltc6804.c: 298: int parsed_cell;
 11878                           ;ltc6804.c: 299: int received_pec;
 11879                           ;ltc6804.c: 300: int data_pec;
 11880                           ;ltc6804.c: 301: char data_counter=0;
 11881  1104  01D7               	clrf	LTC6804_rdcv@data_counter
 11882                           
 11883                           ;ltc6804.c: 304: if (reg == 0)
 11884  1105  0851               	movf	LTC6804_rdcv@reg,w
 11885  1106  1D03               	btfss	3,2
 11886  1107  29CF               	goto	l6981
 11887                           
 11888                           ;ltc6804.c: 305: {
 11889                           ;ltc6804.c: 307: for(char cell_reg = 1; cell_reg<5; cell_reg++)
 11890  1108  01D6               	clrf	LTC6804_rdcv@cell_reg
 11891  1109  0AD6               	incf	LTC6804_rdcv@cell_reg,f
 11892  110A                     L11:	
 11893  110A  3005               	movlw	5
 11894  110B  0256               	subwf	LTC6804_rdcv@cell_reg,w
 11895  110C  1803               	btfsc	3,0
 11896  110D  2A8A               	goto	l7013
 11897                           
 11898                           ;ltc6804.c: 308: {
 11899                           ;ltc6804.c: 309: data_counter = 0;
 11900  110E  01D7               	clrf	LTC6804_rdcv@data_counter
 11901                           
 11902                           ;ltc6804.c: 310: LTC6804_rdcv_reg(cell_reg, total_ic,cell_data );
 11903  110F  083B               	movf	LTC6804_rdcv@total_ic,w
 11904  1110  00BD               	movwf	??_LTC6804_rdcv
 11905  1111  083D               	movf	??_LTC6804_rdcv,w
 11906  1112  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 11907  1113  3042               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 11908  1114  00BE               	movwf	??_LTC6804_rdcv+1
 11909  1115  083E               	movf	??_LTC6804_rdcv+1,w
 11910  1116  00B0               	movwf	LTC6804_rdcv_reg@data
 11911  1117  0856               	movf	LTC6804_rdcv@cell_reg,w
 11912  1118  31A4  2420  3191   	fcall	_LTC6804_rdcv_reg
 11913                           
 11914                           ;ltc6804.c: 312: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 11915  111B  0020               	movlb	0	; select bank0
 11916  111C  01D2               	clrf	LTC6804_rdcv@current_ic
 11917  111D                     l442:	
 11918  111D  083B               	movf	LTC6804_rdcv@total_ic,w
 11919  111E  0252               	subwf	LTC6804_rdcv@current_ic,w
 11920  111F  1803               	btfsc	3,0
 11921  1120  29CA               	goto	l6977
 11922                           
 11923                           ;ltc6804.c: 313: {
 11924                           ;ltc6804.c: 316: for(char current_cell = 0; current_cell<CELL_IN_REG; current_cell++)
 11925  1121  01D3               	clrf	LTC6804_rdcv@current_cell
 11926  1122  3052               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 11927  1123  0084               	movwf	4
 11928  1124  30B0               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 11929  1125  0085               	movwf	5
 11930  1126  0800               	movf	0,w	;code access
 11931  1127  0253               	subwf	LTC6804_rdcv@current_cell,w
 11932  1128  1803               	btfsc	3,0
 11933  1129  297F               	goto	l6965
 11934  112A                     l6955:	
 11935                           
 11936                           ;ltc6804.c: 317: {
 11937                           ;ltc6804.c: 319: parsed_cell = cell_data[data_counter] + (cell_data[data_counter + 1] <<
      +                           8);
 11938  112A  0857               	movf	LTC6804_rdcv@data_counter,w
 11939  112B  3E01               	addlw	1
 11940  112C  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 11941  112D  0086               	movwf	6
 11942  112E  0187               	clrf	7
 11943  112F  0801               	movf	1,w
 11944  1130  00BD               	movwf	??_LTC6804_rdcv
 11945  1131  01BE               	clrf	??_LTC6804_rdcv+1
 11946  1132  083D               	movf	??_LTC6804_rdcv,w
 11947  1133  00BE               	movwf	??_LTC6804_rdcv+1
 11948  1134  01BD               	clrf	??_LTC6804_rdcv
 11949  1135  0857               	movf	LTC6804_rdcv@data_counter,w
 11950  1136  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 11951  1137  0086               	movwf	6
 11952  1138  0187               	clrf	7
 11953  1139  0801               	movf	1,w
 11954  113A  073D               	addwf	??_LTC6804_rdcv,w
 11955  113B  00CB               	movwf	LTC6804_rdcv@parsed_cell
 11956  113C  083E               	movf	??_LTC6804_rdcv+1,w
 11957  113D  1803               	skipnc
 11958  113E  0A3E               	incf	??_LTC6804_rdcv+1,w
 11959  113F  00CC               	movwf	LTC6804_rdcv@parsed_cell+1
 11960                           
 11961                           ;ltc6804.c: 322: cell_codes[current_ic][current_cell + ((cell_reg - 1) * CELL_IN_REG)] =
      +                           parsed_cell;
 11962  1140  3018               	movlw	24
 11963  1141  00BD               	movwf	??_LTC6804_rdcv
 11964  1142  083D               	movf	??_LTC6804_rdcv,w
 11965  1143  00F2               	movwf	___bmul@multiplicand
 11966  1144  0852               	movf	LTC6804_rdcv@current_ic,w
 11967  1145  31AF  27C1  3191   	fcall	___bmul
 11968  1148  0020               	movlb	0	; select bank0
 11969  1149  073C               	addwf	LTC6804_rdcv@cell_codes,w
 11970  114A  00BE               	movwf	??_LTC6804_rdcv+1
 11971  114B  0856               	movf	LTC6804_rdcv@cell_reg,w
 11972  114C  3EFF               	addlw	255
 11973  114D  00F2               	movwf	___wmul@multiplier
 11974  114E  30FF               	movlw	255
 11975  114F  1803               	skipnc
 11976  1150  3000               	movlw	0
 11977  1151  00F3               	movwf	___wmul@multiplier+1
 11978  1152  3052               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 11979  1153  0084               	movwf	4
 11980  1154  30B0               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 11981  1155  0085               	movwf	5
 11982  1156  0800               	movf	0,w	;code access
 11983  1157  00BF               	movwf	??_LTC6804_rdcv+2
 11984  1158  01C0               	clrf	??_LTC6804_rdcv+3
 11985  1159  083F               	movf	??_LTC6804_rdcv+2,w
 11986  115A  00F4               	movwf	___wmul@multiplicand
 11987  115B  0840               	movf	??_LTC6804_rdcv+3,w
 11988  115C  00F5               	movwf	___wmul@multiplicand+1
 11989  115D  31A0  2075  3191   	fcall	___wmul
 11990  1160  0872               	movf	?___wmul,w
 11991  1161  0020               	movlb	0	; select bank0
 11992  1162  0753               	addwf	LTC6804_rdcv@current_cell,w
 11993  1163  0709               	addwf	9,w
 11994  1164  073E               	addwf	??_LTC6804_rdcv+1,w
 11995  1165  00C1               	movwf	??_LTC6804_rdcv+4
 11996  1166  0841               	movf	??_LTC6804_rdcv+4,w
 11997  1167  0086               	movwf	6
 11998  1168  3001               	movlw	1	; select bank2/3
 11999  1169  0087               	movwf	7
 12000  116A  084B               	movf	LTC6804_rdcv@parsed_cell,w
 12001  116B  3FC0               	movwi [0]fsr1
 12002  116C  084C               	movf	LTC6804_rdcv@parsed_cell+1,w
 12003  116D  3FC1               	movwi [1]fsr1
 12004                           
 12005                           ;ltc6804.c: 323: data_counter = data_counter + 2;
 12006  116E  0857               	movf	LTC6804_rdcv@data_counter,w
 12007  116F  3E02               	addlw	2
 12008  1170  00BD               	movwf	??_LTC6804_rdcv
 12009  1171  083D               	movf	??_LTC6804_rdcv,w
 12010  1172  00D7               	movwf	LTC6804_rdcv@data_counter
 12011  1173  3001               	movlw	1
 12012  1174  00BD               	movwf	??_LTC6804_rdcv
 12013  1175  083D               	movf	??_LTC6804_rdcv,w
 12014  1176  07D3               	addwf	LTC6804_rdcv@current_cell,f
 12015  1177  3052               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12016  1178  0084               	movwf	4
 12017  1179  30B0               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12018  117A  0085               	movwf	5
 12019  117B  0800               	movf	0,w	;code access
 12020  117C  0253               	subwf	LTC6804_rdcv@current_cell,w
 12021  117D  1C03               	skipc
 12022  117E  292A               	goto	l6955
 12023  117F                     l6965:	
 12024                           
 12025                           ;ltc6804.c: 325: }
 12026                           ;ltc6804.c: 327: received_pec = (cell_data[data_counter] << 8) + cell_data[data_counter+
      +                          1];
 12027  117F  0857               	movf	LTC6804_rdcv@data_counter,w
 12028  1180  3E01               	addlw	1
 12029  1181  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12030  1182  0086               	movwf	6
 12031  1183  0187               	clrf	7
 12032  1184  0801               	movf	1,w
 12033  1185  00BD               	movwf	??_LTC6804_rdcv
 12034  1186  01BE               	clrf	??_LTC6804_rdcv+1
 12035  1187  0857               	movf	LTC6804_rdcv@data_counter,w
 12036  1188  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12037  1189  0086               	movwf	6
 12038  118A  0187               	clrf	7
 12039  118B  0801               	movf	1,w
 12040  118C  00BF               	movwf	??_LTC6804_rdcv+2
 12041  118D  01C0               	clrf	??_LTC6804_rdcv+3
 12042  118E  083F               	movf	??_LTC6804_rdcv+2,w
 12043  118F  00C0               	movwf	??_LTC6804_rdcv+3
 12044  1190  01BF               	clrf	??_LTC6804_rdcv+2
 12045  1191  083D               	movf	??_LTC6804_rdcv,w
 12046  1192  073F               	addwf	??_LTC6804_rdcv+2,w
 12047  1193  00CD               	movwf	LTC6804_rdcv@received_pec
 12048  1194  083E               	movf	??_LTC6804_rdcv+1,w
 12049  1195  3D40               	addwfc	??_LTC6804_rdcv+3,w
 12050  1196  00CE               	movwf	LTC6804_rdcv@received_pec+1
 12051                           
 12052                           ;ltc6804.c: 329: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 12053  1197  3054               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 12054  1198  0084               	movwf	4
 12055  1199  30B0               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 12056  119A  0085               	movwf	5
 12057  119B  0800               	movf	0,w	;code access
 12058  119C  00BD               	movwf	??_LTC6804_rdcv
 12059  119D  083D               	movf	??_LTC6804_rdcv,w
 12060  119E  00F2               	movwf	___bmul@multiplicand
 12061  119F  0852               	movf	LTC6804_rdcv@current_ic,w
 12062  11A0  31AF  27C1  3191   	fcall	___bmul
 12063  11A3  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12064  11A4  00F6               	movwf	pec15_calc@data
 12065  11A5  3000               	movlw	0
 12066  11A6  00F7               	movwf	pec15_calc@data+1
 12067  11A7  3053               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 12068  11A8  0084               	movwf	4
 12069  11A9  30B0               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 12070  11AA  0085               	movwf	5
 12071  11AB  0800               	movf	0,w	;code access
 12072  11AC  31A2  22D9  3191   	fcall	_pec15_calc
 12073  11AF  0877               	movf	?_pec15_calc+1,w
 12074  11B0  0020               	movlb	0	; select bank0
 12075  11B1  00D0               	movwf	LTC6804_rdcv@data_pec+1
 12076  11B2  0876               	movf	?_pec15_calc,w
 12077  11B3  00CF               	movwf	LTC6804_rdcv@data_pec
 12078                           
 12079                           ;ltc6804.c: 330: if(received_pec != data_pec)
 12080  11B4  0850               	movf	LTC6804_rdcv@data_pec+1,w
 12081  11B5  064E               	xorwf	LTC6804_rdcv@received_pec+1,w
 12082  11B6  1D03               	skipz
 12083  11B7  29BA               	goto	u9855
 12084  11B8  084F               	movf	LTC6804_rdcv@data_pec,w
 12085  11B9  064D               	xorwf	LTC6804_rdcv@received_pec,w
 12086  11BA                     u9855:	
 12087  11BA  1903               	skipnz
 12088  11BB  29C0               	goto	l6973
 12089                           
 12090                           ;ltc6804.c: 331: {
 12091                           ;ltc6804.c: 332: pec_error = -1;
 12092  11BC  30FF               	movlw	255
 12093  11BD  00BD               	movwf	??_LTC6804_rdcv
 12094  11BE  083D               	movf	??_LTC6804_rdcv,w
 12095  11BF  00CA               	movwf	LTC6804_rdcv@pec_error
 12096  11C0                     l6973:	
 12097                           
 12098                           ;ltc6804.c: 334: }
 12099                           ;ltc6804.c: 335: data_counter=data_counter+2;
 12100  11C0  0857               	movf	LTC6804_rdcv@data_counter,w
 12101  11C1  3E02               	addlw	2
 12102  11C2  00BD               	movwf	??_LTC6804_rdcv
 12103  11C3  083D               	movf	??_LTC6804_rdcv,w
 12104  11C4  00D7               	movwf	LTC6804_rdcv@data_counter
 12105  11C5  3001               	movlw	1
 12106  11C6  00BD               	movwf	??_LTC6804_rdcv
 12107  11C7  083D               	movf	??_LTC6804_rdcv,w
 12108  11C8  07D2               	addwf	LTC6804_rdcv@current_ic,f
 12109  11C9  291D               	goto	l442
 12110  11CA                     l6977:	
 12111  11CA  3001               	movlw	1
 12112  11CB  00BD               	movwf	??_LTC6804_rdcv
 12113  11CC  083D               	movf	??_LTC6804_rdcv,w
 12114  11CD  07D6               	addwf	LTC6804_rdcv@cell_reg,f
 12115  11CE  290A               	goto	L11
 12116  11CF                     l6981:	
 12117                           ;ltc6804.c: 337: }
 12118                           ;ltc6804.c: 338: }
 12119                           ;ltc6804.c: 339: }
 12120                           
 12121                           
 12122                           ;ltc6804.c: 341: else
 12123                           ;ltc6804.c: 342: {
 12124                           ;ltc6804.c: 344: LTC6804_rdcv_reg(reg, total_ic,cell_data);
 12125  11CF  083B               	movf	LTC6804_rdcv@total_ic,w
 12126  11D0  00BD               	movwf	??_LTC6804_rdcv
 12127  11D1  083D               	movf	??_LTC6804_rdcv,w
 12128  11D2  00AF               	movwf	LTC6804_rdcv_reg@total_ic
 12129  11D3  3042               	movlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12130  11D4  00BE               	movwf	??_LTC6804_rdcv+1
 12131  11D5  083E               	movf	??_LTC6804_rdcv+1,w
 12132  11D6  00B0               	movwf	LTC6804_rdcv_reg@data
 12133  11D7  0851               	movf	LTC6804_rdcv@reg,w
 12134  11D8  31A4  2420  3191   	fcall	_LTC6804_rdcv_reg
 12135                           
 12136                           ;ltc6804.c: 345: for (char current_ic = 0 ; current_ic < total_ic; current_ic++)
 12137  11DB  0020               	movlb	0	; select bank0
 12138  11DC  01D4               	clrf	LTC6804_rdcv@current_ic_1169
 12139  11DD                     l449:	
 12140  11DD  083B               	movf	LTC6804_rdcv@total_ic,w
 12141  11DE  0254               	subwf	LTC6804_rdcv@current_ic_1169,w
 12142  11DF  1803               	btfsc	3,0
 12143  11E0  2A8A               	goto	l7013
 12144                           
 12145                           ;ltc6804.c: 346: {
 12146                           ;ltc6804.c: 348: for(char current_cell = 0; current_cell < CELL_IN_REG; current_cell++)
 12147  11E1  01D5               	clrf	LTC6804_rdcv@current_cell_1170
 12148  11E2  3052               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12149  11E3  0084               	movwf	4
 12150  11E4  30B0               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12151  11E5  0085               	movwf	5
 12152  11E6  0800               	movf	0,w	;code access
 12153  11E7  0255               	subwf	LTC6804_rdcv@current_cell_1170,w
 12154  11E8  1803               	btfsc	3,0
 12155  11E9  2A3F               	goto	l7001
 12156  11EA                     l6991:	
 12157                           
 12158                           ;ltc6804.c: 349: {
 12159                           ;ltc6804.c: 351: parsed_cell = cell_data[data_counter] + (cell_data[data_counter+1]<<8);
 12160  11EA  0857               	movf	LTC6804_rdcv@data_counter,w
 12161  11EB  3E01               	addlw	1
 12162  11EC  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12163  11ED  0086               	movwf	6
 12164  11EE  0187               	clrf	7
 12165  11EF  0801               	movf	1,w
 12166  11F0  00BD               	movwf	??_LTC6804_rdcv
 12167  11F1  01BE               	clrf	??_LTC6804_rdcv+1
 12168  11F2  083D               	movf	??_LTC6804_rdcv,w
 12169  11F3  00BE               	movwf	??_LTC6804_rdcv+1
 12170  11F4  01BD               	clrf	??_LTC6804_rdcv
 12171  11F5  0857               	movf	LTC6804_rdcv@data_counter,w
 12172  11F6  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12173  11F7  0086               	movwf	6
 12174  11F8  0187               	clrf	7
 12175  11F9  0801               	movf	1,w
 12176  11FA  073D               	addwf	??_LTC6804_rdcv,w
 12177  11FB  00CB               	movwf	LTC6804_rdcv@parsed_cell
 12178  11FC  083E               	movf	??_LTC6804_rdcv+1,w
 12179  11FD  1803               	skipnc
 12180  11FE  0A3E               	incf	??_LTC6804_rdcv+1,w
 12181  11FF  00CC               	movwf	LTC6804_rdcv@parsed_cell+1
 12182                           
 12183                           ;ltc6804.c: 354: cell_codes[current_ic][current_cell + ((reg - 1) * CELL_IN_REG)] = 0x00
      +                          00FFFF & parsed_cell;
 12184  1200  3018               	movlw	24
 12185  1201  00BD               	movwf	??_LTC6804_rdcv
 12186  1202  083D               	movf	??_LTC6804_rdcv,w
 12187  1203  00F2               	movwf	___bmul@multiplicand
 12188  1204  0854               	movf	LTC6804_rdcv@current_ic_1169,w
 12189  1205  31AF  27C1  3191   	fcall	___bmul
 12190  1208  0020               	movlb	0	; select bank0
 12191  1209  073C               	addwf	LTC6804_rdcv@cell_codes,w
 12192  120A  00BE               	movwf	??_LTC6804_rdcv+1
 12193  120B  0851               	movf	LTC6804_rdcv@reg,w
 12194  120C  3EFF               	addlw	255
 12195  120D  00F2               	movwf	___wmul@multiplier
 12196  120E  30FF               	movlw	255
 12197  120F  1803               	skipnc
 12198  1210  3000               	movlw	0
 12199  1211  00F3               	movwf	___wmul@multiplier+1
 12200  1212  3052               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12201  1213  0084               	movwf	4
 12202  1214  30B0               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12203  1215  0085               	movwf	5
 12204  1216  0800               	movf	0,w	;code access
 12205  1217  00BF               	movwf	??_LTC6804_rdcv+2
 12206  1218  01C0               	clrf	??_LTC6804_rdcv+3
 12207  1219  083F               	movf	??_LTC6804_rdcv+2,w
 12208  121A  00F4               	movwf	___wmul@multiplicand
 12209  121B  0840               	movf	??_LTC6804_rdcv+3,w
 12210  121C  00F5               	movwf	___wmul@multiplicand+1
 12211  121D  31A0  2075  3191   	fcall	___wmul
 12212  1220  0872               	movf	?___wmul,w
 12213  1221  0020               	movlb	0	; select bank0
 12214  1222  0755               	addwf	LTC6804_rdcv@current_cell_1170,w
 12215  1223  0709               	addwf	9,w
 12216  1224  073E               	addwf	??_LTC6804_rdcv+1,w
 12217  1225  00C1               	movwf	??_LTC6804_rdcv+4
 12218  1226  0841               	movf	??_LTC6804_rdcv+4,w
 12219  1227  0086               	movwf	6
 12220  1228  3001               	movlw	1	; select bank2/3
 12221  1229  0087               	movwf	7
 12222  122A  084B               	movf	LTC6804_rdcv@parsed_cell,w
 12223  122B  3FC0               	movwi [0]fsr1
 12224  122C  084C               	movf	LTC6804_rdcv@parsed_cell+1,w
 12225  122D  3FC1               	movwi [1]fsr1
 12226                           
 12227                           ;ltc6804.c: 355: data_counter= data_counter + 2;
 12228  122E  0857               	movf	LTC6804_rdcv@data_counter,w
 12229  122F  3E02               	addlw	2
 12230  1230  00BD               	movwf	??_LTC6804_rdcv
 12231  1231  083D               	movf	??_LTC6804_rdcv,w
 12232  1232  00D7               	movwf	LTC6804_rdcv@data_counter
 12233  1233  3001               	movlw	1
 12234  1234  00BD               	movwf	??_LTC6804_rdcv
 12235  1235  083D               	movf	??_LTC6804_rdcv,w
 12236  1236  07D5               	addwf	LTC6804_rdcv@current_cell_1170,f
 12237  1237  3052               	movlw	low (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12238  1238  0084               	movwf	4
 12239  1239  30B0               	movlw	high (LTC6804_rdcv@CELL_IN_REG| (0+32768))
 12240  123A  0085               	movwf	5
 12241  123B  0800               	movf	0,w	;code access
 12242  123C  0255               	subwf	LTC6804_rdcv@current_cell_1170,w
 12243  123D  1C03               	skipc
 12244  123E  29EA               	goto	l6991
 12245  123F                     l7001:	
 12246                           
 12247                           ;ltc6804.c: 357: }
 12248                           ;ltc6804.c: 359: received_pec = (cell_data[data_counter] << 8 )+ cell_data[data_counter 
      +                          + 1];
 12249  123F  0857               	movf	LTC6804_rdcv@data_counter,w
 12250  1240  3E01               	addlw	1
 12251  1241  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12252  1242  0086               	movwf	6
 12253  1243  0187               	clrf	7
 12254  1244  0801               	movf	1,w
 12255  1245  00BD               	movwf	??_LTC6804_rdcv
 12256  1246  01BE               	clrf	??_LTC6804_rdcv+1
 12257  1247  0857               	movf	LTC6804_rdcv@data_counter,w
 12258  1248  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12259  1249  0086               	movwf	6
 12260  124A  0187               	clrf	7
 12261  124B  0801               	movf	1,w
 12262  124C  00BF               	movwf	??_LTC6804_rdcv+2
 12263  124D  01C0               	clrf	??_LTC6804_rdcv+3
 12264  124E  083F               	movf	??_LTC6804_rdcv+2,w
 12265  124F  00C0               	movwf	??_LTC6804_rdcv+3
 12266  1250  01BF               	clrf	??_LTC6804_rdcv+2
 12267  1251  083D               	movf	??_LTC6804_rdcv,w
 12268  1252  073F               	addwf	??_LTC6804_rdcv+2,w
 12269  1253  00CD               	movwf	LTC6804_rdcv@received_pec
 12270  1254  083E               	movf	??_LTC6804_rdcv+1,w
 12271  1255  3D40               	addwfc	??_LTC6804_rdcv+3,w
 12272  1256  00CE               	movwf	LTC6804_rdcv@received_pec+1
 12273                           
 12274                           ;ltc6804.c: 361: data_pec = pec15_calc(BYT_IN_REG, &cell_data[current_ic * NUM_RX_BYT]);
 12275  1257  3054               	movlw	low (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 12276  1258  0084               	movwf	4
 12277  1259  30B0               	movlw	high (LTC6804_rdcv@NUM_RX_BYT| (0+32768))
 12278  125A  0085               	movwf	5
 12279  125B  0800               	movf	0,w	;code access
 12280  125C  00BD               	movwf	??_LTC6804_rdcv
 12281  125D  083D               	movf	??_LTC6804_rdcv,w
 12282  125E  00F2               	movwf	___bmul@multiplicand
 12283  125F  0854               	movf	LTC6804_rdcv@current_ic_1169,w
 12284  1260  31AF  27C1  3191   	fcall	___bmul
 12285  1263  3E42               	addlw	(low (LTC6804_rdcv@cell_data| 0))& (0+255)
 12286  1264  00F6               	movwf	pec15_calc@data
 12287  1265  3000               	movlw	0
 12288  1266  00F7               	movwf	pec15_calc@data+1
 12289  1267  3053               	movlw	low (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 12290  1268  0084               	movwf	4
 12291  1269  30B0               	movlw	high (LTC6804_rdcv@BYT_IN_REG| (0+32768))
 12292  126A  0085               	movwf	5
 12293  126B  0800               	movf	0,w	;code access
 12294  126C  31A2  22D9  3191   	fcall	_pec15_calc
 12295  126F  0877               	movf	?_pec15_calc+1,w
 12296  1270  0020               	movlb	0	; select bank0
 12297  1271  00D0               	movwf	LTC6804_rdcv@data_pec+1
 12298  1272  0876               	movf	?_pec15_calc,w
 12299  1273  00CF               	movwf	LTC6804_rdcv@data_pec
 12300                           
 12301                           ;ltc6804.c: 362: if(received_pec != data_pec)
 12302  1274  0850               	movf	LTC6804_rdcv@data_pec+1,w
 12303  1275  064E               	xorwf	LTC6804_rdcv@received_pec+1,w
 12304  1276  1D03               	skipz
 12305  1277  2A7A               	goto	u9905
 12306  1278  084F               	movf	LTC6804_rdcv@data_pec,w
 12307  1279  064D               	xorwf	LTC6804_rdcv@received_pec,w
 12308  127A                     u9905:	
 12309  127A  1903               	skipnz
 12310  127B  2A80               	goto	l7009
 12311                           
 12312                           ;ltc6804.c: 363: {
 12313                           ;ltc6804.c: 364: pec_error = -1;
 12314  127C  30FF               	movlw	255
 12315  127D  00BD               	movwf	??_LTC6804_rdcv
 12316  127E  083D               	movf	??_LTC6804_rdcv,w
 12317  127F  00CA               	movwf	LTC6804_rdcv@pec_error
 12318  1280                     l7009:	
 12319                           
 12320                           ;ltc6804.c: 366: }
 12321                           ;ltc6804.c: 367: data_counter= data_counter + 2;
 12322  1280  0857               	movf	LTC6804_rdcv@data_counter,w
 12323  1281  3E02               	addlw	2
 12324  1282  00BD               	movwf	??_LTC6804_rdcv
 12325  1283  083D               	movf	??_LTC6804_rdcv,w
 12326  1284  00D7               	movwf	LTC6804_rdcv@data_counter
 12327  1285  3001               	movlw	1
 12328  1286  00BD               	movwf	??_LTC6804_rdcv
 12329  1287  083D               	movf	??_LTC6804_rdcv,w
 12330  1288  07D4               	addwf	LTC6804_rdcv@current_ic_1169,f
 12331  1289  29DD               	goto	l449
 12332  128A                     l7013:	
 12333                           
 12334                           ;ltc6804.c: 369: }
 12335                           ;ltc6804.c: 370: }
 12336                           ;ltc6804.c: 374: return(pec_error);
 12337  128A  084A               	movf	LTC6804_rdcv@pec_error,w
 12338  128B  0008               	return
 12339  128C                     __end_of_LTC6804_rdcv:	
 12340                           
 12341                           	psect	text22
 12342  2075                     __ptext22:	
 12343 ;; *************** function ___wmul *****************
 12344 ;; Defined at:
 12345 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12346 ;; Parameters:    Size  Location     Type
 12347 ;;  multiplier      2    2[COMMON] unsigned int 
 12348 ;;  multiplicand    2    4[COMMON] unsigned int 
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;  product         2    6[COMMON] unsigned int 
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  2    2[COMMON] unsigned int 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2, status,0
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12360 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12361 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12363 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12364 ;;Total ram usage:        6 bytes
 12365 ;; Hardware stack levels used:    1
 12366 ;; Hardware stack levels required when called:    2
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_LTC6804_rdcv
 12371 ;;		_sprintf
 12372 ;;		_LTC6804_rdaux
 12373 ;;		_LTC6804_rdcfg
 12374 ;; This function uses a non-reentrant model
 12375 ;;
 12376                           
 12377                           
 12378                           ;psect for function ___wmul
 12379  2075                     ___wmul:	
 12380                           
 12381                           ;incstack = 0
 12382                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12383  2075  01F6               	clrf	___wmul@product
 12384  2076  01F7               	clrf	___wmul@product+1
 12385  2077                     l4343:	
 12386  2077  1C72               	btfss	___wmul@multiplier,0
 12387  2078  287D               	goto	l812
 12388  2079  0874               	movf	___wmul@multiplicand,w
 12389  207A  07F6               	addwf	___wmul@product,f
 12390  207B  0875               	movf	___wmul@multiplicand+1,w
 12391  207C  3DF7               	addwfc	___wmul@product+1,f
 12392  207D                     l812:	
 12393  207D  3001               	movlw	1
 12394  207E                     u5345:	
 12395  207E  35F4               	lslf	___wmul@multiplicand,f
 12396  207F  0DF5               	rlf	___wmul@multiplicand+1,f
 12397  2080  0B89               	decfsz	9,f
 12398  2081  287E               	goto	u5345
 12399  2082  3001               	movlw	1
 12400  2083                     u5355:	
 12401  2083  36F3               	lsrf	___wmul@multiplier+1,f
 12402  2084  0CF2               	rrf	___wmul@multiplier,f
 12403  2085  0B89               	decfsz	9,f
 12404  2086  2883               	goto	u5355
 12405  2087  0872               	movf	___wmul@multiplier,w
 12406  2088  0473               	iorwf	___wmul@multiplier+1,w
 12407  2089  1D03               	btfss	3,2
 12408  208A  2877               	goto	l4343
 12409  208B  0877               	movf	___wmul@product+1,w
 12410  208C  00F3               	movwf	?___wmul+1
 12411  208D  0876               	movf	___wmul@product,w
 12412  208E  00F2               	movwf	?___wmul
 12413  208F  0008               	return
 12414  2090                     __end_of___wmul:	
 12415                           
 12416                           	psect	text23
 12417  2420                     __ptext23:	
 12418 ;; *************** function _LTC6804_rdcv_reg *****************
 12419 ;; Defined at:
 12420 ;;		line 424 in file "ltc6804.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;  reg             1    wreg     unsigned char 
 12423 ;;  total_ic        1   15[BANK0 ] unsigned char 
 12424 ;;  data            1   16[BANK0 ] PTR unsigned char 
 12425 ;;		 -> LTC6804_rdcv@cell_data(8), 
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  reg             1   26[BANK0 ] unsigned char 
 12428 ;;  cmd             4   22[BANK0 ] unsigned char [4]
 12429 ;;  cmd_pec         2   20[BANK0 ] int 
 12430 ;; Return value:  Size  Location     Type
 12431 ;;                  1    wreg      void 
 12432 ;; Registers used:
 12433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12434 ;; Tracked objects:
 12435 ;;		On entry : 0/0
 12436 ;;		On exit  : 0/0
 12437 ;;		Unchanged: 0/0
 12438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12439 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12440 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12441 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12443 ;;Total ram usage:       12 bytes
 12444 ;; Hardware stack levels used:    1
 12445 ;; Hardware stack levels required when called:    4
 12446 ;; This function calls:
 12447 ;;		___bmul
 12448 ;;		_pec15_calc
 12449 ;;		_spi_write_read
 12450 ;;		_wakeup_idle
 12451 ;; This function is called by:
 12452 ;;		_LTC6804_rdcv
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           
 12457                           ;psect for function _LTC6804_rdcv_reg
 12458  2420                     _LTC6804_rdcv_reg:	
 12459                           
 12460                           ;incstack = 0
 12461                           ; Regs used in _LTC6804_rdcv_reg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12462                           ;LTC6804_rdcv_reg@reg stored from wreg
 12463  2420  0020               	movlb	0	; select bank0
 12464  2421  00BA               	movwf	LTC6804_rdcv_reg@reg
 12465                           
 12466                           ;ltc6804.c: 429: const char REG_LEN = 8;
 12467                           ;ltc6804.c: 430: char cmd[4];
 12468                           ;ltc6804.c: 431: int cmd_pec;
 12469                           ;ltc6804.c: 434: if (reg == 1)
 12470  2422  033A               	decf	LTC6804_rdcv_reg@reg,w
 12471  2423  1D03               	btfss	3,2
 12472  2424  2C27               	goto	l6233
 12473                           
 12474                           ;ltc6804.c: 435: {
 12475                           ;ltc6804.c: 436: cmd[1] = 0x04;
 12476  2425  3004               	movlw	4
 12477  2426  2C38               	goto	L12
 12478  2427                     l6233:	
 12479                           ;ltc6804.c: 438: }
 12480                           
 12481                           ;ltc6804.c: 437: cmd[0] = 0x00;
 12482                           
 12483                           
 12484                           ;ltc6804.c: 439: else if(reg == 2)
 12485  2427  3002               	movlw	2
 12486  2428  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 12487  2429  1D03               	btfss	3,2
 12488  242A  2C2D               	goto	l6239
 12489                           
 12490                           ;ltc6804.c: 440: {
 12491                           ;ltc6804.c: 441: cmd[1] = 0x06;
 12492  242B  3006               	movlw	6
 12493  242C  2C38               	goto	L12
 12494  242D                     l6239:	
 12495                           ;ltc6804.c: 443: }
 12496                           
 12497                           ;ltc6804.c: 442: cmd[0] = 0x00;
 12498                           
 12499                           
 12500                           ;ltc6804.c: 444: else if(reg == 3)
 12501  242D  3003               	movlw	3
 12502  242E  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 12503  242F  1D03               	btfss	3,2
 12504  2430  2C33               	goto	l6245
 12505                           
 12506                           ;ltc6804.c: 445: {
 12507                           ;ltc6804.c: 446: cmd[1] = 0x08;
 12508  2431  3008               	movlw	8
 12509  2432  2C38               	goto	L12
 12510  2433                     l6245:	
 12511                           ;ltc6804.c: 448: }
 12512                           
 12513                           ;ltc6804.c: 447: cmd[0] = 0x00;
 12514                           
 12515                           
 12516                           ;ltc6804.c: 449: else if(reg == 4)
 12517  2433  3004               	movlw	4
 12518  2434  063A               	xorwf	LTC6804_rdcv_reg@reg,w
 12519  2435  1D03               	btfss	3,2
 12520  2436  2C3C               	goto	l6251
 12521                           
 12522                           ;ltc6804.c: 450: {
 12523                           ;ltc6804.c: 451: cmd[1] = 0x0A;
 12524  2437  300A               	movlw	10
 12525  2438                     L12:	
 12526  2438  00B1               	movwf	??_LTC6804_rdcv_reg
 12527  2439  0831               	movf	??_LTC6804_rdcv_reg,w
 12528  243A  00B7               	movwf	LTC6804_rdcv_reg@cmd+1
 12529                           
 12530                           ;ltc6804.c: 452: cmd[0] = 0x00;
 12531  243B  01B6               	clrf	LTC6804_rdcv_reg@cmd
 12532  243C                     l6251:	
 12533                           
 12534                           ;ltc6804.c: 453: }
 12535                           ;ltc6804.c: 456: cmd_pec = pec15_calc(2, cmd);
 12536  243C  3036               	movlw	low LTC6804_rdcv_reg@cmd
 12537  243D  00F6               	movwf	pec15_calc@data
 12538  243E  3000               	movlw	high LTC6804_rdcv_reg@cmd
 12539  243F  00F7               	movwf	pec15_calc@data+1
 12540  2440  3002               	movlw	2
 12541  2441  31A2  22D9  31A4   	fcall	_pec15_calc
 12542  2444  0877               	movf	?_pec15_calc+1,w
 12543  2445  0020               	movlb	0	; select bank0
 12544  2446  00B5               	movwf	LTC6804_rdcv_reg@cmd_pec+1
 12545  2447  0876               	movf	?_pec15_calc,w
 12546  2448  00B4               	movwf	LTC6804_rdcv_reg@cmd_pec
 12547                           
 12548                           ;ltc6804.c: 457: cmd[2] = (char)(cmd_pec >> 8);
 12549  2449  0835               	movf	LTC6804_rdcv_reg@cmd_pec+1,w
 12550  244A  00B1               	movwf	??_LTC6804_rdcv_reg
 12551  244B  0831               	movf	??_LTC6804_rdcv_reg,w
 12552  244C  00B8               	movwf	LTC6804_rdcv_reg@cmd+2
 12553                           
 12554                           ;ltc6804.c: 458: cmd[3] = (char)(cmd_pec);
 12555  244D  0834               	movf	LTC6804_rdcv_reg@cmd_pec,w
 12556  244E  00B1               	movwf	??_LTC6804_rdcv_reg
 12557  244F  0831               	movf	??_LTC6804_rdcv_reg,w
 12558  2450  00B9               	movwf	LTC6804_rdcv_reg@cmd+3
 12559                           
 12560                           ;ltc6804.c: 461: wakeup_idle ();
 12561  2451  31AF  2780  31A4   	fcall	_wakeup_idle
 12562                           
 12563                           ;ltc6804.c: 464: LATDbits.LATD0 = 0;
 12564  2454  0022               	movlb	2	; select bank2
 12565  2455  100F               	bcf	15,0	;volatile
 12566                           
 12567                           ;ltc6804.c: 465: spi_write_read(cmd,4,data,(REG_LEN*total_ic));
 12568  2456  3004               	movlw	4
 12569  2457  0020               	movlb	0	; select bank0
 12570  2458  00B1               	movwf	??_LTC6804_rdcv_reg
 12571  2459  0831               	movf	??_LTC6804_rdcv_reg,w
 12572  245A  00F6               	movwf	spi_write_read@tx_len
 12573  245B  0830               	movf	LTC6804_rdcv_reg@data,w
 12574  245C  00F7               	movwf	spi_write_read@rx_data
 12575  245D  3000               	movlw	0
 12576  245E  00F8               	movwf	spi_write_read@rx_data+1
 12577  245F  082F               	movf	LTC6804_rdcv_reg@total_ic,w
 12578  2460  00B2               	movwf	??_LTC6804_rdcv_reg+1
 12579  2461  0832               	movf	??_LTC6804_rdcv_reg+1,w
 12580  2462  00F2               	movwf	___bmul@multiplicand
 12581  2463  3051               	movlw	low (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 12582  2464  0084               	movwf	4
 12583  2465  30B0               	movlw	high (LTC6804_rdcv_reg@REG_LEN| (0+32768))
 12584  2466  0085               	movwf	5
 12585  2467  0800               	movf	0,w	;code access
 12586  2468  31AF  27C1  31A4   	fcall	___bmul
 12587  246B  0020               	movlb	0	; select bank0
 12588  246C  00B3               	movwf	??_LTC6804_rdcv_reg+2
 12589  246D  0833               	movf	??_LTC6804_rdcv_reg+2,w
 12590  246E  00F9               	movwf	spi_write_read@rx_len
 12591  246F  3036               	movlw	(low (LTC6804_rdcv_reg@cmd| 0))& (0+255)
 12592  2470  3187  27C9         	fcall	_spi_write_read
 12593                           
 12594                           ;ltc6804.c: 466: LATDbits.LATD0 = 1;
 12595  2472  0022               	movlb	2	; select bank2
 12596  2473  140F               	bsf	15,0	;volatile
 12597  2474  0008               	return
 12598  2475                     __end_of_LTC6804_rdcv_reg:	
 12599                           
 12600                           	psect	text24
 12601  07C9                     __ptext24:	
 12602 ;; *************** function _spi_write_read *****************
 12603 ;; Defined at:
 12604 ;;		line 1037 in file "ltc6804.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;  tx_Data         1    wreg     PTR unsigned char 
 12607 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 12608 ;;		 -> LTC6804_rdcv_reg@cmd(4), 
 12609 ;;  tx_len          1    6[COMMON] unsigned char 
 12610 ;;  rx_data         2    7[COMMON] PTR unsigned char 
 12611 ;;		 -> RAM(4096), LTC6804_rdcv@cell_data(8), NULL(0), 
 12612 ;;  rx_len          1    9[COMMON] unsigned char 
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;  tx_Data         1    5[BANK0 ] PTR unsigned char 
 12615 ;;		 -> LTC6804_rdcfg@cmd(4), LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), 
 12616 ;;		 -> LTC6804_rdcv_reg@cmd(4), 
 12617 ;;  i               1    7[BANK0 ] unsigned char 
 12618 ;;  i               1    6[BANK0 ] unsigned char 
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12628 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12629 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12630 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12631 ;;      Totals:         4       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12632 ;;Total ram usage:       12 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    3
 12635 ;; This function calls:
 12636 ;;		_spi_read
 12637 ;;		_spi_write
 12638 ;; This function is called by:
 12639 ;;		_LTC6804_rdcv_reg
 12640 ;;		_LTC6804_rdaux_reg
 12641 ;;		_LTC6804_clrcell
 12642 ;;		_LTC6804_clraux
 12643 ;;		_LTC6804_rdcfg
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           
 12648                           ;psect for function _spi_write_read
 12649  07C9                     _spi_write_read:	
 12650                           
 12651                           ;incstack = 0
 12652                           ; Regs used in _spi_write_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12653                           ;spi_write_read@tx_Data stored from wreg
 12654  07C9  0020               	movlb	0	; select bank0
 12655  07CA  00A5               	movwf	spi_write_read@tx_Data
 12656                           
 12657                           ;ltc6804.c: 1043: for(char i = 0; i < tx_len; i++)
 12658  07CB  01A6               	clrf	spi_write_read@i
 12659  07CC                     l6025:	
 12660  07CC  0876               	movf	spi_write_read@tx_len,w
 12661  07CD  0226               	subwf	spi_write_read@i,w
 12662  07CE  1803               	btfsc	3,0
 12663  07CF  2FE0               	goto	l6027
 12664                           
 12665                           ;ltc6804.c: 1044: {
 12666                           ;ltc6804.c: 1045: spi_write(tx_Data[i]);
 12667  07D0  0826               	movf	spi_write_read@i,w
 12668  07D1  0725               	addwf	spi_write_read@tx_Data,w
 12669  07D2  00A0               	movwf	??_spi_write_read
 12670  07D3  0820               	movf	??_spi_write_read,w
 12671  07D4  0086               	movwf	6
 12672  07D5  0187               	clrf	7
 12673  07D6  0801               	movf	1,w
 12674  07D7  31AF  279E  3187   	fcall	_spi_write
 12675  07DA  3001               	movlw	1
 12676  07DB  0020               	movlb	0	; select bank0
 12677  07DC  00A0               	movwf	??_spi_write_read
 12678  07DD  0820               	movf	??_spi_write_read,w
 12679  07DE  07A6               	addwf	spi_write_read@i,f
 12680  07DF  2FCC               	goto	l6025
 12681  07E0                     l6027:	
 12682                           
 12683                           ;ltc6804.c: 1047: }
 12684                           ;ltc6804.c: 1049: for(char i = 0; i < rx_len; i++)
 12685  07E0  01A7               	clrf	spi_write_read@i_1252
 12686  07E1                     l6033:	
 12687  07E1  0879               	movf	spi_write_read@rx_len,w
 12688  07E2  0227               	subwf	spi_write_read@i_1252,w
 12689  07E3  1803               	btfsc	3,0
 12690  07E4  0008               	return
 12691                           
 12692                           ;ltc6804.c: 1050: {
 12693                           ;ltc6804.c: 1051: rx_data[i] = (char)spi_read(0xFF);
 12694  07E5  30FF               	movlw	255
 12695  07E6  31AF  27A9  3187   	fcall	_spi_read
 12696  07E9  0020               	movlb	0	; select bank0
 12697  07EA  00A0               	movwf	??_spi_write_read
 12698  07EB  0827               	movf	spi_write_read@i_1252,w
 12699  07EC  00A1               	movwf	??_spi_write_read+1
 12700  07ED  01A2               	clrf	??_spi_write_read+2
 12701  07EE  0821               	movf	??_spi_write_read+1,w
 12702  07EF  0777               	addwf	spi_write_read@rx_data,w
 12703  07F0  00A3               	movwf	??_spi_write_read+3
 12704  07F1  0822               	movf	??_spi_write_read+2,w
 12705  07F2  3D78               	addwfc	spi_write_read@rx_data+1,w
 12706  07F3  00A4               	movwf	??_spi_write_read+4
 12707  07F4  0823               	movf	??_spi_write_read+3,w
 12708  07F5  0086               	movwf	6
 12709  07F6  0824               	movf	??_spi_write_read+4,w
 12710  07F7  0087               	movwf	7
 12711  07F8  0820               	movf	??_spi_write_read,w
 12712  07F9  0081               	movwf	1
 12713  07FA  3001               	movlw	1
 12714  07FB  00A0               	movwf	??_spi_write_read
 12715  07FC  0820               	movf	??_spi_write_read,w
 12716  07FD  07A7               	addwf	spi_write_read@i_1252,f
 12717  07FE  2FE1               	goto	l6033
 12718  07FF                     __end_of_spi_write_read:	
 12719                           
 12720                           	psect	text25
 12721  2FA9                     __ptext25:	
 12722 ;; *************** function _spi_read *****************
 12723 ;; Defined at:
 12724 ;;		line 44 in file "spi.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;  data            1    wreg     unsigned char 
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;  data            1    3[COMMON] unsigned char 
 12729 ;;  readData        1    4[COMMON] unsigned char 
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      unsigned char 
 12732 ;; Registers used:
 12733 ;;		wreg
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12740 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12741 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12742 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12743 ;;Total ram usage:        3 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    2
 12746 ;; This function calls:
 12747 ;;		Nothing
 12748 ;; This function is called by:
 12749 ;;		_spi_write_read
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _spi_read
 12755  2FA9                     _spi_read:	
 12756                           
 12757                           ;incstack = 0
 12758                           ; Regs used in _spi_read: [wreg]
 12759                           ;spi_read@data stored from wreg
 12760  2FA9  00F3               	movwf	spi_read@data
 12761                           
 12762                           ;spi.c: 45: SSP1BUF = data;
 12763  2FAA  0873               	movf	spi_read@data,w
 12764  2FAB  0024               	movlb	4	; select bank4
 12765  2FAC  0091               	movwf	17	;volatile
 12766  2FAD                     l588:	
 12767                           ;spi.c: 46: while(SSP1STATbits.BF == 0);
 12768                           
 12769  2FAD  1C14               	btfss	20,0	;volatile
 12770  2FAE  2FAD               	goto	l588
 12771                           
 12772                           ;spi.c: 47: char readData = SSP1BUF;
 12773  2FAF  0811               	movf	17,w	;volatile
 12774  2FB0  00F2               	movwf	??_spi_read
 12775  2FB1  0872               	movf	??_spi_read,w
 12776  2FB2  00F4               	movwf	spi_read@readData
 12777                           
 12778                           ;spi.c: 48: return readData;
 12779  2FB3  0874               	movf	spi_read@readData,w
 12780  2FB4  0008               	return
 12781  2FB5                     __end_of_spi_read:	
 12782                           
 12783                           	psect	text26
 12784  2FC1                     __ptext26:	
 12785 ;; *************** function ___bmul *****************
 12786 ;; Defined at:
 12787 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8.c"
 12788 ;; Parameters:    Size  Location     Type
 12789 ;;  multiplier      1    wreg     unsigned char 
 12790 ;;  multiplicand    1    2[COMMON] unsigned char 
 12791 ;; Auto vars:     Size  Location     Type
 12792 ;;  multiplier      1    5[COMMON] unsigned char 
 12793 ;;  product         1    4[COMMON] unsigned char 
 12794 ;; Return value:  Size  Location     Type
 12795 ;;                  1    wreg      unsigned char 
 12796 ;; Registers used:
 12797 ;;		wreg, status,2, status,0
 12798 ;; Tracked objects:
 12799 ;;		On entry : 0/0
 12800 ;;		On exit  : 0/0
 12801 ;;		Unchanged: 0/0
 12802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12803 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12806 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12807 ;;Total ram usage:        4 bytes
 12808 ;; Hardware stack levels used:    1
 12809 ;; Hardware stack levels required when called:    2
 12810 ;; This function calls:
 12811 ;;		Nothing
 12812 ;; This function is called by:
 12813 ;;		_LTC6804_rdcv
 12814 ;;		_LTC6804_rdcv_reg
 12815 ;;		_LTC6804_rdaux
 12816 ;;		_LTC6804_rdaux_reg
 12817 ;;		_LTC6804_wrcfg
 12818 ;;		_LTC6804_rdcfg
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           
 12823                           ;psect for function ___bmul
 12824  2FC1                     ___bmul:	
 12825                           
 12826                           ;incstack = 0
 12827                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12828                           ;___bmul@multiplier stored from wreg
 12829  2FC1  00F5               	movwf	___bmul@multiplier
 12830  2FC2  01F4               	clrf	___bmul@product
 12831  2FC3                     l3901:	
 12832  2FC3  1C75               	btfss	___bmul@multiplier,0
 12833  2FC4  2FC9               	goto	l3905
 12834  2FC5  0872               	movf	___bmul@multiplicand,w
 12835  2FC6  00F3               	movwf	??___bmul
 12836  2FC7  0873               	movf	??___bmul,w
 12837  2FC8  07F4               	addwf	___bmul@product,f
 12838  2FC9                     l3905:	
 12839  2FC9  1003               	clrc
 12840  2FCA  0DF2               	rlf	___bmul@multiplicand,f
 12841  2FCB  1003               	clrc
 12842  2FCC  0CF5               	rrf	___bmul@multiplier,f
 12843  2FCD  0875               	movf	___bmul@multiplier,w
 12844  2FCE  1D03               	btfss	3,2
 12845  2FCF  2FC3               	goto	l3901
 12846  2FD0  0874               	movf	___bmul@product,w
 12847  2FD1  0008               	return
 12848  2FD2                     __end_of___bmul:	
 12849                           
 12850                           	psect	text27
 12851  20CF                     __ptext27:	
 12852 ;; *************** function _LTC6804_adcv *****************
 12853 ;; Defined at:
 12854 ;;		line 172 in file "ltc6804.c"
 12855 ;; Parameters:    Size  Location     Type
 12856 ;;		None
 12857 ;; Auto vars:     Size  Location     Type
 12858 ;;  cmd             4   15[BANK0 ] unsigned char [4]
 12859 ;;  cmd_pec         2   19[BANK0 ] int 
 12860 ;; Return value:  Size  Location     Type
 12861 ;;                  1    wreg      void 
 12862 ;; Registers used:
 12863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12864 ;; Tracked objects:
 12865 ;;		On entry : 0/0
 12866 ;;		On exit  : 0/0
 12867 ;;		Unchanged: 0/0
 12868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12870 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12871 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12872 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12873 ;;Total ram usage:        7 bytes
 12874 ;; Hardware stack levels used:    1
 12875 ;; Hardware stack levels required when called:    4
 12876 ;; This function calls:
 12877 ;;		_pec15_calc
 12878 ;;		_spi_write_array
 12879 ;;		_wakeup_idle
 12880 ;; This function is called by:
 12881 ;;		_measureVoltages
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           
 12886                           ;psect for function _LTC6804_adcv
 12887  20CF                     _LTC6804_adcv:	
 12888                           
 12889                           ;ltc6804.c: 175: char cmd[4];
 12890                           ;ltc6804.c: 176: int cmd_pec;
 12891                           ;ltc6804.c: 179: cmd[0] = ADCV[0];
 12892                           
 12893                           ;incstack = 0
 12894                           ; Regs used in _LTC6804_adcv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12895  20CF  0022               	movlb	2	; select bank2
 12896  20D0  0866               	movf	_ADCV^(0+256),w
 12897  20D1  00F9               	movwf	??_LTC6804_adcv
 12898  20D2  0879               	movf	??_LTC6804_adcv,w
 12899  20D3  0020               	movlb	0	; select bank0
 12900  20D4  00AF               	movwf	LTC6804_adcv@cmd
 12901                           
 12902                           ;ltc6804.c: 180: cmd[1] = ADCV[1];
 12903  20D5  0022               	movlb	2	; select bank2
 12904  20D6  0867               	movf	(_ADCV^(0+256)+1),w
 12905  20D7  00F9               	movwf	??_LTC6804_adcv
 12906  20D8  0879               	movf	??_LTC6804_adcv,w
 12907  20D9  0020               	movlb	0	; select bank0
 12908  20DA  00B0               	movwf	LTC6804_adcv@cmd+1
 12909                           
 12910                           ;ltc6804.c: 183: cmd_pec = pec15_calc(2, ADCV);
 12911  20DB  3066               	movlw	low _ADCV
 12912  20DC  00F6               	movwf	pec15_calc@data
 12913  20DD  3001               	movlw	high _ADCV
 12914  20DE  00F7               	movwf	pec15_calc@data+1
 12915  20DF  3002               	movlw	2
 12916  20E0  31A2  22D9  31A0   	fcall	_pec15_calc
 12917  20E3  0877               	movf	?_pec15_calc+1,w
 12918  20E4  0020               	movlb	0	; select bank0
 12919  20E5  00B4               	movwf	LTC6804_adcv@cmd_pec+1
 12920  20E6  0876               	movf	?_pec15_calc,w
 12921  20E7  00B3               	movwf	LTC6804_adcv@cmd_pec
 12922                           
 12923                           ;ltc6804.c: 184: cmd[2] = (char)(cmd_pec >> 8);
 12924  20E8  0834               	movf	LTC6804_adcv@cmd_pec+1,w
 12925  20E9  00F9               	movwf	??_LTC6804_adcv
 12926  20EA  0879               	movf	??_LTC6804_adcv,w
 12927  20EB  00B1               	movwf	LTC6804_adcv@cmd+2
 12928                           
 12929                           ;ltc6804.c: 185: cmd[3] = (char)(cmd_pec);
 12930  20EC  0833               	movf	LTC6804_adcv@cmd_pec,w
 12931  20ED  00F9               	movwf	??_LTC6804_adcv
 12932  20EE  0879               	movf	??_LTC6804_adcv,w
 12933  20EF  00B2               	movwf	LTC6804_adcv@cmd+3
 12934                           
 12935                           ;ltc6804.c: 188: wakeup_idle ();
 12936  20F0  31AF  2780  31A0   	fcall	_wakeup_idle
 12937                           
 12938                           ;ltc6804.c: 191: LATDbits.LATD0 = 0;
 12939  20F3  0022               	movlb	2	; select bank2
 12940  20F4  100F               	bcf	15,0	;volatile
 12941                           
 12942                           ;ltc6804.c: 192: spi_write_array(4,cmd);
 12943  20F5  302F               	movlw	low LTC6804_adcv@cmd
 12944  20F6  00F5               	movwf	spi_write_array@data
 12945  20F7  3000               	movlw	high LTC6804_adcv@cmd
 12946  20F8  00F6               	movwf	spi_write_array@data+1
 12947  20F9  3004               	movlw	4
 12948  20FA  31A0  205B         	fcall	_spi_write_array
 12949                           
 12950                           ;ltc6804.c: 193: LATDbits.LATD0 = 1;
 12951  20FC  0022               	movlb	2	; select bank2
 12952  20FD  140F               	bsf	15,0	;volatile
 12953  20FE  0008               	return
 12954  20FF                     __end_of_LTC6804_adcv:	
 12955                           
 12956                           	psect	text28
 12957  2F80                     __ptext28:	
 12958 ;; *************** function _wakeup_idle *****************
 12959 ;; Defined at:
 12960 ;;		line 966 in file "ltc6804.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;		None
 12963 ;; Auto vars:     Size  Location     Type
 12964 ;;		None
 12965 ;; Return value:  Size  Location     Type
 12966 ;;                  1    wreg      void 
 12967 ;; Registers used:
 12968 ;;		wreg
 12969 ;; Tracked objects:
 12970 ;;		On entry : 0/0
 12971 ;;		On exit  : 0/0
 12972 ;;		Unchanged: 0/0
 12973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12978 ;;Total ram usage:        0 bytes
 12979 ;; Hardware stack levels used:    1
 12980 ;; Hardware stack levels required when called:    2
 12981 ;; This function calls:
 12982 ;;		Nothing
 12983 ;; This function is called by:
 12984 ;;		_LTC6804_adcv
 12985 ;;		_LTC6804_rdcv_reg
 12986 ;;		_LTC6804_adax
 12987 ;;		_LTC6804_rdaux_reg
 12988 ;;		_LTC6804_clrcell
 12989 ;;		_LTC6804_clraux
 12990 ;;		_LTC6804_wrcfg
 12991 ;;		_LTC6804_rdcfg
 12992 ;; This function uses a non-reentrant model
 12993 ;;
 12994                           
 12995                           
 12996                           ;psect for function _wakeup_idle
 12997  2F80                     _wakeup_idle:	
 12998                           
 12999                           ;ltc6804.c: 968: LATDbits.LATD0 = 0;
 13000                           
 13001                           ;incstack = 0
 13002                           ; Regs used in _wakeup_idle: [wreg]
 13003  2F80  0022               	movlb	2	; select bank2
 13004  2F81  100F               	bcf	15,0	;volatile
 13005                           
 13006                           ;ltc6804.c: 969: _delay((unsigned long)((2)*(32000000/4000000.0)));
 13007  2F82  3005               	movlw	5
 13008  2F83                     u10577:	
 13009  2F83  0B89               	decfsz	9,f
 13010  2F84  2F83               	goto	u10577
 13011  2F85  0000               	nop
 13012                           
 13013                           ;ltc6804.c: 970: LATDbits.LATD0 = 1;
 13014  2F86  0022               	movlb	2	; select bank2
 13015  2F87  140F               	bsf	15,0	;volatile
 13016  2F88  0008               	return
 13017  2F89                     __end_of_wakeup_idle:	
 13018                           
 13019                           	psect	text29
 13020  205B                     __ptext29:	
 13021 ;; *************** function _spi_write_array *****************
 13022 ;; Defined at:
 13023 ;;		line 1017 in file "ltc6804.c"
 13024 ;; Parameters:    Size  Location     Type
 13025 ;;  len             1    wreg     unsigned char 
 13026 ;;  data            2    5[COMMON] PTR unsigned char 
 13027 ;;		 -> RAM(4096), LTC6804_adax@cmd(4), LTC6804_adcv@cmd(4), 
 13028 ;; Auto vars:     Size  Location     Type
 13029 ;;  len             1    0[BANK0 ] unsigned char 
 13030 ;;  i               1    1[BANK0 ] unsigned char 
 13031 ;; Return value:  Size  Location     Type
 13032 ;;                  1    wreg      void 
 13033 ;; Registers used:
 13034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13035 ;; Tracked objects:
 13036 ;;		On entry : 0/0
 13037 ;;		On exit  : 0/0
 13038 ;;		Unchanged: 0/0
 13039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13041 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13042 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13043 ;;      Totals:         4       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13044 ;;Total ram usage:        6 bytes
 13045 ;; Hardware stack levels used:    1
 13046 ;; Hardware stack levels required when called:    3
 13047 ;; This function calls:
 13048 ;;		_spi_write
 13049 ;; This function is called by:
 13050 ;;		_LTC6804_adcv
 13051 ;;		_LTC6804_adax
 13052 ;;		_LTC6804_wrcfg
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           
 13057                           ;psect for function _spi_write_array
 13058  205B                     _spi_write_array:	
 13059                           
 13060                           ;incstack = 0
 13061                           ; Regs used in _spi_write_array: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13062                           ;spi_write_array@len stored from wreg
 13063  205B  0020               	movlb	0	; select bank0
 13064  205C  00A0               	movwf	spi_write_array@len
 13065                           
 13066                           ;ltc6804.c: 1021: for(char i = 0; i < len; i++)
 13067  205D  01A1               	clrf	spi_write_array@i
 13068  205E                     l6225:	
 13069  205E  0820               	movf	spi_write_array@len,w
 13070  205F  0221               	subwf	spi_write_array@i,w
 13071  2060  1803               	btfsc	3,0
 13072  2061  0008               	return
 13073                           
 13074                           ;ltc6804.c: 1022: {
 13075                           ;ltc6804.c: 1023: spi_write((char)data[i]);
 13076  2062  0821               	movf	spi_write_array@i,w
 13077  2063  00F7               	movwf	??_spi_write_array
 13078  2064  01F8               	clrf	??_spi_write_array+1
 13079  2065  0877               	movf	??_spi_write_array,w
 13080  2066  0775               	addwf	spi_write_array@data,w
 13081  2067  0086               	movwf	6
 13082  2068  0878               	movf	??_spi_write_array+1,w
 13083  2069  3D76               	addwfc	spi_write_array@data+1,w
 13084  206A  0087               	movwf	7
 13085  206B  0801               	movf	1,w
 13086  206C  31AF  279E  31A0   	fcall	_spi_write
 13087  206F  3001               	movlw	1
 13088  2070  00F7               	movwf	??_spi_write_array
 13089  2071  0877               	movf	??_spi_write_array,w
 13090  2072  0020               	movlb	0	; select bank0
 13091  2073  07A1               	addwf	spi_write_array@i,f
 13092  2074  285E               	goto	l6225
 13093  2075                     __end_of_spi_write_array:	
 13094                           
 13095                           	psect	text30
 13096  2F9E                     __ptext30:	
 13097 ;; *************** function _spi_write *****************
 13098 ;; Defined at:
 13099 ;;		line 38 in file "spi.c"
 13100 ;; Parameters:    Size  Location     Type
 13101 ;;  data            1    wreg     unsigned char 
 13102 ;; Auto vars:     Size  Location     Type
 13103 ;;  data            1    4[COMMON] unsigned char 
 13104 ;;  readData        1    3[COMMON] unsigned char 
 13105 ;; Return value:  Size  Location     Type
 13106 ;;                  1    wreg      void 
 13107 ;; Registers used:
 13108 ;;		wreg
 13109 ;; Tracked objects:
 13110 ;;		On entry : 0/0
 13111 ;;		On exit  : 0/0
 13112 ;;		Unchanged: 0/0
 13113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13116 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13117 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13118 ;;Total ram usage:        3 bytes
 13119 ;; Hardware stack levels used:    1
 13120 ;; Hardware stack levels required when called:    2
 13121 ;; This function calls:
 13122 ;;		Nothing
 13123 ;; This function is called by:
 13124 ;;		_spi_write_array
 13125 ;;		_spi_write_read
 13126 ;; This function uses a non-reentrant model
 13127 ;;
 13128                           
 13129                           
 13130                           ;psect for function _spi_write
 13131  2F9E                     _spi_write:	
 13132                           
 13133                           ;incstack = 0
 13134                           ; Regs used in _spi_write: [wreg]
 13135                           ;spi_write@data stored from wreg
 13136  2F9E  00F4               	movwf	spi_write@data
 13137                           
 13138                           ;spi.c: 39: SSP1BUF = data;
 13139  2F9F  0874               	movf	spi_write@data,w
 13140  2FA0  0024               	movlb	4	; select bank4
 13141  2FA1  0091               	movwf	17	;volatile
 13142  2FA2                     l582:	
 13143                           ;spi.c: 40: while(SSP1STATbits.BF == 0);
 13144                           
 13145  2FA2  1C14               	btfss	20,0	;volatile
 13146  2FA3  2FA2               	goto	l582
 13147                           
 13148                           ;spi.c: 41: char readData = SSP1BUF;
 13149  2FA4  0811               	movf	17,w	;volatile
 13150  2FA5  00F2               	movwf	??_spi_write
 13151  2FA6  0872               	movf	??_spi_write,w
 13152  2FA7  00F3               	movwf	spi_write@readData
 13153  2FA8  0008               	return
 13154  2FA9                     __end_of_spi_write:	
 13155                           
 13156                           	psect	text31
 13157  22D9                     __ptext31:	
 13158 ;; *************** function _pec15_calc *****************
 13159 ;; Defined at:
 13160 ;;		line 994 in file "ltc6804.c"
 13161 ;; Parameters:    Size  Location     Type
 13162 ;;  len             1    wreg     unsigned char 
 13163 ;;  data            2    6[COMMON] PTR unsigned char 
 13164 ;;		 -> LTC6804_clraux@cmd(4), LTC6804_clrcell@cmd(4), LTC6804_rdaux_reg@cmd(4), RAM(4096), 
 13165 ;;		 -> LTC6804_rdcv_reg@cmd(4), LTC6804_rdcv@cell_data(8), ADAX(2), ADCV(2), 
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;  len             1   11[BANK0 ] unsigned char 
 13168 ;;  i               1   12[BANK0 ] unsigned char 
 13169 ;;  remainder       2   13[BANK0 ] int 
 13170 ;;  addr            2    9[BANK0 ] int 
 13171 ;; Return value:  Size  Location     Type
 13172 ;;                  2    6[COMMON] int 
 13173 ;; Registers used:
 13174 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 13175 ;; Tracked objects:
 13176 ;;		On entry : 0/0
 13177 ;;		On exit  : 0/0
 13178 ;;		Unchanged: 0/0
 13179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13181 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13182 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13183 ;;      Totals:         2      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13184 ;;Total ram usage:       17 bytes
 13185 ;; Hardware stack levels used:    1
 13186 ;; Hardware stack levels required when called:    2
 13187 ;; This function calls:
 13188 ;;		Nothing
 13189 ;; This function is called by:
 13190 ;;		_LTC6804_adcv
 13191 ;;		_LTC6804_rdcv
 13192 ;;		_LTC6804_rdcv_reg
 13193 ;;		_LTC6804_adax
 13194 ;;		_LTC6804_rdaux
 13195 ;;		_LTC6804_rdaux_reg
 13196 ;;		_LTC6804_clrcell
 13197 ;;		_LTC6804_clraux
 13198 ;;		_LTC6804_wrcfg
 13199 ;;		_LTC6804_rdcfg
 13200 ;; This function uses a non-reentrant model
 13201 ;;
 13202                           
 13203                           
 13204                           ;psect for function _pec15_calc
 13205  22D9                     _pec15_calc:	
 13206                           
 13207                           ;incstack = 0
 13208                           ; Regs used in _pec15_calc: [wreg-fsr1h+status,2+status,0+pclath]
 13209                           ;pec15_calc@len stored from wreg
 13210  22D9  0020               	movlb	0	; select bank0
 13211  22DA  00AB               	movwf	pec15_calc@len
 13212                           
 13213                           ;ltc6804.c: 998: int remainder,addr;
 13214                           ;ltc6804.c: 1000: remainder = 16;
 13215  22DB  3010               	movlw	16
 13216  22DC  00AD               	movwf	pec15_calc@remainder
 13217  22DD  3000               	movlw	0
 13218  22DE  00AE               	movwf	pec15_calc@remainder+1
 13219                           
 13220                           ;ltc6804.c: 1001: for(char i = 0; i<len;i++)
 13221  22DF  01AC               	clrf	pec15_calc@i
 13222  22E0                     l3871:	
 13223  22E0  082B               	movf	pec15_calc@len,w
 13224  22E1  022C               	subwf	pec15_calc@i,w
 13225  22E2  1803               	btfsc	3,0
 13226  22E3  2B23               	goto	l3873
 13227                           
 13228                           ;ltc6804.c: 1002: {
 13229                           ;ltc6804.c: 1003: addr = ((remainder>>7)^data[i])&0xff;
 13230  22E4  082C               	movf	pec15_calc@i,w
 13231  22E5  00A0               	movwf	??_pec15_calc
 13232  22E6  01A1               	clrf	??_pec15_calc+1
 13233  22E7  0820               	movf	??_pec15_calc,w
 13234  22E8  0776               	addwf	pec15_calc@data,w
 13235  22E9  0086               	movwf	6
 13236  22EA  0821               	movf	??_pec15_calc+1,w
 13237  22EB  3D77               	addwfc	pec15_calc@data+1,w
 13238  22EC  0087               	movwf	7
 13239  22ED  0801               	movf	1,w
 13240  22EE  00A2               	movwf	??_pec15_calc+2
 13241  22EF  01A3               	clrf	??_pec15_calc+3
 13242  22F0  082E               	movf	pec15_calc@remainder+1,w
 13243  22F1  00A5               	movwf	??_pec15_calc+5
 13244  22F2  082D               	movf	pec15_calc@remainder,w
 13245  22F3  00A4               	movwf	??_pec15_calc+4
 13246  22F4  3007               	movlw	7
 13247  22F5  00A6               	movwf	??_pec15_calc+6
 13248  22F6                     u4455:	
 13249  22F6  0D25               	rlf	??_pec15_calc+5,w
 13250  22F7  0CA5               	rrf	??_pec15_calc+5,f
 13251  22F8  0CA4               	rrf	??_pec15_calc+4,f
 13252  22F9  0BA6               	decfsz	??_pec15_calc+6,f
 13253  22FA  2AF6               	goto	u4455
 13254  22FB  0822               	movf	??_pec15_calc+2,w
 13255  22FC  0624               	xorwf	??_pec15_calc+4,w
 13256  22FD  00A7               	movwf	??_pec15_calc+7
 13257  22FE  0823               	movf	??_pec15_calc+3,w
 13258  22FF  0625               	xorwf	??_pec15_calc+5,w
 13259  2300  00A8               	movwf	??_pec15_calc+8
 13260  2301  30FF               	movlw	255
 13261  2302  0527               	andwf	??_pec15_calc+7,w
 13262  2303  00A9               	movwf	pec15_calc@addr
 13263  2304  3000               	movlw	0
 13264  2305  0528               	andwf	??_pec15_calc+8,w
 13265  2306  00AA               	movwf	pec15_calc@addr+1
 13266                           
 13267                           ;ltc6804.c: 1004: remainder = (remainder<<8)^crc15Table[addr];
 13268  2307  082A               	movf	pec15_calc@addr+1,w
 13269  2308  0085               	movwf	5
 13270  2309  0829               	movf	pec15_calc@addr,w
 13271  230A  0084               	movwf	4
 13272  230B  3584               	lslf	4,f
 13273  230C  0D85               	rlf	5,f
 13274  230D  3000               	movlw	low (ltc6804@crc15Table| (0+32768))
 13275  230E  0784               	addwf	4,f
 13276  230F  3098               	movlw	high (ltc6804@crc15Table| (0+32768))
 13277  2310  3D85               	addwfc	5,f
 13278  2311  3F00               	moviw [0]fsr0
 13279  2312  00A0               	movwf	??_pec15_calc
 13280  2313  3F01               	moviw [1]fsr0
 13281  2314  00A1               	movwf	??_pec15_calc+1
 13282  2315  082D               	movf	pec15_calc@remainder,w
 13283  2316  00A3               	movwf	??_pec15_calc+3
 13284  2317  01A2               	clrf	??_pec15_calc+2
 13285  2318  0820               	movf	??_pec15_calc,w
 13286  2319  0622               	xorwf	??_pec15_calc+2,w
 13287  231A  00AD               	movwf	pec15_calc@remainder
 13288  231B  0821               	movf	??_pec15_calc+1,w
 13289  231C  0623               	xorwf	??_pec15_calc+3,w
 13290  231D  00AE               	movwf	pec15_calc@remainder+1
 13291  231E  3001               	movlw	1
 13292  231F  00A0               	movwf	??_pec15_calc
 13293  2320  0820               	movf	??_pec15_calc,w
 13294  2321  07AC               	addwf	pec15_calc@i,f
 13295  2322  2AE0               	goto	l3871
 13296  2323                     l3873:	
 13297                           
 13298                           ;ltc6804.c: 1005: }
 13299                           ;ltc6804.c: 1006: return(remainder*2);
 13300  2323  352D               	lslf	pec15_calc@remainder,w
 13301  2324  00F6               	movwf	?_pec15_calc
 13302  2325  0D2E               	rlf	pec15_calc@remainder+1,w
 13303  2326  00F7               	movwf	?_pec15_calc+1
 13304  2327  0008               	return
 13305  2328                     __end_of_pec15_calc:	
 13306                           
 13307                           	psect	text32
 13308  2548                     __ptext32:	
 13309 ;; *************** function _getTemps *****************
 13310 ;; Defined at:
 13311 ;;		line 34 in file "adc.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;  temperatures    1    wreg     PTR int 
 13314 ;;		 -> temps(6), 
 13315 ;;  numTemps        2   41[BANK2 ] int 
 13316 ;; Auto vars:     Size  Location     Type
 13317 ;;  temperatures    1   49[BANK2 ] PTR int 
 13318 ;;		 -> temps(6), 
 13319 ;;  inc             2   50[BANK2 ] int 
 13320 ;;  highestTemp     2   47[BANK2 ] int 
 13321 ;; Return value:  Size  Location     Type
 13322 ;;                  2   41[BANK2 ] int 
 13323 ;; Registers used:
 13324 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13325 ;; Tracked objects:
 13326 ;;		On entry : 0/0
 13327 ;;		On exit  : 0/0
 13328 ;;		Unchanged: 0/0
 13329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13330 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13331 ;;      Locals:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13332 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13333 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13334 ;;Total ram usage:       11 bytes
 13335 ;; Hardware stack levels used:    1
 13336 ;; Hardware stack levels required when called:    7
 13337 ;; This function calls:
 13338 ;;		_adcRead
 13339 ;;		_calculateTemp
 13340 ;; This function is called by:
 13341 ;;		_main
 13342 ;;		_startUp
 13343 ;; This function uses a non-reentrant model
 13344 ;;
 13345                           
 13346                           
 13347                           ;psect for function _getTemps
 13348  2548                     _getTemps:	
 13349                           
 13350                           ;incstack = 0
 13351                           ; Regs used in _getTemps: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13352                           ;getTemps@temperatures stored from wreg
 13353  2548  0022               	movlb	2	; select bank2
 13354  2549  00D1               	movwf	getTemps@temperatures^(0+256)
 13355                           
 13356                           ;adc.c: 35: int highestTemp = 0;
 13357  254A  01CF               	clrf	getTemps@highestTemp^(0+256)
 13358  254B  01D0               	clrf	(getTemps@highestTemp+1)^(0+256)
 13359                           
 13360                           ;adc.c: 37: LATBbits.LATB5 = 0;
 13361  254C  128D               	bcf	13,5	;volatile
 13362                           
 13363                           ;adc.c: 38: highestTemp = calculateTemp(adcRead(tempChannels[0]));
 13364  254D  0023               	movlb	3	; select bank3
 13365  254E  0866               	movf	_tempChannels^(0+384),w
 13366  254F  31A3  237A  31A5   	fcall	_adcRead
 13367  2552  0873               	movf	?_adcRead+1,w
 13368  2553  0022               	movlb	2	; select bank2
 13369  2554  00AC               	movwf	(calculateTemp@adcValue+1)^(0+256)
 13370  2555  0872               	movf	?_adcRead,w
 13371  2556  00AB               	movwf	calculateTemp@adcValue^(0+256)
 13372  2557  3195  25F1  31A5   	fcall	_calculateTemp
 13373  255A  0022               	movlb	2	; select bank2
 13374  255B  082C               	movf	(?_calculateTemp+1)^(0+256),w
 13375  255C  00D0               	movwf	(getTemps@highestTemp+1)^(0+256)
 13376  255D  082B               	movf	?_calculateTemp^(0+256),w
 13377  255E  00CF               	movwf	getTemps@highestTemp^(0+256)
 13378                           
 13379                           ;adc.c: 39: temperatures[0] = highestTemp;
 13380  255F  0851               	movf	getTemps@temperatures^(0+256),w
 13381  2560  0086               	movwf	6
 13382  2561  3001               	movlw	1	; select bank2/3
 13383  2562  0087               	movwf	7
 13384  2563  084F               	movf	getTemps@highestTemp^(0+256),w
 13385  2564  3FC0               	movwi [0]fsr1
 13386  2565  0850               	movf	(getTemps@highestTemp+1)^(0+256),w
 13387  2566  3FC1               	movwi [1]fsr1
 13388                           
 13389                           ;adc.c: 40: for(int inc = 1; inc < numTemps; inc ++){
 13390  2567  3001               	movlw	1
 13391  2568  00D2               	movwf	getTemps@inc^(0+256)
 13392  2569  3000               	movlw	0
 13393  256A  00D3               	movwf	(getTemps@inc^(0+256)+1)
 13394  256B                     l7035:	
 13395  256B  0853               	movf	(getTemps@inc+1)^(0+256),w
 13396  256C  3A80               	xorlw	128
 13397  256D  00CB               	movwf	??_getTemps^(0+256)
 13398  256E  084A               	movf	(getTemps@numTemps+1)^(0+256),w
 13399  256F  3A80               	xorlw	128
 13400  2570  024B               	subwf	??_getTemps^(0+256),w
 13401  2571  1D03               	skipz
 13402  2572  2D75               	goto	u9935
 13403  2573  0849               	movf	getTemps@numTemps^(0+256),w
 13404  2574  0252               	subwf	getTemps@inc^(0+256),w
 13405  2575                     u9935:	
 13406  2575  1803               	btfsc	3,0
 13407  2576  2DBE               	goto	l173
 13408                           
 13409                           ;adc.c: 41: temperatures[inc] = calculateTemp(adcRead(tempChannels[inc]));
 13410  2577  0022               	movlb	2	; select bank2
 13411  2578  0852               	movf	getTemps@inc^(0+256),w
 13412  2579  3EE6               	addlw	(low (_tempChannels| (0+256)))& (0+255)
 13413  257A  0086               	movwf	6
 13414  257B  3001               	movlw	1	; select bank3/4
 13415  257C  0087               	movwf	7
 13416  257D  0801               	movf	1,w
 13417  257E  31A3  237A  31A5   	fcall	_adcRead
 13418  2581  0873               	movf	?_adcRead+1,w
 13419  2582  0022               	movlb	2	; select bank2
 13420  2583  00AC               	movwf	(calculateTemp@adcValue+1)^(0+256)
 13421  2584  0872               	movf	?_adcRead,w
 13422  2585  00AB               	movwf	calculateTemp@adcValue^(0+256)
 13423  2586  3195  25F1  31A5   	fcall	_calculateTemp
 13424  2589  0022               	movlb	2	; select bank2
 13425  258A  3552               	lslf	getTemps@inc^(0+256),w
 13426  258B  0751               	addwf	getTemps@temperatures^(0+256),w
 13427  258C  00CB               	movwf	??_getTemps^(0+256)
 13428  258D  084B               	movf	??_getTemps^(0+256),w
 13429  258E  0086               	movwf	6
 13430  258F  3001               	movlw	1	; select bank2/3
 13431  2590  0087               	movwf	7
 13432  2591  082B               	movf	?_calculateTemp^(0+256),w
 13433  2592  3FC0               	movwi [0]fsr1
 13434  2593  082C               	movf	(?_calculateTemp+1)^(0+256),w
 13435  2594  3FC1               	movwi [1]fsr1
 13436                           
 13437                           ;adc.c: 42: if(temperatures[inc] > highestTemp){
 13438  2595  3552               	lslf	getTemps@inc^(0+256),w
 13439  2596  0751               	addwf	getTemps@temperatures^(0+256),w
 13440  2597  00CB               	movwf	??_getTemps^(0+256)
 13441  2598  084B               	movf	??_getTemps^(0+256),w
 13442  2599  0086               	movwf	6
 13443  259A  3001               	movlw	1	; select bank2/3
 13444  259B  0087               	movwf	7
 13445  259C  3F40               	moviw [0]fsr1
 13446  259D  00CC               	movwf	(??_getTemps+1)^(0+256)
 13447  259E  3F41               	moviw [1]fsr1
 13448  259F  00CD               	movwf	((??_getTemps+1)^(0+256)+1)
 13449  25A0  0850               	movf	(getTemps@highestTemp+1)^(0+256),w
 13450  25A1  3A80               	xorlw	128
 13451  25A2  00CE               	movwf	(??_getTemps+3)^(0+256)
 13452  25A3  084D               	movf	(??_getTemps+2)^(0+256),w
 13453  25A4  3A80               	xorlw	128
 13454  25A5  024E               	subwf	(??_getTemps+3)^(0+256),w
 13455  25A6  1D03               	skipz
 13456  25A7  2DAA               	goto	u9925
 13457  25A8  084C               	movf	(??_getTemps+1)^(0+256),w
 13458  25A9  024F               	subwf	getTemps@highestTemp^(0+256),w
 13459  25AA                     u9925:	
 13460  25AA  1803               	skipnc
 13461  25AB  2DB8               	goto	l7033
 13462                           
 13463                           ;adc.c: 43: highestTemp = temperatures[inc];
 13464  25AC  0022               	movlb	2	; select bank2
 13465  25AD  3552               	lslf	getTemps@inc^(0+256),w
 13466  25AE  0751               	addwf	getTemps@temperatures^(0+256),w
 13467  25AF  00CB               	movwf	??_getTemps^(0+256)
 13468  25B0  084B               	movf	??_getTemps^(0+256),w
 13469  25B1  0086               	movwf	6
 13470  25B2  3001               	movlw	1	; select bank2/3
 13471  25B3  0087               	movwf	7
 13472  25B4  3F40               	moviw [0]fsr1
 13473  25B5  00CF               	movwf	getTemps@highestTemp^(0+256)
 13474  25B6  3F41               	moviw [1]fsr1
 13475  25B7  00D0               	movwf	(getTemps@highestTemp+1)^(0+256)
 13476  25B8                     l7033:	
 13477  25B8  3001               	movlw	1
 13478  25B9  0022               	movlb	2	; select bank2
 13479  25BA  07D2               	addwf	getTemps@inc^(0+256),f
 13480  25BB  3000               	movlw	0
 13481  25BC  3DD3               	addwfc	(getTemps@inc+1)^(0+256),f
 13482  25BD  2D6B               	goto	l7035
 13483  25BE                     l173:	
 13484                           
 13485                           ;adc.c: 44: }
 13486                           ;adc.c: 45: }
 13487                           ;adc.c: 47: LATBbits.LATB5 = 1;
 13488  25BE  0022               	movlb	2	; select bank2
 13489  25BF  168D               	bsf	13,5	;volatile
 13490                           
 13491                           ;adc.c: 48: return highestTemp;
 13492  25C0  0850               	movf	(getTemps@highestTemp+1)^(0+256),w
 13493  25C1  00CA               	movwf	(?_getTemps+1)^(0+256)
 13494  25C2  084F               	movf	getTemps@highestTemp^(0+256),w
 13495  25C3  00C9               	movwf	?_getTemps^(0+256)
 13496  25C4  0008               	return
 13497  25C5                     __end_of_getTemps:	
 13498                           
 13499                           	psect	text33
 13500  15F1                     __ptext33:	
 13501 ;; *************** function _calculateTemp *****************
 13502 ;; Defined at:
 13503 ;;		line 12 in file "adc.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  adcValue        2   11[BANK2 ] int 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;  voltage         4   37[BANK2 ] float 
 13508 ;;  r               4   25[BANK2 ] float 
 13509 ;; Return value:  Size  Location     Type
 13510 ;;                  2   11[BANK2 ] int 
 13511 ;; Registers used:
 13512 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13513 ;; Tracked objects:
 13514 ;;		On entry : 0/0
 13515 ;;		On exit  : 0/0
 13516 ;;		Unchanged: 0/0
 13517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13518 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13519 ;;      Locals:         0       0       0      16       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13520 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13521 ;;      Totals:         0       0       0      30       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13522 ;;Total ram usage:       30 bytes
 13523 ;; Hardware stack levels used:    1
 13524 ;; Hardware stack levels required when called:    6
 13525 ;; This function calls:
 13526 ;;		___fladd
 13527 ;;		___fldiv
 13528 ;;		___flmul
 13529 ;;		___flneg
 13530 ;;		___fltol
 13531 ;;		___xxtofl
 13532 ;;		_log
 13533 ;; This function is called by:
 13534 ;;		_getTemps
 13535 ;; This function uses a non-reentrant model
 13536 ;;
 13537                           
 13538                           
 13539                           ;psect for function _calculateTemp
 13540  15F1                     _calculateTemp:	
 13541                           
 13542                           ;adc.c: 13: float voltage = (((float)adcValue/4096.0)*5.0);
 13543                           
 13544                           ;incstack = 0
 13545                           ; Regs used in _calculateTemp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13546  15F1  3040               	movlw	64
 13547  15F2  0020               	movlb	0	; select bank0
 13548  15F3  00BB               	movwf	___flmul@b+3
 13549  15F4  30A0               	movlw	160
 13550  15F5  00BA               	movwf	___flmul@b+2
 13551  15F6  3000               	movlw	0
 13552  15F7  00B9               	movwf	___flmul@b+1
 13553  15F8  3000               	movlw	0
 13554  15F9  00B8               	movwf	___flmul@b
 13555  15FA  3045               	movlw	69
 13556  15FB  0021               	movlb	1	; select bank1
 13557  15FC  00D2               	movwf	(___fldiv@a+3)^(0+128)
 13558  15FD  3080               	movlw	128
 13559  15FE  00D1               	movwf	(___fldiv@a+2)^(0+128)
 13560  15FF  3000               	movlw	0
 13561  1600  00D0               	movwf	(___fldiv@a+1)^(0+128)
 13562  1601  3000               	movlw	0
 13563  1602  00CF               	movwf	___fldiv@a^(0+128)
 13564  1603  0022               	movlb	2	; select bank2
 13565  1604  082B               	movf	calculateTemp@adcValue^(0+256),w
 13566  1605  0020               	movlb	0	; select bank0
 13567  1606  00AE               	movwf	___xxtofl@val
 13568  1607  0022               	movlb	2	; select bank2
 13569  1608  082C               	movf	(calculateTemp@adcValue+1)^(0+256),w
 13570  1609  0020               	movlb	0	; select bank0
 13571  160A  00AF               	movwf	___xxtofl@val+1
 13572  160B  0D89               	rlf	9,f
 13573  160C  3B89               	subwfb	9,f
 13574  160D  0989               	comf	9,f
 13575  160E  00B0               	movwf	___xxtofl@val+2
 13576  160F  00B1               	movwf	___xxtofl@val+3
 13577  1610  3001               	movlw	1
 13578  1611  31A6  26D0  3195   	fcall	___xxtofl
 13579  1614  0020               	movlb	0	; select bank0
 13580  1615  0831               	movf	?___xxtofl+3,w
 13581  1616  0021               	movlb	1	; select bank1
 13582  1617  00D6               	movwf	(___fldiv@b+3)^(0+128)
 13583  1618  0020               	movlb	0	; select bank0
 13584  1619  0830               	movf	?___xxtofl+2,w
 13585  161A  0021               	movlb	1	; select bank1
 13586  161B  00D5               	movwf	(___fldiv@b+2)^(0+128)
 13587  161C  0020               	movlb	0	; select bank0
 13588  161D  082F               	movf	?___xxtofl+1,w
 13589  161E  0021               	movlb	1	; select bank1
 13590  161F  00D4               	movwf	(___fldiv@b+1)^(0+128)
 13591  1620  0020               	movlb	0	; select bank0
 13592  1621  082E               	movf	?___xxtofl,w
 13593  1622  0021               	movlb	1	; select bank1
 13594  1623  00D3               	movwf	___fldiv@b^(0+128)
 13595  1624  3192  228C  3195   	fcall	___fldiv
 13596  1627  0021               	movlb	1	; select bank1
 13597  1628  0852               	movf	(?___fldiv+3)^(0+128),w
 13598  1629  0020               	movlb	0	; select bank0
 13599  162A  00BF               	movwf	___flmul@a+3
 13600  162B  0021               	movlb	1	; select bank1
 13601  162C  0851               	movf	(?___fldiv+2)^(0+128),w
 13602  162D  0020               	movlb	0	; select bank0
 13603  162E  00BE               	movwf	___flmul@a+2
 13604  162F  0021               	movlb	1	; select bank1
 13605  1630  0850               	movf	(?___fldiv+1)^(0+128),w
 13606  1631  0020               	movlb	0	; select bank0
 13607  1632  00BD               	movwf	___flmul@a+1
 13608  1633  0021               	movlb	1	; select bank1
 13609  1634  084F               	movf	?___fldiv^(0+128),w
 13610  1635  0020               	movlb	0	; select bank0
 13611  1636  00BC               	movwf	___flmul@a
 13612  1637  3188  20E4  3195   	fcall	___flmul
 13613  163A  0020               	movlb	0	; select bank0
 13614  163B  083B               	movf	?___flmul+3,w
 13615  163C  0022               	movlb	2	; select bank2
 13616  163D  00C8               	movwf	(calculateTemp@voltage+3)^(0+256)
 13617  163E  0020               	movlb	0	; select bank0
 13618  163F  083A               	movf	?___flmul+2,w
 13619  1640  0022               	movlb	2	; select bank2
 13620  1641  00C7               	movwf	(calculateTemp@voltage+2)^(0+256)
 13621  1642  0020               	movlb	0	; select bank0
 13622  1643  0839               	movf	?___flmul+1,w
 13623  1644  0022               	movlb	2	; select bank2
 13624  1645  00C6               	movwf	(calculateTemp@voltage+1)^(0+256)
 13625  1646  0020               	movlb	0	; select bank0
 13626  1647  0838               	movf	?___flmul,w
 13627  1648  0022               	movlb	2	; select bank2
 13628  1649  00C5               	movwf	calculateTemp@voltage^(0+256)
 13629                           
 13630                           ;adc.c: 14: float r = (voltage * 10000.0 / (5.0 - voltage));
 13631  164A  3040               	movlw	64
 13632  164B  0021               	movlb	1	; select bank1
 13633  164C  00AC               	movwf	(___fladd@b+3)^(0+128)
 13634  164D  30A0               	movlw	160
 13635  164E  00AB               	movwf	(___fladd@b+2)^(0+128)
 13636  164F  3000               	movlw	0
 13637  1650  00AA               	movwf	(___fladd@b+1)^(0+128)
 13638  1651  3000               	movlw	0
 13639  1652  00A9               	movwf	___fladd@b^(0+128)
 13640  1653  0022               	movlb	2	; select bank2
 13641  1654  0848               	movf	(calculateTemp@voltage+3)^(0+256),w
 13642  1655  0020               	movlb	0	; select bank0
 13643  1656  00D5               	movwf	___flneg@f1+3
 13644  1657  0022               	movlb	2	; select bank2
 13645  1658  0847               	movf	(calculateTemp@voltage+2)^(0+256),w
 13646  1659  0020               	movlb	0	; select bank0
 13647  165A  00D4               	movwf	___flneg@f1+2
 13648  165B  0022               	movlb	2	; select bank2
 13649  165C  0846               	movf	(calculateTemp@voltage+1)^(0+256),w
 13650  165D  0020               	movlb	0	; select bank0
 13651  165E  00D3               	movwf	___flneg@f1+1
 13652  165F  0022               	movlb	2	; select bank2
 13653  1660  0845               	movf	calculateTemp@voltage^(0+256),w
 13654  1661  0020               	movlb	0	; select bank0
 13655  1662  00D2               	movwf	___flneg@f1
 13656  1663  31AF  2789  3195   	fcall	___flneg
 13657  1666  0020               	movlb	0	; select bank0
 13658  1667  0855               	movf	?___flneg+3,w
 13659  1668  0021               	movlb	1	; select bank1
 13660  1669  00B0               	movwf	(___fladd@a+3)^(0+128)
 13661  166A  0020               	movlb	0	; select bank0
 13662  166B  0854               	movf	?___flneg+2,w
 13663  166C  0021               	movlb	1	; select bank1
 13664  166D  00AF               	movwf	(___fladd@a+2)^(0+128)
 13665  166E  0020               	movlb	0	; select bank0
 13666  166F  0853               	movf	?___flneg+1,w
 13667  1670  0021               	movlb	1	; select bank1
 13668  1671  00AE               	movwf	(___fladd@a+1)^(0+128)
 13669  1672  0020               	movlb	0	; select bank0
 13670  1673  0852               	movf	?___flneg,w
 13671  1674  0021               	movlb	1	; select bank1
 13672  1675  00AD               	movwf	___fladd@a^(0+128)
 13673  1676  318B  2310  3195   	fcall	___fladd
 13674  1679  0021               	movlb	1	; select bank1
 13675  167A  082C               	movf	(?___fladd+3)^(0+128),w
 13676  167B  00D2               	movwf	(___fldiv@a+3)^(0+128)
 13677  167C  082B               	movf	(?___fladd+2)^(0+128),w
 13678  167D  00D1               	movwf	(___fldiv@a+2)^(0+128)
 13679  167E  082A               	movf	(?___fladd+1)^(0+128),w
 13680  167F  00D0               	movwf	(___fldiv@a+1)^(0+128)
 13681  1680  0829               	movf	?___fladd^(0+128),w
 13682  1681  00CF               	movwf	___fldiv@a^(0+128)
 13683  1682  3046               	movlw	70
 13684  1683  0020               	movlb	0	; select bank0
 13685  1684  00BB               	movwf	___flmul@b+3
 13686  1685  301C               	movlw	28
 13687  1686  00BA               	movwf	___flmul@b+2
 13688  1687  3040               	movlw	64
 13689  1688  00B9               	movwf	___flmul@b+1
 13690  1689  3000               	movlw	0
 13691  168A  00B8               	movwf	___flmul@b
 13692  168B  0022               	movlb	2	; select bank2
 13693  168C  0848               	movf	(calculateTemp@voltage+3)^(0+256),w
 13694  168D  0020               	movlb	0	; select bank0
 13695  168E  00BF               	movwf	___flmul@a+3
 13696  168F  0022               	movlb	2	; select bank2
 13697  1690  0847               	movf	(calculateTemp@voltage+2)^(0+256),w
 13698  1691  0020               	movlb	0	; select bank0
 13699  1692  00BE               	movwf	___flmul@a+2
 13700  1693  0022               	movlb	2	; select bank2
 13701  1694  0846               	movf	(calculateTemp@voltage+1)^(0+256),w
 13702  1695  0020               	movlb	0	; select bank0
 13703  1696  00BD               	movwf	___flmul@a+1
 13704  1697  0022               	movlb	2	; select bank2
 13705  1698  0845               	movf	calculateTemp@voltage^(0+256),w
 13706  1699  0020               	movlb	0	; select bank0
 13707  169A  00BC               	movwf	___flmul@a
 13708  169B  3188  20E4  3195   	fcall	___flmul
 13709  169E  0020               	movlb	0	; select bank0
 13710  169F  083B               	movf	?___flmul+3,w
 13711  16A0  0021               	movlb	1	; select bank1
 13712  16A1  00D6               	movwf	(___fldiv@b+3)^(0+128)
 13713  16A2  0020               	movlb	0	; select bank0
 13714  16A3  083A               	movf	?___flmul+2,w
 13715  16A4  0021               	movlb	1	; select bank1
 13716  16A5  00D5               	movwf	(___fldiv@b+2)^(0+128)
 13717  16A6  0020               	movlb	0	; select bank0
 13718  16A7  0839               	movf	?___flmul+1,w
 13719  16A8  0021               	movlb	1	; select bank1
 13720  16A9  00D4               	movwf	(___fldiv@b+1)^(0+128)
 13721  16AA  0020               	movlb	0	; select bank0
 13722  16AB  0838               	movf	?___flmul,w
 13723  16AC  0021               	movlb	1	; select bank1
 13724  16AD  00D3               	movwf	___fldiv@b^(0+128)
 13725  16AE  3192  228C  3195   	fcall	___fldiv
 13726  16B1  0021               	movlb	1	; select bank1
 13727  16B2  0852               	movf	(?___fldiv+3)^(0+128),w
 13728  16B3  0022               	movlb	2	; select bank2
 13729  16B4  00BC               	movwf	(calculateTemp@r+3)^(0+256)
 13730  16B5  0021               	movlb	1	; select bank1
 13731  16B6  0851               	movf	(?___fldiv+2)^(0+128),w
 13732  16B7  0022               	movlb	2	; select bank2
 13733  16B8  00BB               	movwf	(calculateTemp@r+2)^(0+256)
 13734  16B9  0021               	movlb	1	; select bank1
 13735  16BA  0850               	movf	(?___fldiv+1)^(0+128),w
 13736  16BB  0022               	movlb	2	; select bank2
 13737  16BC  00BA               	movwf	(calculateTemp@r+1)^(0+256)
 13738  16BD  0021               	movlb	1	; select bank1
 13739  16BE  084F               	movf	?___fldiv^(0+128),w
 13740  16BF  0022               	movlb	2	; select bank2
 13741  16C0  00B9               	movwf	calculateTemp@r^(0+256)
 13742                           
 13743                           ;adc.c: 15: return (int)(((t0 * Beta)/(t0*log(r / 10000.0) + Beta))-273);
 13744  16C1  083C               	movf	(calculateTemp@r+3)^(0+256),w
 13745  16C2  0021               	movlb	1	; select bank1
 13746  16C3  00D6               	movwf	(___fldiv@b+3)^(0+128)
 13747  16C4  0022               	movlb	2	; select bank2
 13748  16C5  083B               	movf	(calculateTemp@r+2)^(0+256),w
 13749  16C6  0021               	movlb	1	; select bank1
 13750  16C7  00D5               	movwf	(___fldiv@b+2)^(0+128)
 13751  16C8  0022               	movlb	2	; select bank2
 13752  16C9  083A               	movf	(calculateTemp@r+1)^(0+256),w
 13753  16CA  0021               	movlb	1	; select bank1
 13754  16CB  00D4               	movwf	(___fldiv@b+1)^(0+128)
 13755  16CC  0022               	movlb	2	; select bank2
 13756  16CD  0839               	movf	calculateTemp@r^(0+256),w
 13757  16CE  0021               	movlb	1	; select bank1
 13758  16CF  00D3               	movwf	___fldiv@b^(0+128)
 13759  16D0  3046               	movlw	70
 13760  16D1  00D2               	movwf	(___fldiv@a+3)^(0+128)
 13761  16D2  301C               	movlw	28
 13762  16D3  00D1               	movwf	(___fldiv@a+2)^(0+128)
 13763  16D4  3040               	movlw	64
 13764  16D5  00D0               	movwf	(___fldiv@a+1)^(0+128)
 13765  16D6  3000               	movlw	0
 13766  16D7  00CF               	movwf	___fldiv@a^(0+128)
 13767  16D8  3192  228C  3195   	fcall	___fldiv
 13768  16DB  0021               	movlb	1	; select bank1
 13769  16DC  0852               	movf	(?___fldiv+3)^(0+128),w
 13770  16DD  00EC               	movwf	(log@x+3)^(0+128)
 13771  16DE  0851               	movf	(?___fldiv+2)^(0+128),w
 13772  16DF  00EB               	movwf	(log@x+2)^(0+128)
 13773  16E0  0850               	movf	(?___fldiv+1)^(0+128),w
 13774  16E1  00EA               	movwf	(log@x+1)^(0+128)
 13775  16E2  084F               	movf	?___fldiv^(0+128),w
 13776  16E3  00E9               	movwf	log@x^(0+128)
 13777  16E4  319D  25B8  3195   	fcall	_log
 13778  16E7  0021               	movlb	1	; select bank1
 13779  16E8  086C               	movf	(?_log+3)^(0+128),w
 13780  16E9  0022               	movlb	2	; select bank2
 13781  16EA  00C0               	movwf	(_calculateTemp$2060+3)^(0+256)
 13782  16EB  0021               	movlb	1	; select bank1
 13783  16EC  086B               	movf	(?_log+2)^(0+128),w
 13784  16ED  0022               	movlb	2	; select bank2
 13785  16EE  00BF               	movwf	(_calculateTemp$2060+2)^(0+256)
 13786  16EF  0021               	movlb	1	; select bank1
 13787  16F0  086A               	movf	(?_log+1)^(0+128),w
 13788  16F1  0022               	movlb	2	; select bank2
 13789  16F2  00BE               	movwf	(_calculateTemp$2060+1)^(0+256)
 13790  16F3  0021               	movlb	1	; select bank1
 13791  16F4  0869               	movf	?_log^(0+128),w
 13792  16F5  0022               	movlb	2	; select bank2
 13793  16F6  00BD               	movwf	_calculateTemp$2060^(0+256)
 13794                           
 13795                           ;adc.c: 15: return (int)(((t0 * Beta)/(t0*log(r / 10000.0) + Beta))-273);
 13796  16F7  3049               	movlw	low (_Beta| (0+32768))
 13797  16F8  0084               	movwf	4
 13798  16F9  30B0               	movlw	high (_Beta| (0+32768))
 13799  16FA  0085               	movwf	5
 13800  16FB  3F00               	moviw [0]fsr0
 13801  16FC  00AD               	movwf	??_calculateTemp^(0+256)
 13802  16FD  3F01               	moviw [1]fsr0
 13803  16FE  00AE               	movwf	(??_calculateTemp^(0+256)+1)
 13804  16FF  082D               	movf	??_calculateTemp^(0+256),w
 13805  1700  0020               	movlb	0	; select bank0
 13806  1701  00AE               	movwf	___xxtofl@val
 13807  1702  0022               	movlb	2	; select bank2
 13808  1703  082E               	movf	(??_calculateTemp+1)^(0+256),w
 13809  1704  0020               	movlb	0	; select bank0
 13810  1705  00AF               	movwf	___xxtofl@val+1
 13811  1706  0D89               	rlf	9,f
 13812  1707  3B89               	subwfb	9,f
 13813  1708  0989               	comf	9,f
 13814  1709  00B0               	movwf	___xxtofl@val+2
 13815  170A  00B1               	movwf	___xxtofl@val+3
 13816  170B  3001               	movlw	1
 13817  170C  31A6  26D0  3195   	fcall	___xxtofl
 13818  170F  0020               	movlb	0	; select bank0
 13819  1710  0831               	movf	?___xxtofl+3,w
 13820  1711  00BF               	movwf	___flmul@a+3
 13821  1712  0830               	movf	?___xxtofl+2,w
 13822  1713  00BE               	movwf	___flmul@a+2
 13823  1714  082F               	movf	?___xxtofl+1,w
 13824  1715  00BD               	movwf	___flmul@a+1
 13825  1716  082E               	movf	?___xxtofl,w
 13826  1717  00BC               	movwf	___flmul@a
 13827  1718  3045               	movlw	low (_t0| (0+32768))
 13828  1719  0084               	movwf	4
 13829  171A  30B0               	movlw	high (_t0| (0+32768))
 13830  171B  0085               	movwf	5
 13831  171C  3F00               	moviw [0]fsr0
 13832  171D  0022               	movlb	2	; select bank2
 13833  171E  00AF               	movwf	(??_calculateTemp+2)^(0+256)
 13834  171F  3F01               	moviw [1]fsr0
 13835  1720  00B0               	movwf	((??_calculateTemp+2)^(0+256)+1)
 13836  1721  3F02               	moviw [2]fsr0
 13837  1722  00B1               	movwf	((??_calculateTemp+2)^(0+256)+2)
 13838  1723  3F03               	moviw [3]fsr0
 13839  1724  00B2               	movwf	((??_calculateTemp+2)^(0+256)+3)
 13840  1725  0832               	movf	(??_calculateTemp+5)^(0+256),w
 13841  1726  0020               	movlb	0	; select bank0
 13842  1727  00BB               	movwf	___flmul@b+3
 13843  1728  0022               	movlb	2	; select bank2
 13844  1729  0831               	movf	(??_calculateTemp+4)^(0+256),w
 13845  172A  0020               	movlb	0	; select bank0
 13846  172B  00BA               	movwf	___flmul@b+2
 13847  172C  0022               	movlb	2	; select bank2
 13848  172D  0830               	movf	(??_calculateTemp+3)^(0+256),w
 13849  172E  0020               	movlb	0	; select bank0
 13850  172F  00B9               	movwf	___flmul@b+1
 13851  1730  0022               	movlb	2	; select bank2
 13852  1731  082F               	movf	(??_calculateTemp+2)^(0+256),w
 13853  1732  0020               	movlb	0	; select bank0
 13854  1733  00B8               	movwf	___flmul@b
 13855  1734  3188  20E4  3195   	fcall	___flmul
 13856  1737  0020               	movlb	0	; select bank0
 13857  1738  083B               	movf	?___flmul+3,w
 13858  1739  0021               	movlb	1	; select bank1
 13859  173A  00D6               	movwf	(___fldiv@b+3)^(0+128)
 13860  173B  0020               	movlb	0	; select bank0
 13861  173C  083A               	movf	?___flmul+2,w
 13862  173D  0021               	movlb	1	; select bank1
 13863  173E  00D5               	movwf	(___fldiv@b+2)^(0+128)
 13864  173F  0020               	movlb	0	; select bank0
 13865  1740  0839               	movf	?___flmul+1,w
 13866  1741  0021               	movlb	1	; select bank1
 13867  1742  00D4               	movwf	(___fldiv@b+1)^(0+128)
 13868  1743  0020               	movlb	0	; select bank0
 13869  1744  0838               	movf	?___flmul,w
 13870  1745  0021               	movlb	1	; select bank1
 13871  1746  00D3               	movwf	___fldiv@b^(0+128)
 13872  1747  0022               	movlb	2	; select bank2
 13873  1748  0840               	movf	(_calculateTemp$2060+3)^(0+256),w
 13874  1749  0020               	movlb	0	; select bank0
 13875  174A  00BF               	movwf	___flmul@a+3
 13876  174B  0022               	movlb	2	; select bank2
 13877  174C  083F               	movf	(_calculateTemp$2060+2)^(0+256),w
 13878  174D  0020               	movlb	0	; select bank0
 13879  174E  00BE               	movwf	___flmul@a+2
 13880  174F  0022               	movlb	2	; select bank2
 13881  1750  083E               	movf	(_calculateTemp$2060+1)^(0+256),w
 13882  1751  0020               	movlb	0	; select bank0
 13883  1752  00BD               	movwf	___flmul@a+1
 13884  1753  0022               	movlb	2	; select bank2
 13885  1754  083D               	movf	_calculateTemp$2060^(0+256),w
 13886  1755  0020               	movlb	0	; select bank0
 13887  1756  00BC               	movwf	___flmul@a
 13888  1757  3045               	movlw	low (_t0| (0+32768))
 13889  1758  0084               	movwf	4
 13890  1759  30B0               	movlw	high (_t0| (0+32768))
 13891  175A  0085               	movwf	5
 13892  175B  3F00               	moviw [0]fsr0
 13893  175C  0022               	movlb	2	; select bank2
 13894  175D  00B3               	movwf	(??_calculateTemp+6)^(0+256)
 13895  175E  3F01               	moviw [1]fsr0
 13896  175F  00B4               	movwf	((??_calculateTemp+6)^(0+256)+1)
 13897  1760  3F02               	moviw [2]fsr0
 13898  1761  00B5               	movwf	((??_calculateTemp+6)^(0+256)+2)
 13899  1762  3F03               	moviw [3]fsr0
 13900  1763  00B6               	movwf	((??_calculateTemp+6)^(0+256)+3)
 13901  1764  0836               	movf	(??_calculateTemp+9)^(0+256),w
 13902  1765  0020               	movlb	0	; select bank0
 13903  1766  00BB               	movwf	___flmul@b+3
 13904  1767  0022               	movlb	2	; select bank2
 13905  1768  0835               	movf	(??_calculateTemp+8)^(0+256),w
 13906  1769  0020               	movlb	0	; select bank0
 13907  176A  00BA               	movwf	___flmul@b+2
 13908  176B  0022               	movlb	2	; select bank2
 13909  176C  0834               	movf	(??_calculateTemp+7)^(0+256),w
 13910  176D  0020               	movlb	0	; select bank0
 13911  176E  00B9               	movwf	___flmul@b+1
 13912  176F  0022               	movlb	2	; select bank2
 13913  1770  0833               	movf	(??_calculateTemp+6)^(0+256),w
 13914  1771  0020               	movlb	0	; select bank0
 13915  1772  00B8               	movwf	___flmul@b
 13916  1773  3188  20E4  3195   	fcall	___flmul
 13917  1776  0020               	movlb	0	; select bank0
 13918  1777  083B               	movf	?___flmul+3,w
 13919  1778  0021               	movlb	1	; select bank1
 13920  1779  00B0               	movwf	(___fladd@a+3)^(0+128)
 13921  177A  0020               	movlb	0	; select bank0
 13922  177B  083A               	movf	?___flmul+2,w
 13923  177C  0021               	movlb	1	; select bank1
 13924  177D  00AF               	movwf	(___fladd@a+2)^(0+128)
 13925  177E  0020               	movlb	0	; select bank0
 13926  177F  0839               	movf	?___flmul+1,w
 13927  1780  0021               	movlb	1	; select bank1
 13928  1781  00AE               	movwf	(___fladd@a+1)^(0+128)
 13929  1782  0020               	movlb	0	; select bank0
 13930  1783  0838               	movf	?___flmul,w
 13931  1784  0021               	movlb	1	; select bank1
 13932  1785  00AD               	movwf	___fladd@a^(0+128)
 13933  1786  3049               	movlw	low (_Beta| (0+32768))
 13934  1787  0084               	movwf	4
 13935  1788  30B0               	movlw	high (_Beta| (0+32768))
 13936  1789  0085               	movwf	5
 13937  178A  3F00               	moviw [0]fsr0
 13938  178B  0022               	movlb	2	; select bank2
 13939  178C  00B7               	movwf	(??_calculateTemp+10)^(0+256)
 13940  178D  3F01               	moviw [1]fsr0
 13941  178E  00B8               	movwf	((??_calculateTemp+10)^(0+256)+1)
 13942  178F  0837               	movf	(??_calculateTemp+10)^(0+256),w
 13943  1790  0020               	movlb	0	; select bank0
 13944  1791  00AE               	movwf	___xxtofl@val
 13945  1792  0022               	movlb	2	; select bank2
 13946  1793  0838               	movf	(??_calculateTemp+11)^(0+256),w
 13947  1794  0020               	movlb	0	; select bank0
 13948  1795  00AF               	movwf	___xxtofl@val+1
 13949  1796  0D89               	rlf	9,f
 13950  1797  3B89               	subwfb	9,f
 13951  1798  0989               	comf	9,f
 13952  1799  00B0               	movwf	___xxtofl@val+2
 13953  179A  00B1               	movwf	___xxtofl@val+3
 13954  179B  3001               	movlw	1
 13955  179C  31A6  26D0  3195   	fcall	___xxtofl
 13956  179F  0020               	movlb	0	; select bank0
 13957  17A0  0831               	movf	?___xxtofl+3,w
 13958  17A1  0021               	movlb	1	; select bank1
 13959  17A2  00AC               	movwf	(___fladd@b+3)^(0+128)
 13960  17A3  0020               	movlb	0	; select bank0
 13961  17A4  0830               	movf	?___xxtofl+2,w
 13962  17A5  0021               	movlb	1	; select bank1
 13963  17A6  00AB               	movwf	(___fladd@b+2)^(0+128)
 13964  17A7  0020               	movlb	0	; select bank0
 13965  17A8  082F               	movf	?___xxtofl+1,w
 13966  17A9  0021               	movlb	1	; select bank1
 13967  17AA  00AA               	movwf	(___fladd@b+1)^(0+128)
 13968  17AB  0020               	movlb	0	; select bank0
 13969  17AC  082E               	movf	?___xxtofl,w
 13970  17AD  0021               	movlb	1	; select bank1
 13971  17AE  00A9               	movwf	___fladd@b^(0+128)
 13972  17AF  318B  2310  3195   	fcall	___fladd
 13973  17B2  0021               	movlb	1	; select bank1
 13974  17B3  082C               	movf	(?___fladd+3)^(0+128),w
 13975  17B4  00D2               	movwf	(___fldiv@a+3)^(0+128)
 13976  17B5  082B               	movf	(?___fladd+2)^(0+128),w
 13977  17B6  00D1               	movwf	(___fldiv@a+2)^(0+128)
 13978  17B7  082A               	movf	(?___fladd+1)^(0+128),w
 13979  17B8  00D0               	movwf	(___fldiv@a+1)^(0+128)
 13980  17B9  0829               	movf	?___fladd^(0+128),w
 13981  17BA  00CF               	movwf	___fldiv@a^(0+128)
 13982  17BB  3192  228C  3195   	fcall	___fldiv
 13983  17BE  0021               	movlb	1	; select bank1
 13984  17BF  0852               	movf	(?___fldiv+3)^(0+128),w
 13985  17C0  0022               	movlb	2	; select bank2
 13986  17C1  00C4               	movwf	(_calculateTemp$2061+3)^(0+256)
 13987  17C2  0021               	movlb	1	; select bank1
 13988  17C3  0851               	movf	(?___fldiv+2)^(0+128),w
 13989  17C4  0022               	movlb	2	; select bank2
 13990  17C5  00C3               	movwf	(_calculateTemp$2061+2)^(0+256)
 13991  17C6  0021               	movlb	1	; select bank1
 13992  17C7  0850               	movf	(?___fldiv+1)^(0+128),w
 13993  17C8  0022               	movlb	2	; select bank2
 13994  17C9  00C2               	movwf	(_calculateTemp$2061+1)^(0+256)
 13995  17CA  0021               	movlb	1	; select bank1
 13996  17CB  084F               	movf	?___fldiv^(0+128),w
 13997  17CC  0022               	movlb	2	; select bank2
 13998  17CD  00C1               	movwf	_calculateTemp$2061^(0+256)
 13999                           
 14000                           ;adc.c: 15: return (int)(((t0 * Beta)/(t0*log(r / 10000.0) + Beta))-273);
 14001  17CE  0844               	movf	(_calculateTemp$2061+3)^(0+256),w
 14002  17CF  0021               	movlb	1	; select bank1
 14003  17D0  00B0               	movwf	(___fladd@a+3)^(0+128)
 14004  17D1  0022               	movlb	2	; select bank2
 14005  17D2  0843               	movf	(_calculateTemp$2061+2)^(0+256),w
 14006  17D3  0021               	movlb	1	; select bank1
 14007  17D4  00AF               	movwf	(___fladd@a+2)^(0+128)
 14008  17D5  0022               	movlb	2	; select bank2
 14009  17D6  0842               	movf	(_calculateTemp$2061+1)^(0+256),w
 14010  17D7  0021               	movlb	1	; select bank1
 14011  17D8  00AE               	movwf	(___fladd@a+1)^(0+128)
 14012  17D9  0022               	movlb	2	; select bank2
 14013  17DA  0841               	movf	_calculateTemp$2061^(0+256),w
 14014  17DB  0021               	movlb	1	; select bank1
 14015  17DC  00AD               	movwf	___fladd@a^(0+128)
 14016  17DD  30C3               	movlw	195
 14017  17DE  00AC               	movwf	(___fladd@b+3)^(0+128)
 14018  17DF  3088               	movlw	136
 14019  17E0  00AB               	movwf	(___fladd@b+2)^(0+128)
 14020  17E1  3080               	movlw	128
 14021  17E2  00AA               	movwf	(___fladd@b+1)^(0+128)
 14022  17E3  3000               	movlw	0
 14023  17E4  00A9               	movwf	___fladd@b^(0+128)
 14024  17E5  318B  2310  3195   	fcall	___fladd
 14025  17E8  0021               	movlb	1	; select bank1
 14026  17E9  082C               	movf	(?___fladd+3)^(0+128),w
 14027  17EA  0022               	movlb	2	; select bank2
 14028  17EB  00A3               	movwf	(___fltol@f1+3)^(0+256)
 14029  17EC  0021               	movlb	1	; select bank1
 14030  17ED  082B               	movf	(?___fladd+2)^(0+128),w
 14031  17EE  0022               	movlb	2	; select bank2
 14032  17EF  00A2               	movwf	(___fltol@f1+2)^(0+256)
 14033  17F0  0021               	movlb	1	; select bank1
 14034  17F1  082A               	movf	(?___fladd+1)^(0+128),w
 14035  17F2  0022               	movlb	2	; select bank2
 14036  17F3  00A1               	movwf	(___fltol@f1+1)^(0+256)
 14037  17F4  0021               	movlb	1	; select bank1
 14038  17F5  0829               	movf	?___fladd^(0+128),w
 14039  17F6  0022               	movlb	2	; select bank2
 14040  17F7  00A0               	movwf	___fltol@f1^(0+256)
 14041  17F8  31A5  25C5         	fcall	___fltol
 14042  17FA  0022               	movlb	2	; select bank2
 14043  17FB  0821               	movf	(?___fltol+1)^(0+256),w
 14044  17FC  00AC               	movwf	(?_calculateTemp+1)^(0+256)
 14045  17FD  0820               	movf	?___fltol^(0+256),w
 14046  17FE  00AB               	movwf	?_calculateTemp^(0+256)
 14047  17FF  0008               	return
 14048  1800                     __end_of_calculateTemp:	
 14049                           
 14050                           	psect	text34
 14051  1DB8                     __ptext34:	
 14052 ;; *************** function _log *****************
 14053 ;; Defined at:
 14054 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
 14055 ;; Parameters:    Size  Location     Type
 14056 ;;  x               4   73[BANK1 ] int 
 14057 ;; Auto vars:     Size  Location     Type
 14058 ;;  exponent        2   78[BANK1 ] int 
 14059 ;; Return value:  Size  Location     Type
 14060 ;;                  4   73[BANK1 ] int 
 14061 ;; Registers used:
 14062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14063 ;; Tracked objects:
 14064 ;;		On entry : 0/0
 14065 ;;		On exit  : 0/0
 14066 ;;		Unchanged: 0/0
 14067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14068 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14069 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14070 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14071 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14072 ;;Total ram usage:        7 bytes
 14073 ;; Hardware stack levels used:    1
 14074 ;; Hardware stack levels required when called:    5
 14075 ;; This function calls:
 14076 ;;		___fladd
 14077 ;;		___flge
 14078 ;;		___flmul
 14079 ;;		___xxtofl
 14080 ;;		_eval_poly
 14081 ;;		_frexp
 14082 ;; This function is called by:
 14083 ;;		_calculateTemp
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           
 14088                           ;psect for function _log
 14089  1DB8                     _log:	
 14090                           
 14091                           ;incstack = 0
 14092                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14093  1DB8  0021               	movlb	1	; select bank1
 14094  1DB9  086C               	movf	(log@x+3)^(0+128),w
 14095  1DBA  00F5               	movwf	___flge@ff1+3
 14096  1DBB  086B               	movf	(log@x+2)^(0+128),w
 14097  1DBC  00F4               	movwf	___flge@ff1+2
 14098  1DBD  086A               	movf	(log@x+1)^(0+128),w
 14099  1DBE  00F3               	movwf	___flge@ff1+1
 14100  1DBF  0869               	movf	log@x^(0+128),w
 14101  1DC0  00F2               	movwf	___flge@ff1
 14102  1DC1  3000               	movlw	0
 14103  1DC2  00F9               	movwf	___flge@ff2+3
 14104  1DC3  3000               	movlw	0
 14105  1DC4  00F8               	movwf	___flge@ff2+2
 14106  1DC5  3000               	movlw	0
 14107  1DC6  00F7               	movwf	___flge@ff2+1
 14108  1DC7  3000               	movlw	0
 14109  1DC8  00F6               	movwf	___flge@ff2
 14110  1DC9  31A7  2766  319D   	fcall	___flge
 14111  1DCC  1803               	btfsc	3,0
 14112  1DCD  2DDD               	goto	l6203
 14113  1DCE  3021               	movlw	33
 14114  1DCF  0023               	movlb	3	; select bank3
 14115  1DD0  00A4               	movwf	_errno^(0+384)
 14116  1DD1  3000               	movlw	0
 14117  1DD2  00A5               	movwf	(_errno^(0+384)+1)
 14118  1DD3  3000               	movlw	0
 14119  1DD4  0021               	movlb	1	; select bank1
 14120  1DD5  00EC               	movwf	(?_log+3)^(0+128)
 14121  1DD6  3000               	movlw	0
 14122  1DD7  00EB               	movwf	(?_log+2)^(0+128)
 14123  1DD8  3000               	movlw	0
 14124  1DD9  00EA               	movwf	(?_log+1)^(0+128)
 14125  1DDA  3000               	movlw	0
 14126  1DDB  00E9               	movwf	?_log^(0+128)
 14127  1DDC  0008               	return
 14128  1DDD                     l6203:	
 14129  1DDD  0021               	movlb	1	; select bank1
 14130  1DDE  086C               	movf	(log@x+3)^(0+128),w
 14131  1DDF  046B               	iorwf	(log@x+2)^(0+128),w
 14132  1DE0  046A               	iorwf	(log@x+1)^(0+128),w
 14133  1DE1  0469               	iorwf	log@x^(0+128),w
 14134  1DE2  1D03               	skipz
 14135  1DE3  2DF3               	goto	l6209
 14136  1DE4  3022               	movlw	34
 14137  1DE5  0023               	movlb	3	; select bank3
 14138  1DE6  00A4               	movwf	_errno^(0+384)
 14139  1DE7  3000               	movlw	0
 14140  1DE8  00A5               	movwf	(_errno^(0+384)+1)
 14141  1DE9  3000               	movlw	0
 14142  1DEA  0021               	movlb	1	; select bank1
 14143  1DEB  00EC               	movwf	(?_log+3)^(0+128)
 14144  1DEC  3000               	movlw	0
 14145  1DED  00EB               	movwf	(?_log+2)^(0+128)
 14146  1DEE  3000               	movlw	0
 14147  1DEF  00EA               	movwf	(?_log+1)^(0+128)
 14148  1DF0  3000               	movlw	0
 14149  1DF1  00E9               	movwf	?_log^(0+128)
 14150  1DF2  0008               	return
 14151  1DF3                     l6209:	
 14152  1DF3  30BF               	movlw	191
 14153  1DF4  00AC               	movwf	(___fladd@b+3)^(0+128)
 14154  1DF5  3080               	movlw	128
 14155  1DF6  00AB               	movwf	(___fladd@b+2)^(0+128)
 14156  1DF7  3000               	movlw	0
 14157  1DF8  00AA               	movwf	(___fladd@b+1)^(0+128)
 14158  1DF9  3000               	movlw	0
 14159  1DFA  00A9               	movwf	___fladd@b^(0+128)
 14160  1DFB  3040               	movlw	64
 14161  1DFC  0020               	movlb	0	; select bank0
 14162  1DFD  00BB               	movwf	___flmul@b+3
 14163  1DFE  3000               	movlw	0
 14164  1DFF  00BA               	movwf	___flmul@b+2
 14165  1E00  3000               	movlw	0
 14166  1E01  00B9               	movwf	___flmul@b+1
 14167  1E02  3000               	movlw	0
 14168  1E03  00B8               	movwf	___flmul@b
 14169  1E04  30EE               	movlw	(low (log@exponent| 0))& (0+255)
 14170  1E05  0021               	movlb	1	; select bank1
 14171  1E06  00ED               	movwf	??_log^(0+128)
 14172  1E07  086D               	movf	??_log^(0+128),w
 14173  1E08  00F6               	movwf	frexp@eptr
 14174  1E09  086C               	movf	(log@x+3)^(0+128),w
 14175  1E0A  00F5               	movwf	frexp@value+3
 14176  1E0B  086B               	movf	(log@x+2)^(0+128),w
 14177  1E0C  00F4               	movwf	frexp@value+2
 14178  1E0D  086A               	movf	(log@x+1)^(0+128),w
 14179  1E0E  00F3               	movwf	frexp@value+1
 14180  1E0F  0869               	movf	log@x^(0+128),w
 14181  1E10  00F2               	movwf	frexp@value
 14182  1E11  31A1  213B  319D   	fcall	_frexp
 14183  1E14  0875               	movf	?_frexp+3,w
 14184  1E15  0020               	movlb	0	; select bank0
 14185  1E16  00BF               	movwf	___flmul@a+3
 14186  1E17  0874               	movf	?_frexp+2,w
 14187  1E18  00BE               	movwf	___flmul@a+2
 14188  1E19  0873               	movf	?_frexp+1,w
 14189  1E1A  00BD               	movwf	___flmul@a+1
 14190  1E1B  0872               	movf	?_frexp,w
 14191  1E1C  00BC               	movwf	___flmul@a
 14192  1E1D  3188  20E4  319D   	fcall	___flmul
 14193  1E20  0020               	movlb	0	; select bank0
 14194  1E21  083B               	movf	?___flmul+3,w
 14195  1E22  0021               	movlb	1	; select bank1
 14196  1E23  00B0               	movwf	(___fladd@a+3)^(0+128)
 14197  1E24  0020               	movlb	0	; select bank0
 14198  1E25  083A               	movf	?___flmul+2,w
 14199  1E26  0021               	movlb	1	; select bank1
 14200  1E27  00AF               	movwf	(___fladd@a+2)^(0+128)
 14201  1E28  0020               	movlb	0	; select bank0
 14202  1E29  0839               	movf	?___flmul+1,w
 14203  1E2A  0021               	movlb	1	; select bank1
 14204  1E2B  00AE               	movwf	(___fladd@a+1)^(0+128)
 14205  1E2C  0020               	movlb	0	; select bank0
 14206  1E2D  0838               	movf	?___flmul,w
 14207  1E2E  0021               	movlb	1	; select bank1
 14208  1E2F  00AD               	movwf	___fladd@a^(0+128)
 14209  1E30  318B  2310  319D   	fcall	___fladd
 14210  1E33  0021               	movlb	1	; select bank1
 14211  1E34  082C               	movf	(?___fladd+3)^(0+128),w
 14212  1E35  00EC               	movwf	(log@x+3)^(0+128)
 14213  1E36  082B               	movf	(?___fladd+2)^(0+128),w
 14214  1E37  00EB               	movwf	(log@x+2)^(0+128)
 14215  1E38  082A               	movf	(?___fladd+1)^(0+128),w
 14216  1E39  00EA               	movwf	(log@x+1)^(0+128)
 14217  1E3A  0829               	movf	?___fladd^(0+128),w
 14218  1E3B  00E9               	movwf	log@x^(0+128)
 14219  1E3C  30FF               	movlw	255
 14220  1E3D  07EE               	addwf	log@exponent^(0+128),f
 14221  1E3E  30FF               	movlw	255
 14222  1E3F  3DEF               	addwfc	(log@exponent+1)^(0+128),f
 14223  1E40  086C               	movf	(log@x+3)^(0+128),w
 14224  1E41  00C0               	movwf	(eval_poly@x+3)^(0+128)
 14225  1E42  086B               	movf	(log@x+2)^(0+128),w
 14226  1E43  00BF               	movwf	(eval_poly@x+2)^(0+128)
 14227  1E44  086A               	movf	(log@x+1)^(0+128),w
 14228  1E45  00BE               	movwf	(eval_poly@x+1)^(0+128)
 14229  1E46  0869               	movf	log@x^(0+128),w
 14230  1E47  00BD               	movwf	eval_poly@x^(0+128)
 14231  1E48  3000               	movlw	low (log@coeff| (0+32768))
 14232  1E49  00C1               	movwf	eval_poly@d^(0+128)
 14233  1E4A  30A8               	movlw	high (log@coeff| (0+32768))
 14234  1E4B  00C2               	movwf	(eval_poly@d^(0+128)+1)
 14235  1E4C  3008               	movlw	8
 14236  1E4D  00C3               	movwf	eval_poly@n^(0+128)
 14237  1E4E  3000               	movlw	0
 14238  1E4F  00C4               	movwf	(eval_poly@n^(0+128)+1)
 14239  1E50  31A6  2644  319D   	fcall	_eval_poly
 14240  1E53  0021               	movlb	1	; select bank1
 14241  1E54  0840               	movf	(?_eval_poly+3)^(0+128),w
 14242  1E55  00EC               	movwf	(log@x+3)^(0+128)
 14243  1E56  083F               	movf	(?_eval_poly+2)^(0+128),w
 14244  1E57  00EB               	movwf	(log@x+2)^(0+128)
 14245  1E58  083E               	movf	(?_eval_poly+1)^(0+128),w
 14246  1E59  00EA               	movwf	(log@x+1)^(0+128)
 14247  1E5A  083D               	movf	?_eval_poly^(0+128),w
 14248  1E5B  00E9               	movwf	log@x^(0+128)
 14249  1E5C  086C               	movf	(log@x+3)^(0+128),w
 14250  1E5D  00AC               	movwf	(___fladd@b+3)^(0+128)
 14251  1E5E  086B               	movf	(log@x+2)^(0+128),w
 14252  1E5F  00AB               	movwf	(___fladd@b+2)^(0+128)
 14253  1E60  086A               	movf	(log@x+1)^(0+128),w
 14254  1E61  00AA               	movwf	(___fladd@b+1)^(0+128)
 14255  1E62  0869               	movf	log@x^(0+128),w
 14256  1E63  00A9               	movwf	___fladd@b^(0+128)
 14257  1E64  303F               	movlw	63
 14258  1E65  0020               	movlb	0	; select bank0
 14259  1E66  00BB               	movwf	___flmul@b+3
 14260  1E67  3031               	movlw	49
 14261  1E68  00BA               	movwf	___flmul@b+2
 14262  1E69  3072               	movlw	114
 14263  1E6A  00B9               	movwf	___flmul@b+1
 14264  1E6B  3018               	movlw	24
 14265  1E6C  00B8               	movwf	___flmul@b
 14266  1E6D  0021               	movlb	1	; select bank1
 14267  1E6E  086E               	movf	log@exponent^(0+128),w
 14268  1E6F  0020               	movlb	0	; select bank0
 14269  1E70  00AE               	movwf	___xxtofl@val
 14270  1E71  0021               	movlb	1	; select bank1
 14271  1E72  086F               	movf	(log@exponent+1)^(0+128),w
 14272  1E73  0020               	movlb	0	; select bank0
 14273  1E74  00AF               	movwf	___xxtofl@val+1
 14274  1E75  0D89               	rlf	9,f
 14275  1E76  3B89               	subwfb	9,f
 14276  1E77  0989               	comf	9,f
 14277  1E78  00B0               	movwf	___xxtofl@val+2
 14278  1E79  00B1               	movwf	___xxtofl@val+3
 14279  1E7A  3001               	movlw	1
 14280  1E7B  31A6  26D0  319D   	fcall	___xxtofl
 14281  1E7E  0020               	movlb	0	; select bank0
 14282  1E7F  0831               	movf	?___xxtofl+3,w
 14283  1E80  00BF               	movwf	___flmul@a+3
 14284  1E81  0830               	movf	?___xxtofl+2,w
 14285  1E82  00BE               	movwf	___flmul@a+2
 14286  1E83  082F               	movf	?___xxtofl+1,w
 14287  1E84  00BD               	movwf	___flmul@a+1
 14288  1E85  082E               	movf	?___xxtofl,w
 14289  1E86  00BC               	movwf	___flmul@a
 14290  1E87  3188  20E4  319D   	fcall	___flmul
 14291  1E8A  0020               	movlb	0	; select bank0
 14292  1E8B  083B               	movf	?___flmul+3,w
 14293  1E8C  0021               	movlb	1	; select bank1
 14294  1E8D  00B0               	movwf	(___fladd@a+3)^(0+128)
 14295  1E8E  0020               	movlb	0	; select bank0
 14296  1E8F  083A               	movf	?___flmul+2,w
 14297  1E90  0021               	movlb	1	; select bank1
 14298  1E91  00AF               	movwf	(___fladd@a+2)^(0+128)
 14299  1E92  0020               	movlb	0	; select bank0
 14300  1E93  0839               	movf	?___flmul+1,w
 14301  1E94  0021               	movlb	1	; select bank1
 14302  1E95  00AE               	movwf	(___fladd@a+1)^(0+128)
 14303  1E96  0020               	movlb	0	; select bank0
 14304  1E97  0838               	movf	?___flmul,w
 14305  1E98  0021               	movlb	1	; select bank1
 14306  1E99  00AD               	movwf	___fladd@a^(0+128)
 14307  1E9A  318B  2310         	fcall	___fladd
 14308  1E9C  0021               	movlb	1	; select bank1
 14309  1E9D  082C               	movf	(?___fladd+3)^(0+128),w
 14310  1E9E  00EC               	movwf	(?_log+3)^(0+128)
 14311  1E9F  082B               	movf	(?___fladd+2)^(0+128),w
 14312  1EA0  00EB               	movwf	(?_log+2)^(0+128)
 14313  1EA1  082A               	movf	(?___fladd+1)^(0+128),w
 14314  1EA2  00EA               	movwf	(?_log+1)^(0+128)
 14315  1EA3  0829               	movf	?___fladd^(0+128),w
 14316  1EA4  00E9               	movwf	?_log^(0+128)
 14317  1EA5  0008               	return
 14318  1EA6                     __end_of_log:	
 14319                           
 14320                           	psect	text35
 14321  213B                     __ptext35:	
 14322 ;; *************** function _frexp *****************
 14323 ;; Defined at:
 14324 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 14325 ;; Parameters:    Size  Location     Type
 14326 ;;  value           4    2[COMMON] int 
 14327 ;;  eptr            1    6[COMMON] PTR int 
 14328 ;;		 -> log@exponent(2), 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;		None
 14331 ;; Return value:  Size  Location     Type
 14332 ;;                  4    2[COMMON] PTR int 
 14333 ;; Registers used:
 14334 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14335 ;; Tracked objects:
 14336 ;;		On entry : 0/0
 14337 ;;		On exit  : 0/0
 14338 ;;		Unchanged: 0/0
 14339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14340 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14343 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14344 ;;Total ram usage:        7 bytes
 14345 ;; Hardware stack levels used:    1
 14346 ;; Hardware stack levels required when called:    2
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_log
 14351 ;; This function uses a non-reentrant model
 14352 ;;
 14353                           
 14354                           
 14355                           ;psect for function _frexp
 14356  213B                     _frexp:	
 14357                           
 14358                           ;incstack = 0
 14359                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
 14360  213B  0875               	movf	frexp@value+3,w
 14361  213C  0474               	iorwf	frexp@value+2,w
 14362  213D  0473               	iorwf	frexp@value+1,w
 14363  213E  0472               	iorwf	frexp@value,w
 14364  213F  1D03               	skipz
 14365  2140  2950               	goto	l4029
 14366  2141  0876               	movf	frexp@eptr,w
 14367  2142  0086               	movwf	6
 14368  2143  0187               	clrf	7
 14369  2144  3000               	movlw	0
 14370  2145  3FC0               	movwi [0]fsr1
 14371  2146  3FC1               	movwi [1]fsr1
 14372  2147  3000               	movlw	0
 14373  2148  00F5               	movwf	?_frexp+3
 14374  2149  3000               	movlw	0
 14375  214A  00F4               	movwf	?_frexp+2
 14376  214B  3000               	movlw	0
 14377  214C  00F3               	movwf	?_frexp+1
 14378  214D  3000               	movlw	0
 14379  214E  00F2               	movwf	?_frexp
 14380  214F  0008               	return
 14381  2150                     l4029:	
 14382  2150  0875               	movf	frexp@value+3,w
 14383  2151  397F               	andlw	127
 14384  2152  00F7               	movwf	??_frexp
 14385  2153  01F8               	clrf	??_frexp+1
 14386  2154  35F7               	lslf	??_frexp,f
 14387  2155  0DF8               	rlf	??_frexp+1,f
 14388  2156  0876               	movf	frexp@eptr,w
 14389  2157  0086               	movwf	6
 14390  2158  0187               	clrf	7
 14391  2159  0877               	movf	??_frexp,w
 14392  215A  3FC0               	movwi [0]fsr1
 14393  215B  0878               	movf	??_frexp+1,w
 14394  215C  3FC1               	movwi [1]fsr1
 14395  215D  0D74               	rlf	frexp@value+2,w
 14396  215E  0D74               	rlf	frexp@value+2,w
 14397  215F  3901               	andlw	1
 14398  2160  00F7               	movwf	??_frexp
 14399  2161  01F8               	clrf	??_frexp+1
 14400  2162  0876               	movf	frexp@eptr,w
 14401  2163  0086               	movwf	6
 14402  2164  0187               	clrf	7
 14403  2165  0877               	movf	??_frexp,w
 14404  2166  0481               	iorwf	1,f
 14405  2167  3141               	addfsr 1,1
 14406  2168  0878               	movf	??_frexp+1,w
 14407  2169  0481               	iorwf	1,f
 14408  216A  0876               	movf	frexp@eptr,w
 14409  216B  0086               	movwf	6
 14410  216C  0187               	clrf	7
 14411  216D  3082               	movlw	130
 14412  216E  0781               	addwf	1,f
 14413  216F  3141               	addfsr 1,1
 14414  2170  30FF               	movlw	255
 14415  2171  3D81               	addwfc	1,f
 14416  2172  317F               	addfsr 1,-1
 14417  2173  0875               	movf	frexp@value+3,w
 14418  2174  3980               	andlw	-128
 14419  2175  383F               	iorlw	63
 14420  2176  00F5               	movwf	frexp@value+3
 14421  2177  13F4               	bcf	frexp@value+2,7
 14422  2178  0008               	return
 14423  2179                     __end_of_frexp:	
 14424                           
 14425                           	psect	text36
 14426  2644                     __ptext36:	
 14427 ;; *************** function _eval_poly *****************
 14428 ;; Defined at:
 14429 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 14430 ;; Parameters:    Size  Location     Type
 14431 ;;  x               4   29[BANK1 ] PTR int 
 14432 ;;  d               2   33[BANK1 ] PTR const 
 14433 ;;		 -> log@coeff(36), 
 14434 ;;  n               2   35[BANK1 ] int 
 14435 ;; Auto vars:     Size  Location     Type
 14436 ;;  res             4   43[BANK1 ] int 
 14437 ;; Return value:  Size  Location     Type
 14438 ;;                  4   29[BANK1 ] int 
 14439 ;; Registers used:
 14440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14441 ;; Tracked objects:
 14442 ;;		On entry : 0/0
 14443 ;;		On exit  : 0/0
 14444 ;;		Unchanged: 0/0
 14445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14446 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14447 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14448 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14449 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14450 ;;Total ram usage:       18 bytes
 14451 ;; Hardware stack levels used:    1
 14452 ;; Hardware stack levels required when called:    4
 14453 ;; This function calls:
 14454 ;;		___fladd
 14455 ;;		___flmul
 14456 ;; This function is called by:
 14457 ;;		_log
 14458 ;; This function uses a non-reentrant model
 14459 ;;
 14460                           
 14461                           
 14462                           ;psect for function _eval_poly
 14463  2644                     _eval_poly:	
 14464                           
 14465                           ;incstack = 0
 14466                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14467  2644  0021               	movlb	1	; select bank1
 14468  2645  0844               	movf	(eval_poly@n+1)^(0+128),w
 14469  2646  00C6               	movwf	(??_eval_poly^(0+128)+1)
 14470  2647  0843               	movf	eval_poly@n^(0+128),w
 14471  2648  00C5               	movwf	??_eval_poly^(0+128)
 14472  2649  35C5               	lslf	??_eval_poly^(0+128),f
 14473  264A  0DC6               	rlf	(??_eval_poly^(0+128)+1),f
 14474  264B  35C5               	lslf	??_eval_poly^(0+128),f
 14475  264C  0DC6               	rlf	(??_eval_poly^(0+128)+1),f
 14476  264D  0841               	movf	eval_poly@d^(0+128),w
 14477  264E  0745               	addwf	??_eval_poly^(0+128),w
 14478  264F  0084               	movwf	4
 14479  2650  0842               	movf	(eval_poly@d+1)^(0+128),w
 14480  2651  3D46               	addwfc	(??_eval_poly+1)^(0+128),w
 14481  2652  0085               	movwf	5
 14482  2653  3F00               	moviw [0]fsr0
 14483  2654  00C7               	movwf	(??_eval_poly+2)^(0+128)
 14484  2655  3F01               	moviw [1]fsr0
 14485  2656  00C8               	movwf	((??_eval_poly+2)^(0+128)+1)
 14486  2657  3F02               	moviw [2]fsr0
 14487  2658  00C9               	movwf	((??_eval_poly+2)^(0+128)+2)
 14488  2659  3F03               	moviw [3]fsr0
 14489  265A  00CA               	movwf	((??_eval_poly+2)^(0+128)+3)
 14490  265B  084A               	movf	(??_eval_poly+5)^(0+128),w
 14491  265C  00CE               	movwf	(eval_poly@res+3)^(0+128)
 14492  265D  0849               	movf	(??_eval_poly+4)^(0+128),w
 14493  265E  00CD               	movwf	(eval_poly@res+2)^(0+128)
 14494  265F  0848               	movf	(??_eval_poly+3)^(0+128),w
 14495  2660  00CC               	movwf	(eval_poly@res+1)^(0+128)
 14496  2661  0847               	movf	(??_eval_poly+2)^(0+128),w
 14497  2662                     L13:	
 14498  2662  00CB               	movwf	eval_poly@res^(0+128)
 14499  2663  0843               	movf	eval_poly@n^(0+128),w
 14500  2664  0444               	iorwf	(eval_poly@n+1)^(0+128),w
 14501  2665  1903               	btfsc	3,2
 14502  2666  2EC7               	goto	l6149
 14503  2667  30FF               	movlw	255
 14504  2668  07C3               	addwf	eval_poly@n^(0+128),f
 14505  2669  30FF               	movlw	255
 14506  266A  3DC4               	addwfc	(eval_poly@n+1)^(0+128),f
 14507  266B  0844               	movf	(eval_poly@n+1)^(0+128),w
 14508  266C  00C6               	movwf	(??_eval_poly^(0+128)+1)
 14509  266D  0843               	movf	eval_poly@n^(0+128),w
 14510  266E  00C5               	movwf	??_eval_poly^(0+128)
 14511  266F  35C5               	lslf	??_eval_poly^(0+128),f
 14512  2670  0DC6               	rlf	(??_eval_poly^(0+128)+1),f
 14513  2671  35C5               	lslf	??_eval_poly^(0+128),f
 14514  2672  0DC6               	rlf	(??_eval_poly^(0+128)+1),f
 14515  2673  0841               	movf	eval_poly@d^(0+128),w
 14516  2674  0745               	addwf	??_eval_poly^(0+128),w
 14517  2675  0084               	movwf	4
 14518  2676  0842               	movf	(eval_poly@d+1)^(0+128),w
 14519  2677  3D46               	addwfc	(??_eval_poly+1)^(0+128),w
 14520  2678  0085               	movwf	5
 14521  2679  3F00               	moviw [0]fsr0
 14522  267A  00C7               	movwf	(??_eval_poly+2)^(0+128)
 14523  267B  3F01               	moviw [1]fsr0
 14524  267C  00C8               	movwf	((??_eval_poly+2)^(0+128)+1)
 14525  267D  3F02               	moviw [2]fsr0
 14526  267E  00C9               	movwf	((??_eval_poly+2)^(0+128)+2)
 14527  267F  3F03               	moviw [3]fsr0
 14528  2680  00CA               	movwf	((??_eval_poly+2)^(0+128)+3)
 14529  2681  084A               	movf	(??_eval_poly+5)^(0+128),w
 14530  2682  00AC               	movwf	(___fladd@b+3)^(0+128)
 14531  2683  0849               	movf	(??_eval_poly+4)^(0+128),w
 14532  2684  00AB               	movwf	(___fladd@b+2)^(0+128)
 14533  2685  0848               	movf	(??_eval_poly+3)^(0+128),w
 14534  2686  00AA               	movwf	(___fladd@b+1)^(0+128)
 14535  2687  0847               	movf	(??_eval_poly+2)^(0+128),w
 14536  2688  00A9               	movwf	___fladd@b^(0+128)
 14537  2689  084E               	movf	(eval_poly@res+3)^(0+128),w
 14538  268A  0020               	movlb	0	; select bank0
 14539  268B  00BB               	movwf	___flmul@b+3
 14540  268C  0021               	movlb	1	; select bank1
 14541  268D  084D               	movf	(eval_poly@res+2)^(0+128),w
 14542  268E  0020               	movlb	0	; select bank0
 14543  268F  00BA               	movwf	___flmul@b+2
 14544  2690  0021               	movlb	1	; select bank1
 14545  2691  084C               	movf	(eval_poly@res+1)^(0+128),w
 14546  2692  0020               	movlb	0	; select bank0
 14547  2693  00B9               	movwf	___flmul@b+1
 14548  2694  0021               	movlb	1	; select bank1
 14549  2695  084B               	movf	eval_poly@res^(0+128),w
 14550  2696  0020               	movlb	0	; select bank0
 14551  2697  00B8               	movwf	___flmul@b
 14552  2698  0021               	movlb	1	; select bank1
 14553  2699  0840               	movf	(eval_poly@x+3)^(0+128),w
 14554  269A  0020               	movlb	0	; select bank0
 14555  269B  00BF               	movwf	___flmul@a+3
 14556  269C  0021               	movlb	1	; select bank1
 14557  269D  083F               	movf	(eval_poly@x+2)^(0+128),w
 14558  269E  0020               	movlb	0	; select bank0
 14559  269F  00BE               	movwf	___flmul@a+2
 14560  26A0  0021               	movlb	1	; select bank1
 14561  26A1  083E               	movf	(eval_poly@x+1)^(0+128),w
 14562  26A2  0020               	movlb	0	; select bank0
 14563  26A3  00BD               	movwf	___flmul@a+1
 14564  26A4  0021               	movlb	1	; select bank1
 14565  26A5  083D               	movf	eval_poly@x^(0+128),w
 14566  26A6  0020               	movlb	0	; select bank0
 14567  26A7  00BC               	movwf	___flmul@a
 14568  26A8  3188  20E4  31A6   	fcall	___flmul
 14569  26AB  0020               	movlb	0	; select bank0
 14570  26AC  083B               	movf	?___flmul+3,w
 14571  26AD  0021               	movlb	1	; select bank1
 14572  26AE  00B0               	movwf	(___fladd@a+3)^(0+128)
 14573  26AF  0020               	movlb	0	; select bank0
 14574  26B0  083A               	movf	?___flmul+2,w
 14575  26B1  0021               	movlb	1	; select bank1
 14576  26B2  00AF               	movwf	(___fladd@a+2)^(0+128)
 14577  26B3  0020               	movlb	0	; select bank0
 14578  26B4  0839               	movf	?___flmul+1,w
 14579  26B5  0021               	movlb	1	; select bank1
 14580  26B6  00AE               	movwf	(___fladd@a+1)^(0+128)
 14581  26B7  0020               	movlb	0	; select bank0
 14582  26B8  0838               	movf	?___flmul,w
 14583  26B9  0021               	movlb	1	; select bank1
 14584  26BA  00AD               	movwf	___fladd@a^(0+128)
 14585  26BB  318B  2310  31A6   	fcall	___fladd
 14586  26BE  0021               	movlb	1	; select bank1
 14587  26BF  082C               	movf	(?___fladd+3)^(0+128),w
 14588  26C0  00CE               	movwf	(eval_poly@res+3)^(0+128)
 14589  26C1  082B               	movf	(?___fladd+2)^(0+128),w
 14590  26C2  00CD               	movwf	(eval_poly@res+2)^(0+128)
 14591  26C3  082A               	movf	(?___fladd+1)^(0+128),w
 14592  26C4  00CC               	movwf	(eval_poly@res+1)^(0+128)
 14593  26C5  0829               	movf	?___fladd^(0+128),w
 14594  26C6  2E62               	goto	L13
 14595  26C7                     l6149:	
 14596  26C7  084E               	movf	(eval_poly@res+3)^(0+128),w
 14597  26C8  00C0               	movwf	(?_eval_poly+3)^(0+128)
 14598  26C9  084D               	movf	(eval_poly@res+2)^(0+128),w
 14599  26CA  00BF               	movwf	(?_eval_poly+2)^(0+128)
 14600  26CB  084C               	movf	(eval_poly@res+1)^(0+128),w
 14601  26CC  00BE               	movwf	(?_eval_poly+1)^(0+128)
 14602  26CD  084B               	movf	eval_poly@res^(0+128),w
 14603  26CE  00BD               	movwf	?_eval_poly^(0+128)
 14604  26CF  0008               	return
 14605  26D0                     __end_of_eval_poly:	
 14606                           
 14607                           	psect	text37
 14608  25C5                     __ptext37:	
 14609 ;; *************** function ___fltol *****************
 14610 ;; Defined at:
 14611 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 14612 ;; Parameters:    Size  Location     Type
 14613 ;;  f1              4    0[BANK2 ] int 
 14614 ;; Auto vars:     Size  Location     Type
 14615 ;;  exp1            1   10[BANK2 ] unsigned char 
 14616 ;;  sign1           1    9[BANK2 ] unsigned char 
 14617 ;; Return value:  Size  Location     Type
 14618 ;;                  4    0[BANK2 ] long 
 14619 ;; Registers used:
 14620 ;;		wreg, status,2, status,0
 14621 ;; Tracked objects:
 14622 ;;		On entry : 0/0
 14623 ;;		On exit  : 0/0
 14624 ;;		Unchanged: 0/0
 14625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14626 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14627 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14628 ;;      Temps:          0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14629 ;;      Totals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14630 ;;Total ram usage:       11 bytes
 14631 ;; Hardware stack levels used:    1
 14632 ;; Hardware stack levels required when called:    2
 14633 ;; This function calls:
 14634 ;;		Nothing
 14635 ;; This function is called by:
 14636 ;;		_startUp
 14637 ;;		_calculateTemp
 14638 ;;		_sprintf
 14639 ;; This function uses a non-reentrant model
 14640 ;;
 14641                           
 14642                           
 14643                           ;psect for function ___fltol
 14644  25C5                     ___fltol:	
 14645                           
 14646                           ;incstack = 0
 14647                           ; Regs used in ___fltol: [wreg+status,2+status,0]
 14648  25C5  0022               	movlb	2	; select bank2
 14649  25C6  0820               	movf	___fltol@f1^(0+256),w
 14650  25C7  00A4               	movwf	??___fltol^(0+256)
 14651  25C8  0821               	movf	(___fltol@f1+1)^(0+256),w
 14652  25C9  00A5               	movwf	(??___fltol^(0+256)+1)
 14653  25CA  0822               	movf	(___fltol@f1+2)^(0+256),w
 14654  25CB  00A6               	movwf	(??___fltol^(0+256)+2)
 14655  25CC  0823               	movf	(___fltol@f1+3)^(0+256),w
 14656  25CD  00A7               	movwf	(??___fltol^(0+256)+3)
 14657  25CE  1003               	clrc
 14658  25CF  0D26               	rlf	(??___fltol^(0+256)+2),w
 14659  25D0  0D27               	rlf	(??___fltol^(0+256)+3),w
 14660  25D1  00A8               	movwf	(??___fltol+4)^(0+256)
 14661  25D2  0828               	movf	(??___fltol+4)^(0+256),w
 14662  25D3  00AA               	movwf	___fltol@exp1^(0+256)
 14663  25D4  082A               	movf	___fltol@exp1^(0+256),w
 14664  25D5  1D03               	btfss	3,2
 14665  25D6  2DE0               	goto	l6341
 14666  25D7  3000               	movlw	0
 14667  25D8  00A3               	movwf	(?___fltol+3)^(0+256)
 14668  25D9  3000               	movlw	0
 14669  25DA  00A2               	movwf	(?___fltol+2)^(0+256)
 14670  25DB  3000               	movlw	0
 14671  25DC  00A1               	movwf	(?___fltol+1)^(0+256)
 14672  25DD  3000               	movlw	0
 14673  25DE  00A0               	movwf	?___fltol^(0+256)
 14674  25DF  0008               	return
 14675  25E0                     l6341:	
 14676  25E0  0820               	movf	___fltol@f1^(0+256),w
 14677  25E1  00A4               	movwf	??___fltol^(0+256)
 14678  25E2  0821               	movf	(___fltol@f1+1)^(0+256),w
 14679  25E3  00A5               	movwf	(??___fltol^(0+256)+1)
 14680  25E4  0822               	movf	(___fltol@f1+2)^(0+256),w
 14681  25E5  00A6               	movwf	(??___fltol^(0+256)+2)
 14682  25E6  0823               	movf	(___fltol@f1+3)^(0+256),w
 14683  25E7  00A7               	movwf	(??___fltol^(0+256)+3)
 14684  25E8  301F               	movlw	31
 14685  25E9                     u8715:	
 14686  25E9  36A7               	lsrf	(??___fltol^(0+256)+3),f
 14687  25EA  0CA6               	rrf	(??___fltol^(0+256)+2),f
 14688  25EB  0CA5               	rrf	(??___fltol^(0+256)+1),f
 14689  25EC  0CA4               	rrf	??___fltol^(0+256),f
 14690  25ED  0B89               	decfsz	9,f
 14691  25EE  2DE9               	goto	u8715
 14692  25EF  0824               	movf	??___fltol^(0+256),w
 14693  25F0  00A8               	movwf	(??___fltol+4)^(0+256)
 14694  25F1  0828               	movf	(??___fltol+4)^(0+256),w
 14695  25F2  00A9               	movwf	___fltol@sign1^(0+256)
 14696  25F3  17A2               	bsf	(___fltol@f1^(0+256)+2),7
 14697  25F4  30FF               	movlw	255
 14698  25F5  05A0               	andwf	___fltol@f1^(0+256),f
 14699  25F6  30FF               	movlw	255
 14700  25F7  05A1               	andwf	(___fltol@f1+1)^(0+256),f
 14701  25F8  30FF               	movlw	255
 14702  25F9  05A2               	andwf	(___fltol@f1+2)^(0+256),f
 14703  25FA  3000               	movlw	0
 14704  25FB  05A3               	andwf	(___fltol@f1+3)^(0+256),f
 14705  25FC  3096               	movlw	150
 14706  25FD  02AA               	subwf	___fltol@exp1^(0+256),f
 14707  25FE  1FAA               	btfss	___fltol@exp1^(0+256),7
 14708  25FF  2E1C               	goto	l6359
 14709  2600  082A               	movf	___fltol@exp1^(0+256),w
 14710  2601  3A80               	xorlw	128
 14711  2602  3E97               	addlw	151
 14712  2603  1803               	skipnc
 14713  2604  2E0E               	goto	l6357
 14714  2605  3000               	movlw	0
 14715  2606  00A3               	movwf	(?___fltol+3)^(0+256)
 14716  2607  3000               	movlw	0
 14717  2608  00A2               	movwf	(?___fltol+2)^(0+256)
 14718  2609  3000               	movlw	0
 14719  260A  00A1               	movwf	(?___fltol+1)^(0+256)
 14720  260B  3000               	movlw	0
 14721  260C  00A0               	movwf	?___fltol^(0+256)
 14722  260D  0008               	return
 14723  260E                     l6357:	
 14724  260E  3001               	movlw	1
 14725  260F                     u8745:	
 14726  260F  36A3               	lsrf	(___fltol@f1+3)^(0+256),f
 14727  2610  0CA2               	rrf	(___fltol@f1+2)^(0+256),f
 14728  2611  0CA1               	rrf	(___fltol@f1+1)^(0+256),f
 14729  2612  0CA0               	rrf	___fltol@f1^(0+256),f
 14730  2613  0B89               	decfsz	9,f
 14731  2614  2E0F               	goto	u8745
 14732  2615  3001               	movlw	1
 14733  2616  00A4               	movwf	??___fltol^(0+256)
 14734  2617  0824               	movf	??___fltol^(0+256),w
 14735  2618  07AA               	addwf	___fltol@exp1^(0+256),f
 14736  2619  1903               	btfsc	3,2
 14737  261A  2E35               	goto	l6367
 14738  261B  2E0E               	goto	l6357
 14739  261C                     l6359:	
 14740  261C  3020               	movlw	32
 14741  261D  022A               	subwf	___fltol@exp1^(0+256),w
 14742  261E  1C03               	skipc
 14743  261F  2E32               	goto	l975
 14744  2620  3000               	movlw	0
 14745  2621  00A3               	movwf	(?___fltol+3)^(0+256)
 14746  2622  3000               	movlw	0
 14747  2623  00A2               	movwf	(?___fltol+2)^(0+256)
 14748  2624  3000               	movlw	0
 14749  2625  00A1               	movwf	(?___fltol+1)^(0+256)
 14750  2626  3000               	movlw	0
 14751  2627  00A0               	movwf	?___fltol^(0+256)
 14752  2628  0008               	return
 14753  2629                     l6365:	
 14754  2629  3001               	movlw	1
 14755  262A                     u8775:	
 14756  262A  35A0               	lslf	___fltol@f1^(0+256),f
 14757  262B  0DA1               	rlf	(___fltol@f1+1)^(0+256),f
 14758  262C  0DA2               	rlf	(___fltol@f1+2)^(0+256),f
 14759  262D  0DA3               	rlf	(___fltol@f1+3)^(0+256),f
 14760  262E  0B89               	decfsz	9,f
 14761  262F  2E2A               	goto	u8775
 14762  2630  3001               	movlw	1
 14763  2631  02AA               	subwf	___fltol@exp1^(0+256),f
 14764  2632                     l975:	
 14765  2632  082A               	movf	___fltol@exp1^(0+256),w
 14766  2633  1D03               	btfss	3,2
 14767  2634  2E29               	goto	l6365
 14768  2635                     l6367:	
 14769  2635  0829               	movf	___fltol@sign1^(0+256),w
 14770  2636  1903               	btfsc	3,2
 14771  2637  0008               	return
 14772  2638  09A0               	comf	___fltol@f1^(0+256),f
 14773  2639  09A1               	comf	(___fltol@f1+1)^(0+256),f
 14774  263A  09A2               	comf	(___fltol@f1+2)^(0+256),f
 14775  263B  09A3               	comf	(___fltol@f1+3)^(0+256),f
 14776  263C  0AA0               	incf	___fltol@f1^(0+256),f
 14777  263D  1903               	skipnz
 14778  263E  0AA1               	incf	(___fltol@f1+1)^(0+256),f
 14779  263F  1903               	skipnz
 14780  2640  0AA2               	incf	(___fltol@f1+2)^(0+256),f
 14781  2641  1903               	skipnz
 14782  2642  0AA3               	incf	(___fltol@f1+3)^(0+256),f
 14783  2643  0008               	return
 14784  2644                     __end_of___fltol:	
 14785                           
 14786                           	psect	text38
 14787  228D                     __ptext38:	
 14788 ;; *************** function _getCurrent *****************
 14789 ;; Defined at:
 14790 ;;		line 26 in file "adc.c"
 14791 ;; Parameters:    Size  Location     Type
 14792 ;;		None
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;  currentValue    4   12[BANK2 ] float 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  4    8[BANK2 ] float 
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0, pclath, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14804 ;;      Params:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14805 ;;      Locals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14807 ;;      Totals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14808 ;;Total ram usage:        8 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:    5
 14811 ;; This function calls:
 14812 ;;		___xxtofl
 14813 ;;		_adcRead
 14814 ;;		_calculateCurrent
 14815 ;; This function is called by:
 14816 ;;		_main
 14817 ;;		_startUp
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821                           
 14822                           ;psect for function _getCurrent
 14823  228D                     _getCurrent:	
 14824                           
 14825                           ;adc.c: 27: float currentValue = (float)adcRead((char)10101);
 14826                           
 14827                           ;incstack = 0
 14828                           ; Regs used in _getCurrent: [wreg+status,2+status,0+pclath+cstack]
 14829  228D  3075               	movlw	117
 14830  228E  31A3  237A  31A2   	fcall	_adcRead
 14831  2291  0872               	movf	?_adcRead,w
 14832  2292  0020               	movlb	0	; select bank0
 14833  2293  00AE               	movwf	___xxtofl@val
 14834  2294  0873               	movf	?_adcRead+1,w
 14835  2295  00AF               	movwf	___xxtofl@val+1
 14836  2296  0D89               	rlf	9,f
 14837  2297  3B89               	subwfb	9,f
 14838  2298  0989               	comf	9,f
 14839  2299  00B0               	movwf	___xxtofl@val+2
 14840  229A  00B1               	movwf	___xxtofl@val+3
 14841  229B  3001               	movlw	1
 14842  229C  31A6  26D0  31A2   	fcall	___xxtofl
 14843  229F  0020               	movlb	0	; select bank0
 14844  22A0  0831               	movf	?___xxtofl+3,w
 14845  22A1  0022               	movlb	2	; select bank2
 14846  22A2  00AF               	movwf	(getCurrent@currentValue+3)^(0+256)
 14847  22A3  0020               	movlb	0	; select bank0
 14848  22A4  0830               	movf	?___xxtofl+2,w
 14849  22A5  0022               	movlb	2	; select bank2
 14850  22A6  00AE               	movwf	(getCurrent@currentValue+2)^(0+256)
 14851  22A7  0020               	movlb	0	; select bank0
 14852  22A8  082F               	movf	?___xxtofl+1,w
 14853  22A9  0022               	movlb	2	; select bank2
 14854  22AA  00AD               	movwf	(getCurrent@currentValue+1)^(0+256)
 14855  22AB  0020               	movlb	0	; select bank0
 14856  22AC  082E               	movf	?___xxtofl,w
 14857  22AD  0022               	movlb	2	; select bank2
 14858  22AE  00AC               	movwf	getCurrent@currentValue^(0+256)
 14859                           
 14860                           ;adc.c: 28: currentValue = calculateCurrent(currentValue);
 14861  22AF  082F               	movf	(getCurrent@currentValue+3)^(0+256),w
 14862  22B0  0021               	movlb	1	; select bank1
 14863  22B1  00EC               	movwf	(calculateCurrent@adcValue+3)^(0+128)
 14864  22B2  0022               	movlb	2	; select bank2
 14865  22B3  082E               	movf	(getCurrent@currentValue+2)^(0+256),w
 14866  22B4  0021               	movlb	1	; select bank1
 14867  22B5  00EB               	movwf	(calculateCurrent@adcValue+2)^(0+128)
 14868  22B6  0022               	movlb	2	; select bank2
 14869  22B7  082D               	movf	(getCurrent@currentValue+1)^(0+256),w
 14870  22B8  0021               	movlb	1	; select bank1
 14871  22B9  00EA               	movwf	(calculateCurrent@adcValue+1)^(0+128)
 14872  22BA  0022               	movlb	2	; select bank2
 14873  22BB  082C               	movf	getCurrent@currentValue^(0+256),w
 14874  22BC  0021               	movlb	1	; select bank1
 14875  22BD  00E9               	movwf	calculateCurrent@adcValue^(0+128)
 14876  22BE  3188  2001         	fcall	_calculateCurrent
 14877  22C0  0021               	movlb	1	; select bank1
 14878  22C1  086C               	movf	(?_calculateCurrent+3)^(0+128),w
 14879  22C2  0022               	movlb	2	; select bank2
 14880  22C3  00AF               	movwf	(getCurrent@currentValue+3)^(0+256)
 14881  22C4  0021               	movlb	1	; select bank1
 14882  22C5  086B               	movf	(?_calculateCurrent+2)^(0+128),w
 14883  22C6  0022               	movlb	2	; select bank2
 14884  22C7  00AE               	movwf	(getCurrent@currentValue+2)^(0+256)
 14885  22C8  0021               	movlb	1	; select bank1
 14886  22C9  086A               	movf	(?_calculateCurrent+1)^(0+128),w
 14887  22CA  0022               	movlb	2	; select bank2
 14888  22CB  00AD               	movwf	(getCurrent@currentValue+1)^(0+256)
 14889  22CC  0021               	movlb	1	; select bank1
 14890  22CD  0869               	movf	?_calculateCurrent^(0+128),w
 14891  22CE  0022               	movlb	2	; select bank2
 14892  22CF  00AC               	movwf	getCurrent@currentValue^(0+256)
 14893                           
 14894                           ;adc.c: 30: return currentValue;
 14895  22D0  082F               	movf	(getCurrent@currentValue+3)^(0+256),w
 14896  22D1  00AB               	movwf	(?_getCurrent+3)^(0+256)
 14897  22D2  082E               	movf	(getCurrent@currentValue+2)^(0+256),w
 14898  22D3  00AA               	movwf	(?_getCurrent+2)^(0+256)
 14899  22D4  082D               	movf	(getCurrent@currentValue+1)^(0+256),w
 14900  22D5  00A9               	movwf	(?_getCurrent+1)^(0+256)
 14901  22D6  082C               	movf	getCurrent@currentValue^(0+256),w
 14902  22D7  00A8               	movwf	?_getCurrent^(0+256)
 14903  22D8  0008               	return
 14904  22D9                     __end_of_getCurrent:	
 14905                           
 14906                           	psect	text39
 14907  0801                     __ptext39:	
 14908 ;; *************** function _calculateCurrent *****************
 14909 ;; Defined at:
 14910 ;;		line 18 in file "adc.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  adcValue        4   73[BANK1 ] float 
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;  curr            4    4[BANK2 ] float 
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  4   73[BANK1 ] float 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0, pclath, cstack
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14924 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14925 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;      Totals:         0       0       4       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;Total ram usage:       12 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:    4
 14931 ;; This function calls:
 14932 ;;		___fladd
 14933 ;;		___fldiv
 14934 ;;		___flge
 14935 ;;		___flmul
 14936 ;;		___flneg
 14937 ;; This function is called by:
 14938 ;;		_getCurrent
 14939 ;; This function uses a non-reentrant model
 14940 ;;
 14941                           
 14942                           
 14943                           ;psect for function _calculateCurrent
 14944  0801                     _calculateCurrent:	
 14945                           
 14946                           ;adc.c: 19: float curr = ((2.5 - ((((float)adcValue)/4095.0)*5.0))/0.04);
 14947                           
 14948                           ;incstack = 0
 14949                           ; Regs used in _calculateCurrent: [wreg+status,2+status,0+pclath+cstack]
 14950  0801  3040               	movlw	64
 14951  0802  0021               	movlb	1	; select bank1
 14952  0803  00AC               	movwf	(___fladd@b+3)^(0+128)
 14953  0804  3020               	movlw	32
 14954  0805  00AB               	movwf	(___fladd@b+2)^(0+128)
 14955  0806  3000               	movlw	0
 14956  0807  00AA               	movwf	(___fladd@b+1)^(0+128)
 14957  0808  3000               	movlw	0
 14958  0809  00A9               	movwf	___fladd@b^(0+128)
 14959  080A  086C               	movf	(calculateCurrent@adcValue+3)^(0+128),w
 14960  080B  00D6               	movwf	(___fldiv@b+3)^(0+128)
 14961  080C  086B               	movf	(calculateCurrent@adcValue+2)^(0+128),w
 14962  080D  00D5               	movwf	(___fldiv@b+2)^(0+128)
 14963  080E  086A               	movf	(calculateCurrent@adcValue+1)^(0+128),w
 14964  080F  00D4               	movwf	(___fldiv@b+1)^(0+128)
 14965  0810  0869               	movf	calculateCurrent@adcValue^(0+128),w
 14966  0811  00D3               	movwf	___fldiv@b^(0+128)
 14967  0812  3045               	movlw	69
 14968  0813  00D2               	movwf	(___fldiv@a+3)^(0+128)
 14969  0814  307F               	movlw	127
 14970  0815  00D1               	movwf	(___fldiv@a+2)^(0+128)
 14971  0816  30F0               	movlw	240
 14972  0817  00D0               	movwf	(___fldiv@a+1)^(0+128)
 14973  0818  3000               	movlw	0
 14974  0819  00CF               	movwf	___fldiv@a^(0+128)
 14975  081A  3192  228C  3188   	fcall	___fldiv
 14976  081D  0021               	movlb	1	; select bank1
 14977  081E  0852               	movf	(?___fldiv+3)^(0+128),w
 14978  081F  0020               	movlb	0	; select bank0
 14979  0820  00BF               	movwf	___flmul@a+3
 14980  0821  0021               	movlb	1	; select bank1
 14981  0822  0851               	movf	(?___fldiv+2)^(0+128),w
 14982  0823  0020               	movlb	0	; select bank0
 14983  0824  00BE               	movwf	___flmul@a+2
 14984  0825  0021               	movlb	1	; select bank1
 14985  0826  0850               	movf	(?___fldiv+1)^(0+128),w
 14986  0827  0020               	movlb	0	; select bank0
 14987  0828  00BD               	movwf	___flmul@a+1
 14988  0829  0021               	movlb	1	; select bank1
 14989  082A  084F               	movf	?___fldiv^(0+128),w
 14990  082B  0020               	movlb	0	; select bank0
 14991  082C  00BC               	movwf	___flmul@a
 14992  082D  3040               	movlw	64
 14993  082E  00BB               	movwf	___flmul@b+3
 14994  082F  30A0               	movlw	160
 14995  0830  00BA               	movwf	___flmul@b+2
 14996  0831  3000               	movlw	0
 14997  0832  00B9               	movwf	___flmul@b+1
 14998  0833  3000               	movlw	0
 14999  0834  00B8               	movwf	___flmul@b
 15000  0835  3188  20E4  3188   	fcall	___flmul
 15001  0838  0020               	movlb	0	; select bank0
 15002  0839  083B               	movf	?___flmul+3,w
 15003  083A  00D5               	movwf	___flneg@f1+3
 15004  083B  083A               	movf	?___flmul+2,w
 15005  083C  00D4               	movwf	___flneg@f1+2
 15006  083D  0839               	movf	?___flmul+1,w
 15007  083E  00D3               	movwf	___flneg@f1+1
 15008  083F  0838               	movf	?___flmul,w
 15009  0840  00D2               	movwf	___flneg@f1
 15010  0841  31AF  2789  3188   	fcall	___flneg
 15011  0844  0020               	movlb	0	; select bank0
 15012  0845  0855               	movf	?___flneg+3,w
 15013  0846  0021               	movlb	1	; select bank1
 15014  0847  00B0               	movwf	(___fladd@a+3)^(0+128)
 15015  0848  0020               	movlb	0	; select bank0
 15016  0849  0854               	movf	?___flneg+2,w
 15017  084A  0021               	movlb	1	; select bank1
 15018  084B  00AF               	movwf	(___fladd@a+2)^(0+128)
 15019  084C  0020               	movlb	0	; select bank0
 15020  084D  0853               	movf	?___flneg+1,w
 15021  084E  0021               	movlb	1	; select bank1
 15022  084F  00AE               	movwf	(___fladd@a+1)^(0+128)
 15023  0850  0020               	movlb	0	; select bank0
 15024  0851  0852               	movf	?___flneg,w
 15025  0852  0021               	movlb	1	; select bank1
 15026  0853  00AD               	movwf	___fladd@a^(0+128)
 15027  0854  318B  2310  3188   	fcall	___fladd
 15028  0857  0021               	movlb	1	; select bank1
 15029  0858  082C               	movf	(?___fladd+3)^(0+128),w
 15030  0859  0022               	movlb	2	; select bank2
 15031  085A  00A3               	movwf	(_calculateCurrent$2062+3)^(0+256)
 15032  085B  0021               	movlb	1	; select bank1
 15033  085C  082B               	movf	(?___fladd+2)^(0+128),w
 15034  085D  0022               	movlb	2	; select bank2
 15035  085E  00A2               	movwf	(_calculateCurrent$2062+2)^(0+256)
 15036  085F  0021               	movlb	1	; select bank1
 15037  0860  082A               	movf	(?___fladd+1)^(0+128),w
 15038  0861  0022               	movlb	2	; select bank2
 15039  0862  00A1               	movwf	(_calculateCurrent$2062+1)^(0+256)
 15040  0863  0021               	movlb	1	; select bank1
 15041  0864  0829               	movf	?___fladd^(0+128),w
 15042  0865  0022               	movlb	2	; select bank2
 15043  0866  00A0               	movwf	_calculateCurrent$2062^(0+256)
 15044                           
 15045                           ;adc.c: 19: float curr = ((2.5 - ((((float)adcValue)/4095.0)*5.0))/0.04);
 15046  0867  303D               	movlw	61
 15047  0868  0021               	movlb	1	; select bank1
 15048  0869  00D2               	movwf	(___fldiv@a+3)^(0+128)
 15049  086A  3023               	movlw	35
 15050  086B  00D1               	movwf	(___fldiv@a+2)^(0+128)
 15051  086C  30D7               	movlw	215
 15052  086D  00D0               	movwf	(___fldiv@a+1)^(0+128)
 15053  086E  300A               	movlw	10
 15054  086F  00CF               	movwf	___fldiv@a^(0+128)
 15055  0870  0022               	movlb	2	; select bank2
 15056  0871  0823               	movf	(_calculateCurrent$2062+3)^(0+256),w
 15057  0872  0021               	movlb	1	; select bank1
 15058  0873  00D6               	movwf	(___fldiv@b+3)^(0+128)
 15059  0874  0022               	movlb	2	; select bank2
 15060  0875  0822               	movf	(_calculateCurrent$2062+2)^(0+256),w
 15061  0876  0021               	movlb	1	; select bank1
 15062  0877  00D5               	movwf	(___fldiv@b+2)^(0+128)
 15063  0878  0022               	movlb	2	; select bank2
 15064  0879  0821               	movf	(_calculateCurrent$2062+1)^(0+256),w
 15065  087A  0021               	movlb	1	; select bank1
 15066  087B  00D4               	movwf	(___fldiv@b+1)^(0+128)
 15067  087C  0022               	movlb	2	; select bank2
 15068  087D  0820               	movf	_calculateCurrent$2062^(0+256),w
 15069  087E  0021               	movlb	1	; select bank1
 15070  087F  00D3               	movwf	___fldiv@b^(0+128)
 15071  0880  3192  228C  3188   	fcall	___fldiv
 15072  0883  0021               	movlb	1	; select bank1
 15073  0884  0852               	movf	(?___fldiv+3)^(0+128),w
 15074  0885  0022               	movlb	2	; select bank2
 15075  0886  00A7               	movwf	(calculateCurrent@curr+3)^(0+256)
 15076  0887  0021               	movlb	1	; select bank1
 15077  0888  0851               	movf	(?___fldiv+2)^(0+128),w
 15078  0889  0022               	movlb	2	; select bank2
 15079  088A  00A6               	movwf	(calculateCurrent@curr+2)^(0+256)
 15080  088B  0021               	movlb	1	; select bank1
 15081  088C  0850               	movf	(?___fldiv+1)^(0+128),w
 15082  088D  0022               	movlb	2	; select bank2
 15083  088E  00A5               	movwf	(calculateCurrent@curr+1)^(0+256)
 15084  088F  0021               	movlb	1	; select bank1
 15085  0890  084F               	movf	?___fldiv^(0+128),w
 15086  0891  0022               	movlb	2	; select bank2
 15087  0892  00A4               	movwf	calculateCurrent@curr^(0+256)
 15088                           
 15089                           ;adc.c: 20: if(curr < 0){
 15090  0893  0827               	movf	(calculateCurrent@curr+3)^(0+256),w
 15091  0894  00F5               	movwf	___flge@ff1+3
 15092  0895  0826               	movf	(calculateCurrent@curr+2)^(0+256),w
 15093  0896  00F4               	movwf	___flge@ff1+2
 15094  0897  0825               	movf	(calculateCurrent@curr+1)^(0+256),w
 15095  0898  00F3               	movwf	___flge@ff1+1
 15096  0899  0824               	movf	calculateCurrent@curr^(0+256),w
 15097  089A  00F2               	movwf	___flge@ff1
 15098  089B  3000               	movlw	0
 15099  089C  00F9               	movwf	___flge@ff2+3
 15100  089D  3000               	movlw	0
 15101  089E  00F8               	movwf	___flge@ff2+2
 15102  089F  3000               	movlw	0
 15103  08A0  00F7               	movwf	___flge@ff2+1
 15104  08A1  3000               	movlw	0
 15105  08A2  00F6               	movwf	___flge@ff2
 15106  08A3  31A7  2766  3188   	fcall	___flge
 15107  08A6  1803               	btfsc	3,0
 15108  08A7  28D3               	goto	l6571
 15109                           
 15110                           ;adc.c: 21: curr * = -1.0;
 15111  08A8  30BF               	movlw	191
 15112  08A9  0020               	movlb	0	; select bank0
 15113  08AA  00BB               	movwf	___flmul@b+3
 15114  08AB  3080               	movlw	128
 15115  08AC  00BA               	movwf	___flmul@b+2
 15116  08AD  3000               	movlw	0
 15117  08AE  00B9               	movwf	___flmul@b+1
 15118  08AF  3000               	movlw	0
 15119  08B0  00B8               	movwf	___flmul@b
 15120  08B1  0022               	movlb	2	; select bank2
 15121  08B2  0827               	movf	(calculateCurrent@curr+3)^(0+256),w
 15122  08B3  0020               	movlb	0	; select bank0
 15123  08B4  00BF               	movwf	___flmul@a+3
 15124  08B5  0022               	movlb	2	; select bank2
 15125  08B6  0826               	movf	(calculateCurrent@curr+2)^(0+256),w
 15126  08B7  0020               	movlb	0	; select bank0
 15127  08B8  00BE               	movwf	___flmul@a+2
 15128  08B9  0022               	movlb	2	; select bank2
 15129  08BA  0825               	movf	(calculateCurrent@curr+1)^(0+256),w
 15130  08BB  0020               	movlb	0	; select bank0
 15131  08BC  00BD               	movwf	___flmul@a+1
 15132  08BD  0022               	movlb	2	; select bank2
 15133  08BE  0824               	movf	calculateCurrent@curr^(0+256),w
 15134  08BF  0020               	movlb	0	; select bank0
 15135  08C0  00BC               	movwf	___flmul@a
 15136  08C1  3188  20E4         	fcall	___flmul
 15137  08C3  0020               	movlb	0	; select bank0
 15138  08C4  083B               	movf	?___flmul+3,w
 15139  08C5  0022               	movlb	2	; select bank2
 15140  08C6  00A7               	movwf	(calculateCurrent@curr+3)^(0+256)
 15141  08C7  0020               	movlb	0	; select bank0
 15142  08C8  083A               	movf	?___flmul+2,w
 15143  08C9  0022               	movlb	2	; select bank2
 15144  08CA  00A6               	movwf	(calculateCurrent@curr+2)^(0+256)
 15145  08CB  0020               	movlb	0	; select bank0
 15146  08CC  0839               	movf	?___flmul+1,w
 15147  08CD  0022               	movlb	2	; select bank2
 15148  08CE  00A5               	movwf	(calculateCurrent@curr+1)^(0+256)
 15149  08CF  0020               	movlb	0	; select bank0
 15150  08D0  0838               	movf	?___flmul,w
 15151  08D1  0022               	movlb	2	; select bank2
 15152  08D2  00A4               	movwf	calculateCurrent@curr^(0+256)
 15153  08D3                     l6571:	
 15154                           
 15155                           ;adc.c: 22: }
 15156                           ;adc.c: 23: return curr;
 15157  08D3  0022               	movlb	2	; select bank2
 15158  08D4  0827               	movf	(calculateCurrent@curr+3)^(0+256),w
 15159  08D5  0021               	movlb	1	; select bank1
 15160  08D6  00EC               	movwf	(?_calculateCurrent+3)^(0+128)
 15161  08D7  0022               	movlb	2	; select bank2
 15162  08D8  0826               	movf	(calculateCurrent@curr+2)^(0+256),w
 15163  08D9  0021               	movlb	1	; select bank1
 15164  08DA  00EB               	movwf	(?_calculateCurrent+2)^(0+128)
 15165  08DB  0022               	movlb	2	; select bank2
 15166  08DC  0825               	movf	(calculateCurrent@curr+1)^(0+256),w
 15167  08DD  0021               	movlb	1	; select bank1
 15168  08DE  00EA               	movwf	(?_calculateCurrent+1)^(0+128)
 15169  08DF  0022               	movlb	2	; select bank2
 15170  08E0  0824               	movf	calculateCurrent@curr^(0+256),w
 15171  08E1  0021               	movlb	1	; select bank1
 15172  08E2  00E9               	movwf	?_calculateCurrent^(0+128)
 15173  08E3  0008               	return
 15174  08E4                     __end_of_calculateCurrent:	
 15175                           
 15176                           	psect	text40
 15177  2F89                     __ptext40:	
 15178 ;; *************** function ___flneg *****************
 15179 ;; Defined at:
 15180 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;  f1              4   50[BANK0 ] float 
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;		None
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  4   50[BANK0 ] float 
 15187 ;; Registers used:
 15188 ;;		wreg
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/0
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15194 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15197 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15198 ;;Total ram usage:        4 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; Hardware stack levels required when called:    2
 15201 ;; This function calls:
 15202 ;;		Nothing
 15203 ;; This function is called by:
 15204 ;;		_calculateTemp
 15205 ;;		_calculateCurrent
 15206 ;;		_sprintf
 15207 ;; This function uses a non-reentrant model
 15208 ;;
 15209                           
 15210                           
 15211                           ;psect for function ___flneg
 15212  2F89                     ___flneg:	
 15213                           
 15214                           ;incstack = 0
 15215                           ; Regs used in ___flneg: [wreg]
 15216  2F89  0020               	movlb	0	; select bank0
 15217  2F8A  0855               	movf	___flneg@f1+3,w
 15218  2F8B  0454               	iorwf	___flneg@f1+2,w
 15219  2F8C  0453               	iorwf	___flneg@f1+1,w
 15220  2F8D  0452               	iorwf	___flneg@f1,w
 15221  2F8E  1903               	skipnz
 15222  2F8F  0008               	return
 15223  2F90  3080               	movlw	128
 15224  2F91  06D5               	xorwf	___flneg@f1+3,f
 15225  2F92  0008               	return
 15226  2F93                     __end_of___flneg:	
 15227                           
 15228                           	psect	text41
 15229  08E4                     __ptext41:	
 15230 ;; *************** function ___flmul *****************
 15231 ;; Defined at:
 15232 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 15233 ;; Parameters:    Size  Location     Type
 15234 ;;  b               4   24[BANK0 ] float 
 15235 ;;  a               4   28[BANK0 ] float 
 15236 ;; Auto vars:     Size  Location     Type
 15237 ;;  prod            4   44[BANK0 ] struct .
 15238 ;;  grs             4   39[BANK0 ] unsigned long 
 15239 ;;  temp            2   48[BANK0 ] struct .
 15240 ;;  bexp            1   43[BANK0 ] unsigned char 
 15241 ;;  aexp            1   38[BANK0 ] unsigned char 
 15242 ;;  sign            1   37[BANK0 ] unsigned char 
 15243 ;; Return value:  Size  Location     Type
 15244 ;;                  4   24[BANK0 ] unsigned char 
 15245 ;; Registers used:
 15246 ;;		wreg, status,2, status,0, pclath, cstack
 15247 ;; Tracked objects:
 15248 ;;		On entry : 0/0
 15249 ;;		On exit  : 0/0
 15250 ;;		Unchanged: 0/0
 15251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15252 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15253 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15254 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15255 ;;      Totals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15256 ;;Total ram usage:       26 bytes
 15257 ;; Hardware stack levels used:    1
 15258 ;; Hardware stack levels required when called:    3
 15259 ;; This function calls:
 15260 ;;		__Umul8_16
 15261 ;; This function is called by:
 15262 ;;		_startUp
 15263 ;;		_calculateTemp
 15264 ;;		_calculateCurrent
 15265 ;;		_measureVoltages
 15266 ;;		_fround
 15267 ;;		_scale
 15268 ;;		_sprintf
 15269 ;;		_log
 15270 ;;		_eval_poly
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           
 15275                           ;psect for function ___flmul
 15276  08E4                     ___flmul:	
 15277                           
 15278                           ;incstack = 0
 15279                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
 15280  08E4  0020               	movlb	0	; select bank0
 15281  08E5  083B               	movf	___flmul@b+3,w
 15282  08E6  3980               	andlw	128
 15283  08E7  00C0               	movwf	??___flmul
 15284  08E8  0840               	movf	??___flmul,w
 15285  08E9  00C5               	movwf	___flmul@sign
 15286  08EA  353B               	lslf	___flmul@b+3,w
 15287  08EB  00C0               	movwf	??___flmul
 15288  08EC  0840               	movf	??___flmul,w
 15289  08ED  00CB               	movwf	___flmul@bexp
 15290  08EE  1BBA               	btfsc	___flmul@b+2,7
 15291  08EF  144B               	bsf	___flmul@bexp,0
 15292  08F0  084B               	movf	___flmul@bexp,w
 15293  08F1  1903               	btfsc	3,2
 15294  08F2  2900               	goto	l5895
 15295  08F3  0A4B               	incf	___flmul@bexp,w
 15296  08F4  1D03               	btfss	3,2
 15297  08F5  28FE               	goto	l5893
 15298  08F6  3000               	movlw	0
 15299  08F7  00BB               	movwf	___flmul@b+3
 15300  08F8  3000               	movlw	0
 15301  08F9  00BA               	movwf	___flmul@b+2
 15302  08FA  3000               	movlw	0
 15303  08FB  00B9               	movwf	___flmul@b+1
 15304  08FC  3000               	movlw	0
 15305  08FD  00B8               	movwf	___flmul@b
 15306  08FE                     l5893:	
 15307  08FE  17BA               	bsf	___flmul@b+2,7
 15308  08FF  2908               	goto	l5897
 15309  0900                     l5895:	
 15310  0900  3000               	movlw	0
 15311  0901  00BB               	movwf	___flmul@b+3
 15312  0902  3000               	movlw	0
 15313  0903  00BA               	movwf	___flmul@b+2
 15314  0904  3000               	movlw	0
 15315  0905  00B9               	movwf	___flmul@b+1
 15316  0906  3000               	movlw	0
 15317  0907  00B8               	movwf	___flmul@b
 15318  0908                     l5897:	
 15319  0908  083F               	movf	___flmul@a+3,w
 15320  0909  3980               	andlw	128
 15321  090A  00C0               	movwf	??___flmul
 15322  090B  0840               	movf	??___flmul,w
 15323  090C  06C5               	xorwf	___flmul@sign,f
 15324  090D  353F               	lslf	___flmul@a+3,w
 15325  090E  00C0               	movwf	??___flmul
 15326  090F  0840               	movf	??___flmul,w
 15327  0910  00C6               	movwf	___flmul@aexp
 15328  0911  1BBE               	btfsc	___flmul@a+2,7
 15329  0912  1446               	bsf	___flmul@aexp,0
 15330  0913  0846               	movf	___flmul@aexp,w
 15331  0914  1903               	btfsc	3,2
 15332  0915  2923               	goto	l5913
 15333  0916  0A46               	incf	___flmul@aexp,w
 15334  0917  1D03               	btfss	3,2
 15335  0918  2921               	goto	l5911
 15336  0919  3000               	movlw	0
 15337  091A  00BF               	movwf	___flmul@a+3
 15338  091B  3000               	movlw	0
 15339  091C  00BE               	movwf	___flmul@a+2
 15340  091D  3000               	movlw	0
 15341  091E  00BD               	movwf	___flmul@a+1
 15342  091F  3000               	movlw	0
 15343  0920  00BC               	movwf	___flmul@a
 15344  0921                     l5911:	
 15345  0921  17BE               	bsf	___flmul@a+2,7
 15346  0922  292B               	goto	l5915
 15347  0923                     l5913:	
 15348  0923  3000               	movlw	0
 15349  0924  00BF               	movwf	___flmul@a+3
 15350  0925  3000               	movlw	0
 15351  0926  00BE               	movwf	___flmul@a+2
 15352  0927  3000               	movlw	0
 15353  0928  00BD               	movwf	___flmul@a+1
 15354  0929  3000               	movlw	0
 15355  092A  00BC               	movwf	___flmul@a
 15356  092B                     l5915:	
 15357  092B  0846               	movf	___flmul@aexp,w
 15358  092C  1D03               	btfss	3,2
 15359  092D  084B               	movf	___flmul@bexp,w
 15360  092E  1D03               	btfss	3,2
 15361  092F  2939               	goto	l5923
 15362  0930  3000               	movlw	0
 15363  0931  00BB               	movwf	?___flmul+3
 15364  0932  3000               	movlw	0
 15365  0933  00BA               	movwf	?___flmul+2
 15366  0934  3000               	movlw	0
 15367  0935  00B9               	movwf	?___flmul+1
 15368  0936  3000               	movlw	0
 15369  0937  00B8               	movwf	?___flmul
 15370  0938  0008               	return
 15371  0939                     l5923:	
 15372  0939  0838               	movf	___flmul@b,w
 15373  093A  00C0               	movwf	??___flmul
 15374  093B  0840               	movf	??___flmul,w
 15375  093C  00F2               	movwf	__Umul8_16@multiplicand
 15376  093D  083E               	movf	___flmul@a+2,w
 15377  093E  31A0  20AF  3188   	fcall	__Umul8_16
 15378  0941  0873               	movf	?__Umul8_16+1,w
 15379  0942  0020               	movlb	0	; select bank0
 15380  0943  00D1               	movwf	___flmul@temp+1
 15381  0944  0872               	movf	?__Umul8_16,w
 15382  0945  00D0               	movwf	___flmul@temp
 15383  0946  0850               	movf	___flmul@temp,w
 15384  0947  00C0               	movwf	??___flmul
 15385  0948  01C1               	clrf	??___flmul+1
 15386  0949  01C2               	clrf	??___flmul+2
 15387  094A  01C3               	clrf	??___flmul+3
 15388  094B  0843               	movf	??___flmul+3,w
 15389  094C  00CA               	movwf	___flmul@grs+3
 15390  094D  0842               	movf	??___flmul+2,w
 15391  094E  00C9               	movwf	___flmul@grs+2
 15392  094F  0841               	movf	??___flmul+1,w
 15393  0950  00C8               	movwf	___flmul@grs+1
 15394  0951  0840               	movf	??___flmul,w
 15395  0952  00C7               	movwf	___flmul@grs
 15396  0953  0851               	movf	___flmul@temp+1,w
 15397  0954  00C0               	movwf	??___flmul
 15398  0955  01C1               	clrf	??___flmul+1
 15399  0956  01C2               	clrf	??___flmul+2
 15400  0957  01C3               	clrf	??___flmul+3
 15401  0958  0843               	movf	??___flmul+3,w
 15402  0959  00CF               	movwf	___flmul@prod+3
 15403  095A  0842               	movf	??___flmul+2,w
 15404  095B  00CE               	movwf	___flmul@prod+2
 15405  095C  0841               	movf	??___flmul+1,w
 15406  095D  00CD               	movwf	___flmul@prod+1
 15407  095E  0840               	movf	??___flmul,w
 15408  095F  00CC               	movwf	___flmul@prod
 15409  0960  0839               	movf	___flmul@b+1,w
 15410  0961  00C0               	movwf	??___flmul
 15411  0962  0840               	movf	??___flmul,w
 15412  0963  00F2               	movwf	__Umul8_16@multiplicand
 15413  0964  083D               	movf	___flmul@a+1,w
 15414  0965  31A0  20AF  3188   	fcall	__Umul8_16
 15415  0968  0873               	movf	?__Umul8_16+1,w
 15416  0969  0020               	movlb	0	; select bank0
 15417  096A  00D1               	movwf	___flmul@temp+1
 15418  096B  0872               	movf	?__Umul8_16,w
 15419  096C  00D0               	movwf	___flmul@temp
 15420  096D  0850               	movf	___flmul@temp,w
 15421  096E  00C0               	movwf	??___flmul
 15422  096F  01C1               	clrf	??___flmul+1
 15423  0970  01C2               	clrf	??___flmul+2
 15424  0971  01C3               	clrf	??___flmul+3
 15425  0972  0840               	movf	??___flmul,w
 15426  0973  07C7               	addwf	___flmul@grs,f
 15427  0974  0841               	movf	??___flmul+1,w
 15428  0975  3DC8               	addwfc	___flmul@grs+1,f
 15429  0976  0842               	movf	??___flmul+2,w
 15430  0977  3DC9               	addwfc	___flmul@grs+2,f
 15431  0978  0843               	movf	??___flmul+3,w
 15432  0979  3DCA               	addwfc	___flmul@grs+3,f
 15433  097A  0851               	movf	___flmul@temp+1,w
 15434  097B  00C0               	movwf	??___flmul
 15435  097C  01C1               	clrf	??___flmul+1
 15436  097D  01C2               	clrf	??___flmul+2
 15437  097E  01C3               	clrf	??___flmul+3
 15438  097F  0840               	movf	??___flmul,w
 15439  0980  07CC               	addwf	___flmul@prod,f
 15440  0981  0841               	movf	??___flmul+1,w
 15441  0982  3DCD               	addwfc	___flmul@prod+1,f
 15442  0983  0842               	movf	??___flmul+2,w
 15443  0984  3DCE               	addwfc	___flmul@prod+2,f
 15444  0985  0843               	movf	??___flmul+3,w
 15445  0986  3DCF               	addwfc	___flmul@prod+3,f
 15446  0987  083A               	movf	___flmul@b+2,w
 15447  0988  00C0               	movwf	??___flmul
 15448  0989  0840               	movf	??___flmul,w
 15449  098A  00F2               	movwf	__Umul8_16@multiplicand
 15450  098B  083C               	movf	___flmul@a,w
 15451  098C  31A0  20AF  3188   	fcall	__Umul8_16
 15452  098F  0873               	movf	?__Umul8_16+1,w
 15453  0990  0020               	movlb	0	; select bank0
 15454  0991  00D1               	movwf	___flmul@temp+1
 15455  0992  0872               	movf	?__Umul8_16,w
 15456  0993  00D0               	movwf	___flmul@temp
 15457  0994  0850               	movf	___flmul@temp,w
 15458  0995  00C0               	movwf	??___flmul
 15459  0996  01C1               	clrf	??___flmul+1
 15460  0997  01C2               	clrf	??___flmul+2
 15461  0998  01C3               	clrf	??___flmul+3
 15462  0999  0840               	movf	??___flmul,w
 15463  099A  07C7               	addwf	___flmul@grs,f
 15464  099B  0841               	movf	??___flmul+1,w
 15465  099C  3DC8               	addwfc	___flmul@grs+1,f
 15466  099D  0842               	movf	??___flmul+2,w
 15467  099E  3DC9               	addwfc	___flmul@grs+2,f
 15468  099F  0843               	movf	??___flmul+3,w
 15469  09A0  3DCA               	addwfc	___flmul@grs+3,f
 15470  09A1  0851               	movf	___flmul@temp+1,w
 15471  09A2  00C0               	movwf	??___flmul
 15472  09A3  01C1               	clrf	??___flmul+1
 15473  09A4  01C2               	clrf	??___flmul+2
 15474  09A5  01C3               	clrf	??___flmul+3
 15475  09A6  0840               	movf	??___flmul,w
 15476  09A7  07CC               	addwf	___flmul@prod,f
 15477  09A8  0841               	movf	??___flmul+1,w
 15478  09A9  3DCD               	addwfc	___flmul@prod+1,f
 15479  09AA  0842               	movf	??___flmul+2,w
 15480  09AB  3DCE               	addwfc	___flmul@prod+2,f
 15481  09AC  0843               	movf	??___flmul+3,w
 15482  09AD  3DCF               	addwfc	___flmul@prod+3,f
 15483  09AE  3008               	movlw	8
 15484  09AF                     u7965:	
 15485  09AF  35C7               	lslf	___flmul@grs,f
 15486  09B0  0DC8               	rlf	___flmul@grs+1,f
 15487  09B1  0DC9               	rlf	___flmul@grs+2,f
 15488  09B2  0DCA               	rlf	___flmul@grs+3,f
 15489  09B3  0B89               	decfsz	9,f
 15490  09B4  29AF               	goto	u7965
 15491  09B5  0839               	movf	___flmul@b+1,w
 15492  09B6  00C0               	movwf	??___flmul
 15493  09B7  0840               	movf	??___flmul,w
 15494  09B8  00F2               	movwf	__Umul8_16@multiplicand
 15495  09B9  083C               	movf	___flmul@a,w
 15496  09BA  31A0  20AF  3188   	fcall	__Umul8_16
 15497  09BD  0873               	movf	?__Umul8_16+1,w
 15498  09BE  0020               	movlb	0	; select bank0
 15499  09BF  00D1               	movwf	___flmul@temp+1
 15500  09C0  0872               	movf	?__Umul8_16,w
 15501  09C1  00D0               	movwf	___flmul@temp
 15502  09C2  0850               	movf	___flmul@temp,w
 15503  09C3  07C7               	addwf	___flmul@grs,f
 15504  09C4  0851               	movf	___flmul@temp+1,w
 15505  09C5  3DC8               	addwfc	___flmul@grs+1,f
 15506  09C6  3000               	movlw	0
 15507  09C7  3DC9               	addwfc	___flmul@grs+2,f
 15508  09C8  3DCA               	addwfc	___flmul@grs+3,f
 15509  09C9  0838               	movf	___flmul@b,w
 15510  09CA  00C0               	movwf	??___flmul
 15511  09CB  0840               	movf	??___flmul,w
 15512  09CC  00F2               	movwf	__Umul8_16@multiplicand
 15513  09CD  083D               	movf	___flmul@a+1,w
 15514  09CE  31A0  20AF  3188   	fcall	__Umul8_16
 15515  09D1  0873               	movf	?__Umul8_16+1,w
 15516  09D2  0020               	movlb	0	; select bank0
 15517  09D3  00D1               	movwf	___flmul@temp+1
 15518  09D4  0872               	movf	?__Umul8_16,w
 15519  09D5  00D0               	movwf	___flmul@temp
 15520  09D6  0850               	movf	___flmul@temp,w
 15521  09D7  07C7               	addwf	___flmul@grs,f
 15522  09D8  0851               	movf	___flmul@temp+1,w
 15523  09D9  3DC8               	addwfc	___flmul@grs+1,f
 15524  09DA  3000               	movlw	0
 15525  09DB  3DC9               	addwfc	___flmul@grs+2,f
 15526  09DC  3DCA               	addwfc	___flmul@grs+3,f
 15527  09DD  3008               	movlw	8
 15528  09DE                     u7975:	
 15529  09DE  35C7               	lslf	___flmul@grs,f
 15530  09DF  0DC8               	rlf	___flmul@grs+1,f
 15531  09E0  0DC9               	rlf	___flmul@grs+2,f
 15532  09E1  0DCA               	rlf	___flmul@grs+3,f
 15533  09E2  0B89               	decfsz	9,f
 15534  09E3  29DE               	goto	u7975
 15535  09E4  0838               	movf	___flmul@b,w
 15536  09E5  00C0               	movwf	??___flmul
 15537  09E6  0840               	movf	??___flmul,w
 15538  09E7  00F2               	movwf	__Umul8_16@multiplicand
 15539  09E8  083C               	movf	___flmul@a,w
 15540  09E9  31A0  20AF  3188   	fcall	__Umul8_16
 15541  09EC  0873               	movf	?__Umul8_16+1,w
 15542  09ED  0020               	movlb	0	; select bank0
 15543  09EE  00D1               	movwf	___flmul@temp+1
 15544  09EF  0872               	movf	?__Umul8_16,w
 15545  09F0  00D0               	movwf	___flmul@temp
 15546  09F1  0850               	movf	___flmul@temp,w
 15547  09F2  07C7               	addwf	___flmul@grs,f
 15548  09F3  0851               	movf	___flmul@temp+1,w
 15549  09F4  3DC8               	addwfc	___flmul@grs+1,f
 15550  09F5  3000               	movlw	0
 15551  09F6  3DC9               	addwfc	___flmul@grs+2,f
 15552  09F7  3DCA               	addwfc	___flmul@grs+3,f
 15553  09F8  0839               	movf	___flmul@b+1,w
 15554  09F9  00C0               	movwf	??___flmul
 15555  09FA  0840               	movf	??___flmul,w
 15556  09FB  00F2               	movwf	__Umul8_16@multiplicand
 15557  09FC  083E               	movf	___flmul@a+2,w
 15558  09FD  31A0  20AF  3188   	fcall	__Umul8_16
 15559  0A00  0873               	movf	?__Umul8_16+1,w
 15560  0A01  0020               	movlb	0	; select bank0
 15561  0A02  00D1               	movwf	___flmul@temp+1
 15562  0A03  0872               	movf	?__Umul8_16,w
 15563  0A04  00D0               	movwf	___flmul@temp
 15564  0A05  0850               	movf	___flmul@temp,w
 15565  0A06  07CC               	addwf	___flmul@prod,f
 15566  0A07  0851               	movf	___flmul@temp+1,w
 15567  0A08  3DCD               	addwfc	___flmul@prod+1,f
 15568  0A09  3000               	movlw	0
 15569  0A0A  3DCE               	addwfc	___flmul@prod+2,f
 15570  0A0B  3DCF               	addwfc	___flmul@prod+3,f
 15571  0A0C  083A               	movf	___flmul@b+2,w
 15572  0A0D  00C0               	movwf	??___flmul
 15573  0A0E  0840               	movf	??___flmul,w
 15574  0A0F  00F2               	movwf	__Umul8_16@multiplicand
 15575  0A10  083D               	movf	___flmul@a+1,w
 15576  0A11  31A0  20AF  3188   	fcall	__Umul8_16
 15577  0A14  0873               	movf	?__Umul8_16+1,w
 15578  0A15  0020               	movlb	0	; select bank0
 15579  0A16  00D1               	movwf	___flmul@temp+1
 15580  0A17  0872               	movf	?__Umul8_16,w
 15581  0A18  00D0               	movwf	___flmul@temp
 15582  0A19  0850               	movf	___flmul@temp,w
 15583  0A1A  07CC               	addwf	___flmul@prod,f
 15584  0A1B  0851               	movf	___flmul@temp+1,w
 15585  0A1C  3DCD               	addwfc	___flmul@prod+1,f
 15586  0A1D  3000               	movlw	0
 15587  0A1E  3DCE               	addwfc	___flmul@prod+2,f
 15588  0A1F  3DCF               	addwfc	___flmul@prod+3,f
 15589  0A20  083A               	movf	___flmul@b+2,w
 15590  0A21  00C0               	movwf	??___flmul
 15591  0A22  0840               	movf	??___flmul,w
 15592  0A23  00F2               	movwf	__Umul8_16@multiplicand
 15593  0A24  083E               	movf	___flmul@a+2,w
 15594  0A25  31A0  20AF  3188   	fcall	__Umul8_16
 15595  0A28  0873               	movf	?__Umul8_16+1,w
 15596  0A29  0020               	movlb	0	; select bank0
 15597  0A2A  00D1               	movwf	___flmul@temp+1
 15598  0A2B  0872               	movf	?__Umul8_16,w
 15599  0A2C  00D0               	movwf	___flmul@temp
 15600  0A2D  0850               	movf	___flmul@temp,w
 15601  0A2E  00C0               	movwf	??___flmul
 15602  0A2F  0851               	movf	___flmul@temp+1,w
 15603  0A30  00C1               	movwf	??___flmul+1
 15604  0A31  01C2               	clrf	??___flmul+2
 15605  0A32  01C3               	clrf	??___flmul+3
 15606  0A33  3008               	movlw	8
 15607  0A34                     u7985:	
 15608  0A34  35C0               	lslf	??___flmul,f
 15609  0A35  0DC1               	rlf	??___flmul+1,f
 15610  0A36  0DC2               	rlf	??___flmul+2,f
 15611  0A37  0DC3               	rlf	??___flmul+3,f
 15612  0A38  0B89               	decfsz	9,f
 15613  0A39  2A34               	goto	u7985
 15614  0A3A  0840               	movf	??___flmul,w
 15615  0A3B  07CC               	addwf	___flmul@prod,f
 15616  0A3C  0841               	movf	??___flmul+1,w
 15617  0A3D  3DCD               	addwfc	___flmul@prod+1,f
 15618  0A3E  0842               	movf	??___flmul+2,w
 15619  0A3F  3DCE               	addwfc	___flmul@prod+2,f
 15620  0A40  0843               	movf	??___flmul+3,w
 15621  0A41  3DCF               	addwfc	___flmul@prod+3,f
 15622  0A42  0847               	movf	___flmul@grs,w
 15623  0A43  00C0               	movwf	??___flmul
 15624  0A44  0848               	movf	___flmul@grs+1,w
 15625  0A45  00C1               	movwf	??___flmul+1
 15626  0A46  0849               	movf	___flmul@grs+2,w
 15627  0A47  00C2               	movwf	??___flmul+2
 15628  0A48  084A               	movf	___flmul@grs+3,w
 15629  0A49  00C3               	movwf	??___flmul+3
 15630  0A4A  3018               	movlw	24
 15631  0A4B                     u7995:	
 15632  0A4B  36C3               	lsrf	??___flmul+3,f
 15633  0A4C  0CC2               	rrf	??___flmul+2,f
 15634  0A4D  0CC1               	rrf	??___flmul+1,f
 15635  0A4E  0CC0               	rrf	??___flmul,f
 15636  0A4F  0B89               	decfsz	9,f
 15637  0A50  2A4B               	goto	u7995
 15638  0A51  0840               	movf	??___flmul,w
 15639  0A52  07CC               	addwf	___flmul@prod,f
 15640  0A53  0841               	movf	??___flmul+1,w
 15641  0A54  3DCD               	addwfc	___flmul@prod+1,f
 15642  0A55  0842               	movf	??___flmul+2,w
 15643  0A56  3DCE               	addwfc	___flmul@prod+2,f
 15644  0A57  0843               	movf	??___flmul+3,w
 15645  0A58  3DCF               	addwfc	___flmul@prod+3,f
 15646  0A59  3008               	movlw	8
 15647  0A5A                     u8005:	
 15648  0A5A  35C7               	lslf	___flmul@grs,f
 15649  0A5B  0DC8               	rlf	___flmul@grs+1,f
 15650  0A5C  0DC9               	rlf	___flmul@grs+2,f
 15651  0A5D  0DCA               	rlf	___flmul@grs+3,f
 15652  0A5E  0B89               	decfsz	9,f
 15653  0A5F  2A5A               	goto	u8005
 15654  0A60  084B               	movf	___flmul@bexp,w
 15655  0A61  0746               	addwf	___flmul@aexp,w
 15656  0A62  00C0               	movwf	??___flmul
 15657  0A63  01C1               	clrf	??___flmul+1
 15658  0A64  0DC1               	rlf	??___flmul+1,f
 15659  0A65  0840               	movf	??___flmul,w
 15660  0A66  3E82               	addlw	130
 15661  0A67  00D0               	movwf	___flmul@temp
 15662  0A68  30FF               	movlw	255
 15663  0A69  3D41               	addwfc	??___flmul+1,w
 15664  0A6A  00D1               	movwf	___flmul@temp+1
 15665  0A6B                     l5975:	
 15666  0A6B  1BCE               	btfsc	___flmul@prod+2,7
 15667  0A6C  2A82               	goto	l5977
 15668  0A6D  3001               	movlw	1
 15669  0A6E                     u8015:	
 15670  0A6E  35CC               	lslf	___flmul@prod,f
 15671  0A6F  0DCD               	rlf	___flmul@prod+1,f
 15672  0A70  0DCE               	rlf	___flmul@prod+2,f
 15673  0A71  0DCF               	rlf	___flmul@prod+3,f
 15674  0A72  0B89               	decfsz	9,f
 15675  0A73  2A6E               	goto	u8015
 15676  0A74  1BCA               	btfsc	___flmul@grs+3,7
 15677  0A75  144C               	bsf	___flmul@prod,0
 15678  0A76  3001               	movlw	1
 15679  0A77                     u8035:	
 15680  0A77  35C7               	lslf	___flmul@grs,f
 15681  0A78  0DC8               	rlf	___flmul@grs+1,f
 15682  0A79  0DC9               	rlf	___flmul@grs+2,f
 15683  0A7A  0DCA               	rlf	___flmul@grs+3,f
 15684  0A7B  0B89               	decfsz	9,f
 15685  0A7C  2A77               	goto	u8035
 15686  0A7D  30FF               	movlw	255
 15687  0A7E  07D0               	addwf	___flmul@temp,f
 15688  0A7F  30FF               	movlw	255
 15689  0A80  3DD1               	addwfc	___flmul@temp+1,f
 15690  0A81  2A6B               	goto	l5975
 15691  0A82                     l5977:	
 15692  0A82  01C6               	clrf	___flmul@aexp
 15693  0A83  1FCA               	btfss	___flmul@grs+3,7
 15694  0A84  2A9B               	goto	l5987
 15695  0A85  30FF               	movlw	255
 15696  0A86  0547               	andwf	___flmul@grs,w
 15697  0A87  00C0               	movwf	??___flmul
 15698  0A88  30FF               	movlw	255
 15699  0A89  0548               	andwf	___flmul@grs+1,w
 15700  0A8A  00C1               	movwf	??___flmul+1
 15701  0A8B  30FF               	movlw	255
 15702  0A8C  0549               	andwf	___flmul@grs+2,w
 15703  0A8D  00C2               	movwf	??___flmul+2
 15704  0A8E  307F               	movlw	127
 15705  0A8F  054A               	andwf	___flmul@grs+3,w
 15706  0A90  00C3               	movwf	??___flmul+3
 15707  0A91  0843               	movf	??___flmul+3,w
 15708  0A92  0442               	iorwf	??___flmul+2,w
 15709  0A93  0441               	iorwf	??___flmul+1,w
 15710  0A94  0440               	iorwf	??___flmul,w
 15711  0A95  1D03               	btfss	3,2
 15712  0A96  2A99               	goto	l5985
 15713  0A97  1C4C               	btfss	___flmul@prod,0
 15714  0A98  2A9B               	goto	l5987
 15715  0A99                     l5985:	
 15716  0A99  01C6               	clrf	___flmul@aexp
 15717  0A9A  0AC6               	incf	___flmul@aexp,f
 15718  0A9B                     l5987:	
 15719  0A9B  0846               	movf	___flmul@aexp,w
 15720  0A9C  1903               	btfsc	3,2
 15721  0A9D  2AC4               	goto	l5997
 15722  0A9E  3001               	movlw	1
 15723  0A9F  07CC               	addwf	___flmul@prod,f
 15724  0AA0  3000               	movlw	0
 15725  0AA1  3DCD               	addwfc	___flmul@prod+1,f
 15726  0AA2  3000               	movlw	0
 15727  0AA3  3DCE               	addwfc	___flmul@prod+2,f
 15728  0AA4  3000               	movlw	0
 15729  0AA5  3DCF               	addwfc	___flmul@prod+3,f
 15730  0AA6  1C4F               	btfss	___flmul@prod+3,0
 15731  0AA7  2AC4               	goto	l5997
 15732  0AA8  084C               	movf	___flmul@prod,w
 15733  0AA9  00C0               	movwf	??___flmul
 15734  0AAA  084D               	movf	___flmul@prod+1,w
 15735  0AAB  00C1               	movwf	??___flmul+1
 15736  0AAC  084E               	movf	___flmul@prod+2,w
 15737  0AAD  00C2               	movwf	??___flmul+2
 15738  0AAE  084F               	movf	___flmul@prod+3,w
 15739  0AAF  00C3               	movwf	??___flmul+3
 15740  0AB0  3001               	movlw	1
 15741  0AB1  00C4               	movwf	??___flmul+4
 15742  0AB2                     u8105:	
 15743  0AB2  37C3               	asrf	??___flmul+3,f
 15744  0AB3  0CC2               	rrf	??___flmul+2,f
 15745  0AB4  0CC1               	rrf	??___flmul+1,f
 15746  0AB5  0CC0               	rrf	??___flmul,f
 15747  0AB6  0BC4               	decfsz	??___flmul+4,f
 15748  0AB7  2AB2               	goto	u8105
 15749  0AB8  0843               	movf	??___flmul+3,w
 15750  0AB9  00CF               	movwf	___flmul@prod+3
 15751  0ABA  0842               	movf	??___flmul+2,w
 15752  0ABB  00CE               	movwf	___flmul@prod+2
 15753  0ABC  0841               	movf	??___flmul+1,w
 15754  0ABD  00CD               	movwf	___flmul@prod+1
 15755  0ABE  0840               	movf	??___flmul,w
 15756  0ABF  00CC               	movwf	___flmul@prod
 15757  0AC0  3001               	movlw	1
 15758  0AC1  07D0               	addwf	___flmul@temp,f
 15759  0AC2  3000               	movlw	0
 15760  0AC3  3DD1               	addwfc	___flmul@temp+1,f
 15761  0AC4                     l5997:	
 15762  0AC4  0851               	movf	___flmul@temp+1,w
 15763  0AC5  3A80               	xorlw	128
 15764  0AC6  00C0               	movwf	??___flmul
 15765  0AC7  3080               	movlw	128
 15766  0AC8  0240               	subwf	??___flmul,w
 15767  0AC9  1D03               	skipz
 15768  0ACA  2ACD               	goto	u8115
 15769  0ACB  30FF               	movlw	255
 15770  0ACC  0250               	subwf	___flmul@temp,w
 15771  0ACD                     u8115:	
 15772  0ACD  1C03               	skipc
 15773  0ACE  2AD9               	goto	l6001
 15774  0ACF  307F               	movlw	127
 15775  0AD0  0020               	movlb	0	; select bank0
 15776  0AD1  00CF               	movwf	___flmul@prod+3
 15777  0AD2  3080               	movlw	128
 15778  0AD3  00CE               	movwf	___flmul@prod+2
 15779  0AD4  3000               	movlw	0
 15780  0AD5  00CD               	movwf	___flmul@prod+1
 15781  0AD6  3000               	movlw	0
 15782  0AD7  00CC               	movwf	___flmul@prod
 15783  0AD8  2B03               	goto	l1215
 15784  0AD9                     l6001:	
 15785  0AD9  0020               	movlb	0	; select bank0
 15786  0ADA  0851               	movf	___flmul@temp+1,w
 15787  0ADB  3A80               	xorlw	128
 15788  0ADC  00C0               	movwf	??___flmul
 15789  0ADD  3080               	movlw	128
 15790  0ADE  0240               	subwf	??___flmul,w
 15791  0ADF  1D03               	skipz
 15792  0AE0  2AE3               	goto	u8125
 15793  0AE1  3001               	movlw	1
 15794  0AE2  0250               	subwf	___flmul@temp,w
 15795  0AE3                     u8125:	
 15796  0AE3  1803               	skipnc
 15797  0AE4  2AF0               	goto	l6007
 15798  0AE5  3000               	movlw	0
 15799  0AE6  0020               	movlb	0	; select bank0
 15800  0AE7  00CF               	movwf	___flmul@prod+3
 15801  0AE8  3000               	movlw	0
 15802  0AE9  00CE               	movwf	___flmul@prod+2
 15803  0AEA  3000               	movlw	0
 15804  0AEB  00CD               	movwf	___flmul@prod+1
 15805  0AEC  3000               	movlw	0
 15806  0AED  00CC               	movwf	___flmul@prod
 15807  0AEE  01C5               	clrf	___flmul@sign
 15808  0AEF  2B03               	goto	l1215
 15809  0AF0                     l6007:	
 15810  0AF0  0020               	movlb	0	; select bank0
 15811  0AF1  0850               	movf	___flmul@temp,w
 15812  0AF2  00C0               	movwf	??___flmul
 15813  0AF3  0840               	movf	??___flmul,w
 15814  0AF4  00CB               	movwf	___flmul@bexp
 15815  0AF5  30FF               	movlw	255
 15816  0AF6  05CC               	andwf	___flmul@prod,f
 15817  0AF7  30FF               	movlw	255
 15818  0AF8  05CD               	andwf	___flmul@prod+1,f
 15819  0AF9  307F               	movlw	127
 15820  0AFA  05CE               	andwf	___flmul@prod+2,f
 15821  0AFB  3000               	movlw	0
 15822  0AFC  05CF               	andwf	___flmul@prod+3,f
 15823  0AFD  184B               	btfsc	___flmul@bexp,0
 15824  0AFE  17CE               	bsf	___flmul@prod+2,7
 15825  0AFF  364B               	lsrf	___flmul@bexp,w
 15826  0B00  00C0               	movwf	??___flmul
 15827  0B01  0840               	movf	??___flmul,w
 15828  0B02  00CF               	movwf	___flmul@prod+3
 15829  0B03                     l1215:	
 15830  0B03  0845               	movf	___flmul@sign,w
 15831  0B04  00C0               	movwf	??___flmul
 15832  0B05  0840               	movf	??___flmul,w
 15833  0B06  04CF               	iorwf	___flmul@prod+3,f
 15834  0B07  084F               	movf	___flmul@prod+3,w
 15835  0B08  00BB               	movwf	?___flmul+3
 15836  0B09  084E               	movf	___flmul@prod+2,w
 15837  0B0A  00BA               	movwf	?___flmul+2
 15838  0B0B  084D               	movf	___flmul@prod+1,w
 15839  0B0C  00B9               	movwf	?___flmul+1
 15840  0B0D  084C               	movf	___flmul@prod,w
 15841  0B0E  00B8               	movwf	?___flmul
 15842  0B0F  0008               	return
 15843  0B10                     __end_of___flmul:	
 15844                           
 15845                           	psect	text42
 15846  20AF                     __ptext42:	
 15847 ;; *************** function __Umul8_16 *****************
 15848 ;; Defined at:
 15849 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul8_16.c"
 15850 ;; Parameters:    Size  Location     Type
 15851 ;;  multiplier      1    wreg     unsigned char 
 15852 ;;  multiplicand    1    2[COMMON] unsigned char 
 15853 ;; Auto vars:     Size  Location     Type
 15854 ;;  multiplier      1    4[BANK0 ] unsigned char 
 15855 ;;  word_mpld       2    2[BANK0 ] unsigned int 
 15856 ;;  product         2    0[BANK0 ] unsigned int 
 15857 ;; Return value:  Size  Location     Type
 15858 ;;                  2    2[COMMON] unsigned int 
 15859 ;; Registers used:
 15860 ;;		wreg, status,2, status,0
 15861 ;; Tracked objects:
 15862 ;;		On entry : 0/0
 15863 ;;		On exit  : 0/0
 15864 ;;		Unchanged: 0/0
 15865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15866 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15867 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15868 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15869 ;;      Totals:         4       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15870 ;;Total ram usage:        9 bytes
 15871 ;; Hardware stack levels used:    1
 15872 ;; Hardware stack levels required when called:    2
 15873 ;; This function calls:
 15874 ;;		Nothing
 15875 ;; This function is called by:
 15876 ;;		___flmul
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           
 15881                           ;psect for function __Umul8_16
 15882  20AF                     __Umul8_16:	
 15883                           
 15884                           ;incstack = 0
 15885                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 15886                           ;__Umul8_16@multiplier stored from wreg
 15887  20AF  0020               	movlb	0	; select bank0
 15888  20B0  00A4               	movwf	__Umul8_16@multiplier
 15889  20B1  01A0               	clrf	__Umul8_16@product
 15890  20B2  01A1               	clrf	__Umul8_16@product+1
 15891  20B3  0872               	movf	__Umul8_16@multiplicand,w
 15892  20B4  00F4               	movwf	??__Umul8_16
 15893  20B5  01F5               	clrf	??__Umul8_16+1
 15894  20B6  0874               	movf	??__Umul8_16,w
 15895  20B7  00A2               	movwf	__Umul8_16@word_mpld
 15896  20B8  0875               	movf	??__Umul8_16+1,w
 15897  20B9  00A3               	movwf	__Umul8_16@word_mpld+1
 15898  20BA                     l5671:	
 15899  20BA  1C24               	btfss	__Umul8_16@multiplier,0
 15900  20BB  28C0               	goto	l1241
 15901  20BC  0822               	movf	__Umul8_16@word_mpld,w
 15902  20BD  07A0               	addwf	__Umul8_16@product,f
 15903  20BE  0823               	movf	__Umul8_16@word_mpld+1,w
 15904  20BF  3DA1               	addwfc	__Umul8_16@product+1,f
 15905  20C0                     l1241:	
 15906  20C0  3001               	movlw	1
 15907  20C1                     u7425:	
 15908  20C1  35A2               	lslf	__Umul8_16@word_mpld,f
 15909  20C2  0DA3               	rlf	__Umul8_16@word_mpld+1,f
 15910  20C3  0B89               	decfsz	9,f
 15911  20C4  28C1               	goto	u7425
 15912  20C5  1003               	clrc
 15913  20C6  0CA4               	rrf	__Umul8_16@multiplier,f
 15914  20C7  0824               	movf	__Umul8_16@multiplier,w
 15915  20C8  1D03               	btfss	3,2
 15916  20C9  28BA               	goto	l5671
 15917  20CA  0821               	movf	__Umul8_16@product+1,w
 15918  20CB  00F3               	movwf	?__Umul8_16+1
 15919  20CC  0820               	movf	__Umul8_16@product,w
 15920  20CD  00F2               	movwf	?__Umul8_16
 15921  20CE  0008               	return
 15922  20CF                     __end_of__Umul8_16:	
 15923                           
 15924                           	psect	text43
 15925  2766                     __ptext43:	
 15926 ;; *************** function ___flge *****************
 15927 ;; Defined at:
 15928 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 15929 ;; Parameters:    Size  Location     Type
 15930 ;;  ff1             4    2[COMMON] unsigned int 
 15931 ;;  ff2             4    6[COMMON] unsigned int 
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;		None               void
 15936 ;; Registers used:
 15937 ;;		wreg, status,2, status,0
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15943 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15945 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15946 ;;      Totals:         8       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15947 ;;Total ram usage:       16 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:    2
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_startUp
 15954 ;;		_calculateCurrent
 15955 ;;		_measureVoltages
 15956 ;;		_sprintf
 15957 ;;		_log
 15958 ;; This function uses a non-reentrant model
 15959 ;;
 15960                           
 15961                           
 15962                           ;psect for function ___flge
 15963  2766                     ___flge:	
 15964                           
 15965                           ;incstack = 0
 15966                           ; Regs used in ___flge: [wreg+status,2+status,0]
 15967  2766  3000               	movlw	0
 15968  2767  0572               	andwf	___flge@ff1,w
 15969  2768  0020               	movlb	0	; select bank0
 15970  2769  00A0               	movwf	??___flge
 15971  276A  3000               	movlw	0
 15972  276B  0573               	andwf	___flge@ff1+1,w
 15973  276C  00A1               	movwf	??___flge+1
 15974  276D  3080               	movlw	128
 15975  276E  0574               	andwf	___flge@ff1+2,w
 15976  276F  00A2               	movwf	??___flge+2
 15977  2770  307F               	movlw	127
 15978  2771  0575               	andwf	___flge@ff1+3,w
 15979  2772  00A3               	movwf	??___flge+3
 15980  2773  0823               	movf	??___flge+3,w
 15981  2774  0422               	iorwf	??___flge+2,w
 15982  2775  0421               	iorwf	??___flge+1,w
 15983  2776  0420               	iorwf	??___flge,w
 15984  2777  1D03               	skipz
 15985  2778  2F81               	goto	l956
 15986  2779  3000               	movlw	0
 15987  277A  00F5               	movwf	___flge@ff1+3
 15988  277B  3000               	movlw	0
 15989  277C  00F4               	movwf	___flge@ff1+2
 15990  277D  3000               	movlw	0
 15991  277E  00F3               	movwf	___flge@ff1+1
 15992  277F  3000               	movlw	0
 15993  2780  00F2               	movwf	___flge@ff1
 15994  2781                     l956:	
 15995  2781  3000               	movlw	0
 15996  2782  0576               	andwf	___flge@ff2,w
 15997  2783  00A0               	movwf	??___flge
 15998  2784  3000               	movlw	0
 15999  2785  0577               	andwf	___flge@ff2+1,w
 16000  2786  00A1               	movwf	??___flge+1
 16001  2787  3080               	movlw	128
 16002  2788  0578               	andwf	___flge@ff2+2,w
 16003  2789  00A2               	movwf	??___flge+2
 16004  278A  307F               	movlw	127
 16005  278B  0579               	andwf	___flge@ff2+3,w
 16006  278C  00A3               	movwf	??___flge+3
 16007  278D  0823               	movf	??___flge+3,w
 16008  278E  0422               	iorwf	??___flge+2,w
 16009  278F  0421               	iorwf	??___flge+1,w
 16010  2790  0420               	iorwf	??___flge,w
 16011  2791  1D03               	skipz
 16012  2792  2F9B               	goto	l6123
 16013  2793  3000               	movlw	0
 16014  2794  00F9               	movwf	___flge@ff2+3
 16015  2795  3000               	movlw	0
 16016  2796  00F8               	movwf	___flge@ff2+2
 16017  2797  3000               	movlw	0
 16018  2798  00F7               	movwf	___flge@ff2+1
 16019  2799  3000               	movlw	0
 16020  279A  00F6               	movwf	___flge@ff2
 16021  279B                     l6123:	
 16022  279B  1FF5               	btfss	___flge@ff1+3,7
 16023  279C  2FC4               	goto	l6127
 16024  279D  3000               	movlw	0
 16025  279E  00A0               	movwf	??___flge
 16026  279F  3000               	movlw	0
 16027  27A0  00A1               	movwf	??___flge+1
 16028  27A1  3000               	movlw	0
 16029  27A2  00A2               	movwf	??___flge+2
 16030  27A3  3080               	movlw	128
 16031  27A4  00A3               	movwf	??___flge+3
 16032  27A5  0972               	comf	___flge@ff1,w
 16033  27A6  00A4               	movwf	??___flge+4
 16034  27A7  0973               	comf	___flge@ff1+1,w
 16035  27A8  00A5               	movwf	??___flge+5
 16036  27A9  0974               	comf	___flge@ff1+2,w
 16037  27AA  00A6               	movwf	??___flge+6
 16038  27AB  0975               	comf	___flge@ff1+3,w
 16039  27AC  00A7               	movwf	??___flge+7
 16040  27AD  0AA4               	incf	??___flge+4,f
 16041  27AE  1903               	skipnz
 16042  27AF  0AA5               	incf	??___flge+5,f
 16043  27B0  1903               	skipnz
 16044  27B1  0AA6               	incf	??___flge+6,f
 16045  27B2  1903               	skipnz
 16046  27B3  0AA7               	incf	??___flge+7,f
 16047  27B4  0824               	movf	??___flge+4,w
 16048  27B5  07A0               	addwf	??___flge,f
 16049  27B6  0825               	movf	??___flge+5,w
 16050  27B7  3DA1               	addwfc	??___flge+1,f
 16051  27B8  0826               	movf	??___flge+6,w
 16052  27B9  3DA2               	addwfc	??___flge+2,f
 16053  27BA  0827               	movf	??___flge+7,w
 16054  27BB  3DA3               	addwfc	??___flge+3,f
 16055  27BC  0823               	movf	??___flge+3,w
 16056  27BD  00F5               	movwf	___flge@ff1+3
 16057  27BE  0822               	movf	??___flge+2,w
 16058  27BF  00F4               	movwf	___flge@ff1+2
 16059  27C0  0821               	movf	??___flge+1,w
 16060  27C1  00F3               	movwf	___flge@ff1+1
 16061  27C2  0820               	movf	??___flge,w
 16062  27C3  00F2               	movwf	___flge@ff1
 16063  27C4                     l6127:	
 16064  27C4  1FF9               	btfss	___flge@ff2+3,7
 16065  27C5  2FED               	goto	l6131
 16066  27C6  3000               	movlw	0
 16067  27C7  00A0               	movwf	??___flge
 16068  27C8  3000               	movlw	0
 16069  27C9  00A1               	movwf	??___flge+1
 16070  27CA  3000               	movlw	0
 16071  27CB  00A2               	movwf	??___flge+2
 16072  27CC  3080               	movlw	128
 16073  27CD  00A3               	movwf	??___flge+3
 16074  27CE  0976               	comf	___flge@ff2,w
 16075  27CF  00A4               	movwf	??___flge+4
 16076  27D0  0977               	comf	___flge@ff2+1,w
 16077  27D1  00A5               	movwf	??___flge+5
 16078  27D2  0978               	comf	___flge@ff2+2,w
 16079  27D3  00A6               	movwf	??___flge+6
 16080  27D4  0979               	comf	___flge@ff2+3,w
 16081  27D5  00A7               	movwf	??___flge+7
 16082  27D6  0AA4               	incf	??___flge+4,f
 16083  27D7  1903               	skipnz
 16084  27D8  0AA5               	incf	??___flge+5,f
 16085  27D9  1903               	skipnz
 16086  27DA  0AA6               	incf	??___flge+6,f
 16087  27DB  1903               	skipnz
 16088  27DC  0AA7               	incf	??___flge+7,f
 16089  27DD  0824               	movf	??___flge+4,w
 16090  27DE  07A0               	addwf	??___flge,f
 16091  27DF  0825               	movf	??___flge+5,w
 16092  27E0  3DA1               	addwfc	??___flge+1,f
 16093  27E1  0826               	movf	??___flge+6,w
 16094  27E2  3DA2               	addwfc	??___flge+2,f
 16095  27E3  0827               	movf	??___flge+7,w
 16096  27E4  3DA3               	addwfc	??___flge+3,f
 16097  27E5  0823               	movf	??___flge+3,w
 16098  27E6  00F9               	movwf	___flge@ff2+3
 16099  27E7  0822               	movf	??___flge+2,w
 16100  27E8  00F8               	movwf	___flge@ff2+2
 16101  27E9  0821               	movf	??___flge+1,w
 16102  27EA  00F7               	movwf	___flge@ff2+1
 16103  27EB  0820               	movf	??___flge,w
 16104  27EC  00F6               	movwf	___flge@ff2
 16105  27ED                     l6131:	
 16106  27ED  3080               	movlw	128
 16107  27EE  06F5               	xorwf	___flge@ff1+3,f
 16108  27EF  3080               	movlw	128
 16109  27F0  06F9               	xorwf	___flge@ff2+3,f
 16110  27F1  0879               	movf	___flge@ff2+3,w
 16111  27F2  0275               	subwf	___flge@ff1+3,w
 16112  27F3  1D03               	skipz
 16113  27F4  0008               	return
 16114  27F5  0878               	movf	___flge@ff2+2,w
 16115  27F6  0274               	subwf	___flge@ff1+2,w
 16116  27F7  1D03               	skipz
 16117  27F8  0008               	return
 16118  27F9  0877               	movf	___flge@ff2+1,w
 16119  27FA  0273               	subwf	___flge@ff1+1,w
 16120  27FB  1D03               	skipz
 16121  27FC  0008               	return
 16122  27FD  0876               	movf	___flge@ff2,w
 16123  27FE  0272               	subwf	___flge@ff1,w
 16124  27FF  0008               	return
 16125  2800                     __end_of___flge:	
 16126                           
 16127                           	psect	text44
 16128  128C                     __ptext44:	
 16129 ;; *************** function ___fldiv *****************
 16130 ;; Defined at:
 16131 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;  a               4   47[BANK1 ] unsigned int 
 16134 ;;  b               4   51[BANK1 ] unsigned int 
 16135 ;; Auto vars:     Size  Location     Type
 16136 ;;  grs             4   67[BANK1 ] unsigned long 
 16137 ;;  rem             4   61[BANK1 ] unsigned long 
 16138 ;;  new_exp         2   65[BANK1 ] int 
 16139 ;;  aexp            1   72[BANK1 ] unsigned char 
 16140 ;;  bexp            1   71[BANK1 ] unsigned char 
 16141 ;;  sign            1   60[BANK1 ] unsigned char 
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  4   47[BANK1 ] unsigned char 
 16144 ;; Registers used:
 16145 ;;		wreg, status,2, status,0
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16151 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16152 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16153 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16154 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16155 ;;Total ram usage:       26 bytes
 16156 ;; Hardware stack levels used:    1
 16157 ;; Hardware stack levels required when called:    2
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_startUp
 16162 ;;		_calculateTemp
 16163 ;;		_calculateCurrent
 16164 ;;		_measureVoltages
 16165 ;;		_avgBuff
 16166 ;; This function uses a non-reentrant model
 16167 ;;
 16168                           
 16169                           
 16170                           ;psect for function ___fldiv
 16171  128C                     ___fldiv:	
 16172                           
 16173                           ;incstack = 0
 16174                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
 16175  128C  0021               	movlb	1	; select bank1
 16176  128D  0856               	movf	(___fldiv@b^(0+128)+3),w
 16177  128E  3980               	andlw	128
 16178  128F  00D7               	movwf	??___fldiv^(0+128)
 16179  1290  0857               	movf	??___fldiv^(0+128),w
 16180  1291  00DC               	movwf	___fldiv@sign^(0+128)
 16181  1292  3556               	lslf	(___fldiv@b^(0+128)+3),w
 16182  1293  00D7               	movwf	??___fldiv^(0+128)
 16183  1294  0857               	movf	??___fldiv^(0+128),w
 16184  1295  00E7               	movwf	___fldiv@bexp^(0+128)
 16185  1296  1BD5               	btfsc	(___fldiv@b^(0+128)+2),7
 16186  1297  1467               	bsf	___fldiv@bexp^(0+128),0
 16187  1298  0867               	movf	___fldiv@bexp^(0+128),w
 16188  1299  1903               	btfsc	3,2
 16189  129A  2AA9               	goto	l6439
 16190  129B  0A67               	incf	___fldiv@bexp^(0+128),w
 16191  129C  1D03               	btfss	3,2
 16192  129D  2AA6               	goto	l6435
 16193  129E  3000               	movlw	0
 16194  129F  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16195  12A0  3000               	movlw	0
 16196  12A1  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16197  12A2  3000               	movlw	0
 16198  12A3  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16199  12A4  3000               	movlw	0
 16200  12A5  00D3               	movwf	___fldiv@b^(0+128)
 16201  12A6                     l6435:	
 16202  12A6  17D5               	bsf	(___fldiv@b^(0+128)+2),7
 16203  12A7  01D6               	clrf	(___fldiv@b^(0+128)+3)
 16204  12A8  2AB1               	goto	l6441
 16205  12A9                     l6439:	
 16206  12A9  3000               	movlw	0
 16207  12AA  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16208  12AB  3000               	movlw	0
 16209  12AC  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16210  12AD  3000               	movlw	0
 16211  12AE  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16212  12AF  3000               	movlw	0
 16213  12B0  00D3               	movwf	___fldiv@b^(0+128)
 16214  12B1                     l6441:	
 16215  12B1  0852               	movf	(___fldiv@a^(0+128)+3),w
 16216  12B2  3980               	andlw	128
 16217  12B3  00D7               	movwf	??___fldiv^(0+128)
 16218  12B4  0857               	movf	??___fldiv^(0+128),w
 16219  12B5  06DC               	xorwf	___fldiv@sign^(0+128),f
 16220  12B6  3552               	lslf	(___fldiv@a^(0+128)+3),w
 16221  12B7  00D7               	movwf	??___fldiv^(0+128)
 16222  12B8  0857               	movf	??___fldiv^(0+128),w
 16223  12B9  00E8               	movwf	___fldiv@aexp^(0+128)
 16224  12BA  1BD1               	btfsc	(___fldiv@a^(0+128)+2),7
 16225  12BB  1468               	bsf	___fldiv@aexp^(0+128),0
 16226  12BC  0868               	movf	___fldiv@aexp^(0+128),w
 16227  12BD  1903               	btfsc	3,2
 16228  12BE  2ACD               	goto	l6459
 16229  12BF  0A68               	incf	___fldiv@aexp^(0+128),w
 16230  12C0  1D03               	btfss	3,2
 16231  12C1  2ACA               	goto	l6455
 16232  12C2  3000               	movlw	0
 16233  12C3  00D2               	movwf	(___fldiv@a+3)^(0+128)
 16234  12C4  3000               	movlw	0
 16235  12C5  00D1               	movwf	(___fldiv@a+2)^(0+128)
 16236  12C6  3000               	movlw	0
 16237  12C7  00D0               	movwf	(___fldiv@a+1)^(0+128)
 16238  12C8  3000               	movlw	0
 16239  12C9  00CF               	movwf	___fldiv@a^(0+128)
 16240  12CA                     l6455:	
 16241  12CA  17D1               	bsf	(___fldiv@a^(0+128)+2),7
 16242  12CB  01D2               	clrf	(___fldiv@a^(0+128)+3)
 16243  12CC  2AD5               	goto	l1163
 16244  12CD                     l6459:	
 16245  12CD  3000               	movlw	0
 16246  12CE  00D2               	movwf	(___fldiv@a+3)^(0+128)
 16247  12CF  3000               	movlw	0
 16248  12D0  00D1               	movwf	(___fldiv@a+2)^(0+128)
 16249  12D1  3000               	movlw	0
 16250  12D2  00D0               	movwf	(___fldiv@a+1)^(0+128)
 16251  12D3  3000               	movlw	0
 16252  12D4  00CF               	movwf	___fldiv@a^(0+128)
 16253  12D5                     l1163:	
 16254  12D5  0852               	movf	(___fldiv@a+3)^(0+128),w
 16255  12D6  0451               	iorwf	(___fldiv@a+2)^(0+128),w
 16256  12D7  0450               	iorwf	(___fldiv@a+1)^(0+128),w
 16257  12D8  044F               	iorwf	___fldiv@a^(0+128),w
 16258  12D9  1D03               	skipz
 16259  12DA  2AF0               	goto	l6465
 16260  12DB  3000               	movlw	0
 16261  12DC  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16262  12DD  3000               	movlw	0
 16263  12DE  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16264  12DF  3000               	movlw	0
 16265  12E0  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16266  12E1  3000               	movlw	0
 16267  12E2  00D3               	movwf	___fldiv@b^(0+128)
 16268  12E3  3080               	movlw	128
 16269  12E4  04D5               	iorwf	(___fldiv@b^(0+128)+2),f
 16270  12E5  307F               	movlw	127
 16271  12E6  04D6               	iorwf	((___fldiv@b+1)^(0+128)+2),f
 16272  12E7  0856               	movf	(___fldiv@b+3)^(0+128),w
 16273  12E8  00D2               	movwf	(?___fldiv+3)^(0+128)
 16274  12E9  0855               	movf	(___fldiv@b+2)^(0+128),w
 16275  12EA  00D1               	movwf	(?___fldiv+2)^(0+128)
 16276  12EB  0854               	movf	(___fldiv@b+1)^(0+128),w
 16277  12EC  00D0               	movwf	(?___fldiv+1)^(0+128)
 16278  12ED  0853               	movf	___fldiv@b^(0+128),w
 16279  12EE  00CF               	movwf	?___fldiv^(0+128)
 16280  12EF  0008               	return
 16281  12F0                     l6465:	
 16282  12F0  0867               	movf	___fldiv@bexp^(0+128),w
 16283  12F1  1D03               	btfss	3,2
 16284  12F2  2B04               	goto	l6471
 16285  12F3  3000               	movlw	0
 16286  12F4  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16287  12F5  3000               	movlw	0
 16288  12F6  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16289  12F7  3000               	movlw	0
 16290  12F8  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16291  12F9  3000               	movlw	0
 16292  12FA  00D3               	movwf	___fldiv@b^(0+128)
 16293  12FB  0856               	movf	(___fldiv@b+3)^(0+128),w
 16294  12FC  00D2               	movwf	(?___fldiv+3)^(0+128)
 16295  12FD  0855               	movf	(___fldiv@b+2)^(0+128),w
 16296  12FE  00D1               	movwf	(?___fldiv+2)^(0+128)
 16297  12FF  0854               	movf	(___fldiv@b+1)^(0+128),w
 16298  1300  00D0               	movwf	(?___fldiv+1)^(0+128)
 16299  1301  0853               	movf	___fldiv@b^(0+128),w
 16300  1302  00CF               	movwf	?___fldiv^(0+128)
 16301  1303  0008               	return
 16302  1304                     l6471:	
 16303  1304  0868               	movf	___fldiv@aexp^(0+128),w
 16304  1305  00D7               	movwf	??___fldiv^(0+128)
 16305  1306  01D8               	clrf	(??___fldiv^(0+128)+1)
 16306  1307  09D7               	comf	??___fldiv^(0+128),f
 16307  1308  09D8               	comf	(??___fldiv^(0+128)+1),f
 16308  1309  0AD7               	incf	??___fldiv^(0+128),f
 16309  130A  1903               	skipnz
 16310  130B  0AD8               	incf	(??___fldiv^(0+128)+1),f
 16311  130C  0867               	movf	___fldiv@bexp^(0+128),w
 16312  130D  0757               	addwf	??___fldiv^(0+128),w
 16313  130E  00D9               	movwf	(??___fldiv+2)^(0+128)
 16314  130F  0858               	movf	(??___fldiv+1)^(0+128),w
 16315  1310  1803               	skipnc
 16316  1311  0A58               	incf	(??___fldiv+1)^(0+128),w
 16317  1312  00DA               	movwf	((??___fldiv+2)^(0+128)+1)
 16318  1313  0859               	movf	(??___fldiv+2)^(0+128),w
 16319  1314  3E7F               	addlw	127
 16320  1315  00E1               	movwf	___fldiv@new_exp^(0+128)
 16321  1316  3000               	movlw	0
 16322  1317  3D5A               	addwfc	(??___fldiv+3)^(0+128),w
 16323  1318  00E2               	movwf	(___fldiv@new_exp+1)^(0+128)
 16324  1319  0856               	movf	(___fldiv@b+3)^(0+128),w
 16325  131A  00E0               	movwf	(___fldiv@rem+3)^(0+128)
 16326  131B  0855               	movf	(___fldiv@b+2)^(0+128),w
 16327  131C  00DF               	movwf	(___fldiv@rem+2)^(0+128)
 16328  131D  0854               	movf	(___fldiv@b+1)^(0+128),w
 16329  131E  00DE               	movwf	(___fldiv@rem+1)^(0+128)
 16330  131F  0853               	movf	___fldiv@b^(0+128),w
 16331  1320  00DD               	movwf	___fldiv@rem^(0+128)
 16332  1321  3000               	movlw	0
 16333  1322  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16334  1323  3000               	movlw	0
 16335  1324  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16336  1325  3000               	movlw	0
 16337  1326  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16338  1327  3000               	movlw	0
 16339  1328  00D3               	movwf	___fldiv@b^(0+128)
 16340  1329  3000               	movlw	0
 16341  132A  00E6               	movwf	(___fldiv@grs+3)^(0+128)
 16342  132B  3000               	movlw	0
 16343  132C  00E5               	movwf	(___fldiv@grs+2)^(0+128)
 16344  132D  3000               	movlw	0
 16345  132E  00E4               	movwf	(___fldiv@grs+1)^(0+128)
 16346  132F  3000               	movlw	0
 16347  1330  00E3               	movwf	___fldiv@grs^(0+128)
 16348  1331  01E8               	clrf	___fldiv@aexp^(0+128)
 16349  1332                     l6499:	
 16350  1332  301A               	movlw	26
 16351  1333  0268               	subwf	___fldiv@aexp^(0+128),w
 16352  1334  1803               	btfsc	3,0
 16353  1335  2B6E               	goto	l6501
 16354  1336  0868               	movf	___fldiv@aexp^(0+128),w
 16355  1337  1903               	btfsc	3,2
 16356  1338  2B50               	goto	l6491
 16357  1339  3001               	movlw	1
 16358  133A                     u9025:	
 16359  133A  35DD               	lslf	___fldiv@rem^(0+128),f
 16360  133B  0DDE               	rlf	(___fldiv@rem+1)^(0+128),f
 16361  133C  0DDF               	rlf	(___fldiv@rem+2)^(0+128),f
 16362  133D  0DE0               	rlf	(___fldiv@rem+3)^(0+128),f
 16363  133E  0B89               	decfsz	9,f
 16364  133F  2B3A               	goto	u9025
 16365  1340  3001               	movlw	1
 16366  1341                     u9035:	
 16367  1341  35D3               	lslf	___fldiv@b^(0+128),f
 16368  1342  0DD4               	rlf	(___fldiv@b+1)^(0+128),f
 16369  1343  0DD5               	rlf	(___fldiv@b+2)^(0+128),f
 16370  1344  0DD6               	rlf	(___fldiv@b+3)^(0+128),f
 16371  1345  0B89               	decfsz	9,f
 16372  1346  2B41               	goto	u9035
 16373  1347  1BE6               	btfsc	(___fldiv@grs+3)^(0+128),7
 16374  1348  1453               	bsf	___fldiv@b^(0+128),0
 16375  1349  3001               	movlw	1
 16376  134A                     u9055:	
 16377  134A  35E3               	lslf	___fldiv@grs^(0+128),f
 16378  134B  0DE4               	rlf	(___fldiv@grs+1)^(0+128),f
 16379  134C  0DE5               	rlf	(___fldiv@grs+2)^(0+128),f
 16380  134D  0DE6               	rlf	(___fldiv@grs+3)^(0+128),f
 16381  134E  0B89               	decfsz	9,f
 16382  134F  2B4A               	goto	u9055
 16383  1350                     l6491:	
 16384  1350  0852               	movf	(___fldiv@a+3)^(0+128),w
 16385  1351  0260               	subwf	(___fldiv@rem+3)^(0+128),w
 16386  1352  1D03               	skipz
 16387  1353  2B5E               	goto	u9065
 16388  1354  0851               	movf	(___fldiv@a+2)^(0+128),w
 16389  1355  025F               	subwf	(___fldiv@rem+2)^(0+128),w
 16390  1356  1D03               	skipz
 16391  1357  2B5E               	goto	u9065
 16392  1358  0850               	movf	(___fldiv@a+1)^(0+128),w
 16393  1359  025E               	subwf	(___fldiv@rem+1)^(0+128),w
 16394  135A  1D03               	skipz
 16395  135B  2B5E               	goto	u9065
 16396  135C  084F               	movf	___fldiv@a^(0+128),w
 16397  135D  025D               	subwf	___fldiv@rem^(0+128),w
 16398  135E                     u9065:	
 16399  135E  1C03               	skipc
 16400  135F  2B69               	goto	l6497
 16401  1360  1766               	bsf	(___fldiv@grs^(0+128)+3),6
 16402  1361  084F               	movf	___fldiv@a^(0+128),w
 16403  1362  02DD               	subwf	___fldiv@rem^(0+128),f
 16404  1363  0850               	movf	(___fldiv@a+1)^(0+128),w
 16405  1364  3BDE               	subwfb	(___fldiv@rem+1)^(0+128),f
 16406  1365  0851               	movf	(___fldiv@a+2)^(0+128),w
 16407  1366  3BDF               	subwfb	(___fldiv@rem+2)^(0+128),f
 16408  1367  0852               	movf	(___fldiv@a+3)^(0+128),w
 16409  1368  3BE0               	subwfb	(___fldiv@rem+3)^(0+128),f
 16410  1369                     l6497:	
 16411  1369  3001               	movlw	1
 16412  136A  00D7               	movwf	??___fldiv^(0+128)
 16413  136B  0857               	movf	??___fldiv^(0+128),w
 16414  136C  07E8               	addwf	___fldiv@aexp^(0+128),f
 16415  136D  2B32               	goto	l6499
 16416  136E                     l6501:	
 16417  136E  0860               	movf	(___fldiv@rem+3)^(0+128),w
 16418  136F  045F               	iorwf	(___fldiv@rem+2)^(0+128),w
 16419  1370  045E               	iorwf	(___fldiv@rem+1)^(0+128),w
 16420  1371  045D               	iorwf	___fldiv@rem^(0+128),w
 16421  1372  1D03               	btfss	3,2
 16422  1373  1463               	bsf	___fldiv@grs^(0+128),0
 16423  1374                     l6515:	
 16424  1374  1BD5               	btfsc	(___fldiv@b+2)^(0+128),7
 16425  1375  2B8B               	goto	l6517
 16426  1376  3001               	movlw	1
 16427  1377                     u9095:	
 16428  1377  35D3               	lslf	___fldiv@b^(0+128),f
 16429  1378  0DD4               	rlf	(___fldiv@b+1)^(0+128),f
 16430  1379  0DD5               	rlf	(___fldiv@b+2)^(0+128),f
 16431  137A  0DD6               	rlf	(___fldiv@b+3)^(0+128),f
 16432  137B  0B89               	decfsz	9,f
 16433  137C  2B77               	goto	u9095
 16434  137D  1BE6               	btfsc	(___fldiv@grs+3)^(0+128),7
 16435  137E  1453               	bsf	___fldiv@b^(0+128),0
 16436  137F  3001               	movlw	1
 16437  1380                     u9115:	
 16438  1380  35E3               	lslf	___fldiv@grs^(0+128),f
 16439  1381  0DE4               	rlf	(___fldiv@grs+1)^(0+128),f
 16440  1382  0DE5               	rlf	(___fldiv@grs+2)^(0+128),f
 16441  1383  0DE6               	rlf	(___fldiv@grs+3)^(0+128),f
 16442  1384  0B89               	decfsz	9,f
 16443  1385  2B80               	goto	u9115
 16444  1386  30FF               	movlw	255
 16445  1387  07E1               	addwf	___fldiv@new_exp^(0+128),f
 16446  1388  30FF               	movlw	255
 16447  1389  3DE2               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 16448  138A  2B74               	goto	l6515
 16449  138B                     l6517:	
 16450  138B  01E8               	clrf	___fldiv@aexp^(0+128)
 16451  138C  1FE6               	btfss	(___fldiv@grs+3)^(0+128),7
 16452  138D  2BA4               	goto	l6527
 16453  138E  30FF               	movlw	255
 16454  138F  0563               	andwf	___fldiv@grs^(0+128),w
 16455  1390  00D7               	movwf	??___fldiv^(0+128)
 16456  1391  30FF               	movlw	255
 16457  1392  0564               	andwf	(___fldiv@grs+1)^(0+128),w
 16458  1393  00D8               	movwf	(??___fldiv^(0+128)+1)
 16459  1394  30FF               	movlw	255
 16460  1395  0565               	andwf	(___fldiv@grs+2)^(0+128),w
 16461  1396  00D9               	movwf	(??___fldiv^(0+128)+2)
 16462  1397  307F               	movlw	127
 16463  1398  0566               	andwf	(___fldiv@grs+3)^(0+128),w
 16464  1399  00DA               	movwf	(??___fldiv^(0+128)+3)
 16465  139A  085A               	movf	(??___fldiv+3)^(0+128),w
 16466  139B  0459               	iorwf	(??___fldiv+2)^(0+128),w
 16467  139C  0458               	iorwf	(??___fldiv+1)^(0+128),w
 16468  139D  0457               	iorwf	??___fldiv^(0+128),w
 16469  139E  1D03               	btfss	3,2
 16470  139F  2BA2               	goto	l6525
 16471  13A0  1C53               	btfss	___fldiv@b^(0+128),0
 16472  13A1  2BA4               	goto	l6527
 16473  13A2                     l6525:	
 16474  13A2  01E8               	clrf	___fldiv@aexp^(0+128)
 16475  13A3  0AE8               	incf	___fldiv@aexp^(0+128),f
 16476  13A4                     l6527:	
 16477  13A4  0868               	movf	___fldiv@aexp^(0+128),w
 16478  13A5  1903               	btfsc	3,2
 16479  13A6  2BCD               	goto	l6537
 16480  13A7  3001               	movlw	1
 16481  13A8  07D3               	addwf	___fldiv@b^(0+128),f
 16482  13A9  3000               	movlw	0
 16483  13AA  3DD4               	addwfc	(___fldiv@b+1)^(0+128),f
 16484  13AB  3000               	movlw	0
 16485  13AC  3DD5               	addwfc	(___fldiv@b+2)^(0+128),f
 16486  13AD  3000               	movlw	0
 16487  13AE  3DD6               	addwfc	(___fldiv@b+3)^(0+128),f
 16488  13AF  1C56               	btfss	(___fldiv@b+3)^(0+128),0
 16489  13B0  2BCD               	goto	l6537
 16490  13B1  0853               	movf	___fldiv@b^(0+128),w
 16491  13B2  00D7               	movwf	??___fldiv^(0+128)
 16492  13B3  0854               	movf	(___fldiv@b+1)^(0+128),w
 16493  13B4  00D8               	movwf	(??___fldiv^(0+128)+1)
 16494  13B5  0855               	movf	(___fldiv@b+2)^(0+128),w
 16495  13B6  00D9               	movwf	(??___fldiv^(0+128)+2)
 16496  13B7  0856               	movf	(___fldiv@b+3)^(0+128),w
 16497  13B8  00DA               	movwf	(??___fldiv^(0+128)+3)
 16498  13B9  3001               	movlw	1
 16499  13BA  00DB               	movwf	(??___fldiv+4)^(0+128)
 16500  13BB                     u9185:	
 16501  13BB  37DA               	asrf	(??___fldiv^(0+128)+3),f
 16502  13BC  0CD9               	rrf	(??___fldiv^(0+128)+2),f
 16503  13BD  0CD8               	rrf	(??___fldiv^(0+128)+1),f
 16504  13BE  0CD7               	rrf	??___fldiv^(0+128),f
 16505  13BF  0BDB               	decfsz	(??___fldiv+4)^(0+128),f
 16506  13C0  2BBB               	goto	u9185
 16507  13C1  085A               	movf	(??___fldiv+3)^(0+128),w
 16508  13C2  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16509  13C3  0859               	movf	(??___fldiv+2)^(0+128),w
 16510  13C4  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16511  13C5  0858               	movf	(??___fldiv+1)^(0+128),w
 16512  13C6  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16513  13C7  0857               	movf	??___fldiv^(0+128),w
 16514  13C8  00D3               	movwf	___fldiv@b^(0+128)
 16515  13C9  3001               	movlw	1
 16516  13CA  07E1               	addwf	___fldiv@new_exp^(0+128),f
 16517  13CB  3000               	movlw	0
 16518  13CC  3DE2               	addwfc	(___fldiv@new_exp+1)^(0+128),f
 16519  13CD                     l6537:	
 16520  13CD  0862               	movf	(___fldiv@new_exp+1)^(0+128),w
 16521  13CE  3A80               	xorlw	128
 16522  13CF  00D7               	movwf	??___fldiv^(0+128)
 16523  13D0  3080               	movlw	128
 16524  13D1  0257               	subwf	??___fldiv^(0+128),w
 16525  13D2  1D03               	skipz
 16526  13D3  2BD6               	goto	u9195
 16527  13D4  30FF               	movlw	255
 16528  13D5  0261               	subwf	___fldiv@new_exp^(0+128),w
 16529  13D6                     u9195:	
 16530  13D6  1C03               	skipc
 16531  13D7  2BE5               	goto	l1184
 16532  13D8  30FF               	movlw	255
 16533  13D9  0021               	movlb	1	; select bank1
 16534  13DA  00E1               	movwf	___fldiv@new_exp^(0+128)
 16535  13DB  3000               	movlw	0
 16536  13DC  00E2               	movwf	(___fldiv@new_exp^(0+128)+1)
 16537  13DD  3000               	movlw	0
 16538  13DE  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16539  13DF  3000               	movlw	0
 16540  13E0  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16541  13E1  3000               	movlw	0
 16542  13E2  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16543  13E3  3000               	movlw	0
 16544  13E4  00D3               	movwf	___fldiv@b^(0+128)
 16545  13E5                     l1184:	
 16546  13E5  0021               	movlb	1	; select bank1
 16547  13E6  0862               	movf	(___fldiv@new_exp+1)^(0+128),w
 16548  13E7  3A80               	xorlw	128
 16549  13E8  00D7               	movwf	??___fldiv^(0+128)
 16550  13E9  3080               	movlw	128
 16551  13EA  0257               	subwf	??___fldiv^(0+128),w
 16552  13EB  1D03               	skipz
 16553  13EC  2BEF               	goto	u9205
 16554  13ED  3001               	movlw	1
 16555  13EE  0261               	subwf	___fldiv@new_exp^(0+128),w
 16556  13EF                     u9205:	
 16557  13EF  1803               	skipnc
 16558  13F0  2BFD               	goto	l1185
 16559  13F1  0021               	movlb	1	; select bank1
 16560  13F2  01E1               	clrf	___fldiv@new_exp^(0+128)
 16561  13F3  01E2               	clrf	(___fldiv@new_exp+1)^(0+128)
 16562  13F4  3000               	movlw	0
 16563  13F5  00D6               	movwf	(___fldiv@b+3)^(0+128)
 16564  13F6  3000               	movlw	0
 16565  13F7  00D5               	movwf	(___fldiv@b+2)^(0+128)
 16566  13F8  3000               	movlw	0
 16567  13F9  00D4               	movwf	(___fldiv@b+1)^(0+128)
 16568  13FA  3000               	movlw	0
 16569  13FB  00D3               	movwf	___fldiv@b^(0+128)
 16570  13FC  01DC               	clrf	___fldiv@sign^(0+128)
 16571  13FD                     l1185:	
 16572  13FD  0021               	movlb	1	; select bank1
 16573  13FE  0861               	movf	___fldiv@new_exp^(0+128),w
 16574  13FF  00D7               	movwf	??___fldiv^(0+128)
 16575  1400  0857               	movf	??___fldiv^(0+128),w
 16576  1401  00E7               	movwf	___fldiv@bexp^(0+128)
 16577  1402  1C67               	btfss	___fldiv@bexp^(0+128),0
 16578  1403  2C06               	goto	l6551
 16579  1404  17D5               	bsf	(___fldiv@b^(0+128)+2),7
 16580  1405  2C0A               	goto	l1187
 16581  1406                     l6551:	
 16582  1406  307F               	movlw	127
 16583  1407  00D7               	movwf	??___fldiv^(0+128)
 16584  1408  0857               	movf	??___fldiv^(0+128),w
 16585  1409  05D5               	andwf	(___fldiv@b^(0+128)+2),f
 16586  140A                     l1187:	
 16587  140A  3667               	lsrf	___fldiv@bexp^(0+128),w
 16588  140B  00D7               	movwf	??___fldiv^(0+128)
 16589  140C  0857               	movf	??___fldiv^(0+128),w
 16590  140D  00D6               	movwf	(___fldiv@b^(0+128)+3)
 16591  140E  085C               	movf	___fldiv@sign^(0+128),w
 16592  140F  00D7               	movwf	??___fldiv^(0+128)
 16593  1410  0857               	movf	??___fldiv^(0+128),w
 16594  1411  04D6               	iorwf	(___fldiv@b^(0+128)+3),f
 16595  1412  0856               	movf	(___fldiv@b+3)^(0+128),w
 16596  1413  00D2               	movwf	(?___fldiv+3)^(0+128)
 16597  1414  0855               	movf	(___fldiv@b+2)^(0+128),w
 16598  1415  00D1               	movwf	(?___fldiv+2)^(0+128)
 16599  1416  0854               	movf	(___fldiv@b+1)^(0+128),w
 16600  1417  00D0               	movwf	(?___fldiv+1)^(0+128)
 16601  1418  0853               	movf	___fldiv@b^(0+128),w
 16602  1419  00CF               	movwf	?___fldiv^(0+128)
 16603  141A  0008               	return
 16604  141B                     __end_of___fldiv:	
 16605                           
 16606                           	psect	text45
 16607  0B10                     __ptext45:	
 16608 ;; *************** function ___fladd *****************
 16609 ;; Defined at:
 16610 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 16611 ;; Parameters:    Size  Location     Type
 16612 ;;  b               4    9[BANK1 ] unsigned char 
 16613 ;;  a               4   13[BANK1 ] unsigned char 
 16614 ;; Auto vars:     Size  Location     Type
 16615 ;;  grs             1   77[BANK0 ] unsigned char 
 16616 ;;  bexp            1   76[BANK0 ] unsigned char 
 16617 ;;  aexp            1   75[BANK0 ] unsigned char 
 16618 ;;  signs           1   74[BANK0 ] unsigned char 
 16619 ;; Return value:  Size  Location     Type
 16620 ;;                  4    9[BANK1 ] unsigned char 
 16621 ;; Registers used:
 16622 ;;		wreg, status,2, status,0
 16623 ;; Tracked objects:
 16624 ;;		On entry : 0/0
 16625 ;;		On exit  : 0/0
 16626 ;;		Unchanged: 0/0
 16627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16628 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16629 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16630 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16631 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16632 ;;Total ram usage:       24 bytes
 16633 ;; Hardware stack levels used:    1
 16634 ;; Hardware stack levels required when called:    2
 16635 ;; This function calls:
 16636 ;;		Nothing
 16637 ;; This function is called by:
 16638 ;;		_calculateTemp
 16639 ;;		_calculateCurrent
 16640 ;;		_totalVoltage
 16641 ;;		_sprintf
 16642 ;;		_log
 16643 ;;		___flsub
 16644 ;;		_eval_poly
 16645 ;;		_avgBuff
 16646 ;; This function uses a non-reentrant model
 16647 ;;
 16648                           
 16649                           
 16650                           ;psect for function ___fladd
 16651  0B10                     ___fladd:	
 16652                           
 16653                           ;incstack = 0
 16654                           ; Regs used in ___fladd: [wreg+status,2+status,0]
 16655  0B10  0021               	movlb	1	; select bank1
 16656  0B11  082C               	movf	(___fladd@b^(0+128)+3),w
 16657  0B12  3980               	andlw	128
 16658  0B13  00B1               	movwf	??___fladd^(0+128)
 16659  0B14  0831               	movf	??___fladd^(0+128),w
 16660  0B15  0020               	movlb	0	; select bank0
 16661  0B16  00EA               	movwf	___fladd@signs
 16662  0B17  0021               	movlb	1	; select bank1
 16663  0B18  352C               	lslf	(___fladd@b^(0+128)+3),w
 16664  0B19  00B1               	movwf	??___fladd^(0+128)
 16665  0B1A  0831               	movf	??___fladd^(0+128),w
 16666  0B1B  0020               	movlb	0	; select bank0
 16667  0B1C  00EC               	movwf	___fladd@bexp
 16668  0B1D  0021               	movlb	1	; select bank1
 16669  0B1E  1FAB               	btfss	(___fladd@b^(0+128)+2),7
 16670  0B1F  2B22               	goto	l5693
 16671  0B20  0020               	movlb	0	; select bank0
 16672  0B21  146C               	bsf	___fladd@bexp,0
 16673  0B22                     l5693:	
 16674  0B22  0020               	movlb	0	; select bank0
 16675  0B23  086C               	movf	___fladd@bexp,w
 16676  0B24  1903               	btfsc	3,2
 16677  0B25  2B36               	goto	l5703
 16678  0B26  0A6C               	incf	___fladd@bexp,w
 16679  0B27  1D03               	btfss	3,2
 16680  0B28  2B32               	goto	l5699
 16681  0B29  3000               	movlw	0
 16682  0B2A  0021               	movlb	1	; select bank1
 16683  0B2B  00AC               	movwf	(___fladd@b+3)^(0+128)
 16684  0B2C  3000               	movlw	0
 16685  0B2D  00AB               	movwf	(___fladd@b+2)^(0+128)
 16686  0B2E  3000               	movlw	0
 16687  0B2F  00AA               	movwf	(___fladd@b+1)^(0+128)
 16688  0B30  3000               	movlw	0
 16689  0B31  00A9               	movwf	___fladd@b^(0+128)
 16690  0B32                     l5699:	
 16691  0B32  0021               	movlb	1	; select bank1
 16692  0B33  17AB               	bsf	(___fladd@b^(0+128)+2),7
 16693  0B34  01AC               	clrf	(___fladd@b^(0+128)+3)
 16694  0B35  2B3F               	goto	l5705
 16695  0B36                     l5703:	
 16696  0B36  3000               	movlw	0
 16697  0B37  0021               	movlb	1	; select bank1
 16698  0B38  00AC               	movwf	(___fladd@b+3)^(0+128)
 16699  0B39  3000               	movlw	0
 16700  0B3A  00AB               	movwf	(___fladd@b+2)^(0+128)
 16701  0B3B  3000               	movlw	0
 16702  0B3C  00AA               	movwf	(___fladd@b+1)^(0+128)
 16703  0B3D  3000               	movlw	0
 16704  0B3E  00A9               	movwf	___fladd@b^(0+128)
 16705  0B3F                     l5705:	
 16706  0B3F  0830               	movf	(___fladd@a^(0+128)+3),w
 16707  0B40  3980               	andlw	128
 16708  0B41  00B1               	movwf	??___fladd^(0+128)
 16709  0B42  0831               	movf	??___fladd^(0+128),w
 16710  0B43  0020               	movlb	0	; select bank0
 16711  0B44  00EB               	movwf	___fladd@aexp
 16712  0B45  086B               	movf	___fladd@aexp,w
 16713  0B46  066A               	xorwf	___fladd@signs,w
 16714  0B47  1D03               	btfss	3,2
 16715  0B48  176A               	bsf	___fladd@signs,6
 16716  0B49  0021               	movlb	1	; select bank1
 16717  0B4A  3530               	lslf	(___fladd@a^(0+128)+3),w
 16718  0B4B  00B1               	movwf	??___fladd^(0+128)
 16719  0B4C  0831               	movf	??___fladd^(0+128),w
 16720  0B4D  0020               	movlb	0	; select bank0
 16721  0B4E  00EB               	movwf	___fladd@aexp
 16722  0B4F  0021               	movlb	1	; select bank1
 16723  0B50  1FAF               	btfss	(___fladd@a^(0+128)+2),7
 16724  0B51  2B54               	goto	l5717
 16725  0B52  0020               	movlb	0	; select bank0
 16726  0B53  146B               	bsf	___fladd@aexp,0
 16727  0B54                     l5717:	
 16728  0B54  0020               	movlb	0	; select bank0
 16729  0B55  086B               	movf	___fladd@aexp,w
 16730  0B56  1903               	btfsc	3,2
 16731  0B57  2B68               	goto	l5727
 16732  0B58  0A6B               	incf	___fladd@aexp,w
 16733  0B59  1D03               	btfss	3,2
 16734  0B5A  2B64               	goto	l5723
 16735  0B5B  3000               	movlw	0
 16736  0B5C  0021               	movlb	1	; select bank1
 16737  0B5D  00B0               	movwf	(___fladd@a+3)^(0+128)
 16738  0B5E  3000               	movlw	0
 16739  0B5F  00AF               	movwf	(___fladd@a+2)^(0+128)
 16740  0B60  3000               	movlw	0
 16741  0B61  00AE               	movwf	(___fladd@a+1)^(0+128)
 16742  0B62  3000               	movlw	0
 16743  0B63  00AD               	movwf	___fladd@a^(0+128)
 16744  0B64                     l5723:	
 16745  0B64  0021               	movlb	1	; select bank1
 16746  0B65  17AF               	bsf	(___fladd@a^(0+128)+2),7
 16747  0B66  01B0               	clrf	(___fladd@a^(0+128)+3)
 16748  0B67  2B71               	goto	l1107
 16749  0B68                     l5727:	
 16750  0B68  3000               	movlw	0
 16751  0B69  0021               	movlb	1	; select bank1
 16752  0B6A  00B0               	movwf	(___fladd@a+3)^(0+128)
 16753  0B6B  3000               	movlw	0
 16754  0B6C  00AF               	movwf	(___fladd@a+2)^(0+128)
 16755  0B6D  3000               	movlw	0
 16756  0B6E  00AE               	movwf	(___fladd@a+1)^(0+128)
 16757  0B6F  3000               	movlw	0
 16758  0B70  00AD               	movwf	___fladd@a^(0+128)
 16759  0B71                     l1107:	
 16760  0B71  0020               	movlb	0	; select bank0
 16761  0B72  086C               	movf	___fladd@bexp,w
 16762  0B73  026B               	subwf	___fladd@aexp,w
 16763  0B74  1803               	skipnc
 16764  0B75  2BD1               	goto	l5763
 16765  0B76  1F6A               	btfss	___fladd@signs,6
 16766  0B77  2B7E               	goto	l5733
 16767  0B78  3080               	movlw	128
 16768  0B79  0021               	movlb	1	; select bank1
 16769  0B7A  00B1               	movwf	??___fladd^(0+128)
 16770  0B7B  0831               	movf	??___fladd^(0+128),w
 16771  0B7C  0020               	movlb	0	; select bank0
 16772  0B7D  06EA               	xorwf	___fladd@signs,f
 16773  0B7E                     l5733:	
 16774  0B7E  086C               	movf	___fladd@bexp,w
 16775  0B7F  0021               	movlb	1	; select bank1
 16776  0B80  00B1               	movwf	??___fladd^(0+128)
 16777  0B81  0831               	movf	??___fladd^(0+128),w
 16778  0B82  0020               	movlb	0	; select bank0
 16779  0B83  00ED               	movwf	___fladd@grs
 16780  0B84  086B               	movf	___fladd@aexp,w
 16781  0B85  0021               	movlb	1	; select bank1
 16782  0B86  00B1               	movwf	??___fladd^(0+128)
 16783  0B87  0831               	movf	??___fladd^(0+128),w
 16784  0B88  0020               	movlb	0	; select bank0
 16785  0B89  00EC               	movwf	___fladd@bexp
 16786  0B8A  086D               	movf	___fladd@grs,w
 16787  0B8B  0021               	movlb	1	; select bank1
 16788  0B8C  00B1               	movwf	??___fladd^(0+128)
 16789  0B8D  0831               	movf	??___fladd^(0+128),w
 16790  0B8E  0020               	movlb	0	; select bank0
 16791  0B8F  00EB               	movwf	___fladd@aexp
 16792  0B90  0021               	movlb	1	; select bank1
 16793  0B91  0829               	movf	___fladd@b^(0+128),w
 16794  0B92  00B1               	movwf	??___fladd^(0+128)
 16795  0B93  0831               	movf	??___fladd^(0+128),w
 16796  0B94  0020               	movlb	0	; select bank0
 16797  0B95  00ED               	movwf	___fladd@grs
 16798  0B96  0021               	movlb	1	; select bank1
 16799  0B97  082D               	movf	___fladd@a^(0+128),w
 16800  0B98  00B1               	movwf	??___fladd^(0+128)
 16801  0B99  0831               	movf	??___fladd^(0+128),w
 16802  0B9A  00A9               	movwf	___fladd@b^(0+128)
 16803  0B9B  0020               	movlb	0	; select bank0
 16804  0B9C  086D               	movf	___fladd@grs,w
 16805  0B9D  0021               	movlb	1	; select bank1
 16806  0B9E  00B1               	movwf	??___fladd^(0+128)
 16807  0B9F  0831               	movf	??___fladd^(0+128),w
 16808  0BA0  00AD               	movwf	___fladd@a^(0+128)
 16809  0BA1  082A               	movf	(___fladd@b^(0+128)+1),w
 16810  0BA2  00B1               	movwf	??___fladd^(0+128)
 16811  0BA3  0831               	movf	??___fladd^(0+128),w
 16812  0BA4  0020               	movlb	0	; select bank0
 16813  0BA5  00ED               	movwf	___fladd@grs
 16814  0BA6  0021               	movlb	1	; select bank1
 16815  0BA7  082E               	movf	(___fladd@a^(0+128)+1),w
 16816  0BA8  00B1               	movwf	??___fladd^(0+128)
 16817  0BA9  0831               	movf	??___fladd^(0+128),w
 16818  0BAA  00AA               	movwf	(___fladd@b^(0+128)+1)
 16819  0BAB  0020               	movlb	0	; select bank0
 16820  0BAC  086D               	movf	___fladd@grs,w
 16821  0BAD  0021               	movlb	1	; select bank1
 16822  0BAE  00B1               	movwf	??___fladd^(0+128)
 16823  0BAF  0831               	movf	??___fladd^(0+128),w
 16824  0BB0  00AE               	movwf	(___fladd@a^(0+128)+1)
 16825  0BB1  082B               	movf	(___fladd@b^(0+128)+2),w
 16826  0BB2  00B1               	movwf	??___fladd^(0+128)
 16827  0BB3  0831               	movf	??___fladd^(0+128),w
 16828  0BB4  0020               	movlb	0	; select bank0
 16829  0BB5  00ED               	movwf	___fladd@grs
 16830  0BB6  0021               	movlb	1	; select bank1
 16831  0BB7  082F               	movf	(___fladd@a^(0+128)+2),w
 16832  0BB8  00B1               	movwf	??___fladd^(0+128)
 16833  0BB9  0831               	movf	??___fladd^(0+128),w
 16834  0BBA  00AB               	movwf	(___fladd@b^(0+128)+2)
 16835  0BBB  0020               	movlb	0	; select bank0
 16836  0BBC  086D               	movf	___fladd@grs,w
 16837  0BBD  0021               	movlb	1	; select bank1
 16838  0BBE  00B1               	movwf	??___fladd^(0+128)
 16839  0BBF  0831               	movf	??___fladd^(0+128),w
 16840  0BC0  00AF               	movwf	(___fladd@a^(0+128)+2)
 16841  0BC1  082C               	movf	(___fladd@b^(0+128)+3),w
 16842  0BC2  00B1               	movwf	??___fladd^(0+128)
 16843  0BC3  0831               	movf	??___fladd^(0+128),w
 16844  0BC4  0020               	movlb	0	; select bank0
 16845  0BC5  00ED               	movwf	___fladd@grs
 16846  0BC6  0021               	movlb	1	; select bank1
 16847  0BC7  0830               	movf	(___fladd@a^(0+128)+3),w
 16848  0BC8  00B1               	movwf	??___fladd^(0+128)
 16849  0BC9  0831               	movf	??___fladd^(0+128),w
 16850  0BCA  00AC               	movwf	(___fladd@b^(0+128)+3)
 16851  0BCB  0020               	movlb	0	; select bank0
 16852  0BCC  086D               	movf	___fladd@grs,w
 16853  0BCD  0021               	movlb	1	; select bank1
 16854  0BCE  00B1               	movwf	??___fladd^(0+128)
 16855  0BCF  0831               	movf	??___fladd^(0+128),w
 16856  0BD0  00B0               	movwf	(___fladd@a^(0+128)+3)
 16857  0BD1                     l5763:	
 16858  0BD1  0020               	movlb	0	; select bank0
 16859  0BD2  01ED               	clrf	___fladd@grs
 16860  0BD3  086C               	movf	___fladd@bexp,w
 16861  0BD4  0021               	movlb	1	; select bank1
 16862  0BD5  00B1               	movwf	??___fladd^(0+128)
 16863  0BD6  01B2               	clrf	(??___fladd^(0+128)+1)
 16864  0BD7  09B1               	comf	??___fladd^(0+128),f
 16865  0BD8  09B2               	comf	(??___fladd^(0+128)+1),f
 16866  0BD9  0AB1               	incf	??___fladd^(0+128),f
 16867  0BDA  1903               	skipnz
 16868  0BDB  0AB2               	incf	(??___fladd^(0+128)+1),f
 16869  0BDC  0020               	movlb	0	; select bank0
 16870  0BDD  086B               	movf	___fladd@aexp,w
 16871  0BDE  0021               	movlb	1	; select bank1
 16872  0BDF  0731               	addwf	??___fladd^(0+128),w
 16873  0BE0  00B3               	movwf	(??___fladd+2)^(0+128)
 16874  0BE1  0832               	movf	(??___fladd+1)^(0+128),w
 16875  0BE2  1803               	skipnc
 16876  0BE3  0A32               	incf	(??___fladd+1)^(0+128),w
 16877  0BE4  00B4               	movwf	((??___fladd+2)^(0+128)+1)
 16878  0BE5  0834               	movf	(??___fladd+3)^(0+128),w
 16879  0BE6  3A80               	xorlw	128
 16880  0BE7  00B5               	movwf	(??___fladd+4)^(0+128)
 16881  0BE8  3080               	movlw	128
 16882  0BE9  0235               	subwf	(??___fladd+4)^(0+128),w
 16883  0BEA  1D03               	skipz
 16884  0BEB  2BEE               	goto	u7545
 16885  0BEC  301A               	movlw	26
 16886  0BED  0233               	subwf	(??___fladd+2)^(0+128),w
 16887  0BEE                     u7545:	
 16888  0BEE  1C03               	skipc
 16889  0BEF  2C2E               	goto	l5781
 16890  0BF0  0021               	movlb	1	; select bank1
 16891  0BF1  082C               	movf	(___fladd@b+3)^(0+128),w
 16892  0BF2  042B               	iorwf	(___fladd@b+2)^(0+128),w
 16893  0BF3  042A               	iorwf	(___fladd@b+1)^(0+128),w
 16894  0BF4  0429               	iorwf	___fladd@b^(0+128),w
 16895  0BF5  1903               	btfsc	3,2
 16896  0BF6  2BF9               	goto	u7550
 16897  0BF7  3001               	movlw	1
 16898  0BF8  2BFA               	goto	u7560
 16899  0BF9                     u7550:	
 16900  0BF9  3000               	movlw	0
 16901  0BFA                     u7560:	
 16902  0BFA  00B1               	movwf	??___fladd^(0+128)
 16903  0BFB  0831               	movf	??___fladd^(0+128),w
 16904  0BFC  0020               	movlb	0	; select bank0
 16905  0BFD  00ED               	movwf	___fladd@grs
 16906  0BFE  3000               	movlw	0
 16907  0BFF  0021               	movlb	1	; select bank1
 16908  0C00  00AC               	movwf	(___fladd@b+3)^(0+128)
 16909  0C01  3000               	movlw	0
 16910  0C02  00AB               	movwf	(___fladd@b+2)^(0+128)
 16911  0C03  3000               	movlw	0
 16912  0C04  00AA               	movwf	(___fladd@b+1)^(0+128)
 16913  0C05  3000               	movlw	0
 16914  0C06  00A9               	movwf	___fladd@b^(0+128)
 16915  0C07  0020               	movlb	0	; select bank0
 16916  0C08  086B               	movf	___fladd@aexp,w
 16917  0C09  0021               	movlb	1	; select bank1
 16918  0C0A  00B1               	movwf	??___fladd^(0+128)
 16919  0C0B  0831               	movf	??___fladd^(0+128),w
 16920  0C0C  0020               	movlb	0	; select bank0
 16921  0C0D  00EC               	movwf	___fladd@bexp
 16922  0C0E  2C33               	goto	l1111
 16923  0C0F                     l1113:	
 16924  0C0F  1C6D               	btfss	___fladd@grs,0
 16925  0C10  2C19               	goto	l5771
 16926  0C11  366D               	lsrf	___fladd@grs,w
 16927  0C12  3801               	iorlw	1
 16928  0C13  0021               	movlb	1	; select bank1
 16929  0C14  00B1               	movwf	??___fladd^(0+128)
 16930  0C15  0831               	movf	??___fladd^(0+128),w
 16931  0C16  0020               	movlb	0	; select bank0
 16932  0C17  00ED               	movwf	___fladd@grs
 16933  0C18  2C1B               	goto	l5773
 16934  0C19                     l5771:	
 16935  0C19  1003               	clrc
 16936  0C1A  0CED               	rrf	___fladd@grs,f
 16937  0C1B                     l5773:	
 16938  0C1B  0021               	movlb	1	; select bank1
 16939  0C1C  1C29               	btfss	___fladd@b^(0+128),0
 16940  0C1D  2C20               	goto	l5777
 16941  0C1E  0020               	movlb	0	; select bank0
 16942  0C1F  17ED               	bsf	___fladd@grs,7
 16943  0C20                     l5777:	
 16944  0C20  3001               	movlw	1
 16945  0C21  0021               	movlb	1	; select bank1
 16946  0C22  00B1               	movwf	??___fladd^(0+128)
 16947  0C23                     u7595:	
 16948  0C23  37AC               	asrf	(___fladd@b+3)^(0+128),f
 16949  0C24  0CAB               	rrf	(___fladd@b+2)^(0+128),f
 16950  0C25  0CAA               	rrf	(___fladd@b+1)^(0+128),f
 16951  0C26  0CA9               	rrf	___fladd@b^(0+128),f
 16952  0C27  0BB1               	decfsz	(??___fladd^(0+128))& (0+127),f
 16953  0C28  2C23               	goto	u7595
 16954  0C29  3001               	movlw	1
 16955  0C2A  00B1               	movwf	??___fladd^(0+128)
 16956  0C2B  0831               	movf	??___fladd^(0+128),w
 16957  0C2C  0020               	movlb	0	; select bank0
 16958  0C2D  07EC               	addwf	___fladd@bexp,f
 16959  0C2E                     l5781:	
 16960  0C2E  0020               	movlb	0	; select bank0
 16961  0C2F  086B               	movf	___fladd@aexp,w
 16962  0C30  026C               	subwf	___fladd@bexp,w
 16963  0C31  1C03               	skipc
 16964  0C32  2C0F               	goto	l1113
 16965  0C33                     l1111:	
 16966  0C33  1B6A               	btfsc	___fladd@signs,6
 16967  0C34  2C70               	goto	l5807
 16968  0C35  086C               	movf	___fladd@bexp,w
 16969  0C36  1D03               	btfss	3,2
 16970  0C37  2C42               	goto	l5789
 16971  0C38  3000               	movlw	0
 16972  0C39  0021               	movlb	1	; select bank1
 16973  0C3A  00AC               	movwf	(?___fladd+3)^(0+128)
 16974  0C3B  3000               	movlw	0
 16975  0C3C  00AB               	movwf	(?___fladd+2)^(0+128)
 16976  0C3D  3000               	movlw	0
 16977  0C3E  00AA               	movwf	(?___fladd+1)^(0+128)
 16978  0C3F  3000               	movlw	0
 16979  0C40  00A9               	movwf	?___fladd^(0+128)
 16980  0C41  0008               	return
 16981  0C42                     l5789:	
 16982  0C42  0021               	movlb	1	; select bank1
 16983  0C43  082D               	movf	___fladd@a^(0+128),w
 16984  0C44  07A9               	addwf	___fladd@b^(0+128),f
 16985  0C45  082E               	movf	(___fladd@a+1)^(0+128),w
 16986  0C46  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 16987  0C47  082F               	movf	(___fladd@a+2)^(0+128),w
 16988  0C48  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 16989  0C49  0830               	movf	(___fladd@a+3)^(0+128),w
 16990  0C4A  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 16991  0C4B  1C2C               	btfss	(___fladd@b+3)^(0+128),0
 16992  0C4C  2D08               	goto	l5841
 16993  0C4D  0020               	movlb	0	; select bank0
 16994  0C4E  1C6D               	btfss	___fladd@grs,0
 16995  0C4F  2C5A               	goto	l5797
 16996  0C50  1003               	clrc
 16997  0C51  0CED               	rrf	___fladd@grs,f
 16998  0C52  086D               	movf	___fladd@grs,w
 16999  0C53  3801               	iorlw	1
 17000  0C54  0021               	movlb	1	; select bank1
 17001  0C55  00B1               	movwf	??___fladd^(0+128)
 17002  0C56  0831               	movf	??___fladd^(0+128),w
 17003  0C57  0020               	movlb	0	; select bank0
 17004  0C58  00ED               	movwf	___fladd@grs
 17005  0C59  2C5C               	goto	l5799
 17006  0C5A                     l5797:	
 17007  0C5A  1003               	clrc
 17008  0C5B  0CED               	rrf	___fladd@grs,f
 17009  0C5C                     l5799:	
 17010  0C5C  0021               	movlb	1	; select bank1
 17011  0C5D  1C29               	btfss	___fladd@b^(0+128),0
 17012  0C5E  2C61               	goto	l5803
 17013  0C5F  0020               	movlb	0	; select bank0
 17014  0C60  17ED               	bsf	___fladd@grs,7
 17015  0C61                     l5803:	
 17016  0C61  3001               	movlw	1
 17017  0C62  0021               	movlb	1	; select bank1
 17018  0C63  00B1               	movwf	??___fladd^(0+128)
 17019  0C64                     u7665:	
 17020  0C64  37AC               	asrf	(___fladd@b+3)^(0+128),f
 17021  0C65  0CAB               	rrf	(___fladd@b+2)^(0+128),f
 17022  0C66  0CAA               	rrf	(___fladd@b+1)^(0+128),f
 17023  0C67  0CA9               	rrf	___fladd@b^(0+128),f
 17024  0C68  0BB1               	decfsz	(??___fladd^(0+128))& (0+127),f
 17025  0C69  2C64               	goto	u7665
 17026  0C6A  3001               	movlw	1
 17027  0C6B  00B1               	movwf	??___fladd^(0+128)
 17028  0C6C  0831               	movf	??___fladd^(0+128),w
 17029  0C6D  0020               	movlb	0	; select bank0
 17030  0C6E  07EC               	addwf	___fladd@bexp,f
 17031  0C6F  2D08               	goto	l5841
 17032  0C70                     l5807:	
 17033  0C70  0021               	movlb	1	; select bank1
 17034  0C71  082C               	movf	(___fladd@b+3)^(0+128),w
 17035  0C72  3A80               	xorlw	128
 17036  0C73  00B1               	movwf	??___fladd^(0+128)
 17037  0C74  0830               	movf	(___fladd@a+3)^(0+128),w
 17038  0C75  3A80               	xorlw	128
 17039  0C76  0231               	subwf	??___fladd^(0+128),w
 17040  0C77  1D03               	skipz
 17041  0C78  2C83               	goto	u7673
 17042  0C79  082F               	movf	(___fladd@a+2)^(0+128),w
 17043  0C7A  022B               	subwf	(___fladd@b+2)^(0+128),w
 17044  0C7B  1D03               	skipz
 17045  0C7C  2C83               	goto	u7673
 17046  0C7D  082E               	movf	(___fladd@a+1)^(0+128),w
 17047  0C7E  022A               	subwf	(___fladd@b+1)^(0+128),w
 17048  0C7F  1D03               	skipz
 17049  0C80  2C83               	goto	u7673
 17050  0C81  082D               	movf	___fladd@a^(0+128),w
 17051  0C82  0229               	subwf	___fladd@b^(0+128),w
 17052  0C83                     u7673:	
 17053  0C83  1803               	skipnc
 17054  0C84  2CD0               	goto	l5817
 17055  0C85  30FF               	movlw	255
 17056  0C86  00B1               	movwf	??___fladd^(0+128)
 17057  0C87  30FF               	movlw	255
 17058  0C88  00B2               	movwf	(??___fladd^(0+128)+1)
 17059  0C89  30FF               	movlw	255
 17060  0C8A  00B3               	movwf	(??___fladd^(0+128)+2)
 17061  0C8B  30FF               	movlw	255
 17062  0C8C  00B4               	movwf	(??___fladd^(0+128)+3)
 17063  0C8D  082D               	movf	___fladd@a^(0+128),w
 17064  0C8E  00B5               	movwf	(??___fladd+4)^(0+128)
 17065  0C8F  082E               	movf	(___fladd@a+1)^(0+128),w
 17066  0C90  00B6               	movwf	((??___fladd+4)^(0+128)+1)
 17067  0C91  082F               	movf	(___fladd@a+2)^(0+128),w
 17068  0C92  00B7               	movwf	((??___fladd+4)^(0+128)+2)
 17069  0C93  0830               	movf	(___fladd@a+3)^(0+128),w
 17070  0C94  00B8               	movwf	((??___fladd+4)^(0+128)+3)
 17071  0C95  0929               	comf	___fladd@b^(0+128),w
 17072  0C96  00B9               	movwf	(??___fladd+8)^(0+128)
 17073  0C97  092A               	comf	(___fladd@b+1)^(0+128),w
 17074  0C98  00BA               	movwf	((??___fladd+8)^(0+128)+1)
 17075  0C99  092B               	comf	(___fladd@b+2)^(0+128),w
 17076  0C9A  00BB               	movwf	((??___fladd+8)^(0+128)+2)
 17077  0C9B  092C               	comf	(___fladd@b+3)^(0+128),w
 17078  0C9C  00BC               	movwf	((??___fladd+8)^(0+128)+3)
 17079  0C9D  0AB9               	incf	(??___fladd+8)^(0+128),f
 17080  0C9E  1903               	skipnz
 17081  0C9F  0ABA               	incf	((??___fladd+8)^(0+128)+1),f
 17082  0CA0  1903               	skipnz
 17083  0CA1  0ABB               	incf	((??___fladd+8)^(0+128)+2),f
 17084  0CA2  1903               	skipnz
 17085  0CA3  0ABC               	incf	((??___fladd+8)^(0+128)+3),f
 17086  0CA4  0839               	movf	(??___fladd+8)^(0+128),w
 17087  0CA5  07B5               	addwf	(??___fladd+4)^(0+128),f
 17088  0CA6  083A               	movf	(??___fladd+9)^(0+128),w
 17089  0CA7  3DB6               	addwfc	((??___fladd+4)^(0+128)+1),f
 17090  0CA8  083B               	movf	(??___fladd+10)^(0+128),w
 17091  0CA9  3DB7               	addwfc	((??___fladd+4)^(0+128)+2),f
 17092  0CAA  083C               	movf	(??___fladd+11)^(0+128),w
 17093  0CAB  3DB8               	addwfc	((??___fladd+4)^(0+128)+3),f
 17094  0CAC  0835               	movf	(??___fladd+4)^(0+128),w
 17095  0CAD  07B1               	addwf	??___fladd^(0+128),f
 17096  0CAE  0836               	movf	(??___fladd+5)^(0+128),w
 17097  0CAF  3DB2               	addwfc	(??___fladd^(0+128)+1),f
 17098  0CB0  0837               	movf	(??___fladd+6)^(0+128),w
 17099  0CB1  3DB3               	addwfc	(??___fladd^(0+128)+2),f
 17100  0CB2  0838               	movf	(??___fladd+7)^(0+128),w
 17101  0CB3  3DB4               	addwfc	(??___fladd^(0+128)+3),f
 17102  0CB4  0834               	movf	(??___fladd+3)^(0+128),w
 17103  0CB5  00AC               	movwf	(___fladd@b+3)^(0+128)
 17104  0CB6  0833               	movf	(??___fladd+2)^(0+128),w
 17105  0CB7  00AB               	movwf	(___fladd@b+2)^(0+128)
 17106  0CB8  0832               	movf	(??___fladd+1)^(0+128),w
 17107  0CB9  00AA               	movwf	(___fladd@b+1)^(0+128)
 17108  0CBA  0831               	movf	??___fladd^(0+128),w
 17109  0CBB  00A9               	movwf	___fladd@b^(0+128)
 17110  0CBC  3080               	movlw	128
 17111  0CBD  00B1               	movwf	??___fladd^(0+128)
 17112  0CBE  0831               	movf	??___fladd^(0+128),w
 17113  0CBF  0020               	movlb	0	; select bank0
 17114  0CC0  06EA               	xorwf	___fladd@signs,f
 17115  0CC1  09ED               	comf	___fladd@grs,f
 17116  0CC2  0AED               	incf	___fladd@grs,f
 17117  0CC3  086D               	movf	___fladd@grs,w
 17118  0CC4  1D03               	btfss	3,2
 17119  0CC5  2CD8               	goto	l1128
 17120  0CC6  3001               	movlw	1
 17121  0CC7  0021               	movlb	1	; select bank1
 17122  0CC8  07A9               	addwf	___fladd@b^(0+128),f
 17123  0CC9  3000               	movlw	0
 17124  0CCA  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 17125  0CCB  3000               	movlw	0
 17126  0CCC  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 17127  0CCD  3000               	movlw	0
 17128  0CCE  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 17129  0CCF  2CD8               	goto	l1128
 17130  0CD0                     l5817:	
 17131  0CD0  082D               	movf	___fladd@a^(0+128),w
 17132  0CD1  02A9               	subwf	___fladd@b^(0+128),f
 17133  0CD2  082E               	movf	(___fladd@a+1)^(0+128),w
 17134  0CD3  3BAA               	subwfb	(___fladd@b+1)^(0+128),f
 17135  0CD4  082F               	movf	(___fladd@a+2)^(0+128),w
 17136  0CD5  3BAB               	subwfb	(___fladd@b+2)^(0+128),f
 17137  0CD6  0830               	movf	(___fladd@a+3)^(0+128),w
 17138  0CD7  3BAC               	subwfb	(___fladd@b+3)^(0+128),f
 17139  0CD8                     l1128:	
 17140  0CD8  0021               	movlb	1	; select bank1
 17141  0CD9  082C               	movf	(___fladd@b+3)^(0+128),w
 17142  0CDA  042B               	iorwf	(___fladd@b+2)^(0+128),w
 17143  0CDB  042A               	iorwf	(___fladd@b+1)^(0+128),w
 17144  0CDC  0429               	iorwf	___fladd@b^(0+128),w
 17145  0CDD  1D03               	skipz
 17146  0CDE  2D05               	goto	l5839
 17147  0CDF  0020               	movlb	0	; select bank0
 17148  0CE0  086D               	movf	___fladd@grs,w
 17149  0CE1  1D03               	btfss	3,2
 17150  0CE2  2D05               	goto	l5839
 17151  0CE3  3000               	movlw	0
 17152  0CE4  0021               	movlb	1	; select bank1
 17153  0CE5  00AC               	movwf	(?___fladd+3)^(0+128)
 17154  0CE6  3000               	movlw	0
 17155  0CE7  00AB               	movwf	(?___fladd+2)^(0+128)
 17156  0CE8  3000               	movlw	0
 17157  0CE9  00AA               	movwf	(?___fladd+1)^(0+128)
 17158  0CEA  3000               	movlw	0
 17159  0CEB  00A9               	movwf	?___fladd^(0+128)
 17160  0CEC  0008               	return
 17161  0CED                     l5825:	
 17162  0CED  3001               	movlw	1
 17163  0CEE                     u7715:	
 17164  0CEE  35A9               	lslf	___fladd@b^(0+128),f
 17165  0CEF  0DAA               	rlf	(___fladd@b+1)^(0+128),f
 17166  0CF0  0DAB               	rlf	(___fladd@b+2)^(0+128),f
 17167  0CF1  0DAC               	rlf	(___fladd@b+3)^(0+128),f
 17168  0CF2  0B89               	decfsz	9,f
 17169  0CF3  2CEE               	goto	u7715
 17170  0CF4  0020               	movlb	0	; select bank0
 17171  0CF5  1FED               	btfss	___fladd@grs,7
 17172  0CF6  2CF9               	goto	l1132
 17173  0CF7  0021               	movlb	1	; select bank1
 17174  0CF8  1429               	bsf	___fladd@b^(0+128),0
 17175  0CF9                     l1132:	
 17176  0CF9  0020               	movlb	0	; select bank0
 17177  0CFA  1C6D               	btfss	___fladd@grs,0
 17178  0CFB  2CFE               	goto	l5833
 17179  0CFC  1403               	setc
 17180  0CFD  2CFF               	goto	L15
 17181  0CFE                     l5833:	
 17182  0CFE  1003               	clrc
 17183  0CFF                     L15:	
 17184  0CFF  0DED               	rlf	___fladd@grs,f
 17185  0D00  086C               	movf	___fladd@bexp,w
 17186  0D01  1903               	btfsc	3,2
 17187  0D02  2D05               	goto	l5839
 17188  0D03  3001               	movlw	1
 17189  0D04  02EC               	subwf	___fladd@bexp,f
 17190  0D05                     l5839:	
 17191  0D05  0021               	movlb	1	; select bank1
 17192  0D06  1FAB               	btfss	(___fladd@b+2)^(0+128),7
 17193  0D07  2CED               	goto	l5825
 17194  0D08                     l5841:	
 17195  0D08  0020               	movlb	0	; select bank0
 17196  0D09  01EB               	clrf	___fladd@aexp
 17197  0D0A  1FED               	btfss	___fladd@grs,7
 17198  0D0B  2D16               	goto	l5851
 17199  0D0C  086D               	movf	___fladd@grs,w
 17200  0D0D  397F               	andlw	127
 17201  0D0E  1D03               	btfss	3,2
 17202  0D0F  2D14               	goto	L16
 17203  0D10  0021               	movlb	1	; select bank1
 17204  0D11  1C29               	btfss	___fladd@b^(0+128),0
 17205  0D12  2D16               	goto	l5851
 17206  0D13  0020               	movlb	0	; select bank0
 17207  0D14                     L16:	
 17208  0D14  01EB               	clrf	___fladd@aexp
 17209  0D15  0AEB               	incf	___fladd@aexp,f
 17210  0D16                     l5851:	
 17211  0D16  0020               	movlb	0	; select bank0
 17212  0D17  086B               	movf	___fladd@aexp,w
 17213  0D18  1903               	btfsc	3,2
 17214  0D19  2D47               	goto	l1141
 17215  0D1A  3001               	movlw	1
 17216  0D1B  0021               	movlb	1	; select bank1
 17217  0D1C  07A9               	addwf	___fladd@b^(0+128),f
 17218  0D1D  3000               	movlw	0
 17219  0D1E  3DAA               	addwfc	(___fladd@b+1)^(0+128),f
 17220  0D1F  3000               	movlw	0
 17221  0D20  3DAB               	addwfc	(___fladd@b+2)^(0+128),f
 17222  0D21  3000               	movlw	0
 17223  0D22  3DAC               	addwfc	(___fladd@b+3)^(0+128),f
 17224  0D23  1C2C               	btfss	(___fladd@b+3)^(0+128),0
 17225  0D24  2D47               	goto	l1141
 17226  0D25  0829               	movf	___fladd@b^(0+128),w
 17227  0D26  00B1               	movwf	??___fladd^(0+128)
 17228  0D27  082A               	movf	(___fladd@b+1)^(0+128),w
 17229  0D28  00B2               	movwf	(??___fladd^(0+128)+1)
 17230  0D29  082B               	movf	(___fladd@b+2)^(0+128),w
 17231  0D2A  00B3               	movwf	(??___fladd^(0+128)+2)
 17232  0D2B  082C               	movf	(___fladd@b+3)^(0+128),w
 17233  0D2C  00B4               	movwf	(??___fladd^(0+128)+3)
 17234  0D2D  3001               	movlw	1
 17235  0D2E  00B5               	movwf	(??___fladd+4)^(0+128)
 17236  0D2F                     u7815:	
 17237  0D2F  37B4               	asrf	(??___fladd^(0+128)+3),f
 17238  0D30  0CB3               	rrf	(??___fladd^(0+128)+2),f
 17239  0D31  0CB2               	rrf	(??___fladd^(0+128)+1),f
 17240  0D32  0CB1               	rrf	??___fladd^(0+128),f
 17241  0D33  0BB5               	decfsz	(??___fladd+4)^(0+128),f
 17242  0D34  2D2F               	goto	u7815
 17243  0D35  0834               	movf	(??___fladd+3)^(0+128),w
 17244  0D36  00AC               	movwf	(___fladd@b+3)^(0+128)
 17245  0D37  0833               	movf	(??___fladd+2)^(0+128),w
 17246  0D38  00AB               	movwf	(___fladd@b+2)^(0+128)
 17247  0D39  0832               	movf	(??___fladd+1)^(0+128),w
 17248  0D3A  00AA               	movwf	(___fladd@b+1)^(0+128)
 17249  0D3B  0831               	movf	??___fladd^(0+128),w
 17250  0D3C  00A9               	movwf	___fladd@b^(0+128)
 17251  0D3D  0020               	movlb	0	; select bank0
 17252  0D3E  0A6C               	incf	___fladd@bexp,w
 17253  0D3F  1903               	btfsc	3,2
 17254  0D40  2D47               	goto	l1141
 17255  0D41  3001               	movlw	1
 17256  0D42  0021               	movlb	1	; select bank1
 17257  0D43  00B1               	movwf	??___fladd^(0+128)
 17258  0D44  0831               	movf	??___fladd^(0+128),w
 17259  0D45  0020               	movlb	0	; select bank0
 17260  0D46  07EC               	addwf	___fladd@bexp,f
 17261  0D47                     l1141:	
 17262  0D47  0020               	movlb	0	; select bank0
 17263  0D48  0A6C               	incf	___fladd@bexp,w
 17264  0D49  1D03               	btfss	3,2
 17265  0D4A  086C               	movf	___fladd@bexp,w
 17266  0D4B  1D03               	btfss	3,2
 17267  0D4C  2D5A               	goto	l5869
 17268  0D4D  3000               	movlw	0
 17269  0D4E  0021               	movlb	1	; select bank1
 17270  0D4F  00AC               	movwf	(___fladd@b+3)^(0+128)
 17271  0D50  3000               	movlw	0
 17272  0D51  00AB               	movwf	(___fladd@b+2)^(0+128)
 17273  0D52  3000               	movlw	0
 17274  0D53  00AA               	movwf	(___fladd@b+1)^(0+128)
 17275  0D54  3000               	movlw	0
 17276  0D55  00A9               	movwf	___fladd@b^(0+128)
 17277  0D56  0020               	movlb	0	; select bank0
 17278  0D57  086C               	movf	___fladd@bexp,w
 17279  0D58  1903               	btfsc	3,2
 17280  0D59  01EA               	clrf	___fladd@signs
 17281  0D5A                     l5869:	
 17282  0D5A  1C6C               	btfss	___fladd@bexp,0
 17283  0D5B  2D5F               	goto	l5873
 17284  0D5C  0021               	movlb	1	; select bank1
 17285  0D5D  17AB               	bsf	(___fladd@b^(0+128)+2),7
 17286  0D5E  2D64               	goto	l1149
 17287  0D5F                     l5873:	
 17288  0D5F  307F               	movlw	127
 17289  0D60  0021               	movlb	1	; select bank1
 17290  0D61  00B1               	movwf	??___fladd^(0+128)
 17291  0D62  0831               	movf	??___fladd^(0+128),w
 17292  0D63  05AB               	andwf	(___fladd@b^(0+128)+2),f
 17293  0D64                     l1149:	
 17294  0D64  0020               	movlb	0	; select bank0
 17295  0D65  366C               	lsrf	___fladd@bexp,w
 17296  0D66  0021               	movlb	1	; select bank1
 17297  0D67  00B1               	movwf	??___fladd^(0+128)
 17298  0D68  0831               	movf	??___fladd^(0+128),w
 17299  0D69  00AC               	movwf	(___fladd@b^(0+128)+3)
 17300  0D6A  0020               	movlb	0	; select bank0
 17301  0D6B  1FEA               	btfss	___fladd@signs,7
 17302  0D6C  0008               	return
 17303  0D6D  0021               	movlb	1	; select bank1
 17304  0D6E  17AC               	bsf	(___fladd@b^(0+128)+3),7
 17305  0D6F  0008               	return
 17306  0D70                     __end_of___fladd:	
 17307                           
 17308                           	psect	text46
 17309  237A                     __ptext46:	
 17310 ;; *************** function _adcRead *****************
 17311 ;; Defined at:
 17312 ;;		line 52 in file "adc.c"
 17313 ;; Parameters:    Size  Location     Type
 17314 ;;  ch              1    wreg     unsigned char 
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;  ch              1    7[BANK0 ] unsigned char 
 17317 ;;  total           2   12[BANK0 ] int 
 17318 ;;  ansLow          2   10[BANK0 ] int 
 17319 ;;  ansHigh         2    8[BANK0 ] int 
 17320 ;; Return value:  Size  Location     Type
 17321 ;;                  2    2[COMMON] int 
 17322 ;; Registers used:
 17323 ;;		wreg, status,2, status,0
 17324 ;; Tracked objects:
 17325 ;;		On entry : 0/0
 17326 ;;		On exit  : 0/0
 17327 ;;		Unchanged: 0/0
 17328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17329 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17330 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17331 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17332 ;;      Totals:         2      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17333 ;;Total ram usage:       16 bytes
 17334 ;; Hardware stack levels used:    1
 17335 ;; Hardware stack levels required when called:    2
 17336 ;; This function calls:
 17337 ;;		Nothing
 17338 ;; This function is called by:
 17339 ;;		_getCurrent
 17340 ;;		_getTemps
 17341 ;; This function uses a non-reentrant model
 17342 ;;
 17343                           
 17344                           
 17345                           ;psect for function _adcRead
 17346  237A                     _adcRead:	
 17347                           
 17348                           ;incstack = 0
 17349                           ; Regs used in _adcRead: [wreg+status,2+status,0]
 17350                           ;adcRead@ch stored from wreg
 17351  237A  0020               	movlb	0	; select bank0
 17352  237B  00A7               	movwf	adcRead@ch
 17353                           
 17354                           ;adc.c: 53: ADCON0bits.CHS = ch;
 17355  237C  0827               	movf	adcRead@ch,w
 17356  237D  00A0               	movwf	??_adcRead
 17357  237E  0DA0               	rlf	??_adcRead,f
 17358  237F  0DA0               	rlf	??_adcRead,f
 17359  2380  0021               	movlb	1	; select bank1
 17360  2381  081D               	movf	29,w	;volatile
 17361  2382  0020               	movlb	0	; select bank0
 17362  2383  0620               	xorwf	??_adcRead,w
 17363  2384  3983               	andlw	-125
 17364  2385  0620               	xorwf	??_adcRead,w
 17365  2386  0021               	movlb	1	; select bank1
 17366  2387  009D               	movwf	29	;volatile
 17367                           
 17368                           ;adc.c: 54: ADCON0bits.ADON = 1;
 17369  2388  141D               	bsf	29,0	;volatile
 17370                           
 17371                           ;adc.c: 56: _delay((unsigned long)((15)*(32000000/4000000.0)));
 17372  2389  3028               	movlw	40
 17373  238A                     u10587:	
 17374  238A  0B89               	decfsz	9,f
 17375  238B  2B8A               	goto	u10587
 17376                           
 17377                           ;adc.c: 57: ADCON0bits.GO = 1;
 17378  238C  0021               	movlb	1	; select bank1
 17379  238D  149D               	bsf	29,1	;volatile
 17380  238E                     l177:	
 17381                           ;adc.c: 59: while(ADCON0bits.DONE == 1);
 17382                           
 17383  238E  189D               	btfsc	29,1	;volatile
 17384  238F  2B8E               	goto	l177
 17385                           
 17386                           ;adc.c: 61: int ansHigh = ADRESH;
 17387  2390  081C               	movf	28,w	;volatile
 17388  2391  0020               	movlb	0	; select bank0
 17389  2392  00A0               	movwf	??_adcRead
 17390  2393  01A1               	clrf	??_adcRead+1
 17391  2394  0820               	movf	??_adcRead,w
 17392  2395  00A8               	movwf	adcRead@ansHigh
 17393  2396  0821               	movf	??_adcRead+1,w
 17394  2397  00A9               	movwf	adcRead@ansHigh+1
 17395                           
 17396                           ;adc.c: 62: int ansLow = ADRESL;
 17397  2398  0021               	movlb	1	; select bank1
 17398  2399  081B               	movf	27,w	;volatile
 17399  239A  0020               	movlb	0	; select bank0
 17400  239B  00A0               	movwf	??_adcRead
 17401  239C  01A1               	clrf	??_adcRead+1
 17402  239D  0820               	movf	??_adcRead,w
 17403  239E  00AA               	movwf	adcRead@ansLow
 17404  239F  0821               	movf	??_adcRead+1,w
 17405  23A0  00AB               	movwf	adcRead@ansLow+1
 17406                           
 17407                           ;adc.c: 64: int total = ((ansHigh << 4) | (ansLow >> 4) & 0x0FFF);
 17408  23A1  082B               	movf	adcRead@ansLow+1,w
 17409  23A2  00A1               	movwf	??_adcRead+1
 17410  23A3  082A               	movf	adcRead@ansLow,w
 17411  23A4  00A0               	movwf	??_adcRead
 17412  23A5  3004               	movlw	4
 17413  23A6  00A2               	movwf	??_adcRead+2
 17414  23A7                     u9245:	
 17415  23A7  0D21               	rlf	??_adcRead+1,w
 17416  23A8  0CA1               	rrf	??_adcRead+1,f
 17417  23A9  0CA0               	rrf	??_adcRead,f
 17418  23AA  0BA2               	decfsz	??_adcRead+2,f
 17419  23AB  2BA7               	goto	u9245
 17420  23AC  30FF               	movlw	255
 17421  23AD  0520               	andwf	??_adcRead,w
 17422  23AE  00A3               	movwf	??_adcRead+3
 17423  23AF  300F               	movlw	15
 17424  23B0  0521               	andwf	??_adcRead+1,w
 17425  23B1  00A4               	movwf	??_adcRead+4
 17426  23B2  0829               	movf	adcRead@ansHigh+1,w
 17427  23B3  00A6               	movwf	??_adcRead+6
 17428  23B4  0828               	movf	adcRead@ansHigh,w
 17429  23B5  00A5               	movwf	??_adcRead+5
 17430  23B6  0EA5               	swapf	??_adcRead+5,f
 17431  23B7  0EA6               	swapf	??_adcRead+6,f
 17432  23B8  30F0               	movlw	240
 17433  23B9  05A6               	andwf	??_adcRead+6,f
 17434  23BA  0825               	movf	??_adcRead+5,w
 17435  23BB  390F               	andlw	15
 17436  23BC  04A6               	iorwf	??_adcRead+6,f
 17437  23BD  30F0               	movlw	240
 17438  23BE  05A5               	andwf	??_adcRead+5,f
 17439  23BF  0823               	movf	??_adcRead+3,w
 17440  23C0  0425               	iorwf	??_adcRead+5,w
 17441  23C1  00AC               	movwf	adcRead@total
 17442  23C2  0824               	movf	??_adcRead+4,w
 17443  23C3  0426               	iorwf	??_adcRead+6,w
 17444  23C4  00AD               	movwf	adcRead@total+1
 17445                           
 17446                           ;adc.c: 65: ADCON0bits.ADON = 0;
 17447  23C5  0021               	movlb	1	; select bank1
 17448  23C6  101D               	bcf	29,0	;volatile
 17449                           
 17450                           ;adc.c: 66: return total;
 17451  23C7  0020               	movlb	0	; select bank0
 17452  23C8  082D               	movf	adcRead@total+1,w
 17453  23C9  00F3               	movwf	?_adcRead+1
 17454  23CA  082C               	movf	adcRead@total,w
 17455  23CB  00F2               	movwf	?_adcRead
 17456  23CC  0008               	return
 17457  23CD                     __end_of_adcRead:	
 17458                           
 17459                           	psect	text47
 17460  26D0                     __ptext47:	
 17461 ;; *************** function ___xxtofl *****************
 17462 ;; Defined at:
 17463 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 17464 ;; Parameters:    Size  Location     Type
 17465 ;;  sign            1    wreg     unsigned char 
 17466 ;;  val             4   14[BANK0 ] long 
 17467 ;; Auto vars:     Size  Location     Type
 17468 ;;  sign            1   18[BANK0 ] unsigned char 
 17469 ;;  arg             4   20[BANK0 ] unsigned long 
 17470 ;;  exp             1   19[BANK0 ] unsigned char 
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  4   14[BANK0 ] unsigned char 
 17473 ;; Registers used:
 17474 ;;		wreg, status,2, status,0
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/0
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17480 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17481 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17482 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17483 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17484 ;;Total ram usage:       14 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; Hardware stack levels required when called:    2
 17487 ;; This function calls:
 17488 ;;		Nothing
 17489 ;; This function is called by:
 17490 ;;		_calculateTemp
 17491 ;;		_getCurrent
 17492 ;;		_measureVoltages
 17493 ;;		_sprintf
 17494 ;;		_log
 17495 ;;		_avgBuff
 17496 ;; This function uses a non-reentrant model
 17497 ;;
 17498                           
 17499                           
 17500                           ;psect for function ___xxtofl
 17501  26D0                     ___xxtofl:	
 17502                           
 17503                           ;incstack = 0
 17504                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 17505                           ;___xxtofl@sign stored from wreg
 17506  26D0  0020               	movlb	0	; select bank0
 17507  26D1  00B2               	movwf	___xxtofl@sign
 17508  26D2  0832               	movf	___xxtofl@sign,w
 17509  26D3  1D03               	btfss	3,2
 17510  26D4  1FB1               	btfss	___xxtofl@val+3,7
 17511  26D5  2EE6               	goto	l6159
 17512  26D6  092E               	comf	___xxtofl@val,w
 17513  26D7  00B4               	movwf	___xxtofl@arg
 17514  26D8  092F               	comf	___xxtofl@val+1,w
 17515  26D9  00B5               	movwf	___xxtofl@arg+1
 17516  26DA  0930               	comf	___xxtofl@val+2,w
 17517  26DB  00B6               	movwf	___xxtofl@arg+2
 17518  26DC  0931               	comf	___xxtofl@val+3,w
 17519  26DD  00B7               	movwf	___xxtofl@arg+3
 17520  26DE  0AB4               	incf	___xxtofl@arg,f
 17521  26DF  1903               	skipnz
 17522  26E0  0AB5               	incf	___xxtofl@arg+1,f
 17523  26E1  1903               	skipnz
 17524  26E2  0AB6               	incf	___xxtofl@arg+2,f
 17525  26E3  1903               	skipnz
 17526  26E4  0AB7               	incf	___xxtofl@arg+3,f
 17527  26E5  2EEE               	goto	l1222
 17528  26E6                     l6159:	
 17529  26E6  0831               	movf	___xxtofl@val+3,w
 17530  26E7  00B7               	movwf	___xxtofl@arg+3
 17531  26E8  0830               	movf	___xxtofl@val+2,w
 17532  26E9  00B6               	movwf	___xxtofl@arg+2
 17533  26EA  082F               	movf	___xxtofl@val+1,w
 17534  26EB  00B5               	movwf	___xxtofl@arg+1
 17535  26EC  082E               	movf	___xxtofl@val,w
 17536  26ED  00B4               	movwf	___xxtofl@arg
 17537  26EE                     l1222:	
 17538  26EE  0831               	movf	___xxtofl@val+3,w
 17539  26EF  0430               	iorwf	___xxtofl@val+2,w
 17540  26F0  042F               	iorwf	___xxtofl@val+1,w
 17541  26F1  042E               	iorwf	___xxtofl@val,w
 17542  26F2  1D03               	skipz
 17543  26F3  2EFD               	goto	l6165
 17544  26F4  3000               	movlw	0
 17545  26F5  00B1               	movwf	?___xxtofl+3
 17546  26F6  3000               	movlw	0
 17547  26F7  00B0               	movwf	?___xxtofl+2
 17548  26F8  3000               	movlw	0
 17549  26F9  00AF               	movwf	?___xxtofl+1
 17550  26FA  3000               	movlw	0
 17551  26FB  00AE               	movwf	?___xxtofl
 17552  26FC  0008               	return
 17553  26FD                     l6165:	
 17554  26FD  3096               	movlw	150
 17555  26FE  00F4               	movwf	??___xxtofl
 17556  26FF  0874               	movf	??___xxtofl,w
 17557  2700  00B3               	movwf	___xxtofl@exp
 17558  2701                     l6169:	
 17559  2701  30FE               	movlw	254
 17560  2702  0537               	andwf	___xxtofl@arg+3,w
 17561  2703  1903               	btfsc	3,2
 17562  2704  2F24               	goto	l1228
 17563  2705  3001               	movlw	1
 17564  2706  00F4               	movwf	??___xxtofl
 17565  2707  0874               	movf	??___xxtofl,w
 17566  2708  07B3               	addwf	___xxtofl@exp,f
 17567  2709  3001               	movlw	1
 17568  270A                     u8445:	
 17569  270A  36B7               	lsrf	___xxtofl@arg+3,f
 17570  270B  0CB6               	rrf	___xxtofl@arg+2,f
 17571  270C  0CB5               	rrf	___xxtofl@arg+1,f
 17572  270D  0CB4               	rrf	___xxtofl@arg,f
 17573  270E  0B89               	decfsz	9,f
 17574  270F  2F0A               	goto	u8445
 17575  2710  2F01               	goto	l6169
 17576  2711                     l6171:	
 17577  2711  3001               	movlw	1
 17578  2712  00F4               	movwf	??___xxtofl
 17579  2713  0874               	movf	??___xxtofl,w
 17580  2714  07B3               	addwf	___xxtofl@exp,f
 17581  2715  3001               	movlw	1
 17582  2716  07B4               	addwf	___xxtofl@arg,f
 17583  2717  3000               	movlw	0
 17584  2718  3DB5               	addwfc	___xxtofl@arg+1,f
 17585  2719  3000               	movlw	0
 17586  271A  3DB6               	addwfc	___xxtofl@arg+2,f
 17587  271B  3000               	movlw	0
 17588  271C  3DB7               	addwfc	___xxtofl@arg+3,f
 17589  271D  3001               	movlw	1
 17590  271E                     u8465:	
 17591  271E  36B7               	lsrf	___xxtofl@arg+3,f
 17592  271F  0CB6               	rrf	___xxtofl@arg+2,f
 17593  2720  0CB5               	rrf	___xxtofl@arg+1,f
 17594  2721  0CB4               	rrf	___xxtofl@arg,f
 17595  2722  0B89               	decfsz	9,f
 17596  2723  2F1E               	goto	u8465
 17597  2724                     l1228:	
 17598  2724  30FF               	movlw	255
 17599  2725  0537               	andwf	___xxtofl@arg+3,w
 17600  2726  1903               	btfsc	3,2
 17601  2727  2F32               	goto	l6179
 17602  2728  2F11               	goto	l6171
 17603  2729                     l6177:	
 17604  2729  3001               	movlw	1
 17605  272A  02B3               	subwf	___xxtofl@exp,f
 17606  272B  3001               	movlw	1
 17607  272C                     u8485:	
 17608  272C  35B4               	lslf	___xxtofl@arg,f
 17609  272D  0DB5               	rlf	___xxtofl@arg+1,f
 17610  272E  0DB6               	rlf	___xxtofl@arg+2,f
 17611  272F  0DB7               	rlf	___xxtofl@arg+3,f
 17612  2730  0B89               	decfsz	9,f
 17613  2731  2F2C               	goto	u8485
 17614  2732                     l6179:	
 17615  2732  1BB6               	btfsc	___xxtofl@arg+2,7
 17616  2733  2F38               	goto	l1235
 17617  2734  3002               	movlw	2
 17618  2735  0233               	subwf	___xxtofl@exp,w
 17619  2736  1803               	skipnc
 17620  2737  2F29               	goto	l6177
 17621  2738                     l1235:	
 17622  2738  1833               	btfsc	___xxtofl@exp,0
 17623  2739  2F42               	goto	l1236
 17624  273A  30FF               	movlw	255
 17625  273B  05B4               	andwf	___xxtofl@arg,f
 17626  273C  30FF               	movlw	255
 17627  273D  05B5               	andwf	___xxtofl@arg+1,f
 17628  273E  307F               	movlw	127
 17629  273F  05B6               	andwf	___xxtofl@arg+2,f
 17630  2740  30FF               	movlw	255
 17631  2741  05B7               	andwf	___xxtofl@arg+3,f
 17632  2742                     l1236:	
 17633  2742  1003               	clrc
 17634  2743  0CB3               	rrf	___xxtofl@exp,f
 17635  2744  0833               	movf	___xxtofl@exp,w
 17636  2745  00F4               	movwf	??___xxtofl
 17637  2746  01F5               	clrf	??___xxtofl+1
 17638  2747  01F6               	clrf	??___xxtofl+2
 17639  2748  01F7               	clrf	??___xxtofl+3
 17640  2749  3018               	movlw	24
 17641  274A                     u8525:	
 17642  274A  35F4               	lslf	??___xxtofl,f
 17643  274B  0DF5               	rlf	??___xxtofl+1,f
 17644  274C  0DF6               	rlf	??___xxtofl+2,f
 17645  274D  0DF7               	rlf	??___xxtofl+3,f
 17646  274E  0B89               	decfsz	9,f
 17647  274F  2F4A               	goto	u8525
 17648  2750  0874               	movf	??___xxtofl,w
 17649  2751  04B4               	iorwf	___xxtofl@arg,f
 17650  2752  0875               	movf	??___xxtofl+1,w
 17651  2753  04B5               	iorwf	___xxtofl@arg+1,f
 17652  2754  0876               	movf	??___xxtofl+2,w
 17653  2755  04B6               	iorwf	___xxtofl@arg+2,f
 17654  2756  0877               	movf	??___xxtofl+3,w
 17655  2757  04B7               	iorwf	___xxtofl@arg+3,f
 17656  2758  0832               	movf	___xxtofl@sign,w
 17657  2759  1D03               	btfss	3,2
 17658  275A  1FB1               	btfss	___xxtofl@val+3,7
 17659  275B  2F5D               	goto	l6193
 17660  275C  17B7               	bsf	___xxtofl@arg+3,7
 17661  275D                     l6193:	
 17662  275D  0837               	movf	___xxtofl@arg+3,w
 17663  275E  00B1               	movwf	?___xxtofl+3
 17664  275F  0836               	movf	___xxtofl@arg+2,w
 17665  2760  00B0               	movwf	?___xxtofl+2
 17666  2761  0835               	movf	___xxtofl@arg+1,w
 17667  2762  00AF               	movwf	?___xxtofl+1
 17668  2763  0834               	movf	___xxtofl@arg,w
 17669  2764  00AE               	movwf	?___xxtofl
 17670  2765  0008               	return
 17671  2766                     __end_of___xxtofl:	
 17672                           
 17673                           	psect	text48
 17674  2FE9                     __ptext48:	
 17675 ;; *************** function _setup *****************
 17676 ;; Defined at:
 17677 ;;		line 144 in file "main.c"
 17678 ;; Parameters:    Size  Location     Type
 17679 ;;		None
 17680 ;; Auto vars:     Size  Location     Type
 17681 ;;		None
 17682 ;; Return value:  Size  Location     Type
 17683 ;;                  1    wreg      void 
 17684 ;; Registers used:
 17685 ;;		wreg, status,2, status,0, pclath, cstack
 17686 ;; Tracked objects:
 17687 ;;		On entry : 0/0
 17688 ;;		On exit  : 0/0
 17689 ;;		Unchanged: 0/0
 17690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17695 ;;Total ram usage:        0 bytes
 17696 ;; Hardware stack levels used:    1
 17697 ;; Hardware stack levels required when called:    4
 17698 ;; This function calls:
 17699 ;;		_adcSetup
 17700 ;;		_spiSetup
 17701 ;;		_timerSetup
 17702 ;;		_uartSetup
 17703 ;; This function is called by:
 17704 ;;		_main
 17705 ;; This function uses a non-reentrant model
 17706 ;;
 17707                           
 17708                           
 17709                           ;psect for function _setup
 17710  2FE9                     _setup:	
 17711                           
 17712                           ;main.c: 146: TRISDbits.TRISD7 = 0;
 17713                           
 17714                           ;incstack = 0
 17715                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
 17716  2FE9  0021               	movlb	1	; select bank1
 17717  2FEA  138F               	bcf	15,7	;volatile
 17718                           
 17719                           ;main.c: 147: TRISDbits.TRISD4 = 0;
 17720  2FEB  120F               	bcf	15,4	;volatile
 17721                           
 17722                           ;main.c: 148: TRISDbits.TRISD5 = 0;
 17723  2FEC  128F               	bcf	15,5	;volatile
 17724                           
 17725                           ;main.c: 149: TRISAbits.TRISA0 = 1;
 17726  2FED  140C               	bsf	12,0	;volatile
 17727                           
 17728                           ;main.c: 152: timerSetup();
 17729  2FEE  31AF  2773  31AF   	fcall	_timerSetup
 17730                           
 17731                           ;main.c: 155: INTCONbits.GIE = 1;
 17732  2FF1  178B               	bsf	11,7	;volatile
 17733                           
 17734                           ;main.c: 156: INTCONbits.PEIE = 1;
 17735  2FF2  170B               	bsf	11,6	;volatile
 17736                           
 17737                           ;main.c: 159: TRISDbits.TRISD2 = 0;
 17738  2FF3  0021               	movlb	1	; select bank1
 17739  2FF4  110F               	bcf	15,2	;volatile
 17740                           
 17741                           ;main.c: 160: PORTDbits.RD2 = 1;
 17742  2FF5  0020               	movlb	0	; select bank0
 17743  2FF6  150F               	bsf	15,2	;volatile
 17744                           
 17745                           ;main.c: 163: adcSetup();
 17746  2FF7  31A0  2041  31AF   	fcall	_adcSetup
 17747                           
 17748                           ;main.c: 166: uartSetup();
 17749  2FFA  31A0  2002  31AF   	fcall	_uartSetup
 17750                           
 17751                           ;main.c: 175: spiSetup();
 17752  2FFD  31AF  27D2         	fcall	_spiSetup
 17753  2FFF  0008               	return
 17754  3000                     __end_of_setup:	
 17755                           
 17756                           	psect	text49
 17757  2002                     __ptext49:	
 17758 ;; *************** function _uartSetup *****************
 17759 ;; Defined at:
 17760 ;;		line 66 in file "uart.c"
 17761 ;; Parameters:    Size  Location     Type
 17762 ;;		None
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;		None
 17765 ;; Return value:  Size  Location     Type
 17766 ;;                  1    wreg      void 
 17767 ;; Registers used:
 17768 ;;		wreg, status,2
 17769 ;; Tracked objects:
 17770 ;;		On entry : 0/0
 17771 ;;		On exit  : 0/0
 17772 ;;		Unchanged: 0/0
 17773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17778 ;;Total ram usage:        0 bytes
 17779 ;; Hardware stack levels used:    1
 17780 ;; Hardware stack levels required when called:    2
 17781 ;; This function calls:
 17782 ;;		Nothing
 17783 ;; This function is called by:
 17784 ;;		_setup
 17785 ;; This function uses a non-reentrant model
 17786 ;;
 17787                           
 17788                           
 17789                           ;psect for function _uartSetup
 17790  2002                     _uartSetup:	
 17791                           
 17792                           ;uart.c: 67: TXSTAbits.TX9 = 0;
 17793                           
 17794                           ;incstack = 0
 17795                           ; Regs used in _uartSetup: [wreg+status,2]
 17796  2002  0023               	movlb	3	; select bank3
 17797  2003  131E               	bcf	30,6	;volatile
 17798                           
 17799                           ;uart.c: 68: TXSTAbits.TXEN = 1;
 17800  2004  169E               	bsf	30,5	;volatile
 17801                           
 17802                           ;uart.c: 69: TXSTAbits.SYNC = 0;
 17803  2005  121E               	bcf	30,4	;volatile
 17804                           
 17805                           ;uart.c: 70: TXSTAbits.BRGH = 0;
 17806  2006  111E               	bcf	30,2	;volatile
 17807                           
 17808                           ;uart.c: 71: RCSTAbits.RX9 = 0;
 17809  2007  131D               	bcf	29,6	;volatile
 17810                           
 17811                           ;uart.c: 72: RCSTAbits.SPEN = 1;
 17812  2008  179D               	bsf	29,7	;volatile
 17813                           
 17814                           ;uart.c: 73: SPBRGH = 0;
 17815  2009  019C               	clrf	28	;volatile
 17816                           
 17817                           ;uart.c: 74: SPBRGL = 25;
 17818  200A  3019               	movlw	25
 17819  200B  009B               	movwf	27	;volatile
 17820                           
 17821                           ;uart.c: 75: PIR1bits.TXIF = 0;
 17822  200C  0020               	movlb	0	; select bank0
 17823  200D  1211               	bcf	17,4	;volatile
 17824  200E  0008               	return
 17825  200F                     __end_of_uartSetup:	
 17826                           
 17827                           	psect	text50
 17828  2F73                     __ptext50:	
 17829 ;; *************** function _timerSetup *****************
 17830 ;; Defined at:
 17831 ;;		line 10 in file "timer.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;		None
 17834 ;; Auto vars:     Size  Location     Type
 17835 ;;		None
 17836 ;; Return value:  Size  Location     Type
 17837 ;;                  1    wreg      void 
 17838 ;; Registers used:
 17839 ;;		wreg, status,2, status,0, pclath, cstack
 17840 ;; Tracked objects:
 17841 ;;		On entry : 0/0
 17842 ;;		On exit  : 0/0
 17843 ;;		Unchanged: 0/0
 17844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;Total ram usage:        0 bytes
 17850 ;; Hardware stack levels used:    1
 17851 ;; Hardware stack levels required when called:    3
 17852 ;; This function calls:
 17853 ;;		_timer0Setup
 17854 ;;		_timer2Setup
 17855 ;; This function is called by:
 17856 ;;		_setup
 17857 ;; This function uses a non-reentrant model
 17858 ;;
 17859                           
 17860                           
 17861                           ;psect for function _timerSetup
 17862  2F73                     _timerSetup:	
 17863                           
 17864                           ;timer.c: 11: timer0Setup();
 17865                           
 17866                           ;incstack = 0
 17867                           ; Regs used in _timerSetup: [wreg+status,2+status,0+pclath+cstack]
 17868  2F73  31AF  276E  31AF   	fcall	_timer0Setup
 17869                           
 17870                           ;timer.c: 12: timer2Setup();
 17871  2F76  31AF  2793         	fcall	_timer2Setup
 17872  2F78  0008               	return
 17873  2F79                     __end_of_timerSetup:	
 17874                           
 17875                           	psect	text51
 17876  2F93                     __ptext51:	
 17877 ;; *************** function _timer2Setup *****************
 17878 ;; Defined at:
 17879 ;;		line 15 in file "timer.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;		None
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;		None
 17884 ;; Return value:  Size  Location     Type
 17885 ;;                  1    wreg      void 
 17886 ;; Registers used:
 17887 ;;		wreg
 17888 ;; Tracked objects:
 17889 ;;		On entry : 0/0
 17890 ;;		On exit  : 0/0
 17891 ;;		Unchanged: 0/0
 17892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17897 ;;Total ram usage:        0 bytes
 17898 ;; Hardware stack levels used:    1
 17899 ;; Hardware stack levels required when called:    2
 17900 ;; This function calls:
 17901 ;;		Nothing
 17902 ;; This function is called by:
 17903 ;;		_timerSetup
 17904 ;; This function uses a non-reentrant model
 17905 ;;
 17906                           
 17907                           
 17908                           ;psect for function _timer2Setup
 17909  2F93                     _timer2Setup:	
 17910                           
 17911                           ;timer.c: 16: CCP2CON = 0x06;
 17912                           
 17913                           ;incstack = 0
 17914                           ; Regs used in _timer2Setup: [wreg]
 17915  2F93  3006               	movlw	6
 17916  2F94  0025               	movlb	5	; select bank5
 17917  2F95  009A               	movwf	26	;volatile
 17918                           
 17919                           ;timer.c: 17: PIE1bits.TMR2IE = 1;
 17920  2F96  0021               	movlb	1	; select bank1
 17921  2F97  1491               	bsf	17,1	;volatile
 17922                           
 17923                           ;timer.c: 18: PR2 = 254;
 17924  2F98  30FE               	movlw	254
 17925  2F99  0020               	movlb	0	; select bank0
 17926  2F9A  009B               	movwf	27	;volatile
 17927                           
 17928                           ;timer.c: 19: T2CON = 0x4F;
 17929  2F9B  304F               	movlw	79
 17930  2F9C  009C               	movwf	28	;volatile
 17931  2F9D  0008               	return
 17932  2F9E                     __end_of_timer2Setup:	
 17933                           
 17934                           	psect	text52
 17935  2F6E                     __ptext52:	
 17936 ;; *************** function _timer0Setup *****************
 17937 ;; Defined at:
 17938 ;;		line 22 in file "timer.c"
 17939 ;; Parameters:    Size  Location     Type
 17940 ;;		None
 17941 ;; Auto vars:     Size  Location     Type
 17942 ;;		None
 17943 ;; Return value:  Size  Location     Type
 17944 ;;                  1    wreg      void 
 17945 ;; Registers used:
 17946 ;;		wreg
 17947 ;; Tracked objects:
 17948 ;;		On entry : 0/0
 17949 ;;		On exit  : 0/0
 17950 ;;		Unchanged: 0/0
 17951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17956 ;;Total ram usage:        0 bytes
 17957 ;; Hardware stack levels used:    1
 17958 ;; Hardware stack levels required when called:    2
 17959 ;; This function calls:
 17960 ;;		Nothing
 17961 ;; This function is called by:
 17962 ;;		_timerSetup
 17963 ;; This function uses a non-reentrant model
 17964 ;;
 17965                           
 17966                           
 17967                           ;psect for function _timer0Setup
 17968  2F6E                     _timer0Setup:	
 17969                           
 17970                           ;timer.c: 24: OPTION_REG = 0b10000110;
 17971                           
 17972                           ;incstack = 0
 17973                           ; Regs used in _timer0Setup: [wreg]
 17974  2F6E  3086               	movlw	134
 17975  2F6F  0021               	movlb	1	; select bank1
 17976  2F70  0095               	movwf	21	;volatile
 17977                           
 17978                           ;timer.c: 25: INTCONbits.TMR0IE = 1;
 17979  2F71  168B               	bsf	11,5	;volatile
 17980  2F72  0008               	return
 17981  2F73                     __end_of_timer0Setup:	
 17982                           
 17983                           	psect	text53
 17984  2FD2                     __ptext53:	
 17985 ;; *************** function _spiSetup *****************
 17986 ;; Defined at:
 17987 ;;		line 12 in file "spi.c"
 17988 ;; Parameters:    Size  Location     Type
 17989 ;;		None
 17990 ;; Auto vars:     Size  Location     Type
 17991 ;;		None
 17992 ;; Return value:  Size  Location     Type
 17993 ;;                  1    wreg      void 
 17994 ;; Registers used:
 17995 ;;		wreg
 17996 ;; Tracked objects:
 17997 ;;		On entry : 0/0
 17998 ;;		On exit  : 0/0
 17999 ;;		Unchanged: 0/0
 18000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18005 ;;Total ram usage:        0 bytes
 18006 ;; Hardware stack levels used:    1
 18007 ;; Hardware stack levels required when called:    2
 18008 ;; This function calls:
 18009 ;;		Nothing
 18010 ;; This function is called by:
 18011 ;;		_setup
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015                           
 18016                           ;psect for function _spiSetup
 18017  2FD2                     _spiSetup:	
 18018                           
 18019                           ;spi.c: 13: TRISCbits.TRISC5 = 0;
 18020                           
 18021                           ;incstack = 0
 18022                           ; Regs used in _spiSetup: [wreg]
 18023  2FD2  0021               	movlb	1	; select bank1
 18024  2FD3  128E               	bcf	14,5	;volatile
 18025                           
 18026                           ;spi.c: 14: TRISCbits.TRISC4 = 1;
 18027  2FD4  160E               	bsf	14,4	;volatile
 18028                           
 18029                           ;spi.c: 15: TRISCbits.TRISC3 = 0;
 18030  2FD5  118E               	bcf	14,3	;volatile
 18031                           
 18032                           ;spi.c: 16: TRISDbits.TRISD0 = 0;
 18033  2FD6  100F               	bcf	15,0	;volatile
 18034                           
 18035                           ;spi.c: 17: LATDbits.LATD0 = 1;
 18036  2FD7  0022               	movlb	2	; select bank2
 18037  2FD8  140F               	bsf	15,0	;volatile
 18038                           
 18039                           ;spi.c: 19: APFCON1bits.SDOSEL = 0;
 18040  2FD9  129D               	bcf	29,5	;volatile
 18041                           
 18042                           ;spi.c: 20: APFCON1bits.SCKSEL = 0;
 18043  2FDA  121D               	bcf	29,4	;volatile
 18044                           
 18045                           ;spi.c: 21: APFCON1bits.SDISEL = 0;
 18046  2FDB  119D               	bcf	29,3	;volatile
 18047                           
 18048                           ;spi.c: 23: SSP1CON3bits.BOEN = 0;
 18049  2FDC  0024               	movlb	4	; select bank4
 18050  2FDD  1217               	bcf	23,4	;volatile
 18051                           
 18052                           ;spi.c: 27: SSP1STATbits.SMP = 1;
 18053  2FDE  1794               	bsf	20,7	;volatile
 18054                           
 18055                           ;spi.c: 28: SSP1STATbits.CKE = 1;
 18056  2FDF  1714               	bsf	20,6	;volatile
 18057                           
 18058                           ;spi.c: 30: SSP1CON1 = 0b00010010;
 18059  2FE0  3012               	movlw	18
 18060  2FE1  0095               	movwf	21	;volatile
 18061                           
 18062                           ;spi.c: 32: PIE1bits.SSP1IE = 1;
 18063  2FE2  0021               	movlb	1	; select bank1
 18064  2FE3  1591               	bsf	17,3	;volatile
 18065                           
 18066                           ;spi.c: 33: PIR1bits.SSP1IF = 0;
 18067  2FE4  0020               	movlb	0	; select bank0
 18068  2FE5  1191               	bcf	17,3	;volatile
 18069                           
 18070                           ;spi.c: 35: SSP1CON1bits.SSPEN = 1;
 18071  2FE6  0024               	movlb	4	; select bank4
 18072  2FE7  1695               	bsf	21,5	;volatile
 18073  2FE8  0008               	return
 18074  2FE9                     __end_of_spiSetup:	
 18075                           
 18076                           	psect	text54
 18077  2041                     __ptext54:	
 18078 ;; *************** function _adcSetup *****************
 18079 ;; Defined at:
 18080 ;;		line 80 in file "adc.c"
 18081 ;; Parameters:    Size  Location     Type
 18082 ;;		None
 18083 ;; Auto vars:     Size  Location     Type
 18084 ;;		None
 18085 ;; Return value:  Size  Location     Type
 18086 ;;                  1    wreg      void 
 18087 ;; Registers used:
 18088 ;;		wreg, status,2
 18089 ;; Tracked objects:
 18090 ;;		On entry : 0/0
 18091 ;;		On exit  : 0/0
 18092 ;;		Unchanged: 0/0
 18093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18098 ;;Total ram usage:        0 bytes
 18099 ;; Hardware stack levels used:    1
 18100 ;; Hardware stack levels required when called:    2
 18101 ;; This function calls:
 18102 ;;		Nothing
 18103 ;; This function is called by:
 18104 ;;		_setup
 18105 ;; This function uses a non-reentrant model
 18106 ;;
 18107                           
 18108                           
 18109                           ;psect for function _adcSetup
 18110  2041                     _adcSetup:	
 18111                           
 18112                           ;adc.c: 82: TRISBbits.TRISB5 = 0;
 18113                           
 18114                           ;incstack = 0
 18115                           ; Regs used in _adcSetup: [wreg+status,2]
 18116  2041  0021               	movlb	1	; select bank1
 18117  2042  128D               	bcf	13,5	;volatile
 18118                           
 18119                           ;adc.c: 85: TRISAbits.TRISA0 = 1;
 18120  2043  140C               	bsf	12,0	;volatile
 18121                           
 18122                           ;adc.c: 86: TRISAbits.TRISA1 = 1;
 18123  2044  148C               	bsf	12,1	;volatile
 18124                           
 18125                           ;adc.c: 87: TRISAbits.TRISA2 = 1;
 18126  2045  150C               	bsf	12,2	;volatile
 18127                           
 18128                           ;adc.c: 88: TRISAbits.TRISA3 = 1;
 18129  2046  158C               	bsf	12,3	;volatile
 18130                           
 18131                           ;adc.c: 91: TRISBbits.TRISB0 = 1;
 18132  2047  140D               	bsf	13,0	;volatile
 18133                           
 18134                           ;adc.c: 92: TRISBbits.TRISB1 = 1;
 18135  2048  148D               	bsf	13,1	;volatile
 18136                           
 18137                           ;adc.c: 93: TRISBbits.TRISB2 = 1;
 18138  2049  150D               	bsf	13,2	;volatile
 18139                           
 18140                           ;adc.c: 94: TRISBbits.TRISB3 = 1;
 18141  204A  158D               	bsf	13,3	;volatile
 18142                           
 18143                           ;adc.c: 95: TRISBbits.TRISB4 = 1;
 18144  204B  160D               	bsf	13,4	;volatile
 18145                           
 18146                           ;adc.c: 98: TRISDbits.TRISD1 = 1;
 18147  204C  148F               	bsf	15,1	;volatile
 18148                           
 18149                           ;adc.c: 101: ANSELA = 0x0F;
 18150  204D  300F               	movlw	15
 18151  204E  0023               	movlb	3	; select bank3
 18152  204F  008C               	movwf	12	;volatile
 18153                           
 18154                           ;adc.c: 102: ANSELB = 0x1F;
 18155  2050  301F               	movlw	31
 18156  2051  008D               	movwf	13	;volatile
 18157                           
 18158                           ;adc.c: 103: ANSELD = 0x02;
 18159  2052  3002               	movlw	2
 18160  2053  008F               	movwf	15	;volatile
 18161                           
 18162                           ;adc.c: 106: ADCON0 = 0x00;
 18163  2054  0021               	movlb	1	; select bank1
 18164  2055  019D               	clrf	29	;volatile
 18165                           
 18166                           ;adc.c: 107: ADCON1 = 0x60;
 18167  2056  3060               	movlw	96
 18168  2057  009E               	movwf	30	;volatile
 18169                           
 18170                           ;adc.c: 108: ADCON2 = 0x0F;
 18171  2058  300F               	movlw	15
 18172  2059  009F               	movwf	31	;volatile
 18173  205A  0008               	return
 18174  205B                     __end_of_adcSetup:	
 18175                           
 18176                           	psect	intentry
 18177  0004                     __pintentry:	
 18178 ;; *************** function _ISR *****************
 18179 ;; Defined at:
 18180 ;;		line 111 in file "main.c"
 18181 ;; Parameters:    Size  Location     Type
 18182 ;;		None
 18183 ;; Auto vars:     Size  Location     Type
 18184 ;;		None
 18185 ;; Return value:  Size  Location     Type
 18186 ;;                  1    wreg      void 
 18187 ;; Registers used:
 18188 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18189 ;; Tracked objects:
 18190 ;;		On entry : 0/0
 18191 ;;		On exit  : 0/0
 18192 ;;		Unchanged: 0/0
 18193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18196 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18198 ;;Total ram usage:        2 bytes
 18199 ;; Hardware stack levels used:    1
 18200 ;; Hardware stack levels required when called:    1
 18201 ;; This function calls:
 18202 ;;		_uartDisable
 18203 ;;		i1_adcSetup
 18204 ;; This function is called by:
 18205 ;;		Interrupt level 1
 18206 ;; This function uses a non-reentrant model
 18207 ;;
 18208                           
 18209  0004                     _ISR:	
 18210                           
 18211                           ;incstack = 0
 18212  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18213                           
 18214                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 18215  0005  3180               	pagesel	$
 18216  0006  0020               	movlb	0	; select bank0
 18217  0007  087F               	movf	127,w
 18218  0008  00F1               	movwf	??_ISR+1
 18219                           
 18220                           ;main.c: 112: adcSetup();
 18221  0009  31A0  2027  3180   	fcall	i1_adcSetup
 18222                           
 18223                           ;main.c: 114: if(INTCONbits.TMR0IF == 1 && INTCONbits.TMR0IE == 1){
 18224  000C  190B               	btfsc	11,2	;volatile
 18225  000D  1E8B               	btfss	11,5	;volatile
 18226  000E  2827               	goto	i1l5319
 18227                           
 18228                           ;main.c: 115: k ++;
 18229  000F  3001               	movlw	1
 18230  0010  0023               	movlb	3	; select bank3
 18231  0011  07AE               	addwf	_k^(0+384),f
 18232  0012  3000               	movlw	0
 18233  0013  3DAF               	addwfc	(_k+1)^(0+384),f
 18234                           
 18235                           ;main.c: 116: if(k >= 250){
 18236  0014  082F               	movf	(_k+1)^(0+384),w
 18237  0015  3A80               	xorlw	128
 18238  0016  00F0               	movwf	??_ISR
 18239  0017  3080               	movlw	128
 18240  0018  0270               	subwf	??_ISR,w
 18241  0019  1D03               	skipz
 18242  001A  281D               	goto	u699_25
 18243  001B  30FA               	movlw	250
 18244  001C  022E               	subwf	_k^(0+384),w
 18245  001D                     u699_25:	
 18246  001D  1C03               	skipc
 18247  001E  2826               	goto	i1l5317
 18248                           
 18249                           ;main.c: 117: uartBool = 1;
 18250  001F  3001               	movlw	1
 18251  0020  0023               	movlb	3	; select bank3
 18252  0021  00AC               	movwf	_uartBool^(0+384)
 18253  0022  3000               	movlw	0
 18254  0023  00AD               	movwf	(_uartBool^(0+384)+1)
 18255                           
 18256                           ;main.c: 118: k=0;
 18257  0024  01AE               	clrf	_k^(0+384)
 18258  0025  01AF               	clrf	(_k+1)^(0+384)
 18259  0026                     i1l5317:	
 18260                           
 18261                           ;main.c: 119: }
 18262                           ;main.c: 120: INTCONbits.TMR0IF = 0;
 18263  0026  110B               	bcf	11,2	;volatile
 18264  0027                     i1l5319:	
 18265                           
 18266                           ;main.c: 121: }
 18267                           ;main.c: 123: if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1){
 18268  0027  0021               	movlb	1	; select bank1
 18269  0028  1C91               	btfss	17,1	;volatile
 18270  0029  2834               	goto	i1l5327
 18271  002A  0020               	movlb	0	; select bank0
 18272  002B  1C91               	btfss	17,1	;volatile
 18273  002C  2834               	goto	i1l5327
 18274                           
 18275                           ;main.c: 124: currentBool = 1;
 18276  002D  3001               	movlw	1
 18277  002E  0023               	movlb	3	; select bank3
 18278  002F  00AA               	movwf	_currentBool^(0+384)
 18279  0030  3000               	movlw	0
 18280  0031  00AB               	movwf	(_currentBool^(0+384)+1)
 18281                           
 18282                           ;main.c: 125: PIR1bits.TMR2IF = 0;
 18283  0032  0020               	movlb	0	; select bank0
 18284  0033  1091               	bcf	17,1	;volatile
 18285  0034                     i1l5327:	
 18286                           
 18287                           ;main.c: 126: }
 18288                           ;main.c: 128: if(PIR1bits.TXIF == 1 && PIE1bits.TXIE == 1){
 18289  0034  0020               	movlb	0	; select bank0
 18290  0035  1E11               	btfss	17,4	;volatile
 18291  0036  2854               	goto	i1l5341
 18292  0037  0021               	movlb	1	; select bank1
 18293  0038  1E11               	btfss	17,4	;volatile
 18294  0039  2854               	goto	i1l5341
 18295                           
 18296                           ;main.c: 129: if(str[z] != '\0'){
 18297  003A  087A               	movf	_z,w
 18298  003B  3E38               	addlw	(low (_str| (0+512)))& (0+255)
 18299  003C  0086               	movwf	6
 18300  003D  3002               	movlw	2	; select bank4/5
 18301  003E  0087               	movwf	7
 18302  003F  0801               	movf	1,w
 18303  0040  1903               	btfsc	3,2
 18304  0041  284F               	goto	i1l5337
 18305                           
 18306                           ;main.c: 130: TXREG = str[z];
 18307  0042  087A               	movf	_z,w
 18308  0043  3E38               	addlw	(low (_str| (0+512)))& (0+255)
 18309  0044  0086               	movwf	6
 18310  0045  3002               	movlw	2	; select bank4/5
 18311  0046  0087               	movwf	7
 18312  0047  0801               	movf	1,w
 18313  0048  0023               	movlb	3	; select bank3
 18314  0049  009A               	movwf	26	;volatile
 18315                           
 18316                           ;main.c: 131: z++;
 18317  004A  3001               	movlw	1
 18318  004B  07FA               	addwf	_z,f
 18319  004C  3000               	movlw	0
 18320  004D  3DFB               	addwfc	_z+1,f
 18321                           
 18322                           ;main.c: 132: }else{
 18323  004E  2854               	goto	i1l5341
 18324  004F                     i1l5337:	
 18325                           
 18326                           ;main.c: 133: z = 0;
 18327  004F  01FA               	clrf	_z
 18328  0050  01FB               	clrf	_z+1
 18329                           
 18330                           ;main.c: 134: uartDisable();
 18331  0051  31AF  2768  3180   	fcall	_uartDisable
 18332  0054                     i1l5341:	
 18333                           
 18334                           ;main.c: 135: }
 18335                           ;main.c: 136: }
 18336                           ;main.c: 138: if(PIR1bits.SSP1IF == 1 && PIE1bits.SSP1IE == 1){
 18337  0054  0020               	movlb	0	; select bank0
 18338  0055  1D91               	btfss	17,3	;volatile
 18339  0056  285C               	goto	i1l116
 18340  0057  0021               	movlb	1	; select bank1
 18341  0058  1D91               	btfss	17,3	;volatile
 18342  0059  285C               	goto	i1l116
 18343                           
 18344                           ;main.c: 139: PIR1bits.SSP1IF = 0;
 18345  005A  0020               	movlb	0	; select bank0
 18346  005B  1191               	bcf	17,3	;volatile
 18347  005C                     i1l116:	
 18348  005C  0871               	movf	??_ISR+1,w
 18349  005D  0020               	movlb	0	; select bank0
 18350  005E  00FF               	movwf	127
 18351  005F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18352  0060  0009               	retfie
 18353  0061                     __end_of_ISR:	
 18354                           
 18355                           	psect	text56
 18356  2027                     __ptext56:	
 18357 ;; *************** function i1_adcSetup *****************
 18358 ;; Defined at:
 18359 ;;		line 80 in file "adc.c"
 18360 ;; Parameters:    Size  Location     Type
 18361 ;;		None
 18362 ;; Auto vars:     Size  Location     Type
 18363 ;;		None
 18364 ;; Return value:  Size  Location     Type
 18365 ;;                  1    wreg      void 
 18366 ;; Registers used:
 18367 ;;		wreg, status,2
 18368 ;; Tracked objects:
 18369 ;;		On entry : 0/0
 18370 ;;		On exit  : 0/0
 18371 ;;		Unchanged: 0/0
 18372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18377 ;;Total ram usage:        0 bytes
 18378 ;; Hardware stack levels used:    1
 18379 ;; This function calls:
 18380 ;;		Nothing
 18381 ;; This function is called by:
 18382 ;;		_ISR
 18383 ;; This function uses a non-reentrant model
 18384 ;;
 18385                           
 18386                           
 18387                           ;psect for function i1_adcSetup
 18388  2027                     i1_adcSetup:	
 18389                           
 18390                           ;adc.c: 82: TRISBbits.TRISB5 = 0;
 18391                           
 18392                           ;incstack = 0
 18393                           ; Regs used in i1_adcSetup: [wreg+status,2]
 18394  2027  0021               	movlb	1	; select bank1
 18395  2028  128D               	bcf	13,5	;volatile
 18396                           
 18397                           ;adc.c: 85: TRISAbits.TRISA0 = 1;
 18398  2029  140C               	bsf	12,0	;volatile
 18399                           
 18400                           ;adc.c: 86: TRISAbits.TRISA1 = 1;
 18401  202A  148C               	bsf	12,1	;volatile
 18402                           
 18403                           ;adc.c: 87: TRISAbits.TRISA2 = 1;
 18404  202B  150C               	bsf	12,2	;volatile
 18405                           
 18406                           ;adc.c: 88: TRISAbits.TRISA3 = 1;
 18407  202C  158C               	bsf	12,3	;volatile
 18408                           
 18409                           ;adc.c: 91: TRISBbits.TRISB0 = 1;
 18410  202D  140D               	bsf	13,0	;volatile
 18411                           
 18412                           ;adc.c: 92: TRISBbits.TRISB1 = 1;
 18413  202E  148D               	bsf	13,1	;volatile
 18414                           
 18415                           ;adc.c: 93: TRISBbits.TRISB2 = 1;
 18416  202F  150D               	bsf	13,2	;volatile
 18417                           
 18418                           ;adc.c: 94: TRISBbits.TRISB3 = 1;
 18419  2030  158D               	bsf	13,3	;volatile
 18420                           
 18421                           ;adc.c: 95: TRISBbits.TRISB4 = 1;
 18422  2031  160D               	bsf	13,4	;volatile
 18423                           
 18424                           ;adc.c: 98: TRISDbits.TRISD1 = 1;
 18425  2032  148F               	bsf	15,1	;volatile
 18426                           
 18427                           ;adc.c: 101: ANSELA = 0x0F;
 18428  2033  300F               	movlw	15
 18429  2034  0023               	movlb	3	; select bank3
 18430  2035  008C               	movwf	12	;volatile
 18431                           
 18432                           ;adc.c: 102: ANSELB = 0x1F;
 18433  2036  301F               	movlw	31
 18434  2037  008D               	movwf	13	;volatile
 18435                           
 18436                           ;adc.c: 103: ANSELD = 0x02;
 18437  2038  3002               	movlw	2
 18438  2039  008F               	movwf	15	;volatile
 18439                           
 18440                           ;adc.c: 106: ADCON0 = 0x00;
 18441  203A  0021               	movlb	1	; select bank1
 18442  203B  019D               	clrf	29	;volatile
 18443                           
 18444                           ;adc.c: 107: ADCON1 = 0x60;
 18445  203C  3060               	movlw	96
 18446  203D  009E               	movwf	30	;volatile
 18447                           
 18448                           ;adc.c: 108: ADCON2 = 0x0F;
 18449  203E  300F               	movlw	15
 18450  203F  009F               	movwf	31	;volatile
 18451  2040  0008               	return
 18452  2041                     __end_ofi1_adcSetup:	
 18453                           
 18454                           	psect	text57
 18455  2F68                     __ptext57:	
 18456 ;; *************** function _uartDisable *****************
 18457 ;; Defined at:
 18458 ;;		line 62 in file "uart.c"
 18459 ;; Parameters:    Size  Location     Type
 18460 ;;		None
 18461 ;; Auto vars:     Size  Location     Type
 18462 ;;		None
 18463 ;; Return value:  Size  Location     Type
 18464 ;;                  1    wreg      void 
 18465 ;; Registers used:
 18466 ;;		None
 18467 ;; Tracked objects:
 18468 ;;		On entry : 0/0
 18469 ;;		On exit  : 0/0
 18470 ;;		Unchanged: 0/0
 18471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18476 ;;Total ram usage:        0 bytes
 18477 ;; Hardware stack levels used:    1
 18478 ;; This function calls:
 18479 ;;		Nothing
 18480 ;; This function is called by:
 18481 ;;		_ISR
 18482 ;; This function uses a non-reentrant model
 18483 ;;
 18484                           
 18485                           
 18486                           ;psect for function _uartDisable
 18487  2F68                     _uartDisable:	
 18488                           
 18489                           ;uart.c: 63: PIE1bits.TXIE = 0;
 18490                           
 18491                           ;incstack = 0
 18492                           ; Regs used in _uartDisable: []
 18493  2F68  0021               	movlb	1	; select bank1
 18494  2F69  1211               	bcf	17,4	;volatile
 18495  2F6A  0008               	return
 18496  2F6B                     __end_of_uartDisable:	
 18497  007E                     btemp	set	126	;btemp
 18498  007E                     int$flags	set	126
 18499  007E                     wtemp0	set	126


Data Sizes:
    Strings     89
    Constant    1220
    Data        7
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     62      72
    BANK3            80      0      77
    BANK4            80      0      74
    BANK5            80     11      11
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           32      0       0
    BANK21            0      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 36
		 -> log@coeff(CODE[36]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[11]), STR_5(CODE[9]), STR_4(CODE[20]), STR_3(CODE[15]), 
		 -> STR_2(CODE[19]), STR_1(CODE[15]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 50
		 -> str(BANK4[50]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK2[2]), 

    spi_write_read@rx_data	PTR unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), LTC6804_rdcv@cell_data(BANK0[8]), NULL(NULL[0]), 

    spi_write_read@tx_Data	PTR unsigned char  size(1) Largest target is 4
		 -> LTC6804_rdcfg@cmd(COMMON[4]), LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), 

    spi_write_array@data	PTR unsigned char  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), LTC6804_adax@cmd(COMMON[4]), LTC6804_adcv@cmd(BANK0[4]), 

    pec15_calc@data	PTR unsigned char  size(2) Largest target is 4096
		 -> LTC6804_clraux@cmd(COMMON[4]), LTC6804_clrcell@cmd(COMMON[4]), LTC6804_rdaux_reg@cmd(COMMON[4]), RAM(DATA[4096]), 
		 -> LTC6804_rdcv_reg@cmd(BANK0[4]), LTC6804_rdcv@cell_data(BANK0[8]), ADAX(BANK2[2]), ADCV(BANK2[2]), 

    LTC6804_rdcv_reg@data	PTR unsigned char  size(1) Largest target is 8
		 -> LTC6804_rdcv@cell_data(BANK0[8]), 

    LTC6804_rdcv@cell_codes	PTR int [12] size(1) Largest target is 24
		 -> measureVoltages@ltcData(BANK2[24]), 

    measureVoltages@measurements	PTR float  size(1) Largest target is 48
		 -> voltages(BANK3[48]), 

    totalVoltage@values	PTR float  size(1) Largest target is 48
		 -> voltages(BANK3[48]), 

    writeTemps@temps	PTR int  size(1) Largest target is 6
		 -> temps(BANK3[6]), 

    writeVoltages@volts	PTR float  size(1) Largest target is 48
		 -> voltages(BANK3[48]), 

    writeValuesToUart@temperatureArr	PTR int  size(1) Largest target is 6
		 -> temps(BANK3[6]), 

    writeValuesToUart@voltageArr	PTR float  size(1) Largest target is 48
		 -> voltages(BANK3[48]), 

    getTemps@temperatures	PTR int  size(1) Largest target is 6
		 -> temps(BANK3[6]), 


Critical Paths under _main in COMMON

    _sprintf->___awdiv
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    _fround->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    _startUp->___flge
    _measureVoltages->_LTC6804_adcv
    _measureVoltages->___flge
    _LTC6804_rdcv_reg->_spi_write_read
    _spi_write_read->___bmul
    _LTC6804_adcv->_spi_write_array
    _spi_write_array->_spi_write
    _pec15_calc->___bmul
    _log->___flge
    _calculateCurrent->___flge
    ___flmul->___awdiv
    ___fldiv->___flge
    ___xxtofl->_adcRead

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _scale->___flmul
    _fround->___flmul
    ___llmod->___lldiv
    ___flsub->___fladd
    _startUp->_totalVoltage
    _totalVoltage->___fladd
    _LTC6804_rdcv->_LTC6804_rdcv_reg
    _LTC6804_rdcv_reg->_pec15_calc
    _LTC6804_adcv->_pec15_calc
    _eval_poly->___fladd
    ___fltol->_totalVoltage
    ___flneg->___flmul
    ___flmul->___xxtofl
    ___fldiv->_totalVoltage
    ___fladd->_fround
    ___xxtofl->_adcRead

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    ___flsub->___fladd
    _totalVoltage->___fladd
    _measureVoltages->___fldiv
    _calculateTemp->_log
    _log->___fldiv
    _eval_poly->___fladd
    ___fltol->_log
    _getCurrent->_calculateCurrent
    _calculateCurrent->___fldiv
    ___fldiv->_eval_poly
    ___fladd->_fround

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_startUp
    _main->_writeValuesToUart
    _writeValuesToUart->_writeTemps
    _writeVoltages->_sprintf
    _writeTemps->_sprintf
    _writeCurrent->_sprintf
    _clearScreen->_sprintf
    _sprintf->___fltol
    _startUp->_getTemps
    _getTemps->_calculateTemp
    _calculateTemp->___fltol
    _getCurrent->_calculateCurrent

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_writeValuesToUart

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _ISR in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  430278
                                             61 BANK2      1     1      0
                         _getCurrent
                           _getTemps
                              _setup
                            _startUp
                  _writeValuesToUart
 ---------------------------------------------------------------------------------
 (1) _writeValuesToUart                                   12     1     11  242785
                                             60 BANK2      1     1      0
                                              0 BANK5     11     0     11
                        _clearScreen
                       _writeCurrent
                         _writeTemps
                      _writeVoltages
 ---------------------------------------------------------------------------------
 (2) _writeVoltages                                        7     5      2   60571
                                             52 BANK2      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeTemps                                           8     4      4   60692
                                             52 BANK2      8     4      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _writeCurrent                                         4     0      4   60405
                                             52 BANK2      4     0      4
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (2) _clearScreen                                          7     5      2   60445
                                             52 BANK2      7     5      2
                            _sprintf
                         _uartEnable
 ---------------------------------------------------------------------------------
 (3) _uartEnable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             46    38      8   60284
                                             11 BANK2     41    33      8
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               25    21      4   12740
                                             50 BANK0     25    21      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              33    29      4   12461
                                             50 BANK0     24    20      4
                                              0 BANK1      9     9      0
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4    2053
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4    2245
                                              9 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         18    10      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          19    11      8     455
                                              2 COMMON     8     0      8
                                              0 BANK0     11    11      0
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     952
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5167
                                             29 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _startUp                                              9     7      2  117320
                                             52 BANK2      9     7      2
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                         _getCurrent
                           _getTemps
                    _measureVoltages
                       _totalVoltage
 ---------------------------------------------------------------------------------
 (2) _totalVoltage                                        13     9      4    5246
                                             78 BANK0      2     2      0
                                             29 BANK1     11     7      4
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _measureVoltages                                     32    32      0   27420
                                             73 BANK1      4     4      0
                                              0 BANK2     28    28      0
                       _LTC6804_adcv
                       _LTC6804_rdcv
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) _LTC6804_rdcv                                        29    27      2   10612
                                             27 BANK0     29    27      2
                   _LTC6804_rdcv_reg
                             ___bmul
                             ___wmul
                         _pec15_calc
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4    2456
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _LTC6804_rdcv_reg                                    12    10      2    4457
                                             15 BANK0     12    10      2
                             ___bmul
                         _pec15_calc
                     _spi_write_read
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _spi_write_read                                      12     8      4    1869
                                              6 COMMON     4     0      4
                                              0 BANK0      8     8      0
                             ___bmul (ARG)
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (6) _spi_read                                             3     3      0      45
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     582
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _LTC6804_adcv                                         7     7      0    1740
                                              9 COMMON     1     1      0
                                             15 BANK0      6     6      0
                         _pec15_calc
                    _spi_write_array
                        _wakeup_idle
 ---------------------------------------------------------------------------------
 (5) _wakeup_idle                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _spi_write_array                                      6     4      2     434
                                              5 COMMON     4     2      2
                                              0 BANK0      2     2      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (6) _spi_write                                            3     3      0      34
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _pec15_calc                                          17    15      2    1093
                                              6 COMMON     2     0      2
                                              0 BANK0     15    15      0
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _getTemps                                            11     9      2   49831
                                             41 BANK2     11     9      2
                            _adcRead
                      _calculateTemp
 ---------------------------------------------------------------------------------
 (3) _calculateTemp                                       30    28      2   49028
                                             11 BANK2     30    28      2
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                            _adcRead (ARG)
                                _log
 ---------------------------------------------------------------------------------
 (4) _log                                                  7     3      4   30362
                                             73 BANK1      7     3      4
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                7     2      5     376
                                              2 COMMON     7     2      5
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           18    10      8   13259
                                             29 BANK1     18    10      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     787
                                              0 BANK2     11     7      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                                _log (ARG)
                              _scale (ARG)
                       _totalVoltage (ARG)
 ---------------------------------------------------------------------------------
 (2) _getCurrent                                           8     4      4   20342
                                              8 BANK2      8     4      4
                           ___xxtofl
                            _adcRead
                   _calculateCurrent
 ---------------------------------------------------------------------------------
 (3) _calculateCurrent                                    12     8      4   18945
                                             73 BANK1      4     0      4
                                              0 BANK2      8     8      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     335
                                             50 BANK0      4     0      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    7813
                                             24 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     980
                                              2 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (4) ___flge                                              16     8      8    2386
                                              2 COMMON     8     0      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             26    18      8    3235
                                             47 BANK1     26    18      8
                          __Umul8_16 (ARG)
                            ___fladd (ARG)
                             ___flge (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                          _eval_poly (ARG)
                              _frexp (ARG)
                       _totalVoltage (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             24    16      8    4922
                                             74 BANK0      4     4      0
                                              9 BANK1     20    12      8
                            ___flmul (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (3) _adcRead                                             16    14      2     133
                                              2 COMMON     2     0      2
                                              0 BANK0     14    14      0
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1196
                                              4 COMMON     4     4      0
                                             14 BANK0     10     6      4
                            _adcRead (ARG)
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                           _adcSetup
                           _spiSetup
                         _timerSetup
                          _uartSetup
 ---------------------------------------------------------------------------------
 (2) _uartSetup                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _timerSetup                                           0     0      0       0
                        _timer0Setup
                        _timer2Setup
 ---------------------------------------------------------------------------------
 (3) _timer2Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _timer0Setup                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spiSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adcSetup                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
                        _uartDisable
                         i1_adcSetup
 ---------------------------------------------------------------------------------
 (9) i1_adcSetup                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _uartDisable                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getCurrent
     ___xxtofl
       _adcRead (ARG)
     _adcRead
     _calculateCurrent
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _frexp (ARG)
         _totalVoltage (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
       ___flneg
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
   _getTemps
     _adcRead
     _calculateTemp
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _frexp (ARG)
         _totalVoltage (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
       ___flneg
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _log (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _totalVoltage (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___xxtofl
         _adcRead (ARG)
       _adcRead (ARG)
       _log (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _frexp (ARG)
   _setup
     _adcSetup
     _spiSetup
     _timerSetup
       _timer0Setup
       _timer2Setup
     _uartSetup
   _startUp
     ___fldiv
       __Umul8_16 (ARG)
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___flge (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
       ___flneg (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _eval_poly (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
       _frexp (ARG)
       _totalVoltage (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _frexp (ARG)
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___fldiv (ARG)
         __Umul8_16 (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _frexp (ARG)
         _totalVoltage (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
       ___xxtofl (ARG)
         _adcRead (ARG)
       _log (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___fldiv (ARG)
           __Umul8_16 (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _frexp (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
       _totalVoltage (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
     _getCurrent
       ___xxtofl
         _adcRead (ARG)
       _adcRead
       _calculateCurrent
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___fldiv
           __Umul8_16 (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
     _getTemps
       _adcRead
       _calculateTemp
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___fldiv
           __Umul8_16 (ARG)
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _log (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flge (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _eval_poly (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               _frexp (ARG)
               _totalVoltage (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___xxtofl
           _adcRead (ARG)
         _adcRead (ARG)
         _log (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flge (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _eval_poly (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _frexp (ARG)
     _measureVoltages
       _LTC6804_adcv
         _pec15_calc
           ___bmul (ARG)
         _spi_write_array
           _spi_write
         _wakeup_idle
       _LTC6804_rdcv
         _LTC6804_rdcv_reg
           ___bmul
           _pec15_calc
             ___bmul (ARG)
           _spi_write_read
             ___bmul (ARG)
             _spi_read (ARG)
             _spi_write (ARG)
           _wakeup_idle
         ___bmul
         ___wmul
         _pec15_calc
           ___bmul (ARG)
       ___fldiv
         __Umul8_16 (ARG)
         ___fladd (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _eval_poly (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _frexp (ARG)
         _totalVoltage (ARG)
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___flge
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
       ___xxtofl
         _adcRead (ARG)
     _totalVoltage
       ___fladd
         ___flmul (ARG)
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___xxtofl (ARG)
           _adcRead (ARG)
         _frexp (ARG)
   _writeValuesToUart
     _clearScreen
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _log (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flge (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _eval_poly (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               _frexp (ARG)
               _totalVoltage (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       _uartEnable
     _writeCurrent
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _log (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flge (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _eval_poly (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               _frexp (ARG)
               _totalVoltage (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       _uartEnable
     _writeTemps
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _log (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flge (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _eval_poly (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               _frexp (ARG)
               _totalVoltage (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       _uartEnable
     _writeVoltages
       _sprintf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___flneg (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___flge
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _frexp (ARG)
         ___flneg
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
         ___fltol
           ___fladd (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___fldiv (ARG)
             __Umul8_16 (ARG)
             ___fladd (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___flneg (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
             _totalVoltage (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
           ___xxtofl (ARG)
             _adcRead (ARG)
           _log (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___fldiv (ARG)
               __Umul8_16 (ARG)
               ___fladd (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flge (ARG)
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _eval_poly (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               _frexp (ARG)
               _totalVoltage (ARG)
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                   ___flneg (ARG)
                     ___flmul (ARG)
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                   _fround (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___flmul
                       __Umul8_16
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___xxtofl (ARG)
                         _adcRead (ARG)
                       _frexp (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flge (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _eval_poly (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
                 ___flneg (ARG)
                   ___flmul (ARG)
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___flmul
                     __Umul8_16
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___xxtofl (ARG)
                       _adcRead (ARG)
                     _frexp (ARG)
               ___flmul
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
             _frexp (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
           _totalVoltage (ARG)
             ___fladd
               ___flmul (ARG)
                 __Umul8_16
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___xxtofl (ARG)
                   _adcRead (ARG)
                 _frexp (ARG)
               ___flneg (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   __Umul8_16
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___xxtofl (ARG)
                     _adcRead (ARG)
                   _frexp (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___xxtofl (ARG)
                 _adcRead (ARG)
               _frexp (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
           _adcRead (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
         _isdigit
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___xxtofl (ARG)
               _adcRead (ARG)
             _frexp (ARG)
       _uartEnable

 _ISR (ROOT)
   _uartDisable
   i1_adcSetup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      A       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     3E      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4D      11       96.3%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4A      13       92.5%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     196      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      B       B      16       13.8%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     196      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              20      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21               0      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Feb 21 17:28:33 2019

                        ?_LTC6804_adcv 0070                          ?_LTC6804_rdcv 003B  
                         ___fldiv@aexp 00E8                           ___fldiv@bexp 00E7  
                                    _k 01AE                                      _n 0162  
                                    _z 007A                             i1_adcSetup 2027  
                         ___fldiv@sign 00DC                         ___bmul@product 0074  
                          __CFG_CP$OFF 0000                            _SSPSTATbits 0214  
                                   l83 24F0                           ___awdiv@sign 0025  
                                   _t0 3045                    ___wmul@multiplicand 0074  
                __size_of_totalVoltage 005A                        writeTemps@temps 0159  
                  __Umul8_16@word_mpld 0022               writeValuesToUart@current 02A7  
                                  l223 217D                                    l232 2023  
                                  l240 2270                                    l225 21B1  
                                  l252 2122                                    l244 2289  
                                  l173 25BE                                    l238 2246  
                                  l256 2137                                    l177 238E  
                                  l442 111D                                    l631 00D5  
                                  l449 11DD                                    l706 06D8  
                                  l812 207D                                    l582 2FA2  
                                  l654 02A3                                    l646 0162  
                                  l588 2FAD                                    l941 1D28  
                                  l951 1DAC                                    l956 2781  
                                  l975 2632                                    l983 1C6E  
                                  l993 1CE7                                    _PR2 001B  
                         __CFG_CPD$OFF 0000                                    _ISR 0004  
                                  _SOC 01A6                __end_of_measureVoltages 1101  
                                  _log 1DB8                                    _str 0238  
                    SSD1306_Test@F7478 01EB                           ___awmod@sign 0078  
                         __CFG_BORV$LO 0000                                    wreg 0009  
                         __CFG_FOSC$HS 0000                           ___flmul@aexp 0046  
                         ___flmul@bexp 004B                           ___flmul@sign 0045  
                         ___flmul@temp 0050                           ___flmul@prod 004C  
                         __CFG_LVP$OFF 0000                                   ?_ISR 0070  
                         ___fltol@exp1 012A                                   l1111 0C33  
                                 l1113 0C0F                                   l1107 0B71  
                                 l1132 0CF9                                   l1141 0D47  
                                 l1222 26EE                                   l1215 0B03  
                                 l1128 0CD8                                   l1241 20C0  
                                 l1235 2738                                   l1163 12D5  
                                 l1236 2742                                   l1228 2724  
                                 l1149 0D64                                   l1184 13E5  
                                 l1185 13FD                                   l1187 140A  
                                 l4029 2150                                   l6001 0AD9  
                                 l4233 100C                                   l4243 1C56  
                                 l4317 1D6D                                   l4309 1D4D  
                                 l6101 2220                                   l6007 0AF0  
                                 l4343 2077                                   l4335 1DA3  
                                 l4327 1D88                                   l6033 07E1  
                                 l6025 07CC                                   l7001 123F  
                                 l4337 1DAF                                   l4329 1D96  
                                 l4265 1CA9                                   l4257 1C8F  
                                 l6113 223D                                   l6105 222C  
                                 l6131 27ED                                   l6123 279B  
                                 l6203 1DDD                                   l6027 07E0  
                                 l4283 1CDE                                   l4275 1CC3  
                                 l6043 2333                                   l3901 2FC3  
                                 l7013 128A                                   l4285 1CEA  
                                 l4277 1CD1                                   l6061 2352  
                                 l6109 2235                                   l6127 27C4  
                                 l4295 1D0E                                   l6071 236D  
                                 l6209 1DF3                                   l7033 25B8  
                                 l6225 205E                                   l3905 2FC9  
                                 l6233 2427                                   l7009 1280  
                                 l6401 21C3                                   l6049 233E  
                                 l6305 0E9D                                   l6171 2711  
                                 l7035 256B                                   l6251 243C  
                                 l7131 1EC5                                   l6403 21D1  
                                 l6411 21F4                                   l6075 2375  
                                 l6067 2364                                   l6059 2346  
                                 l6091 220E                                   l6323 0FE2  
                                 l7115 2279                                   l6165 26FD  
                                 l6501 136E                                   l6341 25E0  
                                 l6149 26C7                                   l6245 2433  
                                 l7053 1028                                   l7141 1F03  
                                 l6317 0F77                                   l6309 0EBB  
                                 l6159 26E6                                   l5703 0B36  
                                 l3871 22E0                                   l6239 242D  
                                 l7135 1EEF                                   l6407 21E9  
                                 l6087 2207                                   l6193 275D  
                                 l6177 2729                                   l6169 2701  
                                 l5705 0B3F                                   l6441 12B1  
                                 l3873 2323                                   l7081 24C5  
                                 l7161 1F94                                   l7145 1F3A  
                                 l6601 00D0                                   l6179 2732  
                                 l5803 0C61                                   l5723 0B64  
                                 l6515 1374                                   l6435 12A6  
                                 l7067 10FB                                   l7139 1EF3  
                                 l6099 2214                                   l6283 15BD  
                                 l6275 151F                                   l5733 0B7E  
                                 l5717 0B54                                   l6525 13A2  
                                 l6517 138B                                   l6365 2629  
                                 l6357 260E                                   l7165 1F98  
                                 l7157 1F50                                   l7149 1F3E  
                                 l6701 032F                                   l6613 00F0  
                                 l6621 011E                                   l7093 2104  
                                 ?_log 00E9                                   l5807 0C70  
                                 l5727 0B68                                   l6551 1406  
                                 l6527 13A4                                   l6471 1304  
                                 l6455 12CA                                   l6439 12A9  
                                 l5671 20BA                                   l5911 0921  
                                 l6367 2635                                   l6359 261C  
                                 l7079 2481                                   l7167 1FA8  
                                 l6391 2417                                   l6711 036D  
                                 l6607 00DA                                   l7095 212B  
                                 l5833 0CFE                                   l5825 0CED  
                                 l5817 0CD0                                   l5841 0D08  
                                 l6537 13CD                                   l6465 12F0  
                                 l5913 0923                                   l6377 23DE  
                                 l6721 03D0                                   l6641 0164  
                                 l6633 012E                                   l6609 00E3  
                                 l7185 24E3                                   _ADAX 0164  
                                 l5851 0D16                                   l5771 0C19  
                                 l5763 0BD1                                   l6491 1350  
                                 l6459 12CD                                   l5923 0939  
                                 l5915 092B                                   l6571 08D3  
                                 l6387 240C                                   l6379 23EC  
                                 l6299 0E32                                   l6811 062D  
                                 l6731 041A                                   l6715 03CA  
                                 l6643 017F                                   l6635 015D  
                                 l7195 2515                                   _ADCV 0166  
                                 l5773 0C1B                                   l5781 0C2E  
                                 l5693 0B22                                   l5839 0D05  
                                 l6751 045D                                   l6735 0428  
                                 l6727 03FD                                   l6911 00AD  
                                 l5873 0D5F                                   l5777 0C20  
                                 l6497 1369                                   l6841 067C  
                                 l6817 063D                                   l6649 018F  
                                 l6913 07C3                                   l5699 0B32  
                                 l6499 1332                                   l6851 06C0  
                                 l6835 0676                                   l6683 0288  
                                 l6675 0227                                   l6659 01DB  
                                 l6819 0642                        spi_write_read@i 0026  
                                 l5869 0D5A                                   l5797 0C5A  
                                 l5789 0C42                                   l5893 08FE  
                                 l6909 077C                                   l6829 0668  
                                 l6781 0502                                   l6773 0491  
                                 l6749 0440                                   l6757 046E  
                                 l5799 0C5C                                   l5975 0A6B  
                                 l5895 0900                                   l6871 071E  
                                 l6847 06A9                                   l6775 04F1  
                                 l5985 0A99                                   l5977 0A82  
                                 l5897 0908                                   l6881 0739  
                                 l6873 0721                                   l6865 06FF  
                                 l6697 0317                                   l6689 02E7  
                                 l5987 0A9B                                   l6955 112A  
                                 l6891 0752                                   l6867 0702  
                                 l6859 06EB                                   l6795 0539  
                                 l6787 051C                                   l5997 0AC4  
                                 l6973 11C0                                   l6965 117F  
                                 l6981 11CF                                   l6991 11EA  
                                 l6977 11CA                                   l6897 0766  
                                 l6889 074E                      spi_write@readData 0073  
                                 STR_1 3022                                   STR_2 3000  
                                 STR_3 3013                                   STR_4 2824  
                                 STR_5 303C                                   STR_6 3031  
                                 u5105 1CA0                                   u5115 1CAA  
                                 u5225 1D4E                                   u5315 1DA4  
                                 u5235 1D62                                   u5155 1CC4  
                                 u5245 1D6E                                   u4455 22F6  
                                 u5095 1C90                                   u5345 207E  
                                 u5185 1CDF                                   u5355 2083  
                                 u8005 0A5A                                   u5285 1D89  
                                 u8015 0A6E                                   u8105 0AB2  
                                 u8115 0ACD                                   u8035 0A77  
                                 u8125 0AE3                                   u8215 2353  
                                 u9025 133A                                   u7425 20C1  
                                 u8225 235D                                   u9115 1380  
                                 u9035 1341                                   u8235 2365  
                                 u8315 2226                                   u9205 13EF  
                                 u8325 222D                                   u7550 0BF9  
                                 u9055 134A                                   u7560 0BFA  
                                 u7545 0BEE                                   u9065 135E  
                                 u7715 0CEE                                   u8195 2349  
                                 u8525 274A                                   u8445 270A  
                                 u9245 23A7                                   u7815 0D2F  
                                 u9095 1377                                   u8295 2217  
                                 u9415 0315                                   u8465 271E  
                                 u7673 0C83                                   u7665 0C64  
                                 u9185 13BB                                   u9505 0449  
                                 u7595 0C23                                   u9195 13D6  
                                 u8715 25E9                                   u9515 0478  
                                 u8485 272C                                   u9445 03F3  
                                 u8815 23E1                                   u9375 02AD  
                                 u8745 260F                                   u8905 21DF  
                                 u9705 06F7                                   u9545 050B  
                                 u9385 02F1                                   u8835 23ED  
                                 u8915 21EA                                   u9715 0711  
                                 u9635 069F                                   u9555 0517  
                                 u7965 09AF                                   u8845 2401  
                                 u7975 09DE                                   u8775 262A  
                                 u8855 240D                                   u9655 06B8  
                                 u7985 0A34                                   u9905 127A  
                                 u9665 06D0                                   u7995 0A4B  
                                 u9940 1021                                   u9925 25AA  
                                 u8885 21C6                                   u9935 2575  
                                 u9855 11BA                                   u9965 104A  
                                 u9975 10A4                                   u9985 10BF  
                                 _Beta 3049                           __CFG_WRT$OFF 0000  
               __end_of_spi_write_read 07FF                          __CFG_FCMEN$ON 0000  
                                 _main 24CF                                   _temp 01A0  
                                 fsr0h 0005                                   fsr1h 0007  
                                 indf0 0000                                   fsr0l 0004  
                                 indf1 0001                                   fsr1l 0006  
                                 btemp 007E                           spi_read@data 0073  
                                 log@x 00E9                          __CFG_BOREN$ON 0000  
                                 start 0061                          __CFG_IESO$OFF 0000  
                      ___fldiv@new_exp 00E1                           _sprintf$2066 0139  
                       ??_LTC6804_adcv 0079                      ___bmul@multiplier 0075  
                         _totalVoltage 2475                          __CFG_MCLRE$ON 0000  
                       ??_LTC6804_rdcv 003D                         writeVoltages@k 0159  
                                ??_ISR 0070                                  ??_log 00ED  
                    ?_LTC6804_rdcv_reg 002F                          __CFG_PLLEN$ON 0000  
                     spi_write_array@i 0021                          ___fltol@sign1 0129  
      writeValuesToUart@temperatureArr 02A2             __size_of_writeValuesToUart 003D  
                      __end_of___fladd 0D70                                  ?_main 0070  
                      __end_of___fldiv 141B                        __end_of_adcRead 23CD  
                      __end_of___awdiv 237A                        __end_of___flneg 2F93  
                        __CFG_WDTE$OFF 0000                        __end_of___awmod 2242  
                   ??_LTC6804_rdcv_reg 0031                        __end_of___flmul 0B10  
                      __end_of___flsub 20AF                        __end_of___fltol 2644  
                      __end_of___lldiv 2420                                  u10005 10E6  
                                u10025 2496                                  u10035 248F  
                                u10115 2250                                  u10205 1F4E  
                                u10215 1F5C                                  u10055 2114  
                                u10145 1EC3                                  u10235 1F76  
                                u10155 1ED8                                  u10075 2197  
                                u10165 1EED                                  u10255 1FA6  
                                u10175 1F01                                  u10095 2187  
                      ___awdiv@divisor 0020                        __end_of___llmod 21FD  
                                _T2CON 001C                                  u10577 2F83  
                                u10587 238A                     totalVoltage@values 00C1  
                                i1l116 005C                        ___awdiv@counter 0024  
                                _TXREG 019A                __end_of_spi_write_array 2075  
                   writeVoltages@volts 0158                        __end_of_dpowers 28C8  
                                _frexp 213B                                  _errno 01A4  
                                _scale 0D70                        __end_of_isdigit 100E  
                                _temps 01E0                                  _setup 2FE9  
                  clearScreen@numLines 0154                        ?_spi_write_read 0076  
                      __end_of_startUp 2000                                  status 0003  
                                wtemp0 007E                        __end_of_sprintf 07C9  
          LTC6804_rdcv@current_ic_1169 0054                  __size_of_writeCurrent 0018  
                         __end_of_Beta 304B                   __size_of_clearScreen 003C  
                      __initialization 0063                            log@exponent 00EE  
                         __end_of_main 2548                            ?i1_adcSetup 0070  
                   writeTemps@numTemps 0156                         __CFG_LPBOR$OFF 0000  
                               ??_main 015D                           adcRead@total 002C  
                    ?_calculateCurrent 00E9                       ?_measureVoltages 0070  
                 __size_of__tdiv_to_l_ 00B6                     ??_calculateCurrent 007A  
     __end_ofLTC6804_rdaux@GPIO_IN_REG 304F       writeValuesToUart@temperatureHigh 02A5  
                  pec15_calc@remainder 002D                                 _ADCON0 009D  
                               _ADCON1 009E                                 _ADCON2 009F  
                               ?_frexp 0072                       ___llmod@dividend 002A  
                               ?_scale 0052                                 _ADRESH 009C  
                               _ADRESL 009B                       ___awdiv@dividend 0022  
writeValuesToUart@temperatureArrLength 02A3                                 ?_setup 0070  
                     __end_of_adcSetup 205B                           _writeCurrent 200F  
                               _ANSELA 018C                                 _ANSELB 018D  
                               _ANSELD 018F                                 i1l5341 0054  
                               i1l5317 0026                                 i1l5327 0034  
                               i1l5319 0027                                 i1l5337 004F  
                               _SPBRGH 019C                                 _SPBRGL 019B  
                               u699_25 001D                LTC6804_rdaux@BYT_IN_REG 304F  
                               _SSPADD 0212                                 _SSPBUF 0211  
                     __end_of___xxtofl 2766                           startUp@i_323 015B  
                  writeVoltages@length 0154                         __CFG_PWRTE$OFF 0000  
                         ?_uartDisable 0070                       __end_of_getTemps 25C5  
                     __end_of__powers_ 286C       __end_ofLTC6804_rdaux_reg@REG_LEN 304E  
                               ___flge 2766                                 ___bmul 2FC1  
                         ?_timer0Setup 0070                              ??___fladd 00B1  
                               ___wmul 2075                              ??___fldiv 00D7  
                            ??_adcRead 0020                              ??___awdiv 0079  
                         ?_timer2Setup 0070                              ??___flneg 007A  
                       __CFG_STVREN$ON 0000                              ??___awmod 0076  
                            ??___flmul 0040                              ??___flsub 007A  
                            ??___fltol 0124                              ??___lldiv 0020  
                            ??___llmod 002E                                 _fround 141B  
                     ___awdiv@quotient 0026                        ___awmod@divisor 0072  
                      ___awmod@counter 0077                           ?_wakeup_idle 0070  
                     getTemps@numTemps 0149                              ??_isdigit 0072  
                   __size_of__Umul8_16 0020                       __end_of_spiSetup 2FE9  
                     ?_spi_write_array 0075                       __end_of_spi_read 2FB5  
                 __end_of_LTC6804_adcv 20FF         __end_ofLTC6804_rdcv@BYT_IN_REG 3054  
                 __end_of_LTC6804_rdcv 128C                              ??_startUp 0156  
                            ??_sprintf 0133                    __size_ofi1_adcSetup 001A  
                           ___flge@ff1 0072                             ___flge@ff2 0076  
                         ___xxtofl@arg 0034                           ___xxtofl@exp 0033  
                         ___xxtofl@val 002E                       __end_oflog@coeff 2824  
              __end_of__initialization 00A3                          spi_write@data 0074  
                           ___flneg@f1 0052                  calculateTemp@adcValue 012B  
                         eval_poly@res 00CB                             ___fltol@f1 0120  
              LTC6804_rdaux@NUM_RX_BYT 3050                    ___bmul@multiplicand 0072  
      __end_ofLTC6804_rdcv@CELL_IN_REG 3053                      ltc6804@crc15Table 1800  
                           _crc15Table 1A00                         __pcstackCOMMON 0070  
                         __pidataBANK3 2F79                          __end_of_frexp 2179  
                        __end_of_scale 1000                          __end_of_setup 3000  
               __size_of_writeVoltages 0041                             __end_of_t0 3049  
                           __div_to_l_ 1CF3            measureVoltages@measurements 0139  
                        adcRead@ansLow 002A                        __div_to_l_@exp1 002A  
                      __div_to_l_@cntr 0029                                ??_frexp 0077  
                              ??_scale 0056                        __div_to_l_@quot 0025  
                         sprintf@width 014A                                ??_setup 0072  
                           __pbssBANK2 015E                             __pbssBANK3 01A0  
                           __pbssBANK4 0220         __end_ofLTC6804_rdcv@NUM_RX_BYT 3055  
                   __size_of_eval_poly 008C               LTC6804_rdaux@GPIO_IN_REG 304E  
                      __CFG_VCAPEN$OFF 0000              __end_ofltc6804@crc15Table 1A00  
                           _pec15_calc 22D9                          __div_to_l_@f1 0072  
                        __div_to_l_@f2 0076                    writeCurrent@current 0154  
                    __end_of__Umul8_16 20CF                     spi_write_array@len 0020  
                           __pmaintext 24CF                                ?___flge 0072  
                              ?___bmul 0072                 LTC6804_rdcv@cell_codes 003C  
                              ?___wmul 0072                             __pintentry 0004  
             LTC6804_rdcv@data_counter 0057                             _getCurrent 228D  
                              _CCP2CON 029A      writeValuesToUart@voltageArrLength 02A0  
                              ?_fround 0052                              ?_adcSetup 0070  
             LTC6804_rdaux_reg@REG_LEN 304D                     __size_of_uartSetup 000D  
               __size_of_calculateTemp 020F                              ?___xxtofl 002E  
               measureVoltages@ltcData 0120                     __size_of_spi_write 000B  
                     ??_spi_write_read 0020                         calculateTemp@r 0139  
                              _SSP1BUF 0211                              ?_getTemps 0149  
                              _SSPCON1 0215                                _SSPSTAT 0214  
            __size_of_LTC6804_rdcv_reg 0055                          _writeVoltages 2179  
                 spi_write_read@i_1252 0027                      __end_of__npowers_ 28A0  
                           _scale$2065 0066                              ?_spiSetup 0070  
                 __size_of_uartDisable 0003                        __size_of___flge 009A  
                      __size_of___bmul 0011                              ?_spi_read 0070  
                              ___fladd 0B10                           ??i1_adcSetup 0070  
                 spi_write_read@rx_len 0079                                ___fldiv 128C  
                              _adcRead 237A                                ___awdiv 2328  
                              ___flneg 2F89                                ___awmod 21FD  
                              ___flmul 08E4                   spi_write_read@tx_len 0076  
                              ___flsub 2090                                ___fltol 25C5  
                              ___lldiv 23CD                        __size_of___wmul 001B  
                              ___llmod 21BA                   __size_of_timer0Setup 0005  
                           ??_adcSetup 0072                      __end_of_eval_poly 26D0  
                 __size_of_timer2Setup 000B                        __size_of_fround 01D6  
                              __ptext1 1C00                                __ptext2 2179  
                              __ptext3 2242                                __ptext4 200F  
                              __ptext5 20FF                                __ptext6 2F6B  
                              __ptext7 00A7                                __ptext8 0D70  
                              __ptext9 1000                  __size_of_LTC6804_adcv 0030  
          writeValuesToUart@voltageArr 015C                           __size_of_ISR 005D  
                          ?__div_to_l_ 0072                  __size_of_LTC6804_rdcv 018B  
                              _dpowers 28A0                                _current 015E  
                         __size_of_log 00EE                                _isdigit 1000  
                           ??___xxtofl 0074                       ___awmod@dividend 0074  
                 __size_of_wakeup_idle 0009                 LTC6804_rdcv@current_ic 0052  
                           ??_getTemps 014B                                _startUp 1EA6  
                              _sprintf 00A7                                clrloop0 2FB6  
                 end_of_initialization 00A3                         ?_writeVoltages 0154  
                   __end_ofi1_adcSetup 2041        __end_ofLTC6804_rdcv_reg@REG_LEN 3052  
            __size_of_calculateCurrent 00E3                          ??_clearScreen 0156  
                        pec15_calc@len 002B                            ?_pec15_calc 0076  
                    __end_of_uartSetup 200F                          _calculateTemp 15F1  
             calculateCurrent@adcValue 00E9                        ___lldiv@divisor 0072  
                      ___lldiv@counter 0025                             _uartEnable 2F6B  
                 calculateCurrent@curr 0124                             ??_spiSetup 0072  
                            _RCSTAbits 019D                      __end_of_spi_write 2FA9  
                         _LTC6804_adcv 20CF                             ??_spi_read 0072  
                         _LTC6804_rdcv 1101                         __tdiv_to_l_@f1 0072  
                       __tdiv_to_l_@f2 0076                            ?_getCurrent 0128  
                        ??__tdiv_to_l_ 0020                             _timerSetup 2F73  
                            _PORTAbits 000C                              _PORTDbits 000F  
                  LTC6804_rdcv_reg@cmd 0036                    LTC6804_rdcv_reg@reg 003A  
                          ___fladd@grs 006D                          ___xxtofl@sign 0032  
                            _TRISAbits 008C                              _TRISBbits 008D  
                            _TRISCbits 008E                              _TRISDbits 008F  
                          ___fldiv@grs 00E3                            ___fldiv@rem 00DD  
             __size_of_measureVoltages 00F3                            ___flmul@grs 0047  
                       ?_calculateTemp 012B                              _TXSTAbits 019E  
                  __size_of__div_to_l_ 00C5                          totalVoltage@i 00C6  
                  __end_of_clearScreen 213B                         __end_of___flge 2800  
                       __end_of___bmul 2FD2                             _writeTemps 2242  
                       __end_of___wmul 2090                      totalVoltage@total 00C2  
                       __end_of_fround 15F1                    __size_of_pec15_calc 004F  
                  start_initialization 0063                             eval_poly@d 00C1  
                           eval_poly@n 00C3                             eval_poly@x 00BD  
                          __end_of_ISR 0061                    __end_of__tdiv_to_l_ 1CF3  
                 measureVoltages@F7570 0220                            __end_of_log 1EA6  
                      ??_writeVoltages 0156                       _LTC6804_rdcv_reg 2420  
                  __size_of_getCurrent 004C                             frexp@value 0072  
             __size_of_spi_write_array 001A                        ___llmod@divisor 0026  
                      ___llmod@counter 002F                    getTemps@highestTemp 014F  
                          _APFCON1bits 011D                         adcRead@ansHigh 0028  
                          ?_uartEnable 0070                          ?_totalVoltage 00BD  
                             ??___flge 0020                               ??___bmul 0073  
                             ??___wmul 0076                              __Umul8_16 20AF  
                          __pdataBANK3 01E6                     _calculateTemp$2060 013D  
                   _calculateTemp$2061 0141                               ??_fround 0056  
                 getTemps@temperatures 0151                        LTC6804_adcv@cmd 002F  
                          ?_timerSetup 0070                          sprintf@tmpval 013E  
                            ___fladd@a 00AD                              ___fladd@b 00A9  
                           fround@prec 00A8                      __size_of_adcSetup 001A  
                            ___fldiv@a 00CF                              ___fldiv@b 00D3  
                          __pbssBIGRAM 2660                              ___flmul@a 003C  
                            ___flmul@b 0038                            __pbssCOMMON 007A  
                            ___flsub@a 00BD                              ___flsub@b 00C1  
                            ___latbits 0003                          __pcstackBANK0 0020  
                        __pcstackBANK1 00A0                          __pcstackBANK2 0120  
                        __pcstackBANK5 02A0                LTC6804_rdcv@CELL_IN_REG 3052  
                    __size_of___xxtofl 0096                           _isdigit$1627 0072  
                            adcRead@ch 0027                        ??_calculateTemp 012D  
                    __size_of_getTemps 007D                        LTC6804_rdcv@reg 0051  
                          sprintf@flag 0148                            sprintf@fval 014C  
                     _calculateCurrent 0801                            sprintf@prec 0150  
                          _clearScreen 20FF                         ??_totalVoltage 006E  
                  spi_write_array@data 0075                   calculateTemp@voltage 0145  
                    ??_measureVoltages 00E9                  LTC6804_rdcv@cell_data 0042  
                totalVoltage@lenValues 00BD                               ?___fladd 00A9  
                             ?___fldiv 00CF                               ?_adcRead 0072  
                             ?___awdiv 0020                               ?___flneg 0052  
                             ?___awmod 0072                               ?___flmul 0038  
                             ?___flsub 00BD                               ?___fltol 0120  
                             ?___lldiv 0072                               ?___llmod 0026  
                            __npowers_ 286C                             ?__Umul8_16 0072  
    __end_ofLTC6804_rdcfg@BYTES_IN_REG 304C      __end_ofLTC6804_wrcfg@BYTES_IN_REG 304D  
               getCurrent@currentValue 012C                            ?_writeTemps 0154  
                    __size_of_spiSetup 0017                      __size_of_spi_read 000C  
                          __tdiv_to_l_ 1C3D                           ??__div_to_l_ 0020  
                             ?_isdigit 0070                              _eval_poly 2644  
                  __size_of_uartEnable 0003                               ?_startUp 0154  
                             ?_sprintf 012B                     __end_of_crc15Table 1C00  
                       __size_of_frexp 003E                          ?_writeCurrent 0154  
                       __size_of_scale 0290                         __size_of_setup 0017  
                LTC6804_rdcv@pec_error 004A          LTC6804_rdcv@current_cell_1170 0055  
                       ___wmul@product 0076                    __size_of_timerSetup 0006  
                             _LATBbits 010D                               _LATDbits 010F  
             LTC6804_rdcv@current_cell 0053                           ??_pec15_calc 0020  
                            clear_ram0 2FB5                               _PIE1bits 0091  
                             _PIE2bits 0092                          ??_uartDisable 0070  
              measureVoltages@pecError 0138                               _PIR1bits 0011  
                   __end_of__div_to_l_ 1DB8                               _PIR2bits 0012  
                            _uartSetup 2002                      ??_spi_write_array 0077  
                        ??_timer0Setup 0072                          ??_timer2Setup 0072  
                             _SSP1CON1 0215                           ??_getCurrent 007A  
                          _highestTemp 01A8                              _spi_write 2F9E  
                          writeTemps@k 015A                          ??_wakeup_idle 0072  
                           _ADCON0bits 009D                      ___wmul@multiplier 0072  
                           ?_eval_poly 00BD                     __end_of_pec15_calc 2328  
                         clearScreen@j 0159                         ??_writeCurrent 007A  
                  __size_of_writeTemps 004B                     __end_of_getCurrent 22D9  
                     measureVoltages@i 013A               LTC6804_rdcv@received_pec 004D  
             LTC6804_rdcv_reg@total_ic 002F                              frexp@eptr 0076  
              __size_of_spi_write_read 0036                             ?_uartSetup 0070  
                          ??__Umul8_16 0074               __end_of_LTC6804_rdcv_reg 2475  
                spi_write_read@tx_Data 0025                       __size_of___fladd 0260  
                     __size_of___fldiv 018F                       __size_of_adcRead 0053  
                     __size_of___awdiv 0052                       __size_of___flneg 000A  
                  __end_of_uartDisable 2F6B                       __size_of___awmod 0045  
                spi_write_read@rx_data 0077                       __size_of___flmul 022C  
                     __size_of___flsub 001F                       __size_of___fltol 007F  
                     __size_of___lldiv 0053                       __size_of___llmod 0043  
                             _adcSetup 2041                             ?_spi_write 0070  
      __end_ofLTC6804_rdaux@BYT_IN_REG 3050                            _fround$2063 00A4  
                          _fround$2064 00A0                LTC6804_rdcv_reg@REG_LEN 3051  
                  __end_of_timer0Setup 2F73                    __end_of_timer2Setup 2F9E  
                          _currentBuff 2660                            _currentBool 01AA  
                         _tempChannels 01E6                             sprintf@exp 0146  
                           sprintf@val 0142                               ___xxtofl 26D0  
                 __end_of_totalVoltage 24CF                       __size_of_isdigit 000E  
                 LTC6804_rdcv@data_pec 004F                   LTC6804_rdcv@cell_reg 0056  
                  __end_of_wakeup_idle 2F89                               __ptext10 141B  
                             __ptext11 21FD                               __ptext20 100E  
                             __ptext12 2328                               __ptext21 1101  
                             __ptext13 1C3D                               __ptext30 2F9E  
                             __ptext22 2075                               __ptext14 1CF3  
                             __ptext31 22D9                               __ptext23 2420  
                             __ptext15 21BA                               __ptext40 2F89  
                             __ptext32 2548                               __ptext24 07C9  
                             __ptext16 23CD                               __ptext41 08E4  
                             __ptext33 15F1                               __ptext25 2FA9  
                             __ptext17 2090                               __ptext50 2F73  
                             __ptext42 20AF                               __ptext34 1DB8  
                             __ptext26 2FC1                               __ptext18 1EA6  
                             __ptext51 2F93                               __ptext43 2766  
                             __ptext35 213B                               __ptext27 20CF  
                             __ptext19 2475                               __ptext52 2F6E  
                             __ptext44 128C                               __ptext36 2644  
                             __ptext28 2F80                               __ptext53 2FD2  
                             __ptext45 0B10                               __ptext37 25C5  
                             __ptext29 205B                               __ptext54 2041  
                             __ptext46 237A                               __ptext38 228D  
                             __ptext47 26D0                               __ptext39 0801  
                             __ptext56 2027                               __ptext48 2FE9  
                             __ptext57 2F68                               __ptext49 2002  
                             _getTemps 2548                           _SSP1CON1bits 0215  
                         _SSP1CON3bits 0217                               __powers_ 2838  
                  LTC6804_adcv@cmd_pec 0033                       __size_of_startUp 015A  
                     __size_of_sprintf 0722                          __size_of_main 0079  
                         ??_uartEnable 0072                            pec15_calc@i 002C  
                             _uartBool 01AC                               _spiSetup 2FD2  
              LTC6804_rdcv_reg@cmd_pec 0034                               _spi_read 2FA9  
                             int$flags 007E                  _calculateCurrent$2062 0120  
                         _SSP1STATbits 0214                           ??_timerSetup 0072  
                 LTC6804_rdcv@total_ic 003B                               _voltages 01B0  
             __end_of_calculateCurrent 08E4                               log@coeff 2800  
      __end_ofLTC6804_rdaux@NUM_RX_BYT 3051                      _writeValuesToUart 1C00  
                           _INTCONbits 000B                            ??_eval_poly 00C5  
                       __pstringtext10 304D                         __pstringtext11 304E  
                       __pstringtext20 3013                         __pstringtext12 304F  
                       __pstringtext21 3022                         __pstringtext13 3050  
                       __pstringtext22 3031                         __pstringtext14 3051  
                       __pstringtext23 303C                         __pstringtext15 3052  
                       __pstringtext24 0000                         __pstringtext16 3053  
                       __pstringtext17 3054                         __pstringtext18 2800  
                       __pstringtext19 3000                     ?_writeValuesToUart 02A0  
                             isdigit@c 0073                LTC6804_rdcv@parsed_cell 004B  
                     spi_read@readData 0074                               scale@scl 006A  
                   __end_of_uartEnable 2F6E                        _measureVoltages 100E  
                       pec15_calc@addr 0029                         pec15_calc@data 0076  
                __end_of_writeVoltages 21BA                               intlevel1 0000  
                            sprintf@ap 013D                       __tdiv_to_l_@exp1 0029  
                     __tdiv_to_l_@cntr 0028                              sprintf@sp 0152  
                     __tdiv_to_l_@quot 0024                    ??_writeValuesToUart 007A  
                     ___lldiv@dividend 0076                 LTC6804_rdcv@BYT_IN_REG 3053  
                    __CFG_CLKOUTEN$OFF 0000                     __end_of_timerSetup 2F79  
                         ?_clearScreen 0154                            _uartDisable 2F68  
                          ??_uartSetup 0072                            _timer0Setup 2F6E  
                 __end_of_writeCurrent 2027                            _timer2Setup 2F93  
                writeTemps@highestTemp 0154                           ??_writeTemps 0158  
                          ??_spi_write 0072                               startUp@i 0159  
                         ?__tdiv_to_l_ 0072                          __pstringtext1 1800  
                        __pstringtext2 1A00                          __pstringtext3 2838  
                        __pstringtext4 286C                          __pstringtext5 28A0  
                        __pstringtext6 3045                          __pstringtext7 3049  
                        __pstringtext8 304B                          __pstringtext9 304C  
            __end_of_writeValuesToUart 1C3D                            _wakeup_idle 2F80  
               __Umul8_16@multiplicand 0072                             _OPTION_REG 0095  
                             sprintf@c 0153                               sprintf@f 012B  
                     ___lldiv@quotient 0021                            _SSPCON2bits 0216  
            LTC6804_rdcfg@BYTES_IN_REG 304B              LTC6804_wrcfg@BYTES_IN_REG 304C  
                        ___fladd@signs 006A                            getTemps@inc 0152  
                      _spi_write_array 205B                   LTC6804_rdcv_reg@data 0030  
                         ___fladd@aexp 006B                           ___fladd@bexp 006C  
                __end_of_calculateTemp 1800                     __end_of_writeTemps 228D  
                 __Umul8_16@multiplier 0024                         _spi_write_read 07C9  
               LTC6804_rdcv@NUM_RX_BYT 3054                      __Umul8_16@product 0020  
